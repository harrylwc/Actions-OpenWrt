
#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
####@
name: Compile ZTEQ7&COOWIFI lastest OpenWrt xwrt Images  

on:
  #push:
   # branches: 
    #  - master
    
  # schedule:
  #   - cron: 0 20 * * *
 # release:
  #  types: [published]
  #watch:
   # types: started

  workflow_dispatch:    

env:
  #####change model here ####@# 
  REPO_URL: https://github.com/x-wrt/x-wrt
  #https://github.com/openwrt/openwrt.git
  REPO_URL1: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: 'master'
  ROUTER_MODEL: ramips
  TVH: false
  BUILD_KERNEL_MODULES: false
  DRIVERS_DIR: bin/targets/ramips/drivers
  KERNEL_CONFIG: 'myconfig/kernel_config.ramips'
  #KERNEL_CONFIG_DIR: target/linux/ipq40xx
  KERNEL_CONFIG_DIR: target/linux/ramips/mt7620
  #KERNEL_CONFIG_DIR: target/linux/ramips/mt7621
  #KERNEL_CONFIG_DIR: target/linux/mvebu
  MAKEMENU_CONFIG: false
  KERNEL_MENUCONFIG: false
  CPU_MULTI_CORE: false
  
  KERNEL_VERSION: '5.10'
  UPDATE_MULTI_CORE_FILE1: myconfig/sys.lua
  UPDATE_MULTI_CORE_FILE2: myconfig/processes.js
  KERNEL_MODULE: myconfig/kernel_modules.txt
  FEEDS_CONF: feeds.conf.default
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  SSH_ACTIONS: true
  UPLOAD_FIRMWARE: true
  UPLOAD_WETRANSFER: false
  TZ: Asia/Shanghai
  
jobs:

  build_openwrt:
    ###@####
    name: Build ZTEQ7 & CooWIFI lastest OpenWrt xwrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      
      - name: Update feeds & Load custom configuration
        run: |
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
          cd /workdir
          df -hT $PWD
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH x-wrt
          ln -sf /workdir/x-wrt $GITHUB_WORKSPACE/x-wrtt
          git clone --depth 1 $REPO_URL1 lede
          ln -sf /workdir/lede $GITHUB_WORKSPACE/lede
          git clone https://github.com/jerrykuku/luci-theme-argon x-wrt/package/luci-theme-argon
          ln -s /workdir/lede/package/lean x-wrt/package
          rm -r x-wrt/package/lean/n2n_v2 
          /workdir/lede/scripts/feeds update -a
          /workdir/openwrt/scripts/feeds update -a
          /workdir/openwrt/scripts/feeds install -f -a
          cd $GITHUB_WORKSPACE
          chmod +x $GITHUB_WORKSPACE/$DIY_P2_SH
          $GITHUB_WORKSPACE/$DIY_P2_SH
          #git checkout 21.10
          #sed -i 's/KERNEL_PATCHVER:=5.10/KERNEL_PATCHVER:=5.15/g' target/linux/ramips/Makefile
          
      - name: Space cleanup
        env:
          SSH_ACTIONS: true
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
     # - name: Run migrations
      #  run: sh ./github/scripts/migrate.sh
       # env:
        # ENVIRONMENT_VARIABLE_NAME: ${{ secrets.ENVIRONMENT_VARIABLE_NAME }}
          # echo 'HELLO_WORLD='${{ secrets.HELLO_WORLD }} >> .env // Code line 1
    
    #
      #- name: Generate configuration file
       #  run: |
         
          #rm -f ./.config*
          #touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          #cat >> .config <<EOF
          #CONFIG_TARGET_IMAGES_GZIP=y
          #CONFIG_KERNEL_BUILD_USER="OpenWrt-CI"
          #CONFIG_KERNEL_BUILD_DOMAIN="Azure"
          #EOF

          #
          # ===============================================================
          # 

       #   sed -i 's/^[ \t]*//g' ./.config
        #  make defconfig

      - name: Make download
        run: |
          cd x-wrt
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
      - name: SSH connection for make menuconfig
        if: env.MAKEMENU_CONFIG == 'true'
        uses: P3TERX/ssh2actions@main
        env:
         TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
         TELEGRAM_CHAT_ID: 1373335316
      
      - name: Compile firmware
        run: |
          cd x-wrt
          make -j$(nproc) || make -j1 V=s
          [ $? != 0 ] && make V=s || echo "build success"
          #     echo "======================="
          #echo "Space usage:"
          #echo "======================="
          #df -h
          #echo "======================="
          #du -h ./ --max-depth=1
          #du -h ~/work/x-wrt --max-depth=1 || true
      
      -  name: SSH connection for failure Debug
         if: ${{ failure() }}
         #uses: P3TERX/ssh2actions@main
         #uses: lhotari/action-upterm@v1
         uses: P3TERX/ssh2actions@main
         env:
          TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
          TELEGRAM_CHAT_ID: 1373335316
 
      - name: SSH connection for KERNEL MENU CONFIG
        if: env.KERNEL_MENUCONFIG == 'true'
        uses: P3TERX/ssh2actions@main
        env:
         TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
         TELEGRAM_CHAT_ID: 1373335316
          #uses: lhotari/action-upterm@v1

 
      - name: Compile again after .config updated or add kernel modules
        if: env.BUILD_KERNEL_MODULES == 'true'
        run: |
           cp myconfig/config.ramips.2 x-wrt/.config
           #cat myconfig/config.tvh.ffmpeg >> .config
           #[ -e $KERNEL_MODULE ] && cat $KERNEL_MODULE >> $KERNEL_CONFIG_DIR/config-$KERNEL_VERSION
           [ -e $KERNEL_CONFIG ] && cp -f $KERNEL_CONFIG x-wrt/$KERNEL_CONFIG_DIR/config-$KERNEL_VERSION
           #[ -e $KERNEL_MODULE ] && cat $KERNEL_MODULE >> $KERNEL_CONFIG_DIR/config-$KERNEL_VERSION
           cd x-wrt
           make -j$(nproc) || make -j1
           [ $? != 0 ] && make V=s || echo "build success"
          
      - name: SSH connection for failure Debug
        if: ${{ failure() }}
        uses: P3TERX/ssh2actions@main
        env:
         TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
         TELEGRAM_CHAT_ID: 1373335316
      
      - name: Prepare artifact
        run: |
          # mkdir -p ./artifact/firmware
          #mkdir -p ./artifact/package
          #mkdir -p ./artifact/buildinfo
          mkdir -p x-wrt/$DRIVERS_DIR
          cp -f `find x-wrt/build_dir/target*/linux*/linux-*/ -name *.ko` x-wrt/$DRIVERS_DIR
          cp -f `find x-wrt/build_dir/target*/linux*/rtl8821cu*/rtl8821cu.ko` x-wrt/$DRIVERS_DIR        
          #cp -f .config bin/
          #cp -f myconfig/config.$ROUTER_MODEL.? bin/
          #rm -rf $(find ./bin/targets/ -type d -name "packages")
          #cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          #cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          #cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
          
          grep '^CONFIG_TARGET.*DEVICE.*=y' x-wrt/.config|head -1 | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
          [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
          echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
 
      - name: Upload bin directory
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
          path: /workdir/x-wrt/bin
      - name: SSH connection for failure Debug
        if: ${{ failure() }}
        uses: P3TERX/ssh2actions@main
        env:
         TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
         TELEGRAM_CHAT_ID: 1373335316
        
            #- name: Deliver buildinfo
            #uses: actions/upload-artifact@v2
            #with:
            #name: OpenWrt_buildinfo
            #path: ./artifact/buildinfo/

            
            #- name: Deliver package
            #uses: actions/upload-artifact@v2
            #with:
            #name: OpenWrt_package
            #path: ./artifact/package/

            #- name: Deliver firmware
            #uses: actions/upload-artifact@v2
        #with:
        #name: OpenWrt_firmware
        #path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
