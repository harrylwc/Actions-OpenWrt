
#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TER
# Blog: https://p3terx.com
#=================================================
name: build mvebu_ipq40xx_ramips toolchain

on:

  workflow_dispatch:

    inputs:

      ssh:

        description: 'SSH connection to Actions'

        required: false

        default: 'false'
  #schedule:
   #- cron: 00 15 * * *

env:
  #REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_URL: https://github.com/x-wrt/x-wrt
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config.wrt1200ac.1
  DIY_P1_SH: diy-part1.sh
  DIY_P2_SH: diy-part2.sh
  DRIVERS_DIR1: x-wrt/bin/targets/mvebu/drivers
  DRIVERS_DIR2: x-wrt/bin/targets/ipq40xx/drivers
  DRIVERS_DIR3: x-wrt/bin/targets/ramips/drivers
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: false
  UPLOAD_COWTRANSFER: false
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: false
  DEVICE_NAME: mvebu_ipq40xx_ramips_busybox
  TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
  TELEGRAM_CHAT_ID: 1373335316
  TZ: Asia/Shanghai
  

jobs:

  build:

    runs-on: ubuntu-22.04

    steps:

    - name: 检查项目分支

      uses: actions/checkout@main
    - name: Check CPU model
      run: |
          cat /proc/cpuinfo|grep model
          cat /proc/cpuinfo|grep proce
          free
    - name: 安装编译环境

      env:
        
        DEBIAN_FRONTEND: noninteractive

      run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install opencc ccache build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libfuse-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          #sudo -E apt-get update
          #sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libfuse-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5 --fix-missing
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y autoremove --purge
          #sudo pip install ply 
          #sudo -E python3 -m pip install --upgrade pip 
          #sudo -E pip install --no-cache-dir --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org pip setuptools
          sudo -E apt-get clean
          sudo rm -f /swapfile
          sudo rm -f /usr/local/share/chromium/chrome-linux/chrome
          sudo rm -f /opt/microsoft/msedge/msedge
          sudo rm -f /home/runner/work/Actions-OpenWrt/Actions-OpenWrt/lede/.git/objects/pack/pack-*.pack
          sudo timedatectl set-timezone "$TZ"
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir
        
        

    - name: 查看磁盘

      run: df -hT
      

    - name: 清理空间

      run: |
        sudo swapoff -a
        sudo rm -f /swapfile
        sudo apt clean
        docker rmi $(docker image ls -aq)
        

    

    

        

    - name: 加载自定义设置

      run: |

        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF x-wrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        $GITHUB_WORKSPACE/$DIY_P1_SH
        cd x-wrt
        useVersionInfo=$(git show -s --date=short --format="%0AAuthor: %an%0Adate: %cd%0Acommit: %s%0Acommit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: 更改设置

      run: |
        cp myconfig/config.* x-wrt/
        [ -e files ] && mv files x-wrt/files
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE x-wrt/.config
        chmod +x $DIY_P2_SH
        $GITHUB_WORKSPACE/$DIY_P2_SH
         
    - name: SSH链接管理
      uses: P3TERX/ssh2actions@main

      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
      env:
          TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
          TELEGRAM_CHAT_ID: '1373335316'   
    - name: Generate cache mixkey
      id: gen_cache_mixkey
      working-directory: ${{ env.WORKING_DIR }}
      run: |
          target_device_arch_1="mvebu_ipq40xx_ramips"
          #target_device_arch_2="ramips"
          gcc_hash=$(gcc --version | sha256sum | awk '{print substr($1,1,8)}')
          #gcc_hash='37dab1b7'       
          ldd_hash=$(ldd --version | sha256sum | awk '{print substr($1,1,8)}')
          mixkey1="${target_device_arch_1}-${gcc_hash}-${ldd_hash}"
          #mixkey2="${target_device_arch_2}-${gcc_hash}-${ldd_hash}"
          echo "mixkey1=$mixkey1" >> $GITHUB_OUTPUT
     
    - name: Cache1
      uses: HiGarfield/cachewrtbuild@main 				#klever1988/cachewrtbuild@main 
      with:
          ccache: 'true'
          mixkey: ${{ steps.gen_cache_mixkey.outputs.mixkey1 }}
          #prefix: ${{ env.WORKING_DIR }}
          prefix: ${{ github.workspace }}/x-wrt
          #skip_saving: 'true'
    - name: 下载安装包

      id: package

      run: |

        cd x-wrt

        make defconfig

        make download -j8

        find dl -size -1024c -exec ls -l {} \;

        find dl -size -1024c -exec rm -f {} \;

    - name: 开始编译固件

      id: compile

      run: |
        cd x-wrt
        [ -d "build_dir" ] && sudo mv build_dir /mnt/ || ( mkdir build_dir;sudo mv build_dir /mnt/ )
        ln -s /mnt/build_dir .
        sudo mv dl /mnt/
        ln -s /mnt/dl .
        [ -d "bin" ] && sudo mv bin /mnt/ || ( mkdir bin;sudo mv bin /mnt/ )
        ln -s /mnt/bin .    
        cd ../
        mkdir -p $DRIVERS_DIR1
        mkdir -p $DRIVERS_DIR2
        mkdir -p $DRIVERS_DIR3
        cd x-wrt
   
        
        cp config.newifi-d2.0 .config
        make tools/compile -j$(nproc) 
        make toolchain/compile -j$(nproc) 
        make target/compile -j$(nproc) 
        make target/linux/compile -j$(nproc)
        [ $? != 0 ] || echo "toolchain build completed for newifi-d2 success"
        df -kh 

        cp config.wrt1200ac.0 .config
        make tools/compile -j$(nproc) 
        make toolchain/compile -j$(nproc) 
        make target/compile -j$(nproc) 
        make target/linux/compile -j$(nproc)
        [ $? != 0 ] || echo "toolchain build completed for wrt1200ac success"
        df -kh 
       
        cp config.r619ac.1 .config
        make tools/compile -j$(nproc) 
        make toolchain/compile -j$(nproc) 
        make target/compile -j$(nproc) 
        make target/linux/compile -j$(nproc)
        [ $? != 0 ] || echo "toolchain build completed for r619ac success"
        df -kh 
 
   
        

    - name: SSH connection for failure Debug
      if: ${{ failure() }}
      #uses: lhotari/action-upterm@v1
      uses: P3TERX/ssh2actions@main
      env:
          TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
          TELEGRAM_CHAT_ID: '1373335316'

    - name: 查看磁盘使用情况

      if: (!cancelled())

      run: df -hT

    

    - name: Send repository_dispatch
      env:
        PAT: ${{ secrets.GITHUB_TOKEN }} 
      run: |
        curl \
        -X POST \
        -H "Authorization: token $PAT" \
        -H "Accept: application/vnd.github.v3+json" \
        https://api.github.com/repos/harrylwc/Actions-OpenWrt/dispatches \
        -d '{"event_type":"mvebu_ipq40xx_ramips_completed"}' 
     

    
   # - name: TG推送
    #  env:
       #  TELEGRAM_BOT_TOKEN: '5352319218:AAGkspTTlIjIRyfYlI7Egz4NciZ78bT3NF4'
        # TELEGRAM_CHAT_ID: 1373335316
    #  run: curl "https://api.telegram.org/bot${{ TELEGRAM_BOT_TOKEN }}/sendMessage" -d "chat_id=${{ 1373335316 }}&text=🅱️恭喜主人X86-openwrt6.1-1806版固件编译完成！🎉%0A⏰编译时间：${{ env.DATE }}%0A📥下载地址：https://github.com/firker/openwrt-Exclusive/releases/tag/${{ env.TAG_TIME }}%0A🌐WT网盘：${{ steps.wetransfer.outputs.url }}"
