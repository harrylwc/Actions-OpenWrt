diff --git a/libsodium/.gitignore b/libsodium/.gitignore
deleted file mode 100644
index b8d17d2..0000000
--- a/libsodium/.gitignore
+++ /dev/null
@@ -1,113 +0,0 @@
-*.cmake
-*.dSYM
-*.exp
-*.gcda
-*.gcno
-*.la
-*.lo
-*.log
-*.o
-*.plist
-*.scan
-*.sdf
-*.status
-*.tar.*
-*~
-.DS_Store
-.deps
-.dirstamp
-.done
-.libs
-Build
-INSTALL
-Makefile
-aclocal.m4
-autom4te.cache
-build
-compile
-confdefs.h
-coverage.info
-android-toolchain
-libtool
-libsodium.pc
-libsodium-*
-m4/argz.m4
-m4/libtool.m4
-m4/ltoptions.m4
-m4/ltsugar.m4
-m4/ltversion.m4
-m4/lt~obsolete.m4
-man/*.html
-man/Makefile.in
-src/curvecp/curvecpclient
-src/curvecp/curvecpmakekey
-src/curvecp/curvecpmessage
-src/curvecp/curvecpprintkey
-src/curvecp/curvecpserver
-src/libsodium/*.def
-src/libsodium/include/sodium/version.h
-stamp-*
-test/default/*.res
-test/default/*.trs
-test/default/aead_chacha20poly1305
-test/default/auth
-test/default/auth2
-test/default/auth3
-test/default/auth5
-test/default/auth6
-test/default/auth7
-test/default/box
-test/default/box2
-test/default/box7
-test/default/box8
-test/default/box_easy
-test/default/box_easy2
-test/default/box_seed
-test/default/chacha20
-test/default/core1
-test/default/core2
-test/default/core3
-test/default/core4
-test/default/core5
-test/default/core6
-test/default/ed25519_convert
-test/default/generichash
-test/default/generichash2
-test/default/generichash3
-test/default/hash
-test/default/hash3
-test/default/onetimeauth
-test/default/onetimeauth2
-test/default/onetimeauth7
-test/default/pwhash
-test/default/pwhash_scrypt_ll
-test/default/randombytes
-test/default/scalarmult
-test/default/scalarmult2
-test/default/scalarmult5
-test/default/scalarmult6
-test/default/scalarmult7
-test/default/secretbox
-test/default/secretbox2
-test/default/secretbox7
-test/default/secretbox8
-test/default/secretbox_easy
-test/default/secretbox_easy2
-test/default/shorthash
-test/default/sign
-test/default/sodium_core
-test/default/sodium_utils
-test/default/sodium_utils2
-test/default/sodium_utils3
-test/default/sodium_version
-test/default/stream
-test/default/stream2
-test/default/stream3
-test/default/stream4
-test/default/verify1
-test-driver
-testing
-android-toolchain-*
-libsodium-android-*
-/bin/
-/obj/
diff --git a/libsodium/.travis.yml b/libsodium/.travis.yml
deleted file mode 100644
index 465c171..0000000
--- a/libsodium/.travis.yml
+++ /dev/null
@@ -1,34 +0,0 @@
-language: c
-
-os:
- - linux
- - osx
-
-compiler:
- - clang
- - gcc
- - g++
-
-before_script:
- - ./autogen.sh
-
-script:
- - ./configure --disable-dependency-tracking
- - make distcheck
- - make distclean
- - ./configure --disable-dependency-tracking --enable-minimal
- - make distcheck
-
-env:
-  global:
-   - secure: "P4qv8aX+nogLlSy0lTMDIR6I5OLXq+qMijB4s+oCLME5BL2xPAn3v0QG5IoHdnU0ncRc1tEYZxN3F48Rp+Q7+wEVqSBLFS3oXzfNHJGEYoiaAcPNWO0R1kF8rcy8AuoAEomNeYS+5vhzQtaXklNtx/250p6MgGuMsdpMsRUKS/U="
-
-addons:
-  coverity_scan:
-    project:
-      name: "jedisct1/libsodium"
-      description: "libsodium"
-      notification_email: coverityscan@pureftpd.org
-      build_command_prepend: "./autogen.sh ; ./configure"
-      build_command: "make -j4"
-      branch_pattern: coverity_scan
diff --git a/libsodium/AUTHORS b/libsodium/AUTHORS
index 6f2b7ca..f4a4b9d 100644
--- a/libsodium/AUTHORS
+++ b/libsodium/AUTHORS
@@ -2,6 +2,10 @@
 Designers
 =========
 
+argon2                                 Alex Biryukov
+                                       Daniel Dinu
+                                       Dmitry Khovratovich
+
 blake2                                 Jean-Philippe Aumasson
                                        Christian Winnerlein
                                        Samuel Neves
@@ -9,9 +13,8 @@ blake2                                 Jean-Philippe Aumasson
 
 chacha20                               Daniel J. Bernstein
 
-salsa20                                Daniel J. Bernstein
-
 chacha20poly1305                       Adam Langley
+                                       Yoav Nir
 
 curve25519                             Daniel J. Bernstein
 
@@ -25,11 +28,20 @@ ed25519                                Daniel J. Bernstein
 
 poly1305                               Daniel J. Bernstein
 
-siphash                                Jean-Philippe Aumasson
-                                       Daniel J. Bernstein
+ristretto                              Mike Hamburg
+                                       Henry de Valence
+                                       Jack Grigg
+                                       George Tankersley
+                                       Filippo Valsorda
+                                       Isis Lovecruft
+
+salsa20                                Daniel J. Bernstein
 
 scrypt                                 Colin Percival
 
+siphash                                Jean-Philippe Aumasson
+                                       Daniel J. Bernstein
+
 Implementors
 ============
 
@@ -38,57 +50,96 @@ crypto_aead/aes256gcm/aesni            Romain Dolbeau
 
 crypto_aead/chacha20poly1305           Frank Denis
 
+crypto_aead/xchacha20poly1305          Frank Denis
+                                       Jason A. Donenfeld
+
+crypto_auth/hmacsha256                 Colin Percival
+crypto_auth/hmacsha512
+crypto_auth/hmacsha512256
+
 crypto_box/curve25519xsalsa20poly1305  Daniel J. Bernstein
 
+crypto_box/curve25519xchacha20poly1305 Frank Denis
+
+crypto_core/ed25519                    Daniel J. Bernstein
+                                       Adam Langley
+                                       Frank Denis
+
+crypto_core/hchacha20                  Frank Denis
+
 crypto_core/hsalsa20                   Daniel J. Bernstein
-crypto_core/salsa20
-crypto_core/salsa2012
-crypto_core/salsa208
+crypto_core/salsa
+
+crypto_generichash/blake2b             Jean-Philippe Aumasson
+                                       Christian Winnerlein
+                                       Samuel Neves
+                                       Zooko Wilcox-O'Hearn
 
 crypto_hash/sha256                     Colin Percival
 crypto_hash/sha512
 crypto_hash/sha512256
 
-crypto_auth/hmacsha256                 Colin Percival
-crypto_auth/hmacsha512
-crypto_auth/hmacsha512256
+crypto_kdf                             Frank Denis
 
-crypto_scalarmult/curve25519/ref10     Daniel J. Bernstein
+crypto_kx                              Frank Denis
+
+crypto_onetimeauth/poly1305/donna      Andrew "floodyberry" Moon
+crypto_onetimeauth/poly1305/sse2
+
+crypto_pwhash/argon2                   Samuel Neves
+                                       Dmitry Khovratovich
+                                       Jean-Philippe Aumasson
+                                       Daniel Dinu
+                                       Thomas Pornin
+
+crypto_pwhash/scryptsalsa208sha256     Colin Percival
+                                       Alexander Peslyak
 
-crypto_scalarmult/curve25519/donna_c64 Adam Langley
+crypto_scalarmult/curve25519/ref10     Daniel J. Bernstein
 
 crypto_scalarmult/curve25519/sandy2x   Tung Chou
 
+crypto_scalarmult/ed25519              Frank Denis
+
+crypto_scalarmult/ristretto255         Frank Denis
+
 crypto_secretbox/xsalsa20poly1305      Daniel J. Bernstein
 
+crypto_secretbox/xchacha20poly1305     Frank Denis
+
+crypto_secretstream/xchacha20poly1305  Frank Denis
+
+crypto_shorthash/siphash24             Jean-Philippe Aumasson
+                                       Daniel J. Bernstein
+
 crypto_sign/ed25519                    Peter Schwabe
                                        Daniel J. Bernstein
                                        Niels Duif
                                        Tanja Lange
                                        Bo-Yin Yang
 
-crypto_stream/aes128ctr                Peter Schwabe
-
 crypto_stream/chacha20/ref             Daniel J. Bernstein
 
-crypto_stream/chacha20/vec             Ted Krovetz
+crypto_stream/chacha20/dolbeau         Romain Dolbeau
+                                       Daniel J. Bernstein
 
-crypto_stream/salsa20                  Daniel J. Bernstein
-crypto_stream/salsa2012
-crypto_stream/salsa208
-crypto_stream/xsalsa20
+crypto_stream/salsa20/ref              Daniel J. Bernstein
+crypto_stream/salsa20/xmm6
 
-crypto_shorthash/siphash24             Jean-Philippe Aumasson
+crypto_stream/salsa20/xmm6int          Romain Dolbeau
                                        Daniel J. Bernstein
 
-crypto_generichash/blake2b             Jean-Philippe Aumasson
-                                       Christian Winnerlein
-                                       Samuel Neves
-                                       Zooko Wilcox-O'Hearn
+crypto_stream/salsa2012/ref            Daniel J. Bernstein
+crypto_stream/salsa2008/ref
 
-crypto_onetimeauth/poly1305/donna      Andrew "floodyberry" Moon
+crypto_stream/xchacha20                Frank Denis
 
-crypto_onetimeauth/poly1305/sse2       Andrew "floodyberry" Moon
+crypto_verify                          Frank Denis
 
-crypto_pwhash/scryptsalsa208sha256     Colin Percival
-                                       Alexander Peslyak
+sodium/codecs.c                        Frank Denis
+                                       Thomas Pornin
+                                       Christian Winnerlein
+
+sodium/core.c                          Frank Denis
+sodium/runtime.h
+sodium/utils.c
diff --git a/libsodium/CMakeLists.txt b/libsodium/CMakeLists.txt
deleted file mode 100644
index 1f33fa0..0000000
--- a/libsodium/CMakeLists.txt
+++ /dev/null
@@ -1,846 +0,0 @@
-cmake_minimum_required(VERSION 2.8.4)
-project(libsodium_Cmake C CXX ASM)
-
-#TODO?: Add mmx, SSE2, SSE3, SSSE3 checks.
-#TODO?: More of the emscripten stuff.
-
-INCLUDE(CheckCCompilerFlag)
-
-
-#----------------------------------------------------------
-######################### OPTIONS #########################
-#----------------------------------------------------------
-# Default values
-set (LIBSODIUM_BUILD_SHARED_LIBRARIES OFF)
-set (ENABLE_BLOCKING_RANDOM ON)
-set (ENABLE_MINIMAL_BUILD OFF)
-set (ENABLE_TESTS OFF)
-set (DISABLE_ASM ON)
-set (DISABLE_PIE OFF)
-set (DISABLE_SSP ON)
-
-#OPTION(LIBSODIUM_BUILD_SHARED_LIBRARIES "Build the library dynamically (ON/TRUE) or statically (OFF/FALSE).")
-#OPTION(ENABLE_BLOCKING_RANDOM           "Enable this switch only if /dev/urandom is totally broken on the target platform.")
-#OPTION(ENABLE_MINIMAL_BUILD             "Only compile the minimum set of functions required for the high-level API.")
-#OPTION(ENABLE_TESTS                     "Enable testing.")
-#OPTION(DISABLE_ASM                      "Disable AMD64 assembly implementations.")
-#OPTION(DISABLE_PIE                      "Do not produce position independent executables.")
-#OPTION(DISABLE_SSP                      "Do not compile with -fstack-protector.")
-
-
-#----------------------------------------------------------
-######################### VERSION #########################
-#----------------------------------------------------------
-
-SET(VERSION 1.0.3)
-SET(SODIUM_LIBRARY_VERSION_MAJOR 7)
-SET(SODIUM_LIBRARY_VERSION_MINOR 5)
-SET(DLL_VERSION 6)
-
-SET(SODIUM_LIBRARY_VERSION "15:0:2")
-#                            | | |
-#                     +------+ | +---+
-#                     |        |     |
-#                  current:revision:age
-#                     |        |     |
-#                     |        |     +- increment if interfaces have been added
-#                     |        |        set to zero if interfaces have been removed
-#                     |        |        or changed
-#                     |        +- increment if source code has changed
-#                     |           set to zero if current is incremented
-#                     +- increment if interfaces have been added, removed or changed
-
-CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/src/libsodium/include/sodium/version.h.in ${CMAKE_CURRENT_BINARY_DIR}/src/libsodium/include/sodium/version.h)
-
-
-#----------------------------------------------------------
-###################### SYSTEM CHECKS ######################
-#----------------------------------------------------------
-
-MESSAGE("---------------- PERFORMING SYSTEM CHECKS. ----------------")
-
-# MSVC does not provide inline in C (only CXX)
-IF(MSVC)
-    ADD_DEFINITIONS("-Dinline=__inline")
-ENDIF(MSVC)
-
-#Endianess check
-INCLUDE(TestBigEndian)
-TEST_BIG_ENDIAN(BIG_ENDIAN)
-
-IF(${BIG_ENDIAN})
-    SET(IS_BIG_ENDIAN ON)
-    ADD_DEFINIIONS("-DNATIVE_BIG_ENDIAN=1")
-    MESSAGE("System is in Big Endian.")
-ELSE(${BIG_ENDIAN})
-    SET(IS_BIG_ENDIAN OFF)
-    ADD_DEFINITIONS("-DNATIVE_LITTLE_ENDIAN=1")
-    MESSAGE("System is in Little Endian.")
-ENDIF(${BIG_ENDIAN})
-
-
-IF(EMSCRIPTEN)
-    SET(DISABLE_ASM ON)
-    MESSAGE("Compiling to javascript, disabling asm implementations.")
-ENDIF()
-
-
-IF(MSYS OR MINGW OR CYGWIN)
-    SET(DISABLE_PIE ON)
-ENDIF()
-
-
-#TI mode check
-IF(${IS_BIGENDIAN})
-    TRY_COMPILE(HAVE_TI_MODE_COMPILE ${CMAKE_CURRENT_BINARY_DIR}/build ${CMAKE_CURRENT_SOURCE_DIR}/test/HAVE_TI_MODE.c COMPILE_DEFINITIONS -DNATIVE_BIG_ENDIAN=1)
-ELSE(${IS_BIGENDIAN})
-    TRY_COMPILE(HAVE_TI_MODE_COMPILE ${CMAKE_CURRENT_BINARY_DIR}/build ${CMAKE_CURRENT_SOURCE_DIR}/test/HAVE_TI_MODE.c COMPILE_DEFINITIONS -DNATIVE_LITTLE_ENDIAN=1)
-ENDIF(${IS_BIGENDIAN})
-
-IF(HAVE_TI_MODE_COMPILE)
-
-    SET(libsodium_HEADERS ${libsodium_HEADERS}
-#        src/libsodium/crypto_scalarmult/curve25519/donna_c64/api.h
-    )
-
-    SET(libsodium_SOURCE ${libsodium_SOURCE}
-        src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c
-    )
-
-    ADD_DEFINITIONS(-DHAVE_TI_MODE)
-
-    MESSAGE("Gcc TI Mode is available.")
-
-ELSE(HAVE_TI_MODE_COMPILE)
-
-    SET(libsodium_HEADERS ${libsodium_HEADERS}
-#        src/libsodium/crypto_scalarmult/curve25519/ref10/api.h
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe.h
-        src/libsodium/crypto_scalarmult/curve25519/ref10/montgomery.h
-        src/libsodium/crypto_scalarmult/curve25519/ref10/pow225521.h
-
-    )
-
-    SET(libsodium_SOURCE ${libsodium_SOURCE}
-        src/libsodium/crypto_scalarmult/curve25519/ref10/curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
-        src/libsodium/crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
-    )
-
-    MESSAGE("Gcc TI Mode is not available.")
-
-ENDIF(HAVE_TI_MODE_COMPILE)
-
-
-#Check if weak symbols are supported.
-TRY_COMPILE(HAVE_WEAK_SYMBOLS_COMPILE ${CMAKE_CURRENT_BINARY_DIR}/build ${CMAKE_CURRENT_SOURCE_DIR}/test/HAVE_WEAK_SYMBOLS.c)
-IF(HAVE_WEAK_SYMBOLS_COMPILE)
-    ADD_DEFINITIONS("-DHAVE_WEAK_SYMBOLS")
-    MESSAGE("Weak Symbols are supported.")
-ELSE(HAVE_WEAK_SYMBOLS_COMPILE)
-    MESSAGE("Weak Symbols are not supported.")
-    SET(TEST ON)
-ENDIF(HAVE_WEAK_SYMBOLS_COMPILE)
-
-
-#Is __STDC_LIMIT_MACROS needed check.
-TRY_COMPILE(IS_STDC_LIMIT_MACROS_NEEDED_COMPILE ${CMAKE_CURRENT_BINARY_DIR}/build ${CMAKE_CURRENT_SOURCE_DIR}/test/IS_STDC_LIMIT_MACROS_NEEDED.c)
-IF(IS_STDC_LIMIT_MACROS_NEEDED_COMPILE)
-    #If this works then we dont need to define __STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS.
-    MESSAGE("__STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS not needed.")
-ELSE(IS_STDC_LIMIT_MACROS_NEEDED_COMPILE)
-    ADD_DEFINITIONS("-D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS")
-    MESSAGE("__STDC_LIMIT_MACROS and __STDC_CONSTANT_MACROS is needed and was added to the definitions.")
-ENDIF(IS_STDC_LIMIT_MACROS_NEEDED_COMPILE)
-
-
-#Is there a functionnal ASM compiler
-SET(CMAKE_ASM_SOURCE_FILE_EXTENSIONS "s;S")
-ENABLE_LANGUAGE(ASM)
-
-IF(CMAKE_ASM_COMPILER_WORKS)
-    SET(ASSEMBLER_AVAILABLE ON)
-    MESSAGE("An ASM compiler has been found and is functionnal.")
-ELSE(CMAKE_ASM_COMPILER_WORKS)
-    SET(ASSEMBLER_AVAILABLE OFF)
-    MESSAGE(FATAL "An ASM compiler has not been found or is not functionnal.")
-ENDIF(CMAKE_ASM_COMPILER_WORKS)
-
-
-#cpuid instruction check
-TRY_COMPILE(IS_CPUID_INSTRUCTION_AVAILABLE_COMPILE ${CMAKE_CURRENT_BINARY_DIR}/build ${CMAKE_CURRENT_SOURCE_DIR}/test/HAVE_CPUID.c)
-IF(IS_CPUID_INSTRUCTION_AVAILABLE_COMPILE)
-    SET(IS_CPUID_INSTRUCTION_AVAILABLE ON)
-    ADD_DEFINITIONS("-DHAVE_CPUID")
-    MESSAGE("Cpuid instruction is available.")
-ELSE(IS_CPUID_INSTRUCTION_AVAILABLE_COMPILE)
-    SET(IS_CPUID_INSTRUCTION_AVAILABLE OFF)
-    MESSAGE("Cpuid instruction is not available.")
-ENDIF(IS_CPUID_INSTRUCTION_AVAILABLE_COMPILE)
-
-
-#Have AMD64 ASM check
-IF(DISABLE_ASM)
-
-    MESSAGE("AMD64 ASM implementations have been disabled.")
-
-    SET(libsodium_HEADERS ${libsodium_HEADERS}
-#        src/libsodium/crypto_stream/salsa20/ref/api.h
-    )
-
-    SET(libsodium_SOURCE ${libsodium_SOURCE}
-        src/libsodium/crypto_stream/salsa20/ref/stream_salsa20_ref.c
-        src/libsodium/crypto_stream/salsa20/ref/xor_salsa20_ref.c
-    )
-
-ELSE(DISABLE_ASM)
-
-    IF(ASSEMBLER_AVAILABLE)
-
-        TRY_COMPILE(HAVE_AMD64_ASM_COMPILE ${CMAKE_CURRENT_BINARY_DIR}/build ${CMAKE_CURRENT_SOURCE_DIR}/test/HAVE_AMD64_ASM.c)
-        IF(HAVE_AMD64_ASM_COMPILE)
-            ADD_DEFINITIONS(-DHAVE_AMD64_ASM=1)
-
-            SET(libsodium_HEADERS ${libsodium_HEADERS}
-#                src/libsodium/crypto_stream/salsa20/amd64_xmm6/api.h
-            )
-
-            SET(libsodium_SOURCE ${libsodium_SOURCE}
-                src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
-            )
-
-            MESSAGE("AMD64 ASM is available.")
-
-        ELSE(HAVE_AMD64_ASM_COMPILE)
-
-            SET(libsodium_HEADERS ${libsodium_HEADERS}
-#                src/libsodium/crypto_stream/salsa20/ref/api.h
-            )
-
-            SET(libsodium_SOURCE ${libsodium_SOURCE}
-                src/libsodium/crypto_stream/salsa20/ref/stream_salsa20_ref.c
-                src/libsodium/crypto_stream/salsa20/ref/xor_salsa20_ref.c
-            )
-
-            MESSAGE("AMD64 ASM is not available.")
-
-        ENDIF(HAVE_AMD64_ASM_COMPILE)
-    ENDIF(ASSEMBLER_AVAILABLE)
-ENDIF(DISABLE_ASM)
-
-
-MESSAGE("---------------- DONE WITH SYSTEM CHECKS. -----------------")
-MESSAGE("                                                           ")
-
-
-#----------------------------------------------------------
-################### COMPILER FLAG CHECKS ##################
-#----------------------------------------------------------
-
-#Compiler flag check macro definition.
-MACRO(CHECK_COMPILER_FLAG)
-
-    SET(FLAG "-${ARGV0}")
-    SET(IS_${ARGV0}_AVAILABLE)
-
-    CHECK_C_COMPILER_FLAG(${FLAG} IS_${ARGV0}_AVAILABLE)
-
-    IF(IS_${ARGV0}_AVAILABLE)
-        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${FLAG}")
-        MESSAGE("Checking if ${FLAG} is available... It is available.")
-    ELSE(IS_${ARGV0}_AVAILABLE)
-        MESSAGE("Checking if ${FLAG} is available... It is not available.")
-    ENDIF(IS_${ARGV0}_AVAILABLE)
-
-ENDMACRO(CHECK_COMPILER_FLAG)
-
-
-MESSAGE("------------- PERFORMING COMPILER FLAG CHECKS. ------------")
-
-
-#Check if debug mode is active
-IF(CMAKE_BUILD_TYPE MATCHES Debug)
-    MESSAGE("-- Debug build enabled. --")
-    ADD_DEFINITIONS("-DDEBUG=1")
-    CHECK_COMPILER_FLAG(O)
-    CHECK_COMPILER_FLAG(g3)
-ELSE(CMAKE_BUILD_TYPE MATCHES Debug)
-    MESSAGE("-- Release build enabled. --")
-    CHECK_COMPILER_FLAG(O3)
-ENDIF(CMAKE_BUILD_TYPE MATCHES Debug)
-
-#Check if -std=c99 is available.
-CHECK_COMPILER_FLAG(std=c99)
-
-#Check if -D_FORTIFY_SOURCE=2 is available.
-CHECK_COMPILER_FLAG(D_FORTIFY_SOURCE=2)
-
-#Check if clang and if -Wno-unknown-warning-option is available.
-IF("${CMAKE_C_COMPILER_ID}" OR "${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
-    CHECK_COMPILER_FLAG(Wno-unknown-warning-option)
-ENDIF()
-
-IF(NOT (MSYS OR MINGW OR CYGWIN))
-    #Check if -fPIC is available.
-    CHECK_COMPILER_FLAG(fPIC)
-ELSE(NOT (MSYS OR MINGW OR CYGWIN))
-    CHECK_COMPILER_FLAG(Wl,--dynamicbase)
-    CHECK_COMPILER_FLAG(Wl,--nxcompat)
-ENDIF(NOT (MSYS OR MINGW OR CYGWIN))
-
-#Check if -fPIE is available.
-IF(NOT DISABLE_PIE)
-    CHECK_COMPILER_FLAG(fPIE)
-ENDIF(NOT DISABLE_PIE)
-
-#Check if -Wall is available.
-CHECK_COMPILER_FLAG(Wall)
-
-#Check if -Wextra is available.
-CHECK_COMPILER_FLAG(Wextra)
-
-#Check if -fvisibility=hidden is available
-CHECK_COMPILER_FLAG(fvisibility=hidden)
-
-#Check if -fno-strict-aliasing is available.
-CHECK_COMPILER_FLAG(fno-strict-aliasing)
-
-#Check if -fno-strict-overflow is available.
-CHECK_COMPILER_FLAG(fno-strict-overflow)
-IF(NOT IS_fno-strict-overflow_AVAILABLE)
-    #If -fno-strict-overflow is not available, try with -fwrapv.
-    CHECK_COMPILER_FLAG(fwrapv)
-ENDIF()
-
-IF(NOT DISABLE_SSP)
-    #Check if -fstack-protector is available.
-    CHECK_COMPILER_FLAG(fstack-protector)
-ENDIF(NOT DISABLE_SSP)
-
-#Check if -Winit-self is available.
-CHECK_COMPILER_FLAG(Winit-self)
-
-#Check if -Wwrite-strings is available.
-CHECK_COMPILER_FLAG(Wwrite-strings)
-
-#Check if -Wdiv-by-zero is available.
-CHECK_COMPILER_FLAG(Wdiv-by-zero)
-
-#Check if -Wsometimes-uninitialized is available.
-CHECK_COMPILER_FLAG(Wsometimes-uninitialized)
-
-#Check if -Wbad-function-cast is available.
-CHECK_COMPILER_FLAG(Wbad-function-cast)
-
-#Check if -Wcast-align is available.
-CHECK_COMPILER_FLAG(Wcast-align)
-
-#Check if -Wcast-qual is available.
-CHECK_COMPILER_FLAG(Wcast-qual)
-
-#Check if -Wchar-subscripts is available.
-CHECK_COMPILER_FLAG(Wchar-subscripts)
-
-#Check if -Wcomment is available.
-CHECK_COMPILER_FLAG(Wcomment)
-
-#Check if -Wfloat-equal is available.
-CHECK_COMPILER_FLAG(Wfloat-equal)
-
-#Check if -Wformat=2 is available.
-CHECK_COMPILER_FLAG(Wformat=2)
-
-#Check if -Wimplicit is available.
-CHECK_COMPILER_FLAG(Wimplicit)
-
-#Check if -Wmissing-declarations is available.
-CHECK_COMPILER_FLAG(Wmissing-declarations)
-
-#Check if -Wmissing-prototypes is available.
-CHECK_COMPILER_FLAG(Wmissing-prototypes)
-
-#Check if -Wnormalized=id is available.
-CHECK_COMPILER_FLAG(Wnormalized=id)
-
-#Check if -Woverride-init is available.
-CHECK_COMPILER_FLAG(Woverride-init)
-
-#Check if -Wparentheses is available.
-CHECK_COMPILER_FLAG(Wparentheses)
-
-#Check if -Wpointer-arith is available.
-CHECK_COMPILER_FLAG(Wpointer-arith)
-
-#Check if -Wredundant-decls is available.
-CHECK_COMPILER_FLAG(Wredundant-decls)
-
-#Check if -Wstrict-prototypes is available.
-CHECK_COMPILER_FLAG(Wstrict-prototypes)
-
-#Check if -Wswitch-enum is available.
-CHECK_COMPILER_FLAG(Wswitch-enum)
-
-#Check if -Wvariable-dec is available.
-CHECK_COMPILER_FLAG(Wvariable-decl)
-
-##Check if -Wl,-z,relro is available.
-#CHECK_COMPILER_FLAG(Wl,-z,relro)
-#
-##Check if -Wl,-z,now is available.
-#CHECK_COMPILER_FLAG(Wl,-z,now)
-#
-##Check if -Wl,-z,noexecstack is available.
-#CHECK_COMPILER_FLAG(Wl,-z,noexecstack)
-
-#Check if -Wl,--verbose is available and enable it.
-#CHECK_COMPILER_FLAG(Wl,--verbose)
-
-
-MESSAGE("------------- DONE WITH COMPILER FLAG CHECKS. -------------")
-MESSAGE("                                                           ")
-
-
-#----------------------------------------------------------
-##################### SOURCE / HEADERS ####################
-#----------------------------------------------------------
-
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/libsodium)
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/libsodium/include)
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src/libsodium/include/sodium)
-#For version.h.in to version.h
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/src/libsodium/include/sodium)
-
-SET(libsodium_HEADERS ${libsodium_HEADERS}
-    src/libsodium/include/sodium.h
-    src/libsodium/include/sodium/core.h
-    src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h
-    src/libsodium/include/sodium/crypto_auth.h
-    src/libsodium/include/sodium/crypto_auth_hmacsha256.h
-    src/libsodium/include/sodium/crypto_auth_hmacsha512.h
-    src/libsodium/include/sodium/crypto_auth_hmacsha512256.h
-    src/libsodium/include/sodium/crypto_box.h
-    src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h
-    src/libsodium/include/sodium/crypto_core_hsalsa20.h
-    src/libsodium/include/sodium/crypto_core_salsa20.h
-    src/libsodium/include/sodium/crypto_core_salsa2012.h
-    src/libsodium/include/sodium/crypto_core_salsa208.h
-    src/libsodium/include/sodium/crypto_generichash.h
-    src/libsodium/include/sodium/crypto_generichash_blake2b.h
-    src/libsodium/include/sodium/crypto_hash.h
-    src/libsodium/include/sodium/crypto_hash_sha256.h
-    src/libsodium/include/sodium/crypto_hash_sha512.h
-    src/libsodium/include/sodium/crypto_onetimeauth.h
-    src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h
-    src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h
-    src/libsodium/include/sodium/crypto_scalarmult.h
-    src/libsodium/include/sodium/crypto_scalarmult_curve25519.h
-    src/libsodium/include/sodium/crypto_secretbox.h
-    src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h
-    src/libsodium/include/sodium/crypto_shorthash.h
-    src/libsodium/include/sodium/crypto_shorthash_siphash24.h
-    src/libsodium/include/sodium/crypto_sign.h
-    src/libsodium/include/sodium/crypto_sign_ed25519.h
-    src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h
-    src/libsodium/include/sodium/crypto_stream.h
-    src/libsodium/include/sodium/crypto_stream_aes128ctr.h
-    src/libsodium/include/sodium/crypto_stream_chacha20.h
-    src/libsodium/include/sodium/crypto_stream_salsa20.h
-    src/libsodium/include/sodium/crypto_stream_salsa2012.h
-    src/libsodium/include/sodium/crypto_stream_salsa208.h
-    src/libsodium/include/sodium/crypto_stream_xsalsa20.h
-    src/libsodium/include/sodium/crypto_int32.h
-    src/libsodium/include/sodium/crypto_int64.h
-    src/libsodium/include/sodium/crypto_uint16.h
-    src/libsodium/include/sodium/crypto_uint32.h
-    src/libsodium/include/sodium/crypto_uint64.h
-    src/libsodium/include/sodium/crypto_uint8.h
-    src/libsodium/include/sodium/crypto_verify_16.h
-    src/libsodium/include/sodium/crypto_verify_32.h
-    src/libsodium/include/sodium/crypto_verify_64.h
-    src/libsodium/include/sodium/export.h
-    src/libsodium/include/sodium/randombytes.h
-    src/libsodium/include/sodium/randombytes_salsa20_random.h
-    src/libsodium/include/sodium/randombytes_sysrandom.h
-    src/libsodium/include/sodium/runtime.h
-    src/libsodium/include/sodium/utils.h
-    ${CMAKE_CURRENT_BINARY_DIR}/src/libsodium/include/sodium/version.h
-#    src/libsodium/crypto_auth/hmacsha256/cp/api.h
-#    src/libsodium/crypto_auth/hmacsha512/cp/api.h
-#    src/libsodium/crypto_auth/hmacsha512256/cp/api.h
-#    src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/api.h
-#    src/libsodium/crypto_core/hsalsa20/ref2/api.h
-#    src/libsodium/crypto_core/salsa20/ref/api.h
-    src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h
-    src/libsodium/crypto_generichash/blake2/ref/blake2.h
-    src/libsodium/crypto_generichash/blake2/ref/blake2b-round.h
-#    src/libsodium/crypto_hash/sha256/cp/api.h
-#    src/libsodium/crypto_hash/sha512/cp/api.h
-    src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h
-    src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h
-    src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/sysendian.h
-#    src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/api.h
-#    src/libsodium/crypto_shorthash/siphash24/ref/api.h
-    src/libsodium/crypto_sign/ed25519/ref10/base.h
-    src/libsodium/crypto_sign/ed25519/ref10/base2.h
-#    src/libsodium/crypto_sign/ed25519/ref10/api.h
-    src/libsodium/crypto_sign/ed25519/ref10/d.h
-    src/libsodium/crypto_sign/ed25519/ref10/d2.h
-    src/libsodium/crypto_sign/ed25519/ref10/fe.h
-    src/libsodium/crypto_sign/ed25519/ref10/ge.h
-    src/libsodium/crypto_sign/ed25519/ref10/ge_add.h
-    src/libsodium/crypto_sign/ed25519/ref10/ge_madd.h
-    src/libsodium/crypto_sign/ed25519/ref10/ge_msub.h
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.h
-    src/libsodium/crypto_sign/ed25519/ref10/ge_sub.h
-    src/libsodium/crypto_sign/ed25519/ref10/pow22523.h
-    src/libsodium/crypto_sign/ed25519/ref10/pow225521.h
-    src/libsodium/crypto_sign/ed25519/ref10/sc.h
-    src/libsodium/crypto_sign/ed25519/ref10/sqrtm1.h
-#    src/libsodium/crypto_stream/chacha20/ref/api.h
-#    src/libsodium/crypto_stream/xsalsa20/ref/api.h
-#    src/libsodium/crypto_verify/16/ref/api.h
-#    src/libsodium/crypto_verify/32/ref/api.h
-#    src/libsodium/crypto_verify/64/ref/api.h
-)
-
-SET(libsodium_SOURCE ${libsodium_SOURCE}
-    src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
-    src/libsodium/crypto_auth/crypto_auth.c
-    src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c
-    src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
-    src/libsodium/crypto_auth/hmacsha256/cp/verify_hmacsha256.c
-    src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c
-    src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
-    src/libsodium/crypto_auth/hmacsha512/cp/verify_hmacsha512.c
-    src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
-    src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
-    src/libsodium/crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
-    src/libsodium/crypto_box/crypto_box.c
-    src/libsodium/crypto_box/crypto_box_easy.c
-    src/libsodium/crypto_box/crypto_box_seal.c
-    src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
-    src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
-    src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
-    src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
-    src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
-    src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c
-    src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c
-    src/libsodium/crypto_core/salsa20/ref/core_salsa20.c
-    src/libsodium/crypto_core/salsa20/core_salsa20_api.c
-    src/libsodium/crypto_generichash/crypto_generichash.c
-    src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c
-    src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c
-    src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c
-    src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c
-    src/libsodium/crypto_hash/crypto_hash.c
-    src/libsodium/crypto_hash/sha256/hash_sha256_api.c
-    src/libsodium/crypto_hash/sha256/cp/hash_sha256.c
-    src/libsodium/crypto_hash/sha512/hash_sha512_api.c
-    src/libsodium/crypto_hash/sha512/cp/hash_sha512.c
-    src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c
-    src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c
-#    src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305_api.c
-#    src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305_try.c
-#    src/libsodium/crypto_onetimeauth/poly1305/donna/auth_poly1305_donna.c
-    src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
-    src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
-    src/libsodium/crypto_scalarmult/crypto_scalarmult.c
-    src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c
-    src/libsodium/crypto_secretbox/crypto_secretbox.c
-    src/libsodium/crypto_secretbox/crypto_secretbox_easy.c
-    src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
-    src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
-    src/libsodium/crypto_shorthash/crypto_shorthash.c
-    src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24_api.c
-    src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c
-    src/libsodium/crypto_sign/crypto_sign.c
-    src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_0.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_1.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_add.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_cmov.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_copy.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_frombytes.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_invert.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_isnegative.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_isnonzero.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_mul.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_neg.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_pow22523.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_sq.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_sq2.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_sub.c
-    src/libsodium/crypto_sign/ed25519/ref10/fe_tobytes.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_add.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_double_scalarmult.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_frombytes.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_madd.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_msub.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p2_0.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p3_0.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p3_dbl.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_cached.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_p2.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_p3_tobytes.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_precomp_0.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_scalarmult_base.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_sub.c
-    src/libsodium/crypto_sign/ed25519/ref10/ge_tobytes.c
-    src/libsodium/crypto_sign/ed25519/ref10/keypair.c
-    src/libsodium/crypto_sign/ed25519/ref10/open.c
-    src/libsodium/crypto_sign/ed25519/ref10/sc_muladd.c
-    src/libsodium/crypto_sign/ed25519/ref10/sc_reduce.c
-    src/libsodium/crypto_sign/ed25519/ref10/sign.c
-    src/libsodium/crypto_stream/crypto_stream.c
-    src/libsodium/crypto_stream/chacha20/stream_chacha20.c
-    src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c
-    src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c
-    src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20_api.c
-    src/libsodium/crypto_stream/xsalsa20/ref/stream_xsalsa20.c
-    src/libsodium/crypto_stream/xsalsa20/ref/xor_xsalsa20.c
-    src/libsodium/crypto_verify/16/verify_16_api.c
-    src/libsodium/crypto_verify/16/ref/verify_16.c
-    src/libsodium/crypto_verify/32/verify_32_api.c
-    src/libsodium/crypto_verify/32/ref/verify_32.c
-    src/libsodium/crypto_verify/64/verify_64_api.c
-    src/libsodium/crypto_verify/64/ref/verify_64.c
-    src/libsodium/randombytes/randombytes.c
-    src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c
-    src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c
-    src/libsodium/sodium/core.c
-    src/libsodium/sodium/runtime.c
-    src/libsodium/sodium/utils.c
-    src/libsodium/sodium/version.c
-)
-
-
-#----------------------------------------------------------
-################### MINIMAL BUILD CHECK ###################
-#----------------------------------------------------------
-
-IF(NOT ENABLE_MINIMAL_BUILD)
-
-    SET(libsodium_HEADERS ${libsodium_HEADERS}
-#        src/libsodium/crypto_core/salsa2012/ref/api.h
-#        src/libsodium/crypto_core/salsa208/ref/api.h
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/api.h
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/fe25519.h
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/ge25519.h
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/sc25519.h
-#        src/libsodium/crypto_stream/aes128ctr/portable/api.h
-        src/libsodium/crypto_stream/aes128ctr/portable/common.h
-        src/libsodium/crypto_stream/aes128ctr/portable/consts.h
-        src/libsodium/crypto_stream/aes128ctr/portable/int128.h
-        src/libsodium/crypto_stream/aes128ctr/portable/types.h
-#        src/libsodium/crypto_stream/salsa2012/ref/api.h
-#        src/libsodium/crypto_stream/salsa208/ref/api.h
-    )
-
-    SET(libsodium_SOURCE ${libsodium_SOURCE}
-        src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c
-        src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c
-        src/libsodium/crypto_core/salsa208/ref/core_salsa208.c
-        src/libsodium/crypto_core/salsa208/core_salsa208_api.c
-#        src/libsodium/crypto_sign/edwards25519sha512batch/sign_edwards25519sha512batch_api.c
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/fe25519_edwards25519sha512batch.c
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/ge25519_edwards25519sha512batch.c
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/sc25519_edwards25519sha512batch.c
-#        src/libsodium/crypto_sign/edwards25519sha512batch/ref/sign_edwards25519sha512batch.c
-        src/libsodium/crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
-        src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c
-        src/libsodium/crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
-        src/libsodium/crypto_stream/aes128ctr/portable/common_aes128ctr.c
-        src/libsodium/crypto_stream/aes128ctr/portable/stream_aes128ctr.c
-        src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c
-        src/libsodium/crypto_stream/salsa2012/stream_salsa2012_api.c
-        src/libsodium/crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
-        src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c
-        src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012.c
-        src/libsodium/crypto_stream/salsa2012/ref/xor_salsa2012.c
-        src/libsodium/crypto_stream/salsa208/stream_salsa208_api.c
-        src/libsodium/crypto_stream/salsa208/ref/stream_salsa208.c
-        src/libsodium/crypto_stream/salsa208/ref/xor_salsa208.c
-    )
-
-ENDIF(NOT ENABLE_MINIMAL_BUILD)
-
-
-#----------------------------------------------------------
-######################### LIBRARY #########################
-#----------------------------------------------------------
-
-set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/build")
-
-
-IF(ENABLE_BLOCKING_RANDOM)
-    ADD_DEFINITIONS("-DUSE_BLOCKING_RANDOM")
-ENDIF(ENABLE_BLOCKING_RANDOM)
-
-IF(LIBSODIUM_BUILD_SHARED_LIBRARIES)
-    ADD_LIBRARY(sodium SHARED ${libsodium_HEADERS} ${libsodium_SOURCE})
-ELSE(LIBSODIUM_BUILD_SHARED_LIBRARIES)
-    ADD_DEFINITIONS("-DSODIUM_STATIC")
-    ADD_LIBRARY(sodium STATIC ${libsodium_HEADERS} ${libsodium_SOURCE})
-ENDIF(LIBSODIUM_BUILD_SHARED_LIBRARIES)
-
-SET_TARGET_PROPERTIES(sodium PROPERTIES
-    LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib
-    ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/lib
-    PROJECT_LABEL "libsodium"
-)
-
-set(libsodium_include_dirs
-        ${CMAKE_CURRENT_SOURCE_DIR}/src/libsodium/include
-        ${CMAKE_CURRENT_SOURCE_DIR}/src/libsodium/include/sodium
-        ${CMAKE_CURRENT_BINARY_DIR}/src/libsodium/include
-        CACHE INTERNAL "libipset library" FORCE
-        )
-
-#----------------------------------------------------------
-########################## TESTS ##########################
-#----------------------------------------------------------
-
-IF(${ENABLE_TESTS})
-
-    ADD_SUBDIRECTORY(${CMAKE_CURRENT_SOURCE_DIR}/test/default)
-    ENABLE_TESTING()
-
-    ADD_TEST(NAME aead_chacha20poly1305_test COMMAND aead_chacha20poly1305 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME auth_test                  COMMAND auth                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME auth2_test                 COMMAND auth2                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME auth3_test                 COMMAND auth3                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME auth5_test                 COMMAND auth5                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME auth6_test                 COMMAND auth6                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME auth7_test                 COMMAND auth7                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box_test                   COMMAND box                   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box2_test                  COMMAND box2                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box7_test                  COMMAND box7                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box8_test                  COMMAND box8                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box_easy_test              COMMAND box_easy              WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box_easy2_test             COMMAND box_easy2             WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box_seal_test              COMMAND box_seal              WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME box_seed_test              COMMAND box_seed              WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME chacha20_test              COMMAND chacha20              WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME core1_test                 COMMAND core1                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME core2_test                 COMMAND core2                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME core3_test                 COMMAND core3                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME core4_test                 COMMAND core4                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME core5_test                 COMMAND core5                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME core6_test                 COMMAND core6                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME ed25519_convert_test       COMMAND ed25519_convert       WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME generichash_test           COMMAND generichash           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME generichash2_test          COMMAND generichash2          WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME generichash3_test          COMMAND generichash3          WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME hash_test                  COMMAND hash                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME hash3_test                 COMMAND hash3                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME onetimeauth_test           COMMAND onetimeauth           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME onetimeauth2_test          COMMAND onetimeauth2          WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME onetimeauth7_test          COMMAND onetimeauth7          WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME pwhash_test                COMMAND pwhash                WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME pwhash_scrypt_ll_test      COMMAND pwhash_scrypt_ll      WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME randombytes_test           COMMAND randombytes           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME scalarmult_test            COMMAND scalarmult            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME scalarmult2_test           COMMAND scalarmult2           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME scalarmult5_test           COMMAND scalarmult5           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME scalarmult6_test           COMMAND scalarmult6           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME scalarmult7_test           COMMAND scalarmult7           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME secretbox_test             COMMAND secretbox             WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME secretbox2_test            COMMAND secretbox2            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME secretbox7_test            COMMAND secretbox7            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME secretbox8_test            COMMAND secretbox8            WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME secretbox_easy_test        COMMAND secretbox_easy        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME secretbox_easy2_test       COMMAND secretbox_easy2       WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME shorthash_test             COMMAND shorthash             WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME sign_test                  COMMAND sign                  WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME sodium_core_test           COMMAND sodium_core           WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME sodium_utils_test          COMMAND sodium_utils          WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME sodium_utils2_test         COMMAND sodium_utils2         WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME sodium_utils3_test         COMMAND sodium_utils3         WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME sodium_version_test        COMMAND sodium_version        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME stream_test                COMMAND stream                WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME stream2_test               COMMAND stream2               WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME stream3_test               COMMAND stream3               WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME stream4_test               COMMAND stream4               WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-    ADD_TEST(NAME verify1_test               COMMAND verify1               WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/test/default/)
-
-    SET_TESTS_PROPERTIES(aead_chacha20poly1305_test PROPERTIES DEPENDS aead_chacha20poly1305)
-    SET_TESTS_PROPERTIES(auth_test                  PROPERTIES DEPENDS auth)
-    SET_TESTS_PROPERTIES(auth2_test                 PROPERTIES DEPENDS auth2)
-    SET_TESTS_PROPERTIES(auth3_test                 PROPERTIES DEPENDS auth3)
-    SET_TESTS_PROPERTIES(auth5_test                 PROPERTIES DEPENDS auth5)
-    SET_TESTS_PROPERTIES(auth6_test                 PROPERTIES DEPENDS auth6)
-    SET_TESTS_PROPERTIES(auth7_test                 PROPERTIES DEPENDS auth7)
-    SET_TESTS_PROPERTIES(box_test                   PROPERTIES DEPENDS box)
-    SET_TESTS_PROPERTIES(box2_test                  PROPERTIES DEPENDS box2)
-    SET_TESTS_PROPERTIES(box7_test                  PROPERTIES DEPENDS box7)
-    SET_TESTS_PROPERTIES(box8_test                  PROPERTIES DEPENDS box8)
-    SET_TESTS_PROPERTIES(box_easy_test              PROPERTIES DEPENDS box_easy)
-    SET_TESTS_PROPERTIES(box_easy2_test             PROPERTIES DEPENDS box_easy2)
-    SET_TESTS_PROPERTIES(box_seal_test              PROPERTIES DEPENDS box_seal)
-    SET_TESTS_PROPERTIES(box_seed_test              PROPERTIES DEPENDS box_seed)
-    SET_TESTS_PROPERTIES(chacha20_test              PROPERTIES DEPENDS chacha20)
-    SET_TESTS_PROPERTIES(core1_test                 PROPERTIES DEPENDS core1)
-    SET_TESTS_PROPERTIES(core2_test                 PROPERTIES DEPENDS core2)
-    SET_TESTS_PROPERTIES(core3_test                 PROPERTIES DEPENDS core3)
-    SET_TESTS_PROPERTIES(core4_test                 PROPERTIES DEPENDS core4)
-    SET_TESTS_PROPERTIES(core5_test                 PROPERTIES DEPENDS core5)
-    SET_TESTS_PROPERTIES(core6_test                 PROPERTIES DEPENDS core6)
-    SET_TESTS_PROPERTIES(ed25519_convert_test       PROPERTIES DEPENDS ed25519_convert)
-    SET_TESTS_PROPERTIES(generichash_test           PROPERTIES DEPENDS generichash)
-    SET_TESTS_PROPERTIES(generichash2_test          PROPERTIES DEPENDS generichash2)
-    SET_TESTS_PROPERTIES(generichash3_test          PROPERTIES DEPENDS generichash3)
-    SET_TESTS_PROPERTIES(hash_test                  PROPERTIES DEPENDS hash)
-    SET_TESTS_PROPERTIES(hash3_test                 PROPERTIES DEPENDS hash3)
-    SET_TESTS_PROPERTIES(onetimeauth_test           PROPERTIES DEPENDS onetimeauth)
-    SET_TESTS_PROPERTIES(onetimeauth2_test          PROPERTIES DEPENDS onetimeauth2)
-    SET_TESTS_PROPERTIES(onetimeauth7_test          PROPERTIES DEPENDS onetimeauth7)
-    SET_TESTS_PROPERTIES(pwhash_test                PROPERTIES DEPENDS pwhash)
-    SET_TESTS_PROPERTIES(pwhash_scrypt_ll_test      PROPERTIES DEPENDS pwhash_scrypt_ll)
-    SET_TESTS_PROPERTIES(randombytes_test           PROPERTIES DEPENDS randombytes)
-    SET_TESTS_PROPERTIES(scalarmult_test            PROPERTIES DEPENDS scalarmult)
-    SET_TESTS_PROPERTIES(scalarmult2_test           PROPERTIES DEPENDS scalarmult2)
-    SET_TESTS_PROPERTIES(scalarmult5_test           PROPERTIES DEPENDS scalarmult5)
-    SET_TESTS_PROPERTIES(scalarmult6_test           PROPERTIES DEPENDS scalarmult6)
-    SET_TESTS_PROPERTIES(scalarmult7_test           PROPERTIES DEPENDS scalarmult7)
-    SET_TESTS_PROPERTIES(secretbox_test             PROPERTIES DEPENDS secretbox)
-    SET_TESTS_PROPERTIES(secretbox2_test            PROPERTIES DEPENDS secretbox2)
-    SET_TESTS_PROPERTIES(secretbox7_test            PROPERTIES DEPENDS secretbox7)
-    SET_TESTS_PROPERTIES(secretbox8_test            PROPERTIES DEPENDS secretbox8)
-    SET_TESTS_PROPERTIES(secretbox_easy_test        PROPERTIES DEPENDS secretbox_easy)
-    SET_TESTS_PROPERTIES(secretbox_easy2_test       PROPERTIES DEPENDS secretbox_easy2)
-    SET_TESTS_PROPERTIES(shorthash_test             PROPERTIES DEPENDS shorthash)
-    SET_TESTS_PROPERTIES(sign_test                  PROPERTIES DEPENDS sign)
-    SET_TESTS_PROPERTIES(sodium_core_test           PROPERTIES DEPENDS sodium_core)
-    SET_TESTS_PROPERTIES(sodium_utils_test          PROPERTIES DEPENDS sodium_utils)
-    SET_TESTS_PROPERTIES(sodium_utils2_test         PROPERTIES DEPENDS sodium_utils2)
-    SET_TESTS_PROPERTIES(sodium_utils3_test         PROPERTIES DEPENDS sodium_utils3)
-    SET_TESTS_PROPERTIES(sodium_version_test        PROPERTIES DEPENDS sodium_version)
-    SET_TESTS_PROPERTIES(stream_test                PROPERTIES DEPENDS stream)
-    SET_TESTS_PROPERTIES(stream2_test               PROPERTIES DEPENDS stream2)
-    SET_TESTS_PROPERTIES(stream3_test               PROPERTIES DEPENDS stream3)
-    SET_TESTS_PROPERTIES(stream4_test               PROPERTIES DEPENDS stream4)
-    SET_TESTS_PROPERTIES(verify1_test               PROPERTIES DEPENDS verify1)
-
-ENDIF(${ENABLE_TESTS})
diff --git a/libsodium/ChangeLog b/libsodium/ChangeLog
index 1ad6f39..e696933 100644
--- a/libsodium/ChangeLog
+++ b/libsodium/ChangeLog
@@ -1,4 +1,271 @@
 
+* Version 1.0.18
+ - The Enterprise versions of Visual Studio are now supported.
+ - Visual Studio 2019 is now supported.
+ - 32-bit binaries for Visual Studio 2010 are now provided.
+ - A test that didn't work properly on Linux systems with overcommit
+memory turned on has been removed. This fixes Ansible builds.
+ - Emscripten: `print` and `printErr` functions are overridden to send
+errors to the console, if there is one.
+ - Emscripten: `UTF8ToString()` is now exported since `Pointer_stringify()`
+has been deprecated.
+ - Libsodium version detection has been fixed in the CMake recipe.
+ - Generic hashing got a 10% speedup on AVX2.
+ - New target: WebAssembly/WASI (compile with `dist-builds/wasm32-wasi.sh`).
+ - New functions to map a hash to an edwards25519 point or get a random point:
+`core_ed25519_from_hash()` and `core_ed25519_random()`.
+ - `crypto_core_ed25519_scalar_mul()` has been implemented for `scalar*scalar`
+`(mod L)` multiplication.
+ - Support for the Ristretto group has been implemented, for compatibility
+with wasm-crypto.
+ - Improvements have been made to the test suite.
+ - Portability improvements has been made.
+ - `getentropy()` is now used on systems providing this system call.
+ - `randombytes_salsa20 has been renamed to `randombytes_internal`.
+ - Support for (p)nacl has been removed.
+ - Most `((nonnull))` attributes have been relaxed to allow 0-length inputs
+to be `NULL`.
+ - The `-ftree-vectorize` and `-ftree-slp-vectorize` compiler switches are
+now used, if available, for optimized builds.
+
+* Version 1.0.17
+ - Bug fix: `sodium_pad()` didn't properly support block sizes >= 256 bytes.
+ - JS/WebAssembly: some old iOS versions can't instantiate the WebAssembly
+module; fall back to Javascript on these.
+ - JS/WebAssembly: compatibility with newer Emscripten versions.
+ - Bug fix: `crypto_pwhash_scryptsalsa208sha256_str_verify()` and
+`crypto_pwhash_scryptsalsa208sha256_str_needs_rehash()` didn't return
+`EINVAL` on input strings with a short length, unlike their high-level
+counterpart.
+ - Added a workaround for Visual Studio 2010 bug causing CPU features
+not to be detected.
+ - Portability improvements.
+ - Test vectors from Project Wycheproof have been added.
+ - New low-level APIs for arithmetic mod the order of the prime order group:
+`crypto_core_ed25519_scalar_random()`, `crypto_core_ed25519_scalar_reduce()`,
+`crypto_core_ed25519_scalar_invert()`, `crypto_core_ed25519_scalar_negate()`,
+`crypto_core_ed25519_scalar_complement()`, `crypto_core_ed25519_scalar_add()`
+and `crypto_core_ed25519_scalar_sub()`.
+ - New low-level APIs for scalar multiplication without clamping:
+`crypto_scalarmult_ed25519_base_noclamp()` and
+`crypto_scalarmult_ed25519_noclamp()`. These new APIs are especially useful
+for blinding.
+ - `sodium_sub()` has been implemented.
+ - Support for WatchOS has been added.
+ - getrandom(2) is now used on FreeBSD 12+.
+ - The `nonnull` attribute has been added to all relevant prototypes.
+ - More reliable AVX512 detection.
+ - Javascript/Webassembly builds now use dynamic memory growth.
+
+* Version 1.0.16
+ - Signatures computations and verifications are now way faster on
+64-bit platforms with compilers supporting 128-bit arithmetic (gcc,
+clang, icc). This includes the WebAssembly target.
+ - New low-level APIs for computations over edwards25519:
+`crypto_scalarmult_ed25519()`, `crypto_scalarmult_ed25519_base()`,
+`crypto_core_ed25519_is_valid_point()`, `crypto_core_ed25519_add()`,
+`crypto_core_ed25519_sub()` and `crypto_core_ed25519_from_uniform()`
+(elligator representative to point).
+ - `crypto_sign_open()`, `crypto_sign_verify_detached() and
+`crypto_sign_edwards25519sha512batch_open` now reject public keys in
+non-canonical form in addition to low-order points.
+ - The library can be built with `ED25519_NONDETERMINISTIC` defined in
+order to use synthetic nonces for EdDSA. This is disabled by default.
+ - Webassembly: `crypto_pwhash_*()` functions are now included in
+non-sumo builds.
+ - `sodium_stackzero()` was added to wipe content off the stack.
+ - Android: support new SDKs where unified headers have become the
+default.
+ - The Salsa20-based PRNG example is now thread-safe on platforms with
+support for thread-local storage, optionally mixes bits from RDRAND.
+ - CMAKE: static library detection on Unix systems has been improved
+(thanks to @BurningEnlightenment, @nibua-r, @mellery451)
+ - Argon2 and scrypt are slightly faster on Linux.
+
+* Version 1.0.15
+ - The default password hashing algorithm is now Argon2id. The
+`pwhash_str_verify()` function can still verify Argon2i hashes
+without any changes, and `pwhash()` can still compute Argon2i hashes
+as well.
+ - The aes128ctr primitive was removed. It was slow, non-standard, not
+authenticated, and didn't seem to be used by any opensource project.
+ - Argon2id required at least 3 passes like Argon2i, despite a minimum
+of `1` as defined by the `OPSLIMIT_MIN` constant. This has been fixed.
+ - The secretstream construction was slightly changed to be consistent
+with forthcoming variants.
+ - The Javascript and Webassembly versions have been merged, and the
+module now returns a `.ready` promise that will resolve after the
+Webassembly code is loaded and compiled.
+ - Note that due to these incompatible changes, the library version
+major was bumped up.
+
+* Version 1.0.14
+ - iOS binaries should now be compatible with WatchOS and TVOS.
+ - WebAssembly is now officially supported. Special thanks to
+@facekapow and @pepyakin who helped to make it happen.
+ - Internal consistency checks failing and primitives used with
+dangerous/out-of-bounds/invalid parameters used to call abort(3).
+Now, a custom handler *that doesn't return* can be set with the
+`set_sodium_misuse()` function. It still aborts by default or if the
+handler ever returns. This is not a replacement for non-fatal,
+expected runtime errors. This handler will be only called in
+unexpected situations due to potential bugs in the library or in
+language bindings.
+ - `*_MESSAGEBYTES_MAX` macros (and the corresponding
+`_messagebytes_max()` symbols) have been added to represent the
+maximum message size that can be safely handled by a primitive.
+Language bindings are encouraged to check user inputs against these
+maximum lengths.
+ - The test suite has been extended to cover more edge cases.
+ - crypto_sign_ed25519_pk_to_curve25519() now rejects points that are
+not on the curve, or not in the main subgroup.
+ - Further changes have been made to ensure that smart compilers will
+not optimize out code that we don't want to be optimized.
+ - Visual Studio solutions are now included in distribution tarballs.
+ - The `sodium_runtime_has_*` symbols for CPU features detection are
+now defined as weak symbols, i.e. they can be replaced with an
+application-defined implementation. This can be useful to disable
+AVX* when temperature/power consumption is a concern.
+ - `crypto_kx_*()` now aborts if called with no non-NULL pointers to
+store keys to.
+ - SSE2 implementations of `crypto_verify_*()` have been added.
+ - Passwords can be hashed using a specific algorithm with the new
+`crypto_pwhash_str_alg()` function.
+ - Due to popular demand, base64 encoding (`sodium_bin2base64()`) and
+decoding (`sodium_base642bin()`) have been implemented.
+ - A new `crypto_secretstream_*()` API was added to safely encrypt files
+and multi-part messages.
+ - The `sodium_pad()` and `sodium_unpad()` helper functions have been
+added in order to add & remove padding.
+ - An AVX512 optimized implementation of Argon2 has been added (written
+by Ondrej Mosnáček, thanks!)
+ - The `crypto_pwhash_str_needs_rehash()` function was added to check if
+a password hash string matches the given parameters, or if it needs an
+update.
+ - The library can now be compiled with recent versions of
+emscripten/binaryen that don't allow multiple variables declarations
+using a single `var` statement.
+
+* Version 1.0.13
+ - Javascript: the sumo builds now include all symbols. They were
+previously limited to symbols defined in minimal builds.
+ - The public `crypto_pwhash_argon2i_MEMLIMIT_MAX` constant was
+incorrectly defined on 32-bit platforms. This has been fixed.
+ - Version 1.0.12 didn't compile on OpenBSD/i386 using the base gcc
+compiler. This has been fixed.
+ - The Android compilation scripts have been updated for NDK r14b.
+ - armv7s-optimized code was re-added to iOS builds.
+ - An AVX2 optimized implementation of the Argon2 round function was
+added.
+ - The Argon2id variant of Argon2 has been implemented. The
+high-level `crypto_pwhash_str_verify()` function automatically detects
+the algorithm and can verify both Argon2i and Argon2id hashed passwords.
+The default algorithm for newly hashed passwords remains Argon2i in
+this version to avoid breaking compatibility with verifiers running
+libsodium <= 1.0.12.
+ - A `crypto_box_curve25519xchacha20poly1305_seal*()` function set was
+implemented.
+ - scrypt was removed from minimal builds.
+ - libsodium is now available on NuGet.
+
+* Version 1.0.12
+ - Ed25519ph was implemented, adding a multi-part signature API
+(`crypto_sign_init()`, `crypto_sign_update()`, `crypto_sign_final_*()`).
+ - New constants and related accessors have been added for Scrypt and
+Argon2.
+ - XChaCha20 has been implemented. Like XSalsa20, this construction
+extends the ChaCha20 cipher to accept a 192-bit nonce. This makes it safe
+to use ChaCha20 with random nonces.
+ - `crypto_secretbox`, `crypto_box` and `crypto_aead` now offer
+variants leveraging XChaCha20.
+ - SHA-2 is about 20% faster, which also gives a speed boost to
+signature and signature verification.
+ - AVX2 implementations of Salsa20 and ChaCha20 have been added. They
+are twice as fast as the SSE2 implementations. The speed gain is
+even more significant on Windows, that previously didn't use
+vectorized implementations.
+ - New high-level API: `crypto_kdf`, to easily derive one or more
+subkeys from a master key.
+ - Siphash with a 128-bit output has been implemented, and is
+available as `crypto_shorthash_siphashx_*`.
+ - New `*_keygen()` helpers functions have been added to create secret
+keys for all constructions. This improves code clarity and can prevent keys
+from being partially initialized.
+ - A new `randombytes_buf_deterministic()` function was added to
+deterministically fill a memory region with pseudorandom data. This
+function can especially be useful to write reproducible tests.
+ - A preliminary `crypto_kx_*()` API was added to compute shared session
+keys.
+ - AVX2 detection is more reliable.
+ - The pthreads library is not required any more when using MingW.
+ - `contrib/Findsodium.cmake` was added as an example to include
+libsodium in a project using cmake.
+ - Compatibility with gcc 2.x has been restored.
+ - Minimal builds can be checked using `sodium_library_minimal()`.
+ - The `--enable-opt` compilation switch has become compatible with more
+platforms.
+ - Android builds are now using clang on platforms where it is
+available.
+
+* Version 1.0.11
+ - `sodium_init()` is now thread-safe, and can be safely called multiple
+times.
+ - Android binaries now properly support 64-bit Android, targeting
+platform 24, but without breaking compatibility with platforms 16 and
+21.
+ - Better support for old gcc versions.
+ - On FreeBSD, core dumps are disabled on regions allocated with
+sodium allocation functions.
+ - AVX2 detection was fixed, resulting in faster Blake2b hashing on
+platforms where it was not properly detected.
+ - The Sandy2x Curve25519 implementation was not as fast as expected
+on some platforms. This has been fixed.
+ - The NativeClient target was improved. Most notably, it now supports
+optimized implementations, and uses pepper_49 by default.
+ - The library can be compiled with recent Emscripten versions.
+Changes have been made to produce smaller code, and the default heap
+size was reduced in the standard version.
+ - The code can now be compiled on SLES11 service pack 4.
+ - Decryption functions can now accept a NULL pointer for the output.
+This checks the MAC without writing the decrypted message.
+ - crypto_generichash_final() now returns -1 if called twice.
+ - Support for Visual Studio 2008 was improved.
+
+* Version 1.0.10
+ - This release only fixes a compilation issue reported with some older
+gcc versions. There are no functional changes over the previous release.
+
+* Version 1.0.9
+ - The Javascript target now includes a `--sumo` option to include all
+the symbols of the original C library.
+ - A detached API was added to the ChaCha20-Poly1305 and AES256-GCM
+implementations.
+ - The Argon2i password hashing function was added, and is accessible
+directly and through a new, high-level `crypto_pwhash` API. The scrypt
+function remains available as well.
+ - A speed-record AVX2 implementation of BLAKE2b was added (thanks to
+Samuel Neves).
+ - The library can now be compiled using C++Builder (thanks to @jcolli44)
+ - Countermeasures for Ed25519 signatures malleability have been added
+to match the irtf-cfrg-eddsa draft (note that malleability is irrelevant to
+the standard definition of signature security). Signatures with a small-order
+`R` point are now also rejected.
+ - Some implementations are now slightly faster when using the Clang
+compiler.
+ - The HChaCha20 core function was implemented (`crypto_core_hchacha20()`).
+ - No-op stubs were added for all AES256-GCM public functions even when
+compiled on non-Intel platforms.
+ - `crypt_generichash_blake2b_statebytes()` was added.
+ - New macros were added for the IETF variant of the ChaCha20-Poly1305
+construction.
+ - The library can now be compiled on Minix.
+ - HEASLR is now enabled on MinGW builds.
+
+* Version 1.0.8
+ - Handle the case where the CPU supports AVX, but we are running
+on an hypervisor with AVX disabled/not supported.
+ - Faster (2x) scalarmult_base() when using the ref10 implementation.
+
 * Version 1.0.7
  - More functions whose return value should be checked have been
 tagged with `__attribute__ ((warn_unused_result))`: `crypto_box_easy()`,
@@ -87,7 +354,7 @@ required.
  - On Linux, getrandom(2) is being used instead of directly accessing
 /dev/urandom, if the kernel supports this system call.
  - crypto_box_seal() and crypto_box_seal_open() have been added.
- - A solutions for Visual Studio 2015 was added.
+ - Visual Studio 2015 is now supported.
 
 * Version 1.0.2
  - The _easy and _detached APIs now support precalculated keys;
diff --git a/libsodium/LICENSE b/libsodium/LICENSE
index 3edb000..62510f3 100644
--- a/libsodium/LICENSE
+++ b/libsodium/LICENSE
@@ -1,5 +1,7 @@
 /*
- * Copyright (c) 2013-2015
+ * ISC License
+ *
+ * Copyright (c) 2013-2019
  * Frank Denis <j at pureftpd dot org>
  *
  * Permission to use, copy, modify, and/or distribute this software for any
diff --git a/libsodium/Makefile.am b/libsodium/Makefile.am
index b5b2d5c..1f43ff3 100644
--- a/libsodium/Makefile.am
+++ b/libsodium/Makefile.am
@@ -10,4 +10,15 @@ EXTRA_DIST = \
 	THANKS
 
 SUBDIRS = \
-	src
+	builds \
+	contrib \
+	dist-build \
+	msvc-scripts \
+	src \
+	test
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = @PACKAGE_NAME@.pc
+
+DISTCLEANFILES = $(pkgconfig_DATA)
+
diff --git a/libsodium/Makefile.in b/libsodium/Makefile.in
index 8f1f0aa..790faa7 100644
--- a/libsodium/Makefile.in
+++ b/libsodium/Makefile.in
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.14.1 from Makefile.am.
+# Makefile.in generated by automake 1.16.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+# Copyright (C) 1994-2018 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -13,8 +13,19 @@
 # PARTICULAR PURPOSE.
 
 @SET_MAKE@
+
 VPATH = @srcdir@
-am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
 am__make_running_with_option = \
   case $${target_option-} in \
       ?) ;; \
@@ -78,32 +89,27 @@ POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 subdir = .
-DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
-	$(top_srcdir)/configure $(am__configure_deps) \
-	$(top_srcdir)/src/libsodium/include/sodium/version.h.in \
-	AUTHORS ChangeLog README THANKS build-aux/compile \
-	build-aux/config.guess build-aux/config.sub build-aux/depcomp \
-	build-aux/install-sh build-aux/missing build-aux/ltmain.sh \
-	$(top_srcdir)/build-aux/compile \
-	$(top_srcdir)/build-aux/config.guess \
-	$(top_srcdir)/build-aux/config.sub \
-	$(top_srcdir)/build-aux/install-sh \
-	$(top_srcdir)/build-aux/ltmain.sh \
-	$(top_srcdir)/build-aux/missing
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_catchable_abrt.m4 \
+	$(top_srcdir)/m4/ax_check_catchable_segv.m4 \
+	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
 	$(top_srcdir)/m4/ax_check_define.m4 \
 	$(top_srcdir)/m4/ax_check_link_flag.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
+	$(top_srcdir)/m4/ax_valgrind_check.m4 \
 	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/configure.ac
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
+	$(am__configure_deps) $(am__DIST_COMMON)
 am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
  configure.lineno config.status.lineno
 mkinstalldirs = $(install_sh) -d
-CONFIG_CLEAN_FILES = src/libsodium/include/sodium/version.h
+CONFIG_CLEAN_FILES = libsodium.pc libsodium-uninstalled.pc \
+	src/libsodium/include/sodium/version.h
 CONFIG_CLEAN_VPATH_FILES =
 AM_V_P = $(am__v_P_@AM_V@)
 am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
@@ -132,6 +138,35 @@ am__can_run_installinfo = \
     n|no|NO) false;; \
     *) (install-info --version) >/dev/null 2>&1;; \
   esac
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__uninstall_files_from_dir = { \
+  test -z "$$files" \
+    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
+    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
+         $(am__cd) "$$dir" && rm -f $$files; }; \
+  }
+am__installdirs = "$(DESTDIR)$(pkgconfigdir)"
+DATA = $(pkgconfig_DATA)
 RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
   distclean-recursive maintainer-clean-recursive
 am__recursive_targets = \
@@ -139,7 +174,7 @@ am__recursive_targets = \
   $(RECURSIVE_CLEAN_TARGETS) \
   $(am__extra_recursive_targets)
 AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
-	cscope distdir dist dist-all distcheck
+	cscope distdir distdir-am dist dist-all distcheck
 am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
 # Read a list of newline-separated strings from the standard input,
 # and print each of them once, without duplicates.  Input order is
@@ -161,6 +196,19 @@ ETAGS = etags
 CTAGS = ctags
 CSCOPE = cscope
 DIST_SUBDIRS = $(SUBDIRS)
+am__DIST_COMMON = $(srcdir)/Makefile.in \
+	$(srcdir)/libsodium-uninstalled.pc.in \
+	$(srcdir)/libsodium.pc.in $(top_srcdir)/build-aux/compile \
+	$(top_srcdir)/build-aux/config.guess \
+	$(top_srcdir)/build-aux/config.sub \
+	$(top_srcdir)/build-aux/install-sh \
+	$(top_srcdir)/build-aux/ltmain.sh \
+	$(top_srcdir)/build-aux/missing \
+	$(top_srcdir)/src/libsodium/include/sodium/version.h.in \
+	AUTHORS ChangeLog THANKS build-aux/compile \
+	build-aux/config.guess build-aux/config.sub \
+	build-aux/install-sh build-aux/ltmain.sh build-aux/missing \
+	compile depcomp install-sh ltmain.sh missing
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 distdir = $(PACKAGE)-$(VERSION)
 top_distdir = $(distdir)
@@ -204,6 +252,7 @@ am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
   | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
 distcleancheck_listfiles = find . -type f -print
 ACLOCAL = @ACLOCAL@
+ALLOCA = @ALLOCA@
 AMTAR = @AMTAR@
 AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
 AR = @AR@
@@ -219,8 +268,12 @@ CCASFLAGS = @CCASFLAGS@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
 CFLAGS_AESNI = @CFLAGS_AESNI@
+CFLAGS_AVX = @CFLAGS_AVX@
+CFLAGS_AVX2 = @CFLAGS_AVX2@
+CFLAGS_AVX512F = @CFLAGS_AVX512F@
 CFLAGS_MMX = @CFLAGS_MMX@
 CFLAGS_PCLMUL = @CFLAGS_PCLMUL@
+CFLAGS_RDRAND = @CFLAGS_RDRAND@
 CFLAGS_SSE2 = @CFLAGS_SSE2@
 CFLAGS_SSE3 = @CFLAGS_SSE3@
 CFLAGS_SSE41 = @CFLAGS_SSE41@
@@ -239,6 +292,10 @@ ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
+ENABLE_VALGRIND_drd = @ENABLE_VALGRIND_drd@
+ENABLE_VALGRIND_helgrind = @ENABLE_VALGRIND_helgrind@
+ENABLE_VALGRIND_memcheck = @ENABLE_VALGRIND_memcheck@
+ENABLE_VALGRIND_sgcheck = @ENABLE_VALGRIND_sgcheck@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
@@ -251,7 +308,6 @@ INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
-ISODATE = @ISODATE@
 LD = @LD@
 LDFLAGS = @LDFLAGS@
 LIBOBJS = @LIBOBJS@
@@ -262,6 +318,7 @@ LIBTOOL_EXTRA_FLAGS = @LIBTOOL_EXTRA_FLAGS@
 LIPO = @LIPO@
 LN_S = @LN_S@
 LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
 MAINT = @MAINT@
 MAKEINFO = @MAKEINFO@
 MANIFEST_TOOL = @MANIFEST_TOOL@
@@ -280,16 +337,23 @@ PACKAGE_TARNAME = @PACKAGE_TARNAME@
 PACKAGE_URL = @PACKAGE_URL@
 PACKAGE_VERSION = @PACKAGE_VERSION@
 PATH_SEPARATOR = @PATH_SEPARATOR@
+PKGCONFIG_LIBS_PRIVATE = @PKGCONFIG_LIBS_PRIVATE@
+PTHREAD_CC = @PTHREAD_CC@
+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
+PTHREAD_LIBS = @PTHREAD_LIBS@
 RANLIB = @RANLIB@
 SAFECODE_HOME = @SAFECODE_HOME@
 SED = @SED@
 SET_MAKE = @SET_MAKE@
 SHELL = @SHELL@
+SODIUM_LIBRARY_MINIMAL_DEF = @SODIUM_LIBRARY_MINIMAL_DEF@
 SODIUM_LIBRARY_VERSION = @SODIUM_LIBRARY_VERSION@
 SODIUM_LIBRARY_VERSION_MAJOR = @SODIUM_LIBRARY_VERSION_MAJOR@
 SODIUM_LIBRARY_VERSION_MINOR = @SODIUM_LIBRARY_VERSION_MINOR@
 STRIP = @STRIP@
 TEST_LDFLAGS = @TEST_LDFLAGS@
+VALGRIND = @VALGRIND@
+VALGRIND_ENABLED = @VALGRIND_ENABLED@
 VERSION = @VERSION@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
@@ -303,6 +367,7 @@ am__leading_dot = @am__leading_dot@
 am__quote = @am__quote@
 am__tar = @am__tar@
 am__untar = @am__untar@
+ax_pthread_config = @ax_pthread_config@
 bindir = @bindir@
 build = @build@
 build_alias = @build_alias@
@@ -343,6 +408,8 @@ target_alias = @target_alias@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
+valgrind_enabled_tools = @valgrind_enabled_tools@
+valgrind_tools = @valgrind_tools@
 ACLOCAL_AMFLAGS = -I m4
 EXTRA_DIST = \
 	autogen.sh \
@@ -354,8 +421,16 @@ EXTRA_DIST = \
 	THANKS
 
 SUBDIRS = \
-	src
-
+	builds \
+	contrib \
+	dist-build \
+	msvc-scripts \
+	src \
+	test
+
+pkgconfigdir = $(libdir)/pkgconfig
+pkgconfig_DATA = @PACKAGE_NAME@.pc
+DISTCLEANFILES = $(pkgconfig_DATA)
 all: all-recursive
 
 .SUFFIXES:
@@ -374,15 +449,14 @@ $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__confi
 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
 	$(am__cd) $(top_srcdir) && \
 	  $(AUTOMAKE) --foreign Makefile
-.PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    echo ' $(SHELL) ./config.status'; \
 	    $(SHELL) ./config.status;; \
 	  *) \
-	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
-	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__maybe_remake_depfiles);; \
 	esac;
 
 $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
@@ -393,6 +467,10 @@ $(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
 $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
 	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
 $(am__aclocal_m4_deps):
+libsodium.pc: $(top_builddir)/config.status $(srcdir)/libsodium.pc.in
+	cd $(top_builddir) && $(SHELL) ./config.status $@
+libsodium-uninstalled.pc: $(top_builddir)/config.status $(srcdir)/libsodium-uninstalled.pc.in
+	cd $(top_builddir) && $(SHELL) ./config.status $@
 src/libsodium/include/sodium/version.h: $(top_builddir)/config.status $(top_srcdir)/src/libsodium/include/sodium/version.h.in
 	cd $(top_builddir) && $(SHELL) ./config.status $@
 
@@ -404,6 +482,27 @@ clean-libtool:
 
 distclean-libtool:
 	-rm -f libtool config.lt
+install-pkgconfigDATA: $(pkgconfig_DATA)
+	@$(NORMAL_INSTALL)
+	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
+	if test -n "$$list"; then \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(pkgconfigdir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(pkgconfigdir)" || exit 1; \
+	fi; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pkgconfigdir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pkgconfigdir)" || exit $$?; \
+	done
+
+uninstall-pkgconfigDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(pkgconfig_DATA)'; test -n "$(pkgconfigdir)" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
+	dir='$(DESTDIR)$(pkgconfigdir)'; $(am__uninstall_files_from_dir)
 
 # This directory's subdirectories are mostly independent; you can cd
 # into them and run 'make' without going through this Makefile.
@@ -511,7 +610,10 @@ distclean-tags:
 	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
 	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files
 
-distdir: $(DISTFILES)
+distdir: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) distdir-am
+
+distdir-am: $(DISTFILES)
 	$(am__remove_distdir)
 	test -d "$(distdir)" || mkdir "$(distdir)"
 	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
@@ -576,7 +678,7 @@ distdir: $(DISTFILES)
 	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
 	|| chmod -R a+r "$(distdir)"
 dist-gzip: distdir
-	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
+	tardir=$(distdir) && $(am__tar) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).tar.gz
 	$(am__post_remove_distdir)
 dist-bzip2: distdir
 	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
@@ -591,17 +693,17 @@ dist-xz: distdir
 	$(am__post_remove_distdir)
 
 dist-tarZ: distdir
-	@echo WARNING: "Support for shar distribution archives is" \
-	               "deprecated." >&2
+	@echo WARNING: "Support for distribution archives compressed with" \
+		       "legacy program 'compress' is deprecated." >&2
 	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
 	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
 	$(am__post_remove_distdir)
 
 dist-shar: distdir
-	@echo WARNING: "Support for distribution archives compressed with" \
-		       "legacy program 'compress' is deprecated." >&2
+	@echo WARNING: "Support for shar distribution archives is" \
+	               "deprecated." >&2
 	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
-	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
+	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
 	$(am__post_remove_distdir)
 
 dist-zip: distdir
@@ -619,7 +721,7 @@ dist dist-all:
 distcheck: dist
 	case '$(DIST_ARCHIVES)' in \
 	*.tar.gz*) \
-	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
+	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
 	*.tar.bz2*) \
 	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
 	*.tar.lz*) \
@@ -629,23 +731,23 @@ distcheck: dist
 	*.tar.Z*) \
 	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
 	*.shar.gz*) \
-	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
+	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
 	*.zip*) \
 	  unzip $(distdir).zip ;;\
 	esac
 	chmod -R a-w $(distdir)
 	chmod u+w $(distdir)
-	mkdir $(distdir)/_build $(distdir)/_inst
+	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
 	chmod a-w $(distdir)
 	test -d $(distdir)/_build || exit 0; \
 	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
 	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
 	  && am__cwd=`pwd` \
-	  && $(am__cd) $(distdir)/_build \
-	  && ../configure \
+	  && $(am__cd) $(distdir)/_build/sub \
+	  && ../../configure \
 	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
 	    $(DISTCHECK_CONFIGURE_FLAGS) \
-	    --srcdir=.. --prefix="$$dc_install_base" \
+	    --srcdir=../.. --prefix="$$dc_install_base" \
 	  && $(MAKE) $(AM_MAKEFLAGS) \
 	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
 	  && $(MAKE) $(AM_MAKEFLAGS) check \
@@ -700,9 +802,12 @@ distcleancheck: distclean
 	       exit 1; } >&2
 check-am: all-am
 check: check-recursive
-all-am: Makefile
+all-am: Makefile $(DATA)
 installdirs: installdirs-recursive
 installdirs-am:
+	for dir in "$(DESTDIR)$(pkgconfigdir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
 install: install-recursive
 install-exec: install-exec-recursive
 install-data: install-data-recursive
@@ -729,6 +834,7 @@ clean-generic:
 distclean-generic:
 	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
 	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
+	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)
 
 maintainer-clean-generic:
 	@echo "This command is intended for maintainers to use"
@@ -755,7 +861,7 @@ info: info-recursive
 
 info-am:
 
-install-data-am:
+install-data-am: install-pkgconfigDATA
 
 install-dvi: install-dvi-recursive
 
@@ -801,7 +907,7 @@ ps: ps-recursive
 
 ps-am:
 
-uninstall-am:
+uninstall-am: uninstall-pkgconfigDATA
 
 .MAKE: $(am__recursive_targets) install-am install-strip
 
@@ -815,11 +921,14 @@ uninstall-am:
 	install install-am install-data install-data-am install-dvi \
 	install-dvi-am install-exec install-exec-am install-html \
 	install-html-am install-info install-info-am install-man \
-	install-pdf install-pdf-am install-ps install-ps-am \
-	install-strip installcheck installcheck-am installdirs \
-	installdirs-am maintainer-clean maintainer-clean-generic \
-	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
-	ps ps-am tags tags-am uninstall uninstall-am
+	install-pdf install-pdf-am install-pkgconfigDATA install-ps \
+	install-ps-am install-strip installcheck installcheck-am \
+	installdirs installdirs-am maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-generic \
+	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
+	uninstall-am uninstall-pkgconfigDATA
+
+.PRECIOUS: Makefile
 
 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
diff --git a/libsodium/README b/libsodium/README
deleted file mode 100644
index 1dbff7a..0000000
--- a/libsodium/README
+++ /dev/null
@@ -1 +0,0 @@
-See README.markdown
diff --git a/libsodium/README.markdown b/libsodium/README.markdown
index 3ef3b9f..412693d 100644
--- a/libsodium/README.markdown
+++ b/libsodium/README.markdown
@@ -1,5 +1,7 @@
 [![Build Status](https://travis-ci.org/jedisct1/libsodium.svg?branch=master)](https://travis-ci.org/jedisct1/libsodium?branch=master)
+[![Windows build status](https://ci.appveyor.com/api/projects/status/fu8s2elx25il98hj?svg=true)](https://ci.appveyor.com/project/jedisct1/libsodium)
 [![Coverity Scan Build Status](https://scan.coverity.com/projects/2397/badge.svg)](https://scan.coverity.com/projects/2397)
+[![Azure build status](https://jedisct1.visualstudio.com/Libsodium/_apis/build/status/jedisct1.libsodium?branchName=stable)](https://jedisct1.visualstudio.com/Libsodium/_build/latest?definitionId=3&branchName=stable)
 
 ![libsodium](https://raw.github.com/jedisct1/libsodium/master/logo.png)
 ============
@@ -15,14 +17,23 @@ Its goal is to provide all of the core operations needed to build
 higher-level cryptographic tools.
 
 Sodium supports a variety of compilers and operating systems,
-including Windows (with MingW or Visual Studio, x86 and x64), iOS and Android.
+including Windows (with MingW or Visual Studio, x86 and x64), iOS, Android,
+as well as Javascript and Webassembly.
 
 ## Documentation
 
-The documentation is a work-in-progress, and is being written using
-Gitbook:
+The documentation is available on Gitbook and built from the [libsodium-doc](https://github.com/jedisct1/libsodium-doc) repository:
 
-[libsodium documentation](https://download.libsodium.org/doc/)
+* [libsodium documentation](https://download.libsodium.org/doc/) -
+online, requires Javascript.
+* [offline documentation](https://www.gitbook.com/book/jedisct1/libsodium/details)
+in PDF format.
+
+## Integrity Checking
+
+The integrity checking instructions (including the signing key for libsodium)
+are available in the [installation](https://download.libsodium.org/doc/installation#integrity-checking)
+section of the documentation.
 
 ## Community
 
diff --git a/libsodium/THANKS b/libsodium/THANKS
index f74cacc..a4b6e70 100644
--- a/libsodium/THANKS
+++ b/libsodium/THANKS
@@ -1,47 +1,92 @@
+Special thanks to people, companies and organizations having written
+libsodium bindings for their favorite programming languages:
+
 @alethia7
+@artemisc
+@carblue
 @dnaq
+@ektrah
+@graxrabble
 @harleqin
 @joshjdevl
+@jrmarino
 @jshahbazi
 @lvh
 @neheb
+
+Adam Caudill (@adamcaudill)
+Alexander Ilin (@AlexIljin)
+Alexander Morris (@alexpmorris)
 Amit Murthy (@amitmurthy)
+Andrew Bennett (@potatosalad)
+Andrew Lambert (@charonn0)
+Bruce Mitchener (@waywardmonkeys)
 Bruno Oliveira (@abstractj)
-Christian Wiese (@morfoh)
+Caolan McMahon (@caolan)
 Chris Rebert (@cvrebert)
+Christian Hermann (@bitbeans)
+Christian Wiese (@morfoh)
+Christian Wiese (@morfoh)
 Colm MacCárthaigh (@colmmacc)
+David Parrish (@dmp1ce)
 Donald Stufft (@dstufft)
 Douglas Campos (@qmx)
 Drew Crawford (@drewcrawford)
+Emil Bay (@emilbayes)
 Eric Dong (@quantum1423)
 Eric Voskuil (@evoskuil)
+Farid Hajji (@fhajji)
 Frank Siebenlist (@franks42)
 Gabriel Handford (@gabriel)
+Geo Carncross (@geocar)
+Henrik Gassmann (BurningEnlightenment)
 Jachym Holecek (@freza)
+Jack Wink (@jackwink)
+James Ruan (@jamesruan)
 Jan de Muijnck-Hughes (@jfdm)
 Jason McCampbell (@jasonmccampbell)
 Jeroen Habraken (@VeXocide)
+Jeroen Ooms (@jeroen)
 Jesper Louis Andersen (@jlouis)
+Joe Eli McIlvain (@jemc)
+Jonathan Stowe (@jonathanstowe)
 Joseph Abrahamson (@tel)
+Julien Kauffmann (@ereOn)
 Kenneth Ballenegger (@kballenegger)
 Loic Maury (@loicmaury)
 Michael Gorlick (@mgorlick)
 Michael Gregorowicz (@mgregoro)
+Michał Zieliński (@zielmicha)
 Omar Ayub (@electricFeel)
 Pedro Paixao (@paixaop)
 Project ArteMisc (@artemisc)
+Rich FitzJohn (@richfitz)
 Ruben De Visscher (@rubendv)
 Rudolf Von Krugstein (@rudolfvonkrugstein)
 Samuel Neves (@sneves)
 Scott Arciszewski (@paragonie-scott)
-Stefan Marsiske
+Stanislav Ovsiannikov (@naphaso)
+Stefan Marsiske (@stef)
 Stephan Touset (@stouset)
+Stephen Chavez (@redragonx)
 Steve Gibson (@sggrc)
 Tony Arcieri (@bascule)
 Tony Garnock-Jones (@tonyg)
 Y. T. Chung (@zonyitoo)
 
+Bytecurry Software
+Cryptotronix
+Facebook
 FSF France
-Coverity, Inc.
-OpenDNS, Inc.
-OVH
+MaidSafe
+Paragonie Initiative Enterprises
+Python Cryptographic Authority
+
+(this list may not be complete, if you don't see your name, please
+submit a pull request!)
+
+Also thanks to:
+
+- Coverity, Inc. to provide static analysis.
+- FSF France for providing access to their compilation servers.
+- Private Internet Access for having sponsored a complete security audit.
diff --git a/libsodium/autogen.sh b/libsodium/autogen.sh
index fe89a73..3743f70 100755
--- a/libsodium/autogen.sh
+++ b/libsodium/autogen.sh
@@ -1,36 +1,53 @@
 #! /bin/sh
 
-if glibtoolize --version > /dev/null 2>&1; then
+if glibtoolize --version >/dev/null 2>&1; then
   LIBTOOLIZE='glibtoolize'
 else
   LIBTOOLIZE='libtoolize'
 fi
 
-if [ ! -x "`which $LIBTOOLIZE 2>/dev/null`" ] ; then
+command -v command >/dev/null 2>&1 || {
+  echo "command is required, but wasn't found on this system"
+  exit 1
+}
+
+command -v $LIBTOOLIZE >/dev/null 2>&1 || {
   echo "libtool is required, but wasn't found on this system"
   exit 1
-fi
+}
 
-if [ ! -x "`which autoconf 2>/dev/null`" ] ; then
+command -v autoconf >/dev/null 2>&1 || {
   echo "autoconf is required, but wasn't found on this system"
   exit 1
-fi
+}
 
-if [ ! -x "`which automake 2>/dev/null`" ] ; then
+command -v automake >/dev/null 2>&1 || {
   echo "automake is required, but wasn't found on this system"
   exit 1
-fi
+}
 
-if [ ! -x "`which pkg-config 2>/dev/null`" ] ; then
-  echo "pkg-config is required, but wasn't found on this system"
-  exit 1
+if autoreconf --version >/dev/null 2>&1; then
+  autoreconf -ivf
+else
+  $LIBTOOLIZE &&
+    aclocal &&
+    automake --add-missing --force-missing --include-deps &&
+    autoconf
 fi
 
-if [ -x "`which autoreconf 2>/dev/null`" ] ; then
-  exec autoreconf -ivf
-fi
+[ -z "$DO_NOT_UPDATE_CONFIG_SCRIPTS" ] &&
+  command -v curl >/dev/null 2>&1 && {
+  echo "Downloading config.guess and config.sub..."
+
+  curl -sL -o config.guess \
+    'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD' &&
+    mv -f config.guess build-aux/config.guess
+
+  curl -sL -o config.sub \
+    'https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD' &&
+    mv -f config.sub build-aux/config.sub
+
+  echo "Done."
+}
 
-$LIBTOOLIZE && \
-aclocal && \
-automake --add-missing --force-missing --include-deps && \
-autoconf
+rm -f config.guess config.sub
diff --git a/libsodium/build-aux/config.guess b/libsodium/build-aux/config.guess
old mode 100755
new mode 100644
index b79252d..ae71394
--- a/libsodium/build-aux/config.guess
+++ b/libsodium/build-aux/config.guess
@@ -1,8 +1,8 @@
 #! /bin/sh
 # Attempt to guess a canonical system name.
-#   Copyright 1992-2013 Free Software Foundation, Inc.
+#   Copyright 1992-2019 Free Software Foundation, Inc.
 
-timestamp='2013-06-10'
+timestamp='2019-05-28'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
@@ -15,7 +15,7 @@ timestamp='2013-06-10'
 # General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with this program; if not, see <http://www.gnu.org/licenses/>.
+# along with this program; if not, see <https://www.gnu.org/licenses/>.
 #
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
@@ -24,12 +24,12 @@ timestamp='2013-06-10'
 # program.  This Exception is an additional permission under section 7
 # of the GNU General Public License, version 3 ("GPLv3").
 #
-# Originally written by Per Bothner.
+# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.
 #
 # You can get the latest version of this script from:
-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess
 #
-# Please send patches with a ChangeLog entry to config-patches@gnu.org.
+# Please send patches to <config-patches@gnu.org>.
 
 
 me=`echo "$0" | sed -e 's,.*/,,'`
@@ -39,7 +39,7 @@ Usage: $0 [OPTION]
 
 Output the configuration name of the system \`$me' is run on.
 
-Operation modes:
+Options:
   -h, --help         print this help, then exit
   -t, --time-stamp   print date of last modification, then exit
   -v, --version      print version number, then exit
@@ -50,7 +50,7 @@ version="\
 GNU config.guess ($timestamp)
 
 Originally written by Per Bothner.
-Copyright 1992-2013 Free Software Foundation, Inc.
+Copyright 1992-2019 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
@@ -84,8 +84,6 @@ if test $# != 0; then
   exit 1
 fi
 
-trap 'exit 1' 1 2 15
-
 # CC_FOR_BUILD -- compiler used by this script. Note that the use of a
 # compiler to aid in system detection is discouraged as it requires
 # temporary files to be created and, as you can see below, it is a
@@ -96,34 +94,38 @@ trap 'exit 1' 1 2 15
 
 # Portable tmp directory creation inspired by the Autoconf team.
 
-set_cc_for_build='
-trap "exitcode=\$?; (rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null) && exit \$exitcode" 0 ;
-trap "rm -f \$tmpfiles 2>/dev/null; rmdir \$tmp 2>/dev/null; exit 1" 1 2 13 15 ;
-: ${TMPDIR=/tmp} ;
- { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
- { test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||
- { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo "Warning: creating insecure temp directory" >&2 ; } ||
- { echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; } ;
-dummy=$tmp/dummy ;
-tmpfiles="$dummy.c $dummy.o $dummy.rel $dummy" ;
-case $CC_FOR_BUILD,$HOST_CC,$CC in
- ,,)    echo "int x;" > $dummy.c ;
-	for c in cc gcc c89 c99 ; do
-	  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then
-	     CC_FOR_BUILD="$c"; break ;
-	  fi ;
-	done ;
-	if test x"$CC_FOR_BUILD" = x ; then
-	  CC_FOR_BUILD=no_compiler_found ;
-	fi
-	;;
- ,,*)   CC_FOR_BUILD=$CC ;;
- ,*,*)  CC_FOR_BUILD=$HOST_CC ;;
-esac ; set_cc_for_build= ;'
+tmp=
+# shellcheck disable=SC2172
+trap 'test -z "$tmp" || rm -fr "$tmp"' 0 1 2 13 15
+
+set_cc_for_build() {
+    : "${TMPDIR=/tmp}"
+    # shellcheck disable=SC2039
+    { tmp=`(umask 077 && mktemp -d "$TMPDIR/cgXXXXXX") 2>/dev/null` && test -n "$tmp" && test -d "$tmp" ; } ||
+	{ test -n "$RANDOM" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir "$tmp" 2>/dev/null) ; } ||
+	{ tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir "$tmp" 2>/dev/null) && echo "Warning: creating insecure temp directory" >&2 ; } ||
+	{ echo "$me: cannot create a temporary directory in $TMPDIR" >&2 ; exit 1 ; }
+    dummy=$tmp/dummy
+    case ${CC_FOR_BUILD-},${HOST_CC-},${CC-} in
+	,,)    echo "int x;" > "$dummy.c"
+	       for driver in cc gcc c89 c99 ; do
+		   if ($driver -c -o "$dummy.o" "$dummy.c") >/dev/null 2>&1 ; then
+		       CC_FOR_BUILD="$driver"
+		       break
+		   fi
+	       done
+	       if test x"$CC_FOR_BUILD" = x ; then
+		   CC_FOR_BUILD=no_compiler_found
+	       fi
+	       ;;
+	,,*)   CC_FOR_BUILD=$CC ;;
+	,*,*)  CC_FOR_BUILD=$HOST_CC ;;
+    esac
+}
 
 # This is needed to find uname on a Pyramid OSx when run in the BSD universe.
 # (ghazi@noc.rutgers.edu 1994-08-24)
-if (test -f /.attbin/uname) >/dev/null 2>&1 ; then
+if test -f /.attbin/uname ; then
 	PATH=$PATH:/.attbin ; export PATH
 fi
 
@@ -132,14 +134,14 @@ UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown
 UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown
 UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown
 
-case "${UNAME_SYSTEM}" in
+case "$UNAME_SYSTEM" in
 Linux|GNU|GNU/*)
 	# If the system lacks a compiler, then just pick glibc.
 	# We could probably try harder.
 	LIBC=gnu
 
-	eval $set_cc_for_build
-	cat <<-EOF > $dummy.c
+	set_cc_for_build
+	cat <<-EOF > "$dummy.c"
 	#include <features.h>
 	#if defined(__UCLIBC__)
 	LIBC=uclibc
@@ -149,13 +151,20 @@ Linux|GNU|GNU/*)
 	LIBC=gnu
 	#endif
 	EOF
-	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC'`
+	eval "`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`"
+
+	# If ldd exists, use it to detect musl libc.
+	if command -v ldd >/dev/null && \
+		ldd --version 2>&1 | grep -q ^musl
+	then
+	    LIBC=musl
+	fi
 	;;
 esac
 
 # Note: order is significant - the case branches are not exclusive.
 
-case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
+case "$UNAME_MACHINE:$UNAME_SYSTEM:$UNAME_RELEASE:$UNAME_VERSION" in
     *:NetBSD:*:*)
 	# NetBSD (nbsd) targets should (where applicable) match one or
 	# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,
@@ -168,21 +177,31 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
 	# Note: NetBSD doesn't particularly care about the vendor
 	# portion of the name.  We always set it to "unknown".
 	sysctl="sysctl -n hw.machine_arch"
-	UNAME_MACHINE_ARCH=`(/sbin/$sysctl 2>/dev/null || \
-	    /usr/sbin/$sysctl 2>/dev/null || echo unknown)`
-	case "${UNAME_MACHINE_ARCH}" in
+	UNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \
+	    "/sbin/$sysctl" 2>/dev/null || \
+	    "/usr/sbin/$sysctl" 2>/dev/null || \
+	    echo unknown)`
+	case "$UNAME_MACHINE_ARCH" in
 	    armeb) machine=armeb-unknown ;;
 	    arm*) machine=arm-unknown ;;
 	    sh3el) machine=shl-unknown ;;
 	    sh3eb) machine=sh-unknown ;;
 	    sh5el) machine=sh5le-unknown ;;
-	    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;
+	    earmv*)
+		arch=`echo "$UNAME_MACHINE_ARCH" | sed -e 's,^e\(armv[0-9]\).*$,\1,'`
+		endian=`echo "$UNAME_MACHINE_ARCH" | sed -ne 's,^.*\(eb\)$,\1,p'`
+		machine="${arch}${endian}"-unknown
+		;;
+	    *) machine="$UNAME_MACHINE_ARCH"-unknown ;;
 	esac
 	# The Operating System including object format, if it has switched
-	# to ELF recently, or will in the future.
-	case "${UNAME_MACHINE_ARCH}" in
+	# to ELF recently (or will in the future) and ABI.
+	case "$UNAME_MACHINE_ARCH" in
+	    earm*)
+		os=netbsdelf
+		;;
 	    arm*|i386|m68k|ns32k|sh3*|sparc|vax)
-		eval $set_cc_for_build
+		set_cc_for_build
 		if echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \
 			| grep -q __ELF__
 		then
@@ -197,44 +216,67 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
 		os=netbsd
 		;;
 	esac
+	# Determine ABI tags.
+	case "$UNAME_MACHINE_ARCH" in
+	    earm*)
+		expr='s/^earmv[0-9]/-eabi/;s/eb$//'
+		abi=`echo "$UNAME_MACHINE_ARCH" | sed -e "$expr"`
+		;;
+	esac
 	# The OS release
 	# Debian GNU/NetBSD machines have a different userland, and
 	# thus, need a distinct triplet. However, they do not need
 	# kernel version information, so it can be replaced with a
 	# suitable tag, in the style of linux-gnu.
-	case "${UNAME_VERSION}" in
+	case "$UNAME_VERSION" in
 	    Debian*)
 		release='-gnu'
 		;;
 	    *)
-		release=`echo ${UNAME_RELEASE}|sed -e 's/[-_].*/\./'`
+		release=`echo "$UNAME_RELEASE" | sed -e 's/[-_].*//' | cut -d. -f1,2`
 		;;
 	esac
 	# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:
 	# contains redundant information, the shorter form:
 	# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.
-	echo "${machine}-${os}${release}"
+	echo "$machine-${os}${release}${abi-}"
 	exit ;;
     *:Bitrig:*:*)
 	UNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`
-	echo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}
+	echo "$UNAME_MACHINE_ARCH"-unknown-bitrig"$UNAME_RELEASE"
 	exit ;;
     *:OpenBSD:*:*)
 	UNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`
-	echo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}
+	echo "$UNAME_MACHINE_ARCH"-unknown-openbsd"$UNAME_RELEASE"
+	exit ;;
+    *:LibertyBSD:*:*)
+	UNAME_MACHINE_ARCH=`arch | sed 's/^.*BSD\.//'`
+	echo "$UNAME_MACHINE_ARCH"-unknown-libertybsd"$UNAME_RELEASE"
+	exit ;;
+    *:MidnightBSD:*:*)
+	echo "$UNAME_MACHINE"-unknown-midnightbsd"$UNAME_RELEASE"
 	exit ;;
     *:ekkoBSD:*:*)
-	echo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}
+	echo "$UNAME_MACHINE"-unknown-ekkobsd"$UNAME_RELEASE"
 	exit ;;
     *:SolidBSD:*:*)
-	echo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}
+	echo "$UNAME_MACHINE"-unknown-solidbsd"$UNAME_RELEASE"
 	exit ;;
     macppc:MirBSD:*:*)
-	echo powerpc-unknown-mirbsd${UNAME_RELEASE}
+	echo powerpc-unknown-mirbsd"$UNAME_RELEASE"
 	exit ;;
     *:MirBSD:*:*)
-	echo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}
+	echo "$UNAME_MACHINE"-unknown-mirbsd"$UNAME_RELEASE"
+	exit ;;
+    *:Sortix:*:*)
+	echo "$UNAME_MACHINE"-unknown-sortix
+	exit ;;
+    *:Redox:*:*)
+	echo "$UNAME_MACHINE"-unknown-redox
 	exit ;;
+    mips:OSF1:*.*)
+        echo mips-dec-osf1
+        exit ;;
     alpha:OSF1:*:*)
 	case $UNAME_RELEASE in
 	*4.0)
@@ -251,63 +293,54 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
 	ALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \(.*\) processor.*$/\1/p' | head -n 1`
 	case "$ALPHA_CPU_TYPE" in
 	    "EV4 (21064)")
-		UNAME_MACHINE="alpha" ;;
+		UNAME_MACHINE=alpha ;;
 	    "EV4.5 (21064)")
-		UNAME_MACHINE="alpha" ;;
+		UNAME_MACHINE=alpha ;;
 	    "LCA4 (21066/21068)")
-		UNAME_MACHINE="alpha" ;;
+		UNAME_MACHINE=alpha ;;
 	    "EV5 (21164)")
-		UNAME_MACHINE="alphaev5" ;;
+		UNAME_MACHINE=alphaev5 ;;
 	    "EV5.6 (21164A)")
-		UNAME_MACHINE="alphaev56" ;;
+		UNAME_MACHINE=alphaev56 ;;
 	    "EV5.6 (21164PC)")
-		UNAME_MACHINE="alphapca56" ;;
+		UNAME_MACHINE=alphapca56 ;;
 	    "EV5.7 (21164PC)")
-		UNAME_MACHINE="alphapca57" ;;
+		UNAME_MACHINE=alphapca57 ;;
 	    "EV6 (21264)")
-		UNAME_MACHINE="alphaev6" ;;
+		UNAME_MACHINE=alphaev6 ;;
 	    "EV6.7 (21264A)")
-		UNAME_MACHINE="alphaev67" ;;
+		UNAME_MACHINE=alphaev67 ;;
 	    "EV6.8CB (21264C)")
-		UNAME_MACHINE="alphaev68" ;;
+		UNAME_MACHINE=alphaev68 ;;
 	    "EV6.8AL (21264B)")
-		UNAME_MACHINE="alphaev68" ;;
+		UNAME_MACHINE=alphaev68 ;;
 	    "EV6.8CX (21264D)")
-		UNAME_MACHINE="alphaev68" ;;
+		UNAME_MACHINE=alphaev68 ;;
 	    "EV6.9A (21264/EV69A)")
-		UNAME_MACHINE="alphaev69" ;;
+		UNAME_MACHINE=alphaev69 ;;
 	    "EV7 (21364)")
-		UNAME_MACHINE="alphaev7" ;;
+		UNAME_MACHINE=alphaev7 ;;
 	    "EV7.9 (21364A)")
-		UNAME_MACHINE="alphaev79" ;;
+		UNAME_MACHINE=alphaev79 ;;
 	esac
 	# A Pn.n version is a patched version.
 	# A Vn.n version is a released version.
 	# A Tn.n version is a released field test version.
 	# A Xn.n version is an unreleased experimental baselevel.
 	# 1.2 uses "1.2" for uname -r.
-	echo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
+	echo "$UNAME_MACHINE"-dec-osf"`echo "$UNAME_RELEASE" | sed -e 's/^[PVTX]//' | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`"
 	# Reset EXIT trap before exiting to avoid spurious non-zero exit code.
 	exitcode=$?
 	trap '' 0
 	exit $exitcode ;;
-    Alpha\ *:Windows_NT*:*)
-	# How do we know it's Interix rather than the generic POSIX subsystem?
-	# Should we change UNAME_MACHINE based on the output of uname instead
-	# of the specific Alpha model?
-	echo alpha-pc-interix
-	exit ;;
-    21064:Windows_NT:50:3)
-	echo alpha-dec-winnt3.5
-	exit ;;
     Amiga*:UNIX_System_V:4.0:*)
 	echo m68k-unknown-sysv4
 	exit ;;
     *:[Aa]miga[Oo][Ss]:*:*)
-	echo ${UNAME_MACHINE}-unknown-amigaos
+	echo "$UNAME_MACHINE"-unknown-amigaos
 	exit ;;
     *:[Mm]orph[Oo][Ss]:*:*)
-	echo ${UNAME_MACHINE}-unknown-morphos
+	echo "$UNAME_MACHINE"-unknown-morphos
 	exit ;;
     *:OS/390:*:*)
 	echo i370-ibm-openedition
@@ -319,7 +352,7 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
 	echo powerpc-ibm-os400
 	exit ;;
     arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)
-	echo arm-acorn-riscix${UNAME_RELEASE}
+	echo arm-acorn-riscix"$UNAME_RELEASE"
 	exit ;;
     arm*:riscos:*:*|arm*:RISCOS:*:*)
 	echo arm-unknown-riscos
@@ -346,38 +379,38 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
 	    sparc) echo sparc-icl-nx7; exit ;;
 	esac ;;
     s390x:SunOS:*:*)
-	echo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	echo "$UNAME_MACHINE"-ibm-solaris2"`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`"
 	exit ;;
     sun4H:SunOS:5.*:*)
-	echo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	echo sparc-hal-solaris2"`echo "$UNAME_RELEASE"|sed -e 's/[^.]*//'`"
 	exit ;;
     sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)
-	echo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	echo sparc-sun-solaris2"`echo "$UNAME_RELEASE" | sed -e 's/[^.]*//'`"
 	exit ;;
     i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)
-	echo i386-pc-auroraux${UNAME_RELEASE}
+	echo i386-pc-auroraux"$UNAME_RELEASE"
 	exit ;;
     i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)
-	eval $set_cc_for_build
-	SUN_ARCH="i386"
+	set_cc_for_build
+	SUN_ARCH=i386
 	# If there is a compiler, see if it is configured for 64-bit objects.
 	# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.
 	# This test works for both compilers.
-	if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+	if [ "$CC_FOR_BUILD" != no_compiler_found ]; then
 	    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \
-		(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
+		(CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
 		grep IS_64BIT_ARCH >/dev/null
 	    then
-		SUN_ARCH="x86_64"
+		SUN_ARCH=x86_64
 	    fi
 	fi
-	echo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	echo "$SUN_ARCH"-pc-solaris2"`echo "$UNAME_RELEASE"|sed -e 's/[^.]*//'`"
 	exit ;;
     sun4*:SunOS:6*:*)
 	# According to config.sub, this is the proper way to canonicalize
 	# SunOS6.  Hard to guess exactly what SunOS6 will be like, but
 	# it's likely to be more like Solaris than SunOS4.
-	echo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	echo sparc-sun-solaris3"`echo "$UNAME_RELEASE"|sed -e 's/[^.]*//'`"
 	exit ;;
     sun4*:SunOS:*:*)
 	case "`/usr/bin/arch -k`" in
@@ -386,25 +419,25 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
 		;;
 	esac
 	# Japanese Language versions have a version number like `4.1.3-JL'.
-	echo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`
+	echo sparc-sun-sunos"`echo "$UNAME_RELEASE"|sed -e 's/-/_/'`"
 	exit ;;
     sun3*:SunOS:*:*)
-	echo m68k-sun-sunos${UNAME_RELEASE}
+	echo m68k-sun-sunos"$UNAME_RELEASE"
 	exit ;;
     sun*:*:4.2BSD:*)
 	UNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`
-	test "x${UNAME_RELEASE}" = "x" && UNAME_RELEASE=3
+	test "x$UNAME_RELEASE" = x && UNAME_RELEASE=3
 	case "`/bin/arch`" in
 	    sun3)
-		echo m68k-sun-sunos${UNAME_RELEASE}
+		echo m68k-sun-sunos"$UNAME_RELEASE"
 		;;
 	    sun4)
-		echo sparc-sun-sunos${UNAME_RELEASE}
+		echo sparc-sun-sunos"$UNAME_RELEASE"
 		;;
 	esac
 	exit ;;
     aushp:SunOS:*:*)
-	echo sparc-auspex-sunos${UNAME_RELEASE}
+	echo sparc-auspex-sunos"$UNAME_RELEASE"
 	exit ;;
     # The situation for MiNT is a little confusing.  The machine name
     # can be virtually everything (everything which is not
@@ -415,44 +448,44 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
     # MiNT.  But MiNT is downward compatible to TOS, so this should
     # be no problem.
     atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint"$UNAME_RELEASE"
 	exit ;;
     atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint"$UNAME_RELEASE"
 	exit ;;
     *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)
-	echo m68k-atari-mint${UNAME_RELEASE}
+	echo m68k-atari-mint"$UNAME_RELEASE"
 	exit ;;
     milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)
-	echo m68k-milan-mint${UNAME_RELEASE}
+	echo m68k-milan-mint"$UNAME_RELEASE"
 	exit ;;
     hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)
-	echo m68k-hades-mint${UNAME_RELEASE}
+	echo m68k-hades-mint"$UNAME_RELEASE"
 	exit ;;
     *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)
-	echo m68k-unknown-mint${UNAME_RELEASE}
+	echo m68k-unknown-mint"$UNAME_RELEASE"
 	exit ;;
     m68k:machten:*:*)
-	echo m68k-apple-machten${UNAME_RELEASE}
+	echo m68k-apple-machten"$UNAME_RELEASE"
 	exit ;;
     powerpc:machten:*:*)
-	echo powerpc-apple-machten${UNAME_RELEASE}
+	echo powerpc-apple-machten"$UNAME_RELEASE"
 	exit ;;
     RISC*:Mach:*:*)
 	echo mips-dec-mach_bsd4.3
 	exit ;;
     RISC*:ULTRIX:*:*)
-	echo mips-dec-ultrix${UNAME_RELEASE}
+	echo mips-dec-ultrix"$UNAME_RELEASE"
 	exit ;;
     VAX*:ULTRIX*:*:*)
-	echo vax-dec-ultrix${UNAME_RELEASE}
+	echo vax-dec-ultrix"$UNAME_RELEASE"
 	exit ;;
     2020:CLIX:*:* | 2430:CLIX:*:*)
-	echo clipper-intergraph-clix${UNAME_RELEASE}
+	echo clipper-intergraph-clix"$UNAME_RELEASE"
 	exit ;;
     mips:*:*:UMIPS | mips:*:*:RISCos)
-	eval $set_cc_for_build
-	sed 's/^	//' << EOF >$dummy.c
+	set_cc_for_build
+	sed 's/^	//' << EOF > "$dummy.c"
 #ifdef __cplusplus
 #include <stdio.h>  /* for printf() prototype */
 	int main (int argc, char *argv[]) {
@@ -461,23 +494,23 @@ case "${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}" in
 #endif
 	#if defined (host_mips) && defined (MIPSEB)
 	#if defined (SYSTYPE_SYSV)
-	  printf ("mips-mips-riscos%ssysv\n", argv[1]); exit (0);
+	  printf ("mips-mips-riscos%ssysv\\n", argv[1]); exit (0);
 	#endif
 	#if defined (SYSTYPE_SVR4)
-	  printf ("mips-mips-riscos%ssvr4\n", argv[1]); exit (0);
+	  printf ("mips-mips-riscos%ssvr4\\n", argv[1]); exit (0);
 	#endif
 	#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)
-	  printf ("mips-mips-riscos%sbsd\n", argv[1]); exit (0);
+	  printf ("mips-mips-riscos%sbsd\\n", argv[1]); exit (0);
 	#endif
 	#endif
 	  exit (-1);
 	}
 EOF
-	$CC_FOR_BUILD -o $dummy $dummy.c &&
-	  dummyarg=`echo "${UNAME_RELEASE}" | sed -n 's/\([0-9]*\).*/\1/p'` &&
-	  SYSTEM_NAME=`$dummy $dummyarg` &&
+	$CC_FOR_BUILD -o "$dummy" "$dummy.c" &&
+	  dummyarg=`echo "$UNAME_RELEASE" | sed -n 's/\([0-9]*\).*/\1/p'` &&
+	  SYSTEM_NAME=`"$dummy" "$dummyarg"` &&
 	    { echo "$SYSTEM_NAME"; exit; }
-	echo mips-mips-riscos${UNAME_RELEASE}
+	echo mips-mips-riscos"$UNAME_RELEASE"
 	exit ;;
     Motorola:PowerMAX_OS:*:*)
 	echo powerpc-motorola-powermax
@@ -503,17 +536,17 @@ EOF
     AViiON:dgux:*:*)
 	# DG/UX returns AViiON for all architectures
 	UNAME_PROCESSOR=`/usr/bin/uname -p`
-	if [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]
+	if [ "$UNAME_PROCESSOR" = mc88100 ] || [ "$UNAME_PROCESSOR" = mc88110 ]
 	then
-	    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \
-	       [ ${TARGET_BINARY_INTERFACE}x = x ]
+	    if [ "$TARGET_BINARY_INTERFACE"x = m88kdguxelfx ] || \
+	       [ "$TARGET_BINARY_INTERFACE"x = x ]
 	    then
-		echo m88k-dg-dgux${UNAME_RELEASE}
+		echo m88k-dg-dgux"$UNAME_RELEASE"
 	    else
-		echo m88k-dg-dguxbcs${UNAME_RELEASE}
+		echo m88k-dg-dguxbcs"$UNAME_RELEASE"
 	    fi
 	else
-	    echo i586-dg-dgux${UNAME_RELEASE}
+	    echo i586-dg-dgux"$UNAME_RELEASE"
 	fi
 	exit ;;
     M88*:DolphinOS:*:*)	# DolphinOS (SVR3)
@@ -530,7 +563,7 @@ EOF
 	echo m68k-tektronix-bsd
 	exit ;;
     *:IRIX*:*:*)
-	echo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`
+	echo mips-sgi-irix"`echo "$UNAME_RELEASE"|sed -e 's/-/_/g'`"
 	exit ;;
     ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.
 	echo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id
@@ -542,14 +575,14 @@ EOF
 	if [ -x /usr/bin/oslevel ] ; then
 		IBM_REV=`/usr/bin/oslevel`
 	else
-		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+		IBM_REV="$UNAME_VERSION.$UNAME_RELEASE"
 	fi
-	echo ${UNAME_MACHINE}-ibm-aix${IBM_REV}
+	echo "$UNAME_MACHINE"-ibm-aix"$IBM_REV"
 	exit ;;
     *:AIX:2:3)
 	if grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then
-		eval $set_cc_for_build
-		sed 's/^		//' << EOF >$dummy.c
+		set_cc_for_build
+		sed 's/^		//' << EOF > "$dummy.c"
 		#include <sys/systemcfg.h>
 
 		main()
@@ -560,7 +593,7 @@ EOF
 			exit(0);
 			}
 EOF
-		if $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`
+		if $CC_FOR_BUILD -o "$dummy" "$dummy.c" && SYSTEM_NAME=`"$dummy"`
 		then
 			echo "$SYSTEM_NAME"
 		else
@@ -574,26 +607,27 @@ EOF
 	exit ;;
     *:AIX:*:[4567])
 	IBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`
-	if /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then
+	if /usr/sbin/lsattr -El "$IBM_CPU_ID" | grep ' POWER' >/dev/null 2>&1; then
 		IBM_ARCH=rs6000
 	else
 		IBM_ARCH=powerpc
 	fi
-	if [ -x /usr/bin/oslevel ] ; then
-		IBM_REV=`/usr/bin/oslevel`
+	if [ -x /usr/bin/lslpp ] ; then
+		IBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |
+			   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`
 	else
-		IBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}
+		IBM_REV="$UNAME_VERSION.$UNAME_RELEASE"
 	fi
-	echo ${IBM_ARCH}-ibm-aix${IBM_REV}
+	echo "$IBM_ARCH"-ibm-aix"$IBM_REV"
 	exit ;;
     *:AIX:*:*)
 	echo rs6000-ibm-aix
 	exit ;;
-    ibmrt:4.4BSD:*|romp-ibm:BSD:*)
+    ibmrt:4.4BSD:*|romp-ibm:4.4BSD:*)
 	echo romp-ibm-bsd4.4
 	exit ;;
     ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and
-	echo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to
+	echo romp-ibm-bsd"$UNAME_RELEASE"   # 4.3 with uname added to
 	exit ;;                             # report: romp-ibm BSD 4.3
     *:BOSX:*:*)
 	echo rs6000-bull-bosx
@@ -608,28 +642,28 @@ EOF
 	echo m68k-hp-bsd4.4
 	exit ;;
     9000/[34678]??:HP-UX:*:*)
-	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
-	case "${UNAME_MACHINE}" in
-	    9000/31? )            HP_ARCH=m68000 ;;
-	    9000/[34]?? )         HP_ARCH=m68k ;;
+	HPUX_REV=`echo "$UNAME_RELEASE"|sed -e 's/[^.]*.[0B]*//'`
+	case "$UNAME_MACHINE" in
+	    9000/31?)            HP_ARCH=m68000 ;;
+	    9000/[34]??)         HP_ARCH=m68k ;;
 	    9000/[678][0-9][0-9])
 		if [ -x /usr/bin/getconf ]; then
 		    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`
 		    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`
-		    case "${sc_cpu_version}" in
-		      523) HP_ARCH="hppa1.0" ;; # CPU_PA_RISC1_0
-		      528) HP_ARCH="hppa1.1" ;; # CPU_PA_RISC1_1
+		    case "$sc_cpu_version" in
+		      523) HP_ARCH=hppa1.0 ;; # CPU_PA_RISC1_0
+		      528) HP_ARCH=hppa1.1 ;; # CPU_PA_RISC1_1
 		      532)                      # CPU_PA_RISC2_0
-			case "${sc_kernel_bits}" in
-			  32) HP_ARCH="hppa2.0n" ;;
-			  64) HP_ARCH="hppa2.0w" ;;
-			  '') HP_ARCH="hppa2.0" ;;   # HP-UX 10.20
+			case "$sc_kernel_bits" in
+			  32) HP_ARCH=hppa2.0n ;;
+			  64) HP_ARCH=hppa2.0w ;;
+			  '') HP_ARCH=hppa2.0 ;;   # HP-UX 10.20
 			esac ;;
 		    esac
 		fi
-		if [ "${HP_ARCH}" = "" ]; then
-		    eval $set_cc_for_build
-		    sed 's/^		//' << EOF >$dummy.c
+		if [ "$HP_ARCH" = "" ]; then
+		    set_cc_for_build
+		    sed 's/^		//' << EOF > "$dummy.c"
 
 		#define _HPUX_SOURCE
 		#include <stdlib.h>
@@ -662,13 +696,13 @@ EOF
 		    exit (0);
 		}
 EOF
-		    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`
+		    (CCOPTS="" $CC_FOR_BUILD -o "$dummy" "$dummy.c" 2>/dev/null) && HP_ARCH=`"$dummy"`
 		    test -z "$HP_ARCH" && HP_ARCH=hppa
 		fi ;;
 	esac
-	if [ ${HP_ARCH} = "hppa2.0w" ]
+	if [ "$HP_ARCH" = hppa2.0w ]
 	then
-	    eval $set_cc_for_build
+	    set_cc_for_build
 
 	    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating
 	    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler
@@ -679,23 +713,23 @@ EOF
 	    # $ CC_FOR_BUILD="cc +DA2.0w" ./config.guess
 	    # => hppa64-hp-hpux11.23
 
-	    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |
+	    if echo __LP64__ | (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) |
 		grep -q __LP64__
 	    then
-		HP_ARCH="hppa2.0w"
+		HP_ARCH=hppa2.0w
 	    else
-		HP_ARCH="hppa64"
+		HP_ARCH=hppa64
 	    fi
 	fi
-	echo ${HP_ARCH}-hp-hpux${HPUX_REV}
+	echo "$HP_ARCH"-hp-hpux"$HPUX_REV"
 	exit ;;
     ia64:HP-UX:*:*)
-	HPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`
-	echo ia64-hp-hpux${HPUX_REV}
+	HPUX_REV=`echo "$UNAME_RELEASE"|sed -e 's/[^.]*.[0B]*//'`
+	echo ia64-hp-hpux"$HPUX_REV"
 	exit ;;
     3050*:HI-UX:*:*)
-	eval $set_cc_for_build
-	sed 's/^	//' << EOF >$dummy.c
+	set_cc_for_build
+	sed 's/^	//' << EOF > "$dummy.c"
 	#include <unistd.h>
 	int
 	main ()
@@ -720,11 +754,11 @@ EOF
 	  exit (0);
 	}
 EOF
-	$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&
+	$CC_FOR_BUILD -o "$dummy" "$dummy.c" && SYSTEM_NAME=`"$dummy"` &&
 		{ echo "$SYSTEM_NAME"; exit; }
 	echo unknown-hitachi-hiuxwe2
 	exit ;;
-    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )
+    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:*)
 	echo hppa1.1-hp-bsd
 	exit ;;
     9000/8??:4.3bsd:*:*)
@@ -733,7 +767,7 @@ EOF
     *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)
 	echo hppa1.0-hp-mpeix
 	exit ;;
-    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )
+    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:*)
 	echo hppa1.1-hp-osf
 	exit ;;
     hp8??:OSF1:*:*)
@@ -741,9 +775,9 @@ EOF
 	exit ;;
     i*86:OSF1:*:*)
 	if [ -x /usr/sbin/sysversion ] ; then
-	    echo ${UNAME_MACHINE}-unknown-osf1mk
+	    echo "$UNAME_MACHINE"-unknown-osf1mk
 	else
-	    echo ${UNAME_MACHINE}-unknown-osf1
+	    echo "$UNAME_MACHINE"-unknown-osf1
 	fi
 	exit ;;
     parisc*:Lites*:*:*)
@@ -768,127 +802,120 @@ EOF
 	echo c4-convex-bsd
 	exit ;;
     CRAY*Y-MP:*:*:*)
-	echo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	echo ymp-cray-unicos"$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'
 	exit ;;
     CRAY*[A-Z]90:*:*:*)
-	echo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \
+	echo "$UNAME_MACHINE"-cray-unicos"$UNAME_RELEASE" \
 	| sed -e 's/CRAY.*\([A-Z]90\)/\1/' \
 	      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \
 	      -e 's/\.[^.]*$/.X/'
 	exit ;;
     CRAY*TS:*:*:*)
-	echo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	echo t90-cray-unicos"$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'
 	exit ;;
     CRAY*T3E:*:*:*)
-	echo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	echo alphaev5-cray-unicosmk"$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'
 	exit ;;
     CRAY*SV1:*:*:*)
-	echo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	echo sv1-cray-unicos"$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'
 	exit ;;
     *:UNICOS/mp:*:*)
-	echo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\.[^.]*$/.X/'
+	echo craynv-cray-unicosmp"$UNAME_RELEASE" | sed -e 's/\.[^.]*$/.X/'
 	exit ;;
     F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)
-	FUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`
-	FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
-	FUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`
+	FUJITSU_PROC=`uname -m | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz`
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
+	FUJITSU_REL=`echo "$UNAME_RELEASE" | sed -e 's/ /_/'`
 	echo "${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
 	exit ;;
     5000:UNIX_System_V:4.*:*)
-	FUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\///'`
-	FUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`
+	FUJITSU_SYS=`uname -p | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/\///'`
+	FUJITSU_REL=`echo "$UNAME_RELEASE" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz | sed -e 's/ /_/'`
 	echo "sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}"
 	exit ;;
     i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\ Embedded/OS:*:*)
-	echo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}
+	echo "$UNAME_MACHINE"-pc-bsdi"$UNAME_RELEASE"
 	exit ;;
     sparc*:BSD/OS:*:*)
-	echo sparc-unknown-bsdi${UNAME_RELEASE}
+	echo sparc-unknown-bsdi"$UNAME_RELEASE"
 	exit ;;
     *:BSD/OS:*:*)
-	echo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}
+	echo "$UNAME_MACHINE"-unknown-bsdi"$UNAME_RELEASE"
+	exit ;;
+    arm:FreeBSD:*:*)
+	UNAME_PROCESSOR=`uname -p`
+	set_cc_for_build
+	if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \
+	    | grep -q __ARM_PCS_VFP
+	then
+	    echo "${UNAME_PROCESSOR}"-unknown-freebsd"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`"-gnueabi
+	else
+	    echo "${UNAME_PROCESSOR}"-unknown-freebsd"`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`"-gnueabihf
+	fi
 	exit ;;
     *:FreeBSD:*:*)
 	UNAME_PROCESSOR=`/usr/bin/uname -p`
-	case ${UNAME_PROCESSOR} in
+	case "$UNAME_PROCESSOR" in
 	    amd64)
-		echo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
-	    *)
-		echo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;
+		UNAME_PROCESSOR=x86_64 ;;
+	    i386)
+		UNAME_PROCESSOR=i586 ;;
 	esac
+	echo "$UNAME_PROCESSOR"-unknown-freebsd"`echo "$UNAME_RELEASE"|sed -e 's/[-(].*//'`"
 	exit ;;
     i*:CYGWIN*:*)
-	echo ${UNAME_MACHINE}-pc-cygwin
+	echo "$UNAME_MACHINE"-pc-cygwin
 	exit ;;
     *:MINGW64*:*)
-	echo ${UNAME_MACHINE}-pc-mingw64
+	echo "$UNAME_MACHINE"-pc-mingw64
 	exit ;;
     *:MINGW*:*)
-	echo ${UNAME_MACHINE}-pc-mingw32
-	exit ;;
-    i*:MSYS*:*)
-	echo ${UNAME_MACHINE}-pc-msys
+	echo "$UNAME_MACHINE"-pc-mingw32
 	exit ;;
-    i*:windows32*:*)
-	# uname -m includes "-pc" on this system.
-	echo ${UNAME_MACHINE}-mingw32
+    *:MSYS*:*)
+	echo "$UNAME_MACHINE"-pc-msys
 	exit ;;
     i*:PW*:*)
-	echo ${UNAME_MACHINE}-pc-pw32
+	echo "$UNAME_MACHINE"-pc-pw32
 	exit ;;
     *:Interix*:*)
-	case ${UNAME_MACHINE} in
+	case "$UNAME_MACHINE" in
 	    x86)
-		echo i586-pc-interix${UNAME_RELEASE}
+		echo i586-pc-interix"$UNAME_RELEASE"
 		exit ;;
 	    authenticamd | genuineintel | EM64T)
-		echo x86_64-unknown-interix${UNAME_RELEASE}
+		echo x86_64-unknown-interix"$UNAME_RELEASE"
 		exit ;;
 	    IA64)
-		echo ia64-unknown-interix${UNAME_RELEASE}
+		echo ia64-unknown-interix"$UNAME_RELEASE"
 		exit ;;
 	esac ;;
-    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)
-	echo i${UNAME_MACHINE}-pc-mks
-	exit ;;
-    8664:Windows_NT:*)
-	echo x86_64-pc-mks
-	exit ;;
-    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)
-	# How do we know it's Interix rather than the generic POSIX subsystem?
-	# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we
-	# UNAME_MACHINE based on the output of uname instead of i386?
-	echo i586-pc-interix
-	exit ;;
     i*:UWIN*:*)
-	echo ${UNAME_MACHINE}-pc-uwin
+	echo "$UNAME_MACHINE"-pc-uwin
 	exit ;;
     amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)
-	echo x86_64-unknown-cygwin
-	exit ;;
-    p*:CYGWIN*:*)
-	echo powerpcle-unknown-cygwin
+	echo x86_64-pc-cygwin
 	exit ;;
     prep*:SunOS:5.*:*)
-	echo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`
+	echo powerpcle-unknown-solaris2"`echo "$UNAME_RELEASE"|sed -e 's/[^.]*//'`"
 	exit ;;
     *:GNU:*:*)
 	# the GNU system
-	echo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`
+	echo "`echo "$UNAME_MACHINE"|sed -e 's,[-/].*$,,'`-unknown-$LIBC`echo "$UNAME_RELEASE"|sed -e 's,/.*$,,'`"
 	exit ;;
     *:GNU/*:*:*)
 	# other systems with GNU libc and userland
-	echo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}
+	echo "$UNAME_MACHINE-unknown-`echo "$UNAME_SYSTEM" | sed 's,^[^/]*/,,' | tr "[:upper:]" "[:lower:]"``echo "$UNAME_RELEASE"|sed -e 's/[-(].*//'`-$LIBC"
 	exit ;;
-    i*86:Minix:*:*)
-	echo ${UNAME_MACHINE}-pc-minix
+    *:Minix:*:*)
+	echo "$UNAME_MACHINE"-unknown-minix
 	exit ;;
     aarch64:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     aarch64_be:Linux:*:*)
 	UNAME_MACHINE=aarch64_be
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     alpha:Linux:*:*)
 	case `sed -n '/^cpu model/s/^.*: \(.*\)/\1/p' < /proc/cpuinfo` in
@@ -901,129 +928,169 @@ EOF
 	  EV68*) UNAME_MACHINE=alphaev68 ;;
 	esac
 	objdump --private-headers /bin/sh | grep -q ld.so.1
-	if test "$?" = 0 ; then LIBC="gnulibc1" ; fi
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	if test "$?" = 0 ; then LIBC=gnulibc1 ; fi
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     arc:Linux:*:* | arceb:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     arm*:Linux:*:*)
-	eval $set_cc_for_build
+	set_cc_for_build
 	if echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \
 	    | grep -q __ARM_EABI__
 	then
-	    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	    echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	else
 	    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \
 		| grep -q __ARM_PCS_VFP
 	    then
-		echo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi
+		echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"eabi
 	    else
-		echo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf
+		echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"eabihf
 	    fi
 	fi
 	exit ;;
     avr32*:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     cris:Linux:*:*)
-	echo ${UNAME_MACHINE}-axis-linux-${LIBC}
+	echo "$UNAME_MACHINE"-axis-linux-"$LIBC"
 	exit ;;
     crisv32:Linux:*:*)
-	echo ${UNAME_MACHINE}-axis-linux-${LIBC}
+	echo "$UNAME_MACHINE"-axis-linux-"$LIBC"
+	exit ;;
+    e2k:Linux:*:*)
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     frv:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     hexagon:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     i*86:Linux:*:*)
-	echo ${UNAME_MACHINE}-pc-linux-${LIBC}
+	echo "$UNAME_MACHINE"-pc-linux-"$LIBC"
 	exit ;;
     ia64:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
+	exit ;;
+    k1om:Linux:*:*)
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     m32r*:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     m68*:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     mips:Linux:*:* | mips64:Linux:*:*)
-	eval $set_cc_for_build
-	sed 's/^	//' << EOF >$dummy.c
+	set_cc_for_build
+	IS_GLIBC=0
+	test x"${LIBC}" = xgnu && IS_GLIBC=1
+	sed 's/^	//' << EOF > "$dummy.c"
 	#undef CPU
-	#undef ${UNAME_MACHINE}
-	#undef ${UNAME_MACHINE}el
+	#undef mips
+	#undef mipsel
+	#undef mips64
+	#undef mips64el
+	#if ${IS_GLIBC} && defined(_ABI64)
+	LIBCABI=gnuabi64
+	#else
+	#if ${IS_GLIBC} && defined(_ABIN32)
+	LIBCABI=gnuabin32
+	#else
+	LIBCABI=${LIBC}
+	#endif
+	#endif
+
+	#if ${IS_GLIBC} && defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6
+	CPU=mipsisa64r6
+	#else
+	#if ${IS_GLIBC} && !defined(__mips64) && defined(__mips_isa_rev) && __mips_isa_rev>=6
+	CPU=mipsisa32r6
+	#else
+	#if defined(__mips64)
+	CPU=mips64
+	#else
+	CPU=mips
+	#endif
+	#endif
+	#endif
+
 	#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)
-	CPU=${UNAME_MACHINE}el
+	MIPS_ENDIAN=el
 	#else
 	#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)
-	CPU=${UNAME_MACHINE}
+	MIPS_ENDIAN=
 	#else
-	CPU=
+	MIPS_ENDIAN=
 	#endif
 	#endif
 EOF
-	eval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`
-	test x"${CPU}" != x && { echo "${CPU}-unknown-linux-${LIBC}"; exit; }
+	eval "`$CC_FOR_BUILD -E "$dummy.c" 2>/dev/null | grep '^CPU\|^MIPS_ENDIAN\|^LIBCABI'`"
+	test "x$CPU" != x && { echo "$CPU${MIPS_ENDIAN}-unknown-linux-$LIBCABI"; exit; }
 	;;
-    or1k:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+    mips64el:Linux:*:*)
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
+	exit ;;
+    openrisc*:Linux:*:*)
+	echo or1k-unknown-linux-"$LIBC"
 	exit ;;
-    or32:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+    or32:Linux:*:* | or1k*:Linux:*:*)
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     padre:Linux:*:*)
-	echo sparc-unknown-linux-${LIBC}
+	echo sparc-unknown-linux-"$LIBC"
 	exit ;;
     parisc64:Linux:*:* | hppa64:Linux:*:*)
-	echo hppa64-unknown-linux-${LIBC}
+	echo hppa64-unknown-linux-"$LIBC"
 	exit ;;
     parisc:Linux:*:* | hppa:Linux:*:*)
 	# Look for CPU level
 	case `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in
-	  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;
-	  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;
-	  *)    echo hppa-unknown-linux-${LIBC} ;;
+	  PA7*) echo hppa1.1-unknown-linux-"$LIBC" ;;
+	  PA8*) echo hppa2.0-unknown-linux-"$LIBC" ;;
+	  *)    echo hppa-unknown-linux-"$LIBC" ;;
 	esac
 	exit ;;
     ppc64:Linux:*:*)
-	echo powerpc64-unknown-linux-${LIBC}
+	echo powerpc64-unknown-linux-"$LIBC"
 	exit ;;
     ppc:Linux:*:*)
-	echo powerpc-unknown-linux-${LIBC}
+	echo powerpc-unknown-linux-"$LIBC"
 	exit ;;
     ppc64le:Linux:*:*)
-	echo powerpc64le-unknown-linux-${LIBC}
+	echo powerpc64le-unknown-linux-"$LIBC"
 	exit ;;
     ppcle:Linux:*:*)
-	echo powerpcle-unknown-linux-${LIBC}
+	echo powerpcle-unknown-linux-"$LIBC"
+	exit ;;
+    riscv32:Linux:*:* | riscv64:Linux:*:*)
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     s390:Linux:*:* | s390x:Linux:*:*)
-	echo ${UNAME_MACHINE}-ibm-linux-${LIBC}
+	echo "$UNAME_MACHINE"-ibm-linux-"$LIBC"
 	exit ;;
     sh64*:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     sh*:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     sparc:Linux:*:* | sparc64:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     tile*:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     vax:Linux:*:*)
-	echo ${UNAME_MACHINE}-dec-linux-${LIBC}
+	echo "$UNAME_MACHINE"-dec-linux-"$LIBC"
 	exit ;;
     x86_64:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-pc-linux-"$LIBC"
 	exit ;;
     xtensa*:Linux:*:*)
-	echo ${UNAME_MACHINE}-unknown-linux-${LIBC}
+	echo "$UNAME_MACHINE"-unknown-linux-"$LIBC"
 	exit ;;
     i*86:DYNIX/ptx:4*:*)
 	# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.
@@ -1037,34 +1104,34 @@ EOF
 	# I am not positive that other SVR4 systems won't match this,
 	# I just have to hope.  -- rms.
 	# Use sysv4.2uw... so that sysv4* matches it.
-	echo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}
+	echo "$UNAME_MACHINE"-pc-sysv4.2uw"$UNAME_VERSION"
 	exit ;;
     i*86:OS/2:*:*)
 	# If we were able to find `uname', then EMX Unix compatibility
 	# is probably installed.
-	echo ${UNAME_MACHINE}-pc-os2-emx
+	echo "$UNAME_MACHINE"-pc-os2-emx
 	exit ;;
     i*86:XTS-300:*:STOP)
-	echo ${UNAME_MACHINE}-unknown-stop
+	echo "$UNAME_MACHINE"-unknown-stop
 	exit ;;
     i*86:atheos:*:*)
-	echo ${UNAME_MACHINE}-unknown-atheos
+	echo "$UNAME_MACHINE"-unknown-atheos
 	exit ;;
     i*86:syllable:*:*)
-	echo ${UNAME_MACHINE}-pc-syllable
+	echo "$UNAME_MACHINE"-pc-syllable
 	exit ;;
     i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)
-	echo i386-unknown-lynxos${UNAME_RELEASE}
+	echo i386-unknown-lynxos"$UNAME_RELEASE"
 	exit ;;
     i*86:*DOS:*:*)
-	echo ${UNAME_MACHINE}-pc-msdosdjgpp
+	echo "$UNAME_MACHINE"-pc-msdosdjgpp
 	exit ;;
-    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)
-	UNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\/MP$//'`
+    i*86:*:4.*:*)
+	UNAME_REL=`echo "$UNAME_RELEASE" | sed 's/\/MP$//'`
 	if grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then
-		echo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}
+		echo "$UNAME_MACHINE"-univel-sysv"$UNAME_REL"
 	else
-		echo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}
+		echo "$UNAME_MACHINE"-pc-sysv"$UNAME_REL"
 	fi
 	exit ;;
     i*86:*:5:[678]*)
@@ -1074,12 +1141,12 @@ EOF
 	    *Pentium)	     UNAME_MACHINE=i586 ;;
 	    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;
 	esac
-	echo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}
+	echo "$UNAME_MACHINE-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}"
 	exit ;;
     i*86:*:3.2:*)
 	if test -f /usr/options/cb.name; then
 		UNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`
-		echo ${UNAME_MACHINE}-pc-isc$UNAME_REL
+		echo "$UNAME_MACHINE"-pc-isc"$UNAME_REL"
 	elif /bin/uname -X 2>/dev/null >/dev/null ; then
 		UNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`
 		(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486
@@ -1089,9 +1156,9 @@ EOF
 			&& UNAME_MACHINE=i686
 		(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \
 			&& UNAME_MACHINE=i686
-		echo ${UNAME_MACHINE}-pc-sco$UNAME_REL
+		echo "$UNAME_MACHINE"-pc-sco"$UNAME_REL"
 	else
-		echo ${UNAME_MACHINE}-pc-sysv32
+		echo "$UNAME_MACHINE"-pc-sysv32
 	fi
 	exit ;;
     pc:*:*:*)
@@ -1099,7 +1166,7 @@ EOF
 	# uname -m prints for DJGPP always 'pc', but it prints nothing about
 	# the processor, so we play safe by assuming i586.
 	# Note: whatever this is, it MUST be the same as what config.sub
-	# prints for the "djgpp" host, or else GDB configury will decide that
+	# prints for the "djgpp" host, or else GDB configure will decide that
 	# this is a cross-build.
 	echo i586-pc-msdosdjgpp
 	exit ;;
@@ -1111,9 +1178,9 @@ EOF
 	exit ;;
     i860:*:4.*:*) # i860-SVR4
 	if grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then
-	  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4
+	  echo i860-stardent-sysv"$UNAME_RELEASE" # Stardent Vistra i860-SVR4
 	else # Add other i860-SVR4 vendors below as they are discovered.
-	  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4
+	  echo i860-unknown-sysv"$UNAME_RELEASE"  # Unknown i860-SVR4
 	fi
 	exit ;;
     mini*:CTIX:SYS*5:*)
@@ -1133,9 +1200,9 @@ EOF
 	test -r /etc/.relid \
 	&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
 	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
-	  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	  && { echo i486-ncr-sysv4.3"$OS_REL"; exit; }
 	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
-	  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+	  && { echo i586-ncr-sysv4.3"$OS_REL"; exit; } ;;
     3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)
 	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
 	  && { echo i486-ncr-sysv4; exit; } ;;
@@ -1144,28 +1211,28 @@ EOF
 	test -r /etc/.relid \
 	    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \([0-9][0-9]\).*/\1/p' < /etc/.relid`
 	/bin/uname -p 2>/dev/null | grep 86 >/dev/null \
-	    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }
+	    && { echo i486-ncr-sysv4.3"$OS_REL"; exit; }
 	/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \
-	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }
+	    && { echo i586-ncr-sysv4.3"$OS_REL"; exit; }
 	/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \
-	    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;
+	    && { echo i586-ncr-sysv4.3"$OS_REL"; exit; } ;;
     m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)
-	echo m68k-unknown-lynxos${UNAME_RELEASE}
+	echo m68k-unknown-lynxos"$UNAME_RELEASE"
 	exit ;;
     mc68030:UNIX_System_V:4.*:*)
 	echo m68k-atari-sysv4
 	exit ;;
     TSUNAMI:LynxOS:2.*:*)
-	echo sparc-unknown-lynxos${UNAME_RELEASE}
+	echo sparc-unknown-lynxos"$UNAME_RELEASE"
 	exit ;;
     rs6000:LynxOS:2.*:*)
-	echo rs6000-unknown-lynxos${UNAME_RELEASE}
+	echo rs6000-unknown-lynxos"$UNAME_RELEASE"
 	exit ;;
     PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)
-	echo powerpc-unknown-lynxos${UNAME_RELEASE}
+	echo powerpc-unknown-lynxos"$UNAME_RELEASE"
 	exit ;;
     SM[BE]S:UNIX_SV:*:*)
-	echo mips-dde-sysv${UNAME_RELEASE}
+	echo mips-dde-sysv"$UNAME_RELEASE"
 	exit ;;
     RM*:ReliantUNIX-*:*:*)
 	echo mips-sni-sysv4
@@ -1176,7 +1243,7 @@ EOF
     *:SINIX-*:*:*)
 	if uname -p 2>/dev/null >/dev/null ; then
 		UNAME_MACHINE=`(uname -p) 2>/dev/null`
-		echo ${UNAME_MACHINE}-sni-sysv4
+		echo "$UNAME_MACHINE"-sni-sysv4
 	else
 		echo ns32k-sni-sysv
 	fi
@@ -1196,23 +1263,23 @@ EOF
 	exit ;;
     i*86:VOS:*:*)
 	# From Paul.Green@stratus.com.
-	echo ${UNAME_MACHINE}-stratus-vos
+	echo "$UNAME_MACHINE"-stratus-vos
 	exit ;;
     *:VOS:*:*)
 	# From Paul.Green@stratus.com.
 	echo hppa1.1-stratus-vos
 	exit ;;
     mc68*:A/UX:*:*)
-	echo m68k-apple-aux${UNAME_RELEASE}
+	echo m68k-apple-aux"$UNAME_RELEASE"
 	exit ;;
     news*:NEWS-OS:6*:*)
 	echo mips-sony-newsos6
 	exit ;;
     R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)
 	if [ -d /usr/nec ]; then
-		echo mips-nec-sysv${UNAME_RELEASE}
+		echo mips-nec-sysv"$UNAME_RELEASE"
 	else
-		echo mips-unknown-sysv${UNAME_RELEASE}
+		echo mips-unknown-sysv"$UNAME_RELEASE"
 	fi
 	exit ;;
     BeBox:BeOS:*:*)	# BeOS running on hardware made by Be, PPC only.
@@ -1231,67 +1298,94 @@ EOF
 	echo x86_64-unknown-haiku
 	exit ;;
     SX-4:SUPER-UX:*:*)
-	echo sx4-nec-superux${UNAME_RELEASE}
+	echo sx4-nec-superux"$UNAME_RELEASE"
 	exit ;;
     SX-5:SUPER-UX:*:*)
-	echo sx5-nec-superux${UNAME_RELEASE}
+	echo sx5-nec-superux"$UNAME_RELEASE"
 	exit ;;
     SX-6:SUPER-UX:*:*)
-	echo sx6-nec-superux${UNAME_RELEASE}
+	echo sx6-nec-superux"$UNAME_RELEASE"
 	exit ;;
     SX-7:SUPER-UX:*:*)
-	echo sx7-nec-superux${UNAME_RELEASE}
+	echo sx7-nec-superux"$UNAME_RELEASE"
 	exit ;;
     SX-8:SUPER-UX:*:*)
-	echo sx8-nec-superux${UNAME_RELEASE}
+	echo sx8-nec-superux"$UNAME_RELEASE"
 	exit ;;
     SX-8R:SUPER-UX:*:*)
-	echo sx8r-nec-superux${UNAME_RELEASE}
+	echo sx8r-nec-superux"$UNAME_RELEASE"
+	exit ;;
+    SX-ACE:SUPER-UX:*:*)
+	echo sxace-nec-superux"$UNAME_RELEASE"
 	exit ;;
     Power*:Rhapsody:*:*)
-	echo powerpc-apple-rhapsody${UNAME_RELEASE}
+	echo powerpc-apple-rhapsody"$UNAME_RELEASE"
 	exit ;;
     *:Rhapsody:*:*)
-	echo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}
+	echo "$UNAME_MACHINE"-apple-rhapsody"$UNAME_RELEASE"
 	exit ;;
     *:Darwin:*:*)
-	UNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown
-	eval $set_cc_for_build
-	if test "$UNAME_PROCESSOR" = unknown ; then
-	    UNAME_PROCESSOR=powerpc
+	UNAME_PROCESSOR=`uname -p`
+	case $UNAME_PROCESSOR in
+	    unknown) UNAME_PROCESSOR=powerpc ;;
+	esac
+	if command -v xcode-select > /dev/null 2> /dev/null && \
+		! xcode-select --print-path > /dev/null 2> /dev/null ; then
+	    # Avoid executing cc if there is no toolchain installed as
+	    # cc will be a stub that puts up a graphical alert
+	    # prompting the user to install developer tools.
+	    CC_FOR_BUILD=no_compiler_found
+	else
+	    set_cc_for_build
 	fi
-	if [ "$CC_FOR_BUILD" != 'no_compiler_found' ]; then
+	if [ "$CC_FOR_BUILD" != no_compiler_found ]; then
 	    if (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \
-		(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \
-		grep IS_64BIT_ARCH >/dev/null
+		   (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		   grep IS_64BIT_ARCH >/dev/null
 	    then
 		case $UNAME_PROCESSOR in
 		    i386) UNAME_PROCESSOR=x86_64 ;;
 		    powerpc) UNAME_PROCESSOR=powerpc64 ;;
 		esac
 	    fi
+	    # On 10.4-10.6 one might compile for PowerPC via gcc -arch ppc
+	    if (echo '#ifdef __POWERPC__'; echo IS_PPC; echo '#endif') | \
+		   (CCOPTS="" $CC_FOR_BUILD -E - 2>/dev/null) | \
+		   grep IS_PPC >/dev/null
+	    then
+		UNAME_PROCESSOR=powerpc
+	    fi
+	elif test "$UNAME_PROCESSOR" = i386 ; then
+	    # uname -m returns i386 or x86_64
+	    UNAME_PROCESSOR=$UNAME_MACHINE
 	fi
-	echo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}
+	echo "$UNAME_PROCESSOR"-apple-darwin"$UNAME_RELEASE"
 	exit ;;
     *:procnto*:*:* | *:QNX:[0123456789]*:*)
 	UNAME_PROCESSOR=`uname -p`
-	if test "$UNAME_PROCESSOR" = "x86"; then
+	if test "$UNAME_PROCESSOR" = x86; then
 		UNAME_PROCESSOR=i386
 		UNAME_MACHINE=pc
 	fi
-	echo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}
+	echo "$UNAME_PROCESSOR"-"$UNAME_MACHINE"-nto-qnx"$UNAME_RELEASE"
 	exit ;;
     *:QNX:*:4*)
 	echo i386-pc-qnx
 	exit ;;
-    NEO-?:NONSTOP_KERNEL:*:*)
-	echo neo-tandem-nsk${UNAME_RELEASE}
+    NEO-*:NONSTOP_KERNEL:*:*)
+	echo neo-tandem-nsk"$UNAME_RELEASE"
 	exit ;;
     NSE-*:NONSTOP_KERNEL:*:*)
-	echo nse-tandem-nsk${UNAME_RELEASE}
+	echo nse-tandem-nsk"$UNAME_RELEASE"
 	exit ;;
-    NSR-?:NONSTOP_KERNEL:*:*)
-	echo nsr-tandem-nsk${UNAME_RELEASE}
+    NSR-*:NONSTOP_KERNEL:*:*)
+	echo nsr-tandem-nsk"$UNAME_RELEASE"
+	exit ;;
+    NSV-*:NONSTOP_KERNEL:*:*)
+	echo nsv-tandem-nsk"$UNAME_RELEASE"
+	exit ;;
+    NSX-*:NONSTOP_KERNEL:*:*)
+	echo nsx-tandem-nsk"$UNAME_RELEASE"
 	exit ;;
     *:NonStop-UX:*:*)
 	echo mips-compaq-nonstopux
@@ -1300,18 +1394,19 @@ EOF
 	echo bs2000-siemens-sysv
 	exit ;;
     DS/*:UNIX_System_V:*:*)
-	echo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}
+	echo "$UNAME_MACHINE"-"$UNAME_SYSTEM"-"$UNAME_RELEASE"
 	exit ;;
     *:Plan9:*:*)
 	# "uname -m" is not consistent, so use $cputype instead. 386
 	# is converted to i386 for consistency with other x86
 	# operating systems.
-	if test "$cputype" = "386"; then
+	# shellcheck disable=SC2154
+	if test "$cputype" = 386; then
 	    UNAME_MACHINE=i386
 	else
 	    UNAME_MACHINE="$cputype"
 	fi
-	echo ${UNAME_MACHINE}-unknown-plan9
+	echo "$UNAME_MACHINE"-unknown-plan9
 	exit ;;
     *:TOPS-10:*:*)
 	echo pdp10-unknown-tops10
@@ -1332,14 +1427,14 @@ EOF
 	echo pdp10-unknown-its
 	exit ;;
     SEI:*:*:SEIUX)
-	echo mips-sei-seiux${UNAME_RELEASE}
+	echo mips-sei-seiux"$UNAME_RELEASE"
 	exit ;;
     *:DragonFly:*:*)
-	echo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`
+	echo "$UNAME_MACHINE"-unknown-dragonfly"`echo "$UNAME_RELEASE"|sed -e 's/[-(].*//'`"
 	exit ;;
     *:*VMS:*:*)
 	UNAME_MACHINE=`(uname -p) 2>/dev/null`
-	case "${UNAME_MACHINE}" in
+	case "$UNAME_MACHINE" in
 	    A*) echo alpha-dec-vms ; exit ;;
 	    I*) echo ia64-dec-vms ; exit ;;
 	    V*) echo vax-dec-vms ; exit ;;
@@ -1348,24 +1443,39 @@ EOF
 	echo i386-pc-xenix
 	exit ;;
     i*86:skyos:*:*)
-	echo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'
+	echo "$UNAME_MACHINE"-pc-skyos"`echo "$UNAME_RELEASE" | sed -e 's/ .*$//'`"
 	exit ;;
     i*86:rdos:*:*)
-	echo ${UNAME_MACHINE}-pc-rdos
+	echo "$UNAME_MACHINE"-pc-rdos
 	exit ;;
     i*86:AROS:*:*)
-	echo ${UNAME_MACHINE}-pc-aros
+	echo "$UNAME_MACHINE"-pc-aros
 	exit ;;
     x86_64:VMkernel:*:*)
-	echo ${UNAME_MACHINE}-unknown-esx
+	echo "$UNAME_MACHINE"-unknown-esx
+	exit ;;
+    amd64:Isilon\ OneFS:*:*)
+	echo x86_64-unknown-onefs
+	exit ;;
+    *:Unleashed:*:*)
+	echo "$UNAME_MACHINE"-unknown-unleashed"$UNAME_RELEASE"
 	exit ;;
 esac
 
-eval $set_cc_for_build
-cat >$dummy.c <<EOF
+# No uname command or uname output not recognized.
+set_cc_for_build
+cat > "$dummy.c" <<EOF
 #ifdef _SEQUENT_
-# include <sys/types.h>
-# include <sys/utsname.h>
+#include <sys/types.h>
+#include <sys/utsname.h>
+#endif
+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)
+#if defined (vax) || defined (__vax) || defined (__vax__) || defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)
+#include <signal.h>
+#if defined(_SIZE_T_) || defined(SIGLOST)
+#include <sys/utsname.h>
+#endif
+#endif
 #endif
 main ()
 {
@@ -1378,20 +1488,12 @@ main ()
 #include <sys/param.h>
   printf ("m68k-sony-newsos%s\n",
 #ifdef NEWSOS4
-	"4"
+  "4"
 #else
-	""
-#endif
-	); exit (0);
+  ""
 #endif
+  ); exit (0);
 #endif
-
-#if defined (__arm) && defined (__acorn) && defined (__unix)
-  printf ("arm-acorn-riscix\n"); exit (0);
-#endif
-
-#if defined (hp300) && !defined (hpux)
-  printf ("m68k-hp-bsd\n"); exit (0);
 #endif
 
 #if defined (NeXT)
@@ -1433,39 +1535,54 @@ main ()
 #endif
 
 #if defined (_SEQUENT_)
-    struct utsname un;
-
-    uname(&un);
-
-    if (strncmp(un.version, "V2", 2) == 0) {
-	printf ("i386-sequent-ptx2\n"); exit (0);
-    }
-    if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
-	printf ("i386-sequent-ptx1\n"); exit (0);
-    }
-    printf ("i386-sequent-ptx\n"); exit (0);
+  struct utsname un;
 
+  uname(&un);
+  if (strncmp(un.version, "V2", 2) == 0) {
+    printf ("i386-sequent-ptx2\n"); exit (0);
+  }
+  if (strncmp(un.version, "V1", 2) == 0) { /* XXX is V1 correct? */
+    printf ("i386-sequent-ptx1\n"); exit (0);
+  }
+  printf ("i386-sequent-ptx\n"); exit (0);
 #endif
 
 #if defined (vax)
-# if !defined (ultrix)
-#  include <sys/param.h>
-#  if defined (BSD)
-#   if BSD == 43
-      printf ("vax-dec-bsd4.3\n"); exit (0);
-#   else
-#    if BSD == 199006
-      printf ("vax-dec-bsd4.3reno\n"); exit (0);
-#    else
-      printf ("vax-dec-bsd\n"); exit (0);
-#    endif
-#   endif
-#  else
-    printf ("vax-dec-bsd\n"); exit (0);
-#  endif
-# else
-    printf ("vax-dec-ultrix\n"); exit (0);
-# endif
+#if !defined (ultrix)
+#include <sys/param.h>
+#if defined (BSD)
+#if BSD == 43
+  printf ("vax-dec-bsd4.3\n"); exit (0);
+#else
+#if BSD == 199006
+  printf ("vax-dec-bsd4.3reno\n"); exit (0);
+#else
+  printf ("vax-dec-bsd\n"); exit (0);
+#endif
+#endif
+#else
+  printf ("vax-dec-bsd\n"); exit (0);
+#endif
+#else
+#if defined(_SIZE_T_) || defined(SIGLOST)
+  struct utsname un;
+  uname (&un);
+  printf ("vax-dec-ultrix%s\n", un.release); exit (0);
+#else
+  printf ("vax-dec-ultrix\n"); exit (0);
+#endif
+#endif
+#endif
+#if defined(ultrix) || defined(_ultrix) || defined(__ultrix) || defined(__ultrix__)
+#if defined(mips) || defined(__mips) || defined(__mips__) || defined(MIPS) || defined(__MIPS__)
+#if defined(_SIZE_T_) || defined(SIGLOST)
+  struct utsname *un;
+  uname (&un);
+  printf ("mips-dec-ultrix%s\n", un.release); exit (0);
+#else
+  printf ("mips-dec-ultrix\n"); exit (0);
+#endif
+#endif
 #endif
 
 #if defined (alliant) && defined (i860)
@@ -1476,54 +1593,38 @@ main ()
 }
 EOF
 
-$CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null && SYSTEM_NAME=`$dummy` &&
+$CC_FOR_BUILD -o "$dummy" "$dummy.c" 2>/dev/null && SYSTEM_NAME=`$dummy` &&
 	{ echo "$SYSTEM_NAME"; exit; }
 
 # Apollos put the system type in the environment.
+test -d /usr/apollo && { echo "$ISP-apollo-$SYSTYPE"; exit; }
 
-test -d /usr/apollo && { echo ${ISP}-apollo-${SYSTYPE}; exit; }
+echo "$0: unable to guess system type" >&2
 
-# Convex versions that predate uname can use getsysinfo(1)
+case "$UNAME_MACHINE:$UNAME_SYSTEM" in
+    mips:Linux | mips64:Linux)
+	# If we got here on MIPS GNU/Linux, output extra information.
+	cat >&2 <<EOF
 
-if [ -x /usr/convex/getsysinfo ]
-then
-    case `getsysinfo -f cpu_type` in
-    c1*)
-	echo c1-convex-bsd
-	exit ;;
-    c2*)
-	if getsysinfo -f scalar_acc
-	then echo c32-convex-bsd
-	else echo c2-convex-bsd
-	fi
-	exit ;;
-    c34*)
-	echo c34-convex-bsd
-	exit ;;
-    c38*)
-	echo c38-convex-bsd
-	exit ;;
-    c4*)
-	echo c4-convex-bsd
-	exit ;;
-    esac
-fi
+NOTE: MIPS GNU/Linux systems require a C compiler to fully recognize
+the system type. Please install a C compiler and try again.
+EOF
+	;;
+esac
 
 cat >&2 <<EOF
-$0: unable to guess system type
 
-This script, last modified $timestamp, has failed to recognize
-the operating system you are using. It is advised that you
-download the most up to date version of the config scripts from
+This script (version $timestamp), has failed to recognize the
+operating system you are using. If your script is old, overwrite *all*
+copies of config.guess and config.sub with the latest versions from:
 
-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD
+  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess
 and
-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+  https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub
 
-If the version you run ($0) is already up to date, please
-send the following data and any information you think might be
-pertinent to <config-patches@gnu.org> in order to provide the needed
-information to handle your system.
+If $0 has already been updated, send the following data and any
+information you think might be pertinent to config-patches@gnu.org to
+provide the necessary information to handle your system.
 
 config.guess timestamp = $timestamp
 
@@ -1542,16 +1643,16 @@ hostinfo               = `(hostinfo) 2>/dev/null`
 /usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`
 /usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`
 
-UNAME_MACHINE = ${UNAME_MACHINE}
-UNAME_RELEASE = ${UNAME_RELEASE}
-UNAME_SYSTEM  = ${UNAME_SYSTEM}
-UNAME_VERSION = ${UNAME_VERSION}
+UNAME_MACHINE = "$UNAME_MACHINE"
+UNAME_RELEASE = "$UNAME_RELEASE"
+UNAME_SYSTEM  = "$UNAME_SYSTEM"
+UNAME_VERSION = "$UNAME_VERSION"
 EOF
 
 exit 1
 
 # Local variables:
-# eval: (add-hook 'write-file-hooks 'time-stamp)
+# eval: (add-hook 'before-save-hook 'time-stamp)
 # time-stamp-start: "timestamp='"
 # time-stamp-format: "%:y-%02m-%02d"
 # time-stamp-end: "'"
diff --git a/libsodium/build-aux/config.sub b/libsodium/build-aux/config.sub
old mode 100755
new mode 100644
index 9633db7..5b158ac
--- a/libsodium/build-aux/config.sub
+++ b/libsodium/build-aux/config.sub
@@ -1,8 +1,8 @@
 #! /bin/sh
 # Configuration validation subroutine script.
-#   Copyright 1992-2013 Free Software Foundation, Inc.
+#   Copyright 1992-2019 Free Software Foundation, Inc.
 
-timestamp='2013-08-10'
+timestamp='2019-05-23'
 
 # This file is free software; you can redistribute it and/or modify it
 # under the terms of the GNU General Public License as published by
@@ -15,7 +15,7 @@ timestamp='2013-08-10'
 # General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with this program; if not, see <http://www.gnu.org/licenses/>.
+# along with this program; if not, see <https://www.gnu.org/licenses/>.
 #
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
@@ -25,7 +25,7 @@ timestamp='2013-08-10'
 # of the GNU General Public License, version 3 ("GPLv3").
 
 
-# Please send patches with a ChangeLog entry to config-patches@gnu.org.
+# Please send patches to <config-patches@gnu.org>.
 #
 # Configuration subroutine to validate and canonicalize a configuration type.
 # Supply the specified configuration type as an argument.
@@ -33,7 +33,7 @@ timestamp='2013-08-10'
 # Otherwise, we print the canonical config type on stdout and succeed.
 
 # You can get the latest version of this script from:
-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD
+# https://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub
 
 # This file is supposed to be the same for all GNU packages
 # and recognize all the CPU types, system types and aliases
@@ -53,12 +53,11 @@ timestamp='2013-08-10'
 me=`echo "$0" | sed -e 's,.*/,,'`
 
 usage="\
-Usage: $0 [OPTION] CPU-MFR-OPSYS
-       $0 [OPTION] ALIAS
+Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS
 
 Canonicalize a configuration name.
 
-Operation modes:
+Options:
   -h, --help         print this help, then exit
   -t, --time-stamp   print date of last modification, then exit
   -v, --version      print version number, then exit
@@ -68,7 +67,7 @@ Report bugs and patches to <config-patches@gnu.org>."
 version="\
 GNU config.sub ($timestamp)
 
-Copyright 1992-2013 Free Software Foundation, Inc.
+Copyright 1992-2019 Free Software Foundation, Inc.
 
 This is free software; see the source for copying conditions.  There is NO
 warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE."
@@ -90,12 +89,12 @@ while test $# -gt 0 ; do
     - )	# Use stdin as input.
        break ;;
     -* )
-       echo "$me: invalid option $1$help"
+       echo "$me: invalid option $1$help" >&2
        exit 1 ;;
 
     *local*)
        # First pass through any local machine types.
-       echo $1
+       echo "$1"
        exit ;;
 
     * )
@@ -111,1209 +110,1167 @@ case $# in
     exit 1;;
 esac
 
-# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).
-# Here we must recognize all the valid KERNEL-OS combinations.
-maybe_os=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\2/'`
-case $maybe_os in
-  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \
-  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \
-  knetbsd*-gnu* | netbsd*-gnu* | \
-  kopensolaris*-gnu* | \
-  storm-chaos* | os2-emx* | rtmk-nova*)
-    os=-$maybe_os
-    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`
-    ;;
-  android-linux)
-    os=-linux-android
-    basic_machine=`echo $1 | sed 's/^\(.*\)-\([^-]*-[^-]*\)$/\1/'`-unknown
-    ;;
-  *)
-    basic_machine=`echo $1 | sed 's/-[^-]*$//'`
-    if [ $basic_machine != $1 ]
-    then os=`echo $1 | sed 's/.*-/-/'`
-    else os=; fi
-    ;;
-esac
+# Split fields of configuration type
+# shellcheck disable=SC2162
+IFS="-" read field1 field2 field3 field4 <<EOF
+$1
+EOF
 
-### Let's recognize common machines as not being operating systems so
-### that things like config.sub decstation-3100 work.  We also
-### recognize some manufacturers as not being operating systems, so we
-### can provide default operating systems below.
-case $os in
-	-sun*os*)
-		# Prevent following clause from handling this invalid input.
-		;;
-	-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \
-	-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \
-	-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \
-	-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\
-	-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \
-	-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \
-	-apple | -axis | -knuth | -cray | -microblaze*)
-		os=
-		basic_machine=$1
-		;;
-	-bluegene*)
-		os=-cnk
-		;;
-	-sim | -cisco | -oki | -wec | -winbond)
-		os=
-		basic_machine=$1
-		;;
-	-scout)
-		;;
-	-wrs)
-		os=-vxworks
-		basic_machine=$1
-		;;
-	-chorusos*)
-		os=-chorusos
-		basic_machine=$1
-		;;
-	-chorusrdb)
-		os=-chorusrdb
-		basic_machine=$1
-		;;
-	-hiux*)
-		os=-hiuxwe2
-		;;
-	-sco6)
-		os=-sco5v6
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-sco5)
-		os=-sco3.2v5
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-sco4)
-		os=-sco3.2v4
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-sco3.2.[4-9]*)
-		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-sco3.2v[4-9]*)
-		# Don't forget version if it is 3.2v4 or newer.
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-sco5v6*)
-		# Don't forget version if it is 3.2v4 or newer.
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-sco*)
-		os=-sco3.2v2
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-udk*)
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-isc)
-		os=-isc2.2
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-clix*)
-		basic_machine=clipper-intergraph
-		;;
-	-isc*)
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`
-		;;
-	-lynx*178)
-		os=-lynxos178
-		;;
-	-lynx*5)
-		os=-lynxos5
-		;;
-	-lynx*)
-		os=-lynxos
+# Separate into logical components for further validation
+case $1 in
+	*-*-*-*-*)
+		echo Invalid configuration \`"$1"\': more than four components >&2
+		exit 1
 		;;
-	-ptx*)
-		basic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`
+	*-*-*-*)
+		basic_machine=$field1-$field2
+		os=$field3-$field4
 		;;
-	-windowsnt*)
-		os=`echo $os | sed -e 's/windowsnt/winnt/'`
+	*-*-*)
+		# Ambiguous whether COMPANY is present, or skipped and KERNEL-OS is two
+		# parts
+		maybe_os=$field2-$field3
+		case $maybe_os in
+			nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc \
+			| linux-newlib* | linux-musl* | linux-uclibc* | uclinux-uclibc* \
+			| uclinux-gnu* | kfreebsd*-gnu* | knetbsd*-gnu* | netbsd*-gnu* \
+			| netbsd*-eabi* | kopensolaris*-gnu* | cloudabi*-eabi* \
+			| storm-chaos* | os2-emx* | rtmk-nova*)
+				basic_machine=$field1
+				os=$maybe_os
+				;;
+			android-linux)
+				basic_machine=$field1-unknown
+				os=linux-android
+				;;
+			*)
+				basic_machine=$field1-$field2
+				os=$field3
+				;;
+		esac
 		;;
-	-psos*)
-		os=-psos
+	*-*)
+		# A lone config we happen to match not fitting any pattern
+		case $field1-$field2 in
+			decstation-3100)
+				basic_machine=mips-dec
+				os=
+				;;
+			*-*)
+				# Second component is usually, but not always the OS
+				case $field2 in
+					# Prevent following clause from handling this valid os
+					sun*os*)
+						basic_machine=$field1
+						os=$field2
+						;;
+					# Manufacturers
+					dec* | mips* | sequent* | encore* | pc533* | sgi* | sony* \
+					| att* | 7300* | 3300* | delta* | motorola* | sun[234]* \
+					| unicom* | ibm* | next | hp | isi* | apollo | altos* \
+					| convergent* | ncr* | news | 32* | 3600* | 3100* \
+					| hitachi* | c[123]* | convex* | sun | crds | omron* | dg \
+					| ultra | tti* | harris | dolphin | highlevel | gould \
+					| cbm | ns | masscomp | apple | axis | knuth | cray \
+					| microblaze* | sim | cisco \
+					| oki | wec | wrs | winbond)
+						basic_machine=$field1-$field2
+						os=
+						;;
+					*)
+						basic_machine=$field1
+						os=$field2
+						;;
+				esac
+			;;
+		esac
 		;;
-	-mint | -mint[0-9]*)
-		basic_machine=m68k-atari
-		os=-mint
+	*)
+		# Convert single-component short-hands not valid as part of
+		# multi-component configurations.
+		case $field1 in
+			386bsd)
+				basic_machine=i386-pc
+				os=bsd
+				;;
+			a29khif)
+				basic_machine=a29k-amd
+				os=udi
+				;;
+			adobe68k)
+				basic_machine=m68010-adobe
+				os=scout
+				;;
+			alliant)
+				basic_machine=fx80-alliant
+				os=
+				;;
+			altos | altos3068)
+				basic_machine=m68k-altos
+				os=
+				;;
+			am29k)
+				basic_machine=a29k-none
+				os=bsd
+				;;
+			amdahl)
+				basic_machine=580-amdahl
+				os=sysv
+				;;
+			amiga)
+				basic_machine=m68k-unknown
+				os=
+				;;
+			amigaos | amigados)
+				basic_machine=m68k-unknown
+				os=amigaos
+				;;
+			amigaunix | amix)
+				basic_machine=m68k-unknown
+				os=sysv4
+				;;
+			apollo68)
+				basic_machine=m68k-apollo
+				os=sysv
+				;;
+			apollo68bsd)
+				basic_machine=m68k-apollo
+				os=bsd
+				;;
+			aros)
+				basic_machine=i386-pc
+				os=aros
+				;;
+			aux)
+				basic_machine=m68k-apple
+				os=aux
+				;;
+			balance)
+				basic_machine=ns32k-sequent
+				os=dynix
+				;;
+			blackfin)
+				basic_machine=bfin-unknown
+				os=linux
+				;;
+			cegcc)
+				basic_machine=arm-unknown
+				os=cegcc
+				;;
+			convex-c1)
+				basic_machine=c1-convex
+				os=bsd
+				;;
+			convex-c2)
+				basic_machine=c2-convex
+				os=bsd
+				;;
+			convex-c32)
+				basic_machine=c32-convex
+				os=bsd
+				;;
+			convex-c34)
+				basic_machine=c34-convex
+				os=bsd
+				;;
+			convex-c38)
+				basic_machine=c38-convex
+				os=bsd
+				;;
+			cray)
+				basic_machine=j90-cray
+				os=unicos
+				;;
+			crds | unos)
+				basic_machine=m68k-crds
+				os=
+				;;
+			da30)
+				basic_machine=m68k-da30
+				os=
+				;;
+			decstation | pmax | pmin | dec3100 | decstatn)
+				basic_machine=mips-dec
+				os=
+				;;
+			delta88)
+				basic_machine=m88k-motorola
+				os=sysv3
+				;;
+			dicos)
+				basic_machine=i686-pc
+				os=dicos
+				;;
+			djgpp)
+				basic_machine=i586-pc
+				os=msdosdjgpp
+				;;
+			ebmon29k)
+				basic_machine=a29k-amd
+				os=ebmon
+				;;
+			es1800 | OSE68k | ose68k | ose | OSE)
+				basic_machine=m68k-ericsson
+				os=ose
+				;;
+			gmicro)
+				basic_machine=tron-gmicro
+				os=sysv
+				;;
+			go32)
+				basic_machine=i386-pc
+				os=go32
+				;;
+			h8300hms)
+				basic_machine=h8300-hitachi
+				os=hms
+				;;
+			h8300xray)
+				basic_machine=h8300-hitachi
+				os=xray
+				;;
+			h8500hms)
+				basic_machine=h8500-hitachi
+				os=hms
+				;;
+			harris)
+				basic_machine=m88k-harris
+				os=sysv3
+				;;
+			hp300)
+				basic_machine=m68k-hp
+				;;
+			hp300bsd)
+				basic_machine=m68k-hp
+				os=bsd
+				;;
+			hp300hpux)
+				basic_machine=m68k-hp
+				os=hpux
+				;;
+			hppaosf)
+				basic_machine=hppa1.1-hp
+				os=osf
+				;;
+			hppro)
+				basic_machine=hppa1.1-hp
+				os=proelf
+				;;
+			i386mach)
+				basic_machine=i386-mach
+				os=mach
+				;;
+			vsta)
+				basic_machine=i386-pc
+				os=vsta
+				;;
+			isi68 | isi)
+				basic_machine=m68k-isi
+				os=sysv
+				;;
+			m68knommu)
+				basic_machine=m68k-unknown
+				os=linux
+				;;
+			magnum | m3230)
+				basic_machine=mips-mips
+				os=sysv
+				;;
+			merlin)
+				basic_machine=ns32k-utek
+				os=sysv
+				;;
+			mingw64)
+				basic_machine=x86_64-pc
+				os=mingw64
+				;;
+			mingw32)
+				basic_machine=i686-pc
+				os=mingw32
+				;;
+			mingw32ce)
+				basic_machine=arm-unknown
+				os=mingw32ce
+				;;
+			monitor)
+				basic_machine=m68k-rom68k
+				os=coff
+				;;
+			morphos)
+				basic_machine=powerpc-unknown
+				os=morphos
+				;;
+			moxiebox)
+				basic_machine=moxie-unknown
+				os=moxiebox
+				;;
+			msdos)
+				basic_machine=i386-pc
+				os=msdos
+				;;
+			msys)
+				basic_machine=i686-pc
+				os=msys
+				;;
+			mvs)
+				basic_machine=i370-ibm
+				os=mvs
+				;;
+			nacl)
+				basic_machine=le32-unknown
+				os=nacl
+				;;
+			ncr3000)
+				basic_machine=i486-ncr
+				os=sysv4
+				;;
+			netbsd386)
+				basic_machine=i386-pc
+				os=netbsd
+				;;
+			netwinder)
+				basic_machine=armv4l-rebel
+				os=linux
+				;;
+			news | news700 | news800 | news900)
+				basic_machine=m68k-sony
+				os=newsos
+				;;
+			news1000)
+				basic_machine=m68030-sony
+				os=newsos
+				;;
+			necv70)
+				basic_machine=v70-nec
+				os=sysv
+				;;
+			nh3000)
+				basic_machine=m68k-harris
+				os=cxux
+				;;
+			nh[45]000)
+				basic_machine=m88k-harris
+				os=cxux
+				;;
+			nindy960)
+				basic_machine=i960-intel
+				os=nindy
+				;;
+			mon960)
+				basic_machine=i960-intel
+				os=mon960
+				;;
+			nonstopux)
+				basic_machine=mips-compaq
+				os=nonstopux
+				;;
+			os400)
+				basic_machine=powerpc-ibm
+				os=os400
+				;;
+			OSE68000 | ose68000)
+				basic_machine=m68000-ericsson
+				os=ose
+				;;
+			os68k)
+				basic_machine=m68k-none
+				os=os68k
+				;;
+			paragon)
+				basic_machine=i860-intel
+				os=osf
+				;;
+			parisc)
+				basic_machine=hppa-unknown
+				os=linux
+				;;
+			pw32)
+				basic_machine=i586-unknown
+				os=pw32
+				;;
+			rdos | rdos64)
+				basic_machine=x86_64-pc
+				os=rdos
+				;;
+			rdos32)
+				basic_machine=i386-pc
+				os=rdos
+				;;
+			rom68k)
+				basic_machine=m68k-rom68k
+				os=coff
+				;;
+			sa29200)
+				basic_machine=a29k-amd
+				os=udi
+				;;
+			sei)
+				basic_machine=mips-sei
+				os=seiux
+				;;
+			sequent)
+				basic_machine=i386-sequent
+				os=
+				;;
+			sps7)
+				basic_machine=m68k-bull
+				os=sysv2
+				;;
+			st2000)
+				basic_machine=m68k-tandem
+				os=
+				;;
+			stratus)
+				basic_machine=i860-stratus
+				os=sysv4
+				;;
+			sun2)
+				basic_machine=m68000-sun
+				os=
+				;;
+			sun2os3)
+				basic_machine=m68000-sun
+				os=sunos3
+				;;
+			sun2os4)
+				basic_machine=m68000-sun
+				os=sunos4
+				;;
+			sun3)
+				basic_machine=m68k-sun
+				os=
+				;;
+			sun3os3)
+				basic_machine=m68k-sun
+				os=sunos3
+				;;
+			sun3os4)
+				basic_machine=m68k-sun
+				os=sunos4
+				;;
+			sun4)
+				basic_machine=sparc-sun
+				os=
+				;;
+			sun4os3)
+				basic_machine=sparc-sun
+				os=sunos3
+				;;
+			sun4os4)
+				basic_machine=sparc-sun
+				os=sunos4
+				;;
+			sun4sol2)
+				basic_machine=sparc-sun
+				os=solaris2
+				;;
+			sun386 | sun386i | roadrunner)
+				basic_machine=i386-sun
+				os=
+				;;
+			sv1)
+				basic_machine=sv1-cray
+				os=unicos
+				;;
+			symmetry)
+				basic_machine=i386-sequent
+				os=dynix
+				;;
+			t3e)
+				basic_machine=alphaev5-cray
+				os=unicos
+				;;
+			t90)
+				basic_machine=t90-cray
+				os=unicos
+				;;
+			toad1)
+				basic_machine=pdp10-xkl
+				os=tops20
+				;;
+			tpf)
+				basic_machine=s390x-ibm
+				os=tpf
+				;;
+			udi29k)
+				basic_machine=a29k-amd
+				os=udi
+				;;
+			ultra3)
+				basic_machine=a29k-nyu
+				os=sym1
+				;;
+			v810 | necv810)
+				basic_machine=v810-nec
+				os=none
+				;;
+			vaxv)
+				basic_machine=vax-dec
+				os=sysv
+				;;
+			vms)
+				basic_machine=vax-dec
+				os=vms
+				;;
+			vxworks960)
+				basic_machine=i960-wrs
+				os=vxworks
+				;;
+			vxworks68)
+				basic_machine=m68k-wrs
+				os=vxworks
+				;;
+			vxworks29k)
+				basic_machine=a29k-wrs
+				os=vxworks
+				;;
+			xbox)
+				basic_machine=i686-pc
+				os=mingw32
+				;;
+			ymp)
+				basic_machine=ymp-cray
+				os=unicos
+				;;
+			*)
+				basic_machine=$1
+				os=
+				;;
+		esac
 		;;
 esac
 
-# Decode aliases for certain CPU-COMPANY combinations.
+# Decode 1-component or ad-hoc basic machines
 case $basic_machine in
-	# Recognize the basic CPU types without company name.
-	# Some are omitted here because they have special meanings below.
-	1750a | 580 \
-	| a29k \
-	| aarch64 | aarch64_be \
-	| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \
-	| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \
-	| am33_2.0 \
-	| arc | arceb \
-	| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \
-	| avr | avr32 \
-	| be32 | be64 \
-	| bfin \
-	| c4x | c8051 | clipper \
-	| d10v | d30v | dlx | dsp16xx \
-	| epiphany \
-	| fido | fr30 | frv \
-	| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
-	| hexagon \
-	| i370 | i860 | i960 | ia64 \
-	| ip2k | iq2000 \
-	| le32 | le64 \
-	| lm32 \
-	| m32c | m32r | m32rle | m68000 | m68k | m88k \
-	| maxq | mb | microblaze | microblazeel | mcore | mep | metag \
-	| mips | mipsbe | mipseb | mipsel | mipsle \
-	| mips16 \
-	| mips64 | mips64el \
-	| mips64octeon | mips64octeonel \
-	| mips64orion | mips64orionel \
-	| mips64r5900 | mips64r5900el \
-	| mips64vr | mips64vrel \
-	| mips64vr4100 | mips64vr4100el \
-	| mips64vr4300 | mips64vr4300el \
-	| mips64vr5000 | mips64vr5000el \
-	| mips64vr5900 | mips64vr5900el \
-	| mipsisa32 | mipsisa32el \
-	| mipsisa32r2 | mipsisa32r2el \
-	| mipsisa64 | mipsisa64el \
-	| mipsisa64r2 | mipsisa64r2el \
-	| mipsisa64sb1 | mipsisa64sb1el \
-	| mipsisa64sr71k | mipsisa64sr71kel \
-	| mipsr5900 | mipsr5900el \
-	| mipstx39 | mipstx39el \
-	| mn10200 | mn10300 \
-	| moxie \
-	| mt \
-	| msp430 \
-	| nds32 | nds32le | nds32be \
-	| nios | nios2 | nios2eb | nios2el \
-	| ns16k | ns32k \
-	| open8 \
-	| or1k | or32 \
-	| pdp10 | pdp11 | pj | pjl \
-	| powerpc | powerpc64 | powerpc64le | powerpcle \
-	| pyramid \
-	| rl78 | rx \
-	| score \
-	| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[34]eb | sheb | shbe | shle | sh[1234]le | sh3ele \
-	| sh64 | sh64le \
-	| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \
-	| sparcv8 | sparcv9 | sparcv9b | sparcv9v \
-	| spu \
-	| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \
-	| ubicom32 \
-	| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \
-	| we32k \
-	| x86 | xc16x | xstormy16 | xtensa \
-	| z8k | z80)
-		basic_machine=$basic_machine-unknown
-		;;
-	c54x)
-		basic_machine=tic54x-unknown
-		;;
-	c55x)
-		basic_machine=tic55x-unknown
-		;;
-	c6x)
-		basic_machine=tic6x-unknown
-		;;
-	m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | picochip)
-		basic_machine=$basic_machine-unknown
-		os=-none
-		;;
-	m88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)
-		;;
-	ms1)
-		basic_machine=mt-unknown
+	# Here we handle the default manufacturer of certain CPU types.  It is in
+	# some cases the only manufacturer, in others, it is the most popular.
+	w89k)
+		cpu=hppa1.1
+		vendor=winbond
 		;;
-
-	strongarm | thumb | xscale)
-		basic_machine=arm-unknown
+	op50n)
+		cpu=hppa1.1
+		vendor=oki
 		;;
-	xgate)
-		basic_machine=$basic_machine-unknown
-		os=-none
+	op60c)
+		cpu=hppa1.1
+		vendor=oki
 		;;
-	xscaleeb)
-		basic_machine=armeb-unknown
+	ibm*)
+		cpu=i370
+		vendor=ibm
 		;;
-
-	xscaleel)
-		basic_machine=armel-unknown
+	orion105)
+		cpu=clipper
+		vendor=highlevel
 		;;
-
-	# We use `pc' rather than `unknown'
-	# because (1) that's what they normally are, and
-	# (2) the word "unknown" tends to confuse beginning users.
-	i*86 | x86_64)
-	  basic_machine=$basic_machine-pc
-	  ;;
-	# Object if more than one company name word.
-	*-*-*)
-		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
-		exit 1
+	mac | mpw | mac-mpw)
+		cpu=m68k
+		vendor=apple
 		;;
-	# Recognize the basic CPU types with company name.
-	580-* \
-	| a29k-* \
-	| aarch64-* | aarch64_be-* \
-	| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \
-	| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \
-	| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \
-	| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \
-	| avr-* | avr32-* \
-	| be32-* | be64-* \
-	| bfin-* | bs2000-* \
-	| c[123]* | c30-* | [cjt]90-* | c4x-* \
-	| c8051-* | clipper-* | craynv-* | cydra-* \
-	| d10v-* | d30v-* | dlx-* \
-	| elxsi-* \
-	| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \
-	| h8300-* | h8500-* \
-	| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \
-	| hexagon-* \
-	| i*86-* | i860-* | i960-* | ia64-* \
-	| ip2k-* | iq2000-* \
-	| le32-* | le64-* \
-	| lm32-* \
-	| m32c-* | m32r-* | m32rle-* \
-	| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \
-	| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \
-	| microblaze-* | microblazeel-* \
-	| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \
-	| mips16-* \
-	| mips64-* | mips64el-* \
-	| mips64octeon-* | mips64octeonel-* \
-	| mips64orion-* | mips64orionel-* \
-	| mips64r5900-* | mips64r5900el-* \
-	| mips64vr-* | mips64vrel-* \
-	| mips64vr4100-* | mips64vr4100el-* \
-	| mips64vr4300-* | mips64vr4300el-* \
-	| mips64vr5000-* | mips64vr5000el-* \
-	| mips64vr5900-* | mips64vr5900el-* \
-	| mipsisa32-* | mipsisa32el-* \
-	| mipsisa32r2-* | mipsisa32r2el-* \
-	| mipsisa64-* | mipsisa64el-* \
-	| mipsisa64r2-* | mipsisa64r2el-* \
-	| mipsisa64sb1-* | mipsisa64sb1el-* \
-	| mipsisa64sr71k-* | mipsisa64sr71kel-* \
-	| mipsr5900-* | mipsr5900el-* \
-	| mipstx39-* | mipstx39el-* \
-	| mmix-* \
-	| mt-* \
-	| msp430-* \
-	| nds32-* | nds32le-* | nds32be-* \
-	| nios-* | nios2-* | nios2eb-* | nios2el-* \
-	| none-* | np1-* | ns16k-* | ns32k-* \
-	| open8-* \
-	| orion-* \
-	| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \
-	| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \
-	| pyramid-* \
-	| rl78-* | romp-* | rs6000-* | rx-* \
-	| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \
-	| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \
-	| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \
-	| sparclite-* \
-	| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx?-* \
-	| tahoe-* \
-	| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \
-	| tile*-* \
-	| tron-* \
-	| ubicom32-* \
-	| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \
-	| vax-* \
-	| we32k-* \
-	| x86-* | x86_64-* | xc16x-* | xps100-* \
-	| xstormy16-* | xtensa*-* \
-	| ymp-* \
-	| z8k-* | z80-*)
-		;;
-	# Recognize the basic CPU types without company name, with glob match.
-	xtensa*)
-		basic_machine=$basic_machine-unknown
+	pmac | pmac-mpw)
+		cpu=powerpc
+		vendor=apple
 		;;
+
 	# Recognize the various machine names and aliases which stand
 	# for a CPU type and a company and sometimes even an OS.
-	386bsd)
-		basic_machine=i386-unknown
-		os=-bsd
-		;;
 	3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)
-		basic_machine=m68000-att
+		cpu=m68000
+		vendor=att
 		;;
 	3b*)
-		basic_machine=we32k-att
-		;;
-	a29khif)
-		basic_machine=a29k-amd
-		os=-udi
-		;;
-	abacus)
-		basic_machine=abacus-unknown
-		;;
-	adobe68k)
-		basic_machine=m68010-adobe
-		os=-scout
-		;;
-	alliant | fx80)
-		basic_machine=fx80-alliant
-		;;
-	altos | altos3068)
-		basic_machine=m68k-altos
-		;;
-	am29k)
-		basic_machine=a29k-none
-		os=-bsd
-		;;
-	amd64)
-		basic_machine=x86_64-pc
-		;;
-	amd64-*)
-		basic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	amdahl)
-		basic_machine=580-amdahl
-		os=-sysv
-		;;
-	amiga | amiga-*)
-		basic_machine=m68k-unknown
-		;;
-	amigaos | amigados)
-		basic_machine=m68k-unknown
-		os=-amigaos
-		;;
-	amigaunix | amix)
-		basic_machine=m68k-unknown
-		os=-sysv4
-		;;
-	apollo68)
-		basic_machine=m68k-apollo
-		os=-sysv
-		;;
-	apollo68bsd)
-		basic_machine=m68k-apollo
-		os=-bsd
-		;;
-	aros)
-		basic_machine=i386-pc
-		os=-aros
-		;;
-	aux)
-		basic_machine=m68k-apple
-		os=-aux
-		;;
-	balance)
-		basic_machine=ns32k-sequent
-		os=-dynix
-		;;
-	blackfin)
-		basic_machine=bfin-unknown
-		os=-linux
-		;;
-	blackfin-*)
-		basic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`
-		os=-linux
+		cpu=we32k
+		vendor=att
 		;;
 	bluegene*)
-		basic_machine=powerpc-ibm
-		os=-cnk
-		;;
-	c54x-*)
-		basic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	c55x-*)
-		basic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	c6x-*)
-		basic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	c90)
-		basic_machine=c90-cray
-		os=-unicos
-		;;
-	cegcc)
-		basic_machine=arm-unknown
-		os=-cegcc
-		;;
-	convex-c1)
-		basic_machine=c1-convex
-		os=-bsd
-		;;
-	convex-c2)
-		basic_machine=c2-convex
-		os=-bsd
-		;;
-	convex-c32)
-		basic_machine=c32-convex
-		os=-bsd
-		;;
-	convex-c34)
-		basic_machine=c34-convex
-		os=-bsd
-		;;
-	convex-c38)
-		basic_machine=c38-convex
-		os=-bsd
-		;;
-	cray | j90)
-		basic_machine=j90-cray
-		os=-unicos
-		;;
-	craynv)
-		basic_machine=craynv-cray
-		os=-unicosmp
-		;;
-	cr16 | cr16-*)
-		basic_machine=cr16-unknown
-		os=-elf
-		;;
-	crds | unos)
-		basic_machine=m68k-crds
-		;;
-	crisv32 | crisv32-* | etraxfs*)
-		basic_machine=crisv32-axis
-		;;
-	cris | cris-* | etrax*)
-		basic_machine=cris-axis
-		;;
-	crx)
-		basic_machine=crx-unknown
-		os=-elf
-		;;
-	da30 | da30-*)
-		basic_machine=m68k-da30
-		;;
-	decstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)
-		basic_machine=mips-dec
+		cpu=powerpc
+		vendor=ibm
+		os=cnk
 		;;
 	decsystem10* | dec10*)
-		basic_machine=pdp10-dec
-		os=-tops10
+		cpu=pdp10
+		vendor=dec
+		os=tops10
 		;;
 	decsystem20* | dec20*)
-		basic_machine=pdp10-dec
-		os=-tops20
+		cpu=pdp10
+		vendor=dec
+		os=tops20
 		;;
 	delta | 3300 | motorola-3300 | motorola-delta \
 	      | 3300-motorola | delta-motorola)
-		basic_machine=m68k-motorola
-		;;
-	delta88)
-		basic_machine=m88k-motorola
-		os=-sysv3
-		;;
-	dicos)
-		basic_machine=i686-pc
-		os=-dicos
+		cpu=m68k
+		vendor=motorola
 		;;
-	djgpp)
-		basic_machine=i586-pc
-		os=-msdosdjgpp
-		;;
-	dpx20 | dpx20-*)
-		basic_machine=rs6000-bull
-		os=-bosx
-		;;
-	dpx2* | dpx2*-bull)
-		basic_machine=m68k-bull
-		os=-sysv3
-		;;
-	ebmon29k)
-		basic_machine=a29k-amd
-		os=-ebmon
-		;;
-	elxsi)
-		basic_machine=elxsi-elxsi
-		os=-bsd
+	dpx2*)
+		cpu=m68k
+		vendor=bull
+		os=sysv3
 		;;
 	encore | umax | mmax)
-		basic_machine=ns32k-encore
+		cpu=ns32k
+		vendor=encore
 		;;
-	es1800 | OSE68k | ose68k | ose | OSE)
-		basic_machine=m68k-ericsson
-		os=-ose
+	elxsi)
+		cpu=elxsi
+		vendor=elxsi
+		os=${os:-bsd}
 		;;
 	fx2800)
-		basic_machine=i860-alliant
+		cpu=i860
+		vendor=alliant
 		;;
 	genix)
-		basic_machine=ns32k-ns
-		;;
-	gmicro)
-		basic_machine=tron-gmicro
-		os=-sysv
-		;;
-	go32)
-		basic_machine=i386-pc
-		os=-go32
+		cpu=ns32k
+		vendor=ns
 		;;
 	h3050r* | hiux*)
-		basic_machine=hppa1.1-hitachi
-		os=-hiuxwe2
-		;;
-	h8300hms)
-		basic_machine=h8300-hitachi
-		os=-hms
-		;;
-	h8300xray)
-		basic_machine=h8300-hitachi
-		os=-xray
-		;;
-	h8500hms)
-		basic_machine=h8500-hitachi
-		os=-hms
-		;;
-	harris)
-		basic_machine=m88k-harris
-		os=-sysv3
-		;;
-	hp300-*)
-		basic_machine=m68k-hp
-		;;
-	hp300bsd)
-		basic_machine=m68k-hp
-		os=-bsd
-		;;
-	hp300hpux)
-		basic_machine=m68k-hp
-		os=-hpux
+		cpu=hppa1.1
+		vendor=hitachi
+		os=hiuxwe2
 		;;
 	hp3k9[0-9][0-9] | hp9[0-9][0-9])
-		basic_machine=hppa1.0-hp
+		cpu=hppa1.0
+		vendor=hp
 		;;
 	hp9k2[0-9][0-9] | hp9k31[0-9])
-		basic_machine=m68000-hp
+		cpu=m68000
+		vendor=hp
 		;;
 	hp9k3[2-9][0-9])
-		basic_machine=m68k-hp
+		cpu=m68k
+		vendor=hp
 		;;
 	hp9k6[0-9][0-9] | hp6[0-9][0-9])
-		basic_machine=hppa1.0-hp
+		cpu=hppa1.0
+		vendor=hp
 		;;
 	hp9k7[0-79][0-9] | hp7[0-79][0-9])
-		basic_machine=hppa1.1-hp
+		cpu=hppa1.1
+		vendor=hp
 		;;
 	hp9k78[0-9] | hp78[0-9])
 		# FIXME: really hppa2.0-hp
-		basic_machine=hppa1.1-hp
+		cpu=hppa1.1
+		vendor=hp
 		;;
 	hp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)
 		# FIXME: really hppa2.0-hp
-		basic_machine=hppa1.1-hp
+		cpu=hppa1.1
+		vendor=hp
 		;;
 	hp9k8[0-9][13679] | hp8[0-9][13679])
-		basic_machine=hppa1.1-hp
+		cpu=hppa1.1
+		vendor=hp
 		;;
 	hp9k8[0-9][0-9] | hp8[0-9][0-9])
-		basic_machine=hppa1.0-hp
-		;;
-	hppa-next)
-		os=-nextstep3
-		;;
-	hppaosf)
-		basic_machine=hppa1.1-hp
-		os=-osf
-		;;
-	hppro)
-		basic_machine=hppa1.1-hp
-		os=-proelf
-		;;
-	i370-ibm* | ibm*)
-		basic_machine=i370-ibm
+		cpu=hppa1.0
+		vendor=hp
 		;;
 	i*86v32)
-		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
-		os=-sysv32
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		os=sysv32
 		;;
 	i*86v4*)
-		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
-		os=-sysv4
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		os=sysv4
 		;;
 	i*86v)
-		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
-		os=-sysv
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		os=sysv
 		;;
 	i*86sol2)
-		basic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`
-		os=-solaris2
+		cpu=`echo "$1" | sed -e 's/86.*/86/'`
+		vendor=pc
+		os=solaris2
 		;;
-	i386mach)
-		basic_machine=i386-mach
-		os=-mach
-		;;
-	i386-vsta | vsta)
-		basic_machine=i386-unknown
-		os=-vsta
+	j90 | j90-cray)
+		cpu=j90
+		vendor=cray
+		os=${os:-unicos}
 		;;
 	iris | iris4d)
-		basic_machine=mips-sgi
+		cpu=mips
+		vendor=sgi
 		case $os in
-		    -irix*)
+		    irix*)
 			;;
 		    *)
-			os=-irix4
+			os=irix4
 			;;
 		esac
 		;;
-	isi68 | isi)
-		basic_machine=m68k-isi
-		os=-sysv
-		;;
-	m68knommu)
-		basic_machine=m68k-unknown
-		os=-linux
-		;;
-	m68knommu-*)
-		basic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`
-		os=-linux
-		;;
-	m88k-omron*)
-		basic_machine=m88k-omron
-		;;
-	magnum | m3230)
-		basic_machine=mips-mips
-		os=-sysv
-		;;
-	merlin)
-		basic_machine=ns32k-utek
-		os=-sysv
-		;;
-	microblaze*)
-		basic_machine=microblaze-xilinx
-		;;
-	mingw64)
-		basic_machine=x86_64-pc
-		os=-mingw64
-		;;
-	mingw32)
-		basic_machine=i686-pc
-		os=-mingw32
-		;;
-	mingw32ce)
-		basic_machine=arm-unknown
-		os=-mingw32ce
-		;;
 	miniframe)
-		basic_machine=m68000-convergent
-		;;
-	*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)
-		basic_machine=m68k-atari
-		os=-mint
-		;;
-	mips3*-*)
-		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`
-		;;
-	mips3*)
-		basic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown
-		;;
-	monitor)
-		basic_machine=m68k-rom68k
-		os=-coff
-		;;
-	morphos)
-		basic_machine=powerpc-unknown
-		os=-morphos
-		;;
-	msdos)
-		basic_machine=i386-pc
-		os=-msdos
-		;;
-	ms1-*)
-		basic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`
-		;;
-	msys)
-		basic_machine=i686-pc
-		os=-msys
-		;;
-	mvs)
-		basic_machine=i370-ibm
-		os=-mvs
-		;;
-	nacl)
-		basic_machine=le32-unknown
-		os=-nacl
-		;;
-	ncr3000)
-		basic_machine=i486-ncr
-		os=-sysv4
+		cpu=m68000
+		vendor=convergent
 		;;
-	netbsd386)
-		basic_machine=i386-unknown
-		os=-netbsd
-		;;
-	netwinder)
-		basic_machine=armv4l-rebel
-		os=-linux
-		;;
-	news | news700 | news800 | news900)
-		basic_machine=m68k-sony
-		os=-newsos
-		;;
-	news1000)
-		basic_machine=m68030-sony
-		os=-newsos
+	*mint | mint[0-9]* | *MiNT | *MiNT[0-9]*)
+		cpu=m68k
+		vendor=atari
+		os=mint
 		;;
 	news-3600 | risc-news)
-		basic_machine=mips-sony
-		os=-newsos
-		;;
-	necv70)
-		basic_machine=v70-nec
-		os=-sysv
+		cpu=mips
+		vendor=sony
+		os=newsos
 		;;
-	next | m*-next )
-		basic_machine=m68k-next
+	next | m*-next)
+		cpu=m68k
+		vendor=next
 		case $os in
-		    -nextstep* )
+		    openstep*)
+		        ;;
+		    nextstep*)
 			;;
-		    -ns2*)
-		      os=-nextstep2
+		    ns2*)
+		      os=nextstep2
 			;;
 		    *)
-		      os=-nextstep3
+		      os=nextstep3
 			;;
 		esac
 		;;
-	nh3000)
-		basic_machine=m68k-harris
-		os=-cxux
-		;;
-	nh[45]000)
-		basic_machine=m88k-harris
-		os=-cxux
-		;;
-	nindy960)
-		basic_machine=i960-intel
-		os=-nindy
-		;;
-	mon960)
-		basic_machine=i960-intel
-		os=-mon960
-		;;
-	nonstopux)
-		basic_machine=mips-compaq
-		os=-nonstopux
-		;;
 	np1)
-		basic_machine=np1-gould
-		;;
-	neo-tandem)
-		basic_machine=neo-tandem
-		;;
-	nse-tandem)
-		basic_machine=nse-tandem
-		;;
-	nsr-tandem)
-		basic_machine=nsr-tandem
+		cpu=np1
+		vendor=gould
 		;;
 	op50n-* | op60c-*)
-		basic_machine=hppa1.1-oki
-		os=-proelf
-		;;
-	openrisc | openrisc-*)
-		basic_machine=or32-unknown
-		;;
-	os400)
-		basic_machine=powerpc-ibm
-		os=-os400
-		;;
-	OSE68000 | ose68000)
-		basic_machine=m68000-ericsson
-		os=-ose
-		;;
-	os68k)
-		basic_machine=m68k-none
-		os=-os68k
+		cpu=hppa1.1
+		vendor=oki
+		os=proelf
 		;;
 	pa-hitachi)
-		basic_machine=hppa1.1-hitachi
-		os=-hiuxwe2
-		;;
-	paragon)
-		basic_machine=i860-intel
-		os=-osf
-		;;
-	parisc)
-		basic_machine=hppa-unknown
-		os=-linux
-		;;
-	parisc-*)
-		basic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`
-		os=-linux
+		cpu=hppa1.1
+		vendor=hitachi
+		os=hiuxwe2
 		;;
 	pbd)
-		basic_machine=sparc-tti
+		cpu=sparc
+		vendor=tti
 		;;
 	pbb)
-		basic_machine=m68k-tti
+		cpu=m68k
+		vendor=tti
 		;;
-	pc532 | pc532-*)
-		basic_machine=ns32k-pc532
-		;;
-	pc98)
-		basic_machine=i386-pc
-		;;
-	pc98-*)
-		basic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	pentium | p5 | k5 | k6 | nexgen | viac3)
-		basic_machine=i586-pc
-		;;
-	pentiumpro | p6 | 6x86 | athlon | athlon_*)
-		basic_machine=i686-pc
-		;;
-	pentiumii | pentium2 | pentiumiii | pentium3)
-		basic_machine=i686-pc
-		;;
-	pentium4)
-		basic_machine=i786-pc
-		;;
-	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
-		basic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	pentiumpro-* | p6-* | 6x86-* | athlon-*)
-		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
-		basic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	pentium4-*)
-		basic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`
+	pc532)
+		cpu=ns32k
+		vendor=pc532
 		;;
 	pn)
-		basic_machine=pn-gould
-		;;
-	power)	basic_machine=power-ibm
+		cpu=pn
+		vendor=gould
 		;;
-	ppc | ppcbe)	basic_machine=powerpc-unknown
-		;;
-	ppc-* | ppcbe-*)
-		basic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	ppcle | powerpclittle | ppc-le | powerpc-little)
-		basic_machine=powerpcle-unknown
-		;;
-	ppcle-* | powerpclittle-*)
-		basic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	ppc64)	basic_machine=powerpc64-unknown
-		;;
-	ppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`
-		;;
-	ppc64le | powerpc64little | ppc64-le | powerpc64-little)
-		basic_machine=powerpc64le-unknown
-		;;
-	ppc64le-* | powerpc64little-*)
-		basic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`
+	power)
+		cpu=power
+		vendor=ibm
 		;;
 	ps2)
-		basic_machine=i386-ibm
-		;;
-	pw32)
-		basic_machine=i586-unknown
-		os=-pw32
-		;;
-	rdos | rdos64)
-		basic_machine=x86_64-pc
-		os=-rdos
-		;;
-	rdos32)
-		basic_machine=i386-pc
-		os=-rdos
-		;;
-	rom68k)
-		basic_machine=m68k-rom68k
-		os=-coff
+		cpu=i386
+		vendor=ibm
 		;;
 	rm[46]00)
-		basic_machine=mips-siemens
+		cpu=mips
+		vendor=siemens
 		;;
 	rtpc | rtpc-*)
-		basic_machine=romp-ibm
-		;;
-	s390 | s390-*)
-		basic_machine=s390-ibm
-		;;
-	s390x | s390x-*)
-		basic_machine=s390x-ibm
+		cpu=romp
+		vendor=ibm
 		;;
-	sa29200)
-		basic_machine=a29k-amd
-		os=-udi
-		;;
-	sb1)
-		basic_machine=mipsisa64sb1-unknown
+	sde)
+		cpu=mipsisa32
+		vendor=sde
+		os=${os:-elf}
 		;;
-	sb1el)
-		basic_machine=mipsisa64sb1el-unknown
+	simso-wrs)
+		cpu=sparclite
+		vendor=wrs
+		os=vxworks
 		;;
-	sde)
-		basic_machine=mipsisa32-sde
-		os=-elf
+	tower | tower-32)
+		cpu=m68k
+		vendor=ncr
 		;;
-	sei)
-		basic_machine=mips-sei
-		os=-seiux
+	vpp*|vx|vx-*)
+		cpu=f301
+		vendor=fujitsu
 		;;
-	sequent)
-		basic_machine=i386-sequent
+	w65)
+		cpu=w65
+		vendor=wdc
 		;;
-	sh)
-		basic_machine=sh-hitachi
-		os=-hms
+	w89k-*)
+		cpu=hppa1.1
+		vendor=winbond
+		os=proelf
 		;;
-	sh5el)
-		basic_machine=sh5le-unknown
+	none)
+		cpu=none
+		vendor=none
 		;;
-	sh64)
-		basic_machine=sh64-unknown
+	leon|leon[3-9])
+		cpu=sparc
+		vendor=$basic_machine
 		;;
-	sparclite-wrs | simso-wrs)
-		basic_machine=sparclite-wrs
-		os=-vxworks
+	leon-*|leon[3-9]-*)
+		cpu=sparc
+		vendor=`echo "$basic_machine" | sed 's/-.*//'`
 		;;
-	sps7)
-		basic_machine=m68k-bull
-		os=-sysv2
+
+	*-*)
+		# shellcheck disable=SC2162
+		IFS="-" read cpu vendor <<EOF
+$basic_machine
+EOF
 		;;
-	spur)
-		basic_machine=spur-unknown
+	# We use `pc' rather than `unknown'
+	# because (1) that's what they normally are, and
+	# (2) the word "unknown" tends to confuse beginning users.
+	i*86 | x86_64)
+		cpu=$basic_machine
+		vendor=pc
 		;;
-	st2000)
-		basic_machine=m68k-tandem
+	# These rules are duplicated from below for sake of the special case above;
+	# i.e. things that normalized to x86 arches should also default to "pc"
+	pc98)
+		cpu=i386
+		vendor=pc
 		;;
-	stratus)
-		basic_machine=i860-stratus
-		os=-sysv4
+	x64 | amd64)
+		cpu=x86_64
+		vendor=pc
 		;;
-	strongarm-* | thumb-*)
-		basic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`
+	# Recognize the basic CPU types without company name.
+	*)
+		cpu=$basic_machine
+		vendor=unknown
 		;;
-	sun2)
-		basic_machine=m68000-sun
+esac
+
+unset -v basic_machine
+
+# Decode basic machines in the full and proper CPU-Company form.
+case $cpu-$vendor in
+	# Here we handle the default manufacturer of certain CPU types in canonical form. It is in
+	# some cases the only manufacturer, in others, it is the most popular.
+	craynv-unknown)
+		vendor=cray
+		os=${os:-unicosmp}
 		;;
-	sun2os3)
-		basic_machine=m68000-sun
-		os=-sunos3
+	c90-unknown | c90-cray)
+		vendor=cray
+		os=${os:-unicos}
 		;;
-	sun2os4)
-		basic_machine=m68000-sun
-		os=-sunos4
+	fx80-unknown)
+		vendor=alliant
 		;;
-	sun3os3)
-		basic_machine=m68k-sun
-		os=-sunos3
+	romp-unknown)
+		vendor=ibm
 		;;
-	sun3os4)
-		basic_machine=m68k-sun
-		os=-sunos4
+	mmix-unknown)
+		vendor=knuth
 		;;
-	sun4os3)
-		basic_machine=sparc-sun
-		os=-sunos3
+	microblaze-unknown | microblazeel-unknown)
+		vendor=xilinx
 		;;
-	sun4os4)
-		basic_machine=sparc-sun
-		os=-sunos4
+	rs6000-unknown)
+		vendor=ibm
 		;;
-	sun4sol2)
-		basic_machine=sparc-sun
-		os=-solaris2
+	vax-unknown)
+		vendor=dec
 		;;
-	sun3 | sun3-*)
-		basic_machine=m68k-sun
+	pdp11-unknown)
+		vendor=dec
 		;;
-	sun4)
-		basic_machine=sparc-sun
+	we32k-unknown)
+		vendor=att
 		;;
-	sun386 | sun386i | roadrunner)
-		basic_machine=i386-sun
+	cydra-unknown)
+		vendor=cydrome
 		;;
-	sv1)
-		basic_machine=sv1-cray
-		os=-unicos
+	i370-ibm*)
+		vendor=ibm
 		;;
-	symmetry)
-		basic_machine=i386-sequent
-		os=-dynix
+	orion-unknown)
+		vendor=highlevel
 		;;
-	t3e)
-		basic_machine=alphaev5-cray
-		os=-unicos
+	xps-unknown | xps100-unknown)
+		cpu=xps100
+		vendor=honeywell
 		;;
-	t90)
-		basic_machine=t90-cray
-		os=-unicos
+
+	# Here we normalize CPU types with a missing or matching vendor
+	dpx20-unknown | dpx20-bull)
+		cpu=rs6000
+		vendor=bull
+		os=${os:-bosx}
 		;;
-	tile*)
-		basic_machine=$basic_machine-unknown
-		os=-linux-gnu
+
+	# Here we normalize CPU types irrespective of the vendor
+	amd64-*)
+		cpu=x86_64
 		;;
-	tx39)
-		basic_machine=mipstx39-unknown
+	blackfin-*)
+		cpu=bfin
+		os=linux
 		;;
-	tx39el)
-		basic_machine=mipstx39el-unknown
+	c54x-*)
+		cpu=tic54x
 		;;
-	toad1)
-		basic_machine=pdp10-xkl
-		os=-tops20
+	c55x-*)
+		cpu=tic55x
 		;;
-	tower | tower-32)
-		basic_machine=m68k-ncr
+	c6x-*)
+		cpu=tic6x
 		;;
-	tpf)
-		basic_machine=s390x-ibm
-		os=-tpf
+	e500v[12]-*)
+		cpu=powerpc
+		os=$os"spe"
 		;;
-	udi29k)
-		basic_machine=a29k-amd
-		os=-udi
+	mips3*-*)
+		cpu=mips64
 		;;
-	ultra3)
-		basic_machine=a29k-nyu
-		os=-sym1
+	ms1-*)
+		cpu=mt
 		;;
-	v810 | necv810)
-		basic_machine=v810-nec
-		os=-none
+	m68knommu-*)
+		cpu=m68k
+		os=linux
 		;;
-	vaxv)
-		basic_machine=vax-dec
-		os=-sysv
+	m9s12z-* | m68hcs12z-* | hcs12z-* | s12z-*)
+		cpu=s12z
 		;;
-	vms)
-		basic_machine=vax-dec
-		os=-vms
+	openrisc-*)
+		cpu=or32
 		;;
-	vpp*|vx|vx-*)
-		basic_machine=f301-fujitsu
+	parisc-*)
+		cpu=hppa
+		os=linux
 		;;
-	vxworks960)
-		basic_machine=i960-wrs
-		os=-vxworks
+	pentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)
+		cpu=i586
 		;;
-	vxworks68)
-		basic_machine=m68k-wrs
-		os=-vxworks
+	pentiumpro-* | p6-* | 6x86-* | athlon-* | athalon_*-*)
+		cpu=i686
 		;;
-	vxworks29k)
-		basic_machine=a29k-wrs
-		os=-vxworks
+	pentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)
+		cpu=i686
 		;;
-	w65*)
-		basic_machine=w65-wdc
-		os=-none
+	pentium4-*)
+		cpu=i786
 		;;
-	w89k-*)
-		basic_machine=hppa1.1-winbond
-		os=-proelf
+	pc98-*)
+		cpu=i386
 		;;
-	xbox)
-		basic_machine=i686-pc
-		os=-mingw32
+	ppc-* | ppcbe-*)
+		cpu=powerpc
 		;;
-	xps | xps100)
-		basic_machine=xps100-honeywell
+	ppcle-* | powerpclittle-*)
+		cpu=powerpcle
 		;;
-	xscale-* | xscalee[bl]-*)
-		basic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`
+	ppc64-*)
+		cpu=powerpc64
 		;;
-	ymp)
-		basic_machine=ymp-cray
-		os=-unicos
+	ppc64le-* | powerpc64little-*)
+		cpu=powerpc64le
 		;;
-	z8k-*-coff)
-		basic_machine=z8k-unknown
-		os=-sim
+	sb1-*)
+		cpu=mipsisa64sb1
 		;;
-	z80-*-coff)
-		basic_machine=z80-unknown
-		os=-sim
+	sb1el-*)
+		cpu=mipsisa64sb1el
 		;;
-	none)
-		basic_machine=none-none
-		os=-none
+	sh5e[lb]-*)
+		cpu=`echo "$cpu" | sed 's/^\(sh.\)e\(.\)$/\1\2e/'`
 		;;
-
-# Here we handle the default manufacturer of certain CPU types.  It is in
-# some cases the only manufacturer, in others, it is the most popular.
-	w89k)
-		basic_machine=hppa1.1-winbond
+	spur-*)
+		cpu=spur
 		;;
-	op50n)
-		basic_machine=hppa1.1-oki
+	strongarm-* | thumb-*)
+		cpu=arm
 		;;
-	op60c)
-		basic_machine=hppa1.1-oki
+	tx39-*)
+		cpu=mipstx39
 		;;
-	romp)
-		basic_machine=romp-ibm
+	tx39el-*)
+		cpu=mipstx39el
 		;;
-	mmix)
-		basic_machine=mmix-knuth
+	x64-*)
+		cpu=x86_64
 		;;
-	rs6000)
-		basic_machine=rs6000-ibm
+	xscale-* | xscalee[bl]-*)
+		cpu=`echo "$cpu" | sed 's/^xscale/arm/'`
 		;;
-	vax)
-		basic_machine=vax-dec
+
+	# Recognize the canonical CPU Types that limit and/or modify the
+	# company names they are paired with.
+	cr16-*)
+		os=${os:-elf}
 		;;
-	pdp10)
-		# there are many clones, so DEC is not a safe bet
-		basic_machine=pdp10-unknown
+	crisv32-* | etraxfs*-*)
+		cpu=crisv32
+		vendor=axis
 		;;
-	pdp11)
-		basic_machine=pdp11-dec
+	cris-* | etrax*-*)
+		cpu=cris
+		vendor=axis
 		;;
-	we32k)
-		basic_machine=we32k-att
+	crx-*)
+		os=${os:-elf}
 		;;
-	sh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)
-		basic_machine=sh-unknown
+	neo-tandem)
+		cpu=neo
+		vendor=tandem
 		;;
-	sparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)
-		basic_machine=sparc-sun
+	nse-tandem)
+		cpu=nse
+		vendor=tandem
 		;;
-	cydra)
-		basic_machine=cydra-cydrome
+	nsr-tandem)
+		cpu=nsr
+		vendor=tandem
 		;;
-	orion)
-		basic_machine=orion-highlevel
+	nsv-tandem)
+		cpu=nsv
+		vendor=tandem
 		;;
-	orion105)
-		basic_machine=clipper-highlevel
+	nsx-tandem)
+		cpu=nsx
+		vendor=tandem
 		;;
-	mac | mpw | mac-mpw)
-		basic_machine=m68k-apple
+	s390-*)
+		cpu=s390
+		vendor=ibm
 		;;
-	pmac | pmac-mpw)
-		basic_machine=powerpc-apple
+	s390x-*)
+		cpu=s390x
+		vendor=ibm
 		;;
-	*-unknown)
-		# Make sure to match an already-canonicalized machine name.
+	tile*-*)
+		os=${os:-linux-gnu}
 		;;
+
 	*)
-		echo Invalid configuration \`$1\': machine \`$basic_machine\' not recognized 1>&2
-		exit 1
+		# Recognize the canonical CPU types that are allowed with any
+		# company name.
+		case $cpu in
+			1750a | 580 \
+			| a29k \
+			| aarch64 | aarch64_be \
+			| abacus \
+			| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] \
+			| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] \
+			| alphapca5[67] | alpha64pca5[67] \
+			| am33_2.0 \
+			| amdgcn \
+			| arc | arceb \
+			| arm  | arm[lb]e | arme[lb] | armv* \
+			| avr | avr32 \
+			| asmjs \
+			| ba \
+			| be32 | be64 \
+			| bfin | bpf | bs2000 \
+			| c[123]* | c30 | [cjt]90 | c4x \
+			| c8051 | clipper | craynv | csky | cydra \
+			| d10v | d30v | dlx | dsp16xx \
+			| e2k | elxsi | epiphany \
+			| f30[01] | f700 | fido | fr30 | frv | ft32 | fx80 \
+			| h8300 | h8500 \
+			| hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \
+			| hexagon \
+			| i370 | i*86 | i860 | i960 | ia16 | ia64 \
+			| ip2k | iq2000 \
+			| k1om \
+			| le32 | le64 \
+			| lm32 \
+			| m32c | m32r | m32rle \
+			| m5200 | m68000 | m680[012346]0 | m68360 | m683?2 | m68k \
+			| m6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x \
+			| m88110 | m88k | maxq | mb | mcore | mep | metag \
+			| microblaze | microblazeel \
+			| mips | mipsbe | mipseb | mipsel | mipsle \
+			| mips16 \
+			| mips64 | mips64eb | mips64el \
+			| mips64octeon | mips64octeonel \
+			| mips64orion | mips64orionel \
+			| mips64r5900 | mips64r5900el \
+			| mips64vr | mips64vrel \
+			| mips64vr4100 | mips64vr4100el \
+			| mips64vr4300 | mips64vr4300el \
+			| mips64vr5000 | mips64vr5000el \
+			| mips64vr5900 | mips64vr5900el \
+			| mipsisa32 | mipsisa32el \
+			| mipsisa32r2 | mipsisa32r2el \
+			| mipsisa32r6 | mipsisa32r6el \
+			| mipsisa64 | mipsisa64el \
+			| mipsisa64r2 | mipsisa64r2el \
+			| mipsisa64r6 | mipsisa64r6el \
+			| mipsisa64sb1 | mipsisa64sb1el \
+			| mipsisa64sr71k | mipsisa64sr71kel \
+			| mipsr5900 | mipsr5900el \
+			| mipstx39 | mipstx39el \
+			| mmix \
+			| mn10200 | mn10300 \
+			| moxie \
+			| mt \
+			| msp430 \
+			| nds32 | nds32le | nds32be \
+			| nfp \
+			| nios | nios2 | nios2eb | nios2el \
+			| none | np1 | ns16k | ns32k | nvptx \
+			| open8 \
+			| or1k* \
+			| or32 \
+			| orion \
+			| picochip \
+			| pdp10 | pdp11 | pj | pjl | pn | power \
+			| powerpc | powerpc64 | powerpc64le | powerpcle | powerpcspe \
+			| pru \
+			| pyramid \
+			| riscv | riscv32 | riscv64 \
+			| rl78 | romp | rs6000 | rx \
+			| score \
+			| sh | shl \
+			| sh[1234] | sh[24]a | sh[24]ae[lb] | sh[23]e | she[lb] | sh[lb]e \
+			| sh[1234]e[lb] |  sh[12345][lb]e | sh[23]ele | sh64 | sh64le \
+			| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet \
+			| sparclite \
+			| sparcv8 | sparcv9 | sparcv9b | sparcv9v | sv1 | sx* \
+			| spu \
+			| tahoe \
+			| tic30 | tic4x | tic54x | tic55x | tic6x | tic80 \
+			| tron \
+			| ubicom32 \
+			| v70 | v850 | v850e | v850e1 | v850es | v850e2 | v850e2v3 \
+			| vax \
+			| visium \
+			| w65 \
+			| wasm32 | wasm64 \
+			| we32k \
+			| x86 | x86_64 | xc16x | xgate | xps100 \
+			| xstormy16 | xtensa* \
+			| ymp \
+			| z8k | z80)
+				;;
+
+			*)
+				echo Invalid configuration \`"$1"\': machine \`"$cpu-$vendor"\' not recognized 1>&2
+				exit 1
+				;;
+		esac
 		;;
 esac
 
 # Here we canonicalize certain aliases for manufacturers.
-case $basic_machine in
-	*-digital*)
-		basic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`
+case $vendor in
+	digital*)
+		vendor=dec
 		;;
-	*-commodore*)
-		basic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`
+	commodore*)
+		vendor=cbm
 		;;
 	*)
 		;;
@@ -1321,197 +1278,246 @@ esac
 
 # Decode manufacturer-specific aliases for certain operating systems.
 
-if [ x"$os" != x"" ]
+if [ x$os != x ]
 then
 case $os in
-	# First match some system type aliases
-	# that might get confused with valid system types.
-	# -solaris* is a basic system type, with this one exception.
-	-auroraux)
-		os=-auroraux
+	# First match some system type aliases that might get confused
+	# with valid system types.
+	# solaris* is a basic system type, with this one exception.
+	auroraux)
+		os=auroraux
 		;;
-	-solaris1 | -solaris1.*)
-		os=`echo $os | sed -e 's|solaris1|sunos4|'`
+	bluegene*)
+		os=cnk
 		;;
-	-solaris)
-		os=-solaris2
+	solaris1 | solaris1.*)
+		os=`echo $os | sed -e 's|solaris1|sunos4|'`
 		;;
-	-svr4*)
-		os=-sysv4
+	solaris)
+		os=solaris2
 		;;
-	-unixware*)
-		os=-sysv4.2uw
+	unixware*)
+		os=sysv4.2uw
 		;;
-	-gnu/linux*)
+	gnu/linux*)
 		os=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`
 		;;
-	# First accept the basic system types.
+	# es1800 is here to avoid being matched by es* (a different OS)
+	es1800*)
+		os=ose
+		;;
+	# Some version numbers need modification
+	chorusos*)
+		os=chorusos
+		;;
+	isc)
+		os=isc2.2
+		;;
+	sco6)
+		os=sco5v6
+		;;
+	sco5)
+		os=sco3.2v5
+		;;
+	sco4)
+		os=sco3.2v4
+		;;
+	sco3.2.[4-9]*)
+		os=`echo $os | sed -e 's/sco3.2./sco3.2v/'`
+		;;
+	sco3.2v[4-9]* | sco5v6*)
+		# Don't forget version if it is 3.2v4 or newer.
+		;;
+	scout)
+		# Don't match below
+		;;
+	sco*)
+		os=sco3.2v2
+		;;
+	psos*)
+		os=psos
+		;;
+	# Now accept the basic system types.
 	# The portable systems comes first.
-	# Each alternative MUST END IN A *, to match a version number.
-	# -sysv* is not here because it comes later, after sysvr4.
-	-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \
-	      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\
-	      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \
-	      | -sym* | -kopensolaris* | -plan9* \
-	      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \
-	      | -aos* | -aros* \
-	      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \
-	      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \
-	      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \
-	      | -bitrig* | -openbsd* | -solidbsd* \
-	      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \
-	      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \
-	      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \
-	      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \
-	      | -chorusos* | -chorusrdb* | -cegcc* \
-	      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \
-	      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \
-	      | -linux-newlib* | -linux-musl* | -linux-uclibc* \
-	      | -uxpv* | -beos* | -mpeix* | -udk* \
-	      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \
-	      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \
-	      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \
-	      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \
-	      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \
-	      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \
-	      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es*)
+	# Each alternative MUST end in a * to match a version number.
+	# sysv* is not here because it comes later, after sysvr4.
+	gnu* | bsd* | mach* | minix* | genix* | ultrix* | irix* \
+	     | *vms* | esix* | aix* | cnk* | sunos | sunos[34]*\
+	     | hpux* | unos* | osf* | luna* | dgux* | auroraux* | solaris* \
+	     | sym* | kopensolaris* | plan9* \
+	     | amigaos* | amigados* | msdos* | newsos* | unicos* | aof* \
+	     | aos* | aros* | cloudabi* | sortix* \
+	     | nindy* | vxsim* | vxworks* | ebmon* | hms* | mvs* \
+	     | clix* | riscos* | uniplus* | iris* | isc* | rtu* | xenix* \
+	     | knetbsd* | mirbsd* | netbsd* \
+	     | bitrig* | openbsd* | solidbsd* | libertybsd* \
+	     | ekkobsd* | kfreebsd* | freebsd* | riscix* | lynxos* \
+	     | bosx* | nextstep* | cxux* | aout* | elf* | oabi* \
+	     | ptx* | coff* | ecoff* | winnt* | domain* | vsta* \
+	     | udi* | eabi* | lites* | ieee* | go32* | aux* | hcos* \
+	     | chorusrdb* | cegcc* | glidix* \
+	     | cygwin* | msys* | pe* | moss* | proelf* | rtems* \
+	     | midipix* | mingw32* | mingw64* | linux-gnu* | linux-android* \
+	     | linux-newlib* | linux-musl* | linux-uclibc* \
+	     | uxpv* | beos* | mpeix* | udk* | moxiebox* \
+	     | interix* | uwin* | mks* | rhapsody* | darwin* \
+	     | openstep* | oskit* | conix* | pw32* | nonstopux* \
+	     | storm-chaos* | tops10* | tenex* | tops20* | its* \
+	     | os2* | vos* | palmos* | uclinux* | nucleus* \
+	     | morphos* | superux* | rtmk* | windiss* \
+	     | powermax* | dnix* | nx6 | nx7 | sei* | dragonfly* \
+	     | skyos* | haiku* | rdos* | toppers* | drops* | es* \
+	     | onefs* | tirtos* | phoenix* | fuchsia* | redox* | bme* \
+	     | midnightbsd* | amdhsa* | unleashed* | emscripten* | wasi*)
 	# Remember, each alternative MUST END IN *, to match a version number.
 		;;
-	-qnx*)
-		case $basic_machine in
-		    x86-* | i*86-*)
+	qnx*)
+		case $cpu in
+		    x86 | i*86)
 			;;
 		    *)
-			os=-nto$os
+			os=nto-$os
 			;;
 		esac
 		;;
-	-nto-qnx*)
+	hiux*)
+		os=hiuxwe2
 		;;
-	-nto*)
-		os=`echo $os | sed -e 's|nto|nto-qnx|'`
+	nto-qnx*)
 		;;
-	-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \
-	      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \
-	      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)
+	nto*)
+		os=`echo $os | sed -e 's|nto|nto-qnx|'`
 		;;
-	-mac*)
-		os=`echo $os | sed -e 's|mac|macos|'`
+	sim | xray | os68k* | v88r* \
+	    | windows* | osx | abug | netware* | os9* \
+	    | macos* | mpw* | magic* | mmixware* | mon960* | lnews*)
 		;;
-	-linux-dietlibc)
-		os=-linux-dietlibc
+	linux-dietlibc)
+		os=linux-dietlibc
 		;;
-	-linux*)
+	linux*)
 		os=`echo $os | sed -e 's|linux|linux-gnu|'`
 		;;
-	-sunos5*)
-		os=`echo $os | sed -e 's|sunos5|solaris2|'`
+	lynx*178)
+		os=lynxos178
 		;;
-	-sunos6*)
-		os=`echo $os | sed -e 's|sunos6|solaris3|'`
+	lynx*5)
+		os=lynxos5
 		;;
-	-opened*)
-		os=-openedition
+	lynx*)
+		os=lynxos
 		;;
-	-os400*)
-		os=-os400
+	mac*)
+		os=`echo "$os" | sed -e 's|mac|macos|'`
 		;;
-	-wince*)
-		os=-wince
+	opened*)
+		os=openedition
 		;;
-	-osfrose*)
-		os=-osfrose
+	os400*)
+		os=os400
 		;;
-	-osf*)
-		os=-osf
+	sunos5*)
+		os=`echo "$os" | sed -e 's|sunos5|solaris2|'`
 		;;
-	-utek*)
-		os=-bsd
+	sunos6*)
+		os=`echo "$os" | sed -e 's|sunos6|solaris3|'`
 		;;
-	-dynix*)
-		os=-bsd
+	wince*)
+		os=wince
 		;;
-	-acis*)
-		os=-aos
+	utek*)
+		os=bsd
 		;;
-	-atheos*)
-		os=-atheos
+	dynix*)
+		os=bsd
 		;;
-	-syllable*)
-		os=-syllable
+	acis*)
+		os=aos
 		;;
-	-386bsd)
-		os=-bsd
+	atheos*)
+		os=atheos
 		;;
-	-ctix* | -uts*)
-		os=-sysv
+	syllable*)
+		os=syllable
 		;;
-	-nova*)
-		os=-rtmk-nova
+	386bsd)
+		os=bsd
 		;;
-	-ns2 )
-		os=-nextstep2
+	ctix* | uts*)
+		os=sysv
 		;;
-	-nsk*)
-		os=-nsk
+	nova*)
+		os=rtmk-nova
+		;;
+	ns2)
+		os=nextstep2
+		;;
+	nsk*)
+		os=nsk
 		;;
 	# Preserve the version number of sinix5.
-	-sinix5.*)
+	sinix5.*)
 		os=`echo $os | sed -e 's|sinix|sysv|'`
 		;;
-	-sinix*)
-		os=-sysv4
+	sinix*)
+		os=sysv4
 		;;
-	-tpf*)
-		os=-tpf
+	tpf*)
+		os=tpf
 		;;
-	-triton*)
-		os=-sysv3
+	triton*)
+		os=sysv3
 		;;
-	-oss*)
-		os=-sysv3
+	oss*)
+		os=sysv3
 		;;
-	-svr4)
-		os=-sysv4
+	svr4*)
+		os=sysv4
 		;;
-	-svr3)
-		os=-sysv3
+	svr3)
+		os=sysv3
 		;;
-	-sysvr4)
-		os=-sysv4
+	sysvr4)
+		os=sysv4
 		;;
-	# This must come after -sysvr4.
-	-sysv*)
+	# This must come after sysvr4.
+	sysv*)
 		;;
-	-ose*)
-		os=-ose
+	ose*)
+		os=ose
 		;;
-	-es1800*)
-		os=-ose
+	*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)
+		os=mint
 		;;
-	-xenix)
-		os=-xenix
+	zvmoe)
+		os=zvmoe
 		;;
-	-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
-		os=-mint
+	dicos*)
+		os=dicos
 		;;
-	-aros*)
-		os=-aros
+	pikeos*)
+		# Until real need of OS specific support for
+		# particular features comes up, bare metal
+		# configurations are quite functional.
+		case $cpu in
+		    arm*)
+			os=eabi
+			;;
+		    *)
+			os=elf
+			;;
+		esac
 		;;
-	-zvmoe)
-		os=-zvmoe
+	nacl*)
 		;;
-	-dicos*)
-		os=-dicos
+	ios)
 		;;
-	-nacl*)
+	none)
 		;;
-	-none)
+	*-eabi)
 		;;
 	*)
-		# Get rid of the `-' at the beginning of $os.
-		os=`echo $os | sed 's/[^-]*-//'`
-		echo Invalid configuration \`$1\': system \`$os\' not recognized 1>&2
+		echo Invalid configuration \`"$1"\': system \`"$os"\' not recognized 1>&2
 		exit 1
 		;;
 esac
@@ -1527,264 +1533,265 @@ else
 # will signal an error saying that MANUFACTURER isn't an operating
 # system, and we'll never get to this point.
 
-case $basic_machine in
+case $cpu-$vendor in
 	score-*)
-		os=-elf
+		os=elf
 		;;
 	spu-*)
-		os=-elf
+		os=elf
 		;;
 	*-acorn)
-		os=-riscix1.2
+		os=riscix1.2
 		;;
 	arm*-rebel)
-		os=-linux
+		os=linux
 		;;
 	arm*-semi)
-		os=-aout
+		os=aout
 		;;
 	c4x-* | tic4x-*)
-		os=-coff
+		os=coff
 		;;
 	c8051-*)
-		os=-elf
+		os=elf
+		;;
+	clipper-intergraph)
+		os=clix
 		;;
 	hexagon-*)
-		os=-elf
+		os=elf
 		;;
 	tic54x-*)
-		os=-coff
+		os=coff
 		;;
 	tic55x-*)
-		os=-coff
+		os=coff
 		;;
 	tic6x-*)
-		os=-coff
+		os=coff
 		;;
 	# This must come before the *-dec entry.
 	pdp10-*)
-		os=-tops20
+		os=tops20
 		;;
 	pdp11-*)
-		os=-none
+		os=none
 		;;
 	*-dec | vax-*)
-		os=-ultrix4.2
+		os=ultrix4.2
 		;;
 	m68*-apollo)
-		os=-domain
+		os=domain
 		;;
 	i386-sun)
-		os=-sunos4.0.2
+		os=sunos4.0.2
 		;;
 	m68000-sun)
-		os=-sunos3
+		os=sunos3
 		;;
 	m68*-cisco)
-		os=-aout
+		os=aout
 		;;
 	mep-*)
-		os=-elf
+		os=elf
 		;;
 	mips*-cisco)
-		os=-elf
+		os=elf
 		;;
 	mips*-*)
-		os=-elf
-		;;
-	or1k-*)
-		os=-elf
+		os=elf
 		;;
 	or32-*)
-		os=-coff
+		os=coff
 		;;
 	*-tti)	# must be before sparc entry or we get the wrong os.
-		os=-sysv3
+		os=sysv3
 		;;
 	sparc-* | *-sun)
-		os=-sunos4.1.1
+		os=sunos4.1.1
 		;;
-	*-be)
-		os=-beos
+	pru-*)
+		os=elf
 		;;
-	*-haiku)
-		os=-haiku
+	*-be)
+		os=beos
 		;;
 	*-ibm)
-		os=-aix
+		os=aix
 		;;
 	*-knuth)
-		os=-mmixware
+		os=mmixware
 		;;
 	*-wec)
-		os=-proelf
+		os=proelf
 		;;
 	*-winbond)
-		os=-proelf
+		os=proelf
 		;;
 	*-oki)
-		os=-proelf
+		os=proelf
 		;;
 	*-hp)
-		os=-hpux
+		os=hpux
 		;;
 	*-hitachi)
-		os=-hiux
+		os=hiux
 		;;
 	i860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)
-		os=-sysv
+		os=sysv
 		;;
 	*-cbm)
-		os=-amigaos
+		os=amigaos
 		;;
 	*-dg)
-		os=-dgux
+		os=dgux
 		;;
 	*-dolphin)
-		os=-sysv3
+		os=sysv3
 		;;
 	m68k-ccur)
-		os=-rtu
+		os=rtu
 		;;
 	m88k-omron*)
-		os=-luna
+		os=luna
 		;;
-	*-next )
-		os=-nextstep
+	*-next)
+		os=nextstep
 		;;
 	*-sequent)
-		os=-ptx
+		os=ptx
 		;;
 	*-crds)
-		os=-unos
+		os=unos
 		;;
 	*-ns)
-		os=-genix
+		os=genix
 		;;
 	i370-*)
-		os=-mvs
-		;;
-	*-next)
-		os=-nextstep3
+		os=mvs
 		;;
 	*-gould)
-		os=-sysv
+		os=sysv
 		;;
 	*-highlevel)
-		os=-bsd
+		os=bsd
 		;;
 	*-encore)
-		os=-bsd
+		os=bsd
 		;;
 	*-sgi)
-		os=-irix
+		os=irix
 		;;
 	*-siemens)
-		os=-sysv4
+		os=sysv4
 		;;
 	*-masscomp)
-		os=-rtu
+		os=rtu
 		;;
 	f30[01]-fujitsu | f700-fujitsu)
-		os=-uxpv
+		os=uxpv
 		;;
 	*-rom68k)
-		os=-coff
+		os=coff
 		;;
 	*-*bug)
-		os=-coff
+		os=coff
 		;;
 	*-apple)
-		os=-macos
+		os=macos
 		;;
 	*-atari*)
-		os=-mint
+		os=mint
+		;;
+	*-wrs)
+		os=vxworks
 		;;
 	*)
-		os=-none
+		os=none
 		;;
 esac
 fi
 
 # Here we handle the case where we know the os, and the CPU type, but not the
 # manufacturer.  We pick the logical manufacturer.
-vendor=unknown
-case $basic_machine in
-	*-unknown)
+case $vendor in
+	unknown)
 		case $os in
-			-riscix*)
+			riscix*)
 				vendor=acorn
 				;;
-			-sunos*)
+			sunos*)
 				vendor=sun
 				;;
-			-cnk*|-aix*)
+			cnk*|-aix*)
 				vendor=ibm
 				;;
-			-beos*)
+			beos*)
 				vendor=be
 				;;
-			-hpux*)
+			hpux*)
 				vendor=hp
 				;;
-			-mpeix*)
+			mpeix*)
 				vendor=hp
 				;;
-			-hiux*)
+			hiux*)
 				vendor=hitachi
 				;;
-			-unos*)
+			unos*)
 				vendor=crds
 				;;
-			-dgux*)
+			dgux*)
 				vendor=dg
 				;;
-			-luna*)
+			luna*)
 				vendor=omron
 				;;
-			-genix*)
+			genix*)
 				vendor=ns
 				;;
-			-mvs* | -opened*)
+			clix*)
+				vendor=intergraph
+				;;
+			mvs* | opened*)
 				vendor=ibm
 				;;
-			-os400*)
+			os400*)
 				vendor=ibm
 				;;
-			-ptx*)
+			ptx*)
 				vendor=sequent
 				;;
-			-tpf*)
+			tpf*)
 				vendor=ibm
 				;;
-			-vxsim* | -vxworks* | -windiss*)
+			vxsim* | vxworks* | windiss*)
 				vendor=wrs
 				;;
-			-aux*)
+			aux*)
 				vendor=apple
 				;;
-			-hms*)
+			hms*)
 				vendor=hitachi
 				;;
-			-mpw* | -macos*)
+			mpw* | macos*)
 				vendor=apple
 				;;
-			-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)
+			*mint | mint[0-9]* | *MiNT | MiNT[0-9]*)
 				vendor=atari
 				;;
-			-vos*)
+			vos*)
 				vendor=stratus
 				;;
 		esac
-		basic_machine=`echo $basic_machine | sed "s/unknown/$vendor/"`
 		;;
 esac
 
-echo $basic_machine$os
+echo "$cpu-$vendor-$os"
 exit
 
 # Local variables:
-# eval: (add-hook 'write-file-hooks 'time-stamp)
+# eval: (add-hook 'before-save-hook 'time-stamp)
 # time-stamp-start: "timestamp='"
 # time-stamp-format: "%:y-%02m-%02d"
 # time-stamp-end: "'"
diff --git a/libsodium/build-aux/depcomp b/libsodium/build-aux/depcomp
index 4ebd5b3..65cbf70 100755
--- a/libsodium/build-aux/depcomp
+++ b/libsodium/build-aux/depcomp
@@ -1,9 +1,9 @@
 #! /bin/sh
 # depcomp - compile a program generating dependencies as side-effects
 
-scriptversion=2013-05-30.07; # UTC
+scriptversion=2018-03-07.03; # UTC
 
-# Copyright (C) 1999-2013 Free Software Foundation, Inc.
+# Copyright (C) 1999-2018 Free Software Foundation, Inc.
 
 # This program is free software; you can redistribute it and/or modify
 # it under the terms of the GNU General Public License as published by
@@ -16,7 +16,7 @@ scriptversion=2013-05-30.07; # UTC
 # GNU General Public License for more details.
 
 # You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+# along with this program.  If not, see <https://www.gnu.org/licenses/>.
 
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
@@ -783,9 +783,9 @@ exit 0
 # Local Variables:
 # mode: shell-script
 # sh-indentation: 2
-# eval: (add-hook 'write-file-hooks 'time-stamp)
+# eval: (add-hook 'before-save-hook 'time-stamp)
 # time-stamp-start: "scriptversion="
 # time-stamp-format: "%:y-%02m-%02d.%02H"
-# time-stamp-time-zone: "UTC"
+# time-stamp-time-zone: "UTC0"
 # time-stamp-end: "; # UTC"
 # End:
diff --git a/libsodium/build-aux/install-sh b/libsodium/build-aux/install-sh
index 377bb86..8175c64 100755
--- a/libsodium/build-aux/install-sh
+++ b/libsodium/build-aux/install-sh
@@ -1,7 +1,7 @@
 #!/bin/sh
 # install - install a program, script, or datafile
 
-scriptversion=2011-11-20.07; # UTC
+scriptversion=2018-03-11.20; # UTC
 
 # This originates from X11R5 (mit/util/scripts/install.sh), which was
 # later released in X11R6 (xc/config/util/install.sh) with the
@@ -41,19 +41,15 @@ scriptversion=2011-11-20.07; # UTC
 # This script is compatible with the BSD install script, but was written
 # from scratch.
 
+tab='	'
 nl='
 '
-IFS=" ""	$nl"
+IFS=" $tab$nl"
 
-# set DOITPROG to echo to test this script
+# Set DOITPROG to "echo" to test this script.
 
-# Don't use :- since 4.3BSD and earlier shells don't like it.
 doit=${DOITPROG-}
-if test -z "$doit"; then
-  doit_exec=exec
-else
-  doit_exec=$doit
-fi
+doit_exec=${doit:-exec}
 
 # Put in absolute file names if you don't have them in your path;
 # or use environment vars.
@@ -68,17 +64,6 @@ mvprog=${MVPROG-mv}
 rmprog=${RMPROG-rm}
 stripprog=${STRIPPROG-strip}
 
-posix_glob='?'
-initialize_posix_glob='
-  test "$posix_glob" != "?" || {
-    if (set -f) 2>/dev/null; then
-      posix_glob=
-    else
-      posix_glob=:
-    fi
-  }
-'
-
 posix_mkdir=
 
 # Desired mode of installed file.
@@ -97,7 +82,7 @@ dir_arg=
 dst_arg=
 
 copy_on_change=false
-no_target_directory=
+is_target_a_directory=possibly
 
 usage="\
 Usage: $0 [OPTION]... [-T] SRCFILE DSTFILE
@@ -137,46 +122,57 @@ while test $# -ne 0; do
     -d) dir_arg=true;;
 
     -g) chgrpcmd="$chgrpprog $2"
-	shift;;
+        shift;;
 
     --help) echo "$usage"; exit $?;;
 
     -m) mode=$2
-	case $mode in
-	  *' '* | *'	'* | *'
-'*	  | *'*'* | *'?'* | *'['*)
-	    echo "$0: invalid mode: $mode" >&2
-	    exit 1;;
-	esac
-	shift;;
+        case $mode in
+          *' '* | *"$tab"* | *"$nl"* | *'*'* | *'?'* | *'['*)
+            echo "$0: invalid mode: $mode" >&2
+            exit 1;;
+        esac
+        shift;;
 
     -o) chowncmd="$chownprog $2"
-	shift;;
+        shift;;
 
     -s) stripcmd=$stripprog;;
 
-    -t) dst_arg=$2
-	# Protect names problematic for 'test' and other utilities.
-	case $dst_arg in
-	  -* | [=\(\)!]) dst_arg=./$dst_arg;;
-	esac
-	shift;;
+    -t)
+        is_target_a_directory=always
+        dst_arg=$2
+        # Protect names problematic for 'test' and other utilities.
+        case $dst_arg in
+          -* | [=\(\)!]) dst_arg=./$dst_arg;;
+        esac
+        shift;;
 
-    -T) no_target_directory=true;;
+    -T) is_target_a_directory=never;;
 
     --version) echo "$0 $scriptversion"; exit $?;;
 
-    --)	shift
-	break;;
+    --) shift
+        break;;
 
-    -*)	echo "$0: invalid option: $1" >&2
-	exit 1;;
+    -*) echo "$0: invalid option: $1" >&2
+        exit 1;;
 
     *)  break;;
   esac
   shift
 done
 
+# We allow the use of options -d and -T together, by making -d
+# take the precedence; this is for compatibility with GNU install.
+
+if test -n "$dir_arg"; then
+  if test -n "$dst_arg"; then
+    echo "$0: target directory not allowed when installing a directory." >&2
+    exit 1
+  fi
+fi
+
 if test $# -ne 0 && test -z "$dir_arg$dst_arg"; then
   # When -d is used, all remaining arguments are directories to create.
   # When -t is used, the destination is already specified.
@@ -207,6 +203,15 @@ if test $# -eq 0; then
   exit 0
 fi
 
+if test -z "$dir_arg"; then
+  if test $# -gt 1 || test "$is_target_a_directory" = always; then
+    if test ! -d "$dst_arg"; then
+      echo "$0: $dst_arg: Is not a directory." >&2
+      exit 1
+    fi
+  fi
+fi
+
 if test -z "$dir_arg"; then
   do_exit='(exit $ret); exit $ret'
   trap "ret=129; $do_exit" 1
@@ -223,16 +228,16 @@ if test -z "$dir_arg"; then
 
     *[0-7])
       if test -z "$stripcmd"; then
-	u_plus_rw=
+        u_plus_rw=
       else
-	u_plus_rw='% 200'
+        u_plus_rw='% 200'
       fi
       cp_umask=`expr '(' 777 - $mode % 1000 ')' $u_plus_rw`;;
     *)
       if test -z "$stripcmd"; then
-	u_plus_rw=
+        u_plus_rw=
       else
-	u_plus_rw=,u+rw
+        u_plus_rw=,u+rw
       fi
       cp_umask=$mode$u_plus_rw;;
   esac
@@ -266,122 +271,113 @@ do
     fi
     dst=$dst_arg
 
-    # If destination is a directory, append the input filename; won't work
-    # if double slashes aren't ignored.
+    # If destination is a directory, append the input filename.
     if test -d "$dst"; then
-      if test -n "$no_target_directory"; then
-	echo "$0: $dst_arg: Is a directory" >&2
-	exit 1
+      if test "$is_target_a_directory" = never; then
+        echo "$0: $dst_arg: Is a directory" >&2
+        exit 1
       fi
       dstdir=$dst
-      dst=$dstdir/`basename "$src"`
+      dstbase=`basename "$src"`
+      case $dst in
+	*/) dst=$dst$dstbase;;
+	*)  dst=$dst/$dstbase;;
+      esac
       dstdir_status=0
     else
-      # Prefer dirname, but fall back on a substitute if dirname fails.
-      dstdir=`
-	(dirname "$dst") 2>/dev/null ||
-	expr X"$dst" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
-	     X"$dst" : 'X\(//\)[^/]' \| \
-	     X"$dst" : 'X\(//\)$' \| \
-	     X"$dst" : 'X\(/\)' \| . 2>/dev/null ||
-	echo X"$dst" |
-	    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
-		   s//\1/
-		   q
-		 }
-		 /^X\(\/\/\)[^/].*/{
-		   s//\1/
-		   q
-		 }
-		 /^X\(\/\/\)$/{
-		   s//\1/
-		   q
-		 }
-		 /^X\(\/\).*/{
-		   s//\1/
-		   q
-		 }
-		 s/.*/./; q'
-      `
-
+      dstdir=`dirname "$dst"`
       test -d "$dstdir"
       dstdir_status=$?
     fi
   fi
 
+  case $dstdir in
+    */) dstdirslash=$dstdir;;
+    *)  dstdirslash=$dstdir/;;
+  esac
+
   obsolete_mkdir_used=false
 
   if test $dstdir_status != 0; then
     case $posix_mkdir in
       '')
-	# Create intermediate dirs using mode 755 as modified by the umask.
-	# This is like FreeBSD 'install' as of 1997-10-28.
-	umask=`umask`
-	case $stripcmd.$umask in
-	  # Optimize common cases.
-	  *[2367][2367]) mkdir_umask=$umask;;
-	  .*0[02][02] | .[02][02] | .[02]) mkdir_umask=22;;
-
-	  *[0-7])
-	    mkdir_umask=`expr $umask + 22 \
-	      - $umask % 100 % 40 + $umask % 20 \
-	      - $umask % 10 % 4 + $umask % 2
-	    `;;
-	  *) mkdir_umask=$umask,go-w;;
-	esac
-
-	# With -d, create the new directory with the user-specified mode.
-	# Otherwise, rely on $mkdir_umask.
-	if test -n "$dir_arg"; then
-	  mkdir_mode=-m$mode
-	else
-	  mkdir_mode=
-	fi
-
-	posix_mkdir=false
-	case $umask in
-	  *[123567][0-7][0-7])
-	    # POSIX mkdir -p sets u+wx bits regardless of umask, which
-	    # is incompatible with FreeBSD 'install' when (umask & 300) != 0.
-	    ;;
-	  *)
-	    tmpdir=${TMPDIR-/tmp}/ins$RANDOM-$$
-	    trap 'ret=$?; rmdir "$tmpdir/d" "$tmpdir" 2>/dev/null; exit $ret' 0
-
-	    if (umask $mkdir_umask &&
-		exec $mkdirprog $mkdir_mode -p -- "$tmpdir/d") >/dev/null 2>&1
-	    then
-	      if test -z "$dir_arg" || {
-		   # Check for POSIX incompatibilities with -m.
-		   # HP-UX 11.23 and IRIX 6.5 mkdir -m -p sets group- or
-		   # other-writable bit of parent directory when it shouldn't.
-		   # FreeBSD 6.1 mkdir -m -p sets mode of existing directory.
-		   ls_ld_tmpdir=`ls -ld "$tmpdir"`
-		   case $ls_ld_tmpdir in
-		     d????-?r-*) different_mode=700;;
-		     d????-?--*) different_mode=755;;
-		     *) false;;
-		   esac &&
-		   $mkdirprog -m$different_mode -p -- "$tmpdir" && {
-		     ls_ld_tmpdir_1=`ls -ld "$tmpdir"`
-		     test "$ls_ld_tmpdir" = "$ls_ld_tmpdir_1"
-		   }
-		 }
-	      then posix_mkdir=:
-	      fi
-	      rmdir "$tmpdir/d" "$tmpdir"
-	    else
-	      # Remove any dirs left behind by ancient mkdir implementations.
-	      rmdir ./$mkdir_mode ./-p ./-- 2>/dev/null
-	    fi
-	    trap '' 0;;
-	esac;;
+        # Create intermediate dirs using mode 755 as modified by the umask.
+        # This is like FreeBSD 'install' as of 1997-10-28.
+        umask=`umask`
+        case $stripcmd.$umask in
+          # Optimize common cases.
+          *[2367][2367]) mkdir_umask=$umask;;
+          .*0[02][02] | .[02][02] | .[02]) mkdir_umask=22;;
+
+          *[0-7])
+            mkdir_umask=`expr $umask + 22 \
+              - $umask % 100 % 40 + $umask % 20 \
+              - $umask % 10 % 4 + $umask % 2
+            `;;
+          *) mkdir_umask=$umask,go-w;;
+        esac
+
+        # With -d, create the new directory with the user-specified mode.
+        # Otherwise, rely on $mkdir_umask.
+        if test -n "$dir_arg"; then
+          mkdir_mode=-m$mode
+        else
+          mkdir_mode=
+        fi
+
+        posix_mkdir=false
+        case $umask in
+          *[123567][0-7][0-7])
+            # POSIX mkdir -p sets u+wx bits regardless of umask, which
+            # is incompatible with FreeBSD 'install' when (umask & 300) != 0.
+            ;;
+          *)
+            # Note that $RANDOM variable is not portable (e.g. dash);  Use it
+            # here however when possible just to lower collision chance.
+            tmpdir=${TMPDIR-/tmp}/ins$RANDOM-$$
+
+            trap 'ret=$?; rmdir "$tmpdir/a/b" "$tmpdir/a" "$tmpdir" 2>/dev/null; exit $ret' 0
+
+            # Because "mkdir -p" follows existing symlinks and we likely work
+            # directly in world-writeable /tmp, make sure that the '$tmpdir'
+            # directory is successfully created first before we actually test
+            # 'mkdir -p' feature.
+            if (umask $mkdir_umask &&
+                $mkdirprog $mkdir_mode "$tmpdir" &&
+                exec $mkdirprog $mkdir_mode -p -- "$tmpdir/a/b") >/dev/null 2>&1
+            then
+              if test -z "$dir_arg" || {
+                   # Check for POSIX incompatibilities with -m.
+                   # HP-UX 11.23 and IRIX 6.5 mkdir -m -p sets group- or
+                   # other-writable bit of parent directory when it shouldn't.
+                   # FreeBSD 6.1 mkdir -m -p sets mode of existing directory.
+                   test_tmpdir="$tmpdir/a"
+                   ls_ld_tmpdir=`ls -ld "$test_tmpdir"`
+                   case $ls_ld_tmpdir in
+                     d????-?r-*) different_mode=700;;
+                     d????-?--*) different_mode=755;;
+                     *) false;;
+                   esac &&
+                   $mkdirprog -m$different_mode -p -- "$test_tmpdir" && {
+                     ls_ld_tmpdir_1=`ls -ld "$test_tmpdir"`
+                     test "$ls_ld_tmpdir" = "$ls_ld_tmpdir_1"
+                   }
+                 }
+              then posix_mkdir=:
+              fi
+              rmdir "$tmpdir/a/b" "$tmpdir/a" "$tmpdir"
+            else
+              # Remove any dirs left behind by ancient mkdir implementations.
+              rmdir ./$mkdir_mode ./-p ./-- "$tmpdir" 2>/dev/null
+            fi
+            trap '' 0;;
+        esac;;
     esac
 
     if
       $posix_mkdir && (
-	umask $mkdir_umask &&
-	$doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir"
+        umask $mkdir_umask &&
+        $doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir"
       )
     then :
     else
@@ -391,53 +387,51 @@ do
       # directory the slow way, step by step, checking for races as we go.
 
       case $dstdir in
-	/*) prefix='/';;
-	[-=\(\)!]*) prefix='./';;
-	*)  prefix='';;
+        /*) prefix='/';;
+        [-=\(\)!]*) prefix='./';;
+        *)  prefix='';;
       esac
 
-      eval "$initialize_posix_glob"
-
       oIFS=$IFS
       IFS=/
-      $posix_glob set -f
+      set -f
       set fnord $dstdir
       shift
-      $posix_glob set +f
+      set +f
       IFS=$oIFS
 
       prefixes=
 
       for d
       do
-	test X"$d" = X && continue
-
-	prefix=$prefix$d
-	if test -d "$prefix"; then
-	  prefixes=
-	else
-	  if $posix_mkdir; then
-	    (umask=$mkdir_umask &&
-	     $doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir") && break
-	    # Don't fail if two instances are running concurrently.
-	    test -d "$prefix" || exit 1
-	  else
-	    case $prefix in
-	      *\'*) qprefix=`echo "$prefix" | sed "s/'/'\\\\\\\\''/g"`;;
-	      *) qprefix=$prefix;;
-	    esac
-	    prefixes="$prefixes '$qprefix'"
-	  fi
-	fi
-	prefix=$prefix/
+        test X"$d" = X && continue
+
+        prefix=$prefix$d
+        if test -d "$prefix"; then
+          prefixes=
+        else
+          if $posix_mkdir; then
+            (umask=$mkdir_umask &&
+             $doit_exec $mkdirprog $mkdir_mode -p -- "$dstdir") && break
+            # Don't fail if two instances are running concurrently.
+            test -d "$prefix" || exit 1
+          else
+            case $prefix in
+              *\'*) qprefix=`echo "$prefix" | sed "s/'/'\\\\\\\\''/g"`;;
+              *) qprefix=$prefix;;
+            esac
+            prefixes="$prefixes '$qprefix'"
+          fi
+        fi
+        prefix=$prefix/
       done
 
       if test -n "$prefixes"; then
-	# Don't fail if two instances are running concurrently.
-	(umask $mkdir_umask &&
-	 eval "\$doit_exec \$mkdirprog $prefixes") ||
-	  test -d "$dstdir" || exit 1
-	obsolete_mkdir_used=true
+        # Don't fail if two instances are running concurrently.
+        (umask $mkdir_umask &&
+         eval "\$doit_exec \$mkdirprog $prefixes") ||
+          test -d "$dstdir" || exit 1
+        obsolete_mkdir_used=true
       fi
     fi
   fi
@@ -450,8 +444,8 @@ do
   else
 
     # Make a couple of temp file names in the proper directory.
-    dsttmp=$dstdir/_inst.$$_
-    rmtmp=$dstdir/_rm.$$_
+    dsttmp=${dstdirslash}_inst.$$_
+    rmtmp=${dstdirslash}_rm.$$_
 
     # Trap to clean up those temp files at exit.
     trap 'ret=$?; rm -f "$dsttmp" "$rmtmp" && exit $ret' 0
@@ -472,15 +466,12 @@ do
 
     # If -C, don't bother to copy if it wouldn't change the file.
     if $copy_on_change &&
-       old=`LC_ALL=C ls -dlL "$dst"	2>/dev/null` &&
-       new=`LC_ALL=C ls -dlL "$dsttmp"	2>/dev/null` &&
-
-       eval "$initialize_posix_glob" &&
-       $posix_glob set -f &&
+       old=`LC_ALL=C ls -dlL "$dst"     2>/dev/null` &&
+       new=`LC_ALL=C ls -dlL "$dsttmp"  2>/dev/null` &&
+       set -f &&
        set X $old && old=:$2:$4:$5:$6 &&
        set X $new && new=:$2:$4:$5:$6 &&
-       $posix_glob set +f &&
-
+       set +f &&
        test "$old" = "$new" &&
        $cmpprog "$dst" "$dsttmp" >/dev/null 2>&1
     then
@@ -493,24 +484,24 @@ do
       # to itself, or perhaps because mv is so ancient that it does not
       # support -f.
       {
-	# Now remove or move aside any old file at destination location.
-	# We try this two ways since rm can't unlink itself on some
-	# systems and the destination file might be busy for other
-	# reasons.  In this case, the final cleanup might fail but the new
-	# file should still install successfully.
-	{
-	  test ! -f "$dst" ||
-	  $doit $rmcmd -f "$dst" 2>/dev/null ||
-	  { $doit $mvcmd -f "$dst" "$rmtmp" 2>/dev/null &&
-	    { $doit $rmcmd -f "$rmtmp" 2>/dev/null; :; }
-	  } ||
-	  { echo "$0: cannot unlink or rename $dst" >&2
-	    (exit 1); exit 1
-	  }
-	} &&
-
-	# Now rename the file to the real destination.
-	$doit $mvcmd "$dsttmp" "$dst"
+        # Now remove or move aside any old file at destination location.
+        # We try this two ways since rm can't unlink itself on some
+        # systems and the destination file might be busy for other
+        # reasons.  In this case, the final cleanup might fail but the new
+        # file should still install successfully.
+        {
+          test ! -f "$dst" ||
+          $doit $rmcmd -f "$dst" 2>/dev/null ||
+          { $doit $mvcmd -f "$dst" "$rmtmp" 2>/dev/null &&
+            { $doit $rmcmd -f "$rmtmp" 2>/dev/null; :; }
+          } ||
+          { echo "$0: cannot unlink or rename $dst" >&2
+            (exit 1); exit 1
+          }
+        } &&
+
+        # Now rename the file to the real destination.
+        $doit $mvcmd "$dsttmp" "$dst"
       }
     fi || exit 1
 
@@ -519,9 +510,9 @@ do
 done
 
 # Local variables:
-# eval: (add-hook 'write-file-hooks 'time-stamp)
+# eval: (add-hook 'before-save-hook 'time-stamp)
 # time-stamp-start: "scriptversion="
 # time-stamp-format: "%:y-%02m-%02d.%02H"
-# time-stamp-time-zone: "UTC"
+# time-stamp-time-zone: "UTC0"
 # time-stamp-end: "; # UTC"
 # End:
diff --git a/libsodium/build-aux/ltmain.sh b/libsodium/build-aux/ltmain.sh
index a356aca..0f0a2da 100644
--- a/libsodium/build-aux/ltmain.sh
+++ b/libsodium/build-aux/ltmain.sh
@@ -1,9 +1,12 @@
+#! /bin/sh
+## DO NOT EDIT - This file generated from ./build-aux/ltmain.in
+##               by inline-source v2014-01-03.01
 
-# libtool (GNU libtool) 2.4.2
+# libtool (GNU libtool) 2.4.6
+# Provide generalized library-building support services.
 # Written by Gordon Matzigkeit <gord@gnu.ai.mit.edu>, 1996
 
-# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005, 2006,
-# 2007, 2008, 2009, 2010, 2011 Free Software Foundation, Inc.
+# Copyright (C) 1996-2015 Free Software Foundation, Inc.
 # This is free software; see the source for copying conditions.  There is NO
 # warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 
@@ -23,881 +26,2112 @@
 # General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with GNU Libtool; see the file COPYING.  If not, a copy
-# can be downloaded from http://www.gnu.org/licenses/gpl.html,
-# or obtained by writing to the Free Software Foundation, Inc.,
-# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
-# Usage: $progname [OPTION]... [MODE-ARG]...
-#
-# Provide generalized library-building support services.
-#
-#       --config             show all configuration variables
-#       --debug              enable verbose shell tracing
-#   -n, --dry-run            display commands without modifying any files
-#       --features           display basic configuration information and exit
-#       --mode=MODE          use operation mode MODE
-#       --preserve-dup-deps  don't remove duplicate dependency libraries
-#       --quiet, --silent    don't print informational messages
-#       --no-quiet, --no-silent
-#                            print informational messages (default)
-#       --no-warn            don't display warning messages
-#       --tag=TAG            use configuration variables from tag TAG
-#   -v, --verbose            print more informational messages than default
-#       --no-verbose         don't print the extra informational messages
-#       --version            print version information
-#   -h, --help, --help-all   print short, long, or detailed help message
-#
-# MODE must be one of the following:
-#
-#         clean              remove files from the build directory
-#         compile            compile a source file into a libtool object
-#         execute            automatically set library path, then run a program
-#         finish             complete the installation of libtool libraries
-#         install            install libraries or executables
-#         link               create a library or an executable
-#         uninstall          remove libraries from an installed directory
-#
-# MODE-ARGS vary depending on the MODE.  When passed as first option,
-# `--mode=MODE' may be abbreviated as `MODE' or a unique abbreviation of that.
-# Try `$progname --help --mode=MODE' for a more detailed description of MODE.
-#
-# When reporting a bug, please describe a test case to reproduce it and
-# include the following information:
-#
-#         host-triplet:	$host
-#         shell:		$SHELL
-#         compiler:		$LTCC
-#         compiler flags:		$LTCFLAGS
-#         linker:		$LD (gnu? $with_gnu_ld)
-#         $progname:	(GNU libtool) 2.4.2 Debian-2.4.2-1.7ubuntu1
-#         automake:	$automake_version
-#         autoconf:	$autoconf_version
-#
-# Report bugs to <bug-libtool@gnu.org>.
-# GNU libtool home page: <http://www.gnu.org/software/libtool/>.
-# General help using GNU software: <http://www.gnu.org/gethelp/>.
 
 PROGRAM=libtool
 PACKAGE=libtool
-VERSION="2.4.2 Debian-2.4.2-1.7ubuntu1"
-TIMESTAMP=""
-package_revision=1.3337
+VERSION=2.4.6
+package_revision=2.4.6
 
-# Be Bourne compatible
-if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
+
+## ------ ##
+## Usage. ##
+## ------ ##
+
+# Run './libtool --help' for help with using this script from the
+# command line.
+
+
+## ------------------------------- ##
+## User overridable command paths. ##
+## ------------------------------- ##
+
+# After configure completes, it has a better idea of some of the
+# shell tools we need than the defaults used by the functions shared
+# with bootstrap, so set those here where they can still be over-
+# ridden by the user, but otherwise take precedence.
+
+: ${AUTOCONF="autoconf"}
+: ${AUTOMAKE="automake"}
+
+
+## -------------------------- ##
+## Source external libraries. ##
+## -------------------------- ##
+
+# Much of our low-level functionality needs to be sourced from external
+# libraries, which are installed to $pkgauxdir.
+
+# Set a version string for this script.
+scriptversion=2015-01-20.17; # UTC
+
+# General shell script boiler plate, and helper functions.
+# Written by Gary V. Vaughan, 2004
+
+# Copyright (C) 2004-2015 Free Software Foundation, Inc.
+# This is free software; see the source for copying conditions.  There is NO
+# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3 of the License, or
+# (at your option) any later version.
+
+# As a special exception to the GNU General Public License, if you distribute
+# this file as part of a program or library that is built using GNU Libtool,
+# you may include this file under the same distribution terms that you use
+# for the rest of that program.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNES FOR A PARTICULAR PURPOSE. See the GNU
+# General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program. If not, see <http://www.gnu.org/licenses/>.
+
+# Please report bugs or propose patches to gary@gnu.org.
+
+
+## ------ ##
+## Usage. ##
+## ------ ##
+
+# Evaluate this file near the top of your script to gain access to
+# the functions and variables defined here:
+#
+#   . `echo "$0" | ${SED-sed} 's|[^/]*$||'`/build-aux/funclib.sh
+#
+# If you need to override any of the default environment variable
+# settings, do that before evaluating this file.
+
+
+## -------------------- ##
+## Shell normalisation. ##
+## -------------------- ##
+
+# Some shells need a little help to be as Bourne compatible as possible.
+# Before doing anything else, make sure all that help has been provided!
+
+DUALCASE=1; export DUALCASE # for MKS sh
+if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
   emulate sh
   NULLCMD=:
-  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
+  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
   # is contrary to our usage.  Disable this feature.
   alias -g '${1+"$@"}'='"$@"'
   setopt NO_GLOB_SUBST
 else
-  case `(set -o) 2>/dev/null` in *posix*) set -o posix;; esac
+  case `(set -o) 2>/dev/null` in *posix*) set -o posix ;; esac
 fi
-BIN_SH=xpg4; export BIN_SH # for Tru64
-DUALCASE=1; export DUALCASE # for MKS sh
-
-# A function that is used when there is no print builtin or printf.
-func_fallback_echo ()
-{
-  eval 'cat <<_LTECHO_EOF
-$1
-_LTECHO_EOF'
-}
 
-# NLS nuisances: We save the old values to restore during execute mode.
-lt_user_locale=
-lt_safe_locale=
-for lt_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES
+# NLS nuisances: We save the old values in case they are required later.
+_G_user_locale=
+_G_safe_locale=
+for _G_var in LANG LANGUAGE LC_ALL LC_CTYPE LC_COLLATE LC_MESSAGES
 do
-  eval "if test \"\${$lt_var+set}\" = set; then
-          save_$lt_var=\$$lt_var
-          $lt_var=C
-	  export $lt_var
-	  lt_user_locale=\"$lt_var=\\\$save_\$lt_var; \$lt_user_locale\"
-	  lt_safe_locale=\"$lt_var=C; \$lt_safe_locale\"
+  eval "if test set = \"\${$_G_var+set}\"; then
+          save_$_G_var=\$$_G_var
+          $_G_var=C
+	  export $_G_var
+	  _G_user_locale=\"$_G_var=\\\$save_\$_G_var; \$_G_user_locale\"
+	  _G_safe_locale=\"$_G_var=C; \$_G_safe_locale\"
 	fi"
 done
-LC_ALL=C
-LANGUAGE=C
-export LANGUAGE LC_ALL
 
-$lt_unset CDPATH
+# CDPATH.
+(unset CDPATH) >/dev/null 2>&1 && unset CDPATH
 
+# Make sure IFS has a sensible default
+sp=' '
+nl='
+'
+IFS="$sp	$nl"
+
+# There are apparently some retarded systems that use ';' as a PATH separator!
+if test "${PATH_SEPARATOR+set}" != set; then
+  PATH_SEPARATOR=:
+  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
+    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
+      PATH_SEPARATOR=';'
+  }
+fi
 
-# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh
-# is ksh but when the shell is invoked as "sh" and the current value of
-# the _XPG environment variable is not equal to 1 (one), the special
-# positional parameter $0, within a function call, is the name of the
-# function.
-progpath="$0"
 
 
+## ------------------------- ##
+## Locate command utilities. ##
+## ------------------------- ##
+
+
+# func_executable_p FILE
+# ----------------------
+# Check that FILE is an executable regular file.
+func_executable_p ()
+{
+    test -f "$1" && test -x "$1"
+}
+
+
+# func_path_progs PROGS_LIST CHECK_FUNC [PATH]
+# --------------------------------------------
+# Search for either a program that responds to --version with output
+# containing "GNU", or else returned by CHECK_FUNC otherwise, by
+# trying all the directories in PATH with each of the elements of
+# PROGS_LIST.
+#
+# CHECK_FUNC should accept the path to a candidate program, and
+# set $func_check_prog_result if it truncates its output less than
+# $_G_path_prog_max characters.
+func_path_progs ()
+{
+    _G_progs_list=$1
+    _G_check_func=$2
+    _G_PATH=${3-"$PATH"}
+
+    _G_path_prog_max=0
+    _G_path_prog_found=false
+    _G_save_IFS=$IFS; IFS=${PATH_SEPARATOR-:}
+    for _G_dir in $_G_PATH; do
+      IFS=$_G_save_IFS
+      test -z "$_G_dir" && _G_dir=.
+      for _G_prog_name in $_G_progs_list; do
+        for _exeext in '' .EXE; do
+          _G_path_prog=$_G_dir/$_G_prog_name$_exeext
+          func_executable_p "$_G_path_prog" || continue
+          case `"$_G_path_prog" --version 2>&1` in
+            *GNU*) func_path_progs_result=$_G_path_prog _G_path_prog_found=: ;;
+            *)     $_G_check_func $_G_path_prog
+		   func_path_progs_result=$func_check_prog_result
+		   ;;
+          esac
+          $_G_path_prog_found && break 3
+        done
+      done
+    done
+    IFS=$_G_save_IFS
+    test -z "$func_path_progs_result" && {
+      echo "no acceptable sed could be found in \$PATH" >&2
+      exit 1
+    }
+}
+
+
+# We want to be able to use the functions in this file before configure
+# has figured out where the best binaries are kept, which means we have
+# to search for them ourselves - except when the results are already set
+# where we skip the searches.
+
+# Unless the user overrides by setting SED, search the path for either GNU
+# sed, or the sed that truncates its output the least.
+test -z "$SED" && {
+  _G_sed_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+  for _G_i in 1 2 3 4 5 6 7; do
+    _G_sed_script=$_G_sed_script$nl$_G_sed_script
+  done
+  echo "$_G_sed_script" 2>/dev/null | sed 99q >conftest.sed
+  _G_sed_script=
+
+  func_check_prog_sed ()
+  {
+    _G_path_prog=$1
+
+    _G_count=0
+    printf 0123456789 >conftest.in
+    while :
+    do
+      cat conftest.in conftest.in >conftest.tmp
+      mv conftest.tmp conftest.in
+      cp conftest.in conftest.nl
+      echo '' >> conftest.nl
+      "$_G_path_prog" -f conftest.sed <conftest.nl >conftest.out 2>/dev/null || break
+      diff conftest.out conftest.nl >/dev/null 2>&1 || break
+      _G_count=`expr $_G_count + 1`
+      if test "$_G_count" -gt "$_G_path_prog_max"; then
+        # Best one so far, save it but keep looking for a better one
+        func_check_prog_result=$_G_path_prog
+        _G_path_prog_max=$_G_count
+      fi
+      # 10*(2^10) chars as input seems more than enough
+      test 10 -lt "$_G_count" && break
+    done
+    rm -f conftest.in conftest.tmp conftest.nl conftest.out
+  }
+
+  func_path_progs "sed gsed" func_check_prog_sed $PATH:/usr/xpg4/bin
+  rm -f conftest.sed
+  SED=$func_path_progs_result
+}
+
+
+# Unless the user overrides by setting GREP, search the path for either GNU
+# grep, or the grep that truncates its output the least.
+test -z "$GREP" && {
+  func_check_prog_grep ()
+  {
+    _G_path_prog=$1
+
+    _G_count=0
+    _G_path_prog_max=0
+    printf 0123456789 >conftest.in
+    while :
+    do
+      cat conftest.in conftest.in >conftest.tmp
+      mv conftest.tmp conftest.in
+      cp conftest.in conftest.nl
+      echo 'GREP' >> conftest.nl
+      "$_G_path_prog" -e 'GREP$' -e '-(cannot match)-' <conftest.nl >conftest.out 2>/dev/null || break
+      diff conftest.out conftest.nl >/dev/null 2>&1 || break
+      _G_count=`expr $_G_count + 1`
+      if test "$_G_count" -gt "$_G_path_prog_max"; then
+        # Best one so far, save it but keep looking for a better one
+        func_check_prog_result=$_G_path_prog
+        _G_path_prog_max=$_G_count
+      fi
+      # 10*(2^10) chars as input seems more than enough
+      test 10 -lt "$_G_count" && break
+    done
+    rm -f conftest.in conftest.tmp conftest.nl conftest.out
+  }
+
+  func_path_progs "grep ggrep" func_check_prog_grep $PATH:/usr/xpg4/bin
+  GREP=$func_path_progs_result
+}
+
+
+## ------------------------------- ##
+## User overridable command paths. ##
+## ------------------------------- ##
+
+# All uppercase variable names are used for environment variables.  These
+# variables can be overridden by the user before calling a script that
+# uses them if a suitable command of that name is not already available
+# in the command search PATH.
 
 : ${CP="cp -f"}
-test "${ECHO+set}" = set || ECHO=${as_echo-'printf %s\n'}
+: ${ECHO="printf %s\n"}
+: ${EGREP="$GREP -E"}
+: ${FGREP="$GREP -F"}
+: ${LN_S="ln -s"}
 : ${MAKE="make"}
 : ${MKDIR="mkdir"}
 : ${MV="mv -f"}
 : ${RM="rm -f"}
 : ${SHELL="${CONFIG_SHELL-/bin/sh}"}
-: ${Xsed="$SED -e 1s/^X//"}
-
-# Global variables:
-EXIT_SUCCESS=0
-EXIT_FAILURE=1
-EXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.
-EXIT_SKIP=77	  # $? = 77 is used to indicate a skipped test to automake.
-
-exit_status=$EXIT_SUCCESS
-
-# Make sure IFS has a sensible default
-lt_nl='
-'
-IFS=" 	$lt_nl"
 
-dirname="s,/[^/]*$,,"
-basename="s,^.*/,,"
 
-# func_dirname file append nondir_replacement
-# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
-# otherwise set result to NONDIR_REPLACEMENT.
-func_dirname ()
-{
-    func_dirname_result=`$ECHO "${1}" | $SED "$dirname"`
-    if test "X$func_dirname_result" = "X${1}"; then
-      func_dirname_result="${3}"
-    else
-      func_dirname_result="$func_dirname_result${2}"
-    fi
-} # func_dirname may be replaced by extended shell implementation
+## -------------------- ##
+## Useful sed snippets. ##
+## -------------------- ##
 
+sed_dirname='s|/[^/]*$||'
+sed_basename='s|^.*/||'
 
-# func_basename file
-func_basename ()
-{
-    func_basename_result=`$ECHO "${1}" | $SED "$basename"`
-} # func_basename may be replaced by extended shell implementation
+# Sed substitution that helps us do robust quoting.  It backslashifies
+# metacharacters that are still active within double-quoted strings.
+sed_quote_subst='s|\([`"$\\]\)|\\\1|g'
 
+# Same as above, but do not quote variable references.
+sed_double_quote_subst='s/\(["`\\]\)/\\\1/g'
 
-# func_dirname_and_basename file append nondir_replacement
-# perform func_basename and func_dirname in a single function
-# call:
-#   dirname:  Compute the dirname of FILE.  If nonempty,
-#             add APPEND to the result, otherwise set result
-#             to NONDIR_REPLACEMENT.
-#             value returned in "$func_dirname_result"
-#   basename: Compute filename of FILE.
-#             value retuned in "$func_basename_result"
-# Implementation must be kept synchronized with func_dirname
-# and func_basename. For efficiency, we do not delegate to
-# those functions but instead duplicate the functionality here.
-func_dirname_and_basename ()
-{
-    # Extract subdirectory from the argument.
-    func_dirname_result=`$ECHO "${1}" | $SED -e "$dirname"`
-    if test "X$func_dirname_result" = "X${1}"; then
-      func_dirname_result="${3}"
-    else
-      func_dirname_result="$func_dirname_result${2}"
-    fi
-    func_basename_result=`$ECHO "${1}" | $SED -e "$basename"`
-} # func_dirname_and_basename may be replaced by extended shell implementation
+# Sed substitution that turns a string into a regex matching for the
+# string literally.
+sed_make_literal_regex='s|[].[^$\\*\/]|\\&|g'
 
+# Sed substitution that converts a w32 file name or path
+# that contains forward slashes, into one that contains
+# (escaped) backslashes.  A very naive implementation.
+sed_naive_backslashify='s|\\\\*|\\|g;s|/|\\|g;s|\\|\\\\|g'
+
+# Re-'\' parameter expansions in output of sed_double_quote_subst that
+# were '\'-ed in input to the same.  If an odd number of '\' preceded a
+# '$' in input to sed_double_quote_subst, that '$' was protected from
+# expansion.  Since each input '\' is now two '\'s, look for any number
+# of runs of four '\'s followed by two '\'s and then a '$'.  '\' that '$'.
+_G_bs='\\'
+_G_bs2='\\\\'
+_G_bs4='\\\\\\\\'
+_G_dollar='\$'
+sed_double_backslash="\
+  s/$_G_bs4/&\\
+/g
+  s/^$_G_bs2$_G_dollar/$_G_bs&/
+  s/\\([^$_G_bs]\\)$_G_bs2$_G_dollar/\\1$_G_bs2$_G_bs$_G_dollar/g
+  s/\n//g"
 
-# func_stripname prefix suffix name
-# strip PREFIX and SUFFIX off of NAME.
-# PREFIX and SUFFIX must not contain globbing or regex special
-# characters, hashes, percent signs, but SUFFIX may contain a leading
-# dot (in which case that matches only a dot).
-# func_strip_suffix prefix name
-func_stripname ()
-{
-    case ${2} in
-      .*) func_stripname_result=`$ECHO "${3}" | $SED "s%^${1}%%; s%\\\\${2}\$%%"`;;
-      *)  func_stripname_result=`$ECHO "${3}" | $SED "s%^${1}%%; s%${2}\$%%"`;;
-    esac
-} # func_stripname may be replaced by extended shell implementation
 
+## ----------------- ##
+## Global variables. ##
+## ----------------- ##
 
-# These SED scripts presuppose an absolute path with a trailing slash.
-pathcar='s,^/\([^/]*\).*$,\1,'
-pathcdr='s,^/[^/]*,,'
-removedotparts=':dotsl
-		s@/\./@/@g
-		t dotsl
-		s,/\.$,/,'
-collapseslashes='s@/\{1,\}@/@g'
-finalslash='s,/*$,/,'
+# Except for the global variables explicitly listed below, the following
+# functions in the '^func_' namespace, and the '^require_' namespace
+# variables initialised in the 'Resource management' section, sourcing
+# this file will not pollute your global namespace with anything
+# else. There's no portable way to scope variables in Bourne shell
+# though, so actually running these functions will sometimes place
+# results into a variable named after the function, and often use
+# temporary variables in the '^_G_' namespace. If you are careful to
+# avoid using those namespaces casually in your sourcing script, things
+# should continue to work as you expect. And, of course, you can freely
+# overwrite any of the functions or variables defined here before
+# calling anything to customize them.
 
-# func_normal_abspath PATH
-# Remove doubled-up and trailing slashes, "." path components,
-# and cancel out any ".." path components in PATH after making
-# it an absolute path.
-#             value returned in "$func_normal_abspath_result"
-func_normal_abspath ()
-{
-  # Start from root dir and reassemble the path.
-  func_normal_abspath_result=
-  func_normal_abspath_tpath=$1
-  func_normal_abspath_altnamespace=
-  case $func_normal_abspath_tpath in
-    "")
-      # Empty path, that just means $cwd.
-      func_stripname '' '/' "`pwd`"
-      func_normal_abspath_result=$func_stripname_result
-      return
-    ;;
-    # The next three entries are used to spot a run of precisely
-    # two leading slashes without using negated character classes;
-    # we take advantage of case's first-match behaviour.
-    ///*)
-      # Unusual form of absolute path, do nothing.
-    ;;
-    //*)
-      # Not necessarily an ordinary path; POSIX reserves leading '//'
-      # and for example Cygwin uses it to access remote file shares
-      # over CIFS/SMB, so we conserve a leading double slash if found.
-      func_normal_abspath_altnamespace=/
-    ;;
-    /*)
-      # Absolute path, do nothing.
-    ;;
-    *)
-      # Relative path, prepend $cwd.
-      func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath
-    ;;
-  esac
-  # Cancel out all the simple stuff to save iterations.  We also want
-  # the path to end with a slash for ease of parsing, so make sure
-  # there is one (and only one) here.
-  func_normal_abspath_tpath=`$ECHO "$func_normal_abspath_tpath" | $SED \
-        -e "$removedotparts" -e "$collapseslashes" -e "$finalslash"`
-  while :; do
-    # Processed it all yet?
-    if test "$func_normal_abspath_tpath" = / ; then
-      # If we ascended to the root using ".." the result may be empty now.
-      if test -z "$func_normal_abspath_result" ; then
-        func_normal_abspath_result=/
-      fi
-      break
-    fi
-    func_normal_abspath_tcomponent=`$ECHO "$func_normal_abspath_tpath" | $SED \
-        -e "$pathcar"`
-    func_normal_abspath_tpath=`$ECHO "$func_normal_abspath_tpath" | $SED \
-        -e "$pathcdr"`
-    # Figure out what to do with it
-    case $func_normal_abspath_tcomponent in
-      "")
-        # Trailing empty path component, ignore it.
-      ;;
-      ..)
-        # Parent dir; strip last assembled component from result.
-        func_dirname "$func_normal_abspath_result"
-        func_normal_abspath_result=$func_dirname_result
-      ;;
-      *)
-        # Actual path component, append it.
-        func_normal_abspath_result=$func_normal_abspath_result/$func_normal_abspath_tcomponent
-      ;;
-    esac
-  done
-  # Restore leading double-slash if one was found on entry.
-  func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result
-}
+EXIT_SUCCESS=0
+EXIT_FAILURE=1
+EXIT_MISMATCH=63  # $? = 63 is used to indicate version mismatch to missing.
+EXIT_SKIP=77	  # $? = 77 is used to indicate a skipped test to automake.
 
-# func_relative_path SRCDIR DSTDIR
-# generates a relative path from SRCDIR to DSTDIR, with a trailing
-# slash if non-empty, suitable for immediately appending a filename
-# without needing to append a separator.
-#             value returned in "$func_relative_path_result"
-func_relative_path ()
-{
-  func_relative_path_result=
-  func_normal_abspath "$1"
-  func_relative_path_tlibdir=$func_normal_abspath_result
-  func_normal_abspath "$2"
-  func_relative_path_tbindir=$func_normal_abspath_result
-
-  # Ascend the tree starting from libdir
-  while :; do
-    # check if we have found a prefix of bindir
-    case $func_relative_path_tbindir in
-      $func_relative_path_tlibdir)
-        # found an exact match
-        func_relative_path_tcancelled=
-        break
-        ;;
-      $func_relative_path_tlibdir*)
-        # found a matching prefix
-        func_stripname "$func_relative_path_tlibdir" '' "$func_relative_path_tbindir"
-        func_relative_path_tcancelled=$func_stripname_result
-        if test -z "$func_relative_path_result"; then
-          func_relative_path_result=.
-        fi
-        break
-        ;;
-      *)
-        func_dirname $func_relative_path_tlibdir
-        func_relative_path_tlibdir=${func_dirname_result}
-        if test "x$func_relative_path_tlibdir" = x ; then
-          # Have to descend all the way to the root!
-          func_relative_path_result=../$func_relative_path_result
-          func_relative_path_tcancelled=$func_relative_path_tbindir
-          break
-        fi
-        func_relative_path_result=../$func_relative_path_result
-        ;;
-    esac
-  done
+# Allow overriding, eg assuming that you follow the convention of
+# putting '$debug_cmd' at the start of all your functions, you can get
+# bash to show function call trace with:
+#
+#    debug_cmd='eval echo "${FUNCNAME[0]} $*" >&2' bash your-script-name
+debug_cmd=${debug_cmd-":"}
+exit_cmd=:
 
-  # Now calculate path; take care to avoid doubling-up slashes.
-  func_stripname '' '/' "$func_relative_path_result"
-  func_relative_path_result=$func_stripname_result
-  func_stripname '/' '/' "$func_relative_path_tcancelled"
-  if test "x$func_stripname_result" != x ; then
-    func_relative_path_result=${func_relative_path_result}/${func_stripname_result}
-  fi
+# By convention, finish your script with:
+#
+#    exit $exit_status
+#
+# so that you can set exit_status to non-zero if you want to indicate
+# something went wrong during execution without actually bailing out at
+# the point of failure.
+exit_status=$EXIT_SUCCESS
 
-  # Normalisation. If bindir is libdir, return empty string,
-  # else relative path ending with a slash; either way, target
-  # file name can be directly appended.
-  if test ! -z "$func_relative_path_result"; then
-    func_stripname './' '' "$func_relative_path_result/"
-    func_relative_path_result=$func_stripname_result
-  fi
-}
+# Work around backward compatibility issue on IRIX 6.5. On IRIX 6.4+, sh
+# is ksh but when the shell is invoked as "sh" and the current value of
+# the _XPG environment variable is not equal to 1 (one), the special
+# positional parameter $0, within a function call, is the name of the
+# function.
+progpath=$0
 
-# The name of this program:
-func_dirname_and_basename "$progpath"
-progname=$func_basename_result
+# The name of this program.
+progname=`$ECHO "$progpath" |$SED "$sed_basename"`
 
-# Make sure we have an absolute path for reexecution:
+# Make sure we have an absolute progpath for reexecution:
 case $progpath in
   [\\/]*|[A-Za-z]:\\*) ;;
   *[\\/]*)
-     progdir=$func_dirname_result
+     progdir=`$ECHO "$progpath" |$SED "$sed_dirname"`
      progdir=`cd "$progdir" && pwd`
-     progpath="$progdir/$progname"
+     progpath=$progdir/$progname
      ;;
   *)
-     save_IFS="$IFS"
+     _G_IFS=$IFS
      IFS=${PATH_SEPARATOR-:}
      for progdir in $PATH; do
-       IFS="$save_IFS"
+       IFS=$_G_IFS
        test -x "$progdir/$progname" && break
      done
-     IFS="$save_IFS"
+     IFS=$_G_IFS
      test -n "$progdir" || progdir=`pwd`
-     progpath="$progdir/$progname"
+     progpath=$progdir/$progname
      ;;
 esac
 
-# Sed substitution that helps us do robust quoting.  It backslashifies
-# metacharacters that are still active within double-quoted strings.
-Xsed="${SED}"' -e 1s/^X//'
-sed_quote_subst='s/\([`"$\\]\)/\\\1/g'
-
-# Same as above, but do not quote variable references.
-double_quote_subst='s/\(["`\\]\)/\\\1/g'
 
-# Sed substitution that turns a string into a regex matching for the
-# string literally.
-sed_make_literal_regex='s,[].[^$\\*\/],\\&,g'
+## ----------------- ##
+## Standard options. ##
+## ----------------- ##
 
-# Sed substitution that converts a w32 file name or path
-# which contains forward slashes, into one that contains
-# (escaped) backslashes.  A very naive implementation.
-lt_sed_naive_backslashify='s|\\\\*|\\|g;s|/|\\|g;s|\\|\\\\|g'
-
-# Re-`\' parameter expansions in output of double_quote_subst that were
-# `\'-ed in input to the same.  If an odd number of `\' preceded a '$'
-# in input to double_quote_subst, that '$' was protected from expansion.
-# Since each input `\' is now two `\'s, look for any number of runs of
-# four `\'s followed by two `\'s and then a '$'.  `\' that '$'.
-bs='\\'
-bs2='\\\\'
-bs4='\\\\\\\\'
-dollar='\$'
-sed_double_backslash="\
-  s/$bs4/&\\
-/g
-  s/^$bs2$dollar/$bs&/
-  s/\\([^$bs]\\)$bs2$dollar/\\1$bs2$bs$dollar/g
-  s/\n//g"
+# The following options affect the operation of the functions defined
+# below, and should be set appropriately depending on run-time para-
+# meters passed on the command line.
 
-# Standard options:
 opt_dry_run=false
-opt_help=false
 opt_quiet=false
 opt_verbose=false
-opt_warning=:
 
-# func_echo arg...
-# Echo program name prefixed message, along with the current mode
-# name if it has been set yet.
-func_echo ()
-{
-    $ECHO "$progname: ${opt_mode+$opt_mode: }$*"
-}
+# Categories 'all' and 'none' are always available.  Append any others
+# you will pass as the first argument to func_warning from your own
+# code.
+warning_categories=
 
-# func_verbose arg...
-# Echo program name prefixed message in verbose mode only.
-func_verbose ()
-{
-    $opt_verbose && func_echo ${1+"$@"}
+# By default, display warnings according to 'opt_warning_types'.  Set
+# 'warning_func'  to ':' to elide all warnings, or func_fatal_error to
+# treat the next displayed warning as a fatal error.
+warning_func=func_warn_and_continue
 
-    # A bug in bash halts the script if the last line of a function
-    # fails when set -e is in force, so we need another command to
-    # work around that:
-    :
-}
+# Set to 'all' to display all warnings, 'none' to suppress all
+# warnings, or a space delimited list of some subset of
+# 'warning_categories' to display only the listed warnings.
+opt_warning_types=all
 
-# func_echo_all arg...
-# Invoke $ECHO with all args, space-separated.
-func_echo_all ()
-{
-    $ECHO "$*"
-}
 
-# func_error arg...
-# Echo program name prefixed message to standard error.
-func_error ()
-{
-    $ECHO "$progname: ${opt_mode+$opt_mode: }"${1+"$@"} 1>&2
-}
+## -------------------- ##
+## Resource management. ##
+## -------------------- ##
 
-# func_warning arg...
-# Echo program name prefixed warning message to standard error.
-func_warning ()
-{
-    $opt_warning && $ECHO "$progname: ${opt_mode+$opt_mode: }warning: "${1+"$@"} 1>&2
+# This section contains definitions for functions that each ensure a
+# particular resource (a file, or a non-empty configuration variable for
+# example) is available, and if appropriate to extract default values
+# from pertinent package files. Call them using their associated
+# 'require_*' variable to ensure that they are executed, at most, once.
+#
+# It's entirely deliberate that calling these functions can set
+# variables that don't obey the namespace limitations obeyed by the rest
+# of this file, in order that that they be as useful as possible to
+# callers.
 
-    # bash bug again:
-    :
-}
 
-# func_fatal_error arg...
-# Echo program name prefixed message to standard error, and exit.
-func_fatal_error ()
+# require_term_colors
+# -------------------
+# Allow display of bold text on terminals that support it.
+require_term_colors=func_require_term_colors
+func_require_term_colors ()
 {
-    func_error ${1+"$@"}
-    exit $EXIT_FAILURE
-}
+    $debug_cmd
+
+    test -t 1 && {
+      # COLORTERM and USE_ANSI_COLORS environment variables take
+      # precedence, because most terminfo databases neglect to describe
+      # whether color sequences are supported.
+      test -n "${COLORTERM+set}" && : ${USE_ANSI_COLORS="1"}
+
+      if test 1 = "$USE_ANSI_COLORS"; then
+        # Standard ANSI escape sequences
+        tc_reset='[0m'
+        tc_bold='[1m';   tc_standout='[7m'
+        tc_red='[31m';   tc_green='[32m'
+        tc_blue='[34m';  tc_cyan='[36m'
+      else
+        # Otherwise trust the terminfo database after all.
+        test -n "`tput sgr0 2>/dev/null`" && {
+          tc_reset=`tput sgr0`
+          test -n "`tput bold 2>/dev/null`" && tc_bold=`tput bold`
+          tc_standout=$tc_bold
+          test -n "`tput smso 2>/dev/null`" && tc_standout=`tput smso`
+          test -n "`tput setaf 1 2>/dev/null`" && tc_red=`tput setaf 1`
+          test -n "`tput setaf 2 2>/dev/null`" && tc_green=`tput setaf 2`
+          test -n "`tput setaf 4 2>/dev/null`" && tc_blue=`tput setaf 4`
+          test -n "`tput setaf 5 2>/dev/null`" && tc_cyan=`tput setaf 5`
+        }
+      fi
+    }
 
-# func_fatal_help arg...
-# Echo program name prefixed message to standard error, followed by
-# a help hint, and exit.
-func_fatal_help ()
-{
-    func_error ${1+"$@"}
-    func_fatal_error "$help"
+    require_term_colors=:
 }
-help="Try \`$progname --help' for more information."  ## default
 
 
-# func_grep expression filename
+## ----------------- ##
+## Function library. ##
+## ----------------- ##
+
+# This section contains a variety of useful functions to call in your
+# scripts. Take note of the portable wrappers for features provided by
+# some modern shells, which will fall back to slower equivalents on
+# less featureful shells.
+
+
+# func_append VAR VALUE
+# ---------------------
+# Append VALUE onto the existing contents of VAR.
+
+  # We should try to minimise forks, especially on Windows where they are
+  # unreasonably slow, so skip the feature probes when bash or zsh are
+  # being used:
+  if test set = "${BASH_VERSION+set}${ZSH_VERSION+set}"; then
+    : ${_G_HAVE_ARITH_OP="yes"}
+    : ${_G_HAVE_XSI_OPS="yes"}
+    # The += operator was introduced in bash 3.1
+    case $BASH_VERSION in
+      [12].* | 3.0 | 3.0*) ;;
+      *)
+        : ${_G_HAVE_PLUSEQ_OP="yes"}
+        ;;
+    esac
+  fi
+
+  # _G_HAVE_PLUSEQ_OP
+  # Can be empty, in which case the shell is probed, "yes" if += is
+  # useable or anything else if it does not work.
+  test -z "$_G_HAVE_PLUSEQ_OP" \
+    && (eval 'x=a; x+=" b"; test "a b" = "$x"') 2>/dev/null \
+    && _G_HAVE_PLUSEQ_OP=yes
+
+if test yes = "$_G_HAVE_PLUSEQ_OP"
+then
+  # This is an XSI compatible shell, allowing a faster implementation...
+  eval 'func_append ()
+  {
+    $debug_cmd
+
+    eval "$1+=\$2"
+  }'
+else
+  # ...otherwise fall back to using expr, which is often a shell builtin.
+  func_append ()
+  {
+    $debug_cmd
+
+    eval "$1=\$$1\$2"
+  }
+fi
+
+
+# func_append_quoted VAR VALUE
+# ----------------------------
+# Quote VALUE and append to the end of shell variable VAR, separated
+# by a space.
+if test yes = "$_G_HAVE_PLUSEQ_OP"; then
+  eval 'func_append_quoted ()
+  {
+    $debug_cmd
+
+    func_quote_for_eval "$2"
+    eval "$1+=\\ \$func_quote_for_eval_result"
+  }'
+else
+  func_append_quoted ()
+  {
+    $debug_cmd
+
+    func_quote_for_eval "$2"
+    eval "$1=\$$1\\ \$func_quote_for_eval_result"
+  }
+fi
+
+
+# func_append_uniq VAR VALUE
+# --------------------------
+# Append unique VALUE onto the existing contents of VAR, assuming
+# entries are delimited by the first character of VALUE.  For example:
+#
+#   func_append_uniq options " --another-option option-argument"
+#
+# will only append to $options if " --another-option option-argument "
+# is not already present somewhere in $options already (note spaces at
+# each end implied by leading space in second argument).
+func_append_uniq ()
+{
+    $debug_cmd
+
+    eval _G_current_value='`$ECHO $'$1'`'
+    _G_delim=`expr "$2" : '\(.\)'`
+
+    case $_G_delim$_G_current_value$_G_delim in
+      *"$2$_G_delim"*) ;;
+      *) func_append "$@" ;;
+    esac
+}
+
+
+# func_arith TERM...
+# ------------------
+# Set func_arith_result to the result of evaluating TERMs.
+  test -z "$_G_HAVE_ARITH_OP" \
+    && (eval 'test 2 = $(( 1 + 1 ))') 2>/dev/null \
+    && _G_HAVE_ARITH_OP=yes
+
+if test yes = "$_G_HAVE_ARITH_OP"; then
+  eval 'func_arith ()
+  {
+    $debug_cmd
+
+    func_arith_result=$(( $* ))
+  }'
+else
+  func_arith ()
+  {
+    $debug_cmd
+
+    func_arith_result=`expr "$@"`
+  }
+fi
+
+
+# func_basename FILE
+# ------------------
+# Set func_basename_result to FILE with everything up to and including
+# the last / stripped.
+if test yes = "$_G_HAVE_XSI_OPS"; then
+  # If this shell supports suffix pattern removal, then use it to avoid
+  # forking. Hide the definitions single quotes in case the shell chokes
+  # on unsupported syntax...
+  _b='func_basename_result=${1##*/}'
+  _d='case $1 in
+        */*) func_dirname_result=${1%/*}$2 ;;
+        *  ) func_dirname_result=$3        ;;
+      esac'
+
+else
+  # ...otherwise fall back to using sed.
+  _b='func_basename_result=`$ECHO "$1" |$SED "$sed_basename"`'
+  _d='func_dirname_result=`$ECHO "$1"  |$SED "$sed_dirname"`
+      if test "X$func_dirname_result" = "X$1"; then
+        func_dirname_result=$3
+      else
+        func_append func_dirname_result "$2"
+      fi'
+fi
+
+eval 'func_basename ()
+{
+    $debug_cmd
+
+    '"$_b"'
+}'
+
+
+# func_dirname FILE APPEND NONDIR_REPLACEMENT
+# -------------------------------------------
+# Compute the dirname of FILE.  If nonempty, add APPEND to the result,
+# otherwise set result to NONDIR_REPLACEMENT.
+eval 'func_dirname ()
+{
+    $debug_cmd
+
+    '"$_d"'
+}'
+
+
+# func_dirname_and_basename FILE APPEND NONDIR_REPLACEMENT
+# --------------------------------------------------------
+# Perform func_basename and func_dirname in a single function
+# call:
+#   dirname:  Compute the dirname of FILE.  If nonempty,
+#             add APPEND to the result, otherwise set result
+#             to NONDIR_REPLACEMENT.
+#             value returned in "$func_dirname_result"
+#   basename: Compute filename of FILE.
+#             value retuned in "$func_basename_result"
+# For efficiency, we do not delegate to the functions above but instead
+# duplicate the functionality here.
+eval 'func_dirname_and_basename ()
+{
+    $debug_cmd
+
+    '"$_b"'
+    '"$_d"'
+}'
+
+
+# func_echo ARG...
+# ----------------
+# Echo program name prefixed message.
+func_echo ()
+{
+    $debug_cmd
+
+    _G_message=$*
+
+    func_echo_IFS=$IFS
+    IFS=$nl
+    for _G_line in $_G_message; do
+      IFS=$func_echo_IFS
+      $ECHO "$progname: $_G_line"
+    done
+    IFS=$func_echo_IFS
+}
+
+
+# func_echo_all ARG...
+# --------------------
+# Invoke $ECHO with all args, space-separated.
+func_echo_all ()
+{
+    $ECHO "$*"
+}
+
+
+# func_echo_infix_1 INFIX ARG...
+# ------------------------------
+# Echo program name, followed by INFIX on the first line, with any
+# additional lines not showing INFIX.
+func_echo_infix_1 ()
+{
+    $debug_cmd
+
+    $require_term_colors
+
+    _G_infix=$1; shift
+    _G_indent=$_G_infix
+    _G_prefix="$progname: $_G_infix: "
+    _G_message=$*
+
+    # Strip color escape sequences before counting printable length
+    for _G_tc in "$tc_reset" "$tc_bold" "$tc_standout" "$tc_red" "$tc_green" "$tc_blue" "$tc_cyan"
+    do
+      test -n "$_G_tc" && {
+        _G_esc_tc=`$ECHO "$_G_tc" | $SED "$sed_make_literal_regex"`
+        _G_indent=`$ECHO "$_G_indent" | $SED "s|$_G_esc_tc||g"`
+      }
+    done
+    _G_indent="$progname: "`echo "$_G_indent" | $SED 's|.| |g'`"  " ## exclude from sc_prohibit_nested_quotes
+
+    func_echo_infix_1_IFS=$IFS
+    IFS=$nl
+    for _G_line in $_G_message; do
+      IFS=$func_echo_infix_1_IFS
+      $ECHO "$_G_prefix$tc_bold$_G_line$tc_reset" >&2
+      _G_prefix=$_G_indent
+    done
+    IFS=$func_echo_infix_1_IFS
+}
+
+
+# func_error ARG...
+# -----------------
+# Echo program name prefixed message to standard error.
+func_error ()
+{
+    $debug_cmd
+
+    $require_term_colors
+
+    func_echo_infix_1 "  $tc_standout${tc_red}error$tc_reset" "$*" >&2
+}
+
+
+# func_fatal_error ARG...
+# -----------------------
+# Echo program name prefixed message to standard error, and exit.
+func_fatal_error ()
+{
+    $debug_cmd
+
+    func_error "$*"
+    exit $EXIT_FAILURE
+}
+
+
+# func_grep EXPRESSION FILENAME
+# -----------------------------
 # Check whether EXPRESSION matches any line of FILENAME, without output.
 func_grep ()
 {
+    $debug_cmd
+
     $GREP "$1" "$2" >/dev/null 2>&1
 }
 
 
-# func_mkdir_p directory-path
+# func_len STRING
+# ---------------
+# Set func_len_result to the length of STRING. STRING may not
+# start with a hyphen.
+  test -z "$_G_HAVE_XSI_OPS" \
+    && (eval 'x=a/b/c;
+      test 5aa/bb/cc = "${#x}${x%%/*}${x%/*}${x#*/}${x##*/}"') 2>/dev/null \
+    && _G_HAVE_XSI_OPS=yes
+
+if test yes = "$_G_HAVE_XSI_OPS"; then
+  eval 'func_len ()
+  {
+    $debug_cmd
+
+    func_len_result=${#1}
+  }'
+else
+  func_len ()
+  {
+    $debug_cmd
+
+    func_len_result=`expr "$1" : ".*" 2>/dev/null || echo $max_cmd_len`
+  }
+fi
+
+
+# func_mkdir_p DIRECTORY-PATH
+# ---------------------------
 # Make sure the entire path to DIRECTORY-PATH is available.
 func_mkdir_p ()
 {
-    my_directory_path="$1"
-    my_dir_list=
+    $debug_cmd
+
+    _G_directory_path=$1
+    _G_dir_list=
 
-    if test -n "$my_directory_path" && test "$opt_dry_run" != ":"; then
+    if test -n "$_G_directory_path" && test : != "$opt_dry_run"; then
 
-      # Protect directory names starting with `-'
-      case $my_directory_path in
-        -*) my_directory_path="./$my_directory_path" ;;
+      # Protect directory names starting with '-'
+      case $_G_directory_path in
+        -*) _G_directory_path=./$_G_directory_path ;;
       esac
 
       # While some portion of DIR does not yet exist...
-      while test ! -d "$my_directory_path"; do
+      while test ! -d "$_G_directory_path"; do
         # ...make a list in topmost first order.  Use a colon delimited
 	# list incase some portion of path contains whitespace.
-        my_dir_list="$my_directory_path:$my_dir_list"
+        _G_dir_list=$_G_directory_path:$_G_dir_list
 
         # If the last portion added has no slash in it, the list is done
-        case $my_directory_path in */*) ;; *) break ;; esac
+        case $_G_directory_path in */*) ;; *) break ;; esac
 
         # ...otherwise throw away the child directory and loop
-        my_directory_path=`$ECHO "$my_directory_path" | $SED -e "$dirname"`
+        _G_directory_path=`$ECHO "$_G_directory_path" | $SED -e "$sed_dirname"`
       done
-      my_dir_list=`$ECHO "$my_dir_list" | $SED 's,:*$,,'`
+      _G_dir_list=`$ECHO "$_G_dir_list" | $SED 's|:*$||'`
 
-      save_mkdir_p_IFS="$IFS"; IFS=':'
-      for my_dir in $my_dir_list; do
-	IFS="$save_mkdir_p_IFS"
-        # mkdir can fail with a `File exist' error if two processes
+      func_mkdir_p_IFS=$IFS; IFS=:
+      for _G_dir in $_G_dir_list; do
+	IFS=$func_mkdir_p_IFS
+        # mkdir can fail with a 'File exist' error if two processes
         # try to create one of the directories concurrently.  Don't
         # stop in that case!
-        $MKDIR "$my_dir" 2>/dev/null || :
+        $MKDIR "$_G_dir" 2>/dev/null || :
       done
-      IFS="$save_mkdir_p_IFS"
+      IFS=$func_mkdir_p_IFS
 
       # Bail out if we (or some other process) failed to create a directory.
-      test -d "$my_directory_path" || \
-        func_fatal_error "Failed to create \`$1'"
+      test -d "$_G_directory_path" || \
+        func_fatal_error "Failed to create '$1'"
     fi
 }
 
 
-# func_mktempdir [string]
+# func_mktempdir [BASENAME]
+# -------------------------
 # Make a temporary directory that won't clash with other running
 # libtool processes, and avoids race conditions if possible.  If
-# given, STRING is the basename for that directory.
+# given, BASENAME is the basename for that directory.
 func_mktempdir ()
 {
-    my_template="${TMPDIR-/tmp}/${1-$progname}"
+    $debug_cmd
+
+    _G_template=${TMPDIR-/tmp}/${1-$progname}
 
-    if test "$opt_dry_run" = ":"; then
+    if test : = "$opt_dry_run"; then
       # Return a directory name, but don't create it in dry-run mode
-      my_tmpdir="${my_template}-$$"
+      _G_tmpdir=$_G_template-$$
     else
 
       # If mktemp works, use that first and foremost
-      my_tmpdir=`mktemp -d "${my_template}-XXXXXXXX" 2>/dev/null`
+      _G_tmpdir=`mktemp -d "$_G_template-XXXXXXXX" 2>/dev/null`
 
-      if test ! -d "$my_tmpdir"; then
+      if test ! -d "$_G_tmpdir"; then
         # Failing that, at least try and use $RANDOM to avoid a race
-        my_tmpdir="${my_template}-${RANDOM-0}$$"
+        _G_tmpdir=$_G_template-${RANDOM-0}$$
 
-        save_mktempdir_umask=`umask`
+        func_mktempdir_umask=`umask`
         umask 0077
-        $MKDIR "$my_tmpdir"
-        umask $save_mktempdir_umask
+        $MKDIR "$_G_tmpdir"
+        umask $func_mktempdir_umask
       fi
 
       # If we're not in dry-run mode, bomb out on failure
-      test -d "$my_tmpdir" || \
-        func_fatal_error "cannot create temporary directory \`$my_tmpdir'"
+      test -d "$_G_tmpdir" || \
+        func_fatal_error "cannot create temporary directory '$_G_tmpdir'"
     fi
 
-    $ECHO "$my_tmpdir"
+    $ECHO "$_G_tmpdir"
 }
 
 
-# func_quote_for_eval arg
-# Aesthetically quote ARG to be evaled later.
-# This function returns two values: FUNC_QUOTE_FOR_EVAL_RESULT
-# is double-quoted, suitable for a subsequent eval, whereas
-# FUNC_QUOTE_FOR_EVAL_UNQUOTED_RESULT has merely all characters
-# which are still active within double quotes backslashified.
-func_quote_for_eval ()
+# func_normal_abspath PATH
+# ------------------------
+# Remove doubled-up and trailing slashes, "." path components,
+# and cancel out any ".." path components in PATH after making
+# it an absolute path.
+func_normal_abspath ()
 {
-    case $1 in
-      *[\\\`\"\$]*)
-	func_quote_for_eval_unquoted_result=`$ECHO "$1" | $SED "$sed_quote_subst"` ;;
-      *)
-        func_quote_for_eval_unquoted_result="$1" ;;
-    esac
+    $debug_cmd
 
-    case $func_quote_for_eval_unquoted_result in
-      # Double-quote args containing shell metacharacters to delay
-      # word splitting, command substitution and and variable
-      # expansion for a subsequent eval.
-      # Many Bourne shells cannot handle close brackets correctly
-      # in scan sets, so we specify it separately.
-      *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
-        func_quote_for_eval_result="\"$func_quote_for_eval_unquoted_result\""
+    # These SED scripts presuppose an absolute path with a trailing slash.
+    _G_pathcar='s|^/\([^/]*\).*$|\1|'
+    _G_pathcdr='s|^/[^/]*||'
+    _G_removedotparts=':dotsl
+		s|/\./|/|g
+		t dotsl
+		s|/\.$|/|'
+    _G_collapseslashes='s|/\{1,\}|/|g'
+    _G_finalslash='s|/*$|/|'
+
+    # Start from root dir and reassemble the path.
+    func_normal_abspath_result=
+    func_normal_abspath_tpath=$1
+    func_normal_abspath_altnamespace=
+    case $func_normal_abspath_tpath in
+      "")
+        # Empty path, that just means $cwd.
+        func_stripname '' '/' "`pwd`"
+        func_normal_abspath_result=$func_stripname_result
+        return
+        ;;
+      # The next three entries are used to spot a run of precisely
+      # two leading slashes without using negated character classes;
+      # we take advantage of case's first-match behaviour.
+      ///*)
+        # Unusual form of absolute path, do nothing.
+        ;;
+      //*)
+        # Not necessarily an ordinary path; POSIX reserves leading '//'
+        # and for example Cygwin uses it to access remote file shares
+        # over CIFS/SMB, so we conserve a leading double slash if found.
+        func_normal_abspath_altnamespace=/
+        ;;
+      /*)
+        # Absolute path, do nothing.
         ;;
       *)
-        func_quote_for_eval_result="$func_quote_for_eval_unquoted_result"
+        # Relative path, prepend $cwd.
+        func_normal_abspath_tpath=`pwd`/$func_normal_abspath_tpath
+        ;;
     esac
+
+    # Cancel out all the simple stuff to save iterations.  We also want
+    # the path to end with a slash for ease of parsing, so make sure
+    # there is one (and only one) here.
+    func_normal_abspath_tpath=`$ECHO "$func_normal_abspath_tpath" | $SED \
+          -e "$_G_removedotparts" -e "$_G_collapseslashes" -e "$_G_finalslash"`
+    while :; do
+      # Processed it all yet?
+      if test / = "$func_normal_abspath_tpath"; then
+        # If we ascended to the root using ".." the result may be empty now.
+        if test -z "$func_normal_abspath_result"; then
+          func_normal_abspath_result=/
+        fi
+        break
+      fi
+      func_normal_abspath_tcomponent=`$ECHO "$func_normal_abspath_tpath" | $SED \
+          -e "$_G_pathcar"`
+      func_normal_abspath_tpath=`$ECHO "$func_normal_abspath_tpath" | $SED \
+          -e "$_G_pathcdr"`
+      # Figure out what to do with it
+      case $func_normal_abspath_tcomponent in
+        "")
+          # Trailing empty path component, ignore it.
+          ;;
+        ..)
+          # Parent dir; strip last assembled component from result.
+          func_dirname "$func_normal_abspath_result"
+          func_normal_abspath_result=$func_dirname_result
+          ;;
+        *)
+          # Actual path component, append it.
+          func_append func_normal_abspath_result "/$func_normal_abspath_tcomponent"
+          ;;
+      esac
+    done
+    # Restore leading double-slash if one was found on entry.
+    func_normal_abspath_result=$func_normal_abspath_altnamespace$func_normal_abspath_result
+}
+
+
+# func_notquiet ARG...
+# --------------------
+# Echo program name prefixed message only when not in quiet mode.
+func_notquiet ()
+{
+    $debug_cmd
+
+    $opt_quiet || func_echo ${1+"$@"}
+
+    # A bug in bash halts the script if the last line of a function
+    # fails when set -e is in force, so we need another command to
+    # work around that:
+    :
+}
+
+
+# func_relative_path SRCDIR DSTDIR
+# --------------------------------
+# Set func_relative_path_result to the relative path from SRCDIR to DSTDIR.
+func_relative_path ()
+{
+    $debug_cmd
+
+    func_relative_path_result=
+    func_normal_abspath "$1"
+    func_relative_path_tlibdir=$func_normal_abspath_result
+    func_normal_abspath "$2"
+    func_relative_path_tbindir=$func_normal_abspath_result
+
+    # Ascend the tree starting from libdir
+    while :; do
+      # check if we have found a prefix of bindir
+      case $func_relative_path_tbindir in
+        $func_relative_path_tlibdir)
+          # found an exact match
+          func_relative_path_tcancelled=
+          break
+          ;;
+        $func_relative_path_tlibdir*)
+          # found a matching prefix
+          func_stripname "$func_relative_path_tlibdir" '' "$func_relative_path_tbindir"
+          func_relative_path_tcancelled=$func_stripname_result
+          if test -z "$func_relative_path_result"; then
+            func_relative_path_result=.
+          fi
+          break
+          ;;
+        *)
+          func_dirname $func_relative_path_tlibdir
+          func_relative_path_tlibdir=$func_dirname_result
+          if test -z "$func_relative_path_tlibdir"; then
+            # Have to descend all the way to the root!
+            func_relative_path_result=../$func_relative_path_result
+            func_relative_path_tcancelled=$func_relative_path_tbindir
+            break
+          fi
+          func_relative_path_result=../$func_relative_path_result
+          ;;
+      esac
+    done
+
+    # Now calculate path; take care to avoid doubling-up slashes.
+    func_stripname '' '/' "$func_relative_path_result"
+    func_relative_path_result=$func_stripname_result
+    func_stripname '/' '/' "$func_relative_path_tcancelled"
+    if test -n "$func_stripname_result"; then
+      func_append func_relative_path_result "/$func_stripname_result"
+    fi
+
+    # Normalisation. If bindir is libdir, return '.' else relative path.
+    if test -n "$func_relative_path_result"; then
+      func_stripname './' '' "$func_relative_path_result"
+      func_relative_path_result=$func_stripname_result
+    fi
+
+    test -n "$func_relative_path_result" || func_relative_path_result=.
+
+    :
 }
 
 
-# func_quote_for_expand arg
+# func_quote_for_eval ARG...
+# --------------------------
+# Aesthetically quote ARGs to be evaled later.
+# This function returns two values:
+#   i) func_quote_for_eval_result
+#      double-quoted, suitable for a subsequent eval
+#  ii) func_quote_for_eval_unquoted_result
+#      has all characters that are still active within double
+#      quotes backslashified.
+func_quote_for_eval ()
+{
+    $debug_cmd
+
+    func_quote_for_eval_unquoted_result=
+    func_quote_for_eval_result=
+    while test 0 -lt $#; do
+      case $1 in
+        *[\\\`\"\$]*)
+	  _G_unquoted_arg=`printf '%s\n' "$1" |$SED "$sed_quote_subst"` ;;
+        *)
+          _G_unquoted_arg=$1 ;;
+      esac
+      if test -n "$func_quote_for_eval_unquoted_result"; then
+	func_append func_quote_for_eval_unquoted_result " $_G_unquoted_arg"
+      else
+        func_append func_quote_for_eval_unquoted_result "$_G_unquoted_arg"
+      fi
+
+      case $_G_unquoted_arg in
+        # Double-quote args containing shell metacharacters to delay
+        # word splitting, command substitution and variable expansion
+        # for a subsequent eval.
+        # Many Bourne shells cannot handle close brackets correctly
+        # in scan sets, so we specify it separately.
+        *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
+          _G_quoted_arg=\"$_G_unquoted_arg\"
+          ;;
+        *)
+          _G_quoted_arg=$_G_unquoted_arg
+	  ;;
+      esac
+
+      if test -n "$func_quote_for_eval_result"; then
+	func_append func_quote_for_eval_result " $_G_quoted_arg"
+      else
+        func_append func_quote_for_eval_result "$_G_quoted_arg"
+      fi
+      shift
+    done
+}
+
+
+# func_quote_for_expand ARG
+# -------------------------
 # Aesthetically quote ARG to be evaled later; same as above,
 # but do not quote variable references.
 func_quote_for_expand ()
 {
+    $debug_cmd
+
     case $1 in
       *[\\\`\"]*)
-	my_arg=`$ECHO "$1" | $SED \
-	    -e "$double_quote_subst" -e "$sed_double_backslash"` ;;
+	_G_arg=`$ECHO "$1" | $SED \
+	    -e "$sed_double_quote_subst" -e "$sed_double_backslash"` ;;
       *)
-        my_arg="$1" ;;
+        _G_arg=$1 ;;
     esac
 
-    case $my_arg in
+    case $_G_arg in
       # Double-quote args containing shell metacharacters to delay
       # word splitting and command substitution for a subsequent eval.
       # Many Bourne shells cannot handle close brackets correctly
       # in scan sets, so we specify it separately.
       *[\[\~\#\^\&\*\(\)\{\}\|\;\<\>\?\'\ \	]*|*]*|"")
-        my_arg="\"$my_arg\""
+        _G_arg=\"$_G_arg\"
         ;;
     esac
 
-    func_quote_for_expand_result="$my_arg"
+    func_quote_for_expand_result=$_G_arg
+}
+
+
+# func_stripname PREFIX SUFFIX NAME
+# ---------------------------------
+# strip PREFIX and SUFFIX from NAME, and store in func_stripname_result.
+# PREFIX and SUFFIX must not contain globbing or regex special
+# characters, hashes, percent signs, but SUFFIX may contain a leading
+# dot (in which case that matches only a dot).
+if test yes = "$_G_HAVE_XSI_OPS"; then
+  eval 'func_stripname ()
+  {
+    $debug_cmd
+
+    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are
+    # positional parameters, so assign one to ordinary variable first.
+    func_stripname_result=$3
+    func_stripname_result=${func_stripname_result#"$1"}
+    func_stripname_result=${func_stripname_result%"$2"}
+  }'
+else
+  func_stripname ()
+  {
+    $debug_cmd
+
+    case $2 in
+      .*) func_stripname_result=`$ECHO "$3" | $SED -e "s%^$1%%" -e "s%\\\\$2\$%%"`;;
+      *)  func_stripname_result=`$ECHO "$3" | $SED -e "s%^$1%%" -e "s%$2\$%%"`;;
+    esac
+  }
+fi
+
+
+# func_show_eval CMD [FAIL_EXP]
+# -----------------------------
+# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is
+# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP
+# is given, then evaluate it.
+func_show_eval ()
+{
+    $debug_cmd
+
+    _G_cmd=$1
+    _G_fail_exp=${2-':'}
+
+    func_quote_for_expand "$_G_cmd"
+    eval "func_notquiet $func_quote_for_expand_result"
+
+    $opt_dry_run || {
+      eval "$_G_cmd"
+      _G_status=$?
+      if test 0 -ne "$_G_status"; then
+	eval "(exit $_G_status); $_G_fail_exp"
+      fi
+    }
+}
+
+
+# func_show_eval_locale CMD [FAIL_EXP]
+# ------------------------------------
+# Unless opt_quiet is true, then output CMD.  Then, if opt_dryrun is
+# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP
+# is given, then evaluate it.  Use the saved locale for evaluation.
+func_show_eval_locale ()
+{
+    $debug_cmd
+
+    _G_cmd=$1
+    _G_fail_exp=${2-':'}
+
+    $opt_quiet || {
+      func_quote_for_expand "$_G_cmd"
+      eval "func_echo $func_quote_for_expand_result"
+    }
+
+    $opt_dry_run || {
+      eval "$_G_user_locale
+	    $_G_cmd"
+      _G_status=$?
+      eval "$_G_safe_locale"
+      if test 0 -ne "$_G_status"; then
+	eval "(exit $_G_status); $_G_fail_exp"
+      fi
+    }
+}
+
+
+# func_tr_sh
+# ----------
+# Turn $1 into a string suitable for a shell variable name.
+# Result is stored in $func_tr_sh_result.  All characters
+# not in the set a-zA-Z0-9_ are replaced with '_'. Further,
+# if $1 begins with a digit, a '_' is prepended as well.
+func_tr_sh ()
+{
+    $debug_cmd
+
+    case $1 in
+    [0-9]* | *[!a-zA-Z0-9_]*)
+      func_tr_sh_result=`$ECHO "$1" | $SED -e 's/^\([0-9]\)/_\1/' -e 's/[^a-zA-Z0-9_]/_/g'`
+      ;;
+    * )
+      func_tr_sh_result=$1
+      ;;
+    esac
+}
+
+
+# func_verbose ARG...
+# -------------------
+# Echo program name prefixed message in verbose mode only.
+func_verbose ()
+{
+    $debug_cmd
+
+    $opt_verbose && func_echo "$*"
+
+    :
+}
+
+
+# func_warn_and_continue ARG...
+# -----------------------------
+# Echo program name prefixed warning message to standard error.
+func_warn_and_continue ()
+{
+    $debug_cmd
+
+    $require_term_colors
+
+    func_echo_infix_1 "${tc_red}warning$tc_reset" "$*" >&2
+}
+
+
+# func_warning CATEGORY ARG...
+# ----------------------------
+# Echo program name prefixed warning message to standard error. Warning
+# messages can be filtered according to CATEGORY, where this function
+# elides messages where CATEGORY is not listed in the global variable
+# 'opt_warning_types'.
+func_warning ()
+{
+    $debug_cmd
+
+    # CATEGORY must be in the warning_categories list!
+    case " $warning_categories " in
+      *" $1 "*) ;;
+      *) func_internal_error "invalid warning category '$1'" ;;
+    esac
+
+    _G_category=$1
+    shift
+
+    case " $opt_warning_types " in
+      *" $_G_category "*) $warning_func ${1+"$@"} ;;
+    esac
 }
 
 
-# func_show_eval cmd [fail_exp]
-# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is
-# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP
-# is given, then evaluate it.
-func_show_eval ()
+# func_sort_ver VER1 VER2
+# -----------------------
+# 'sort -V' is not generally available.
+# Note this deviates from the version comparison in automake
+# in that it treats 1.5 < 1.5.0, and treats 1.4.4a < 1.4-p3a
+# but this should suffice as we won't be specifying old
+# version formats or redundant trailing .0 in bootstrap.conf.
+# If we did want full compatibility then we should probably
+# use m4_version_compare from autoconf.
+func_sort_ver ()
+{
+    $debug_cmd
+
+    printf '%s\n%s\n' "$1" "$2" \
+      | sort -t. -k 1,1n -k 2,2n -k 3,3n -k 4,4n -k 5,5n -k 6,6n -k 7,7n -k 8,8n -k 9,9n
+}
+
+# func_lt_ver PREV CURR
+# ---------------------
+# Return true if PREV and CURR are in the correct order according to
+# func_sort_ver, otherwise false.  Use it like this:
+#
+#  func_lt_ver "$prev_ver" "$proposed_ver" || func_fatal_error "..."
+func_lt_ver ()
+{
+    $debug_cmd
+
+    test "x$1" = x`func_sort_ver "$1" "$2" | $SED 1q`
+}
+
+
+# Local variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'before-save-hook 'time-stamp)
+# time-stamp-pattern: "10/scriptversion=%:y-%02m-%02d.%02H; # UTC"
+# time-stamp-time-zone: "UTC"
+# End:
+#! /bin/sh
+
+# Set a version string for this script.
+scriptversion=2014-01-07.03; # UTC
+
+# A portable, pluggable option parser for Bourne shell.
+# Written by Gary V. Vaughan, 2010
+
+# Copyright (C) 2010-2015 Free Software Foundation, Inc.
+# This is free software; see the source for copying conditions.  There is NO
+# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+# Please report bugs or propose patches to gary@gnu.org.
+
+
+## ------ ##
+## Usage. ##
+## ------ ##
+
+# This file is a library for parsing options in your shell scripts along
+# with assorted other useful supporting features that you can make use
+# of too.
+#
+# For the simplest scripts you might need only:
+#
+#   #!/bin/sh
+#   . relative/path/to/funclib.sh
+#   . relative/path/to/options-parser
+#   scriptversion=1.0
+#   func_options ${1+"$@"}
+#   eval set dummy "$func_options_result"; shift
+#   ...rest of your script...
+#
+# In order for the '--version' option to work, you will need to have a
+# suitably formatted comment like the one at the top of this file
+# starting with '# Written by ' and ending with '# warranty; '.
+#
+# For '-h' and '--help' to work, you will also need a one line
+# description of your script's purpose in a comment directly above the
+# '# Written by ' line, like the one at the top of this file.
+#
+# The default options also support '--debug', which will turn on shell
+# execution tracing (see the comment above debug_cmd below for another
+# use), and '--verbose' and the func_verbose function to allow your script
+# to display verbose messages only when your user has specified
+# '--verbose'.
+#
+# After sourcing this file, you can plug processing for additional
+# options by amending the variables from the 'Configuration' section
+# below, and following the instructions in the 'Option parsing'
+# section further down.
+
+## -------------- ##
+## Configuration. ##
+## -------------- ##
+
+# You should override these variables in your script after sourcing this
+# file so that they reflect the customisations you have added to the
+# option parser.
+
+# The usage line for option parsing errors and the start of '-h' and
+# '--help' output messages. You can embed shell variables for delayed
+# expansion at the time the message is displayed, but you will need to
+# quote other shell meta-characters carefully to prevent them being
+# expanded when the contents are evaled.
+usage='$progpath [OPTION]...'
+
+# Short help message in response to '-h' and '--help'.  Add to this or
+# override it after sourcing this library to reflect the full set of
+# options your script accepts.
+usage_message="\
+       --debug        enable verbose shell tracing
+   -W, --warnings=CATEGORY
+                      report the warnings falling in CATEGORY [all]
+   -v, --verbose      verbosely report processing
+       --version      print version information and exit
+   -h, --help         print short or long help message and exit
+"
+
+# Additional text appended to 'usage_message' in response to '--help'.
+long_help_message="
+Warning categories include:
+       'all'          show all warnings
+       'none'         turn off all the warnings
+       'error'        warnings are treated as fatal errors"
+
+# Help message printed before fatal option parsing errors.
+fatal_help="Try '\$progname --help' for more information."
+
+
+
+## ------------------------- ##
+## Hook function management. ##
+## ------------------------- ##
+
+# This section contains functions for adding, removing, and running hooks
+# to the main code.  A hook is just a named list of of function, that can
+# be run in order later on.
+
+# func_hookable FUNC_NAME
+# -----------------------
+# Declare that FUNC_NAME will run hooks added with
+# 'func_add_hook FUNC_NAME ...'.
+func_hookable ()
+{
+    $debug_cmd
+
+    func_append hookable_fns " $1"
+}
+
+
+# func_add_hook FUNC_NAME HOOK_FUNC
+# ---------------------------------
+# Request that FUNC_NAME call HOOK_FUNC before it returns.  FUNC_NAME must
+# first have been declared "hookable" by a call to 'func_hookable'.
+func_add_hook ()
+{
+    $debug_cmd
+
+    case " $hookable_fns " in
+      *" $1 "*) ;;
+      *) func_fatal_error "'$1' does not accept hook functions." ;;
+    esac
+
+    eval func_append ${1}_hooks '" $2"'
+}
+
+
+# func_remove_hook FUNC_NAME HOOK_FUNC
+# ------------------------------------
+# Remove HOOK_FUNC from the list of functions called by FUNC_NAME.
+func_remove_hook ()
+{
+    $debug_cmd
+
+    eval ${1}_hooks='`$ECHO "\$'$1'_hooks" |$SED "s| '$2'||"`'
+}
+
+
+# func_run_hooks FUNC_NAME [ARG]...
+# ---------------------------------
+# Run all hook functions registered to FUNC_NAME.
+# It is assumed that the list of hook functions contains nothing more
+# than a whitespace-delimited list of legal shell function names, and
+# no effort is wasted trying to catch shell meta-characters or preserve
+# whitespace.
+func_run_hooks ()
+{
+    $debug_cmd
+
+    case " $hookable_fns " in
+      *" $1 "*) ;;
+      *) func_fatal_error "'$1' does not support hook funcions.n" ;;
+    esac
+
+    eval _G_hook_fns=\$$1_hooks; shift
+
+    for _G_hook in $_G_hook_fns; do
+      eval $_G_hook '"$@"'
+
+      # store returned options list back into positional
+      # parameters for next 'cmd' execution.
+      eval _G_hook_result=\$${_G_hook}_result
+      eval set dummy "$_G_hook_result"; shift
+    done
+
+    func_quote_for_eval ${1+"$@"}
+    func_run_hooks_result=$func_quote_for_eval_result
+}
+
+
+
+## --------------- ##
+## Option parsing. ##
+## --------------- ##
+
+# In order to add your own option parsing hooks, you must accept the
+# full positional parameter list in your hook function, remove any
+# options that you action, and then pass back the remaining unprocessed
+# options in '<hooked_function_name>_result', escaped suitably for
+# 'eval'.  Like this:
+#
+#    my_options_prep ()
+#    {
+#        $debug_cmd
+#
+#        # Extend the existing usage message.
+#        usage_message=$usage_message'
+#      -s, --silent       don'\''t print informational messages
+#    '
+#
+#        func_quote_for_eval ${1+"$@"}
+#        my_options_prep_result=$func_quote_for_eval_result
+#    }
+#    func_add_hook func_options_prep my_options_prep
+#
+#
+#    my_silent_option ()
+#    {
+#        $debug_cmd
+#
+#        # Note that for efficiency, we parse as many options as we can
+#        # recognise in a loop before passing the remainder back to the
+#        # caller on the first unrecognised argument we encounter.
+#        while test $# -gt 0; do
+#          opt=$1; shift
+#          case $opt in
+#            --silent|-s) opt_silent=: ;;
+#            # Separate non-argument short options:
+#            -s*)         func_split_short_opt "$_G_opt"
+#                         set dummy "$func_split_short_opt_name" \
+#                             "-$func_split_short_opt_arg" ${1+"$@"}
+#                         shift
+#                         ;;
+#            *)            set dummy "$_G_opt" "$*"; shift; break ;;
+#          esac
+#        done
+#
+#        func_quote_for_eval ${1+"$@"}
+#        my_silent_option_result=$func_quote_for_eval_result
+#    }
+#    func_add_hook func_parse_options my_silent_option
+#
+#
+#    my_option_validation ()
+#    {
+#        $debug_cmd
+#
+#        $opt_silent && $opt_verbose && func_fatal_help "\
+#    '--silent' and '--verbose' options are mutually exclusive."
+#
+#        func_quote_for_eval ${1+"$@"}
+#        my_option_validation_result=$func_quote_for_eval_result
+#    }
+#    func_add_hook func_validate_options my_option_validation
+#
+# You'll alse need to manually amend $usage_message to reflect the extra
+# options you parse.  It's preferable to append if you can, so that
+# multiple option parsing hooks can be added safely.
+
+
+# func_options [ARG]...
+# ---------------------
+# All the functions called inside func_options are hookable. See the
+# individual implementations for details.
+func_hookable func_options
+func_options ()
 {
-    my_cmd="$1"
-    my_fail_exp="${2-:}"
+    $debug_cmd
 
-    ${opt_silent-false} || {
-      func_quote_for_expand "$my_cmd"
-      eval "func_echo $func_quote_for_expand_result"
-    }
+    func_options_prep ${1+"$@"}
+    eval func_parse_options \
+        ${func_options_prep_result+"$func_options_prep_result"}
+    eval func_validate_options \
+        ${func_parse_options_result+"$func_parse_options_result"}
 
-    if ${opt_dry_run-false}; then :; else
-      eval "$my_cmd"
-      my_status=$?
-      if test "$my_status" -eq 0; then :; else
-	eval "(exit $my_status); $my_fail_exp"
-      fi
-    fi
+    eval func_run_hooks func_options \
+        ${func_validate_options_result+"$func_validate_options_result"}
+
+    # save modified positional parameters for caller
+    func_options_result=$func_run_hooks_result
 }
 
 
-# func_show_eval_locale cmd [fail_exp]
-# Unless opt_silent is true, then output CMD.  Then, if opt_dryrun is
-# not true, evaluate CMD.  If the evaluation of CMD fails, and FAIL_EXP
-# is given, then evaluate it.  Use the saved locale for evaluation.
-func_show_eval_locale ()
+# func_options_prep [ARG]...
+# --------------------------
+# All initialisations required before starting the option parse loop.
+# Note that when calling hook functions, we pass through the list of
+# positional parameters.  If a hook function modifies that list, and
+# needs to propogate that back to rest of this script, then the complete
+# modified list must be put in 'func_run_hooks_result' before
+# returning.
+func_hookable func_options_prep
+func_options_prep ()
 {
-    my_cmd="$1"
-    my_fail_exp="${2-:}"
+    $debug_cmd
 
-    ${opt_silent-false} || {
-      func_quote_for_expand "$my_cmd"
-      eval "func_echo $func_quote_for_expand_result"
-    }
+    # Option defaults:
+    opt_verbose=false
+    opt_warning_types=
 
-    if ${opt_dry_run-false}; then :; else
-      eval "$lt_user_locale
-	    $my_cmd"
-      my_status=$?
-      eval "$lt_safe_locale"
-      if test "$my_status" -eq 0; then :; else
-	eval "(exit $my_status); $my_fail_exp"
-      fi
-    fi
+    func_run_hooks func_options_prep ${1+"$@"}
+
+    # save modified positional parameters for caller
+    func_options_prep_result=$func_run_hooks_result
 }
 
-# func_tr_sh
-# Turn $1 into a string suitable for a shell variable name.
-# Result is stored in $func_tr_sh_result.  All characters
-# not in the set a-zA-Z0-9_ are replaced with '_'. Further,
-# if $1 begins with a digit, a '_' is prepended as well.
-func_tr_sh ()
+
+# func_parse_options [ARG]...
+# ---------------------------
+# The main option parsing loop.
+func_hookable func_parse_options
+func_parse_options ()
 {
-  case $1 in
-  [0-9]* | *[!a-zA-Z0-9_]*)
-    func_tr_sh_result=`$ECHO "$1" | $SED 's/^\([0-9]\)/_\1/; s/[^a-zA-Z0-9_]/_/g'`
-    ;;
-  * )
-    func_tr_sh_result=$1
-    ;;
-  esac
+    $debug_cmd
+
+    func_parse_options_result=
+
+    # this just eases exit handling
+    while test $# -gt 0; do
+      # Defer to hook functions for initial option parsing, so they
+      # get priority in the event of reusing an option name.
+      func_run_hooks func_parse_options ${1+"$@"}
+
+      # Adjust func_parse_options positional parameters to match
+      eval set dummy "$func_run_hooks_result"; shift
+
+      # Break out of the loop if we already parsed every option.
+      test $# -gt 0 || break
+
+      _G_opt=$1
+      shift
+      case $_G_opt in
+        --debug|-x)   debug_cmd='set -x'
+                      func_echo "enabling shell trace mode"
+                      $debug_cmd
+                      ;;
+
+        --no-warnings|--no-warning|--no-warn)
+                      set dummy --warnings none ${1+"$@"}
+                      shift
+		      ;;
+
+        --warnings|--warning|-W)
+                      test $# = 0 && func_missing_arg $_G_opt && break
+                      case " $warning_categories $1" in
+                        *" $1 "*)
+                          # trailing space prevents matching last $1 above
+                          func_append_uniq opt_warning_types " $1"
+                          ;;
+                        *all)
+                          opt_warning_types=$warning_categories
+                          ;;
+                        *none)
+                          opt_warning_types=none
+                          warning_func=:
+                          ;;
+                        *error)
+                          opt_warning_types=$warning_categories
+                          warning_func=func_fatal_error
+                          ;;
+                        *)
+                          func_fatal_error \
+                             "unsupported warning category: '$1'"
+                          ;;
+                      esac
+                      shift
+                      ;;
+
+        --verbose|-v) opt_verbose=: ;;
+        --version)    func_version ;;
+        -\?|-h)       func_usage ;;
+        --help)       func_help ;;
+
+	# Separate optargs to long options (plugins may need this):
+	--*=*)        func_split_equals "$_G_opt"
+	              set dummy "$func_split_equals_lhs" \
+                          "$func_split_equals_rhs" ${1+"$@"}
+                      shift
+                      ;;
+
+       # Separate optargs to short options:
+        -W*)
+                      func_split_short_opt "$_G_opt"
+                      set dummy "$func_split_short_opt_name" \
+                          "$func_split_short_opt_arg" ${1+"$@"}
+                      shift
+                      ;;
+
+        # Separate non-argument short options:
+        -\?*|-h*|-v*|-x*)
+                      func_split_short_opt "$_G_opt"
+                      set dummy "$func_split_short_opt_name" \
+                          "-$func_split_short_opt_arg" ${1+"$@"}
+                      shift
+                      ;;
+
+        --)           break ;;
+        -*)           func_fatal_help "unrecognised option: '$_G_opt'" ;;
+        *)            set dummy "$_G_opt" ${1+"$@"}; shift; break ;;
+      esac
+    done
+
+    # save modified positional parameters for caller
+    func_quote_for_eval ${1+"$@"}
+    func_parse_options_result=$func_quote_for_eval_result
 }
 
 
-# func_version
-# Echo version message to standard output and exit.
-func_version ()
+# func_validate_options [ARG]...
+# ------------------------------
+# Perform any sanity checks on option settings and/or unconsumed
+# arguments.
+func_hookable func_validate_options
+func_validate_options ()
 {
-    $opt_debug
+    $debug_cmd
 
-    $SED -n '/(C)/!b go
-	:more
-	/\./!{
-	  N
-	  s/\n# / /
-	  b more
-	}
-	:go
-	/^# '$PROGRAM' (GNU /,/# warranty; / {
-        s/^# //
-	s/^# *$//
-        s/\((C)\)[ 0-9,-]*\( [1-9][0-9]*\)/\1\2/
-        p
-     }' < "$progpath"
-     exit $?
+    # Display all warnings if -W was not given.
+    test -n "$opt_warning_types" || opt_warning_types=" $warning_categories"
+
+    func_run_hooks func_validate_options ${1+"$@"}
+
+    # Bail if the options were screwed!
+    $exit_cmd $EXIT_FAILURE
+
+    # save modified positional parameters for caller
+    func_validate_options_result=$func_run_hooks_result
 }
 
-# func_usage
-# Echo short help message to standard output and exit.
-func_usage ()
+
+
+## ----------------- ##
+## Helper functions. ##
+## ----------------- ##
+
+# This section contains the helper functions used by the rest of the
+# hookable option parser framework in ascii-betical order.
+
+
+# func_fatal_help ARG...
+# ----------------------
+# Echo program name prefixed message to standard error, followed by
+# a help hint, and exit.
+func_fatal_help ()
 {
-    $opt_debug
+    $debug_cmd
 
-    $SED -n '/^# Usage:/,/^#  *.*--help/ {
-        s/^# //
-	s/^# *$//
-	s/\$progname/'$progname'/
-	p
-    }' < "$progpath"
-    echo
-    $ECHO "run \`$progname --help | more' for full usage"
-    exit $?
+    eval \$ECHO \""Usage: $usage"\"
+    eval \$ECHO \""$fatal_help"\"
+    func_error ${1+"$@"}
+    exit $EXIT_FAILURE
 }
 
-# func_help [NOEXIT]
-# Echo long help message to standard output and exit,
-# unless 'noexit' is passed as argument.
+
+# func_help
+# ---------
+# Echo long help message to standard output and exit.
 func_help ()
 {
-    $opt_debug
-
-    $SED -n '/^# Usage:/,/# Report bugs to/ {
-	:print
-        s/^# //
-	s/^# *$//
-	s*\$progname*'$progname'*
-	s*\$host*'"$host"'*
-	s*\$SHELL*'"$SHELL"'*
-	s*\$LTCC*'"$LTCC"'*
-	s*\$LTCFLAGS*'"$LTCFLAGS"'*
-	s*\$LD*'"$LD"'*
-	s/\$with_gnu_ld/'"$with_gnu_ld"'/
-	s/\$automake_version/'"`(${AUTOMAKE-automake} --version) 2>/dev/null |$SED 1q`"'/
-	s/\$autoconf_version/'"`(${AUTOCONF-autoconf} --version) 2>/dev/null |$SED 1q`"'/
-	p
-	d
-     }
-     /^# .* home page:/b print
-     /^# General help using/b print
-     ' < "$progpath"
-    ret=$?
-    if test -z "$1"; then
-      exit $ret
-    fi
+    $debug_cmd
+
+    func_usage_message
+    $ECHO "$long_help_message"
+    exit 0
 }
 
-# func_missing_arg argname
+
+# func_missing_arg ARGNAME
+# ------------------------
 # Echo program name prefixed message to standard error and set global
 # exit_cmd.
 func_missing_arg ()
 {
-    $opt_debug
+    $debug_cmd
 
-    func_error "missing argument for $1."
+    func_error "Missing argument for '$1'."
     exit_cmd=exit
 }
 
 
-# func_split_short_opt shortopt
+# func_split_equals STRING
+# ------------------------
+# Set func_split_equals_lhs and func_split_equals_rhs shell variables after
+# splitting STRING at the '=' sign.
+test -z "$_G_HAVE_XSI_OPS" \
+    && (eval 'x=a/b/c;
+      test 5aa/bb/cc = "${#x}${x%%/*}${x%/*}${x#*/}${x##*/}"') 2>/dev/null \
+    && _G_HAVE_XSI_OPS=yes
+
+if test yes = "$_G_HAVE_XSI_OPS"
+then
+  # This is an XSI compatible shell, allowing a faster implementation...
+  eval 'func_split_equals ()
+  {
+      $debug_cmd
+
+      func_split_equals_lhs=${1%%=*}
+      func_split_equals_rhs=${1#*=}
+      test "x$func_split_equals_lhs" = "x$1" \
+        && func_split_equals_rhs=
+  }'
+else
+  # ...otherwise fall back to using expr, which is often a shell builtin.
+  func_split_equals ()
+  {
+      $debug_cmd
+
+      func_split_equals_lhs=`expr "x$1" : 'x\([^=]*\)'`
+      func_split_equals_rhs=
+      test "x$func_split_equals_lhs" = "x$1" \
+        || func_split_equals_rhs=`expr "x$1" : 'x[^=]*=\(.*\)$'`
+  }
+fi #func_split_equals
+
+
+# func_split_short_opt SHORTOPT
+# -----------------------------
 # Set func_split_short_opt_name and func_split_short_opt_arg shell
 # variables after splitting SHORTOPT after the 2nd character.
-func_split_short_opt ()
+if test yes = "$_G_HAVE_XSI_OPS"
+then
+  # This is an XSI compatible shell, allowing a faster implementation...
+  eval 'func_split_short_opt ()
+  {
+      $debug_cmd
+
+      func_split_short_opt_arg=${1#??}
+      func_split_short_opt_name=${1%"$func_split_short_opt_arg"}
+  }'
+else
+  # ...otherwise fall back to using expr, which is often a shell builtin.
+  func_split_short_opt ()
+  {
+      $debug_cmd
+
+      func_split_short_opt_name=`expr "x$1" : 'x-\(.\)'`
+      func_split_short_opt_arg=`expr "x$1" : 'x-.\(.*\)$'`
+  }
+fi #func_split_short_opt
+
+
+# func_usage
+# ----------
+# Echo short help message to standard output and exit.
+func_usage ()
 {
-    my_sed_short_opt='1s/^\(..\).*$/\1/;q'
-    my_sed_short_rest='1s/^..\(.*\)$/\1/;q'
+    $debug_cmd
 
-    func_split_short_opt_name=`$ECHO "$1" | $SED "$my_sed_short_opt"`
-    func_split_short_opt_arg=`$ECHO "$1" | $SED "$my_sed_short_rest"`
-} # func_split_short_opt may be replaced by extended shell implementation
+    func_usage_message
+    $ECHO "Run '$progname --help |${PAGER-more}' for full usage"
+    exit 0
+}
 
 
-# func_split_long_opt longopt
-# Set func_split_long_opt_name and func_split_long_opt_arg shell
-# variables after splitting LONGOPT at the `=' sign.
-func_split_long_opt ()
+# func_usage_message
+# ------------------
+# Echo short help message to standard output.
+func_usage_message ()
 {
-    my_sed_long_opt='1s/^\(--[^=]*\)=.*/\1/;q'
-    my_sed_long_arg='1s/^--[^=]*=//'
+    $debug_cmd
 
-    func_split_long_opt_name=`$ECHO "$1" | $SED "$my_sed_long_opt"`
-    func_split_long_opt_arg=`$ECHO "$1" | $SED "$my_sed_long_arg"`
-} # func_split_long_opt may be replaced by extended shell implementation
+    eval \$ECHO \""Usage: $usage"\"
+    echo
+    $SED -n 's|^# ||
+        /^Written by/{
+          x;p;x
+        }
+	h
+	/^Written by/q' < "$progpath"
+    echo
+    eval \$ECHO \""$usage_message"\"
+}
 
-exit_cmd=:
 
+# func_version
+# ------------
+# Echo version message to standard output and exit.
+func_version ()
+{
+    $debug_cmd
 
+    printf '%s\n' "$progname $scriptversion"
+    $SED -n '
+        /(C)/!b go
+        :more
+        /\./!{
+          N
+          s|\n# | |
+          b more
+        }
+        :go
+        /^# Written by /,/# warranty; / {
+          s|^# ||
+          s|^# *$||
+          s|\((C)\)[ 0-9,-]*[ ,-]\([1-9][0-9]* \)|\1 \2|
+          p
+        }
+        /^# Written by / {
+          s|^# ||
+          p
+        }
+        /^warranty; /q' < "$progpath"
 
+    exit $?
+}
 
 
-magic="%%%MAGIC variable%%%"
-magic_exe="%%%MAGIC EXE variable%%%"
+# Local variables:
+# mode: shell-script
+# sh-indentation: 2
+# eval: (add-hook 'before-save-hook 'time-stamp)
+# time-stamp-pattern: "10/scriptversion=%:y-%02m-%02d.%02H; # UTC"
+# time-stamp-time-zone: "UTC"
+# End:
 
-# Global variables.
-nonopt=
-preserve_args=
-lo2o="s/\\.lo\$/.${objext}/"
-o2lo="s/\\.${objext}\$/.lo/"
-extracted_archives=
-extracted_serial=0
+# Set a version string.
+scriptversion='(GNU libtool) 2.4.6'
 
-# If this variable is set in any of the actions, the command in it
-# will be execed at the end.  This prevents here-documents from being
-# left over by shells.
-exec_cmd=
 
-# func_append var value
-# Append VALUE to the end of shell variable VAR.
-func_append ()
+# func_echo ARG...
+# ----------------
+# Libtool also displays the current mode in messages, so override
+# funclib.sh func_echo with this custom definition.
+func_echo ()
 {
-    eval "${1}=\$${1}\${2}"
-} # func_append may be replaced by extended shell implementation
+    $debug_cmd
 
-# func_append_quoted var value
-# Quote VALUE and append to the end of shell variable VAR, separated
-# by a space.
-func_append_quoted ()
-{
-    func_quote_for_eval "${2}"
-    eval "${1}=\$${1}\\ \$func_quote_for_eval_result"
-} # func_append_quoted may be replaced by extended shell implementation
+    _G_message=$*
+
+    func_echo_IFS=$IFS
+    IFS=$nl
+    for _G_line in $_G_message; do
+      IFS=$func_echo_IFS
+      $ECHO "$progname${opt_mode+: $opt_mode}: $_G_line"
+    done
+    IFS=$func_echo_IFS
+}
 
 
-# func_arith arithmetic-term...
-func_arith ()
+# func_warning ARG...
+# -------------------
+# Libtool warnings are not categorized, so override funclib.sh
+# func_warning with this simpler definition.
+func_warning ()
 {
-    func_arith_result=`expr "${@}"`
-} # func_arith may be replaced by extended shell implementation
+    $debug_cmd
+
+    $warning_func ${1+"$@"}
+}
+
 
+## ---------------- ##
+## Options parsing. ##
+## ---------------- ##
+
+# Hook in the functions to make sure our own options are parsed during
+# the option parsing loop.
+
+usage='$progpath [OPTION]... [MODE-ARG]...'
+
+# Short help message in response to '-h'.
+usage_message="Options:
+       --config             show all configuration variables
+       --debug              enable verbose shell tracing
+   -n, --dry-run            display commands without modifying any files
+       --features           display basic configuration information and exit
+       --mode=MODE          use operation mode MODE
+       --no-warnings        equivalent to '-Wnone'
+       --preserve-dup-deps  don't remove duplicate dependency libraries
+       --quiet, --silent    don't print informational messages
+       --tag=TAG            use configuration variables from tag TAG
+   -v, --verbose            print more informational messages than default
+       --version            print version information
+   -W, --warnings=CATEGORY  report the warnings falling in CATEGORY [all]
+   -h, --help, --help-all   print short, long, or detailed help message
+"
 
-# func_len string
-# STRING may not start with a hyphen.
-func_len ()
+# Additional text appended to 'usage_message' in response to '--help'.
+func_help ()
 {
-    func_len_result=`expr "${1}" : ".*" 2>/dev/null || echo $max_cmd_len`
-} # func_len may be replaced by extended shell implementation
+    $debug_cmd
+
+    func_usage_message
+    $ECHO "$long_help_message
+
+MODE must be one of the following:
+
+       clean           remove files from the build directory
+       compile         compile a source file into a libtool object
+       execute         automatically set library path, then run a program
+       finish          complete the installation of libtool libraries
+       install         install libraries or executables
+       link            create a library or an executable
+       uninstall       remove libraries from an installed directory
+
+MODE-ARGS vary depending on the MODE.  When passed as first option,
+'--mode=MODE' may be abbreviated as 'MODE' or a unique abbreviation of that.
+Try '$progname --help --mode=MODE' for a more detailed description of MODE.
+
+When reporting a bug, please describe a test case to reproduce it and
+include the following information:
+
+       host-triplet:   $host
+       shell:          $SHELL
+       compiler:       $LTCC
+       compiler flags: $LTCFLAGS
+       linker:         $LD (gnu? $with_gnu_ld)
+       version:        $progname (GNU libtool) 2.4.6
+       automake:       `($AUTOMAKE --version) 2>/dev/null |$SED 1q`
+       autoconf:       `($AUTOCONF --version) 2>/dev/null |$SED 1q`
+
+Report bugs to <bug-libtool@gnu.org>.
+GNU libtool home page: <http://www.gnu.org/software/libtool/>.
+General help using GNU software: <http://www.gnu.org/gethelp/>."
+    exit 0
+}
 
 
-# func_lo2o object
-func_lo2o ()
-{
-    func_lo2o_result=`$ECHO "${1}" | $SED "$lo2o"`
-} # func_lo2o may be replaced by extended shell implementation
+# func_lo2o OBJECT-NAME
+# ---------------------
+# Transform OBJECT-NAME from a '.lo' suffix to the platform specific
+# object suffix.
 
+lo2o=s/\\.lo\$/.$objext/
+o2lo=s/\\.$objext\$/.lo/
 
-# func_xform libobj-or-source
-func_xform ()
-{
-    func_xform_result=`$ECHO "${1}" | $SED 's/\.[^.]*$/.lo/'`
-} # func_xform may be replaced by extended shell implementation
+if test yes = "$_G_HAVE_XSI_OPS"; then
+  eval 'func_lo2o ()
+  {
+    case $1 in
+      *.lo) func_lo2o_result=${1%.lo}.$objext ;;
+      *   ) func_lo2o_result=$1               ;;
+    esac
+  }'
+
+  # func_xform LIBOBJ-OR-SOURCE
+  # ---------------------------
+  # Transform LIBOBJ-OR-SOURCE from a '.o' or '.c' (or otherwise)
+  # suffix to a '.lo' libtool-object suffix.
+  eval 'func_xform ()
+  {
+    func_xform_result=${1%.*}.lo
+  }'
+else
+  # ...otherwise fall back to using sed.
+  func_lo2o ()
+  {
+    func_lo2o_result=`$ECHO "$1" | $SED "$lo2o"`
+  }
+
+  func_xform ()
+  {
+    func_xform_result=`$ECHO "$1" | $SED 's|\.[^.]*$|.lo|'`
+  }
+fi
 
 
-# func_fatal_configuration arg...
+# func_fatal_configuration ARG...
+# -------------------------------
 # Echo program name prefixed message to standard error, followed by
 # a configuration failure hint, and exit.
 func_fatal_configuration ()
 {
-    func_error ${1+"$@"}
-    func_error "See the $PACKAGE documentation for more information."
-    func_fatal_error "Fatal configuration error."
+    func__fatal_error ${1+"$@"} \
+      "See the $PACKAGE documentation for more information." \
+      "Fatal configuration error."
 }
 
 
 # func_config
+# -----------
 # Display the configuration for all the tags in this script.
 func_config ()
 {
@@ -915,17 +2149,19 @@ func_config ()
     exit $?
 }
 
+
 # func_features
+# -------------
 # Display the features supported by this script.
 func_features ()
 {
     echo "host: $host"
-    if test "$build_libtool_libs" = yes; then
+    if test yes = "$build_libtool_libs"; then
       echo "enable shared libraries"
     else
       echo "disable shared libraries"
     fi
-    if test "$build_old_libs" = yes; then
+    if test yes = "$build_old_libs"; then
       echo "enable static libraries"
     else
       echo "disable static libraries"
@@ -934,289 +2170,297 @@ func_features ()
     exit $?
 }
 
-# func_enable_tag tagname
+
+# func_enable_tag TAGNAME
+# -----------------------
 # Verify that TAGNAME is valid, and either flag an error and exit, or
 # enable the TAGNAME tag.  We also add TAGNAME to the global $taglist
 # variable here.
 func_enable_tag ()
 {
-  # Global variable:
-  tagname="$1"
+    # Global variable:
+    tagname=$1
 
-  re_begincf="^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\$"
-  re_endcf="^# ### END LIBTOOL TAG CONFIG: $tagname\$"
-  sed_extractcf="/$re_begincf/,/$re_endcf/p"
+    re_begincf="^# ### BEGIN LIBTOOL TAG CONFIG: $tagname\$"
+    re_endcf="^# ### END LIBTOOL TAG CONFIG: $tagname\$"
+    sed_extractcf=/$re_begincf/,/$re_endcf/p
 
-  # Validate tagname.
-  case $tagname in
-    *[!-_A-Za-z0-9,/]*)
-      func_fatal_error "invalid tag name: $tagname"
-      ;;
-  esac
+    # Validate tagname.
+    case $tagname in
+      *[!-_A-Za-z0-9,/]*)
+        func_fatal_error "invalid tag name: $tagname"
+        ;;
+    esac
 
-  # Don't test for the "default" C tag, as we know it's
-  # there but not specially marked.
-  case $tagname in
-    CC) ;;
+    # Don't test for the "default" C tag, as we know it's
+    # there but not specially marked.
+    case $tagname in
+        CC) ;;
     *)
-      if $GREP "$re_begincf" "$progpath" >/dev/null 2>&1; then
-	taglist="$taglist $tagname"
-
-	# Evaluate the configuration.  Be careful to quote the path
-	# and the sed script, to avoid splitting on whitespace, but
-	# also don't use non-portable quotes within backquotes within
-	# quotes we have to do it in 2 steps:
-	extractedcf=`$SED -n -e "$sed_extractcf" < "$progpath"`
-	eval "$extractedcf"
-      else
-	func_error "ignoring unknown tag $tagname"
-      fi
-      ;;
-  esac
+        if $GREP "$re_begincf" "$progpath" >/dev/null 2>&1; then
+	  taglist="$taglist $tagname"
+
+	  # Evaluate the configuration.  Be careful to quote the path
+	  # and the sed script, to avoid splitting on whitespace, but
+	  # also don't use non-portable quotes within backquotes within
+	  # quotes we have to do it in 2 steps:
+	  extractedcf=`$SED -n -e "$sed_extractcf" < "$progpath"`
+	  eval "$extractedcf"
+        else
+	  func_error "ignoring unknown tag $tagname"
+        fi
+        ;;
+    esac
 }
 
+
 # func_check_version_match
+# ------------------------
 # Ensure that we are using m4 macros, and libtool script from the same
 # release of libtool.
 func_check_version_match ()
 {
-  if test "$package_revision" != "$macro_revision"; then
-    if test "$VERSION" != "$macro_version"; then
-      if test -z "$macro_version"; then
-        cat >&2 <<_LT_EOF
+    if test "$package_revision" != "$macro_revision"; then
+      if test "$VERSION" != "$macro_version"; then
+        if test -z "$macro_version"; then
+          cat >&2 <<_LT_EOF
 $progname: Version mismatch error.  This is $PACKAGE $VERSION, but the
 $progname: definition of this LT_INIT comes from an older release.
 $progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION
 $progname: and run autoconf again.
 _LT_EOF
-      else
-        cat >&2 <<_LT_EOF
+        else
+          cat >&2 <<_LT_EOF
 $progname: Version mismatch error.  This is $PACKAGE $VERSION, but the
 $progname: definition of this LT_INIT comes from $PACKAGE $macro_version.
 $progname: You should recreate aclocal.m4 with macros from $PACKAGE $VERSION
 $progname: and run autoconf again.
 _LT_EOF
-      fi
-    else
-      cat >&2 <<_LT_EOF
+        fi
+      else
+        cat >&2 <<_LT_EOF
 $progname: Version mismatch error.  This is $PACKAGE $VERSION, revision $package_revision,
 $progname: but the definition of this LT_INIT comes from revision $macro_revision.
 $progname: You should recreate aclocal.m4 with macros from revision $package_revision
 $progname: of $PACKAGE $VERSION and run autoconf again.
 _LT_EOF
-    fi
+      fi
 
-    exit $EXIT_MISMATCH
-  fi
+      exit $EXIT_MISMATCH
+    fi
 }
 
 
-# Shorthand for --mode=foo, only valid as the first argument
-case $1 in
-clean|clea|cle|cl)
-  shift; set dummy --mode clean ${1+"$@"}; shift
-  ;;
-compile|compil|compi|comp|com|co|c)
-  shift; set dummy --mode compile ${1+"$@"}; shift
-  ;;
-execute|execut|execu|exec|exe|ex|e)
-  shift; set dummy --mode execute ${1+"$@"}; shift
-  ;;
-finish|finis|fini|fin|fi|f)
-  shift; set dummy --mode finish ${1+"$@"}; shift
-  ;;
-install|instal|insta|inst|ins|in|i)
-  shift; set dummy --mode install ${1+"$@"}; shift
-  ;;
-link|lin|li|l)
-  shift; set dummy --mode link ${1+"$@"}; shift
-  ;;
-uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)
-  shift; set dummy --mode uninstall ${1+"$@"}; shift
-  ;;
-esac
+# libtool_options_prep [ARG]...
+# -----------------------------
+# Preparation for options parsed by libtool.
+libtool_options_prep ()
+{
+    $debug_mode
 
+    # Option defaults:
+    opt_config=false
+    opt_dlopen=
+    opt_dry_run=false
+    opt_help=false
+    opt_mode=
+    opt_preserve_dup_deps=false
+    opt_quiet=false
 
+    nonopt=
+    preserve_args=
 
-# Option defaults:
-opt_debug=:
-opt_dry_run=false
-opt_config=false
-opt_preserve_dup_deps=false
-opt_features=false
-opt_finish=false
-opt_help=false
-opt_help_all=false
-opt_silent=:
-opt_warning=:
-opt_verbose=:
-opt_silent=false
-opt_verbose=false
+    # Shorthand for --mode=foo, only valid as the first argument
+    case $1 in
+    clean|clea|cle|cl)
+      shift; set dummy --mode clean ${1+"$@"}; shift
+      ;;
+    compile|compil|compi|comp|com|co|c)
+      shift; set dummy --mode compile ${1+"$@"}; shift
+      ;;
+    execute|execut|execu|exec|exe|ex|e)
+      shift; set dummy --mode execute ${1+"$@"}; shift
+      ;;
+    finish|finis|fini|fin|fi|f)
+      shift; set dummy --mode finish ${1+"$@"}; shift
+      ;;
+    install|instal|insta|inst|ins|in|i)
+      shift; set dummy --mode install ${1+"$@"}; shift
+      ;;
+    link|lin|li|l)
+      shift; set dummy --mode link ${1+"$@"}; shift
+      ;;
+    uninstall|uninstal|uninsta|uninst|unins|unin|uni|un|u)
+      shift; set dummy --mode uninstall ${1+"$@"}; shift
+      ;;
+    esac
+
+    # Pass back the list of options.
+    func_quote_for_eval ${1+"$@"}
+    libtool_options_prep_result=$func_quote_for_eval_result
+}
+func_add_hook func_options_prep libtool_options_prep
 
 
-# Parse options once, thoroughly.  This comes as soon as possible in the
-# script to make things like `--version' happen as quickly as we can.
+# libtool_parse_options [ARG]...
+# ---------------------------------
+# Provide handling for libtool specific options.
+libtool_parse_options ()
 {
-  # this just eases exit handling
-  while test $# -gt 0; do
-    opt="$1"
-    shift
-    case $opt in
-      --debug|-x)	opt_debug='set -x'
-			func_echo "enabling shell trace mode"
-			$opt_debug
-			;;
-      --dry-run|--dryrun|-n)
-			opt_dry_run=:
-			;;
-      --config)
-			opt_config=:
-func_config
-			;;
-      --dlopen|-dlopen)
-			optarg="$1"
-			opt_dlopen="${opt_dlopen+$opt_dlopen
-}$optarg"
-			shift
-			;;
-      --preserve-dup-deps)
-			opt_preserve_dup_deps=:
-			;;
-      --features)
-			opt_features=:
-func_features
-			;;
-      --finish)
-			opt_finish=:
-set dummy --mode finish ${1+"$@"}; shift
-			;;
-      --help)
-			opt_help=:
-			;;
-      --help-all)
-			opt_help_all=:
-opt_help=': help-all'
-			;;
-      --mode)
-			test $# = 0 && func_missing_arg $opt && break
-			optarg="$1"
-			opt_mode="$optarg"
-case $optarg in
-  # Valid mode arguments:
-  clean|compile|execute|finish|install|link|relink|uninstall) ;;
-
-  # Catch anything else as an error
-  *) func_error "invalid argument for $opt"
-     exit_cmd=exit
-     break
-     ;;
-esac
-			shift
-			;;
-      --no-silent|--no-quiet)
-			opt_silent=false
-func_append preserve_args " $opt"
-			;;
-      --no-warning|--no-warn)
-			opt_warning=false
-func_append preserve_args " $opt"
-			;;
-      --no-verbose)
-			opt_verbose=false
-func_append preserve_args " $opt"
-			;;
-      --silent|--quiet)
-			opt_silent=:
-func_append preserve_args " $opt"
-        opt_verbose=false
-			;;
-      --verbose|-v)
-			opt_verbose=:
-func_append preserve_args " $opt"
-opt_silent=false
-			;;
-      --tag)
-			test $# = 0 && func_missing_arg $opt && break
-			optarg="$1"
-			opt_tag="$optarg"
-func_append preserve_args " $opt $optarg"
-func_enable_tag "$optarg"
-			shift
-			;;
-
-      -\?|-h)		func_usage				;;
-      --help)		func_help				;;
-      --version)	func_version				;;
-
-      # Separate optargs to long options:
-      --*=*)
-			func_split_long_opt "$opt"
-			set dummy "$func_split_long_opt_name" "$func_split_long_opt_arg" ${1+"$@"}
-			shift
-			;;
-
-      # Separate non-argument short options:
-      -\?*|-h*|-n*|-v*)
-			func_split_short_opt "$opt"
-			set dummy "$func_split_short_opt_name" "-$func_split_short_opt_arg" ${1+"$@"}
-			shift
-			;;
-
-      --)		break					;;
-      -*)		func_fatal_help "unrecognized option \`$opt'" ;;
-      *)		set dummy "$opt" ${1+"$@"};	shift; break  ;;
-    esac
-  done
+    $debug_cmd
 
-  # Validate options:
+    # Perform our own loop to consume as many options as possible in
+    # each iteration.
+    while test $# -gt 0; do
+      _G_opt=$1
+      shift
+      case $_G_opt in
+        --dry-run|--dryrun|-n)
+                        opt_dry_run=:
+                        ;;
+
+        --config)       func_config ;;
+
+        --dlopen|-dlopen)
+                        opt_dlopen="${opt_dlopen+$opt_dlopen
+}$1"
+                        shift
+                        ;;
+
+        --preserve-dup-deps)
+                        opt_preserve_dup_deps=: ;;
+
+        --features)     func_features ;;
+
+        --finish)       set dummy --mode finish ${1+"$@"}; shift ;;
+
+        --help)         opt_help=: ;;
+
+        --help-all)     opt_help=': help-all' ;;
+
+        --mode)         test $# = 0 && func_missing_arg $_G_opt && break
+                        opt_mode=$1
+                        case $1 in
+                          # Valid mode arguments:
+                          clean|compile|execute|finish|install|link|relink|uninstall) ;;
+
+                          # Catch anything else as an error
+                          *) func_error "invalid argument for $_G_opt"
+                             exit_cmd=exit
+                             break
+                             ;;
+                        esac
+                        shift
+                        ;;
+
+        --no-silent|--no-quiet)
+                        opt_quiet=false
+                        func_append preserve_args " $_G_opt"
+                        ;;
+
+        --no-warnings|--no-warning|--no-warn)
+                        opt_warning=false
+                        func_append preserve_args " $_G_opt"
+                        ;;
+
+        --no-verbose)
+                        opt_verbose=false
+                        func_append preserve_args " $_G_opt"
+                        ;;
+
+        --silent|--quiet)
+                        opt_quiet=:
+                        opt_verbose=false
+                        func_append preserve_args " $_G_opt"
+                        ;;
+
+        --tag)          test $# = 0 && func_missing_arg $_G_opt && break
+                        opt_tag=$1
+                        func_append preserve_args " $_G_opt $1"
+                        func_enable_tag "$1"
+                        shift
+                        ;;
+
+        --verbose|-v)   opt_quiet=false
+                        opt_verbose=:
+                        func_append preserve_args " $_G_opt"
+                        ;;
+
+	# An option not handled by this hook function:
+        *)		set dummy "$_G_opt" ${1+"$@"};	shift; break  ;;
+      esac
+    done
 
-  # save first non-option argument
-  if test "$#" -gt 0; then
-    nonopt="$opt"
-    shift
-  fi
 
-  # preserve --debug
-  test "$opt_debug" = : || func_append preserve_args " --debug"
+    # save modified positional parameters for caller
+    func_quote_for_eval ${1+"$@"}
+    libtool_parse_options_result=$func_quote_for_eval_result
+}
+func_add_hook func_parse_options libtool_parse_options
 
-  case $host in
-    *cygwin* | *mingw* | *pw32* | *cegcc*)
-      # don't eliminate duplications in $postdeps and $predeps
-      opt_duplicate_compiler_generated_deps=:
-      ;;
-    *)
-      opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps
-      ;;
-  esac
 
-  $opt_help || {
-    # Sanity checks first:
-    func_check_version_match
 
-    if test "$build_libtool_libs" != yes && test "$build_old_libs" != yes; then
-      func_fatal_configuration "not configured to build any kind of library"
+# libtool_validate_options [ARG]...
+# ---------------------------------
+# Perform any sanity checks on option settings and/or unconsumed
+# arguments.
+libtool_validate_options ()
+{
+    # save first non-option argument
+    if test 0 -lt $#; then
+      nonopt=$1
+      shift
     fi
 
-    # Darwin sucks
-    eval std_shrext=\"$shrext_cmds\"
+    # preserve --debug
+    test : = "$debug_cmd" || func_append preserve_args " --debug"
 
-    # Only execute mode is allowed to have -dlopen flags.
-    if test -n "$opt_dlopen" && test "$opt_mode" != execute; then
-      func_error "unrecognized option \`-dlopen'"
-      $ECHO "$help" 1>&2
-      exit $EXIT_FAILURE
-    fi
+    case $host in
+      # Solaris2 added to fix http://debbugs.gnu.org/cgi/bugreport.cgi?bug=16452
+      # see also: http://gcc.gnu.org/bugzilla/show_bug.cgi?id=59788
+      *cygwin* | *mingw* | *pw32* | *cegcc* | *solaris2* | *os2*)
+        # don't eliminate duplications in $postdeps and $predeps
+        opt_duplicate_compiler_generated_deps=:
+        ;;
+      *)
+        opt_duplicate_compiler_generated_deps=$opt_preserve_dup_deps
+        ;;
+    esac
 
-    # Change the help message to a mode-specific one.
-    generic_help="$help"
-    help="Try \`$progname --help --mode=$opt_mode' for more information."
-  }
+    $opt_help || {
+      # Sanity checks first:
+      func_check_version_match
 
+      test yes != "$build_libtool_libs" \
+        && test yes != "$build_old_libs" \
+        && func_fatal_configuration "not configured to build any kind of library"
 
-  # Bail if the options were screwed
-  $exit_cmd $EXIT_FAILURE
+      # Darwin sucks
+      eval std_shrext=\"$shrext_cmds\"
+
+      # Only execute mode is allowed to have -dlopen flags.
+      if test -n "$opt_dlopen" && test execute != "$opt_mode"; then
+        func_error "unrecognized option '-dlopen'"
+        $ECHO "$help" 1>&2
+        exit $EXIT_FAILURE
+      fi
+
+      # Change the help message to a mode-specific one.
+      generic_help=$help
+      help="Try '$progname --help --mode=$opt_mode' for more information."
+    }
+
+    # Pass back the unparsed argument list
+    func_quote_for_eval ${1+"$@"}
+    libtool_validate_options_result=$func_quote_for_eval_result
 }
+func_add_hook func_validate_options libtool_validate_options
+
 
+# Process options as early as possible so that --help and --version
+# can return quickly.
+func_options ${1+"$@"}
+eval set dummy "$func_options_result"; shift
 
 
 
@@ -1224,24 +2468,52 @@ func_enable_tag "$optarg"
 ##    Main.    ##
 ## ----------- ##
 
+magic='%%%MAGIC variable%%%'
+magic_exe='%%%MAGIC EXE variable%%%'
+
+# Global variables.
+extracted_archives=
+extracted_serial=0
+
+# If this variable is set in any of the actions, the command in it
+# will be execed at the end.  This prevents here-documents from being
+# left over by shells.
+exec_cmd=
+
+
+# A function that is used when there is no print builtin or printf.
+func_fallback_echo ()
+{
+  eval 'cat <<_LTECHO_EOF
+$1
+_LTECHO_EOF'
+}
+
+# func_generated_by_libtool
+# True iff stdin has been generated by Libtool. This function is only
+# a basic sanity check; it will hardly flush out determined imposters.
+func_generated_by_libtool_p ()
+{
+  $GREP "^# Generated by .*$PACKAGE" > /dev/null 2>&1
+}
+
 # func_lalib_p file
-# True iff FILE is a libtool `.la' library or `.lo' object file.
+# True iff FILE is a libtool '.la' library or '.lo' object file.
 # This function is only a basic sanity check; it will hardly flush out
 # determined imposters.
 func_lalib_p ()
 {
     test -f "$1" &&
-      $SED -e 4q "$1" 2>/dev/null \
-        | $GREP "^# Generated by .*$PACKAGE" > /dev/null 2>&1
+      $SED -e 4q "$1" 2>/dev/null | func_generated_by_libtool_p
 }
 
 # func_lalib_unsafe_p file
-# True iff FILE is a libtool `.la' library or `.lo' object file.
+# True iff FILE is a libtool '.la' library or '.lo' object file.
 # This function implements the same check as func_lalib_p without
 # resorting to external programs.  To this end, it redirects stdin and
 # closes it afterwards, without saving the original file descriptor.
 # As a safety measure, use it only where a negative result would be
-# fatal anyway.  Works if `file' does not exist.
+# fatal anyway.  Works if 'file' does not exist.
 func_lalib_unsafe_p ()
 {
     lalib_p=no
@@ -1249,13 +2521,13 @@ func_lalib_unsafe_p ()
 	for lalib_p_l in 1 2 3 4
 	do
 	    read lalib_p_line
-	    case "$lalib_p_line" in
+	    case $lalib_p_line in
 		\#\ Generated\ by\ *$PACKAGE* ) lalib_p=yes; break;;
 	    esac
 	done
 	exec 0<&5 5<&-
     fi
-    test "$lalib_p" = yes
+    test yes = "$lalib_p"
 }
 
 # func_ltwrapper_script_p file
@@ -1264,7 +2536,8 @@ func_lalib_unsafe_p ()
 # determined imposters.
 func_ltwrapper_script_p ()
 {
-    func_lalib_p "$1"
+    test -f "$1" &&
+      $lt_truncate_bin < "$1" 2>/dev/null | func_generated_by_libtool_p
 }
 
 # func_ltwrapper_executable_p file
@@ -1289,7 +2562,7 @@ func_ltwrapper_scriptname ()
 {
     func_dirname_and_basename "$1" "" "."
     func_stripname '' '.exe' "$func_basename_result"
-    func_ltwrapper_scriptname_result="$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper"
+    func_ltwrapper_scriptname_result=$func_dirname_result/$objdir/${func_stripname_result}_ltshwrapper
 }
 
 # func_ltwrapper_p file
@@ -1308,11 +2581,13 @@ func_ltwrapper_p ()
 # FAIL_CMD may read-access the current command in variable CMD!
 func_execute_cmds ()
 {
-    $opt_debug
+    $debug_cmd
+
     save_ifs=$IFS; IFS='~'
     for cmd in $1; do
-      IFS=$save_ifs
+      IFS=$sp$nl
       eval cmd=\"$cmd\"
+      IFS=$save_ifs
       func_show_eval "$cmd" "${2-:}"
     done
     IFS=$save_ifs
@@ -1324,10 +2599,11 @@ func_execute_cmds ()
 # Note that it is not necessary on cygwin/mingw to append a dot to
 # FILE even if both FILE and FILE.exe exist: automatic-append-.exe
 # behavior happens only for exec(3), not for open(2)!  Also, sourcing
-# `FILE.' does not work on cygwin managed mounts.
+# 'FILE.' does not work on cygwin managed mounts.
 func_source ()
 {
-    $opt_debug
+    $debug_cmd
+
     case $1 in
     */* | *\\*)	. "$1" ;;
     *)		. "./$1" ;;
@@ -1354,10 +2630,10 @@ func_resolve_sysroot ()
 # store the result into func_replace_sysroot_result.
 func_replace_sysroot ()
 {
-  case "$lt_sysroot:$1" in
+  case $lt_sysroot:$1 in
   ?*:"$lt_sysroot"*)
     func_stripname "$lt_sysroot" '' "$1"
-    func_replace_sysroot_result="=$func_stripname_result"
+    func_replace_sysroot_result='='$func_stripname_result
     ;;
   *)
     # Including no sysroot.
@@ -1374,7 +2650,8 @@ func_replace_sysroot ()
 # arg is usually of the form 'gcc ...'
 func_infer_tag ()
 {
-    $opt_debug
+    $debug_cmd
+
     if test -n "$available_tags" && test -z "$tagname"; then
       CC_quoted=
       for arg in $CC; do
@@ -1393,7 +2670,7 @@ func_infer_tag ()
 	for z in $available_tags; do
 	  if $GREP "^# ### BEGIN LIBTOOL TAG CONFIG: $z$" < "$progpath" > /dev/null; then
 	    # Evaluate the configuration.
-	    eval "`${SED} -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`"
+	    eval "`$SED -n -e '/^# ### BEGIN LIBTOOL TAG CONFIG: '$z'$/,/^# ### END LIBTOOL TAG CONFIG: '$z'$/p' < $progpath`"
 	    CC_quoted=
 	    for arg in $CC; do
 	      # Double-quote args containing other shell metacharacters.
@@ -1418,7 +2695,7 @@ func_infer_tag ()
 	# line option must be used.
 	if test -z "$tagname"; then
 	  func_echo "unable to infer tagged configuration"
-	  func_fatal_error "specify a tag with \`--tag'"
+	  func_fatal_error "specify a tag with '--tag'"
 #	else
 #	  func_verbose "using $tagname tagged configuration"
 	fi
@@ -1434,15 +2711,15 @@ func_infer_tag ()
 # but don't create it if we're doing a dry run.
 func_write_libtool_object ()
 {
-    write_libobj=${1}
-    if test "$build_libtool_libs" = yes; then
-      write_lobj=\'${2}\'
+    write_libobj=$1
+    if test yes = "$build_libtool_libs"; then
+      write_lobj=\'$2\'
     else
       write_lobj=none
     fi
 
-    if test "$build_old_libs" = yes; then
-      write_oldobj=\'${3}\'
+    if test yes = "$build_old_libs"; then
+      write_oldobj=\'$3\'
     else
       write_oldobj=none
     fi
@@ -1450,7 +2727,7 @@ func_write_libtool_object ()
     $opt_dry_run || {
       cat >${write_libobj}T <<EOF
 # $write_libobj - a libtool object file
-# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+# Generated by $PROGRAM (GNU $PACKAGE) $VERSION
 #
 # Please DO NOT delete this file!
 # It is necessary for linking the library.
@@ -1462,7 +2739,7 @@ pic_object=$write_lobj
 non_pic_object=$write_oldobj
 
 EOF
-      $MV "${write_libobj}T" "${write_libobj}"
+      $MV "${write_libobj}T" "$write_libobj"
     }
 }
 
@@ -1482,8 +2759,9 @@ EOF
 # be empty on error (or when ARG is empty)
 func_convert_core_file_wine_to_w32 ()
 {
-  $opt_debug
-  func_convert_core_file_wine_to_w32_result="$1"
+  $debug_cmd
+
+  func_convert_core_file_wine_to_w32_result=$1
   if test -n "$1"; then
     # Unfortunately, winepath does not exit with a non-zero error code, so we
     # are forced to check the contents of stdout. On the other hand, if the
@@ -1491,9 +2769,9 @@ func_convert_core_file_wine_to_w32 ()
     # *an error message* to stdout. So we must check for both error code of
     # zero AND non-empty stdout, which explains the odd construction:
     func_convert_core_file_wine_to_w32_tmp=`winepath -w "$1" 2>/dev/null`
-    if test "$?" -eq 0 && test -n "${func_convert_core_file_wine_to_w32_tmp}"; then
+    if test "$?" -eq 0 && test -n "$func_convert_core_file_wine_to_w32_tmp"; then
       func_convert_core_file_wine_to_w32_result=`$ECHO "$func_convert_core_file_wine_to_w32_tmp" |
-        $SED -e "$lt_sed_naive_backslashify"`
+        $SED -e "$sed_naive_backslashify"`
     else
       func_convert_core_file_wine_to_w32_result=
     fi
@@ -1514,18 +2792,19 @@ func_convert_core_file_wine_to_w32 ()
 # are convertible, then the result may be empty.
 func_convert_core_path_wine_to_w32 ()
 {
-  $opt_debug
+  $debug_cmd
+
   # unfortunately, winepath doesn't convert paths, only file names
-  func_convert_core_path_wine_to_w32_result=""
+  func_convert_core_path_wine_to_w32_result=
   if test -n "$1"; then
     oldIFS=$IFS
     IFS=:
     for func_convert_core_path_wine_to_w32_f in $1; do
       IFS=$oldIFS
       func_convert_core_file_wine_to_w32 "$func_convert_core_path_wine_to_w32_f"
-      if test -n "$func_convert_core_file_wine_to_w32_result" ; then
+      if test -n "$func_convert_core_file_wine_to_w32_result"; then
         if test -z "$func_convert_core_path_wine_to_w32_result"; then
-          func_convert_core_path_wine_to_w32_result="$func_convert_core_file_wine_to_w32_result"
+          func_convert_core_path_wine_to_w32_result=$func_convert_core_file_wine_to_w32_result
         else
           func_append func_convert_core_path_wine_to_w32_result ";$func_convert_core_file_wine_to_w32_result"
         fi
@@ -1554,7 +2833,8 @@ func_convert_core_path_wine_to_w32 ()
 # environment variable; do not put it in $PATH.
 func_cygpath ()
 {
-  $opt_debug
+  $debug_cmd
+
   if test -n "$LT_CYGPATH" && test -f "$LT_CYGPATH"; then
     func_cygpath_result=`$LT_CYGPATH "$@" 2>/dev/null`
     if test "$?" -ne 0; then
@@ -1563,7 +2843,7 @@ func_cygpath ()
     fi
   else
     func_cygpath_result=
-    func_error "LT_CYGPATH is empty or specifies non-existent file: \`$LT_CYGPATH'"
+    func_error "LT_CYGPATH is empty or specifies non-existent file: '$LT_CYGPATH'"
   fi
 }
 #end: func_cygpath
@@ -1574,10 +2854,11 @@ func_cygpath ()
 # result in func_convert_core_msys_to_w32_result.
 func_convert_core_msys_to_w32 ()
 {
-  $opt_debug
+  $debug_cmd
+
   # awkward: cmd appends spaces to result
   func_convert_core_msys_to_w32_result=`( cmd //c echo "$1" ) 2>/dev/null |
-    $SED -e 's/[ ]*$//' -e "$lt_sed_naive_backslashify"`
+    $SED -e 's/[ ]*$//' -e "$sed_naive_backslashify"`
 }
 #end: func_convert_core_msys_to_w32
 
@@ -1588,13 +2869,14 @@ func_convert_core_msys_to_w32 ()
 # func_to_host_file_result to ARG1).
 func_convert_file_check ()
 {
-  $opt_debug
-  if test -z "$2" && test -n "$1" ; then
+  $debug_cmd
+
+  if test -z "$2" && test -n "$1"; then
     func_error "Could not determine host file name corresponding to"
-    func_error "  \`$1'"
+    func_error "  '$1'"
     func_error "Continuing, but uninstalled executables may not work."
     # Fallback:
-    func_to_host_file_result="$1"
+    func_to_host_file_result=$1
   fi
 }
 # end func_convert_file_check
@@ -1606,10 +2888,11 @@ func_convert_file_check ()
 # func_to_host_file_result to a simplistic fallback value (see below).
 func_convert_path_check ()
 {
-  $opt_debug
+  $debug_cmd
+
   if test -z "$4" && test -n "$3"; then
     func_error "Could not determine the host path corresponding to"
-    func_error "  \`$3'"
+    func_error "  '$3'"
     func_error "Continuing, but uninstalled executables may not work."
     # Fallback.  This is a deliberately simplistic "conversion" and
     # should not be "improved".  See libtool.info.
@@ -1618,7 +2901,7 @@ func_convert_path_check ()
       func_to_host_path_result=`echo "$3" |
         $SED -e "$lt_replace_pathsep_chars"`
     else
-      func_to_host_path_result="$3"
+      func_to_host_path_result=$3
     fi
   fi
 }
@@ -1630,9 +2913,10 @@ func_convert_path_check ()
 # and appending REPL if ORIG matches BACKPAT.
 func_convert_path_front_back_pathsep ()
 {
-  $opt_debug
+  $debug_cmd
+
   case $4 in
-  $1 ) func_to_host_path_result="$3$func_to_host_path_result"
+  $1 ) func_to_host_path_result=$3$func_to_host_path_result
     ;;
   esac
   case $4 in
@@ -1646,7 +2930,7 @@ func_convert_path_front_back_pathsep ()
 ##################################################
 # $build to $host FILE NAME CONVERSION FUNCTIONS #
 ##################################################
-# invoked via `$to_host_file_cmd ARG'
+# invoked via '$to_host_file_cmd ARG'
 #
 # In each case, ARG is the path to be converted from $build to $host format.
 # Result will be available in $func_to_host_file_result.
@@ -1657,7 +2941,8 @@ func_convert_path_front_back_pathsep ()
 # in func_to_host_file_result.
 func_to_host_file ()
 {
-  $opt_debug
+  $debug_cmd
+
   $to_host_file_cmd "$1"
 }
 # end func_to_host_file
@@ -1669,7 +2954,8 @@ func_to_host_file ()
 # in (the comma separated) LAZY, no conversion takes place.
 func_to_tool_file ()
 {
-  $opt_debug
+  $debug_cmd
+
   case ,$2, in
     *,"$to_tool_file_cmd",*)
       func_to_tool_file_result=$1
@@ -1687,7 +2973,7 @@ func_to_tool_file ()
 # Copy ARG to func_to_host_file_result.
 func_convert_file_noop ()
 {
-  func_to_host_file_result="$1"
+  func_to_host_file_result=$1
 }
 # end func_convert_file_noop
 
@@ -1698,11 +2984,12 @@ func_convert_file_noop ()
 # func_to_host_file_result.
 func_convert_file_msys_to_w32 ()
 {
-  $opt_debug
-  func_to_host_file_result="$1"
+  $debug_cmd
+
+  func_to_host_file_result=$1
   if test -n "$1"; then
     func_convert_core_msys_to_w32 "$1"
-    func_to_host_file_result="$func_convert_core_msys_to_w32_result"
+    func_to_host_file_result=$func_convert_core_msys_to_w32_result
   fi
   func_convert_file_check "$1" "$func_to_host_file_result"
 }
@@ -1714,8 +3001,9 @@ func_convert_file_msys_to_w32 ()
 # func_to_host_file_result.
 func_convert_file_cygwin_to_w32 ()
 {
-  $opt_debug
-  func_to_host_file_result="$1"
+  $debug_cmd
+
+  func_to_host_file_result=$1
   if test -n "$1"; then
     # because $build is cygwin, we call "the" cygpath in $PATH; no need to use
     # LT_CYGPATH in this case.
@@ -1731,11 +3019,12 @@ func_convert_file_cygwin_to_w32 ()
 # and a working winepath. Returns result in func_to_host_file_result.
 func_convert_file_nix_to_w32 ()
 {
-  $opt_debug
-  func_to_host_file_result="$1"
+  $debug_cmd
+
+  func_to_host_file_result=$1
   if test -n "$1"; then
     func_convert_core_file_wine_to_w32 "$1"
-    func_to_host_file_result="$func_convert_core_file_wine_to_w32_result"
+    func_to_host_file_result=$func_convert_core_file_wine_to_w32_result
   fi
   func_convert_file_check "$1" "$func_to_host_file_result"
 }
@@ -1747,12 +3036,13 @@ func_convert_file_nix_to_w32 ()
 # Returns result in func_to_host_file_result.
 func_convert_file_msys_to_cygwin ()
 {
-  $opt_debug
-  func_to_host_file_result="$1"
+  $debug_cmd
+
+  func_to_host_file_result=$1
   if test -n "$1"; then
     func_convert_core_msys_to_w32 "$1"
     func_cygpath -u "$func_convert_core_msys_to_w32_result"
-    func_to_host_file_result="$func_cygpath_result"
+    func_to_host_file_result=$func_cygpath_result
   fi
   func_convert_file_check "$1" "$func_to_host_file_result"
 }
@@ -1765,13 +3055,14 @@ func_convert_file_msys_to_cygwin ()
 # in func_to_host_file_result.
 func_convert_file_nix_to_cygwin ()
 {
-  $opt_debug
-  func_to_host_file_result="$1"
+  $debug_cmd
+
+  func_to_host_file_result=$1
   if test -n "$1"; then
     # convert from *nix to w32, then use cygpath to convert from w32 to cygwin.
     func_convert_core_file_wine_to_w32 "$1"
     func_cygpath -u "$func_convert_core_file_wine_to_w32_result"
-    func_to_host_file_result="$func_cygpath_result"
+    func_to_host_file_result=$func_cygpath_result
   fi
   func_convert_file_check "$1" "$func_to_host_file_result"
 }
@@ -1781,7 +3072,7 @@ func_convert_file_nix_to_cygwin ()
 #############################################
 # $build to $host PATH CONVERSION FUNCTIONS #
 #############################################
-# invoked via `$to_host_path_cmd ARG'
+# invoked via '$to_host_path_cmd ARG'
 #
 # In each case, ARG is the path to be converted from $build to $host format.
 # The result will be available in $func_to_host_path_result.
@@ -1805,10 +3096,11 @@ func_convert_file_nix_to_cygwin ()
 to_host_path_cmd=
 func_init_to_host_path_cmd ()
 {
-  $opt_debug
+  $debug_cmd
+
   if test -z "$to_host_path_cmd"; then
     func_stripname 'func_convert_file_' '' "$to_host_file_cmd"
-    to_host_path_cmd="func_convert_path_${func_stripname_result}"
+    to_host_path_cmd=func_convert_path_$func_stripname_result
   fi
 }
 
@@ -1818,7 +3110,8 @@ func_init_to_host_path_cmd ()
 # in func_to_host_path_result.
 func_to_host_path ()
 {
-  $opt_debug
+  $debug_cmd
+
   func_init_to_host_path_cmd
   $to_host_path_cmd "$1"
 }
@@ -1829,7 +3122,7 @@ func_to_host_path ()
 # Copy ARG to func_to_host_path_result.
 func_convert_path_noop ()
 {
-  func_to_host_path_result="$1"
+  func_to_host_path_result=$1
 }
 # end func_convert_path_noop
 
@@ -1840,8 +3133,9 @@ func_convert_path_noop ()
 # func_to_host_path_result.
 func_convert_path_msys_to_w32 ()
 {
-  $opt_debug
-  func_to_host_path_result="$1"
+  $debug_cmd
+
+  func_to_host_path_result=$1
   if test -n "$1"; then
     # Remove leading and trailing path separator characters from ARG.  MSYS
     # behavior is inconsistent here; cygpath turns them into '.;' and ';.';
@@ -1849,7 +3143,7 @@ func_convert_path_msys_to_w32 ()
     func_stripname : : "$1"
     func_to_host_path_tmp1=$func_stripname_result
     func_convert_core_msys_to_w32 "$func_to_host_path_tmp1"
-    func_to_host_path_result="$func_convert_core_msys_to_w32_result"
+    func_to_host_path_result=$func_convert_core_msys_to_w32_result
     func_convert_path_check : ";" \
       "$func_to_host_path_tmp1" "$func_to_host_path_result"
     func_convert_path_front_back_pathsep ":*" "*:" ";" "$1"
@@ -1863,8 +3157,9 @@ func_convert_path_msys_to_w32 ()
 # func_to_host_file_result.
 func_convert_path_cygwin_to_w32 ()
 {
-  $opt_debug
-  func_to_host_path_result="$1"
+  $debug_cmd
+
+  func_to_host_path_result=$1
   if test -n "$1"; then
     # See func_convert_path_msys_to_w32:
     func_stripname : : "$1"
@@ -1883,14 +3178,15 @@ func_convert_path_cygwin_to_w32 ()
 # a working winepath.  Returns result in func_to_host_file_result.
 func_convert_path_nix_to_w32 ()
 {
-  $opt_debug
-  func_to_host_path_result="$1"
+  $debug_cmd
+
+  func_to_host_path_result=$1
   if test -n "$1"; then
     # See func_convert_path_msys_to_w32:
     func_stripname : : "$1"
     func_to_host_path_tmp1=$func_stripname_result
     func_convert_core_path_wine_to_w32 "$func_to_host_path_tmp1"
-    func_to_host_path_result="$func_convert_core_path_wine_to_w32_result"
+    func_to_host_path_result=$func_convert_core_path_wine_to_w32_result
     func_convert_path_check : ";" \
       "$func_to_host_path_tmp1" "$func_to_host_path_result"
     func_convert_path_front_back_pathsep ":*" "*:" ";" "$1"
@@ -1904,15 +3200,16 @@ func_convert_path_nix_to_w32 ()
 # Returns result in func_to_host_file_result.
 func_convert_path_msys_to_cygwin ()
 {
-  $opt_debug
-  func_to_host_path_result="$1"
+  $debug_cmd
+
+  func_to_host_path_result=$1
   if test -n "$1"; then
     # See func_convert_path_msys_to_w32:
     func_stripname : : "$1"
     func_to_host_path_tmp1=$func_stripname_result
     func_convert_core_msys_to_w32 "$func_to_host_path_tmp1"
     func_cygpath -u -p "$func_convert_core_msys_to_w32_result"
-    func_to_host_path_result="$func_cygpath_result"
+    func_to_host_path_result=$func_cygpath_result
     func_convert_path_check : : \
       "$func_to_host_path_tmp1" "$func_to_host_path_result"
     func_convert_path_front_back_pathsep ":*" "*:" : "$1"
@@ -1927,8 +3224,9 @@ func_convert_path_msys_to_cygwin ()
 # func_to_host_file_result.
 func_convert_path_nix_to_cygwin ()
 {
-  $opt_debug
-  func_to_host_path_result="$1"
+  $debug_cmd
+
+  func_to_host_path_result=$1
   if test -n "$1"; then
     # Remove leading and trailing path separator characters from
     # ARG. msys behavior is inconsistent here, cygpath turns them
@@ -1937,7 +3235,7 @@ func_convert_path_nix_to_cygwin ()
     func_to_host_path_tmp1=$func_stripname_result
     func_convert_core_path_wine_to_w32 "$func_to_host_path_tmp1"
     func_cygpath -u -p "$func_convert_core_path_wine_to_w32_result"
-    func_to_host_path_result="$func_cygpath_result"
+    func_to_host_path_result=$func_cygpath_result
     func_convert_path_check : : \
       "$func_to_host_path_tmp1" "$func_to_host_path_result"
     func_convert_path_front_back_pathsep ":*" "*:" : "$1"
@@ -1946,13 +3244,31 @@ func_convert_path_nix_to_cygwin ()
 # end func_convert_path_nix_to_cygwin
 
 
+# func_dll_def_p FILE
+# True iff FILE is a Windows DLL '.def' file.
+# Keep in sync with _LT_DLL_DEF_P in libtool.m4
+func_dll_def_p ()
+{
+  $debug_cmd
+
+  func_dll_def_p_tmp=`$SED -n \
+    -e 's/^[	 ]*//' \
+    -e '/^\(;.*\)*$/d' \
+    -e 's/^\(EXPORTS\|LIBRARY\)\([	 ].*\)*$/DEF/p' \
+    -e q \
+    "$1"`
+  test DEF = "$func_dll_def_p_tmp"
+}
+
+
 # func_mode_compile arg...
 func_mode_compile ()
 {
-    $opt_debug
+    $debug_cmd
+
     # Get the compilation command and the source file.
     base_compile=
-    srcfile="$nonopt"  #  always keep a non-empty value in "srcfile"
+    srcfile=$nonopt  #  always keep a non-empty value in "srcfile"
     suppress_opt=yes
     suppress_output=
     arg_mode=normal
@@ -1965,12 +3281,12 @@ func_mode_compile ()
       case $arg_mode in
       arg  )
 	# do not "continue".  Instead, add this to base_compile
-	lastarg="$arg"
+	lastarg=$arg
 	arg_mode=normal
 	;;
 
       target )
-	libobj="$arg"
+	libobj=$arg
 	arg_mode=normal
 	continue
 	;;
@@ -1980,7 +3296,7 @@ func_mode_compile ()
 	case $arg in
 	-o)
 	  test -n "$libobj" && \
-	    func_fatal_error "you cannot specify \`-o' more than once"
+	    func_fatal_error "you cannot specify '-o' more than once"
 	  arg_mode=target
 	  continue
 	  ;;
@@ -2009,12 +3325,12 @@ func_mode_compile ()
 	  func_stripname '-Wc,' '' "$arg"
 	  args=$func_stripname_result
 	  lastarg=
-	  save_ifs="$IFS"; IFS=','
+	  save_ifs=$IFS; IFS=,
 	  for arg in $args; do
-	    IFS="$save_ifs"
+	    IFS=$save_ifs
 	    func_append_quoted lastarg "$arg"
 	  done
-	  IFS="$save_ifs"
+	  IFS=$save_ifs
 	  func_stripname ' ' '' "$lastarg"
 	  lastarg=$func_stripname_result
 
@@ -2027,8 +3343,8 @@ func_mode_compile ()
 	  # Accept the current argument as the source file.
 	  # The previous "srcfile" becomes the current argument.
 	  #
-	  lastarg="$srcfile"
-	  srcfile="$arg"
+	  lastarg=$srcfile
+	  srcfile=$arg
 	  ;;
 	esac  #  case $arg
 	;;
@@ -2043,13 +3359,13 @@ func_mode_compile ()
       func_fatal_error "you must specify an argument for -Xcompile"
       ;;
     target)
-      func_fatal_error "you must specify a target with \`-o'"
+      func_fatal_error "you must specify a target with '-o'"
       ;;
     *)
       # Get the name of the library object.
       test -z "$libobj" && {
 	func_basename "$srcfile"
-	libobj="$func_basename_result"
+	libobj=$func_basename_result
       }
       ;;
     esac
@@ -2069,7 +3385,7 @@ func_mode_compile ()
     case $libobj in
     *.lo) func_lo2o "$libobj"; obj=$func_lo2o_result ;;
     *)
-      func_fatal_error "cannot determine name of library object from \`$libobj'"
+      func_fatal_error "cannot determine name of library object from '$libobj'"
       ;;
     esac
 
@@ -2078,8 +3394,8 @@ func_mode_compile ()
     for arg in $later; do
       case $arg in
       -shared)
-	test "$build_libtool_libs" != yes && \
-	  func_fatal_configuration "can not build a shared library"
+	test yes = "$build_libtool_libs" \
+	  || func_fatal_configuration "cannot build a shared library"
 	build_old_libs=no
 	continue
 	;;
@@ -2105,17 +3421,17 @@ func_mode_compile ()
     func_quote_for_eval "$libobj"
     test "X$libobj" != "X$func_quote_for_eval_result" \
       && $ECHO "X$libobj" | $GREP '[]~#^*{};<>?"'"'"'	 &()|`$[]' \
-      && func_warning "libobj name \`$libobj' may not contain shell special characters."
+      && func_warning "libobj name '$libobj' may not contain shell special characters."
     func_dirname_and_basename "$obj" "/" ""
-    objname="$func_basename_result"
-    xdir="$func_dirname_result"
-    lobj=${xdir}$objdir/$objname
+    objname=$func_basename_result
+    xdir=$func_dirname_result
+    lobj=$xdir$objdir/$objname
 
     test -z "$base_compile" && \
       func_fatal_help "you must specify a compilation command"
 
     # Delete any leftover library objects.
-    if test "$build_old_libs" = yes; then
+    if test yes = "$build_old_libs"; then
       removelist="$obj $lobj $libobj ${libobj}T"
     else
       removelist="$lobj $libobj ${libobj}T"
@@ -2127,16 +3443,16 @@ func_mode_compile ()
       pic_mode=default
       ;;
     esac
-    if test "$pic_mode" = no && test "$deplibs_check_method" != pass_all; then
+    if test no = "$pic_mode" && test pass_all != "$deplibs_check_method"; then
       # non-PIC code in shared libraries is not supported
       pic_mode=default
     fi
 
     # Calculate the filename of the output object if compiler does
     # not support -o with -c
-    if test "$compiler_c_o" = no; then
-      output_obj=`$ECHO "$srcfile" | $SED 's%^.*/%%; s%\.[^.]*$%%'`.${objext}
-      lockfile="$output_obj.lock"
+    if test no = "$compiler_c_o"; then
+      output_obj=`$ECHO "$srcfile" | $SED 's%^.*/%%; s%\.[^.]*$%%'`.$objext
+      lockfile=$output_obj.lock
     else
       output_obj=
       need_locks=no
@@ -2145,12 +3461,12 @@ func_mode_compile ()
 
     # Lock this critical section if it is needed
     # We use this script file to make the link, it avoids creating a new file
-    if test "$need_locks" = yes; then
+    if test yes = "$need_locks"; then
       until $opt_dry_run || ln "$progpath" "$lockfile" 2>/dev/null; do
 	func_echo "Waiting for $lockfile to be removed"
 	sleep 2
       done
-    elif test "$need_locks" = warn; then
+    elif test warn = "$need_locks"; then
       if test -f "$lockfile"; then
 	$ECHO "\
 *** ERROR, $lockfile exists and contains:
@@ -2158,7 +3474,7 @@ func_mode_compile ()
 
 This indicates that another process is trying to use the same
 temporary object file, and libtool could not work around it because
-your compiler does not support \`-c' and \`-o' together.  If you
+your compiler does not support '-c' and '-o' together.  If you
 repeat this compilation, it may succeed, by chance, but you had better
 avoid parallel builds (make -j) in this platform, or get a better
 compiler."
@@ -2180,11 +3496,11 @@ compiler."
     qsrcfile=$func_quote_for_eval_result
 
     # Only build a PIC object if we are building libtool libraries.
-    if test "$build_libtool_libs" = yes; then
+    if test yes = "$build_libtool_libs"; then
       # Without this assignment, base_compile gets emptied.
       fbsd_hideous_sh_bug=$base_compile
 
-      if test "$pic_mode" != no; then
+      if test no != "$pic_mode"; then
 	command="$base_compile $qsrcfile $pic_flag"
       else
 	# Don't build PIC code
@@ -2201,7 +3517,7 @@ compiler."
       func_show_eval_locale "$command"	\
           'test -n "$output_obj" && $RM $removelist; exit $EXIT_FAILURE'
 
-      if test "$need_locks" = warn &&
+      if test warn = "$need_locks" &&
 	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
 	$ECHO "\
 *** ERROR, $lockfile contains:
@@ -2212,7 +3528,7 @@ $srcfile
 
 This indicates that another process is trying to use the same
 temporary object file, and libtool could not work around it because
-your compiler does not support \`-c' and \`-o' together.  If you
+your compiler does not support '-c' and '-o' together.  If you
 repeat this compilation, it may succeed, by chance, but you had better
 avoid parallel builds (make -j) in this platform, or get a better
 compiler."
@@ -2228,20 +3544,20 @@ compiler."
       fi
 
       # Allow error messages only from the first compilation.
-      if test "$suppress_opt" = yes; then
+      if test yes = "$suppress_opt"; then
 	suppress_output=' >/dev/null 2>&1'
       fi
     fi
 
     # Only build a position-dependent object if we build old libraries.
-    if test "$build_old_libs" = yes; then
-      if test "$pic_mode" != yes; then
+    if test yes = "$build_old_libs"; then
+      if test yes != "$pic_mode"; then
 	# Don't build PIC code
 	command="$base_compile $qsrcfile$pie_flag"
       else
 	command="$base_compile $qsrcfile $pic_flag"
       fi
-      if test "$compiler_c_o" = yes; then
+      if test yes = "$compiler_c_o"; then
 	func_append command " -o $obj"
       fi
 
@@ -2250,7 +3566,7 @@ compiler."
       func_show_eval_locale "$command" \
         '$opt_dry_run || $RM $removelist; exit $EXIT_FAILURE'
 
-      if test "$need_locks" = warn &&
+      if test warn = "$need_locks" &&
 	 test "X`cat $lockfile 2>/dev/null`" != "X$srcfile"; then
 	$ECHO "\
 *** ERROR, $lockfile contains:
@@ -2261,7 +3577,7 @@ $srcfile
 
 This indicates that another process is trying to use the same
 temporary object file, and libtool could not work around it because
-your compiler does not support \`-c' and \`-o' together.  If you
+your compiler does not support '-c' and '-o' together.  If you
 repeat this compilation, it may succeed, by chance, but you had better
 avoid parallel builds (make -j) in this platform, or get a better
 compiler."
@@ -2281,7 +3597,7 @@ compiler."
       func_write_libtool_object "$libobj" "$objdir/$objname" "$objname"
 
       # Unlock the critical section if it was locked
-      if test "$need_locks" != no; then
+      if test no != "$need_locks"; then
 	removelist=$lockfile
         $RM "$lockfile"
       fi
@@ -2291,7 +3607,7 @@ compiler."
 }
 
 $opt_help || {
-  test "$opt_mode" = compile && func_mode_compile ${1+"$@"}
+  test compile = "$opt_mode" && func_mode_compile ${1+"$@"}
 }
 
 func_mode_help ()
@@ -2311,7 +3627,7 @@ func_mode_help ()
 Remove files from the build directory.
 
 RM is the name of the program to use to delete files associated with each FILE
-(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed
 to RM.
 
 If FILE is a libtool library, object or program, all the files associated
@@ -2330,16 +3646,16 @@ This mode accepts the following additional options:
   -no-suppress      do not suppress compiler output for multiple passes
   -prefer-pic       try to build PIC objects only
   -prefer-non-pic   try to build non-PIC objects only
-  -shared           do not build a \`.o' file suitable for static linking
-  -static           only build a \`.o' file suitable for static linking
+  -shared           do not build a '.o' file suitable for static linking
+  -static           only build a '.o' file suitable for static linking
   -Wc,FLAG          pass FLAG directly to the compiler
 
-COMPILE-COMMAND is a command to be used in creating a \`standard' object file
+COMPILE-COMMAND is a command to be used in creating a 'standard' object file
 from the given SOURCEFILE.
 
 The output file name is determined by removing the directory component from
-SOURCEFILE, then substituting the C source code suffix \`.c' with the
-library object suffix, \`.lo'."
+SOURCEFILE, then substituting the C source code suffix '.c' with the
+library object suffix, '.lo'."
         ;;
 
       execute)
@@ -2352,7 +3668,7 @@ This mode accepts the following additional options:
 
   -dlopen FILE      add the directory containing FILE to the library path
 
-This mode sets the library path environment variable according to \`-dlopen'
+This mode sets the library path environment variable according to '-dlopen'
 flags.
 
 If any of the ARGS are libtool executable wrappers, then they are translated
@@ -2371,7 +3687,7 @@ Complete the installation of libtool libraries.
 Each LIBDIR is a directory that contains libtool libraries.
 
 The commands that this mode executes may require superuser privileges.  Use
-the \`--dry-run' option if you just want to see what would be executed."
+the '--dry-run' option if you just want to see what would be executed."
         ;;
 
       install)
@@ -2381,7 +3697,7 @@ the \`--dry-run' option if you just want to see what would be executed."
 Install executables or libraries.
 
 INSTALL-COMMAND is the installation command.  The first component should be
-either the \`install' or \`cp' program.
+either the 'install' or 'cp' program.
 
 The following components of INSTALL-COMMAND are treated specially:
 
@@ -2407,7 +3723,7 @@ The following components of LINK-COMMAND are treated specially:
   -avoid-version    do not add a version suffix if possible
   -bindir BINDIR    specify path to binaries directory (for systems where
                     libraries must be found in the PATH setting at runtime)
-  -dlopen FILE      \`-dlpreopen' FILE if it cannot be dlopened at runtime
+  -dlopen FILE      '-dlpreopen' FILE if it cannot be dlopened at runtime
   -dlpreopen FILE   link in FILE and add its symbols to lt_preloaded_symbols
   -export-dynamic   allow symbols from OUTPUT-FILE to be resolved with dlsym(3)
   -export-symbols SYMFILE
@@ -2421,7 +3737,8 @@ The following components of LINK-COMMAND are treated specially:
   -no-install       link a not-installable executable
   -no-undefined     declare that a library does not refer to external symbols
   -o OUTPUT-FILE    create OUTPUT-FILE from the specified objects
-  -objectlist FILE  Use a list of object files found in FILE to specify objects
+  -objectlist FILE  use a list of object files found in FILE to specify objects
+  -os2dllname NAME  force a short DLL name on OS/2 (no effect on other OSes)
   -precious-files-regex REGEX
                     don't remove output files matching REGEX
   -release RELEASE  specify package release information
@@ -2441,20 +3758,20 @@ The following components of LINK-COMMAND are treated specially:
   -Xlinker FLAG     pass linker-specific FLAG directly to the linker
   -XCClinker FLAG   pass link-specific FLAG to the compiler driver (CC)
 
-All other options (arguments beginning with \`-') are ignored.
+All other options (arguments beginning with '-') are ignored.
 
-Every other argument is treated as a filename.  Files ending in \`.la' are
+Every other argument is treated as a filename.  Files ending in '.la' are
 treated as uninstalled libtool libraries, other files are standard or library
 object files.
 
-If the OUTPUT-FILE ends in \`.la', then a libtool library is created,
-only library objects (\`.lo' files) may be specified, and \`-rpath' is
+If the OUTPUT-FILE ends in '.la', then a libtool library is created,
+only library objects ('.lo' files) may be specified, and '-rpath' is
 required, except when creating a convenience library.
 
-If OUTPUT-FILE ends in \`.a' or \`.lib', then a standard library is created
-using \`ar' and \`ranlib', or on Windows using \`lib'.
+If OUTPUT-FILE ends in '.a' or '.lib', then a standard library is created
+using 'ar' and 'ranlib', or on Windows using 'lib'.
 
-If OUTPUT-FILE ends in \`.lo' or \`.${objext}', then a reloadable object file
+If OUTPUT-FILE ends in '.lo' or '.$objext', then a reloadable object file
 is created, otherwise an executable program is created."
         ;;
 
@@ -2465,7 +3782,7 @@ is created, otherwise an executable program is created."
 Remove libraries from an installation directory.
 
 RM is the name of the program to use to delete files associated with each FILE
-(typically \`/bin/rm').  RM-OPTIONS are options (such as \`-f') to be passed
+(typically '/bin/rm').  RM-OPTIONS are options (such as '-f') to be passed
 to RM.
 
 If FILE is a libtool library, all the files associated with it are deleted.
@@ -2473,17 +3790,17 @@ Otherwise, only FILE itself is deleted using RM."
         ;;
 
       *)
-        func_fatal_help "invalid operation mode \`$opt_mode'"
+        func_fatal_help "invalid operation mode '$opt_mode'"
         ;;
     esac
 
     echo
-    $ECHO "Try \`$progname --help' for more information about other modes."
+    $ECHO "Try '$progname --help' for more information about other modes."
 }
 
 # Now that we've collected a possible --mode arg, show help if necessary
 if $opt_help; then
-  if test "$opt_help" = :; then
+  if test : = "$opt_help"; then
     func_mode_help
   else
     {
@@ -2491,7 +3808,7 @@ if $opt_help; then
       for opt_mode in compile link execute install finish uninstall clean; do
 	func_mode_help
       done
-    } | sed -n '1p; 2,$s/^Usage:/  or: /p'
+    } | $SED -n '1p; 2,$s/^Usage:/  or: /p'
     {
       func_help noexit
       for opt_mode in compile link execute install finish uninstall clean; do
@@ -2499,7 +3816,7 @@ if $opt_help; then
 	func_mode_help
       done
     } |
-    sed '1d
+    $SED '1d
       /^When reporting/,/^Report/{
 	H
 	d
@@ -2516,16 +3833,17 @@ fi
 # func_mode_execute arg...
 func_mode_execute ()
 {
-    $opt_debug
+    $debug_cmd
+
     # The first argument is the command name.
-    cmd="$nonopt"
+    cmd=$nonopt
     test -z "$cmd" && \
       func_fatal_help "you must specify a COMMAND"
 
     # Handle -dlopen flags immediately.
     for file in $opt_dlopen; do
       test -f "$file" \
-	|| func_fatal_help "\`$file' is not a file"
+	|| func_fatal_help "'$file' is not a file"
 
       dir=
       case $file in
@@ -2535,7 +3853,7 @@ func_mode_execute ()
 
 	# Check to see that this really is a libtool archive.
 	func_lalib_unsafe_p "$file" \
-	  || func_fatal_help "\`$lib' is not a valid libtool archive"
+	  || func_fatal_help "'$lib' is not a valid libtool archive"
 
 	# Read the libtool library.
 	dlname=
@@ -2546,18 +3864,18 @@ func_mode_execute ()
 	if test -z "$dlname"; then
 	  # Warn if it was a shared library.
 	  test -n "$library_names" && \
-	    func_warning "\`$file' was not linked with \`-export-dynamic'"
+	    func_warning "'$file' was not linked with '-export-dynamic'"
 	  continue
 	fi
 
 	func_dirname "$file" "" "."
-	dir="$func_dirname_result"
+	dir=$func_dirname_result
 
 	if test -f "$dir/$objdir/$dlname"; then
 	  func_append dir "/$objdir"
 	else
 	  if test ! -f "$dir/$dlname"; then
-	    func_fatal_error "cannot find \`$dlname' in \`$dir' or \`$dir/$objdir'"
+	    func_fatal_error "cannot find '$dlname' in '$dir' or '$dir/$objdir'"
 	  fi
 	fi
 	;;
@@ -2565,18 +3883,18 @@ func_mode_execute ()
       *.lo)
 	# Just add the directory containing the .lo file.
 	func_dirname "$file" "" "."
-	dir="$func_dirname_result"
+	dir=$func_dirname_result
 	;;
 
       *)
-	func_warning "\`-dlopen' is ignored for non-libtool libraries and objects"
+	func_warning "'-dlopen' is ignored for non-libtool libraries and objects"
 	continue
 	;;
       esac
 
       # Get the absolute pathname.
       absdir=`cd "$dir" && pwd`
-      test -n "$absdir" && dir="$absdir"
+      test -n "$absdir" && dir=$absdir
 
       # Now add the directory to shlibpath_var.
       if eval "test -z \"\$$shlibpath_var\""; then
@@ -2588,7 +3906,7 @@ func_mode_execute ()
 
     # This variable tells wrapper scripts just to set shlibpath_var
     # rather than running their programs.
-    libtool_execute_magic="$magic"
+    libtool_execute_magic=$magic
 
     # Check if any of the arguments is a wrapper script.
     args=
@@ -2601,12 +3919,12 @@ func_mode_execute ()
 	if func_ltwrapper_script_p "$file"; then
 	  func_source "$file"
 	  # Transform arg to wrapped name.
-	  file="$progdir/$program"
+	  file=$progdir/$program
 	elif func_ltwrapper_executable_p "$file"; then
 	  func_ltwrapper_scriptname "$file"
 	  func_source "$func_ltwrapper_scriptname_result"
 	  # Transform arg to wrapped name.
-	  file="$progdir/$program"
+	  file=$progdir/$program
 	fi
 	;;
       esac
@@ -2614,7 +3932,15 @@ func_mode_execute ()
       func_append_quoted args "$file"
     done
 
-    if test "X$opt_dry_run" = Xfalse; then
+    if $opt_dry_run; then
+      # Display what would be done.
+      if test -n "$shlibpath_var"; then
+	eval "\$ECHO \"\$shlibpath_var=\$$shlibpath_var\""
+	echo "export $shlibpath_var"
+      fi
+      $ECHO "$cmd$args"
+      exit $EXIT_SUCCESS
+    else
       if test -n "$shlibpath_var"; then
 	# Export the shlibpath_var.
 	eval "export $shlibpath_var"
@@ -2631,25 +3957,18 @@ func_mode_execute ()
       done
 
       # Now prepare to actually exec the command.
-      exec_cmd="\$cmd$args"
-    else
-      # Display what would be done.
-      if test -n "$shlibpath_var"; then
-	eval "\$ECHO \"\$shlibpath_var=\$$shlibpath_var\""
-	echo "export $shlibpath_var"
-      fi
-      $ECHO "$cmd$args"
-      exit $EXIT_SUCCESS
+      exec_cmd=\$cmd$args
     fi
 }
 
-test "$opt_mode" = execute && func_mode_execute ${1+"$@"}
+test execute = "$opt_mode" && func_mode_execute ${1+"$@"}
 
 
 # func_mode_finish arg...
 func_mode_finish ()
 {
-    $opt_debug
+    $debug_cmd
+
     libs=
     libdirs=
     admincmds=
@@ -2663,11 +3982,11 @@ func_mode_finish ()
 	if func_lalib_unsafe_p "$opt"; then
 	  func_append libs " $opt"
 	else
-	  func_warning "\`$opt' is not a valid libtool archive"
+	  func_warning "'$opt' is not a valid libtool archive"
 	fi
 
       else
-	func_fatal_error "invalid argument \`$opt'"
+	func_fatal_error "invalid argument '$opt'"
       fi
     done
 
@@ -2682,12 +4001,12 @@ func_mode_finish ()
       # Remove sysroot references
       if $opt_dry_run; then
         for lib in $libs; do
-          echo "removing references to $lt_sysroot and \`=' prefixes from $lib"
+          echo "removing references to $lt_sysroot and '=' prefixes from $lib"
         done
       else
         tmpdir=`func_mktempdir`
         for lib in $libs; do
-	  sed -e "${sysroot_cmd} s/\([ ']-[LR]\)=/\1/g; s/\([ ']\)=/\1/g" $lib \
+	  $SED -e "$sysroot_cmd s/\([ ']-[LR]\)=/\1/g; s/\([ ']\)=/\1/g" $lib \
 	    > $tmpdir/tmp-la
 	  mv -f $tmpdir/tmp-la $lib
 	done
@@ -2712,7 +4031,7 @@ func_mode_finish ()
     fi
 
     # Exit here if they wanted silent mode.
-    $opt_silent && exit $EXIT_SUCCESS
+    $opt_quiet && exit $EXIT_SUCCESS
 
     if test -n "$finish_cmds$finish_eval" && test -n "$libdirs"; then
       echo "----------------------------------------------------------------------"
@@ -2723,27 +4042,27 @@ func_mode_finish ()
       echo
       echo "If you ever happen to want to link against installed libraries"
       echo "in a given directory, LIBDIR, you must either use libtool, and"
-      echo "specify the full pathname of the library, or use the \`-LLIBDIR'"
+      echo "specify the full pathname of the library, or use the '-LLIBDIR'"
       echo "flag during linking and do at least one of the following:"
       if test -n "$shlibpath_var"; then
-	echo "   - add LIBDIR to the \`$shlibpath_var' environment variable"
+	echo "   - add LIBDIR to the '$shlibpath_var' environment variable"
 	echo "     during execution"
       fi
       if test -n "$runpath_var"; then
-	echo "   - add LIBDIR to the \`$runpath_var' environment variable"
+	echo "   - add LIBDIR to the '$runpath_var' environment variable"
 	echo "     during linking"
       fi
       if test -n "$hardcode_libdir_flag_spec"; then
 	libdir=LIBDIR
 	eval flag=\"$hardcode_libdir_flag_spec\"
 
-	$ECHO "   - use the \`$flag' linker flag"
+	$ECHO "   - use the '$flag' linker flag"
       fi
       if test -n "$admincmds"; then
 	$ECHO "   - have your system administrator run these commands:$admincmds"
       fi
       if test -f /etc/ld.so.conf; then
-	echo "   - have your system administrator add LIBDIR to \`/etc/ld.so.conf'"
+	echo "   - have your system administrator add LIBDIR to '/etc/ld.so.conf'"
       fi
       echo
 
@@ -2762,18 +4081,20 @@ func_mode_finish ()
     exit $EXIT_SUCCESS
 }
 
-test "$opt_mode" = finish && func_mode_finish ${1+"$@"}
+test finish = "$opt_mode" && func_mode_finish ${1+"$@"}
 
 
 # func_mode_install arg...
 func_mode_install ()
 {
-    $opt_debug
+    $debug_cmd
+
     # There may be an optional sh(1) argument at the beginning of
     # install_prog (especially on Windows NT).
-    if test "$nonopt" = "$SHELL" || test "$nonopt" = /bin/sh ||
+    if test "$SHELL" = "$nonopt" || test /bin/sh = "$nonopt" ||
        # Allow the use of GNU shtool's install command.
-       case $nonopt in *shtool*) :;; *) false;; esac; then
+       case $nonopt in *shtool*) :;; *) false;; esac
+    then
       # Aesthetically quote it.
       func_quote_for_eval "$nonopt"
       install_prog="$func_quote_for_eval_result "
@@ -2800,7 +4121,7 @@ func_mode_install ()
     opts=
     prev=
     install_type=
-    isdir=no
+    isdir=false
     stripme=
     no_mode=:
     for arg
@@ -2813,7 +4134,7 @@ func_mode_install ()
       fi
 
       case $arg in
-      -d) isdir=yes ;;
+      -d) isdir=: ;;
       -f)
 	if $install_cp; then :; else
 	  prev=$arg
@@ -2831,7 +4152,7 @@ func_mode_install ()
       *)
 	# If the previous option needed an argument, then skip it.
 	if test -n "$prev"; then
-	  if test "x$prev" = x-m && test -n "$install_override_mode"; then
+	  if test X-m = "X$prev" && test -n "$install_override_mode"; then
 	    arg2=$install_override_mode
 	    no_mode=false
 	  fi
@@ -2856,7 +4177,7 @@ func_mode_install ()
       func_fatal_help "you must specify an install program"
 
     test -n "$prev" && \
-      func_fatal_help "the \`$prev' option requires an argument"
+      func_fatal_help "the '$prev' option requires an argument"
 
     if test -n "$install_override_mode" && $no_mode; then
       if $install_cp; then :; else
@@ -2878,19 +4199,19 @@ func_mode_install ()
     dest=$func_stripname_result
 
     # Check to see that the destination is a directory.
-    test -d "$dest" && isdir=yes
-    if test "$isdir" = yes; then
-      destdir="$dest"
+    test -d "$dest" && isdir=:
+    if $isdir; then
+      destdir=$dest
       destname=
     else
       func_dirname_and_basename "$dest" "" "."
-      destdir="$func_dirname_result"
-      destname="$func_basename_result"
+      destdir=$func_dirname_result
+      destname=$func_basename_result
 
       # Not a directory, so check to see that there is only one file specified.
       set dummy $files; shift
       test "$#" -gt 1 && \
-	func_fatal_help "\`$dest' is not a directory"
+	func_fatal_help "'$dest' is not a directory"
     fi
     case $destdir in
     [\\/]* | [A-Za-z]:[\\/]*) ;;
@@ -2899,7 +4220,7 @@ func_mode_install ()
 	case $file in
 	*.lo) ;;
 	*)
-	  func_fatal_help "\`$destdir' must be an absolute directory name"
+	  func_fatal_help "'$destdir' must be an absolute directory name"
 	  ;;
 	esac
       done
@@ -2908,7 +4229,7 @@ func_mode_install ()
 
     # This variable tells wrapper scripts just to set variables rather
     # than running their programs.
-    libtool_install_magic="$magic"
+    libtool_install_magic=$magic
 
     staticlibs=
     future_libdirs=
@@ -2928,7 +4249,7 @@ func_mode_install ()
 
 	# Check to see that this really is a libtool archive.
 	func_lalib_unsafe_p "$file" \
-	  || func_fatal_help "\`$file' is not a valid libtool archive"
+	  || func_fatal_help "'$file' is not a valid libtool archive"
 
 	library_names=
 	old_library=
@@ -2950,7 +4271,7 @@ func_mode_install ()
 	fi
 
 	func_dirname "$file" "/" ""
-	dir="$func_dirname_result"
+	dir=$func_dirname_result
 	func_append dir "$objdir"
 
 	if test -n "$relink_command"; then
@@ -2964,7 +4285,7 @@ func_mode_install ()
 	  # are installed into $libdir/../bin (currently, that works fine)
 	  # but it's something to keep an eye on.
 	  test "$inst_prefix_dir" = "$destdir" && \
-	    func_fatal_error "error: cannot install \`$file' to a directory not ending in $libdir"
+	    func_fatal_error "error: cannot install '$file' to a directory not ending in $libdir"
 
 	  if test -n "$inst_prefix_dir"; then
 	    # Stick the inst_prefix_dir data into the link command.
@@ -2973,29 +4294,36 @@ func_mode_install ()
 	    relink_command=`$ECHO "$relink_command" | $SED "s%@inst_prefix_dir@%%"`
 	  fi
 
-	  func_warning "relinking \`$file'"
+	  func_warning "relinking '$file'"
 	  func_show_eval "$relink_command" \
-	    'func_fatal_error "error: relink \`$file'\'' with the above command before installing it"'
+	    'func_fatal_error "error: relink '\''$file'\'' with the above command before installing it"'
 	fi
 
 	# See the names of the shared library.
 	set dummy $library_names; shift
 	if test -n "$1"; then
-	  realname="$1"
+	  realname=$1
 	  shift
 
-	  srcname="$realname"
-	  test -n "$relink_command" && srcname="$realname"T
+	  srcname=$realname
+	  test -n "$relink_command" && srcname=${realname}T
 
 	  # Install the shared library and build the symlinks.
 	  func_show_eval "$install_shared_prog $dir/$srcname $destdir/$realname" \
 	      'exit $?'
-	  tstripme="$stripme"
+	  tstripme=$stripme
 	  case $host_os in
 	  cygwin* | mingw* | pw32* | cegcc*)
 	    case $realname in
 	    *.dll.a)
-	      tstripme=""
+	      tstripme=
+	      ;;
+	    esac
+	    ;;
+	  os2*)
+	    case $realname in
+	    *_dll.a)
+	      tstripme=
 	      ;;
 	    esac
 	    ;;
@@ -3006,7 +4334,7 @@ func_mode_install ()
 
 	  if test "$#" -gt 0; then
 	    # Delete the old symlinks, and create new ones.
-	    # Try `ln -sf' first, because the `ln' binary might depend on
+	    # Try 'ln -sf' first, because the 'ln' binary might depend on
 	    # the symlink we replace!  Solaris /bin/ln does not understand -f,
 	    # so we also need to try rm && ln -s.
 	    for linkname
@@ -3017,14 +4345,14 @@ func_mode_install ()
 	  fi
 
 	  # Do each command in the postinstall commands.
-	  lib="$destdir/$realname"
+	  lib=$destdir/$realname
 	  func_execute_cmds "$postinstall_cmds" 'exit $?'
 	fi
 
 	# Install the pseudo-library for information purposes.
 	func_basename "$file"
-	name="$func_basename_result"
-	instname="$dir/$name"i
+	name=$func_basename_result
+	instname=$dir/${name}i
 	func_show_eval "$install_prog $instname $destdir/$name" 'exit $?'
 
 	# Maybe install the static library, too.
@@ -3036,11 +4364,11 @@ func_mode_install ()
 
 	# Figure out destination file name, if it wasn't already specified.
 	if test -n "$destname"; then
-	  destfile="$destdir/$destname"
+	  destfile=$destdir/$destname
 	else
 	  func_basename "$file"
-	  destfile="$func_basename_result"
-	  destfile="$destdir/$destfile"
+	  destfile=$func_basename_result
+	  destfile=$destdir/$destfile
 	fi
 
 	# Deduce the name of the destination old-style object file.
@@ -3050,11 +4378,11 @@ func_mode_install ()
 	  staticdest=$func_lo2o_result
 	  ;;
 	*.$objext)
-	  staticdest="$destfile"
+	  staticdest=$destfile
 	  destfile=
 	  ;;
 	*)
-	  func_fatal_help "cannot copy a libtool object to \`$destfile'"
+	  func_fatal_help "cannot copy a libtool object to '$destfile'"
 	  ;;
 	esac
 
@@ -3063,7 +4391,7 @@ func_mode_install ()
 	  func_show_eval "$install_prog $file $destfile" 'exit $?'
 
 	# Install the old object if enabled.
-	if test "$build_old_libs" = yes; then
+	if test yes = "$build_old_libs"; then
 	  # Deduce the name of the old-style object file.
 	  func_lo2o "$file"
 	  staticobj=$func_lo2o_result
@@ -3075,23 +4403,23 @@ func_mode_install ()
       *)
 	# Figure out destination file name, if it wasn't already specified.
 	if test -n "$destname"; then
-	  destfile="$destdir/$destname"
+	  destfile=$destdir/$destname
 	else
 	  func_basename "$file"
-	  destfile="$func_basename_result"
-	  destfile="$destdir/$destfile"
+	  destfile=$func_basename_result
+	  destfile=$destdir/$destfile
 	fi
 
 	# If the file is missing, and there is a .exe on the end, strip it
 	# because it is most likely a libtool script we actually want to
 	# install
-	stripped_ext=""
+	stripped_ext=
 	case $file in
 	  *.exe)
 	    if test ! -f "$file"; then
 	      func_stripname '' '.exe' "$file"
 	      file=$func_stripname_result
-	      stripped_ext=".exe"
+	      stripped_ext=.exe
 	    fi
 	    ;;
 	esac
@@ -3119,19 +4447,19 @@ func_mode_install ()
 
 	  # Check the variables that should have been set.
 	  test -z "$generated_by_libtool_version" && \
-	    func_fatal_error "invalid libtool wrapper script \`$wrapper'"
+	    func_fatal_error "invalid libtool wrapper script '$wrapper'"
 
-	  finalize=yes
+	  finalize=:
 	  for lib in $notinst_deplibs; do
 	    # Check to see that each library is installed.
 	    libdir=
 	    if test -f "$lib"; then
 	      func_source "$lib"
 	    fi
-	    libfile="$libdir/"`$ECHO "$lib" | $SED 's%^.*/%%g'` ### testsuite: skip nested quoting test
+	    libfile=$libdir/`$ECHO "$lib" | $SED 's%^.*/%%g'`
 	    if test -n "$libdir" && test ! -f "$libfile"; then
-	      func_warning "\`$lib' has not been installed in \`$libdir'"
-	      finalize=no
+	      func_warning "'$lib' has not been installed in '$libdir'"
+	      finalize=false
 	    fi
 	  done
 
@@ -3139,29 +4467,29 @@ func_mode_install ()
 	  func_source "$wrapper"
 
 	  outputname=
-	  if test "$fast_install" = no && test -n "$relink_command"; then
+	  if test no = "$fast_install" && test -n "$relink_command"; then
 	    $opt_dry_run || {
-	      if test "$finalize" = yes; then
+	      if $finalize; then
 	        tmpdir=`func_mktempdir`
 		func_basename "$file$stripped_ext"
-		file="$func_basename_result"
-	        outputname="$tmpdir/$file"
+		file=$func_basename_result
+	        outputname=$tmpdir/$file
 	        # Replace the output file specification.
 	        relink_command=`$ECHO "$relink_command" | $SED 's%@OUTPUT@%'"$outputname"'%g'`
 
-	        $opt_silent || {
+	        $opt_quiet || {
 	          func_quote_for_expand "$relink_command"
 		  eval "func_echo $func_quote_for_expand_result"
 	        }
 	        if eval "$relink_command"; then :
 	          else
-		  func_error "error: relink \`$file' with the above command before installing it"
+		  func_error "error: relink '$file' with the above command before installing it"
 		  $opt_dry_run || ${RM}r "$tmpdir"
 		  continue
 	        fi
-	        file="$outputname"
+	        file=$outputname
 	      else
-	        func_warning "cannot relink \`$file'"
+	        func_warning "cannot relink '$file'"
 	      fi
 	    }
 	  else
@@ -3198,10 +4526,10 @@ func_mode_install ()
 
     for file in $staticlibs; do
       func_basename "$file"
-      name="$func_basename_result"
+      name=$func_basename_result
 
       # Set up the ranlib parameters.
-      oldlib="$destdir/$name"
+      oldlib=$destdir/$name
       func_to_tool_file "$oldlib" func_convert_file_msys_to_w32
       tool_oldlib=$func_to_tool_file_result
 
@@ -3216,18 +4544,18 @@ func_mode_install ()
     done
 
     test -n "$future_libdirs" && \
-      func_warning "remember to run \`$progname --finish$future_libdirs'"
+      func_warning "remember to run '$progname --finish$future_libdirs'"
 
     if test -n "$current_libdirs"; then
       # Maybe just do a dry run.
       $opt_dry_run && current_libdirs=" -n$current_libdirs"
-      exec_cmd='$SHELL $progpath $preserve_args --finish$current_libdirs'
+      exec_cmd='$SHELL "$progpath" $preserve_args --finish$current_libdirs'
     else
       exit $EXIT_SUCCESS
     fi
 }
 
-test "$opt_mode" = install && func_mode_install ${1+"$@"}
+test install = "$opt_mode" && func_mode_install ${1+"$@"}
 
 
 # func_generate_dlsyms outputname originator pic_p
@@ -3235,16 +4563,17 @@ test "$opt_mode" = install && func_mode_install ${1+"$@"}
 # a dlpreopen symbol table.
 func_generate_dlsyms ()
 {
-    $opt_debug
-    my_outputname="$1"
-    my_originator="$2"
-    my_pic_p="${3-no}"
-    my_prefix=`$ECHO "$my_originator" | sed 's%[^a-zA-Z0-9]%_%g'`
+    $debug_cmd
+
+    my_outputname=$1
+    my_originator=$2
+    my_pic_p=${3-false}
+    my_prefix=`$ECHO "$my_originator" | $SED 's%[^a-zA-Z0-9]%_%g'`
     my_dlsyms=
 
-    if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
+    if test -n "$dlfiles$dlprefiles" || test no != "$dlself"; then
       if test -n "$NM" && test -n "$global_symbol_pipe"; then
-	my_dlsyms="${my_outputname}S.c"
+	my_dlsyms=${my_outputname}S.c
       else
 	func_error "not configured to extract global symbols from dlpreopened files"
       fi
@@ -3255,7 +4584,7 @@ func_generate_dlsyms ()
       "") ;;
       *.c)
 	# Discover the nlist of each of the dlfiles.
-	nlist="$output_objdir/${my_outputname}.nm"
+	nlist=$output_objdir/$my_outputname.nm
 
 	func_show_eval "$RM $nlist ${nlist}S ${nlist}T"
 
@@ -3263,34 +4592,36 @@ func_generate_dlsyms ()
 	func_verbose "creating $output_objdir/$my_dlsyms"
 
 	$opt_dry_run || $ECHO > "$output_objdir/$my_dlsyms" "\
-/* $my_dlsyms - symbol resolution table for \`$my_outputname' dlsym emulation. */
-/* Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION */
+/* $my_dlsyms - symbol resolution table for '$my_outputname' dlsym emulation. */
+/* Generated by $PROGRAM (GNU $PACKAGE) $VERSION */
 
 #ifdef __cplusplus
 extern \"C\" {
 #endif
 
-#if defined(__GNUC__) && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))
+#if defined __GNUC__ && (((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4)) || (__GNUC__ > 4))
 #pragma GCC diagnostic ignored \"-Wstrict-prototypes\"
 #endif
 
 /* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */
-#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)
-/* DATA imports from DLLs on WIN32 con't be const, because runtime
+#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE
+/* DATA imports from DLLs on WIN32 can't be const, because runtime
    relocations are performed -- see ld's documentation on pseudo-relocs.  */
 # define LT_DLSYM_CONST
-#elif defined(__osf__)
+#elif defined __osf__
 /* This system does not cope well with relocations in const data.  */
 # define LT_DLSYM_CONST
 #else
 # define LT_DLSYM_CONST const
 #endif
 
+#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)
+
 /* External symbol declarations for the compiler. */\
 "
 
-	if test "$dlself" = yes; then
-	  func_verbose "generating symbol list for \`$output'"
+	if test yes = "$dlself"; then
+	  func_verbose "generating symbol list for '$output'"
 
 	  $opt_dry_run || echo ': @PROGRAM@ ' > "$nlist"
 
@@ -3298,7 +4629,7 @@ extern \"C\" {
 	  progfiles=`$ECHO "$objs$old_deplibs" | $SP2NL | $SED "$lo2o" | $NL2SP`
 	  for progfile in $progfiles; do
 	    func_to_tool_file "$progfile" func_convert_file_msys_to_w32
-	    func_verbose "extracting global C symbols from \`$func_to_tool_file_result'"
+	    func_verbose "extracting global C symbols from '$func_to_tool_file_result'"
 	    $opt_dry_run || eval "$NM $func_to_tool_file_result | $global_symbol_pipe >> '$nlist'"
 	  done
 
@@ -3318,10 +4649,10 @@ extern \"C\" {
 
 	  # Prepare the list of exported symbols
 	  if test -z "$export_symbols"; then
-	    export_symbols="$output_objdir/$outputname.exp"
+	    export_symbols=$output_objdir/$outputname.exp
 	    $opt_dry_run || {
 	      $RM $export_symbols
-	      eval "${SED} -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \(.*\)$/\1/p' "'< "$nlist" > "$export_symbols"'
+	      eval "$SED -n -e '/^: @PROGRAM@ $/d' -e 's/^.* \(.*\)$/\1/p' "'< "$nlist" > "$export_symbols"'
 	      case $host in
 	      *cygwin* | *mingw* | *cegcc* )
                 eval "echo EXPORTS "'> "$output_objdir/$outputname.def"'
@@ -3331,7 +4662,7 @@ extern \"C\" {
 	    }
 	  else
 	    $opt_dry_run || {
-	      eval "${SED} -e 's/\([].[*^$]\)/\\\\\1/g' -e 's/^/ /' -e 's/$/$/'"' < "$export_symbols" > "$output_objdir/$outputname.exp"'
+	      eval "$SED -e 's/\([].[*^$]\)/\\\\\1/g' -e 's/^/ /' -e 's/$/$/'"' < "$export_symbols" > "$output_objdir/$outputname.exp"'
 	      eval '$GREP -f "$output_objdir/$outputname.exp" < "$nlist" > "$nlist"T'
 	      eval '$MV "$nlist"T "$nlist"'
 	      case $host in
@@ -3345,22 +4676,22 @@ extern \"C\" {
 	fi
 
 	for dlprefile in $dlprefiles; do
-	  func_verbose "extracting global C symbols from \`$dlprefile'"
+	  func_verbose "extracting global C symbols from '$dlprefile'"
 	  func_basename "$dlprefile"
-	  name="$func_basename_result"
+	  name=$func_basename_result
           case $host in
 	    *cygwin* | *mingw* | *cegcc* )
 	      # if an import library, we need to obtain dlname
 	      if func_win32_import_lib_p "$dlprefile"; then
 	        func_tr_sh "$dlprefile"
 	        eval "curr_lafile=\$libfile_$func_tr_sh_result"
-	        dlprefile_dlbasename=""
+	        dlprefile_dlbasename=
 	        if test -n "$curr_lafile" && func_lalib_p "$curr_lafile"; then
 	          # Use subshell, to avoid clobbering current variable values
 	          dlprefile_dlname=`source "$curr_lafile" && echo "$dlname"`
-	          if test -n "$dlprefile_dlname" ; then
+	          if test -n "$dlprefile_dlname"; then
 	            func_basename "$dlprefile_dlname"
-	            dlprefile_dlbasename="$func_basename_result"
+	            dlprefile_dlbasename=$func_basename_result
 	          else
 	            # no lafile. user explicitly requested -dlpreopen <import library>.
 	            $sharedlib_from_linklib_cmd "$dlprefile"
@@ -3368,7 +4699,7 @@ extern \"C\" {
 	          fi
 	        fi
 	        $opt_dry_run || {
-	          if test -n "$dlprefile_dlbasename" ; then
+	          if test -n "$dlprefile_dlbasename"; then
 	            eval '$ECHO ": $dlprefile_dlbasename" >> "$nlist"'
 	          else
 	            func_warning "Could not compute DLL name from $name"
@@ -3424,6 +4755,11 @@ extern \"C\" {
 	    echo '/* NONE */' >> "$output_objdir/$my_dlsyms"
 	  fi
 
+	  func_show_eval '$RM "${nlist}I"'
+	  if test -n "$global_symbol_to_import"; then
+	    eval "$global_symbol_to_import"' < "$nlist"S > "$nlist"I'
+	  fi
+
 	  echo >> "$output_objdir/$my_dlsyms" "\
 
 /* The mapping between symbol names and symbols.  */
@@ -3432,11 +4768,30 @@ typedef struct {
   void *address;
 } lt_dlsymlist;
 extern LT_DLSYM_CONST lt_dlsymlist
-lt_${my_prefix}_LTX_preloaded_symbols[];
+lt_${my_prefix}_LTX_preloaded_symbols[];\
+"
+
+	  if test -s "$nlist"I; then
+	    echo >> "$output_objdir/$my_dlsyms" "\
+static void lt_syminit(void)
+{
+  LT_DLSYM_CONST lt_dlsymlist *symbol = lt_${my_prefix}_LTX_preloaded_symbols;
+  for (; symbol->name; ++symbol)
+    {"
+	    $SED 's/.*/      if (STREQ (symbol->name, \"&\")) symbol->address = (void *) \&&;/' < "$nlist"I >> "$output_objdir/$my_dlsyms"
+	    echo >> "$output_objdir/$my_dlsyms" "\
+    }
+}"
+	  fi
+	  echo >> "$output_objdir/$my_dlsyms" "\
 LT_DLSYM_CONST lt_dlsymlist
 lt_${my_prefix}_LTX_preloaded_symbols[] =
-{\
-  { \"$my_originator\", (void *) 0 },"
+{ {\"$my_originator\", (void *) 0},"
+
+	  if test -s "$nlist"I; then
+	    echo >> "$output_objdir/$my_dlsyms" "\
+  {\"@INIT@\", (void *) &lt_syminit},"
+	  fi
 
 	  case $need_lib_prefix in
 	  no)
@@ -3478,9 +4833,7 @@ static const void *lt_preloaded_setup() {
 	  *-*-hpux*)
 	    pic_flag_for_symtable=" $pic_flag"  ;;
 	  *)
-	    if test "X$my_pic_p" != Xno; then
-	      pic_flag_for_symtable=" $pic_flag"
-	    fi
+	    $my_pic_p && pic_flag_for_symtable=" $pic_flag"
 	    ;;
 	  esac
 	  ;;
@@ -3497,10 +4850,10 @@ static const void *lt_preloaded_setup() {
 	func_show_eval '(cd $output_objdir && $LTCC$symtab_cflags -c$no_builtin_flag$pic_flag_for_symtable "$my_dlsyms")' 'exit $?'
 
 	# Clean up the generated files.
-	func_show_eval '$RM "$output_objdir/$my_dlsyms" "$nlist" "${nlist}S" "${nlist}T"'
+	func_show_eval '$RM "$output_objdir/$my_dlsyms" "$nlist" "${nlist}S" "${nlist}T" "${nlist}I"'
 
 	# Transform the symbol file into the correct name.
-	symfileobj="$output_objdir/${my_outputname}S.$objext"
+	symfileobj=$output_objdir/${my_outputname}S.$objext
 	case $host in
 	*cygwin* | *mingw* | *cegcc* )
 	  if test -f "$output_objdir/$my_outputname.def"; then
@@ -3518,7 +4871,7 @@ static const void *lt_preloaded_setup() {
 	esac
 	;;
       *)
-	func_fatal_error "unknown suffix for \`$my_dlsyms'"
+	func_fatal_error "unknown suffix for '$my_dlsyms'"
 	;;
       esac
     else
@@ -3532,6 +4885,32 @@ static const void *lt_preloaded_setup() {
     fi
 }
 
+# func_cygming_gnu_implib_p ARG
+# This predicate returns with zero status (TRUE) if
+# ARG is a GNU/binutils-style import library. Returns
+# with nonzero status (FALSE) otherwise.
+func_cygming_gnu_implib_p ()
+{
+  $debug_cmd
+
+  func_to_tool_file "$1" func_convert_file_msys_to_w32
+  func_cygming_gnu_implib_tmp=`$NM "$func_to_tool_file_result" | eval "$global_symbol_pipe" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`
+  test -n "$func_cygming_gnu_implib_tmp"
+}
+
+# func_cygming_ms_implib_p ARG
+# This predicate returns with zero status (TRUE) if
+# ARG is an MS-style import library. Returns
+# with nonzero status (FALSE) otherwise.
+func_cygming_ms_implib_p ()
+{
+  $debug_cmd
+
+  func_to_tool_file "$1" func_convert_file_msys_to_w32
+  func_cygming_ms_implib_tmp=`$NM "$func_to_tool_file_result" | eval "$global_symbol_pipe" | $GREP '_NULL_IMPORT_DESCRIPTOR'`
+  test -n "$func_cygming_ms_implib_tmp"
+}
+
 # func_win32_libid arg
 # return the library type of file 'arg'
 #
@@ -3541,8 +4920,9 @@ static const void *lt_preloaded_setup() {
 # Despite the name, also deal with 64 bit binaries.
 func_win32_libid ()
 {
-  $opt_debug
-  win32_libid_type="unknown"
+  $debug_cmd
+
+  win32_libid_type=unknown
   win32_fileres=`file -L $1 2>/dev/null`
   case $win32_fileres in
   *ar\ archive\ import\ library*) # definitely import
@@ -3552,16 +4932,29 @@ func_win32_libid ()
     # Keep the egrep pattern in sync with the one in _LT_CHECK_MAGIC_METHOD.
     if eval $OBJDUMP -f $1 | $SED -e '10q' 2>/dev/null |
        $EGREP 'file format (pei*-i386(.*architecture: i386)?|pe-arm-wince|pe-x86-64)' >/dev/null; then
-      func_to_tool_file "$1" func_convert_file_msys_to_w32
-      win32_nmres=`eval $NM -f posix -A \"$func_to_tool_file_result\" |
-	$SED -n -e '
+      case $nm_interface in
+      "MS dumpbin")
+	if func_cygming_ms_implib_p "$1" ||
+	   func_cygming_gnu_implib_p "$1"
+	then
+	  win32_nmres=import
+	else
+	  win32_nmres=
+	fi
+	;;
+      *)
+	func_to_tool_file "$1" func_convert_file_msys_to_w32
+	win32_nmres=`eval $NM -f posix -A \"$func_to_tool_file_result\" |
+	  $SED -n -e '
 	    1,100{
 		/ I /{
-		    s,.*,import,
+		    s|.*|import|
 		    p
 		    q
 		}
 	    }'`
+	;;
+      esac
       case $win32_nmres in
       import*)  win32_libid_type="x86 archive import";;
       *)        win32_libid_type="x86 archive static";;
@@ -3593,7 +4986,8 @@ func_win32_libid ()
 #    $sharedlib_from_linklib_result
 func_cygming_dll_for_implib ()
 {
-  $opt_debug
+  $debug_cmd
+
   sharedlib_from_linklib_result=`$DLLTOOL --identify-strict --identify "$1"`
 }
 
@@ -3610,7 +5004,8 @@ func_cygming_dll_for_implib ()
 # specified import library.
 func_cygming_dll_for_implib_fallback_core ()
 {
-  $opt_debug
+  $debug_cmd
+
   match_literal=`$ECHO "$1" | $SED "$sed_make_literal_regex"`
   $OBJDUMP -s --section "$1" "$2" 2>/dev/null |
     $SED '/^Contents of section '"$match_literal"':/{
@@ -3646,8 +5041,8 @@ func_cygming_dll_for_implib_fallback_core ()
       /./p' |
     # we now have a list, one entry per line, of the stringified
     # contents of the appropriate section of all members of the
-    # archive which possess that section. Heuristic: eliminate
-    # all those which have a first or second character that is
+    # archive that possess that section. Heuristic: eliminate
+    # all those that have a first or second character that is
     # a '.' (that is, objdump's representation of an unprintable
     # character.) This should work for all archives with less than
     # 0x302f exports -- but will fail for DLLs whose name actually
@@ -3658,30 +5053,6 @@ func_cygming_dll_for_implib_fallback_core ()
     $SED -e '/^\./d;/^.\./d;q'
 }
 
-# func_cygming_gnu_implib_p ARG
-# This predicate returns with zero status (TRUE) if
-# ARG is a GNU/binutils-style import library. Returns
-# with nonzero status (FALSE) otherwise.
-func_cygming_gnu_implib_p ()
-{
-  $opt_debug
-  func_to_tool_file "$1" func_convert_file_msys_to_w32
-  func_cygming_gnu_implib_tmp=`$NM "$func_to_tool_file_result" | eval "$global_symbol_pipe" | $EGREP ' (_head_[A-Za-z0-9_]+_[ad]l*|[A-Za-z0-9_]+_[ad]l*_iname)$'`
-  test -n "$func_cygming_gnu_implib_tmp"
-}
-
-# func_cygming_ms_implib_p ARG
-# This predicate returns with zero status (TRUE) if
-# ARG is an MS-style import library. Returns
-# with nonzero status (FALSE) otherwise.
-func_cygming_ms_implib_p ()
-{
-  $opt_debug
-  func_to_tool_file "$1" func_convert_file_msys_to_w32
-  func_cygming_ms_implib_tmp=`$NM "$func_to_tool_file_result" | eval "$global_symbol_pipe" | $GREP '_NULL_IMPORT_DESCRIPTOR'`
-  test -n "$func_cygming_ms_implib_tmp"
-}
-
 # func_cygming_dll_for_implib_fallback ARG
 # Platform-specific function to extract the
 # name of the DLL associated with the specified
@@ -3695,16 +5066,17 @@ func_cygming_ms_implib_p ()
 #    $sharedlib_from_linklib_result
 func_cygming_dll_for_implib_fallback ()
 {
-  $opt_debug
-  if func_cygming_gnu_implib_p "$1" ; then
+  $debug_cmd
+
+  if func_cygming_gnu_implib_p "$1"; then
     # binutils import library
     sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$7' "$1"`
-  elif func_cygming_ms_implib_p "$1" ; then
+  elif func_cygming_ms_implib_p "$1"; then
     # ms-generated import library
     sharedlib_from_linklib_result=`func_cygming_dll_for_implib_fallback_core '.idata$6' "$1"`
   else
     # unknown
-    sharedlib_from_linklib_result=""
+    sharedlib_from_linklib_result=
   fi
 }
 
@@ -3712,10 +5084,11 @@ func_cygming_dll_for_implib_fallback ()
 # func_extract_an_archive dir oldlib
 func_extract_an_archive ()
 {
-    $opt_debug
-    f_ex_an_ar_dir="$1"; shift
-    f_ex_an_ar_oldlib="$1"
-    if test "$lock_old_archive_extraction" = yes; then
+    $debug_cmd
+
+    f_ex_an_ar_dir=$1; shift
+    f_ex_an_ar_oldlib=$1
+    if test yes = "$lock_old_archive_extraction"; then
       lockfile=$f_ex_an_ar_oldlib.lock
       until $opt_dry_run || ln "$progpath" "$lockfile" 2>/dev/null; do
 	func_echo "Waiting for $lockfile to be removed"
@@ -3724,7 +5097,7 @@ func_extract_an_archive ()
     fi
     func_show_eval "(cd \$f_ex_an_ar_dir && $AR x \"\$f_ex_an_ar_oldlib\")" \
 		   'stat=$?; rm -f "$lockfile"; exit $stat'
-    if test "$lock_old_archive_extraction" = yes; then
+    if test yes = "$lock_old_archive_extraction"; then
       $opt_dry_run || rm -f "$lockfile"
     fi
     if ($AR t "$f_ex_an_ar_oldlib" | sort | sort -uc >/dev/null 2>&1); then
@@ -3738,22 +5111,23 @@ func_extract_an_archive ()
 # func_extract_archives gentop oldlib ...
 func_extract_archives ()
 {
-    $opt_debug
-    my_gentop="$1"; shift
+    $debug_cmd
+
+    my_gentop=$1; shift
     my_oldlibs=${1+"$@"}
-    my_oldobjs=""
-    my_xlib=""
-    my_xabs=""
-    my_xdir=""
+    my_oldobjs=
+    my_xlib=
+    my_xabs=
+    my_xdir=
 
     for my_xlib in $my_oldlibs; do
       # Extract the objects.
       case $my_xlib in
-	[\\/]* | [A-Za-z]:[\\/]*) my_xabs="$my_xlib" ;;
+	[\\/]* | [A-Za-z]:[\\/]*) my_xabs=$my_xlib ;;
 	*) my_xabs=`pwd`"/$my_xlib" ;;
       esac
       func_basename "$my_xlib"
-      my_xlib="$func_basename_result"
+      my_xlib=$func_basename_result
       my_xlib_u=$my_xlib
       while :; do
         case " $extracted_archives " in
@@ -3765,7 +5139,7 @@ func_extract_archives ()
 	esac
       done
       extracted_archives="$extracted_archives $my_xlib_u"
-      my_xdir="$my_gentop/$my_xlib_u"
+      my_xdir=$my_gentop/$my_xlib_u
 
       func_mkdir_p "$my_xdir"
 
@@ -3778,22 +5152,23 @@ func_extract_archives ()
 	  cd $my_xdir || exit $?
 	  darwin_archive=$my_xabs
 	  darwin_curdir=`pwd`
-	  darwin_base_archive=`basename "$darwin_archive"`
+	  func_basename "$darwin_archive"
+	  darwin_base_archive=$func_basename_result
 	  darwin_arches=`$LIPO -info "$darwin_archive" 2>/dev/null | $GREP Architectures 2>/dev/null || true`
 	  if test -n "$darwin_arches"; then
 	    darwin_arches=`$ECHO "$darwin_arches" | $SED -e 's/.*are://'`
 	    darwin_arch=
 	    func_verbose "$darwin_base_archive has multiple architectures $darwin_arches"
-	    for darwin_arch in  $darwin_arches ; do
-	      func_mkdir_p "unfat-$$/${darwin_base_archive}-${darwin_arch}"
-	      $LIPO -thin $darwin_arch -output "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}" "${darwin_archive}"
-	      cd "unfat-$$/${darwin_base_archive}-${darwin_arch}"
-	      func_extract_an_archive "`pwd`" "${darwin_base_archive}"
+	    for darwin_arch in  $darwin_arches; do
+	      func_mkdir_p "unfat-$$/$darwin_base_archive-$darwin_arch"
+	      $LIPO -thin $darwin_arch -output "unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive" "$darwin_archive"
+	      cd "unfat-$$/$darwin_base_archive-$darwin_arch"
+	      func_extract_an_archive "`pwd`" "$darwin_base_archive"
 	      cd "$darwin_curdir"
-	      $RM "unfat-$$/${darwin_base_archive}-${darwin_arch}/${darwin_base_archive}"
+	      $RM "unfat-$$/$darwin_base_archive-$darwin_arch/$darwin_base_archive"
 	    done # $darwin_arches
             ## Okay now we've a bunch of thin objects, gotta fatten them up :)
-	    darwin_filelist=`find unfat-$$ -type f -name \*.o -print -o -name \*.lo -print | $SED -e "$basename" | sort -u`
+	    darwin_filelist=`find unfat-$$ -type f -name \*.o -print -o -name \*.lo -print | $SED -e "$sed_basename" | sort -u`
 	    darwin_file=
 	    darwin_files=
 	    for darwin_file in $darwin_filelist; do
@@ -3815,7 +5190,7 @@ func_extract_archives ()
       my_oldobjs="$my_oldobjs "`find $my_xdir -name \*.$objext -print -o -name \*.lo -print | sort | $NL2SP`
     done
 
-    func_extract_archives_result="$my_oldobjs"
+    func_extract_archives_result=$my_oldobjs
 }
 
 
@@ -3830,7 +5205,7 @@ func_extract_archives ()
 #
 # ARG is the value that the WRAPPER_SCRIPT_BELONGS_IN_OBJDIR
 # variable will take.  If 'yes', then the emitted script
-# will assume that the directory in which it is stored is
+# will assume that the directory where it is stored is
 # the $objdir directory.  This is a cygwin/mingw-specific
 # behavior.
 func_emit_wrapper ()
@@ -3841,7 +5216,7 @@ func_emit_wrapper ()
 #! $SHELL
 
 # $output - temporary wrapper script for $objdir/$outputname
-# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+# Generated by $PROGRAM (GNU $PACKAGE) $VERSION
 #
 # The $output program cannot be directly executed until all the libtool
 # libraries that it depends on are installed.
@@ -3898,9 +5273,9 @@ _LTECHO_EOF'
 
 # Very basic option parsing. These options are (a) specific to
 # the libtool wrapper, (b) are identical between the wrapper
-# /script/ and the wrapper /executable/ which is used only on
+# /script/ and the wrapper /executable/ that is used only on
 # windows platforms, and (c) all begin with the string "--lt-"
-# (application programs are unlikely to have options which match
+# (application programs are unlikely to have options that match
 # this pattern).
 #
 # There are only two supported options: --lt-debug and
@@ -3933,7 +5308,7 @@ func_parse_lt_options ()
 
   # Print the debug banner immediately:
   if test -n \"\$lt_option_debug\"; then
-    echo \"${outputname}:${output}:\${LINENO}: libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\" 1>&2
+    echo \"$outputname:$output:\$LINENO: libtool wrapper (GNU $PACKAGE) $VERSION\" 1>&2
   fi
 }
 
@@ -3944,7 +5319,7 @@ func_lt_dump_args ()
   lt_dump_args_N=1;
   for lt_arg
   do
-    \$ECHO \"${outputname}:${output}:\${LINENO}: newargv[\$lt_dump_args_N]: \$lt_arg\"
+    \$ECHO \"$outputname:$output:\$LINENO: newargv[\$lt_dump_args_N]: \$lt_arg\"
     lt_dump_args_N=\`expr \$lt_dump_args_N + 1\`
   done
 }
@@ -3958,7 +5333,7 @@ func_exec_program_core ()
   *-*-mingw | *-*-os2* | *-cegcc*)
     $ECHO "\
       if test -n \"\$lt_option_debug\"; then
-        \$ECHO \"${outputname}:${output}:\${LINENO}: newargv[0]: \$progdir\\\\\$program\" 1>&2
+        \$ECHO \"$outputname:$output:\$LINENO: newargv[0]: \$progdir\\\\\$program\" 1>&2
         func_lt_dump_args \${1+\"\$@\"} 1>&2
       fi
       exec \"\$progdir\\\\\$program\" \${1+\"\$@\"}
@@ -3968,7 +5343,7 @@ func_exec_program_core ()
   *)
     $ECHO "\
       if test -n \"\$lt_option_debug\"; then
-        \$ECHO \"${outputname}:${output}:\${LINENO}: newargv[0]: \$progdir/\$program\" 1>&2
+        \$ECHO \"$outputname:$output:\$LINENO: newargv[0]: \$progdir/\$program\" 1>&2
         func_lt_dump_args \${1+\"\$@\"} 1>&2
       fi
       exec \"\$progdir/\$program\" \${1+\"\$@\"}
@@ -4043,13 +5418,13 @@ func_exec_program ()
   test -n \"\$absdir\" && thisdir=\"\$absdir\"
 "
 
-	if test "$fast_install" = yes; then
+	if test yes = "$fast_install"; then
 	  $ECHO "\
   program=lt-'$outputname'$exeext
   progdir=\"\$thisdir/$objdir\"
 
   if test ! -f \"\$progdir/\$program\" ||
-     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/dev/null | ${SED} 1q\`; \\
+     { file=\`ls -1dt \"\$progdir/\$program\" \"\$progdir/../\$program\" 2>/dev/null | $SED 1q\`; \\
        test \"X\$file\" != \"X\$progdir/\$program\"; }; then
 
     file=\"\$\$-\$program\"
@@ -4066,7 +5441,7 @@ func_exec_program ()
     if test -n \"\$relink_command\"; then
       if relink_command_output=\`eval \$relink_command 2>&1\`; then :
       else
-	$ECHO \"\$relink_command_output\" >&2
+	\$ECHO \"\$relink_command_output\" >&2
 	$RM \"\$progdir/\$file\"
 	exit 1
       fi
@@ -4101,7 +5476,7 @@ func_exec_program ()
 	fi
 
 	# Export our shlibpath_var if we have one.
-	if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
+	if test yes = "$shlibpath_overrides_runpath" && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
 	  $ECHO "\
     # Add our own library path to $shlibpath_var
     $shlibpath_var=\"$temp_rpath\$$shlibpath_var\"
@@ -4121,7 +5496,7 @@ func_exec_program ()
     fi
   else
     # The program doesn't exist.
-    \$ECHO \"\$0: error: \\\`\$progdir/\$program' does not exist\" 1>&2
+    \$ECHO \"\$0: error: '\$progdir/\$program' does not exist\" 1>&2
     \$ECHO \"This script is just a wrapper for \$program.\" 1>&2
     \$ECHO \"See the $PACKAGE documentation for more information.\" 1>&2
     exit 1
@@ -4140,7 +5515,7 @@ func_emit_cwrapperexe_src ()
 	cat <<EOF
 
 /* $cwrappersource - temporary wrapper executable for $objdir/$outputname
-   Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+   Generated by $PROGRAM (GNU $PACKAGE) $VERSION
 
    The $output program cannot be directly executed until all the libtool
    libraries that it depends on are installed.
@@ -4175,47 +5550,45 @@ EOF
 #include <fcntl.h>
 #include <sys/stat.h>
 
+#define STREQ(s1, s2) (strcmp ((s1), (s2)) == 0)
+
 /* declarations of non-ANSI functions */
-#if defined(__MINGW32__)
+#if defined __MINGW32__
 # ifdef __STRICT_ANSI__
 int _putenv (const char *);
 # endif
-#elif defined(__CYGWIN__)
+#elif defined __CYGWIN__
 # ifdef __STRICT_ANSI__
 char *realpath (const char *, char *);
 int putenv (char *);
 int setenv (const char *, const char *, int);
 # endif
-/* #elif defined (other platforms) ... */
+/* #elif defined other_platform || defined ... */
 #endif
 
 /* portability defines, excluding path handling macros */
-#if defined(_MSC_VER)
+#if defined _MSC_VER
 # define setmode _setmode
 # define stat    _stat
 # define chmod   _chmod
 # define getcwd  _getcwd
 # define putenv  _putenv
 # define S_IXUSR _S_IEXEC
-# ifndef _INTPTR_T_DEFINED
-#  define _INTPTR_T_DEFINED
-#  define intptr_t int
-# endif
-#elif defined(__MINGW32__)
+#elif defined __MINGW32__
 # define setmode _setmode
 # define stat    _stat
 # define chmod   _chmod
 # define getcwd  _getcwd
 # define putenv  _putenv
-#elif defined(__CYGWIN__)
+#elif defined __CYGWIN__
 # define HAVE_SETENV
 # define FOPEN_WB "wb"
-/* #elif defined (other platforms) ... */
+/* #elif defined other platforms ... */
 #endif
 
-#if defined(PATH_MAX)
+#if defined PATH_MAX
 # define LT_PATHMAX PATH_MAX
-#elif defined(MAXPATHLEN)
+#elif defined MAXPATHLEN
 # define LT_PATHMAX MAXPATHLEN
 #else
 # define LT_PATHMAX 1024
@@ -4234,8 +5607,8 @@ int setenv (const char *, const char *, int);
 # define PATH_SEPARATOR ':'
 #endif
 
-#if defined (_WIN32) || defined (__MSDOS__) || defined (__DJGPP__) || \
-  defined (__OS2__)
+#if defined _WIN32 || defined __MSDOS__ || defined __DJGPP__ || \
+  defined __OS2__
 # define HAVE_DOS_BASED_FILE_SYSTEM
 # define FOPEN_WB "wb"
 # ifndef DIR_SEPARATOR_2
@@ -4268,10 +5641,10 @@ int setenv (const char *, const char *, int);
 
 #define XMALLOC(type, num)      ((type *) xmalloc ((num) * sizeof(type)))
 #define XFREE(stale) do { \
-  if (stale) { free ((void *) stale); stale = 0; } \
+  if (stale) { free (stale); stale = 0; } \
 } while (0)
 
-#if defined(LT_DEBUGWRAPPER)
+#if defined LT_DEBUGWRAPPER
 static int lt_debug = 1;
 #else
 static int lt_debug = 0;
@@ -4300,11 +5673,16 @@ void lt_dump_script (FILE *f);
 EOF
 
 	    cat <<EOF
-volatile const char * MAGIC_EXE = "$magic_exe";
+#if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)
+# define externally_visible volatile
+#else
+# define externally_visible __attribute__((externally_visible)) volatile
+#endif
+externally_visible const char * MAGIC_EXE = "$magic_exe";
 const char * LIB_PATH_VARNAME = "$shlibpath_var";
 EOF
 
-	    if test "$shlibpath_overrides_runpath" = yes && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
+	    if test yes = "$shlibpath_overrides_runpath" && test -n "$shlibpath_var" && test -n "$temp_rpath"; then
               func_to_host_path "$temp_rpath"
 	      cat <<EOF
 const char * LIB_PATH_VALUE   = "$func_to_host_path_result";
@@ -4328,7 +5706,7 @@ const char * EXE_PATH_VALUE   = "";
 EOF
 	    fi
 
-	    if test "$fast_install" = yes; then
+	    if test yes = "$fast_install"; then
 	      cat <<EOF
 const char * TARGET_PROGRAM_NAME = "lt-$outputname"; /* hopefully, no .exe */
 EOF
@@ -4357,12 +5735,12 @@ main (int argc, char *argv[])
   char *actual_cwrapper_name;
   char *target_name;
   char *lt_argv_zero;
-  intptr_t rval = 127;
+  int rval = 127;
 
   int i;
 
   program_name = (char *) xstrdup (base_name (argv[0]));
-  newargz = XMALLOC (char *, argc + 1);
+  newargz = XMALLOC (char *, (size_t) argc + 1);
 
   /* very simple arg parsing; don't want to rely on getopt
    * also, copy all non cwrapper options to newargz, except
@@ -4371,10 +5749,10 @@ main (int argc, char *argv[])
   newargc=0;
   for (i = 1; i < argc; i++)
     {
-      if (strcmp (argv[i], dumpscript_opt) == 0)
+      if (STREQ (argv[i], dumpscript_opt))
 	{
 EOF
-	    case "$host" in
+	    case $host in
 	      *mingw* | *cygwin* )
 		# make stdout use "unix" line endings
 		echo "          setmode(1,_O_BINARY);"
@@ -4385,12 +5763,12 @@ EOF
 	  lt_dump_script (stdout);
 	  return 0;
 	}
-      if (strcmp (argv[i], debug_opt) == 0)
+      if (STREQ (argv[i], debug_opt))
 	{
           lt_debug = 1;
           continue;
 	}
-      if (strcmp (argv[i], ltwrapper_option_prefix) == 0)
+      if (STREQ (argv[i], ltwrapper_option_prefix))
         {
           /* however, if there is an option in the LTWRAPPER_OPTION_PREFIX
              namespace, but it is not one of the ones we know about and
@@ -4413,7 +5791,7 @@ EOF
 EOF
 	    cat <<EOF
   /* The GNU banner must be the first non-error debug message */
-  lt_debugprintf (__FILE__, __LINE__, "libtool wrapper (GNU $PACKAGE$TIMESTAMP) $VERSION\n");
+  lt_debugprintf (__FILE__, __LINE__, "libtool wrapper (GNU $PACKAGE) $VERSION\n");
 EOF
 	    cat <<"EOF"
   lt_debugprintf (__FILE__, __LINE__, "(main) argv[0]: %s\n", argv[0]);
@@ -4524,7 +5902,7 @@ EOF
 		cat <<"EOF"
   /* execv doesn't actually work on mingw as expected on unix */
   newargz = prepare_spawn (newargz);
-  rval = _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);
+  rval = (int) _spawnv (_P_WAIT, lt_argv_zero, (const char * const *) newargz);
   if (rval == -1)
     {
       /* failed to start process */
@@ -4569,7 +5947,7 @@ base_name (const char *name)
 {
   const char *base;
 
-#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+#if defined HAVE_DOS_BASED_FILE_SYSTEM
   /* Skip over the disk name in MSDOS pathnames. */
   if (isalpha ((unsigned char) name[0]) && name[1] == ':')
     name += 2;
@@ -4628,7 +6006,7 @@ find_executable (const char *wrapper)
   const char *p_next;
   /* static buffer for getcwd */
   char tmp[LT_PATHMAX + 1];
-  int tmp_len;
+  size_t tmp_len;
   char *concat_name;
 
   lt_debugprintf (__FILE__, __LINE__, "(find_executable): %s\n",
@@ -4638,7 +6016,7 @@ find_executable (const char *wrapper)
     return NULL;
 
   /* Absolute path? */
-#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+#if defined HAVE_DOS_BASED_FILE_SYSTEM
   if (isalpha ((unsigned char) wrapper[0]) && wrapper[1] == ':')
     {
       concat_name = xstrdup (wrapper);
@@ -4656,7 +6034,7 @@ find_executable (const char *wrapper)
 	    return concat_name;
 	  XFREE (concat_name);
 	}
-#if defined (HAVE_DOS_BASED_FILE_SYSTEM)
+#if defined HAVE_DOS_BASED_FILE_SYSTEM
     }
 #endif
 
@@ -4679,7 +6057,7 @@ find_executable (const char *wrapper)
 	      for (q = p; *q; q++)
 		if (IS_PATH_SEPARATOR (*q))
 		  break;
-	      p_len = q - p;
+	      p_len = (size_t) (q - p);
 	      p_next = (*q == '\0' ? q : q + 1);
 	      if (p_len == 0)
 		{
@@ -4798,7 +6176,7 @@ strendzap (char *str, const char *pat)
   if (patlen <= len)
     {
       str += len - patlen;
-      if (strcmp (str, pat) == 0)
+      if (STREQ (str, pat))
 	*str = '\0';
     }
   return str;
@@ -4863,7 +6241,7 @@ lt_setenv (const char *name, const char *value)
     char *str = xstrdup (value);
     setenv (name, str, 1);
 #else
-    int len = strlen (name) + 1 + strlen (value) + 1;
+    size_t len = strlen (name) + 1 + strlen (value) + 1;
     char *str = XMALLOC (char, len);
     sprintf (str, "%s=%s", name, value);
     if (putenv (str) != EXIT_SUCCESS)
@@ -4880,8 +6258,8 @@ lt_extend_str (const char *orig_value, const char *add, int to_end)
   char *new_value;
   if (orig_value && *orig_value)
     {
-      int orig_value_len = strlen (orig_value);
-      int add_len = strlen (add);
+      size_t orig_value_len = strlen (orig_value);
+      size_t add_len = strlen (add);
       new_value = XMALLOC (char, add_len + orig_value_len + 1);
       if (to_end)
         {
@@ -4912,10 +6290,10 @@ lt_update_exe_path (const char *name, const char *value)
     {
       char *new_value = lt_extend_str (getenv (name), value, 0);
       /* some systems can't cope with a ':'-terminated path #' */
-      int len = strlen (new_value);
-      while (((len = strlen (new_value)) > 0) && IS_PATH_SEPARATOR (new_value[len-1]))
+      size_t len = strlen (new_value);
+      while ((len > 0) && IS_PATH_SEPARATOR (new_value[len-1]))
         {
-          new_value[len-1] = '\0';
+          new_value[--len] = '\0';
         }
       lt_setenv (name, new_value);
       XFREE (new_value);
@@ -5082,27 +6460,47 @@ EOF
 # True if ARG is an import lib, as indicated by $file_magic_cmd
 func_win32_import_lib_p ()
 {
-    $opt_debug
+    $debug_cmd
+
     case `eval $file_magic_cmd \"\$1\" 2>/dev/null | $SED -e 10q` in
     *import*) : ;;
     *) false ;;
     esac
 }
 
+# func_suncc_cstd_abi
+# !!ONLY CALL THIS FOR SUN CC AFTER $compile_command IS FULLY EXPANDED!!
+# Several compiler flags select an ABI that is incompatible with the
+# Cstd library. Avoid specifying it if any are in CXXFLAGS.
+func_suncc_cstd_abi ()
+{
+    $debug_cmd
+
+    case " $compile_command " in
+    *" -compat=g "*|*\ -std=c++[0-9][0-9]\ *|*" -library=stdcxx4 "*|*" -library=stlport4 "*)
+      suncc_use_cstd_abi=no
+      ;;
+    *)
+      suncc_use_cstd_abi=yes
+      ;;
+    esac
+}
+
 # func_mode_link arg...
 func_mode_link ()
 {
-    $opt_debug
+    $debug_cmd
+
     case $host in
     *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)
       # It is impossible to link a dll without this setting, and
       # we shouldn't force the makefile maintainer to figure out
-      # which system we are compiling for in order to pass an extra
+      # what system we are compiling for in order to pass an extra
       # flag for every libtool invocation.
       # allow_undefined=no
 
       # FIXME: Unfortunately, there are problems with the above when trying
-      # to make a dll which has undefined symbols, in which case not
+      # to make a dll that has undefined symbols, in which case not
       # even a static library is built.  For now, we need to specify
       # -no-undefined on the libtool link line when we can be certain
       # that all symbols are satisfied, otherwise we get a static library.
@@ -5146,10 +6544,11 @@ func_mode_link ()
     module=no
     no_install=no
     objs=
+    os2dllname=
     non_pic_objects=
     precious_files_regex=
     prefer_static_libs=no
-    preload=no
+    preload=false
     prev=
     prevarg=
     release=
@@ -5161,7 +6560,7 @@ func_mode_link ()
     vinfo=
     vinfo_number=no
     weak_libs=
-    single_module="${wl}-single_module"
+    single_module=$wl-single_module
     func_infer_tag $base_compile
 
     # We need to know -static, to get the right output filenames.
@@ -5169,15 +6568,15 @@ func_mode_link ()
     do
       case $arg in
       -shared)
-	test "$build_libtool_libs" != yes && \
-	  func_fatal_configuration "can not build a shared library"
+	test yes != "$build_libtool_libs" \
+	  && func_fatal_configuration "cannot build a shared library"
 	build_old_libs=no
 	break
 	;;
       -all-static | -static | -static-libtool-libs)
 	case $arg in
 	-all-static)
-	  if test "$build_libtool_libs" = yes && test -z "$link_static_flag"; then
+	  if test yes = "$build_libtool_libs" && test -z "$link_static_flag"; then
 	    func_warning "complete static linking is impossible in this configuration"
 	  fi
 	  if test -n "$link_static_flag"; then
@@ -5210,7 +6609,7 @@ func_mode_link ()
 
     # Go through the arguments, transforming them on the way.
     while test "$#" -gt 0; do
-      arg="$1"
+      arg=$1
       shift
       func_quote_for_eval "$arg"
       qarg=$func_quote_for_eval_unquoted_result
@@ -5227,21 +6626,21 @@ func_mode_link ()
 
 	case $prev in
 	bindir)
-	  bindir="$arg"
+	  bindir=$arg
 	  prev=
 	  continue
 	  ;;
 	dlfiles|dlprefiles)
-	  if test "$preload" = no; then
+	  $preload || {
 	    # Add the symbol object into the linking commands.
 	    func_append compile_command " @SYMFILE@"
 	    func_append finalize_command " @SYMFILE@"
-	    preload=yes
-	  fi
+	    preload=:
+	  }
 	  case $arg in
 	  *.la | *.lo) ;;  # We handle these cases below.
 	  force)
-	    if test "$dlself" = no; then
+	    if test no = "$dlself"; then
 	      dlself=needless
 	      export_dynamic=yes
 	    fi
@@ -5249,9 +6648,9 @@ func_mode_link ()
 	    continue
 	    ;;
 	  self)
-	    if test "$prev" = dlprefiles; then
+	    if test dlprefiles = "$prev"; then
 	      dlself=yes
-	    elif test "$prev" = dlfiles && test "$dlopen_self" != yes; then
+	    elif test dlfiles = "$prev" && test yes != "$dlopen_self"; then
 	      dlself=yes
 	    else
 	      dlself=needless
@@ -5261,7 +6660,7 @@ func_mode_link ()
 	    continue
 	    ;;
 	  *)
-	    if test "$prev" = dlfiles; then
+	    if test dlfiles = "$prev"; then
 	      func_append dlfiles " $arg"
 	    else
 	      func_append dlprefiles " $arg"
@@ -5272,14 +6671,14 @@ func_mode_link ()
 	  esac
 	  ;;
 	expsyms)
-	  export_symbols="$arg"
+	  export_symbols=$arg
 	  test -f "$arg" \
-	    || func_fatal_error "symbol file \`$arg' does not exist"
+	    || func_fatal_error "symbol file '$arg' does not exist"
 	  prev=
 	  continue
 	  ;;
 	expsyms_regex)
-	  export_symbols_regex="$arg"
+	  export_symbols_regex=$arg
 	  prev=
 	  continue
 	  ;;
@@ -5297,7 +6696,13 @@ func_mode_link ()
 	  continue
 	  ;;
 	inst_prefix)
-	  inst_prefix_dir="$arg"
+	  inst_prefix_dir=$arg
+	  prev=
+	  continue
+	  ;;
+	mllvm)
+	  # Clang does not use LLVM to link, so we can simply discard any
+	  # '-mllvm $arg' options when doing the link step.
 	  prev=
 	  continue
 	  ;;
@@ -5321,21 +6726,21 @@ func_mode_link ()
 
 		if test -z "$pic_object" ||
 		   test -z "$non_pic_object" ||
-		   test "$pic_object" = none &&
-		   test "$non_pic_object" = none; then
-		  func_fatal_error "cannot find name of object for \`$arg'"
+		   test none = "$pic_object" &&
+		   test none = "$non_pic_object"; then
+		  func_fatal_error "cannot find name of object for '$arg'"
 		fi
 
 		# Extract subdirectory from the argument.
 		func_dirname "$arg" "/" ""
-		xdir="$func_dirname_result"
+		xdir=$func_dirname_result
 
-		if test "$pic_object" != none; then
+		if test none != "$pic_object"; then
 		  # Prepend the subdirectory the object is found in.
-		  pic_object="$xdir$pic_object"
+		  pic_object=$xdir$pic_object
 
-		  if test "$prev" = dlfiles; then
-		    if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+		  if test dlfiles = "$prev"; then
+		    if test yes = "$build_libtool_libs" && test yes = "$dlopen_support"; then
 		      func_append dlfiles " $pic_object"
 		      prev=
 		      continue
@@ -5346,7 +6751,7 @@ func_mode_link ()
 		  fi
 
 		  # CHECK ME:  I think I busted this.  -Ossama
-		  if test "$prev" = dlprefiles; then
+		  if test dlprefiles = "$prev"; then
 		    # Preload the old-style object.
 		    func_append dlprefiles " $pic_object"
 		    prev=
@@ -5354,23 +6759,23 @@ func_mode_link ()
 
 		  # A PIC object.
 		  func_append libobjs " $pic_object"
-		  arg="$pic_object"
+		  arg=$pic_object
 		fi
 
 		# Non-PIC object.
-		if test "$non_pic_object" != none; then
+		if test none != "$non_pic_object"; then
 		  # Prepend the subdirectory the object is found in.
-		  non_pic_object="$xdir$non_pic_object"
+		  non_pic_object=$xdir$non_pic_object
 
 		  # A standard non-PIC object
 		  func_append non_pic_objects " $non_pic_object"
-		  if test -z "$pic_object" || test "$pic_object" = none ; then
-		    arg="$non_pic_object"
+		  if test -z "$pic_object" || test none = "$pic_object"; then
+		    arg=$non_pic_object
 		  fi
 		else
 		  # If the PIC object exists, use it instead.
 		  # $xdir was prepended to $pic_object above.
-		  non_pic_object="$pic_object"
+		  non_pic_object=$pic_object
 		  func_append non_pic_objects " $non_pic_object"
 		fi
 	      else
@@ -5378,7 +6783,7 @@ func_mode_link ()
 		if $opt_dry_run; then
 		  # Extract subdirectory from the argument.
 		  func_dirname "$arg" "/" ""
-		  xdir="$func_dirname_result"
+		  xdir=$func_dirname_result
 
 		  func_lo2o "$arg"
 		  pic_object=$xdir$objdir/$func_lo2o_result
@@ -5386,24 +6791,29 @@ func_mode_link ()
 		  func_append libobjs " $pic_object"
 		  func_append non_pic_objects " $non_pic_object"
 	        else
-		  func_fatal_error "\`$arg' is not a valid libtool object"
+		  func_fatal_error "'$arg' is not a valid libtool object"
 		fi
 	      fi
 	    done
 	  else
-	    func_fatal_error "link input file \`$arg' does not exist"
+	    func_fatal_error "link input file '$arg' does not exist"
 	  fi
 	  arg=$save_arg
 	  prev=
 	  continue
 	  ;;
+	os2dllname)
+	  os2dllname=$arg
+	  prev=
+	  continue
+	  ;;
 	precious_regex)
-	  precious_files_regex="$arg"
+	  precious_files_regex=$arg
 	  prev=
 	  continue
 	  ;;
 	release)
-	  release="-$arg"
+	  release=-$arg
 	  prev=
 	  continue
 	  ;;
@@ -5415,7 +6825,7 @@ func_mode_link ()
 	    func_fatal_error "only absolute run-paths are allowed"
 	    ;;
 	  esac
-	  if test "$prev" = rpath; then
+	  if test rpath = "$prev"; then
 	    case "$rpath " in
 	    *" $arg "*) ;;
 	    *) func_append rpath " $arg" ;;
@@ -5430,7 +6840,7 @@ func_mode_link ()
 	  continue
 	  ;;
 	shrext)
-	  shrext_cmds="$arg"
+	  shrext_cmds=$arg
 	  prev=
 	  continue
 	  ;;
@@ -5470,7 +6880,7 @@ func_mode_link ()
 	esac
       fi # test -n "$prev"
 
-      prevarg="$arg"
+      prevarg=$arg
 
       case $arg in
       -all-static)
@@ -5484,7 +6894,7 @@ func_mode_link ()
 
       -allow-undefined)
 	# FIXME: remove this flag sometime in the future.
-	func_fatal_error "\`-allow-undefined' must not be used because it is the default"
+	func_fatal_error "'-allow-undefined' must not be used because it is the default"
 	;;
 
       -avoid-version)
@@ -5516,7 +6926,7 @@ func_mode_link ()
 	if test -n "$export_symbols" || test -n "$export_symbols_regex"; then
 	  func_fatal_error "more than one -exported-symbols argument is not allowed"
 	fi
-	if test "X$arg" = "X-export-symbols"; then
+	if test X-export-symbols = "X$arg"; then
 	  prev=expsyms
 	else
 	  prev=expsyms_regex
@@ -5550,9 +6960,9 @@ func_mode_link ()
 	func_stripname "-L" '' "$arg"
 	if test -z "$func_stripname_result"; then
 	  if test "$#" -gt 0; then
-	    func_fatal_error "require no space between \`-L' and \`$1'"
+	    func_fatal_error "require no space between '-L' and '$1'"
 	  else
-	    func_fatal_error "need path for \`-L' option"
+	    func_fatal_error "need path for '-L' option"
 	  fi
 	fi
 	func_resolve_sysroot "$func_stripname_result"
@@ -5563,8 +6973,8 @@ func_mode_link ()
 	*)
 	  absdir=`cd "$dir" && pwd`
 	  test -z "$absdir" && \
-	    func_fatal_error "cannot determine absolute directory name of \`$dir'"
-	  dir="$absdir"
+	    func_fatal_error "cannot determine absolute directory name of '$dir'"
+	  dir=$absdir
 	  ;;
 	esac
 	case "$deplibs " in
@@ -5599,7 +7009,7 @@ func_mode_link ()
 	;;
 
       -l*)
-	if test "X$arg" = "X-lc" || test "X$arg" = "X-lm"; then
+	if test X-lc = "X$arg" || test X-lm = "X$arg"; then
 	  case $host in
 	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-beos* | *-cegcc* | *-*-haiku*)
 	    # These systems don't actually have a C or math library (as such)
@@ -5607,11 +7017,11 @@ func_mode_link ()
 	    ;;
 	  *-*-os2*)
 	    # These systems don't actually have a C library (as such)
-	    test "X$arg" = "X-lc" && continue
+	    test X-lc = "X$arg" && continue
 	    ;;
-	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	  *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)
 	    # Do not include libc due to us having libc/libc_r.
-	    test "X$arg" = "X-lc" && continue
+	    test X-lc = "X$arg" && continue
 	    ;;
 	  *-*-rhapsody* | *-*-darwin1.[012])
 	    # Rhapsody C and math libraries are in the System framework
@@ -5620,16 +7030,16 @@ func_mode_link ()
 	    ;;
 	  *-*-sco3.2v5* | *-*-sco5v6*)
 	    # Causes problems with __ctype
-	    test "X$arg" = "X-lc" && continue
+	    test X-lc = "X$arg" && continue
 	    ;;
 	  *-*-sysv4.2uw2* | *-*-sysv5* | *-*-unixware* | *-*-OpenUNIX*)
 	    # Compiler inserts libc in the correct place for threads to work
-	    test "X$arg" = "X-lc" && continue
+	    test X-lc = "X$arg" && continue
 	    ;;
 	  esac
-	elif test "X$arg" = "X-lc_r"; then
+	elif test X-lc_r = "X$arg"; then
 	 case $host in
-	 *-*-openbsd* | *-*-freebsd* | *-*-dragonfly*)
+	 *-*-openbsd* | *-*-freebsd* | *-*-dragonfly* | *-*-bitrig*)
 	   # Do not include libc_r directly, use -pthread flag.
 	   continue
 	   ;;
@@ -5639,6 +7049,11 @@ func_mode_link ()
 	continue
 	;;
 
+      -mllvm)
+	prev=mllvm
+	continue
+	;;
+
       -module)
 	module=yes
 	continue
@@ -5668,7 +7083,7 @@ func_mode_link ()
 	;;
 
       -multi_module)
-	single_module="${wl}-multi_module"
+	single_module=$wl-multi_module
 	continue
 	;;
 
@@ -5682,8 +7097,8 @@ func_mode_link ()
 	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-darwin* | *-cegcc*)
 	  # The PATH hackery in wrapper scripts is required on Windows
 	  # and Darwin in order for the loader to find any dlls it needs.
-	  func_warning "\`-no-install' is ignored for $host"
-	  func_warning "assuming \`-no-fast-install' instead"
+	  func_warning "'-no-install' is ignored for $host"
+	  func_warning "assuming '-no-fast-install' instead"
 	  fast_install=no
 	  ;;
 	*) no_install=yes ;;
@@ -5701,6 +7116,11 @@ func_mode_link ()
 	continue
 	;;
 
+      -os2dllname)
+	prev=os2dllname
+	continue
+	;;
+
       -o) prev=output ;;
 
       -precious-files-regex)
@@ -5788,14 +7208,14 @@ func_mode_link ()
 	func_stripname '-Wc,' '' "$arg"
 	args=$func_stripname_result
 	arg=
-	save_ifs="$IFS"; IFS=','
+	save_ifs=$IFS; IFS=,
 	for flag in $args; do
-	  IFS="$save_ifs"
+	  IFS=$save_ifs
           func_quote_for_eval "$flag"
 	  func_append arg " $func_quote_for_eval_result"
 	  func_append compiler_flags " $func_quote_for_eval_result"
 	done
-	IFS="$save_ifs"
+	IFS=$save_ifs
 	func_stripname ' ' '' "$arg"
 	arg=$func_stripname_result
 	;;
@@ -5804,15 +7224,15 @@ func_mode_link ()
 	func_stripname '-Wl,' '' "$arg"
 	args=$func_stripname_result
 	arg=
-	save_ifs="$IFS"; IFS=','
+	save_ifs=$IFS; IFS=,
 	for flag in $args; do
-	  IFS="$save_ifs"
+	  IFS=$save_ifs
           func_quote_for_eval "$flag"
 	  func_append arg " $wl$func_quote_for_eval_result"
 	  func_append compiler_flags " $wl$func_quote_for_eval_result"
 	  func_append linker_flags " $func_quote_for_eval_result"
 	done
-	IFS="$save_ifs"
+	IFS=$save_ifs
 	func_stripname ' ' '' "$arg"
 	arg=$func_stripname_result
 	;;
@@ -5835,7 +7255,7 @@ func_mode_link ()
       # -msg_* for osf cc
       -msg_*)
 	func_quote_for_eval "$arg"
-	arg="$func_quote_for_eval_result"
+	arg=$func_quote_for_eval_result
 	;;
 
       # Flags to be passed through unchanged, with rationale:
@@ -5847,25 +7267,46 @@ func_mode_link ()
       # -m*, -t[45]*, -txscale* architecture-specific flags for GCC
       # -F/path              path to uninstalled frameworks, gcc on darwin
       # -p, -pg, --coverage, -fprofile-*  profiling flags for GCC
+      # -fstack-protector*   stack protector flags for GCC
       # @file                GCC response files
       # -tp=*                Portland pgcc target processor selection
       # --sysroot=*          for sysroot support
-      # -O*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization
+      # -O*, -g*, -flto*, -fwhopr*, -fuse-linker-plugin GCC link-time optimization
+      # -stdlib=*            select c++ std lib with clang
       -64|-mips[0-9]|-r[0-9][0-9]*|-xarch=*|-xtarget=*|+DA*|+DD*|-q*|-m*| \
       -t[45]*|-txscale*|-p|-pg|--coverage|-fprofile-*|-F*|@*|-tp=*|--sysroot=*| \
-      -O*|-flto*|-fwhopr*|-fuse-linker-plugin)
+      -O*|-g*|-flto*|-fwhopr*|-fuse-linker-plugin|-fstack-protector*|-stdlib=*)
         func_quote_for_eval "$arg"
-	arg="$func_quote_for_eval_result"
+	arg=$func_quote_for_eval_result
         func_append compile_command " $arg"
         func_append finalize_command " $arg"
         func_append compiler_flags " $arg"
         continue
         ;;
 
+      -Z*)
+        if test os2 = "`expr $host : '.*\(os2\)'`"; then
+          # OS/2 uses -Zxxx to specify OS/2-specific options
+	  compiler_flags="$compiler_flags $arg"
+	  func_append compile_command " $arg"
+	  func_append finalize_command " $arg"
+	  case $arg in
+	  -Zlinker | -Zstack)
+	    prev=xcompiler
+	    ;;
+	  esac
+	  continue
+        else
+	  # Otherwise treat like 'Some other compiler flag' below
+	  func_quote_for_eval "$arg"
+	  arg=$func_quote_for_eval_result
+        fi
+	;;
+
       # Some other compiler flag.
       -* | +*)
         func_quote_for_eval "$arg"
-	arg="$func_quote_for_eval_result"
+	arg=$func_quote_for_eval_result
 	;;
 
       *.$objext)
@@ -5886,21 +7327,21 @@ func_mode_link ()
 
 	  if test -z "$pic_object" ||
 	     test -z "$non_pic_object" ||
-	     test "$pic_object" = none &&
-	     test "$non_pic_object" = none; then
-	    func_fatal_error "cannot find name of object for \`$arg'"
+	     test none = "$pic_object" &&
+	     test none = "$non_pic_object"; then
+	    func_fatal_error "cannot find name of object for '$arg'"
 	  fi
 
 	  # Extract subdirectory from the argument.
 	  func_dirname "$arg" "/" ""
-	  xdir="$func_dirname_result"
+	  xdir=$func_dirname_result
 
-	  if test "$pic_object" != none; then
+	  test none = "$pic_object" || {
 	    # Prepend the subdirectory the object is found in.
-	    pic_object="$xdir$pic_object"
+	    pic_object=$xdir$pic_object
 
-	    if test "$prev" = dlfiles; then
-	      if test "$build_libtool_libs" = yes && test "$dlopen_support" = yes; then
+	    if test dlfiles = "$prev"; then
+	      if test yes = "$build_libtool_libs" && test yes = "$dlopen_support"; then
 		func_append dlfiles " $pic_object"
 		prev=
 		continue
@@ -5911,7 +7352,7 @@ func_mode_link ()
 	    fi
 
 	    # CHECK ME:  I think I busted this.  -Ossama
-	    if test "$prev" = dlprefiles; then
+	    if test dlprefiles = "$prev"; then
 	      # Preload the old-style object.
 	      func_append dlprefiles " $pic_object"
 	      prev=
@@ -5919,23 +7360,23 @@ func_mode_link ()
 
 	    # A PIC object.
 	    func_append libobjs " $pic_object"
-	    arg="$pic_object"
-	  fi
+	    arg=$pic_object
+	  }
 
 	  # Non-PIC object.
-	  if test "$non_pic_object" != none; then
+	  if test none != "$non_pic_object"; then
 	    # Prepend the subdirectory the object is found in.
-	    non_pic_object="$xdir$non_pic_object"
+	    non_pic_object=$xdir$non_pic_object
 
 	    # A standard non-PIC object
 	    func_append non_pic_objects " $non_pic_object"
-	    if test -z "$pic_object" || test "$pic_object" = none ; then
-	      arg="$non_pic_object"
+	    if test -z "$pic_object" || test none = "$pic_object"; then
+	      arg=$non_pic_object
 	    fi
 	  else
 	    # If the PIC object exists, use it instead.
 	    # $xdir was prepended to $pic_object above.
-	    non_pic_object="$pic_object"
+	    non_pic_object=$pic_object
 	    func_append non_pic_objects " $non_pic_object"
 	  fi
 	else
@@ -5943,7 +7384,7 @@ func_mode_link ()
 	  if $opt_dry_run; then
 	    # Extract subdirectory from the argument.
 	    func_dirname "$arg" "/" ""
-	    xdir="$func_dirname_result"
+	    xdir=$func_dirname_result
 
 	    func_lo2o "$arg"
 	    pic_object=$xdir$objdir/$func_lo2o_result
@@ -5951,7 +7392,7 @@ func_mode_link ()
 	    func_append libobjs " $pic_object"
 	    func_append non_pic_objects " $non_pic_object"
 	  else
-	    func_fatal_error "\`$arg' is not a valid libtool object"
+	    func_fatal_error "'$arg' is not a valid libtool object"
 	  fi
 	fi
 	;;
@@ -5967,11 +7408,11 @@ func_mode_link ()
 	# A libtool-controlled library.
 
 	func_resolve_sysroot "$arg"
-	if test "$prev" = dlfiles; then
+	if test dlfiles = "$prev"; then
 	  # This library was specified with -dlopen.
 	  func_append dlfiles " $func_resolve_sysroot_result"
 	  prev=
-	elif test "$prev" = dlprefiles; then
+	elif test dlprefiles = "$prev"; then
 	  # The library was specified with -dlpreopen.
 	  func_append dlprefiles " $func_resolve_sysroot_result"
 	  prev=
@@ -5986,7 +7427,7 @@ func_mode_link ()
 	# Unknown arguments in both finalize_command and compile_command need
 	# to be aesthetically quoted because they are evaled later.
 	func_quote_for_eval "$arg"
-	arg="$func_quote_for_eval_result"
+	arg=$func_quote_for_eval_result
 	;;
       esac # arg
 
@@ -5998,9 +7439,9 @@ func_mode_link ()
     done # argument parsing loop
 
     test -n "$prev" && \
-      func_fatal_help "the \`$prevarg' option requires an argument"
+      func_fatal_help "the '$prevarg' option requires an argument"
 
-    if test "$export_dynamic" = yes && test -n "$export_dynamic_flag_spec"; then
+    if test yes = "$export_dynamic" && test -n "$export_dynamic_flag_spec"; then
       eval arg=\"$export_dynamic_flag_spec\"
       func_append compile_command " $arg"
       func_append finalize_command " $arg"
@@ -6009,20 +7450,23 @@ func_mode_link ()
     oldlibs=
     # calculate the name of the file, without its directory
     func_basename "$output"
-    outputname="$func_basename_result"
-    libobjs_save="$libobjs"
+    outputname=$func_basename_result
+    libobjs_save=$libobjs
 
     if test -n "$shlibpath_var"; then
       # get the directories listed in $shlibpath_var
-      eval shlib_search_path=\`\$ECHO \"\${$shlibpath_var}\" \| \$SED \'s/:/ /g\'\`
+      eval shlib_search_path=\`\$ECHO \"\$$shlibpath_var\" \| \$SED \'s/:/ /g\'\`
     else
       shlib_search_path=
     fi
     eval sys_lib_search_path=\"$sys_lib_search_path_spec\"
     eval sys_lib_dlsearch_path=\"$sys_lib_dlsearch_path_spec\"
 
+    # Definition is injected by LT_CONFIG during libtool generation.
+    func_munge_path_list sys_lib_dlsearch_path "$LT_SYS_LIBRARY_PATH"
+
     func_dirname "$output" "/" ""
-    output_objdir="$func_dirname_result$objdir"
+    output_objdir=$func_dirname_result$objdir
     func_to_tool_file "$output_objdir/"
     tool_output_objdir=$func_to_tool_file_result
     # Create the object directory.
@@ -6045,7 +7489,7 @@ func_mode_link ()
     # Find all interdependent deplibs by searching for libraries
     # that are linked more than once (e.g. -la -lb -la)
     for deplib in $deplibs; do
-      if $opt_preserve_dup_deps ; then
+      if $opt_preserve_dup_deps; then
 	case "$libs " in
 	*" $deplib "*) func_append specialdeplibs " $deplib" ;;
 	esac
@@ -6053,7 +7497,7 @@ func_mode_link ()
       func_append libs " $deplib"
     done
 
-    if test "$linkmode" = lib; then
+    if test lib = "$linkmode"; then
       libs="$predeps $libs $compiler_lib_search_path $postdeps"
 
       # Compute libraries that are listed more than once in $predeps
@@ -6085,7 +7529,7 @@ func_mode_link ()
 	  case $file in
 	  *.la) ;;
 	  *)
-	    func_fatal_help "libraries can \`-dlopen' only libtool libraries: $file"
+	    func_fatal_help "libraries can '-dlopen' only libtool libraries: $file"
 	    ;;
 	  esac
 	done
@@ -6093,7 +7537,7 @@ func_mode_link ()
     prog)
 	compile_deplibs=
 	finalize_deplibs=
-	alldeplibs=no
+	alldeplibs=false
 	newdlfiles=
 	newdlprefiles=
 	passes="conv scan dlopen dlpreopen link"
@@ -6105,32 +7549,29 @@ func_mode_link ()
     for pass in $passes; do
       # The preopen pass in lib mode reverses $deplibs; put it back here
       # so that -L comes before libs that need it for instance...
-      if test "$linkmode,$pass" = "lib,link"; then
+      if test lib,link = "$linkmode,$pass"; then
 	## FIXME: Find the place where the list is rebuilt in the wrong
 	##        order, and fix it there properly
         tmp_deplibs=
 	for deplib in $deplibs; do
 	  tmp_deplibs="$deplib $tmp_deplibs"
 	done
-	deplibs="$tmp_deplibs"
+	deplibs=$tmp_deplibs
       fi
 
-      if test "$linkmode,$pass" = "lib,link" ||
-	 test "$linkmode,$pass" = "prog,scan"; then
-	libs="$deplibs"
+      if test lib,link = "$linkmode,$pass" ||
+	 test prog,scan = "$linkmode,$pass"; then
+	libs=$deplibs
 	deplibs=
       fi
-      if test "$linkmode" = prog; then
+      if test prog = "$linkmode"; then
 	case $pass in
-	dlopen) libs="$dlfiles" ;;
-	dlpreopen) libs="$dlprefiles" ;;
-	link)
-	  libs="$deplibs %DEPLIBS%"
-	  test "X$link_all_deplibs" != Xno && libs="$libs $dependency_libs"
-	  ;;
+	dlopen) libs=$dlfiles ;;
+	dlpreopen) libs=$dlprefiles ;;
+	link) libs="$deplibs %DEPLIBS% $dependency_libs" ;;
 	esac
       fi
-      if test "$linkmode,$pass" = "lib,dlpreopen"; then
+      if test lib,dlpreopen = "$linkmode,$pass"; then
 	# Collect and forward deplibs of preopened libtool libs
 	for lib in $dlprefiles; do
 	  # Ignore non-libtool-libs
@@ -6151,26 +7592,26 @@ func_mode_link ()
 	    esac
 	  done
 	done
-	libs="$dlprefiles"
+	libs=$dlprefiles
       fi
-      if test "$pass" = dlopen; then
+      if test dlopen = "$pass"; then
 	# Collect dlpreopened libraries
-	save_deplibs="$deplibs"
+	save_deplibs=$deplibs
 	deplibs=
       fi
 
       for deplib in $libs; do
 	lib=
-	found=no
+	found=false
 	case $deplib in
 	-mt|-mthreads|-kthread|-Kthread|-pthread|-pthreads|--thread-safe \
         |-threads|-fopenmp|-openmp|-mp|-xopenmp|-omp|-qsmp=*)
-	  if test "$linkmode,$pass" = "prog,link"; then
+	  if test prog,link = "$linkmode,$pass"; then
 	    compile_deplibs="$deplib $compile_deplibs"
 	    finalize_deplibs="$deplib $finalize_deplibs"
 	  else
 	    func_append compiler_flags " $deplib"
-	    if test "$linkmode" = lib ; then
+	    if test lib = "$linkmode"; then
 		case "$new_inherited_linker_flags " in
 		    *" $deplib "*) ;;
 		    * ) func_append new_inherited_linker_flags " $deplib" ;;
@@ -6180,13 +7621,13 @@ func_mode_link ()
 	  continue
 	  ;;
 	-l*)
-	  if test "$linkmode" != lib && test "$linkmode" != prog; then
-	    func_warning "\`-l' is ignored for archives/objects"
+	  if test lib != "$linkmode" && test prog != "$linkmode"; then
+	    func_warning "'-l' is ignored for archives/objects"
 	    continue
 	  fi
 	  func_stripname '-l' '' "$deplib"
 	  name=$func_stripname_result
-	  if test "$linkmode" = lib; then
+	  if test lib = "$linkmode"; then
 	    searchdirs="$newlib_search_path $lib_search_path $compiler_lib_search_dirs $sys_lib_search_path $shlib_search_path"
 	  else
 	    searchdirs="$newlib_search_path $lib_search_path $sys_lib_search_path $shlib_search_path"
@@ -6194,31 +7635,22 @@ func_mode_link ()
 	  for searchdir in $searchdirs; do
 	    for search_ext in .la $std_shrext .so .a; do
 	      # Search the libtool library
-	      lib="$searchdir/lib${name}${search_ext}"
+	      lib=$searchdir/lib$name$search_ext
 	      if test -f "$lib"; then
-		if test "$search_ext" = ".la"; then
-		  found=yes
+		if test .la = "$search_ext"; then
+		  found=:
 		else
-		  found=no
+		  found=false
 		fi
 		break 2
 	      fi
 	    done
 	  done
-	  if test "$found" != yes; then
-	    # deplib doesn't seem to be a libtool library
-	    if test "$linkmode,$pass" = "prog,link"; then
-	      compile_deplibs="$deplib $compile_deplibs"
-	      finalize_deplibs="$deplib $finalize_deplibs"
-	    else
-	      deplibs="$deplib $deplibs"
-	      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
-	    fi
-	    continue
-	  else # deplib is a libtool library
+	  if $found; then
+	    # deplib is a libtool library
 	    # If $allow_libtool_libs_with_static_runtimes && $deplib is a stdlib,
 	    # We need to do some special things here, and not later.
-	    if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	    if test yes = "$allow_libtool_libs_with_static_runtimes"; then
 	      case " $predeps $postdeps " in
 	      *" $deplib "*)
 		if func_lalib_p "$lib"; then
@@ -6226,19 +7658,19 @@ func_mode_link ()
 		  old_library=
 		  func_source "$lib"
 		  for l in $old_library $library_names; do
-		    ll="$l"
+		    ll=$l
 		  done
-		  if test "X$ll" = "X$old_library" ; then # only static version available
-		    found=no
+		  if test "X$ll" = "X$old_library"; then # only static version available
+		    found=false
 		    func_dirname "$lib" "" "."
-		    ladir="$func_dirname_result"
+		    ladir=$func_dirname_result
 		    lib=$ladir/$old_library
-		    if test "$linkmode,$pass" = "prog,link"; then
+		    if test prog,link = "$linkmode,$pass"; then
 		      compile_deplibs="$deplib $compile_deplibs"
 		      finalize_deplibs="$deplib $finalize_deplibs"
 		    else
 		      deplibs="$deplib $deplibs"
-		      test "$linkmode" = lib && newdependency_libs="$deplib $newdependency_libs"
+		      test lib = "$linkmode" && newdependency_libs="$deplib $newdependency_libs"
 		    fi
 		    continue
 		  fi
@@ -6247,15 +7679,25 @@ func_mode_link ()
 	      *) ;;
 	      esac
 	    fi
+	  else
+	    # deplib doesn't seem to be a libtool library
+	    if test prog,link = "$linkmode,$pass"; then
+	      compile_deplibs="$deplib $compile_deplibs"
+	      finalize_deplibs="$deplib $finalize_deplibs"
+	    else
+	      deplibs="$deplib $deplibs"
+	      test lib = "$linkmode" && newdependency_libs="$deplib $newdependency_libs"
+	    fi
+	    continue
 	  fi
 	  ;; # -l
 	*.ltframework)
-	  if test "$linkmode,$pass" = "prog,link"; then
+	  if test prog,link = "$linkmode,$pass"; then
 	    compile_deplibs="$deplib $compile_deplibs"
 	    finalize_deplibs="$deplib $finalize_deplibs"
 	  else
 	    deplibs="$deplib $deplibs"
-	    if test "$linkmode" = lib ; then
+	    if test lib = "$linkmode"; then
 		case "$new_inherited_linker_flags " in
 		    *" $deplib "*) ;;
 		    * ) func_append new_inherited_linker_flags " $deplib" ;;
@@ -6268,18 +7710,18 @@ func_mode_link ()
 	  case $linkmode in
 	  lib)
 	    deplibs="$deplib $deplibs"
-	    test "$pass" = conv && continue
+	    test conv = "$pass" && continue
 	    newdependency_libs="$deplib $newdependency_libs"
 	    func_stripname '-L' '' "$deplib"
 	    func_resolve_sysroot "$func_stripname_result"
 	    func_append newlib_search_path " $func_resolve_sysroot_result"
 	    ;;
 	  prog)
-	    if test "$pass" = conv; then
+	    if test conv = "$pass"; then
 	      deplibs="$deplib $deplibs"
 	      continue
 	    fi
-	    if test "$pass" = scan; then
+	    if test scan = "$pass"; then
 	      deplibs="$deplib $deplibs"
 	    else
 	      compile_deplibs="$deplib $compile_deplibs"
@@ -6290,13 +7732,13 @@ func_mode_link ()
 	    func_append newlib_search_path " $func_resolve_sysroot_result"
 	    ;;
 	  *)
-	    func_warning "\`-L' is ignored for archives/objects"
+	    func_warning "'-L' is ignored for archives/objects"
 	    ;;
 	  esac # linkmode
 	  continue
 	  ;; # -L
 	-R*)
-	  if test "$pass" = link; then
+	  if test link = "$pass"; then
 	    func_stripname '-R' '' "$deplib"
 	    func_resolve_sysroot "$func_stripname_result"
 	    dir=$func_resolve_sysroot_result
@@ -6314,7 +7756,7 @@ func_mode_link ()
 	  lib=$func_resolve_sysroot_result
 	  ;;
 	*.$libext)
-	  if test "$pass" = conv; then
+	  if test conv = "$pass"; then
 	    deplibs="$deplib $deplibs"
 	    continue
 	  fi
@@ -6325,21 +7767,26 @@ func_mode_link ()
 	    case " $dlpreconveniencelibs " in
 	    *" $deplib "*) ;;
 	    *)
-	      valid_a_lib=no
+	      valid_a_lib=false
 	      case $deplibs_check_method in
 		match_pattern*)
 		  set dummy $deplibs_check_method; shift
 		  match_pattern_regex=`expr "$deplibs_check_method" : "$1 \(.*\)"`
 		  if eval "\$ECHO \"$deplib\"" 2>/dev/null | $SED 10q \
 		    | $EGREP "$match_pattern_regex" > /dev/null; then
-		    valid_a_lib=yes
+		    valid_a_lib=:
 		  fi
 		;;
 		pass_all)
-		  valid_a_lib=yes
+		  valid_a_lib=:
 		;;
 	      esac
-	      if test "$valid_a_lib" != yes; then
+	      if $valid_a_lib; then
+		echo
+		$ECHO "*** Warning: Linking the shared library $output against the"
+		$ECHO "*** static library $deplib is not portable!"
+		deplibs="$deplib $deplibs"
+	      else
 		echo
 		$ECHO "*** Warning: Trying to link with static lib archive $deplib."
 		echo "*** I have the capability to make that library automatically link in when"
@@ -6347,18 +7794,13 @@ func_mode_link ()
 		echo "*** shared version of the library, which you do not appear to have"
 		echo "*** because the file extensions .$libext of this argument makes me believe"
 		echo "*** that it is just a static archive that I should not use here."
-	      else
-		echo
-		$ECHO "*** Warning: Linking the shared library $output against the"
-		$ECHO "*** static library $deplib is not portable!"
-		deplibs="$deplib $deplibs"
 	      fi
 	      ;;
 	    esac
 	    continue
 	    ;;
 	  prog)
-	    if test "$pass" != link; then
+	    if test link != "$pass"; then
 	      deplibs="$deplib $deplibs"
 	    else
 	      compile_deplibs="$deplib $compile_deplibs"
@@ -6369,10 +7811,10 @@ func_mode_link ()
 	  esac # linkmode
 	  ;; # *.$libext
 	*.lo | *.$objext)
-	  if test "$pass" = conv; then
+	  if test conv = "$pass"; then
 	    deplibs="$deplib $deplibs"
-	  elif test "$linkmode" = prog; then
-	    if test "$pass" = dlpreopen || test "$dlopen_support" != yes || test "$build_libtool_libs" = no; then
+	  elif test prog = "$linkmode"; then
+	    if test dlpreopen = "$pass" || test yes != "$dlopen_support" || test no = "$build_libtool_libs"; then
 	      # If there is no dlopen support or we're linking statically,
 	      # we need to preload.
 	      func_append newdlprefiles " $deplib"
@@ -6385,22 +7827,20 @@ func_mode_link ()
 	  continue
 	  ;;
 	%DEPLIBS%)
-	  alldeplibs=yes
+	  alldeplibs=:
 	  continue
 	  ;;
 	esac # case $deplib
 
-	if test "$found" = yes || test -f "$lib"; then :
-	else
-	  func_fatal_error "cannot find the library \`$lib' or unhandled argument \`$deplib'"
-	fi
+	$found || test -f "$lib" \
+	  || func_fatal_error "cannot find the library '$lib' or unhandled argument '$deplib'"
 
 	# Check to see that this really is a libtool archive.
 	func_lalib_unsafe_p "$lib" \
-	  || func_fatal_error "\`$lib' is not a valid libtool archive"
+	  || func_fatal_error "'$lib' is not a valid libtool archive"
 
 	func_dirname "$lib" "" "."
-	ladir="$func_dirname_result"
+	ladir=$func_dirname_result
 
 	dlname=
 	dlopen=
@@ -6430,36 +7870,36 @@ func_mode_link ()
 	  done
 	fi
 	dependency_libs=`$ECHO " $dependency_libs" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
-	if test "$linkmode,$pass" = "lib,link" ||
-	   test "$linkmode,$pass" = "prog,scan" ||
-	   { test "$linkmode" != prog && test "$linkmode" != lib; }; then
+	if test lib,link = "$linkmode,$pass" ||
+	   test prog,scan = "$linkmode,$pass" ||
+	   { test prog != "$linkmode" && test lib != "$linkmode"; }; then
 	  test -n "$dlopen" && func_append dlfiles " $dlopen"
 	  test -n "$dlpreopen" && func_append dlprefiles " $dlpreopen"
 	fi
 
-	if test "$pass" = conv; then
+	if test conv = "$pass"; then
 	  # Only check for convenience libraries
 	  deplibs="$lib $deplibs"
 	  if test -z "$libdir"; then
 	    if test -z "$old_library"; then
-	      func_fatal_error "cannot find name of link library for \`$lib'"
+	      func_fatal_error "cannot find name of link library for '$lib'"
 	    fi
 	    # It is a libtool convenience library, so add in its objects.
 	    func_append convenience " $ladir/$objdir/$old_library"
 	    func_append old_convenience " $ladir/$objdir/$old_library"
-	    tmp_libs=
-	    for deplib in $dependency_libs; do
-	      deplibs="$deplib $deplibs"
-	      if $opt_preserve_dup_deps ; then
-		case "$tmp_libs " in
-		*" $deplib "*) func_append specialdeplibs " $deplib" ;;
-		esac
-	      fi
-	      func_append tmp_libs " $deplib"
-	    done
-	  elif test "$linkmode" != prog && test "$linkmode" != lib; then
-	    func_fatal_error "\`$lib' is not a convenience library"
+	  elif test prog != "$linkmode" && test lib != "$linkmode"; then
+	    func_fatal_error "'$lib' is not a convenience library"
 	  fi
+	  tmp_libs=
+	  for deplib in $dependency_libs; do
+	    deplibs="$deplib $deplibs"
+	    if $opt_preserve_dup_deps; then
+	      case "$tmp_libs " in
+	      *" $deplib "*) func_append specialdeplibs " $deplib" ;;
+	      esac
+	    fi
+	    func_append tmp_libs " $deplib"
+	  done
 	  continue
 	fi # $pass = conv
 
@@ -6467,26 +7907,26 @@ func_mode_link ()
 	# Get the name of the library we link against.
 	linklib=
 	if test -n "$old_library" &&
-	   { test "$prefer_static_libs" = yes ||
-	     test "$prefer_static_libs,$installed" = "built,no"; }; then
+	   { test yes = "$prefer_static_libs" ||
+	     test built,no = "$prefer_static_libs,$installed"; }; then
 	  linklib=$old_library
 	else
 	  for l in $old_library $library_names; do
-	    linklib="$l"
+	    linklib=$l
 	  done
 	fi
 	if test -z "$linklib"; then
-	  func_fatal_error "cannot find name of link library for \`$lib'"
+	  func_fatal_error "cannot find name of link library for '$lib'"
 	fi
 
 	# This library was specified with -dlopen.
-	if test "$pass" = dlopen; then
-	  if test -z "$libdir"; then
-	    func_fatal_error "cannot -dlopen a convenience library: \`$lib'"
-	  fi
+	if test dlopen = "$pass"; then
+	  test -z "$libdir" \
+	    && func_fatal_error "cannot -dlopen a convenience library: '$lib'"
 	  if test -z "$dlname" ||
-	     test "$dlopen_support" != yes ||
-	     test "$build_libtool_libs" = no; then
+	     test yes != "$dlopen_support" ||
+	     test no = "$build_libtool_libs"
+	  then
 	    # If there is no dlname, no dlopen support or we're linking
 	    # statically, we need to preload.  We also need to preload any
 	    # dependent libraries so libltdl's deplib preloader doesn't
@@ -6500,40 +7940,40 @@ func_mode_link ()
 
 	# We need an absolute path.
 	case $ladir in
-	[\\/]* | [A-Za-z]:[\\/]*) abs_ladir="$ladir" ;;
+	[\\/]* | [A-Za-z]:[\\/]*) abs_ladir=$ladir ;;
 	*)
 	  abs_ladir=`cd "$ladir" && pwd`
 	  if test -z "$abs_ladir"; then
-	    func_warning "cannot determine absolute directory name of \`$ladir'"
+	    func_warning "cannot determine absolute directory name of '$ladir'"
 	    func_warning "passing it literally to the linker, although it might fail"
-	    abs_ladir="$ladir"
+	    abs_ladir=$ladir
 	  fi
 	  ;;
 	esac
 	func_basename "$lib"
-	laname="$func_basename_result"
+	laname=$func_basename_result
 
 	# Find the relevant object directory and library name.
-	if test "X$installed" = Xyes; then
+	if test yes = "$installed"; then
 	  if test ! -f "$lt_sysroot$libdir/$linklib" && test -f "$abs_ladir/$linklib"; then
-	    func_warning "library \`$lib' was moved."
-	    dir="$ladir"
-	    absdir="$abs_ladir"
-	    libdir="$abs_ladir"
+	    func_warning "library '$lib' was moved."
+	    dir=$ladir
+	    absdir=$abs_ladir
+	    libdir=$abs_ladir
 	  else
-	    dir="$lt_sysroot$libdir"
-	    absdir="$lt_sysroot$libdir"
+	    dir=$lt_sysroot$libdir
+	    absdir=$lt_sysroot$libdir
 	  fi
-	  test "X$hardcode_automatic" = Xyes && avoidtemprpath=yes
+	  test yes = "$hardcode_automatic" && avoidtemprpath=yes
 	else
 	  if test ! -f "$ladir/$objdir/$linklib" && test -f "$abs_ladir/$linklib"; then
-	    dir="$ladir"
-	    absdir="$abs_ladir"
+	    dir=$ladir
+	    absdir=$abs_ladir
 	    # Remove this search path later
 	    func_append notinst_path " $abs_ladir"
 	  else
-	    dir="$ladir/$objdir"
-	    absdir="$abs_ladir/$objdir"
+	    dir=$ladir/$objdir
+	    absdir=$abs_ladir/$objdir
 	    # Remove this search path later
 	    func_append notinst_path " $abs_ladir"
 	  fi
@@ -6542,11 +7982,11 @@ func_mode_link ()
 	name=$func_stripname_result
 
 	# This library was specified with -dlpreopen.
-	if test "$pass" = dlpreopen; then
-	  if test -z "$libdir" && test "$linkmode" = prog; then
-	    func_fatal_error "only libraries may -dlpreopen a convenience library: \`$lib'"
+	if test dlpreopen = "$pass"; then
+	  if test -z "$libdir" && test prog = "$linkmode"; then
+	    func_fatal_error "only libraries may -dlpreopen a convenience library: '$lib'"
 	  fi
-	  case "$host" in
+	  case $host in
 	    # special handling for platforms with PE-DLLs.
 	    *cygwin* | *mingw* | *cegcc* )
 	      # Linker will automatically link against shared library if both
@@ -6590,9 +8030,9 @@ func_mode_link ()
 
 	if test -z "$libdir"; then
 	  # Link the convenience library
-	  if test "$linkmode" = lib; then
+	  if test lib = "$linkmode"; then
 	    deplibs="$dir/$old_library $deplibs"
-	  elif test "$linkmode,$pass" = "prog,link"; then
+	  elif test prog,link = "$linkmode,$pass"; then
 	    compile_deplibs="$dir/$old_library $compile_deplibs"
 	    finalize_deplibs="$dir/$old_library $finalize_deplibs"
 	  else
@@ -6602,14 +8042,14 @@ func_mode_link ()
 	fi
 
 
-	if test "$linkmode" = prog && test "$pass" != link; then
+	if test prog = "$linkmode" && test link != "$pass"; then
 	  func_append newlib_search_path " $ladir"
 	  deplibs="$lib $deplibs"
 
-	  linkalldeplibs=no
-	  if test "$link_all_deplibs" != no || test -z "$library_names" ||
-	     test "$build_libtool_libs" = no; then
-	    linkalldeplibs=yes
+	  linkalldeplibs=false
+	  if test no != "$link_all_deplibs" || test -z "$library_names" ||
+	     test no = "$build_libtool_libs"; then
+	    linkalldeplibs=:
 	  fi
 
 	  tmp_libs=
@@ -6621,14 +8061,14 @@ func_mode_link ()
 		 ;;
 	    esac
 	    # Need to link against all dependency_libs?
-	    if test "$linkalldeplibs" = yes; then
+	    if $linkalldeplibs; then
 	      deplibs="$deplib $deplibs"
 	    else
 	      # Need to hardcode shared library paths
 	      # or/and link against static libraries
 	      newdependency_libs="$deplib $newdependency_libs"
 	    fi
-	    if $opt_preserve_dup_deps ; then
+	    if $opt_preserve_dup_deps; then
 	      case "$tmp_libs " in
 	      *" $deplib "*) func_append specialdeplibs " $deplib" ;;
 	      esac
@@ -6638,15 +8078,15 @@ func_mode_link ()
 	  continue
 	fi # $linkmode = prog...
 
-	if test "$linkmode,$pass" = "prog,link"; then
+	if test prog,link = "$linkmode,$pass"; then
 	  if test -n "$library_names" &&
-	     { { test "$prefer_static_libs" = no ||
-	         test "$prefer_static_libs,$installed" = "built,yes"; } ||
+	     { { test no = "$prefer_static_libs" ||
+	         test built,yes = "$prefer_static_libs,$installed"; } ||
 	       test -z "$old_library"; }; then
 	    # We need to hardcode the library path
-	    if test -n "$shlibpath_var" && test -z "$avoidtemprpath" ; then
+	    if test -n "$shlibpath_var" && test -z "$avoidtemprpath"; then
 	      # Make sure the rpath contains only unique directories.
-	      case "$temp_rpath:" in
+	      case $temp_rpath: in
 	      *"$absdir:"*) ;;
 	      *) func_append temp_rpath "$absdir:" ;;
 	      esac
@@ -6675,9 +8115,9 @@ func_mode_link ()
 	    esac
 	  fi # $linkmode,$pass = prog,link...
 
-	  if test "$alldeplibs" = yes &&
-	     { test "$deplibs_check_method" = pass_all ||
-	       { test "$build_libtool_libs" = yes &&
+	  if $alldeplibs &&
+	     { test pass_all = "$deplibs_check_method" ||
+	       { test yes = "$build_libtool_libs" &&
 		 test -n "$library_names"; }; }; then
 	    # We only need to search for static libraries
 	    continue
@@ -6686,19 +8126,19 @@ func_mode_link ()
 
 	link_static=no # Whether the deplib will be linked statically
 	use_static_libs=$prefer_static_libs
-	if test "$use_static_libs" = built && test "$installed" = yes; then
+	if test built = "$use_static_libs" && test yes = "$installed"; then
 	  use_static_libs=no
 	fi
 	if test -n "$library_names" &&
-	   { test "$use_static_libs" = no || test -z "$old_library"; }; then
+	   { test no = "$use_static_libs" || test -z "$old_library"; }; then
 	  case $host in
-	  *cygwin* | *mingw* | *cegcc*)
+	  *cygwin* | *mingw* | *cegcc* | *os2*)
 	      # No point in relinking DLLs because paths are not encoded
 	      func_append notinst_deplibs " $lib"
 	      need_relink=no
 	    ;;
 	  *)
-	    if test "$installed" = no; then
+	    if test no = "$installed"; then
 	      func_append notinst_deplibs " $lib"
 	      need_relink=yes
 	    fi
@@ -6708,24 +8148,24 @@ func_mode_link ()
 
 	  # Warn about portability, can't link against -module's on some
 	  # systems (darwin).  Don't bleat about dlopened modules though!
-	  dlopenmodule=""
+	  dlopenmodule=
 	  for dlpremoduletest in $dlprefiles; do
 	    if test "X$dlpremoduletest" = "X$lib"; then
-	      dlopenmodule="$dlpremoduletest"
+	      dlopenmodule=$dlpremoduletest
 	      break
 	    fi
 	  done
-	  if test -z "$dlopenmodule" && test "$shouldnotlink" = yes && test "$pass" = link; then
+	  if test -z "$dlopenmodule" && test yes = "$shouldnotlink" && test link = "$pass"; then
 	    echo
-	    if test "$linkmode" = prog; then
+	    if test prog = "$linkmode"; then
 	      $ECHO "*** Warning: Linking the executable $output against the loadable module"
 	    else
 	      $ECHO "*** Warning: Linking the shared library $output against the loadable module"
 	    fi
 	    $ECHO "*** $linklib is not portable!"
 	  fi
-	  if test "$linkmode" = lib &&
-	     test "$hardcode_into_libs" = yes; then
+	  if test lib = "$linkmode" &&
+	     test yes = "$hardcode_into_libs"; then
 	    # Hardcode the library path.
 	    # Skip directories that are in the system default run-time
 	    # search path.
@@ -6753,43 +8193,43 @@ func_mode_link ()
 	    # figure out the soname
 	    set dummy $library_names
 	    shift
-	    realname="$1"
+	    realname=$1
 	    shift
 	    libname=`eval "\\$ECHO \"$libname_spec\""`
 	    # use dlname if we got it. it's perfectly good, no?
 	    if test -n "$dlname"; then
-	      soname="$dlname"
+	      soname=$dlname
 	    elif test -n "$soname_spec"; then
 	      # bleh windows
 	      case $host in
-	      *cygwin* | mingw* | *cegcc*)
+	      *cygwin* | mingw* | *cegcc* | *os2*)
 	        func_arith $current - $age
 		major=$func_arith_result
-		versuffix="-$major"
+		versuffix=-$major
 		;;
 	      esac
 	      eval soname=\"$soname_spec\"
 	    else
-	      soname="$realname"
+	      soname=$realname
 	    fi
 
 	    # Make a new name for the extract_expsyms_cmds to use
-	    soroot="$soname"
+	    soroot=$soname
 	    func_basename "$soroot"
-	    soname="$func_basename_result"
+	    soname=$func_basename_result
 	    func_stripname 'lib' '.dll' "$soname"
 	    newlib=libimp-$func_stripname_result.a
 
 	    # If the library has no export list, then create one now
 	    if test -f "$output_objdir/$soname-def"; then :
 	    else
-	      func_verbose "extracting exported symbol list from \`$soname'"
+	      func_verbose "extracting exported symbol list from '$soname'"
 	      func_execute_cmds "$extract_expsyms_cmds" 'exit $?'
 	    fi
 
 	    # Create $newlib
 	    if test -f "$output_objdir/$newlib"; then :; else
-	      func_verbose "generating import library for \`$soname'"
+	      func_verbose "generating import library for '$soname'"
 	      func_execute_cmds "$old_archive_from_expsyms_cmds" 'exit $?'
 	    fi
 	    # make sure the library variables are pointing to the new library
@@ -6797,58 +8237,58 @@ func_mode_link ()
 	    linklib=$newlib
 	  fi # test -n "$old_archive_from_expsyms_cmds"
 
-	  if test "$linkmode" = prog || test "$opt_mode" != relink; then
+	  if test prog = "$linkmode" || test relink != "$opt_mode"; then
 	    add_shlibpath=
 	    add_dir=
 	    add=
 	    lib_linked=yes
 	    case $hardcode_action in
 	    immediate | unsupported)
-	      if test "$hardcode_direct" = no; then
-		add="$dir/$linklib"
+	      if test no = "$hardcode_direct"; then
+		add=$dir/$linklib
 		case $host in
-		  *-*-sco3.2v5.0.[024]*) add_dir="-L$dir" ;;
-		  *-*-sysv4*uw2*) add_dir="-L$dir" ;;
+		  *-*-sco3.2v5.0.[024]*) add_dir=-L$dir ;;
+		  *-*-sysv4*uw2*) add_dir=-L$dir ;;
 		  *-*-sysv5OpenUNIX* | *-*-sysv5UnixWare7.[01].[10]* | \
-		    *-*-unixware7*) add_dir="-L$dir" ;;
+		    *-*-unixware7*) add_dir=-L$dir ;;
 		  *-*-darwin* )
-		    # if the lib is a (non-dlopened) module then we can not
+		    # if the lib is a (non-dlopened) module then we cannot
 		    # link against it, someone is ignoring the earlier warnings
 		    if /usr/bin/file -L $add 2> /dev/null |
-			 $GREP ": [^:]* bundle" >/dev/null ; then
+			 $GREP ": [^:]* bundle" >/dev/null; then
 		      if test "X$dlopenmodule" != "X$lib"; then
 			$ECHO "*** Warning: lib $linklib is a module, not a shared library"
-			if test -z "$old_library" ; then
+			if test -z "$old_library"; then
 			  echo
 			  echo "*** And there doesn't seem to be a static archive available"
 			  echo "*** The link will probably fail, sorry"
 			else
-			  add="$dir/$old_library"
+			  add=$dir/$old_library
 			fi
 		      elif test -n "$old_library"; then
-			add="$dir/$old_library"
+			add=$dir/$old_library
 		      fi
 		    fi
 		esac
-	      elif test "$hardcode_minus_L" = no; then
+	      elif test no = "$hardcode_minus_L"; then
 		case $host in
-		*-*-sunos*) add_shlibpath="$dir" ;;
+		*-*-sunos*) add_shlibpath=$dir ;;
 		esac
-		add_dir="-L$dir"
-		add="-l$name"
-	      elif test "$hardcode_shlibpath_var" = no; then
-		add_shlibpath="$dir"
-		add="-l$name"
+		add_dir=-L$dir
+		add=-l$name
+	      elif test no = "$hardcode_shlibpath_var"; then
+		add_shlibpath=$dir
+		add=-l$name
 	      else
 		lib_linked=no
 	      fi
 	      ;;
 	    relink)
-	      if test "$hardcode_direct" = yes &&
-	         test "$hardcode_direct_absolute" = no; then
-		add="$dir/$linklib"
-	      elif test "$hardcode_minus_L" = yes; then
-		add_dir="-L$absdir"
+	      if test yes = "$hardcode_direct" &&
+	         test no = "$hardcode_direct_absolute"; then
+		add=$dir/$linklib
+	      elif test yes = "$hardcode_minus_L"; then
+		add_dir=-L$absdir
 		# Try looking first in the location we're being installed to.
 		if test -n "$inst_prefix_dir"; then
 		  case $libdir in
@@ -6857,10 +8297,10 @@ func_mode_link ()
 		      ;;
 		  esac
 		fi
-		add="-l$name"
-	      elif test "$hardcode_shlibpath_var" = yes; then
-		add_shlibpath="$dir"
-		add="-l$name"
+		add=-l$name
+	      elif test yes = "$hardcode_shlibpath_var"; then
+		add_shlibpath=$dir
+		add=-l$name
 	      else
 		lib_linked=no
 	      fi
@@ -6868,7 +8308,7 @@ func_mode_link ()
 	    *) lib_linked=no ;;
 	    esac
 
-	    if test "$lib_linked" != yes; then
+	    if test yes != "$lib_linked"; then
 	      func_fatal_configuration "unsupported hardcode properties"
 	    fi
 
@@ -6878,15 +8318,15 @@ func_mode_link ()
 	      *) func_append compile_shlibpath "$add_shlibpath:" ;;
 	      esac
 	    fi
-	    if test "$linkmode" = prog; then
+	    if test prog = "$linkmode"; then
 	      test -n "$add_dir" && compile_deplibs="$add_dir $compile_deplibs"
 	      test -n "$add" && compile_deplibs="$add $compile_deplibs"
 	    else
 	      test -n "$add_dir" && deplibs="$add_dir $deplibs"
 	      test -n "$add" && deplibs="$add $deplibs"
-	      if test "$hardcode_direct" != yes &&
-		 test "$hardcode_minus_L" != yes &&
-		 test "$hardcode_shlibpath_var" = yes; then
+	      if test yes != "$hardcode_direct" &&
+		 test yes != "$hardcode_minus_L" &&
+		 test yes = "$hardcode_shlibpath_var"; then
 		case :$finalize_shlibpath: in
 		*":$libdir:"*) ;;
 		*) func_append finalize_shlibpath "$libdir:" ;;
@@ -6895,33 +8335,33 @@ func_mode_link ()
 	    fi
 	  fi
 
-	  if test "$linkmode" = prog || test "$opt_mode" = relink; then
+	  if test prog = "$linkmode" || test relink = "$opt_mode"; then
 	    add_shlibpath=
 	    add_dir=
 	    add=
 	    # Finalize command for both is simple: just hardcode it.
-	    if test "$hardcode_direct" = yes &&
-	       test "$hardcode_direct_absolute" = no; then
-	      add="$libdir/$linklib"
-	    elif test "$hardcode_minus_L" = yes; then
-	      add_dir="-L$libdir"
-	      add="-l$name"
-	    elif test "$hardcode_shlibpath_var" = yes; then
+	    if test yes = "$hardcode_direct" &&
+	       test no = "$hardcode_direct_absolute"; then
+	      add=$libdir/$linklib
+	    elif test yes = "$hardcode_minus_L"; then
+	      add_dir=-L$libdir
+	      add=-l$name
+	    elif test yes = "$hardcode_shlibpath_var"; then
 	      case :$finalize_shlibpath: in
 	      *":$libdir:"*) ;;
 	      *) func_append finalize_shlibpath "$libdir:" ;;
 	      esac
-	      add="-l$name"
-	    elif test "$hardcode_automatic" = yes; then
+	      add=-l$name
+	    elif test yes = "$hardcode_automatic"; then
 	      if test -n "$inst_prefix_dir" &&
-		 test -f "$inst_prefix_dir$libdir/$linklib" ; then
-		add="$inst_prefix_dir$libdir/$linklib"
+		 test -f "$inst_prefix_dir$libdir/$linklib"; then
+		add=$inst_prefix_dir$libdir/$linklib
 	      else
-		add="$libdir/$linklib"
+		add=$libdir/$linklib
 	      fi
 	    else
 	      # We cannot seem to hardcode it, guess we'll fake it.
-	      add_dir="-L$libdir"
+	      add_dir=-L$libdir
 	      # Try looking first in the location we're being installed to.
 	      if test -n "$inst_prefix_dir"; then
 		case $libdir in
@@ -6930,10 +8370,10 @@ func_mode_link ()
 		    ;;
 		esac
 	      fi
-	      add="-l$name"
+	      add=-l$name
 	    fi
 
-	    if test "$linkmode" = prog; then
+	    if test prog = "$linkmode"; then
 	      test -n "$add_dir" && finalize_deplibs="$add_dir $finalize_deplibs"
 	      test -n "$add" && finalize_deplibs="$add $finalize_deplibs"
 	    else
@@ -6941,43 +8381,43 @@ func_mode_link ()
 	      test -n "$add" && deplibs="$add $deplibs"
 	    fi
 	  fi
-	elif test "$linkmode" = prog; then
+	elif test prog = "$linkmode"; then
 	  # Here we assume that one of hardcode_direct or hardcode_minus_L
 	  # is not unsupported.  This is valid on all known static and
 	  # shared platforms.
-	  if test "$hardcode_direct" != unsupported; then
-	    test -n "$old_library" && linklib="$old_library"
+	  if test unsupported != "$hardcode_direct"; then
+	    test -n "$old_library" && linklib=$old_library
 	    compile_deplibs="$dir/$linklib $compile_deplibs"
 	    finalize_deplibs="$dir/$linklib $finalize_deplibs"
 	  else
 	    compile_deplibs="-l$name -L$dir $compile_deplibs"
 	    finalize_deplibs="-l$name -L$dir $finalize_deplibs"
 	  fi
-	elif test "$build_libtool_libs" = yes; then
+	elif test yes = "$build_libtool_libs"; then
 	  # Not a shared library
-	  if test "$deplibs_check_method" != pass_all; then
+	  if test pass_all != "$deplibs_check_method"; then
 	    # We're trying link a shared library against a static one
 	    # but the system doesn't support it.
 
 	    # Just print a warning and add the library to dependency_libs so
 	    # that the program can be linked against the static library.
 	    echo
-	    $ECHO "*** Warning: This system can not link to static lib archive $lib."
+	    $ECHO "*** Warning: This system cannot link to static lib archive $lib."
 	    echo "*** I have the capability to make that library automatically link in when"
 	    echo "*** you link to this library.  But I can only do this if you have a"
 	    echo "*** shared version of the library, which you do not appear to have."
-	    if test "$module" = yes; then
+	    if test yes = "$module"; then
 	      echo "*** But as you try to build a module library, libtool will still create "
 	      echo "*** a static module, that should work as long as the dlopening application"
 	      echo "*** is linked with the -dlopen flag to resolve symbols at runtime."
 	      if test -z "$global_symbol_pipe"; then
 		echo
 		echo "*** However, this would only work if libtool was able to extract symbol"
-		echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
+		echo "*** lists from a program, using 'nm' or equivalent, but libtool could"
 		echo "*** not find such a program.  So, this module is probably useless."
-		echo "*** \`nm' from GNU binutils and a full rebuild may help."
+		echo "*** 'nm' from GNU binutils and a full rebuild may help."
 	      fi
-	      if test "$build_old_libs" = no; then
+	      if test no = "$build_old_libs"; then
 		build_libtool_libs=module
 		build_old_libs=yes
 	      else
@@ -6990,11 +8430,11 @@ func_mode_link ()
 	  fi
 	fi # link shared/static library?
 
-	if test "$linkmode" = lib; then
+	if test lib = "$linkmode"; then
 	  if test -n "$dependency_libs" &&
-	     { test "$hardcode_into_libs" != yes ||
-	       test "$build_old_libs" = yes ||
-	       test "$link_static" = yes; }; then
+	     { test yes != "$hardcode_into_libs" ||
+	       test yes = "$build_old_libs" ||
+	       test yes = "$link_static"; }; then
 	    # Extract -R from dependency_libs
 	    temp_deplibs=
 	    for libdir in $dependency_libs; do
@@ -7008,12 +8448,12 @@ func_mode_link ()
 	      *) func_append temp_deplibs " $libdir";;
 	      esac
 	    done
-	    dependency_libs="$temp_deplibs"
+	    dependency_libs=$temp_deplibs
 	  fi
 
 	  func_append newlib_search_path " $absdir"
 	  # Link against this library
-	  test "$link_static" = no && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
+	  test no = "$link_static" && newdependency_libs="$abs_ladir/$laname $newdependency_libs"
 	  # ... and its dependency_libs
 	  tmp_libs=
 	  for deplib in $dependency_libs; do
@@ -7023,7 +8463,7 @@ func_mode_link ()
                    func_resolve_sysroot "$func_stripname_result";;
               *) func_resolve_sysroot "$deplib" ;;
             esac
-	    if $opt_preserve_dup_deps ; then
+	    if $opt_preserve_dup_deps; then
 	      case "$tmp_libs " in
 	      *" $func_resolve_sysroot_result "*)
                 func_append specialdeplibs " $func_resolve_sysroot_result" ;;
@@ -7032,12 +8472,12 @@ func_mode_link ()
 	    func_append tmp_libs " $func_resolve_sysroot_result"
 	  done
 
-	  if test "$link_all_deplibs" != no; then
+	  if test no != "$link_all_deplibs"; then
 	    # Add the search paths of all dependency libraries
 	    for deplib in $dependency_libs; do
 	      path=
 	      case $deplib in
-	      -L*) path="$deplib" ;;
+	      -L*) path=$deplib ;;
 	      *.la)
 	        func_resolve_sysroot "$deplib"
 	        deplib=$func_resolve_sysroot_result
@@ -7045,12 +8485,12 @@ func_mode_link ()
 		dir=$func_dirname_result
 		# We need an absolute path.
 		case $dir in
-		[\\/]* | [A-Za-z]:[\\/]*) absdir="$dir" ;;
+		[\\/]* | [A-Za-z]:[\\/]*) absdir=$dir ;;
 		*)
 		  absdir=`cd "$dir" && pwd`
 		  if test -z "$absdir"; then
-		    func_warning "cannot determine absolute directory name of \`$dir'"
-		    absdir="$dir"
+		    func_warning "cannot determine absolute directory name of '$dir'"
+		    absdir=$dir
 		  fi
 		  ;;
 		esac
@@ -7058,35 +8498,35 @@ func_mode_link ()
 		case $host in
 		*-*-darwin*)
 		  depdepl=
-		  eval deplibrary_names=`${SED} -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
-		  if test -n "$deplibrary_names" ; then
-		    for tmp in $deplibrary_names ; do
+		  eval deplibrary_names=`$SED -n -e 's/^library_names=\(.*\)$/\1/p' $deplib`
+		  if test -n "$deplibrary_names"; then
+		    for tmp in $deplibrary_names; do
 		      depdepl=$tmp
 		    done
-		    if test -f "$absdir/$objdir/$depdepl" ; then
-		      depdepl="$absdir/$objdir/$depdepl"
-		      darwin_install_name=`${OTOOL} -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`
+		    if test -f "$absdir/$objdir/$depdepl"; then
+		      depdepl=$absdir/$objdir/$depdepl
+		      darwin_install_name=`$OTOOL -L $depdepl | awk '{if (NR == 2) {print $1;exit}}'`
                       if test -z "$darwin_install_name"; then
-                          darwin_install_name=`${OTOOL64} -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`
+                          darwin_install_name=`$OTOOL64 -L $depdepl  | awk '{if (NR == 2) {print $1;exit}}'`
                       fi
-		      func_append compiler_flags " ${wl}-dylib_file ${wl}${darwin_install_name}:${depdepl}"
-		      func_append linker_flags " -dylib_file ${darwin_install_name}:${depdepl}"
+		      func_append compiler_flags " $wl-dylib_file $wl$darwin_install_name:$depdepl"
+		      func_append linker_flags " -dylib_file $darwin_install_name:$depdepl"
 		      path=
 		    fi
 		  fi
 		  ;;
 		*)
-		  path="-L$absdir/$objdir"
+		  path=-L$absdir/$objdir
 		  ;;
 		esac
 		else
-		  eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
+		  eval libdir=`$SED -n -e 's/^libdir=\(.*\)$/\1/p' $deplib`
 		  test -z "$libdir" && \
-		    func_fatal_error "\`$deplib' is not a valid libtool archive"
+		    func_fatal_error "'$deplib' is not a valid libtool archive"
 		  test "$absdir" != "$libdir" && \
-		    func_warning "\`$deplib' seems to be moved"
+		    func_warning "'$deplib' seems to be moved"
 
-		  path="-L$absdir"
+		  path=-L$absdir
 		fi
 		;;
 	      esac
@@ -7098,23 +8538,23 @@ func_mode_link ()
 	  fi # link_all_deplibs != no
 	fi # linkmode = lib
       done # for deplib in $libs
-      if test "$pass" = link; then
-	if test "$linkmode" = "prog"; then
+      if test link = "$pass"; then
+	if test prog = "$linkmode"; then
 	  compile_deplibs="$new_inherited_linker_flags $compile_deplibs"
 	  finalize_deplibs="$new_inherited_linker_flags $finalize_deplibs"
 	else
 	  compiler_flags="$compiler_flags "`$ECHO " $new_inherited_linker_flags" | $SED 's% \([^ $]*\).ltframework% -framework \1%g'`
 	fi
       fi
-      dependency_libs="$newdependency_libs"
-      if test "$pass" = dlpreopen; then
+      dependency_libs=$newdependency_libs
+      if test dlpreopen = "$pass"; then
 	# Link the dlpreopened libraries before other libraries
 	for deplib in $save_deplibs; do
 	  deplibs="$deplib $deplibs"
 	done
       fi
-      if test "$pass" != dlopen; then
-	if test "$pass" != conv; then
+      if test dlopen != "$pass"; then
+	test conv = "$pass" || {
 	  # Make sure lib_search_path contains only unique directories.
 	  lib_search_path=
 	  for dir in $newlib_search_path; do
@@ -7124,12 +8564,12 @@ func_mode_link ()
 	    esac
 	  done
 	  newlib_search_path=
-	fi
+	}
 
-	if test "$linkmode,$pass" != "prog,link"; then
-	  vars="deplibs"
-	else
+	if test prog,link = "$linkmode,$pass"; then
 	  vars="compile_deplibs finalize_deplibs"
+	else
+	  vars=deplibs
 	fi
 	for var in $vars dependency_libs; do
 	  # Add libraries to $var in reverse order
@@ -7187,62 +8627,93 @@ func_mode_link ()
 	  eval $var=\"$tmp_libs\"
 	done # for var
       fi
+
+      # Add Sun CC postdeps if required:
+      test CXX = "$tagname" && {
+        case $host_os in
+        linux*)
+          case `$CC -V 2>&1 | sed 5q` in
+          *Sun\ C*) # Sun C++ 5.9
+            func_suncc_cstd_abi
+
+            if test no != "$suncc_use_cstd_abi"; then
+              func_append postdeps ' -library=Cstd -library=Crun'
+            fi
+            ;;
+          esac
+          ;;
+
+        solaris*)
+          func_cc_basename "$CC"
+          case $func_cc_basename_result in
+          CC* | sunCC*)
+            func_suncc_cstd_abi
+
+            if test no != "$suncc_use_cstd_abi"; then
+              func_append postdeps ' -library=Cstd -library=Crun'
+            fi
+            ;;
+          esac
+          ;;
+        esac
+      }
+
       # Last step: remove runtime libs from dependency_libs
       # (they stay in deplibs)
       tmp_libs=
-      for i in $dependency_libs ; do
+      for i in $dependency_libs; do
 	case " $predeps $postdeps $compiler_lib_search_path " in
 	*" $i "*)
-	  i=""
+	  i=
 	  ;;
 	esac
-	if test -n "$i" ; then
+	if test -n "$i"; then
 	  func_append tmp_libs " $i"
 	fi
       done
       dependency_libs=$tmp_libs
     done # for pass
-    if test "$linkmode" = prog; then
-      dlfiles="$newdlfiles"
+    if test prog = "$linkmode"; then
+      dlfiles=$newdlfiles
     fi
-    if test "$linkmode" = prog || test "$linkmode" = lib; then
-      dlprefiles="$newdlprefiles"
+    if test prog = "$linkmode" || test lib = "$linkmode"; then
+      dlprefiles=$newdlprefiles
     fi
 
     case $linkmode in
     oldlib)
-      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
-	func_warning "\`-dlopen' is ignored for archives"
+      if test -n "$dlfiles$dlprefiles" || test no != "$dlself"; then
+	func_warning "'-dlopen' is ignored for archives"
       fi
 
       case " $deplibs" in
       *\ -l* | *\ -L*)
-	func_warning "\`-l' and \`-L' are ignored for archives" ;;
+	func_warning "'-l' and '-L' are ignored for archives" ;;
       esac
 
       test -n "$rpath" && \
-	func_warning "\`-rpath' is ignored for archives"
+	func_warning "'-rpath' is ignored for archives"
 
       test -n "$xrpath" && \
-	func_warning "\`-R' is ignored for archives"
+	func_warning "'-R' is ignored for archives"
 
       test -n "$vinfo" && \
-	func_warning "\`-version-info/-version-number' is ignored for archives"
+	func_warning "'-version-info/-version-number' is ignored for archives"
 
       test -n "$release" && \
-	func_warning "\`-release' is ignored for archives"
+	func_warning "'-release' is ignored for archives"
 
       test -n "$export_symbols$export_symbols_regex" && \
-	func_warning "\`-export-symbols' is ignored for archives"
+	func_warning "'-export-symbols' is ignored for archives"
 
       # Now set the variables for building old libraries.
       build_libtool_libs=no
-      oldlibs="$output"
+      oldlibs=$output
       func_append objs "$old_deplibs"
       ;;
 
     lib)
-      # Make sure we only generate libraries of the form `libNAME.la'.
+      # Make sure we only generate libraries of the form 'libNAME.la'.
       case $outputname in
       lib*)
 	func_stripname 'lib' '.la' "$outputname"
@@ -7251,10 +8722,10 @@ func_mode_link ()
 	eval libname=\"$libname_spec\"
 	;;
       *)
-	test "$module" = no && \
-	  func_fatal_help "libtool library \`$output' must begin with \`lib'"
+	test no = "$module" \
+	  && func_fatal_help "libtool library '$output' must begin with 'lib'"
 
-	if test "$need_lib_prefix" != no; then
+	if test no != "$need_lib_prefix"; then
 	  # Add the "lib" prefix for modules if required
 	  func_stripname '' '.la' "$outputname"
 	  name=$func_stripname_result
@@ -7268,8 +8739,8 @@ func_mode_link ()
       esac
 
       if test -n "$objs"; then
-	if test "$deplibs_check_method" != pass_all; then
-	  func_fatal_error "cannot build libtool library \`$output' from non-libtool objects on this host:$objs"
+	if test pass_all != "$deplibs_check_method"; then
+	  func_fatal_error "cannot build libtool library '$output' from non-libtool objects on this host:$objs"
 	else
 	  echo
 	  $ECHO "*** Warning: Linking the shared library $output against the non-libtool"
@@ -7278,21 +8749,21 @@ func_mode_link ()
 	fi
       fi
 
-      test "$dlself" != no && \
-	func_warning "\`-dlopen self' is ignored for libtool libraries"
+      test no = "$dlself" \
+	|| func_warning "'-dlopen self' is ignored for libtool libraries"
 
       set dummy $rpath
       shift
-      test "$#" -gt 1 && \
-	func_warning "ignoring multiple \`-rpath's for a libtool library"
+      test 1 -lt "$#" \
+	&& func_warning "ignoring multiple '-rpath's for a libtool library"
 
-      install_libdir="$1"
+      install_libdir=$1
 
       oldlibs=
       if test -z "$rpath"; then
-	if test "$build_libtool_libs" = yes; then
+	if test yes = "$build_libtool_libs"; then
 	  # Building a libtool convenience library.
-	  # Some compilers have problems with a `.al' extension so
+	  # Some compilers have problems with a '.al' extension so
 	  # convenience libraries should have the same extension an
 	  # archive normally would.
 	  oldlibs="$output_objdir/$libname.$libext $oldlibs"
@@ -7301,20 +8772,20 @@ func_mode_link ()
 	fi
 
 	test -n "$vinfo" && \
-	  func_warning "\`-version-info/-version-number' is ignored for convenience libraries"
+	  func_warning "'-version-info/-version-number' is ignored for convenience libraries"
 
 	test -n "$release" && \
-	  func_warning "\`-release' is ignored for convenience libraries"
+	  func_warning "'-release' is ignored for convenience libraries"
       else
 
 	# Parse the version information argument.
-	save_ifs="$IFS"; IFS=':'
+	save_ifs=$IFS; IFS=:
 	set dummy $vinfo 0 0 0
 	shift
-	IFS="$save_ifs"
+	IFS=$save_ifs
 
 	test -n "$7" && \
-	  func_fatal_help "too many parameters to \`-version-info'"
+	  func_fatal_help "too many parameters to '-version-info'"
 
 	# convert absolute version numbers to libtool ages
 	# this retains compatibility with .la files and attempts
@@ -7322,45 +8793,42 @@ func_mode_link ()
 
 	case $vinfo_number in
 	yes)
-	  number_major="$1"
-	  number_minor="$2"
-	  number_revision="$3"
+	  number_major=$1
+	  number_minor=$2
+	  number_revision=$3
 	  #
 	  # There are really only two kinds -- those that
 	  # use the current revision as the major version
 	  # and those that subtract age and use age as
 	  # a minor version.  But, then there is irix
-	  # which has an extra 1 added just for fun
+	  # that has an extra 1 added just for fun
 	  #
 	  case $version_type in
 	  # correct linux to gnu/linux during the next big refactor
-	  darwin|linux|osf|windows|none)
+	  darwin|freebsd-elf|linux|osf|windows|none)
 	    func_arith $number_major + $number_minor
 	    current=$func_arith_result
-	    age="$number_minor"
-	    revision="$number_revision"
+	    age=$number_minor
+	    revision=$number_revision
 	    ;;
-	  freebsd-aout|freebsd-elf|qnx|sunos)
-	    current="$number_major"
-	    revision="$number_minor"
-	    age="0"
+	  freebsd-aout|qnx|sunos)
+	    current=$number_major
+	    revision=$number_minor
+	    age=0
 	    ;;
 	  irix|nonstopux)
 	    func_arith $number_major + $number_minor
 	    current=$func_arith_result
-	    age="$number_minor"
-	    revision="$number_minor"
+	    age=$number_minor
+	    revision=$number_minor
 	    lt_irix_increment=no
 	    ;;
-	  *)
-	    func_fatal_configuration "$modename: unknown library version type \`$version_type'"
-	    ;;
 	  esac
 	  ;;
 	no)
-	  current="$1"
-	  revision="$2"
-	  age="$3"
+	  current=$1
+	  revision=$2
+	  age=$3
 	  ;;
 	esac
 
@@ -7368,30 +8836,30 @@ func_mode_link ()
 	case $current in
 	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
 	*)
-	  func_error "CURRENT \`$current' must be a nonnegative integer"
-	  func_fatal_error "\`$vinfo' is not valid version information"
+	  func_error "CURRENT '$current' must be a nonnegative integer"
+	  func_fatal_error "'$vinfo' is not valid version information"
 	  ;;
 	esac
 
 	case $revision in
 	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
 	*)
-	  func_error "REVISION \`$revision' must be a nonnegative integer"
-	  func_fatal_error "\`$vinfo' is not valid version information"
+	  func_error "REVISION '$revision' must be a nonnegative integer"
+	  func_fatal_error "'$vinfo' is not valid version information"
 	  ;;
 	esac
 
 	case $age in
 	0|[1-9]|[1-9][0-9]|[1-9][0-9][0-9]|[1-9][0-9][0-9][0-9]|[1-9][0-9][0-9][0-9][0-9]) ;;
 	*)
-	  func_error "AGE \`$age' must be a nonnegative integer"
-	  func_fatal_error "\`$vinfo' is not valid version information"
+	  func_error "AGE '$age' must be a nonnegative integer"
+	  func_fatal_error "'$vinfo' is not valid version information"
 	  ;;
 	esac
 
 	if test "$age" -gt "$current"; then
-	  func_error "AGE \`$age' is greater than the current interface number \`$current'"
-	  func_fatal_error "\`$vinfo' is not valid version information"
+	  func_error "AGE '$age' is greater than the current interface number '$current'"
+	  func_fatal_error "'$vinfo' is not valid version information"
 	fi
 
 	# Calculate the version variables.
@@ -7406,26 +8874,36 @@ func_mode_link ()
 	  # verstring for coding it into the library header
 	  func_arith $current - $age
 	  major=.$func_arith_result
-	  versuffix="$major.$age.$revision"
+	  versuffix=$major.$age.$revision
 	  # Darwin ld doesn't like 0 for these options...
 	  func_arith $current + 1
 	  minor_current=$func_arith_result
-	  xlcverstring="${wl}-compatibility_version ${wl}$minor_current ${wl}-current_version ${wl}$minor_current.$revision"
+	  xlcverstring="$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision"
 	  verstring="-compatibility_version $minor_current -current_version $minor_current.$revision"
+          # On Darwin other compilers
+          case $CC in
+              nagfor*)
+                  verstring="$wl-compatibility_version $wl$minor_current $wl-current_version $wl$minor_current.$revision"
+                  ;;
+              *)
+                  verstring="-compatibility_version $minor_current -current_version $minor_current.$revision"
+                  ;;
+          esac
 	  ;;
 
 	freebsd-aout)
-	  major=".$current"
-	  versuffix=".$current.$revision";
+	  major=.$current
+	  versuffix=.$current.$revision
 	  ;;
 
 	freebsd-elf)
-	  major=".$current"
-	  versuffix=".$current"
+	  func_arith $current - $age
+	  major=.$func_arith_result
+	  versuffix=$major.$age.$revision
 	  ;;
 
 	irix | nonstopux)
-	  if test "X$lt_irix_increment" = "Xno"; then
+	  if test no = "$lt_irix_increment"; then
 	    func_arith $current - $age
 	  else
 	    func_arith $current - $age + 1
@@ -7436,69 +8914,74 @@ func_mode_link ()
 	    nonstopux) verstring_prefix=nonstopux ;;
 	    *)         verstring_prefix=sgi ;;
 	  esac
-	  verstring="$verstring_prefix$major.$revision"
+	  verstring=$verstring_prefix$major.$revision
 
 	  # Add in all the interfaces that we are compatible with.
 	  loop=$revision
-	  while test "$loop" -ne 0; do
+	  while test 0 -ne "$loop"; do
 	    func_arith $revision - $loop
 	    iface=$func_arith_result
 	    func_arith $loop - 1
 	    loop=$func_arith_result
-	    verstring="$verstring_prefix$major.$iface:$verstring"
+	    verstring=$verstring_prefix$major.$iface:$verstring
 	  done
 
-	  # Before this point, $major must not contain `.'.
+	  # Before this point, $major must not contain '.'.
 	  major=.$major
-	  versuffix="$major.$revision"
+	  versuffix=$major.$revision
 	  ;;
 
 	linux) # correct to gnu/linux during the next big refactor
 	  func_arith $current - $age
 	  major=.$func_arith_result
-	  versuffix="$major.$age.$revision"
+	  versuffix=$major.$age.$revision
 	  ;;
 
 	osf)
 	  func_arith $current - $age
 	  major=.$func_arith_result
-	  versuffix=".$current.$age.$revision"
-	  verstring="$current.$age.$revision"
+	  versuffix=.$current.$age.$revision
+	  verstring=$current.$age.$revision
 
 	  # Add in all the interfaces that we are compatible with.
 	  loop=$age
-	  while test "$loop" -ne 0; do
+	  while test 0 -ne "$loop"; do
 	    func_arith $current - $loop
 	    iface=$func_arith_result
 	    func_arith $loop - 1
 	    loop=$func_arith_result
-	    verstring="$verstring:${iface}.0"
+	    verstring=$verstring:$iface.0
 	  done
 
 	  # Make executables depend on our current version.
-	  func_append verstring ":${current}.0"
+	  func_append verstring ":$current.0"
 	  ;;
 
 	qnx)
-	  major=".$current"
-	  versuffix=".$current"
+	  major=.$current
+	  versuffix=.$current
+	  ;;
+
+	sco)
+	  major=.$current
+	  versuffix=.$current
 	  ;;
 
 	sunos)
-	  major=".$current"
-	  versuffix=".$current.$revision"
+	  major=.$current
+	  versuffix=.$current.$revision
 	  ;;
 
 	windows)
 	  # Use '-' rather than '.', since we only want one
-	  # extension on DOS 8.3 filesystems.
+	  # extension on DOS 8.3 file systems.
 	  func_arith $current - $age
 	  major=$func_arith_result
-	  versuffix="-$major"
+	  versuffix=-$major
 	  ;;
 
 	*)
-	  func_fatal_configuration "unknown library version type \`$version_type'"
+	  func_fatal_configuration "unknown library version type '$version_type'"
 	  ;;
 	esac
 
@@ -7512,42 +8995,45 @@ func_mode_link ()
 	    verstring=
 	    ;;
 	  *)
-	    verstring="0.0"
+	    verstring=0.0
 	    ;;
 	  esac
-	  if test "$need_version" = no; then
+	  if test no = "$need_version"; then
 	    versuffix=
 	  else
-	    versuffix=".0.0"
+	    versuffix=.0.0
 	  fi
 	fi
 
 	# Remove version info from name if versioning should be avoided
-	if test "$avoid_version" = yes && test "$need_version" = no; then
+	if test yes,no = "$avoid_version,$need_version"; then
 	  major=
 	  versuffix=
-	  verstring=""
+	  verstring=
 	fi
 
 	# Check to see if the archive will have undefined symbols.
-	if test "$allow_undefined" = yes; then
-	  if test "$allow_undefined_flag" = unsupported; then
-	    func_warning "undefined symbols not allowed in $host shared libraries"
-	    build_libtool_libs=no
-	    build_old_libs=yes
+	if test yes = "$allow_undefined"; then
+	  if test unsupported = "$allow_undefined_flag"; then
+	    if test yes = "$build_old_libs"; then
+	      func_warning "undefined symbols not allowed in $host shared libraries; building static only"
+	      build_libtool_libs=no
+	    else
+	      func_fatal_error "can't build $host shared library unless -no-undefined is specified"
+	    fi
 	  fi
 	else
 	  # Don't allow undefined symbols.
-	  allow_undefined_flag="$no_undefined_flag"
+	  allow_undefined_flag=$no_undefined_flag
 	fi
 
       fi
 
-      func_generate_dlsyms "$libname" "$libname" "yes"
+      func_generate_dlsyms "$libname" "$libname" :
       func_append libobjs " $symfileobj"
-      test "X$libobjs" = "X " && libobjs=
+      test " " = "$libobjs" && libobjs=
 
-      if test "$opt_mode" != relink; then
+      if test relink != "$opt_mode"; then
 	# Remove our outputs, but don't remove object files since they
 	# may have been created when compiling PIC objects.
 	removelist=
@@ -7556,8 +9042,8 @@ func_mode_link ()
 	  case $p in
 	    *.$objext | *.gcno)
 	       ;;
-	    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/${libname}${release}.*)
-	       if test "X$precious_files_regex" != "X"; then
+	    $output_objdir/$outputname | $output_objdir/$libname.* | $output_objdir/$libname$release.*)
+	       if test -n "$precious_files_regex"; then
 		 if $ECHO "$p" | $EGREP -e "$precious_files_regex" >/dev/null 2>&1
 		 then
 		   continue
@@ -7573,11 +9059,11 @@ func_mode_link ()
       fi
 
       # Now set the variables for building old libraries.
-      if test "$build_old_libs" = yes && test "$build_libtool_libs" != convenience ; then
+      if test yes = "$build_old_libs" && test convenience != "$build_libtool_libs"; then
 	func_append oldlibs " $output_objdir/$libname.$libext"
 
 	# Transform .lo files to .o files.
-	oldobjs="$objs "`$ECHO "$libobjs" | $SP2NL | $SED "/\.${libext}$/d; $lo2o" | $NL2SP`
+	oldobjs="$objs "`$ECHO "$libobjs" | $SP2NL | $SED "/\.$libext$/d; $lo2o" | $NL2SP`
       fi
 
       # Eliminate all temporary directories.
@@ -7598,13 +9084,13 @@ func_mode_link ()
 	  *) func_append finalize_rpath " $libdir" ;;
 	  esac
 	done
-	if test "$hardcode_into_libs" != yes || test "$build_old_libs" = yes; then
+	if test yes != "$hardcode_into_libs" || test yes = "$build_old_libs"; then
 	  dependency_libs="$temp_xrpath $dependency_libs"
 	fi
       fi
 
       # Make sure dlfiles contains only unique files that won't be dlpreopened
-      old_dlfiles="$dlfiles"
+      old_dlfiles=$dlfiles
       dlfiles=
       for lib in $old_dlfiles; do
 	case " $dlprefiles $dlfiles " in
@@ -7614,7 +9100,7 @@ func_mode_link ()
       done
 
       # Make sure dlprefiles contains only unique files
-      old_dlprefiles="$dlprefiles"
+      old_dlprefiles=$dlprefiles
       dlprefiles=
       for lib in $old_dlprefiles; do
 	case "$dlprefiles " in
@@ -7623,7 +9109,7 @@ func_mode_link ()
 	esac
       done
 
-      if test "$build_libtool_libs" = yes; then
+      if test yes = "$build_libtool_libs"; then
 	if test -n "$rpath"; then
 	  case $host in
 	  *-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-*-beos* | *-cegcc* | *-*-haiku*)
@@ -7647,7 +9133,7 @@ func_mode_link ()
 	    ;;
 	  *)
 	    # Add libc to deplibs on all other systems if necessary.
-	    if test "$build_libtool_need_lc" = "yes"; then
+	    if test yes = "$build_libtool_need_lc"; then
 	      func_append deplibs " -lc"
 	    fi
 	    ;;
@@ -7663,9 +9149,9 @@ func_mode_link ()
 	# I'm not sure if I'm treating the release correctly.  I think
 	# release should show up in the -l (ie -lgmp5) so we don't want to
 	# add it in twice.  Is that correct?
-	release=""
-	versuffix=""
-	major=""
+	release=
+	versuffix=
+	major=
 	newdeplibs=
 	droppeddeps=no
 	case $deplibs_check_method in
@@ -7694,20 +9180,20 @@ EOF
 	      -l*)
 		func_stripname -l '' "$i"
 		name=$func_stripname_result
-		if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		if test yes = "$allow_libtool_libs_with_static_runtimes"; then
 		  case " $predeps $postdeps " in
 		  *" $i "*)
 		    func_append newdeplibs " $i"
-		    i=""
+		    i=
 		    ;;
 		  esac
 		fi
-		if test -n "$i" ; then
+		if test -n "$i"; then
 		  libname=`eval "\\$ECHO \"$libname_spec\""`
 		  deplib_matches=`eval "\\$ECHO \"$library_names_spec\""`
 		  set dummy $deplib_matches; shift
 		  deplib_match=$1
-		  if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		  if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0; then
 		    func_append newdeplibs " $i"
 		  else
 		    droppeddeps=yes
@@ -7737,20 +9223,20 @@ EOF
 		$opt_dry_run || $RM conftest
 		if $LTCC $LTCFLAGS -o conftest conftest.c $i; then
 		  ldd_output=`ldd conftest`
-		  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+		  if test yes = "$allow_libtool_libs_with_static_runtimes"; then
 		    case " $predeps $postdeps " in
 		    *" $i "*)
 		      func_append newdeplibs " $i"
-		      i=""
+		      i=
 		      ;;
 		    esac
 		  fi
-		  if test -n "$i" ; then
+		  if test -n "$i"; then
 		    libname=`eval "\\$ECHO \"$libname_spec\""`
 		    deplib_matches=`eval "\\$ECHO \"$library_names_spec\""`
 		    set dummy $deplib_matches; shift
 		    deplib_match=$1
-		    if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0 ; then
+		    if test `expr "$ldd_output" : ".*$deplib_match"` -ne 0; then
 		      func_append newdeplibs " $i"
 		    else
 		      droppeddeps=yes
@@ -7787,24 +9273,24 @@ EOF
 	    -l*)
 	      func_stripname -l '' "$a_deplib"
 	      name=$func_stripname_result
-	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	      if test yes = "$allow_libtool_libs_with_static_runtimes"; then
 		case " $predeps $postdeps " in
 		*" $a_deplib "*)
 		  func_append newdeplibs " $a_deplib"
-		  a_deplib=""
+		  a_deplib=
 		  ;;
 		esac
 	      fi
-	      if test -n "$a_deplib" ; then
+	      if test -n "$a_deplib"; then
 		libname=`eval "\\$ECHO \"$libname_spec\""`
 		if test -n "$file_magic_glob"; then
 		  libnameglob=`func_echo_all "$libname" | $SED -e $file_magic_glob`
 		else
 		  libnameglob=$libname
 		fi
-		test "$want_nocaseglob" = yes && nocaseglob=`shopt -p nocaseglob`
+		test yes = "$want_nocaseglob" && nocaseglob=`shopt -p nocaseglob`
 		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
-		  if test "$want_nocaseglob" = yes; then
+		  if test yes = "$want_nocaseglob"; then
 		    shopt -s nocaseglob
 		    potential_libs=`ls $i/$libnameglob[.-]* 2>/dev/null`
 		    $nocaseglob
@@ -7822,25 +9308,25 @@ EOF
 		      # We might still enter an endless loop, since a link
 		      # loop can be closed while we follow links,
 		      # but so what?
-		      potlib="$potent_lib"
+		      potlib=$potent_lib
 		      while test -h "$potlib" 2>/dev/null; do
-			potliblink=`ls -ld $potlib | ${SED} 's/.* -> //'`
+			potliblink=`ls -ld $potlib | $SED 's/.* -> //'`
 			case $potliblink in
-			[\\/]* | [A-Za-z]:[\\/]*) potlib="$potliblink";;
-			*) potlib=`$ECHO "$potlib" | $SED 's,[^/]*$,,'`"$potliblink";;
+			[\\/]* | [A-Za-z]:[\\/]*) potlib=$potliblink;;
+			*) potlib=`$ECHO "$potlib" | $SED 's|[^/]*$||'`"$potliblink";;
 			esac
 		      done
 		      if eval $file_magic_cmd \"\$potlib\" 2>/dev/null |
 			 $SED -e 10q |
 			 $EGREP "$file_magic_regex" > /dev/null; then
 			func_append newdeplibs " $a_deplib"
-			a_deplib=""
+			a_deplib=
 			break 2
 		      fi
 		  done
 		done
 	      fi
-	      if test -n "$a_deplib" ; then
+	      if test -n "$a_deplib"; then
 		droppeddeps=yes
 		echo
 		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
@@ -7848,7 +9334,7 @@ EOF
 		echo "*** you link to this library.  But I can only do this if you have a"
 		echo "*** shared version of the library, which you do not appear to have"
 		echo "*** because I did check the linker path looking for a file starting"
-		if test -z "$potlib" ; then
+		if test -z "$potlib"; then
 		  $ECHO "*** with $libname but no candidates were found. (...for file magic test)"
 		else
 		  $ECHO "*** with $libname and none of the candidates passed a file format test"
@@ -7871,30 +9357,30 @@ EOF
 	    -l*)
 	      func_stripname -l '' "$a_deplib"
 	      name=$func_stripname_result
-	      if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
+	      if test yes = "$allow_libtool_libs_with_static_runtimes"; then
 		case " $predeps $postdeps " in
 		*" $a_deplib "*)
 		  func_append newdeplibs " $a_deplib"
-		  a_deplib=""
+		  a_deplib=
 		  ;;
 		esac
 	      fi
-	      if test -n "$a_deplib" ; then
+	      if test -n "$a_deplib"; then
 		libname=`eval "\\$ECHO \"$libname_spec\""`
 		for i in $lib_search_path $sys_lib_search_path $shlib_search_path; do
 		  potential_libs=`ls $i/$libname[.-]* 2>/dev/null`
 		  for potent_lib in $potential_libs; do
-		    potlib="$potent_lib" # see symlink-check above in file_magic test
+		    potlib=$potent_lib # see symlink-check above in file_magic test
 		    if eval "\$ECHO \"$potent_lib\"" 2>/dev/null | $SED 10q | \
 		       $EGREP "$match_pattern_regex" > /dev/null; then
 		      func_append newdeplibs " $a_deplib"
-		      a_deplib=""
+		      a_deplib=
 		      break 2
 		    fi
 		  done
 		done
 	      fi
-	      if test -n "$a_deplib" ; then
+	      if test -n "$a_deplib"; then
 		droppeddeps=yes
 		echo
 		$ECHO "*** Warning: linker path does not have real file for library $a_deplib."
@@ -7902,7 +9388,7 @@ EOF
 		echo "*** you link to this library.  But I can only do this if you have a"
 		echo "*** shared version of the library, which you do not appear to have"
 		echo "*** because I did check the linker path looking for a file starting"
-		if test -z "$potlib" ; then
+		if test -z "$potlib"; then
 		  $ECHO "*** with $libname but no candidates were found. (...for regex pattern test)"
 		else
 		  $ECHO "*** with $libname and none of the candidates passed a file format test"
@@ -7918,18 +9404,18 @@ EOF
 	  done # Gone through all deplibs.
 	  ;;
 	none | unknown | *)
-	  newdeplibs=""
+	  newdeplibs=
 	  tmp_deplibs=`$ECHO " $deplibs" | $SED 's/ -lc$//; s/ -[LR][^ ]*//g'`
-	  if test "X$allow_libtool_libs_with_static_runtimes" = "Xyes" ; then
-	    for i in $predeps $postdeps ; do
+	  if test yes = "$allow_libtool_libs_with_static_runtimes"; then
+	    for i in $predeps $postdeps; do
 	      # can't use Xsed below, because $i might contain '/'
-	      tmp_deplibs=`$ECHO " $tmp_deplibs" | $SED "s,$i,,"`
+	      tmp_deplibs=`$ECHO " $tmp_deplibs" | $SED "s|$i||"`
 	    done
 	  fi
 	  case $tmp_deplibs in
 	  *[!\	\ ]*)
 	    echo
-	    if test "X$deplibs_check_method" = "Xnone"; then
+	    if test none = "$deplibs_check_method"; then
 	      echo "*** Warning: inter-library dependencies are not supported in this platform."
 	    else
 	      echo "*** Warning: inter-library dependencies are not known to be supported."
@@ -7953,8 +9439,8 @@ EOF
 	  ;;
 	esac
 
-	if test "$droppeddeps" = yes; then
-	  if test "$module" = yes; then
+	if test yes = "$droppeddeps"; then
+	  if test yes = "$module"; then
 	    echo
 	    echo "*** Warning: libtool could not satisfy all declared inter-library"
 	    $ECHO "*** dependencies of module $libname.  Therefore, libtool will create"
@@ -7963,12 +9449,12 @@ EOF
 	    if test -z "$global_symbol_pipe"; then
 	      echo
 	      echo "*** However, this would only work if libtool was able to extract symbol"
-	      echo "*** lists from a program, using \`nm' or equivalent, but libtool could"
+	      echo "*** lists from a program, using 'nm' or equivalent, but libtool could"
 	      echo "*** not find such a program.  So, this module is probably useless."
-	      echo "*** \`nm' from GNU binutils and a full rebuild may help."
+	      echo "*** 'nm' from GNU binutils and a full rebuild may help."
 	    fi
-	    if test "$build_old_libs" = no; then
-	      oldlibs="$output_objdir/$libname.$libext"
+	    if test no = "$build_old_libs"; then
+	      oldlibs=$output_objdir/$libname.$libext
 	      build_libtool_libs=module
 	      build_old_libs=yes
 	    else
@@ -7979,14 +9465,14 @@ EOF
 	    echo "*** automatically added whenever a program is linked with this library"
 	    echo "*** or is declared to -dlopen it."
 
-	    if test "$allow_undefined" = no; then
+	    if test no = "$allow_undefined"; then
 	      echo
 	      echo "*** Since this library must not contain undefined symbols,"
 	      echo "*** because either the platform does not support them or"
 	      echo "*** it was explicitly requested with -no-undefined,"
 	      echo "*** libtool will only create a static version of it."
-	      if test "$build_old_libs" = no; then
-		oldlibs="$output_objdir/$libname.$libext"
+	      if test no = "$build_old_libs"; then
+		oldlibs=$output_objdir/$libname.$libext
 		build_libtool_libs=module
 		build_old_libs=yes
 	      else
@@ -8032,7 +9518,7 @@ EOF
 	*) func_append new_libs " $deplib" ;;
 	esac
       done
-      deplibs="$new_libs"
+      deplibs=$new_libs
 
       # All the library-specific variables (install_libdir is set above).
       library_names=
@@ -8040,25 +9526,25 @@ EOF
       dlname=
 
       # Test again, we may have decided not to build it any more
-      if test "$build_libtool_libs" = yes; then
-	# Remove ${wl} instances when linking with ld.
+      if test yes = "$build_libtool_libs"; then
+	# Remove $wl instances when linking with ld.
 	# FIXME: should test the right _cmds variable.
 	case $archive_cmds in
 	  *\$LD\ *) wl= ;;
         esac
-	if test "$hardcode_into_libs" = yes; then
+	if test yes = "$hardcode_into_libs"; then
 	  # Hardcode the library paths
 	  hardcode_libdirs=
 	  dep_rpath=
-	  rpath="$finalize_rpath"
-	  test "$opt_mode" != relink && rpath="$compile_rpath$rpath"
+	  rpath=$finalize_rpath
+	  test relink = "$opt_mode" || rpath=$compile_rpath$rpath
 	  for libdir in $rpath; do
 	    if test -n "$hardcode_libdir_flag_spec"; then
 	      if test -n "$hardcode_libdir_separator"; then
 		func_replace_sysroot "$libdir"
 		libdir=$func_replace_sysroot_result
 		if test -z "$hardcode_libdirs"; then
-		  hardcode_libdirs="$libdir"
+		  hardcode_libdirs=$libdir
 		else
 		  # Just accumulate the unique libdirs.
 		  case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
@@ -8083,7 +9569,7 @@ EOF
 	  # Substitute the hardcoded libdirs into the rpath.
 	  if test -n "$hardcode_libdir_separator" &&
 	     test -n "$hardcode_libdirs"; then
-	    libdir="$hardcode_libdirs"
+	    libdir=$hardcode_libdirs
 	    eval "dep_rpath=\"$hardcode_libdir_flag_spec\""
 	  fi
 	  if test -n "$runpath_var" && test -n "$perm_rpath"; then
@@ -8097,8 +9583,8 @@ EOF
 	  test -n "$dep_rpath" && deplibs="$dep_rpath $deplibs"
 	fi
 
-	shlibpath="$finalize_shlibpath"
-	test "$opt_mode" != relink && shlibpath="$compile_shlibpath$shlibpath"
+	shlibpath=$finalize_shlibpath
+	test relink = "$opt_mode" || shlibpath=$compile_shlibpath$shlibpath
 	if test -n "$shlibpath"; then
 	  eval "$shlibpath_var='$shlibpath\$$shlibpath_var'; export $shlibpath_var"
 	fi
@@ -8108,19 +9594,19 @@ EOF
 	eval library_names=\"$library_names_spec\"
 	set dummy $library_names
 	shift
-	realname="$1"
+	realname=$1
 	shift
 
 	if test -n "$soname_spec"; then
 	  eval soname=\"$soname_spec\"
 	else
-	  soname="$realname"
+	  soname=$realname
 	fi
 	if test -z "$dlname"; then
 	  dlname=$soname
 	fi
 
-	lib="$output_objdir/$realname"
+	lib=$output_objdir/$realname
 	linknames=
 	for link
 	do
@@ -8134,7 +9620,7 @@ EOF
 	delfiles=
 	if test -n "$export_symbols" && test -n "$include_expsyms"; then
 	  $opt_dry_run || cp "$export_symbols" "$output_objdir/$libname.uexp"
-	  export_symbols="$output_objdir/$libname.uexp"
+	  export_symbols=$output_objdir/$libname.uexp
 	  func_append delfiles " $export_symbols"
 	fi
 
@@ -8143,31 +9629,31 @@ EOF
 	cygwin* | mingw* | cegcc*)
 	  if test -n "$export_symbols" && test -z "$export_symbols_regex"; then
 	    # exporting using user supplied symfile
-	    if test "x`$SED 1q $export_symbols`" != xEXPORTS; then
+	    func_dll_def_p "$export_symbols" || {
 	      # and it's NOT already a .def file. Must figure out
 	      # which of the given symbols are data symbols and tag
 	      # them as such. So, trigger use of export_symbols_cmds.
 	      # export_symbols gets reassigned inside the "prepare
 	      # the list of exported symbols" if statement, so the
 	      # include_expsyms logic still works.
-	      orig_export_symbols="$export_symbols"
+	      orig_export_symbols=$export_symbols
 	      export_symbols=
 	      always_export_symbols=yes
-	    fi
+	    }
 	  fi
 	  ;;
 	esac
 
 	# Prepare the list of exported symbols
 	if test -z "$export_symbols"; then
-	  if test "$always_export_symbols" = yes || test -n "$export_symbols_regex"; then
-	    func_verbose "generating symbol list for \`$libname.la'"
-	    export_symbols="$output_objdir/$libname.exp"
+	  if test yes = "$always_export_symbols" || test -n "$export_symbols_regex"; then
+	    func_verbose "generating symbol list for '$libname.la'"
+	    export_symbols=$output_objdir/$libname.exp
 	    $opt_dry_run || $RM $export_symbols
 	    cmds=$export_symbols_cmds
-	    save_ifs="$IFS"; IFS='~'
+	    save_ifs=$IFS; IFS='~'
 	    for cmd1 in $cmds; do
-	      IFS="$save_ifs"
+	      IFS=$save_ifs
 	      # Take the normal branch if the nm_file_list_spec branch
 	      # doesn't work or if tool conversion is not needed.
 	      case $nm_file_list_spec~$to_tool_file_cmd in
@@ -8181,7 +9667,7 @@ EOF
 		  try_normal_branch=no
 		  ;;
 	      esac
-	      if test "$try_normal_branch" = yes \
+	      if test yes = "$try_normal_branch" \
 		 && { test "$len" -lt "$max_cmd_len" \
 		      || test "$max_cmd_len" -le -1; }
 	      then
@@ -8192,7 +9678,7 @@ EOF
 		output_la=$func_basename_result
 		save_libobjs=$libobjs
 		save_output=$output
-		output=${output_objdir}/${output_la}.nm
+		output=$output_objdir/$output_la.nm
 		func_to_tool_file "$output"
 		libobjs=$nm_file_list_spec$func_to_tool_file_result
 		func_append delfiles " $output"
@@ -8215,8 +9701,8 @@ EOF
 		break
 	      fi
 	    done
-	    IFS="$save_ifs"
-	    if test -n "$export_symbols_regex" && test "X$skipped_export" != "X:"; then
+	    IFS=$save_ifs
+	    if test -n "$export_symbols_regex" && test : != "$skipped_export"; then
 	      func_show_eval '$EGREP -e "$export_symbols_regex" "$export_symbols" > "${export_symbols}T"'
 	      func_show_eval '$MV "${export_symbols}T" "$export_symbols"'
 	    fi
@@ -8224,16 +9710,16 @@ EOF
 	fi
 
 	if test -n "$export_symbols" && test -n "$include_expsyms"; then
-	  tmp_export_symbols="$export_symbols"
-	  test -n "$orig_export_symbols" && tmp_export_symbols="$orig_export_symbols"
+	  tmp_export_symbols=$export_symbols
+	  test -n "$orig_export_symbols" && tmp_export_symbols=$orig_export_symbols
 	  $opt_dry_run || eval '$ECHO "$include_expsyms" | $SP2NL >> "$tmp_export_symbols"'
 	fi
 
-	if test "X$skipped_export" != "X:" && test -n "$orig_export_symbols"; then
+	if test : != "$skipped_export" && test -n "$orig_export_symbols"; then
 	  # The given exports_symbols file has to be filtered, so filter it.
-	  func_verbose "filter symbol list for \`$libname.la' to tag DATA exports"
+	  func_verbose "filter symbol list for '$libname.la' to tag DATA exports"
 	  # FIXME: $output_objdir/$libname.filter potentially contains lots of
-	  # 's' commands which not all seds can handle. GNU sed should be fine
+	  # 's' commands, which not all seds can handle. GNU sed should be fine
 	  # though. Also, the filter scales superlinearly with the number of
 	  # global variables. join(1) would be nice here, but unfortunately
 	  # isn't a blessed tool.
@@ -8252,11 +9738,11 @@ EOF
 	    ;;
 	  esac
 	done
-	deplibs="$tmp_deplibs"
+	deplibs=$tmp_deplibs
 
 	if test -n "$convenience"; then
 	  if test -n "$whole_archive_flag_spec" &&
-	    test "$compiler_needs_object" = yes &&
+	    test yes = "$compiler_needs_object" &&
 	    test -z "$libobjs"; then
 	    # extract the archives, so we have objects to list.
 	    # TODO: could optimize this to just extract one archive.
@@ -8267,7 +9753,7 @@ EOF
 	    eval libobjs=\"\$libobjs $whole_archive_flag_spec\"
 	    test "X$libobjs" = "X " && libobjs=
 	  else
-	    gentop="$output_objdir/${outputname}x"
+	    gentop=$output_objdir/${outputname}x
 	    func_append generated " $gentop"
 
 	    func_extract_archives $gentop $convenience
@@ -8276,18 +9762,18 @@ EOF
 	  fi
 	fi
 
-	if test "$thread_safe" = yes && test -n "$thread_safe_flag_spec"; then
+	if test yes = "$thread_safe" && test -n "$thread_safe_flag_spec"; then
 	  eval flag=\"$thread_safe_flag_spec\"
 	  func_append linker_flags " $flag"
 	fi
 
 	# Make a backup of the uninstalled library when relinking
-	if test "$opt_mode" = relink; then
+	if test relink = "$opt_mode"; then
 	  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}U && $MV $realname ${realname}U)' || exit $?
 	fi
 
 	# Do each of the archive commands.
-	if test "$module" = yes && test -n "$module_cmds" ; then
+	if test yes = "$module" && test -n "$module_cmds"; then
 	  if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
 	    eval test_cmds=\"$module_expsym_cmds\"
 	    cmds=$module_expsym_cmds
@@ -8305,7 +9791,7 @@ EOF
 	  fi
 	fi
 
-	if test "X$skipped_export" != "X:" &&
+	if test : != "$skipped_export" &&
 	   func_len " $test_cmds" &&
 	   len=$func_len_result &&
 	   test "$len" -lt "$max_cmd_len" || test "$max_cmd_len" -le -1; then
@@ -8338,8 +9824,8 @@ EOF
 	  last_robj=
 	  k=1
 
-	  if test -n "$save_libobjs" && test "X$skipped_export" != "X:" && test "$with_gnu_ld" = yes; then
-	    output=${output_objdir}/${output_la}.lnkscript
+	  if test -n "$save_libobjs" && test : != "$skipped_export" && test yes = "$with_gnu_ld"; then
+	    output=$output_objdir/$output_la.lnkscript
 	    func_verbose "creating GNU ld script: $output"
 	    echo 'INPUT (' > $output
 	    for obj in $save_libobjs
@@ -8351,14 +9837,14 @@ EOF
 	    func_append delfiles " $output"
 	    func_to_tool_file "$output"
 	    output=$func_to_tool_file_result
-	  elif test -n "$save_libobjs" && test "X$skipped_export" != "X:" && test "X$file_list_spec" != X; then
-	    output=${output_objdir}/${output_la}.lnk
+	  elif test -n "$save_libobjs" && test : != "$skipped_export" && test -n "$file_list_spec"; then
+	    output=$output_objdir/$output_la.lnk
 	    func_verbose "creating linker input file list: $output"
 	    : > $output
 	    set x $save_libobjs
 	    shift
 	    firstobj=
-	    if test "$compiler_needs_object" = yes; then
+	    if test yes = "$compiler_needs_object"; then
 	      firstobj="$1 "
 	      shift
 	    fi
@@ -8373,7 +9859,7 @@ EOF
 	  else
 	    if test -n "$save_libobjs"; then
 	      func_verbose "creating reloadable object files..."
-	      output=$output_objdir/$output_la-${k}.$objext
+	      output=$output_objdir/$output_la-$k.$objext
 	      eval test_cmds=\"$reload_cmds\"
 	      func_len " $test_cmds"
 	      len0=$func_len_result
@@ -8385,13 +9871,13 @@ EOF
 		func_len " $obj"
 		func_arith $len + $func_len_result
 		len=$func_arith_result
-		if test "X$objlist" = X ||
+		if test -z "$objlist" ||
 		   test "$len" -lt "$max_cmd_len"; then
 		  func_append objlist " $obj"
 		else
 		  # The command $test_cmds is almost too long, add a
 		  # command to the queue.
-		  if test "$k" -eq 1 ; then
+		  if test 1 -eq "$k"; then
 		    # The first file doesn't have a previous command to add.
 		    reload_objs=$objlist
 		    eval concat_cmds=\"$reload_cmds\"
@@ -8401,10 +9887,10 @@ EOF
 		    reload_objs="$objlist $last_robj"
 		    eval concat_cmds=\"\$concat_cmds~$reload_cmds~\$RM $last_robj\"
 		  fi
-		  last_robj=$output_objdir/$output_la-${k}.$objext
+		  last_robj=$output_objdir/$output_la-$k.$objext
 		  func_arith $k + 1
 		  k=$func_arith_result
-		  output=$output_objdir/$output_la-${k}.$objext
+		  output=$output_objdir/$output_la-$k.$objext
 		  objlist=" $obj"
 		  func_len " $last_robj"
 		  func_arith $len0 + $func_len_result
@@ -8416,9 +9902,9 @@ EOF
 	      # files will link in the last one created.
 	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
 	      reload_objs="$objlist $last_robj"
-	      eval concat_cmds=\"\${concat_cmds}$reload_cmds\"
+	      eval concat_cmds=\"\$concat_cmds$reload_cmds\"
 	      if test -n "$last_robj"; then
-	        eval concat_cmds=\"\${concat_cmds}~\$RM $last_robj\"
+	        eval concat_cmds=\"\$concat_cmds~\$RM $last_robj\"
 	      fi
 	      func_append delfiles " $output"
 
@@ -8426,9 +9912,9 @@ EOF
 	      output=
 	    fi
 
-	    if ${skipped_export-false}; then
-	      func_verbose "generating symbol list for \`$libname.la'"
-	      export_symbols="$output_objdir/$libname.exp"
+	    ${skipped_export-false} && {
+	      func_verbose "generating symbol list for '$libname.la'"
+	      export_symbols=$output_objdir/$libname.exp
 	      $opt_dry_run || $RM $export_symbols
 	      libobjs=$output
 	      # Append the command to create the export file.
@@ -8437,16 +9923,16 @@ EOF
 	      if test -n "$last_robj"; then
 		eval concat_cmds=\"\$concat_cmds~\$RM $last_robj\"
 	      fi
-	    fi
+	    }
 
 	    test -n "$save_libobjs" &&
 	      func_verbose "creating a temporary reloadable object file: $output"
 
 	    # Loop through the commands generated above and execute them.
-	    save_ifs="$IFS"; IFS='~'
+	    save_ifs=$IFS; IFS='~'
 	    for cmd in $concat_cmds; do
-	      IFS="$save_ifs"
-	      $opt_silent || {
+	      IFS=$save_ifs
+	      $opt_quiet || {
 		  func_quote_for_expand "$cmd"
 		  eval "func_echo $func_quote_for_expand_result"
 	      }
@@ -8454,7 +9940,7 @@ EOF
 		lt_exit=$?
 
 		# Restore the uninstalled library and exit
-		if test "$opt_mode" = relink; then
+		if test relink = "$opt_mode"; then
 		  ( cd "$output_objdir" && \
 		    $RM "${realname}T" && \
 		    $MV "${realname}U" "$realname" )
@@ -8463,7 +9949,7 @@ EOF
 		exit $lt_exit
 	      }
 	    done
-	    IFS="$save_ifs"
+	    IFS=$save_ifs
 
 	    if test -n "$export_symbols_regex" && ${skipped_export-false}; then
 	      func_show_eval '$EGREP -e "$export_symbols_regex" "$export_symbols" > "${export_symbols}T"'
@@ -8471,18 +9957,18 @@ EOF
 	    fi
 	  fi
 
-          if ${skipped_export-false}; then
+          ${skipped_export-false} && {
 	    if test -n "$export_symbols" && test -n "$include_expsyms"; then
-	      tmp_export_symbols="$export_symbols"
-	      test -n "$orig_export_symbols" && tmp_export_symbols="$orig_export_symbols"
+	      tmp_export_symbols=$export_symbols
+	      test -n "$orig_export_symbols" && tmp_export_symbols=$orig_export_symbols
 	      $opt_dry_run || eval '$ECHO "$include_expsyms" | $SP2NL >> "$tmp_export_symbols"'
 	    fi
 
 	    if test -n "$orig_export_symbols"; then
 	      # The given exports_symbols file has to be filtered, so filter it.
-	      func_verbose "filter symbol list for \`$libname.la' to tag DATA exports"
+	      func_verbose "filter symbol list for '$libname.la' to tag DATA exports"
 	      # FIXME: $output_objdir/$libname.filter potentially contains lots of
-	      # 's' commands which not all seds can handle. GNU sed should be fine
+	      # 's' commands, which not all seds can handle. GNU sed should be fine
 	      # though. Also, the filter scales superlinearly with the number of
 	      # global variables. join(1) would be nice here, but unfortunately
 	      # isn't a blessed tool.
@@ -8491,7 +9977,7 @@ EOF
 	      export_symbols=$output_objdir/$libname.def
 	      $opt_dry_run || $SED -f $output_objdir/$libname.filter < $orig_export_symbols > $export_symbols
 	    fi
-	  fi
+	  }
 
 	  libobjs=$output
 	  # Restore the value of output.
@@ -8505,7 +9991,7 @@ EOF
 	  # value of $libobjs for piecewise linking.
 
 	  # Do each of the archive commands.
-	  if test "$module" = yes && test -n "$module_cmds" ; then
+	  if test yes = "$module" && test -n "$module_cmds"; then
 	    if test -n "$export_symbols" && test -n "$module_expsym_cmds"; then
 	      cmds=$module_expsym_cmds
 	    else
@@ -8527,7 +10013,7 @@ EOF
 
 	# Add any objects from preloaded convenience libraries
 	if test -n "$dlprefiles"; then
-	  gentop="$output_objdir/${outputname}x"
+	  gentop=$output_objdir/${outputname}x
 	  func_append generated " $gentop"
 
 	  func_extract_archives $gentop $dlprefiles
@@ -8535,11 +10021,12 @@ EOF
 	  test "X$libobjs" = "X " && libobjs=
 	fi
 
-	save_ifs="$IFS"; IFS='~'
+	save_ifs=$IFS; IFS='~'
 	for cmd in $cmds; do
-	  IFS="$save_ifs"
+	  IFS=$sp$nl
 	  eval cmd=\"$cmd\"
-	  $opt_silent || {
+	  IFS=$save_ifs
+	  $opt_quiet || {
 	    func_quote_for_expand "$cmd"
 	    eval "func_echo $func_quote_for_expand_result"
 	  }
@@ -8547,7 +10034,7 @@ EOF
 	    lt_exit=$?
 
 	    # Restore the uninstalled library and exit
-	    if test "$opt_mode" = relink; then
+	    if test relink = "$opt_mode"; then
 	      ( cd "$output_objdir" && \
 	        $RM "${realname}T" && \
 		$MV "${realname}U" "$realname" )
@@ -8556,10 +10043,10 @@ EOF
 	    exit $lt_exit
 	  }
 	done
-	IFS="$save_ifs"
+	IFS=$save_ifs
 
 	# Restore the uninstalled library and exit
-	if test "$opt_mode" = relink; then
+	if test relink = "$opt_mode"; then
 	  $opt_dry_run || eval '(cd $output_objdir && $RM ${realname}T && $MV $realname ${realname}T && $MV ${realname}U $realname)' || exit $?
 
 	  if test -n "$convenience"; then
@@ -8579,39 +10066,39 @@ EOF
 	done
 
 	# If -module or -export-dynamic was specified, set the dlname.
-	if test "$module" = yes || test "$export_dynamic" = yes; then
+	if test yes = "$module" || test yes = "$export_dynamic"; then
 	  # On all known operating systems, these are identical.
-	  dlname="$soname"
+	  dlname=$soname
 	fi
       fi
       ;;
 
     obj)
-      if test -n "$dlfiles$dlprefiles" || test "$dlself" != no; then
-	func_warning "\`-dlopen' is ignored for objects"
+      if test -n "$dlfiles$dlprefiles" || test no != "$dlself"; then
+	func_warning "'-dlopen' is ignored for objects"
       fi
 
       case " $deplibs" in
       *\ -l* | *\ -L*)
-	func_warning "\`-l' and \`-L' are ignored for objects" ;;
+	func_warning "'-l' and '-L' are ignored for objects" ;;
       esac
 
       test -n "$rpath" && \
-	func_warning "\`-rpath' is ignored for objects"
+	func_warning "'-rpath' is ignored for objects"
 
       test -n "$xrpath" && \
-	func_warning "\`-R' is ignored for objects"
+	func_warning "'-R' is ignored for objects"
 
       test -n "$vinfo" && \
-	func_warning "\`-version-info' is ignored for objects"
+	func_warning "'-version-info' is ignored for objects"
 
       test -n "$release" && \
-	func_warning "\`-release' is ignored for objects"
+	func_warning "'-release' is ignored for objects"
 
       case $output in
       *.lo)
 	test -n "$objs$old_deplibs" && \
-	  func_fatal_error "cannot build library object \`$output' from non-libtool objects"
+	  func_fatal_error "cannot build library object '$output' from non-libtool objects"
 
 	libobj=$output
 	func_lo2o "$libobj"
@@ -8619,7 +10106,7 @@ EOF
 	;;
       *)
 	libobj=
-	obj="$output"
+	obj=$output
 	;;
       esac
 
@@ -8632,17 +10119,19 @@ EOF
       # the extraction.
       reload_conv_objs=
       gentop=
-      # reload_cmds runs $LD directly, so let us get rid of
-      # -Wl from whole_archive_flag_spec and hope we can get by with
-      # turning comma into space..
-      wl=
-
+      # if reload_cmds runs $LD directly, get rid of -Wl from
+      # whole_archive_flag_spec and hope we can get by with turning comma
+      # into space.
+      case $reload_cmds in
+        *\$LD[\ \$]*) wl= ;;
+      esac
       if test -n "$convenience"; then
 	if test -n "$whole_archive_flag_spec"; then
 	  eval tmp_whole_archive_flags=\"$whole_archive_flag_spec\"
-	  reload_conv_objs=$reload_objs\ `$ECHO "$tmp_whole_archive_flags" | $SED 's|,| |g'`
+	  test -n "$wl" || tmp_whole_archive_flags=`$ECHO "$tmp_whole_archive_flags" | $SED 's|,| |g'`
+	  reload_conv_objs=$reload_objs\ $tmp_whole_archive_flags
 	else
-	  gentop="$output_objdir/${obj}x"
+	  gentop=$output_objdir/${obj}x
 	  func_append generated " $gentop"
 
 	  func_extract_archives $gentop $convenience
@@ -8651,12 +10140,12 @@ EOF
       fi
 
       # If we're not building shared, we need to use non_pic_objs
-      test "$build_libtool_libs" != yes && libobjs="$non_pic_objects"
+      test yes = "$build_libtool_libs" || libobjs=$non_pic_objects
 
       # Create the old-style object.
-      reload_objs="$objs$old_deplibs "`$ECHO "$libobjs" | $SP2NL | $SED "/\.${libext}$/d; /\.lib$/d; $lo2o" | $NL2SP`" $reload_conv_objs" ### testsuite: skip nested quoting test
+      reload_objs=$objs$old_deplibs' '`$ECHO "$libobjs" | $SP2NL | $SED "/\.$libext$/d; /\.lib$/d; $lo2o" | $NL2SP`' '$reload_conv_objs
 
-      output="$obj"
+      output=$obj
       func_execute_cmds "$reload_cmds" 'exit $?'
 
       # Exit if we aren't doing a library object file.
@@ -8668,7 +10157,7 @@ EOF
 	exit $EXIT_SUCCESS
       fi
 
-      if test "$build_libtool_libs" != yes; then
+      test yes = "$build_libtool_libs" || {
 	if test -n "$gentop"; then
 	  func_show_eval '${RM}r "$gentop"'
 	fi
@@ -8678,12 +10167,12 @@ EOF
 	# $show "echo timestamp > $libobj"
 	# $opt_dry_run || eval "echo timestamp > $libobj" || exit $?
 	exit $EXIT_SUCCESS
-      fi
+      }
 
-      if test -n "$pic_flag" || test "$pic_mode" != default; then
+      if test -n "$pic_flag" || test default != "$pic_mode"; then
 	# Only do commands if we really have different PIC objects.
 	reload_objs="$libobjs $reload_conv_objs"
-	output="$libobj"
+	output=$libobj
 	func_execute_cmds "$reload_cmds" 'exit $?'
       fi
 
@@ -8700,16 +10189,14 @@ EOF
 	          output=$func_stripname_result.exe;;
       esac
       test -n "$vinfo" && \
-	func_warning "\`-version-info' is ignored for programs"
+	func_warning "'-version-info' is ignored for programs"
 
       test -n "$release" && \
-	func_warning "\`-release' is ignored for programs"
+	func_warning "'-release' is ignored for programs"
 
-      test "$preload" = yes \
-        && test "$dlopen_support" = unknown \
-	&& test "$dlopen_self" = unknown \
-	&& test "$dlopen_self_static" = unknown && \
-	  func_warning "\`LT_INIT([dlopen])' not used. Assuming no dlopen support."
+      $preload \
+	&& test unknown,unknown,unknown = "$dlopen_support,$dlopen_self,$dlopen_self_static" \
+	&& func_warning "'LT_INIT([dlopen])' not used. Assuming no dlopen support."
 
       case $host in
       *-*-rhapsody* | *-*-darwin1.[012])
@@ -8723,11 +10210,11 @@ EOF
       *-*-darwin*)
 	# Don't allow lazy linking, it breaks C++ global constructors
 	# But is supposedly fixed on 10.4 or later (yay!).
-	if test "$tagname" = CXX ; then
+	if test CXX = "$tagname"; then
 	  case ${MACOSX_DEPLOYMENT_TARGET-10.0} in
 	    10.[0123])
-	      func_append compile_command " ${wl}-bind_at_load"
-	      func_append finalize_command " ${wl}-bind_at_load"
+	      func_append compile_command " $wl-bind_at_load"
+	      func_append finalize_command " $wl-bind_at_load"
 	    ;;
 	  esac
 	fi
@@ -8763,7 +10250,7 @@ EOF
 	*) func_append new_libs " $deplib" ;;
 	esac
       done
-      compile_deplibs="$new_libs"
+      compile_deplibs=$new_libs
 
 
       func_append compile_command " $compile_deplibs"
@@ -8787,7 +10274,7 @@ EOF
 	if test -n "$hardcode_libdir_flag_spec"; then
 	  if test -n "$hardcode_libdir_separator"; then
 	    if test -z "$hardcode_libdirs"; then
-	      hardcode_libdirs="$libdir"
+	      hardcode_libdirs=$libdir
 	    else
 	      # Just accumulate the unique libdirs.
 	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
@@ -8810,7 +10297,7 @@ EOF
 	fi
 	case $host in
 	*-*-cygwin* | *-*-mingw* | *-*-pw32* | *-*-os2* | *-cegcc*)
-	  testbindir=`${ECHO} "$libdir" | ${SED} -e 's*/lib$*/bin*'`
+	  testbindir=`$ECHO "$libdir" | $SED -e 's*/lib$*/bin*'`
 	  case :$dllsearchpath: in
 	  *":$libdir:"*) ;;
 	  ::) dllsearchpath=$libdir;;
@@ -8827,10 +10314,10 @@ EOF
       # Substitute the hardcoded libdirs into the rpath.
       if test -n "$hardcode_libdir_separator" &&
 	 test -n "$hardcode_libdirs"; then
-	libdir="$hardcode_libdirs"
+	libdir=$hardcode_libdirs
 	eval rpath=\" $hardcode_libdir_flag_spec\"
       fi
-      compile_rpath="$rpath"
+      compile_rpath=$rpath
 
       rpath=
       hardcode_libdirs=
@@ -8838,7 +10325,7 @@ EOF
 	if test -n "$hardcode_libdir_flag_spec"; then
 	  if test -n "$hardcode_libdir_separator"; then
 	    if test -z "$hardcode_libdirs"; then
-	      hardcode_libdirs="$libdir"
+	      hardcode_libdirs=$libdir
 	    else
 	      # Just accumulate the unique libdirs.
 	      case $hardcode_libdir_separator$hardcode_libdirs$hardcode_libdir_separator in
@@ -8863,45 +10350,43 @@ EOF
       # Substitute the hardcoded libdirs into the rpath.
       if test -n "$hardcode_libdir_separator" &&
 	 test -n "$hardcode_libdirs"; then
-	libdir="$hardcode_libdirs"
+	libdir=$hardcode_libdirs
 	eval rpath=\" $hardcode_libdir_flag_spec\"
       fi
-      finalize_rpath="$rpath"
+      finalize_rpath=$rpath
 
-      if test -n "$libobjs" && test "$build_old_libs" = yes; then
+      if test -n "$libobjs" && test yes = "$build_old_libs"; then
 	# Transform all the library objects into standard objects.
 	compile_command=`$ECHO "$compile_command" | $SP2NL | $SED "$lo2o" | $NL2SP`
 	finalize_command=`$ECHO "$finalize_command" | $SP2NL | $SED "$lo2o" | $NL2SP`
       fi
 
-      func_generate_dlsyms "$outputname" "@PROGRAM@" "no"
+      func_generate_dlsyms "$outputname" "@PROGRAM@" false
 
       # template prelinking step
       if test -n "$prelink_cmds"; then
 	func_execute_cmds "$prelink_cmds" 'exit $?'
       fi
 
-      wrappers_required=yes
+      wrappers_required=:
       case $host in
       *cegcc* | *mingw32ce*)
         # Disable wrappers for cegcc and mingw32ce hosts, we are cross compiling anyway.
-        wrappers_required=no
+        wrappers_required=false
         ;;
       *cygwin* | *mingw* )
-        if test "$build_libtool_libs" != yes; then
-          wrappers_required=no
-        fi
+        test yes = "$build_libtool_libs" || wrappers_required=false
         ;;
       *)
-        if test "$need_relink" = no || test "$build_libtool_libs" != yes; then
-          wrappers_required=no
+        if test no = "$need_relink" || test yes != "$build_libtool_libs"; then
+          wrappers_required=false
         fi
         ;;
       esac
-      if test "$wrappers_required" = no; then
+      $wrappers_required || {
 	# Replace the output file specification.
 	compile_command=`$ECHO "$compile_command" | $SED 's%@OUTPUT@%'"$output"'%g'`
-	link_command="$compile_command$compile_rpath"
+	link_command=$compile_command$compile_rpath
 
 	# We have no uninstalled library dependencies, so finalize right now.
 	exit_status=0
@@ -8914,12 +10399,12 @@ EOF
 	fi
 
 	# Delete the generated files.
-	if test -f "$output_objdir/${outputname}S.${objext}"; then
-	  func_show_eval '$RM "$output_objdir/${outputname}S.${objext}"'
+	if test -f "$output_objdir/${outputname}S.$objext"; then
+	  func_show_eval '$RM "$output_objdir/${outputname}S.$objext"'
 	fi
 
 	exit $exit_status
-      fi
+      }
 
       if test -n "$compile_shlibpath$finalize_shlibpath"; then
 	compile_command="$shlibpath_var=\"$compile_shlibpath$finalize_shlibpath\$$shlibpath_var\" $compile_command"
@@ -8949,9 +10434,9 @@ EOF
 	fi
       fi
 
-      if test "$no_install" = yes; then
+      if test yes = "$no_install"; then
 	# We don't need to create a wrapper script.
-	link_command="$compile_var$compile_command$compile_rpath"
+	link_command=$compile_var$compile_command$compile_rpath
 	# Replace the output file specification.
 	link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output"'%g'`
 	# Delete the old output file.
@@ -8968,27 +10453,28 @@ EOF
 	exit $EXIT_SUCCESS
       fi
 
-      if test "$hardcode_action" = relink; then
-	# Fast installation is not supported
-	link_command="$compile_var$compile_command$compile_rpath"
-	relink_command="$finalize_var$finalize_command$finalize_rpath"
+      case $hardcode_action,$fast_install in
+        relink,*)
+	  # Fast installation is not supported
+	  link_command=$compile_var$compile_command$compile_rpath
+	  relink_command=$finalize_var$finalize_command$finalize_rpath
 
-	func_warning "this platform does not like uninstalled shared libraries"
-	func_warning "\`$output' will be relinked during installation"
-      else
-	if test "$fast_install" != no; then
-	  link_command="$finalize_var$compile_command$finalize_rpath"
-	  if test "$fast_install" = yes; then
-	    relink_command=`$ECHO "$compile_var$compile_command$compile_rpath" | $SED 's%@OUTPUT@%\$progdir/\$file%g'`
-	  else
-	    # fast_install is set to needless
-	    relink_command=
-	  fi
-	else
-	  link_command="$compile_var$compile_command$compile_rpath"
-	  relink_command="$finalize_var$finalize_command$finalize_rpath"
-	fi
-      fi
+	  func_warning "this platform does not like uninstalled shared libraries"
+	  func_warning "'$output' will be relinked during installation"
+	  ;;
+        *,yes)
+	  link_command=$finalize_var$compile_command$finalize_rpath
+	  relink_command=`$ECHO "$compile_var$compile_command$compile_rpath" | $SED 's%@OUTPUT@%\$progdir/\$file%g'`
+          ;;
+	*,no)
+	  link_command=$compile_var$compile_command$compile_rpath
+	  relink_command=$finalize_var$finalize_command$finalize_rpath
+          ;;
+	*,needless)
+	  link_command=$finalize_var$compile_command$finalize_rpath
+	  relink_command=
+          ;;
+      esac
 
       # Replace the output file specification.
       link_command=`$ECHO "$link_command" | $SED 's%@OUTPUT@%'"$output_objdir/$outputname"'%g'`
@@ -9045,8 +10531,8 @@ EOF
 	    func_dirname_and_basename "$output" "" "."
 	    output_name=$func_basename_result
 	    output_path=$func_dirname_result
-	    cwrappersource="$output_path/$objdir/lt-$output_name.c"
-	    cwrapper="$output_path/$output_name.exe"
+	    cwrappersource=$output_path/$objdir/lt-$output_name.c
+	    cwrapper=$output_path/$output_name.exe
 	    $RM $cwrappersource $cwrapper
 	    trap "$RM $cwrappersource $cwrapper; exit $EXIT_FAILURE" 1 2 15
 
@@ -9067,7 +10553,7 @@ EOF
 	    trap "$RM $func_ltwrapper_scriptname_result; exit $EXIT_FAILURE" 1 2 15
 	    $opt_dry_run || {
 	      # note: this script will not be executed, so do not chmod.
-	      if test "x$build" = "x$host" ; then
+	      if test "x$build" = "x$host"; then
 		$cwrapper --lt-dump-script > $func_ltwrapper_scriptname_result
 	      else
 		func_emit_wrapper no > $func_ltwrapper_scriptname_result
@@ -9090,25 +10576,27 @@ EOF
     # See if we need to build an old-fashioned archive.
     for oldlib in $oldlibs; do
 
-      if test "$build_libtool_libs" = convenience; then
-	oldobjs="$libobjs_save $symfileobj"
-	addlibs="$convenience"
-	build_libtool_libs=no
-      else
-	if test "$build_libtool_libs" = module; then
-	  oldobjs="$libobjs_save"
+      case $build_libtool_libs in
+        convenience)
+	  oldobjs="$libobjs_save $symfileobj"
+	  addlibs=$convenience
 	  build_libtool_libs=no
-	else
+	  ;;
+	module)
+	  oldobjs=$libobjs_save
+	  addlibs=$old_convenience
+	  build_libtool_libs=no
+          ;;
+	*)
 	  oldobjs="$old_deplibs $non_pic_objects"
-	  if test "$preload" = yes && test -f "$symfileobj"; then
-	    func_append oldobjs " $symfileobj"
-	  fi
-	fi
-	addlibs="$old_convenience"
-      fi
+	  $preload && test -f "$symfileobj" \
+	    && func_append oldobjs " $symfileobj"
+	  addlibs=$old_convenience
+	  ;;
+      esac
 
       if test -n "$addlibs"; then
-	gentop="$output_objdir/${outputname}x"
+	gentop=$output_objdir/${outputname}x
 	func_append generated " $gentop"
 
 	func_extract_archives $gentop $addlibs
@@ -9116,13 +10604,13 @@ EOF
       fi
 
       # Do each command in the archive commands.
-      if test -n "$old_archive_from_new_cmds" && test "$build_libtool_libs" = yes; then
+      if test -n "$old_archive_from_new_cmds" && test yes = "$build_libtool_libs"; then
 	cmds=$old_archive_from_new_cmds
       else
 
 	# Add any objects from preloaded convenience libraries
 	if test -n "$dlprefiles"; then
-	  gentop="$output_objdir/${outputname}x"
+	  gentop=$output_objdir/${outputname}x
 	  func_append generated " $gentop"
 
 	  func_extract_archives $gentop $dlprefiles
@@ -9143,7 +10631,7 @@ EOF
 	  :
 	else
 	  echo "copying selected object files to avoid basename conflicts..."
-	  gentop="$output_objdir/${outputname}x"
+	  gentop=$output_objdir/${outputname}x
 	  func_append generated " $gentop"
 	  func_mkdir_p "$gentop"
 	  save_oldobjs=$oldobjs
@@ -9152,7 +10640,7 @@ EOF
 	  for obj in $save_oldobjs
 	  do
 	    func_basename "$obj"
-	    objbase="$func_basename_result"
+	    objbase=$func_basename_result
 	    case " $oldobjs " in
 	    " ") oldobjs=$obj ;;
 	    *[\ /]"$objbase "*)
@@ -9221,18 +10709,18 @@ EOF
 	    else
 	      # the above command should be used before it gets too long
 	      oldobjs=$objlist
-	      if test "$obj" = "$last_oldobj" ; then
+	      if test "$obj" = "$last_oldobj"; then
 		RANLIB=$save_RANLIB
 	      fi
 	      test -z "$concat_cmds" || concat_cmds=$concat_cmds~
-	      eval concat_cmds=\"\${concat_cmds}$old_archive_cmds\"
+	      eval concat_cmds=\"\$concat_cmds$old_archive_cmds\"
 	      objlist=
 	      len=$len0
 	    fi
 	  done
 	  RANLIB=$save_RANLIB
 	  oldobjs=$objlist
-	  if test "X$oldobjs" = "X" ; then
+	  if test -z "$oldobjs"; then
 	    eval cmds=\"\$concat_cmds\"
 	  else
 	    eval cmds=\"\$concat_cmds~\$old_archive_cmds\"
@@ -9249,7 +10737,7 @@ EOF
     case $output in
     *.la)
       old_library=
-      test "$build_old_libs" = yes && old_library="$libname.$libext"
+      test yes = "$build_old_libs" && old_library=$libname.$libext
       func_verbose "creating $output"
 
       # Preserve any variables that may affect compiler behavior
@@ -9264,31 +10752,31 @@ EOF
 	fi
       done
       # Quote the link command for shipping.
-      relink_command="(cd `pwd`; $SHELL $progpath $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
+      relink_command="(cd `pwd`; $SHELL \"$progpath\" $preserve_args --mode=relink $libtool_args @inst_prefix_dir@)"
       relink_command=`$ECHO "$relink_command" | $SED "$sed_quote_subst"`
-      if test "$hardcode_automatic" = yes ; then
+      if test yes = "$hardcode_automatic"; then
 	relink_command=
       fi
 
       # Only create the output if not a dry run.
       $opt_dry_run || {
 	for installed in no yes; do
-	  if test "$installed" = yes; then
+	  if test yes = "$installed"; then
 	    if test -z "$install_libdir"; then
 	      break
 	    fi
-	    output="$output_objdir/$outputname"i
+	    output=$output_objdir/${outputname}i
 	    # Replace all uninstalled libtool libraries with the installed ones
 	    newdependency_libs=
 	    for deplib in $dependency_libs; do
 	      case $deplib in
 	      *.la)
 		func_basename "$deplib"
-		name="$func_basename_result"
+		name=$func_basename_result
 		func_resolve_sysroot "$deplib"
-		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $func_resolve_sysroot_result`
+		eval libdir=`$SED -n -e 's/^libdir=\(.*\)$/\1/p' $func_resolve_sysroot_result`
 		test -z "$libdir" && \
-		  func_fatal_error "\`$deplib' is not a valid libtool archive"
+		  func_fatal_error "'$deplib' is not a valid libtool archive"
 		func_append newdependency_libs " ${lt_sysroot:+=}$libdir/$name"
 		;;
 	      -L*)
@@ -9304,23 +10792,23 @@ EOF
 	      *) func_append newdependency_libs " $deplib" ;;
 	      esac
 	    done
-	    dependency_libs="$newdependency_libs"
+	    dependency_libs=$newdependency_libs
 	    newdlfiles=
 
 	    for lib in $dlfiles; do
 	      case $lib in
 	      *.la)
 	        func_basename "$lib"
-		name="$func_basename_result"
-		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+		name=$func_basename_result
+		eval libdir=`$SED -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
 		test -z "$libdir" && \
-		  func_fatal_error "\`$lib' is not a valid libtool archive"
+		  func_fatal_error "'$lib' is not a valid libtool archive"
 		func_append newdlfiles " ${lt_sysroot:+=}$libdir/$name"
 		;;
 	      *) func_append newdlfiles " $lib" ;;
 	      esac
 	    done
-	    dlfiles="$newdlfiles"
+	    dlfiles=$newdlfiles
 	    newdlprefiles=
 	    for lib in $dlprefiles; do
 	      case $lib in
@@ -9330,34 +10818,34 @@ EOF
 		# didn't already link the preopened objects directly into
 		# the library:
 		func_basename "$lib"
-		name="$func_basename_result"
-		eval libdir=`${SED} -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
+		name=$func_basename_result
+		eval libdir=`$SED -n -e 's/^libdir=\(.*\)$/\1/p' $lib`
 		test -z "$libdir" && \
-		  func_fatal_error "\`$lib' is not a valid libtool archive"
+		  func_fatal_error "'$lib' is not a valid libtool archive"
 		func_append newdlprefiles " ${lt_sysroot:+=}$libdir/$name"
 		;;
 	      esac
 	    done
-	    dlprefiles="$newdlprefiles"
+	    dlprefiles=$newdlprefiles
 	  else
 	    newdlfiles=
 	    for lib in $dlfiles; do
 	      case $lib in
-		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		[\\/]* | [A-Za-z]:[\\/]*) abs=$lib ;;
 		*) abs=`pwd`"/$lib" ;;
 	      esac
 	      func_append newdlfiles " $abs"
 	    done
-	    dlfiles="$newdlfiles"
+	    dlfiles=$newdlfiles
 	    newdlprefiles=
 	    for lib in $dlprefiles; do
 	      case $lib in
-		[\\/]* | [A-Za-z]:[\\/]*) abs="$lib" ;;
+		[\\/]* | [A-Za-z]:[\\/]*) abs=$lib ;;
 		*) abs=`pwd`"/$lib" ;;
 	      esac
 	      func_append newdlprefiles " $abs"
 	    done
-	    dlprefiles="$newdlprefiles"
+	    dlprefiles=$newdlprefiles
 	  fi
 	  $RM $output
 	  # place dlname in correct position for cygwin
@@ -9373,10 +10861,9 @@ EOF
 	  case $host,$output,$installed,$module,$dlname in
 	    *cygwin*,*lai,yes,no,*.dll | *mingw*,*lai,yes,no,*.dll | *cegcc*,*lai,yes,no,*.dll)
 	      # If a -bindir argument was supplied, place the dll there.
-	      if test "x$bindir" != x ;
-	      then
+	      if test -n "$bindir"; then
 		func_relative_path "$install_libdir" "$bindir"
-		tdlname=$func_relative_path_result$dlname
+		tdlname=$func_relative_path_result/$dlname
 	      else
 		# Otherwise fall back on heuristic.
 		tdlname=../bin/$dlname
@@ -9385,7 +10872,7 @@ EOF
 	  esac
 	  $ECHO > $output "\
 # $outputname - a libtool library file
-# Generated by $PROGRAM (GNU $PACKAGE$TIMESTAMP) $VERSION
+# Generated by $PROGRAM (GNU $PACKAGE) $VERSION
 #
 # Please DO NOT delete this file!
 # It is necessary for linking the library.
@@ -9399,7 +10886,7 @@ library_names='$library_names'
 # The name of the static archive.
 old_library='$old_library'
 
-# Linker flags that can not go in dependency_libs.
+# Linker flags that cannot go in dependency_libs.
 inherited_linker_flags='$new_inherited_linker_flags'
 
 # Libraries that this one depends upon.
@@ -9425,7 +10912,7 @@ dlpreopen='$dlprefiles'
 
 # Directory that this library needs to be installed in:
 libdir='$install_libdir'"
-	  if test "$installed" = no && test "$need_relink" = yes; then
+	  if test no,yes = "$installed,$need_relink"; then
 	    $ECHO >> $output "\
 relink_command=\"$relink_command\""
 	  fi
@@ -9440,27 +10927,29 @@ relink_command=\"$relink_command\""
     exit $EXIT_SUCCESS
 }
 
-{ test "$opt_mode" = link || test "$opt_mode" = relink; } &&
-    func_mode_link ${1+"$@"}
+if test link = "$opt_mode" || test relink = "$opt_mode"; then
+  func_mode_link ${1+"$@"}
+fi
 
 
 # func_mode_uninstall arg...
 func_mode_uninstall ()
 {
-    $opt_debug
-    RM="$nonopt"
+    $debug_cmd
+
+    RM=$nonopt
     files=
-    rmforce=
+    rmforce=false
     exit_status=0
 
     # This variable tells wrapper scripts just to set variables rather
     # than running their programs.
-    libtool_install_magic="$magic"
+    libtool_install_magic=$magic
 
     for arg
     do
       case $arg in
-      -f) func_append RM " $arg"; rmforce=yes ;;
+      -f) func_append RM " $arg"; rmforce=: ;;
       -*) func_append RM " $arg" ;;
       *) func_append files " $arg" ;;
       esac
@@ -9473,18 +10962,18 @@ func_mode_uninstall ()
 
     for file in $files; do
       func_dirname "$file" "" "."
-      dir="$func_dirname_result"
-      if test "X$dir" = X.; then
-	odir="$objdir"
+      dir=$func_dirname_result
+      if test . = "$dir"; then
+	odir=$objdir
       else
-	odir="$dir/$objdir"
+	odir=$dir/$objdir
       fi
       func_basename "$file"
-      name="$func_basename_result"
-      test "$opt_mode" = uninstall && odir="$dir"
+      name=$func_basename_result
+      test uninstall = "$opt_mode" && odir=$dir
 
       # Remember odir for removal later, being careful to avoid duplicates
-      if test "$opt_mode" = clean; then
+      if test clean = "$opt_mode"; then
 	case " $rmdirs " in
 	  *" $odir "*) ;;
 	  *) func_append rmdirs " $odir" ;;
@@ -9499,11 +10988,11 @@ func_mode_uninstall ()
       elif test -d "$file"; then
 	exit_status=1
 	continue
-      elif test "$rmforce" = yes; then
+      elif $rmforce; then
 	continue
       fi
 
-      rmfiles="$file"
+      rmfiles=$file
 
       case $name in
       *.la)
@@ -9517,7 +11006,7 @@ func_mode_uninstall ()
 	  done
 	  test -n "$old_library" && func_append rmfiles " $odir/$old_library"
 
-	  case "$opt_mode" in
+	  case $opt_mode in
 	  clean)
 	    case " $library_names " in
 	    *" $dlname "*) ;;
@@ -9528,12 +11017,12 @@ func_mode_uninstall ()
 	  uninstall)
 	    if test -n "$library_names"; then
 	      # Do each command in the postuninstall commands.
-	      func_execute_cmds "$postuninstall_cmds" 'test "$rmforce" = yes || exit_status=1'
+	      func_execute_cmds "$postuninstall_cmds" '$rmforce || exit_status=1'
 	    fi
 
 	    if test -n "$old_library"; then
 	      # Do each command in the old_postuninstall commands.
-	      func_execute_cmds "$old_postuninstall_cmds" 'test "$rmforce" = yes || exit_status=1'
+	      func_execute_cmds "$old_postuninstall_cmds" '$rmforce || exit_status=1'
 	    fi
 	    # FIXME: should reinstall the best remaining shared library.
 	    ;;
@@ -9549,21 +11038,19 @@ func_mode_uninstall ()
 	  func_source $dir/$name
 
 	  # Add PIC object to the list of files to remove.
-	  if test -n "$pic_object" &&
-	     test "$pic_object" != none; then
+	  if test -n "$pic_object" && test none != "$pic_object"; then
 	    func_append rmfiles " $dir/$pic_object"
 	  fi
 
 	  # Add non-PIC object to the list of files to remove.
-	  if test -n "$non_pic_object" &&
-	     test "$non_pic_object" != none; then
+	  if test -n "$non_pic_object" && test none != "$non_pic_object"; then
 	    func_append rmfiles " $dir/$non_pic_object"
 	  fi
 	fi
 	;;
 
       *)
-	if test "$opt_mode" = clean ; then
+	if test clean = "$opt_mode"; then
 	  noexename=$name
 	  case $file in
 	  *.exe)
@@ -9590,12 +11077,12 @@ func_mode_uninstall ()
 
 	    # note $name still contains .exe if it was in $file originally
 	    # as does the version of $file that was added into $rmfiles
-	    func_append rmfiles " $odir/$name $odir/${name}S.${objext}"
-	    if test "$fast_install" = yes && test -n "$relink_command"; then
+	    func_append rmfiles " $odir/$name $odir/${name}S.$objext"
+	    if test yes = "$fast_install" && test -n "$relink_command"; then
 	      func_append rmfiles " $odir/lt-$name"
 	    fi
-	    if test "X$noexename" != "X$name" ; then
-	      func_append rmfiles " $odir/lt-${noexename}.c"
+	    if test "X$noexename" != "X$name"; then
+	      func_append rmfiles " $odir/lt-$noexename.c"
 	    fi
 	  fi
 	fi
@@ -9604,7 +11091,7 @@ func_mode_uninstall ()
       func_show_eval "$RM $rmfiles" 'exit_status=1'
     done
 
-    # Try to remove the ${objdir}s in the directories where we deleted files
+    # Try to remove the $objdir's in the directories where we deleted files
     for dir in $rmdirs; do
       if test -d "$dir"; then
 	func_show_eval "rmdir $dir >/dev/null 2>&1"
@@ -9614,16 +11101,17 @@ func_mode_uninstall ()
     exit $exit_status
 }
 
-{ test "$opt_mode" = uninstall || test "$opt_mode" = clean; } &&
-    func_mode_uninstall ${1+"$@"}
+if test uninstall = "$opt_mode" || test clean = "$opt_mode"; then
+  func_mode_uninstall ${1+"$@"}
+fi
 
 test -z "$opt_mode" && {
-  help="$generic_help"
+  help=$generic_help
   func_fatal_help "you must specify a MODE"
 }
 
 test -z "$exec_cmd" && \
-  func_fatal_help "invalid operation mode \`$opt_mode'"
+  func_fatal_help "invalid operation mode '$opt_mode'"
 
 if test -n "$exec_cmd"; then
   eval exec "$exec_cmd"
@@ -9634,7 +11122,7 @@ exit $exit_status
 
 
 # The TAGs below are defined such that we never get into a situation
-# in which we disable both kinds of libraries.  Given conflicting
+# where we disable both kinds of libraries.  Given conflicting
 # choices, we go for a static library, that is the most portable,
 # since we can't tell whether shared libraries were disabled because
 # the user asked for that or because the platform doesn't support
@@ -9657,5 +11145,3 @@ build_old_libs=`case $build_libtool_libs in yes) echo no;; *) echo yes;; esac`
 # mode:shell-script
 # sh-indentation:2
 # End:
-# vi:sw=2
-
diff --git a/libsodium/build-aux/missing b/libsodium/build-aux/missing
index db98974..625aeb1 100755
--- a/libsodium/build-aux/missing
+++ b/libsodium/build-aux/missing
@@ -1,9 +1,9 @@
 #! /bin/sh
 # Common wrapper for a few potentially missing GNU programs.
 
-scriptversion=2013-10-28.13; # UTC
+scriptversion=2018-03-07.03; # UTC
 
-# Copyright (C) 1996-2013 Free Software Foundation, Inc.
+# Copyright (C) 1996-2018 Free Software Foundation, Inc.
 # Originally written by Fran,cois Pinard <pinard@iro.umontreal.ca>, 1996.
 
 # This program is free software; you can redistribute it and/or modify
@@ -17,7 +17,7 @@ scriptversion=2013-10-28.13; # UTC
 # GNU General Public License for more details.
 
 # You should have received a copy of the GNU General Public License
-# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+# along with this program.  If not, see <https://www.gnu.org/licenses/>.
 
 # As a special exception to the GNU General Public License, if you
 # distribute this file as part of a program that contains a
@@ -101,9 +101,9 @@ else
   exit $st
 fi
 
-perl_URL=http://www.perl.org/
-flex_URL=http://flex.sourceforge.net/
-gnu_software_URL=http://www.gnu.org/software
+perl_URL=https://www.perl.org/
+flex_URL=https://github.com/westes/flex
+gnu_software_URL=https://www.gnu.org/software
 
 program_details ()
 {
@@ -207,9 +207,9 @@ give_advice "$1" | sed -e '1s/^/WARNING: /' \
 exit $st
 
 # Local variables:
-# eval: (add-hook 'write-file-hooks 'time-stamp)
+# eval: (add-hook 'before-save-hook 'time-stamp)
 # time-stamp-start: "scriptversion="
 # time-stamp-format: "%:y-%02m-%02d.%02H"
-# time-stamp-time-zone: "UTC"
+# time-stamp-time-zone: "UTC0"
 # time-stamp-end: "; # UTC"
 # End:
diff --git a/libsodium/configure b/libsodium/configure
index 11f80e1..6063204 100755
--- a/libsodium/configure
+++ b/libsodium/configure
@@ -1,6 +1,6 @@
 #! /bin/sh
 # Guess values for system-dependent variables and create Makefiles.
-# Generated by GNU Autoconf 2.69 for libsodium 1.0.7.
+# Generated by GNU Autoconf 2.69 for libsodium 1.0.18.
 #
 # Report bugs to <https://github.com/jedisct1/libsodium/issues>.
 #
@@ -590,8 +590,8 @@ MAKEFLAGS=
 # Identity of this package.
 PACKAGE_NAME='libsodium'
 PACKAGE_TARNAME='libsodium'
-PACKAGE_VERSION='1.0.7'
-PACKAGE_STRING='libsodium 1.0.7'
+PACKAGE_VERSION='1.0.18'
+PACKAGE_STRING='libsodium 1.0.18'
 PACKAGE_BUGREPORT='https://github.com/jedisct1/libsodium/issues'
 PACKAGE_URL='https://github.com/jedisct1/libsodium'
 
@@ -639,12 +639,13 @@ LIBOBJS
 HAVE_LD_OUTPUT_DEF_FALSE
 HAVE_LD_OUTPUT_DEF_TRUE
 AS
-NATIVECLIENT_FALSE
-NATIVECLIENT_TRUE
+WASI_FALSE
+WASI_TRUE
 EMSCRIPTEN_FALSE
 EMSCRIPTEN_TRUE
 TEST_LDFLAGS
 LIBTOOL_EXTRA_FLAGS
+ALLOCA
 HAVE_CPUID_V
 HAVE_TI_MODE_V
 HAVE_TI_MODE_FALSE
@@ -655,14 +656,19 @@ HAVE_AVX_ASM_TRUE
 HAVE_AMD64_ASM_V
 HAVE_AMD64_ASM_FALSE
 HAVE_AMD64_ASM_TRUE
+CFLAGS_RDRAND
 CFLAGS_PCLMUL
 CFLAGS_AESNI
+CFLAGS_AVX512F
+CFLAGS_AVX2
+CFLAGS_AVX
 CFLAGS_SSE41
 CFLAGS_SSSE3
 CFLAGS_SSE3
 CFLAGS_SSE2
 CFLAGS_MMX
 LIBTOOL_DEPS
+LT_SYS_LIBRARY_PATH
 OTOOL64
 OTOOL
 LIPO
@@ -680,21 +686,40 @@ ac_ct_DUMPBIN
 DUMPBIN
 LD
 FGREP
-SED
 LIBTOOL
 CWFLAGS
-EGREP
-GREP
-CPP
 am__fastdepCCAS_FALSE
 am__fastdepCCAS_TRUE
 CCASDEPMODE
 CCASFLAGS
 CCAS
+VALGRIND_CHECK_RULES
+valgrind_enabled_tools
+valgrind_tools
+ENABLE_VALGRIND_sgcheck
+ENABLE_VALGRIND_drd
+ENABLE_VALGRIND_helgrind
+ENABLE_VALGRIND_memcheck
+VALGRIND_ENABLED
+VALGRIND_ENABLED_FALSE
+VALGRIND_ENABLED_TRUE
+VALGRIND
+PKGCONFIG_LIBS_PRIVATE
+SAFECODE_HOME
+PTHREAD_CFLAGS
+PTHREAD_LIBS
+PTHREAD_CC
+ax_pthread_config
+EGREP
+GREP
+CPP
+SED
+SODIUM_LIBRARY_MINIMAL_DEF
+MINIMAL_FALSE
+MINIMAL_TRUE
 am__fastdepCC_FALSE
 am__fastdepCC_TRUE
 CCDEPMODE
-am__quote
 am__include
 DEPDIR
 OBJEXT
@@ -704,14 +729,10 @@ CPPFLAGS
 LDFLAGS
 CFLAGS
 CC
-SAFECODE_HOME
-MINIMAL_FALSE
-MINIMAL_TRUE
 DLL_VERSION
 SODIUM_LIBRARY_VERSION
 SODIUM_LIBRARY_VERSION_MINOR
 SODIUM_LIBRARY_VERSION_MAJOR
-ISODATE
 am__nodep
 AMDEPBACKSLASH
 AMDEP_FALSE
@@ -791,7 +812,8 @@ PACKAGE_VERSION
 PACKAGE_TARNAME
 PACKAGE_NAME
 PATH_SEPARATOR
-SHELL'
+SHELL
+am__quote'
 ac_subst_files=''
 ac_user_opts='
 enable_option_checking
@@ -803,14 +825,23 @@ enable_asm
 enable_pie
 enable_blocking_random
 enable_minimal
+with_pthreads
 with_safecode
+with_ctgrind
+enable_retpoline
 enable_debug
 enable_opt
+enable_valgrind
+enable_valgrind_memcheck
+enable_valgrind_helgrind
+enable_valgrind_drd
+enable_valgrind_sgcheck
 enable_soname_versions
 enable_shared
 enable_static
 with_pic
 enable_fast_install
+with_aix_soname
 with_gnu_ld
 with_sysroot
 enable_libtool_lock
@@ -818,16 +849,17 @@ enable_libtool_lock
       ac_precious_vars='build_alias
 host_alias
 target_alias
-SAFECODE_HOME
 CC
 CFLAGS
 LDFLAGS
 LIBS
 CPPFLAGS
+CPP
+SAFECODE_HOME
 CCAS
 CCASFLAGS
-CPP
 CWFLAGS
+LT_SYS_LIBRARY_PATH
 AR'
 
 
@@ -1369,7 +1401,7 @@ if test "$ac_init_help" = "long"; then
   # Omit some internal or obsolete options to make the list less imposing.
   # This message is too long to be a string in the A/UX 3.1 sh.
   cat <<_ACEOF
-\`configure' configures libsodium 1.0.7 to adapt to many kinds of systems.
+\`configure' configures libsodium 1.0.18 to adapt to many kinds of systems.
 
 Usage: $0 [OPTION]... [VAR=VALUE]...
 
@@ -1439,7 +1471,7 @@ fi
 
 if test -n "$ac_init_help"; then
   case $ac_init_help in
-     short | recursive ) echo "Configuration of libsodium 1.0.7:";;
+     short | recursive ) echo "Configuration of libsodium 1.0.18:";;
    esac
   cat <<\_ACEOF
 
@@ -1457,16 +1489,29 @@ Optional Features:
   --disable-dependency-tracking
                           speeds up one-time build
   --disable-ssp           Do not compile with -fstack-protector
-  --disable-asm           Disable assembly implementations
+  --disable-asm           Do not compile assembly code -- As a side effect,
+                          this disables CPU-specific implementations on
+                          non-Windows platforms. Only for use with targets
+                          such as WebAssembly.
   --disable-pie           Do not produce position independent executables
   --enable-blocking-random
                           Enable this switch only if /dev/urandom is totally
                           broken on the target platform
   --enable-minimal        Only compile the minimum set of functions required
                           for the high-level API
+  --enable-retpoline      Use return trampolines for indirect calls
   --enable-debug          For maintainers only - please do not use
   --enable-opt            Optimize for the native CPU - The resulting library
                           will be faster but not portable
+  --enable-valgrind       Whether to enable Valgrind on the unit tests
+                          (requires GNU make)
+  --disable-valgrind-memcheck
+                          Whether to skip memcheck during the Valgrind tests
+  --disable-valgrind-helgrind
+                          Whether to skip helgrind during the Valgrind tests
+  --disable-valgrind-drd  Whether to skip drd during the Valgrind tests
+  --disable-valgrind-sgcheck
+                          Whether to skip sgcheck during the Valgrind tests
   --enable-soname-versions
                           enable soname versions (must be disabled for
                           Android) (default: enabled)
@@ -1479,16 +1524,20 @@ Optional Features:
 Optional Packages:
   --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
   --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
+  --with-pthreads         use pthreads library, or --without-pthreads to
+                          disable threading support.
   --with-safecode         For maintainers only - please do not use
+  --with-ctgrind          For maintainers only - please do not use
   --with-pic[=PKGS]       try to use only PIC/non-PIC objects [default=use
                           both]
+  --with-aix-soname=aix|svr4|both
+                          shared library versioning (aka "SONAME") variant to
+                          provide on AIX, [default=aix].
   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]
-  --with-sysroot=DIR Search for dependent libraries within DIR
-                        (or the compiler's sysroot if not specified).
+  --with-sysroot[=DIR]    Search for dependent libraries within DIR (or the
+                          compiler's sysroot if not specified).
 
 Some influential environment variables:
-  SAFECODE_HOME
-              set to the safecode base directory
   CC          C compiler command
   CFLAGS      C compiler flags
   LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a
@@ -1496,10 +1545,14 @@ Some influential environment variables:
   LIBS        libraries to pass to the linker, e.g. -l<library>
   CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if
               you have headers in a nonstandard directory <include dir>
+  CPP         C preprocessor
+  SAFECODE_HOME
+              set to the safecode base directory
   CCAS        assembler compiler command (defaults to CC)
   CCASFLAGS   assembler compiler flags (defaults to CFLAGS)
-  CPP         C preprocessor
   CWFLAGS     define to compilation flags for generating extra warnings
+  LT_SYS_LIBRARY_PATH
+              User-defined run-time library search path.
   AR          path to the ar utility
 
 Use these variables to override the choices made by `configure' or to help
@@ -1569,7 +1622,7 @@ fi
 test -n "$ac_init_help" && exit $ac_status
 if $ac_init_version; then
   cat <<\_ACEOF
-libsodium configure 1.0.7
+libsodium configure 1.0.18
 generated by GNU Autoconf 2.69
 
 Copyright (C) 2012 Free Software Foundation, Inc.
@@ -1621,6 +1674,52 @@ fi
 
 } # ac_fn_c_try_compile
 
+# ac_fn_c_try_link LINENO
+# -----------------------
+# Try to link conftest.$ac_ext, and return whether this succeeded.
+ac_fn_c_try_link ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  rm -f conftest.$ac_objext conftest$ac_exeext
+  if { { ac_try="$ac_link"
+case "(($ac_try" in
+  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
+  *) ac_try_echo=$ac_try;;
+esac
+eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
+$as_echo "$ac_try_echo"; } >&5
+  (eval "$ac_link") 2>conftest.err
+  ac_status=$?
+  if test -s conftest.err; then
+    grep -v '^ *+' conftest.err >conftest.er1
+    cat conftest.er1 >&5
+    mv -f conftest.er1 conftest.err
+  fi
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; } && {
+	 test -z "$ac_c_werror_flag" ||
+	 test ! -s conftest.err
+       } && test -s conftest$ac_exeext && {
+	 test "$cross_compiling" = yes ||
+	 test -x conftest$ac_exeext
+       }; then :
+  ac_retval=0
+else
+  $as_echo "$as_me: failed program was:" >&5
+sed 's/^/| /' conftest.$ac_ext >&5
+
+	ac_retval=1
+fi
+  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
+  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
+  # interfere with the next link command; also delete a directory that is
+  # left behind by Apple's compiler.  We do this before executing the actions.
+  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+  as_fn_set_status $ac_retval
+
+} # ac_fn_c_try_link
+
 # ac_fn_c_try_cpp LINENO
 # ----------------------
 # Try to preprocess conftest.$ac_ext, and return whether this succeeded.
@@ -1822,52 +1921,6 @@ $as_echo "$ac_res" >&6; }
 
 } # ac_fn_c_check_header_compile
 
-# ac_fn_c_try_link LINENO
-# -----------------------
-# Try to link conftest.$ac_ext, and return whether this succeeded.
-ac_fn_c_try_link ()
-{
-  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
-  rm -f conftest.$ac_objext conftest$ac_exeext
-  if { { ac_try="$ac_link"
-case "(($ac_try" in
-  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
-  *) ac_try_echo=$ac_try;;
-esac
-eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
-$as_echo "$ac_try_echo"; } >&5
-  (eval "$ac_link") 2>conftest.err
-  ac_status=$?
-  if test -s conftest.err; then
-    grep -v '^ *+' conftest.err >conftest.er1
-    cat conftest.er1 >&5
-    mv -f conftest.er1 conftest.err
-  fi
-  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; } && {
-	 test -z "$ac_c_werror_flag" ||
-	 test ! -s conftest.err
-       } && test -s conftest$ac_exeext && {
-	 test "$cross_compiling" = yes ||
-	 test -x conftest$ac_exeext
-       }; then :
-  ac_retval=0
-else
-  $as_echo "$as_me: failed program was:" >&5
-sed 's/^/| /' conftest.$ac_ext >&5
-
-	ac_retval=1
-fi
-  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
-  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
-  # interfere with the next link command; also delete a directory that is
-  # left behind by Apple's compiler.  We do this before executing the actions.
-  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
-  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
-  as_fn_set_status $ac_retval
-
-} # ac_fn_c_try_link
-
 # ac_fn_c_check_func LINENO FUNC VAR
 # ----------------------------------
 # Tests whether FUNC exists, setting the cache variable VAR accordingly
@@ -1934,11 +1987,65 @@ $as_echo "$ac_res" >&6; }
   eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
 
 } # ac_fn_c_check_func
+
+# ac_fn_c_check_type LINENO TYPE VAR INCLUDES
+# -------------------------------------------
+# Tests whether TYPE exists after having included INCLUDES, setting cache
+# variable VAR accordingly.
+ac_fn_c_check_type ()
+{
+  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
+$as_echo_n "checking for $2... " >&6; }
+if eval \${$3+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  eval "$3=no"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof ($2))
+	 return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+$4
+int
+main ()
+{
+if (sizeof (($2)))
+	    return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+else
+  eval "$3=yes"
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+eval ac_res=\$$3
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
+
+} # ac_fn_c_check_type
 cat >config.log <<_ACEOF
 This file contains any messages produced by compilers while
 running configure, to aid debugging if configure makes a mistake.
 
-It was created by libsodium $as_me 1.0.7, which was
+It was created by libsodium $as_me 1.0.18, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   $ $0 $@
@@ -2388,7 +2495,7 @@ IFS=$ac_save_IFS
 case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac
 
 
-am__api_version='1.14'
+am__api_version='1.16'
 
 # Find a good install program.  We prefer a C program (faster),
 # so one script is as good as another.  But avoid the broken or
@@ -2560,8 +2667,8 @@ test "$program_suffix" != NONE &&
 ac_script='s/[\\$]/&&/g;s/;s,x,x,$//'
 program_transform_name=`$as_echo "$program_transform_name" | sed "$ac_script"`
 
-# expand $ac_aux_dir to an absolute path
-am_aux_dir=`cd $ac_aux_dir && pwd`
+# Expand $ac_aux_dir to an absolute path.
+am_aux_dir=`cd "$ac_aux_dir" && pwd`
 
 if test x"${MISSING+set}" != xset; then
   case $am_aux_dir in
@@ -2580,7 +2687,7 @@ else
 $as_echo "$as_me: WARNING: 'missing' script is too old or missing" >&2;}
 fi
 
-if test x"${install_sh}" != xset; then
+if test x"${install_sh+set}" != xset; then
   case $am_aux_dir in
   *\ * | *\	*)
     install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
@@ -2874,7 +2981,7 @@ fi
 
 # Define the identity of the package.
  PACKAGE='libsodium'
- VERSION='1.0.7'
+ VERSION='1.0.18'
 
 
 cat >>confdefs.h <<_ACEOF
@@ -2904,12 +3011,12 @@ MAKEINFO=${MAKEINFO-"${am_missing_run}makeinfo"}
 
 # For better backward compatibility.  To be removed once Automake 1.9.x
 # dies out for good.  For more background, see:
-# <http://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
-# <http://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
+# <https://lists.gnu.org/archive/html/automake/2012-07/msg00001.html>
+# <https://lists.gnu.org/archive/html/automake/2012-07/msg00014.html>
 mkdir_p='$(MKDIR_P)'
 
-# We need awk for the "check" target.  The system "awk" is bad on
-# some platforms.
+# We need awk for the "check" target (and possibly the TAP driver).  The
+# system "awk" is bad on some platforms.
 # Always define AMTAR for backward compatibility.  Yes, it's still used
 # in the wild :-(  We should find a proper way to deprecate it ...
 AMTAR='$${TAR-tar}'
@@ -3072,7 +3179,7 @@ END
 Aborting the configuration process, to ensure you take notice of the issue.
 
 You can download and install GNU coreutils to get an 'rm' implementation
-that behaves properly: <http://www.gnu.org/software/coreutils/>.
+that behaves properly: <https://www.gnu.org/software/coreutils/>.
 
 If you want to complete the configuration process using your problematic
 'rm' anyway, export the environment variable ACCEPT_INFERIOR_RM_PROGRAM
@@ -3082,6 +3189,7 @@ END
     as_fn_error $? "Your 'rm' program is bad, sorry." "$LINENO" 5
   fi
 fi
+
 # Check whether --enable-silent-rules was given.
 if test "${enable_silent_rules+set}" = set; then :
   enableval=$enable_silent_rules;
@@ -3165,13 +3273,11 @@ fi
 
 
 
-ISODATE=`date +%Y-%m-%d`
-
 
-SODIUM_LIBRARY_VERSION_MAJOR=9
-SODIUM_LIBRARY_VERSION_MINOR=0
-DLL_VERSION=8
-SODIUM_LIBRARY_VERSION=18:0:0
+SODIUM_LIBRARY_VERSION_MAJOR=10
+SODIUM_LIBRARY_VERSION_MINOR=3
+DLL_VERSION=24
+SODIUM_LIBRARY_VERSION=26:0:3
 #                       | | |
 #                +------+ | +---+
 #                |        |     |
@@ -3188,12 +3294,13 @@ SODIUM_LIBRARY_VERSION=18:0:0
 
 
 
+
 LX_CFLAGS=${CFLAGS-NONE}
+PKGCONFIG_LIBS_PRIVATE=""
 
 
-if test pwd | fgrep ' ' > /dev/null 2>&1; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The build directory contains whitespaces - This can cause tests/installation to fail due to limitations of some libtool versions" >&5
-$as_echo "$as_me: WARNING: The build directory contains whitespaces - This can cause tests/installation to fail due to limitations of some libtool versions" >&2;}
+if pwd | fgrep ' ' > /dev/null 2>&1; then :
+  as_fn_error $? "The build directory contains whitespaces - This can cause tests/installation to fail due to limitations of some libtool versions" "$LINENO" 5
 
 fi
 
@@ -3238,216 +3345,90 @@ else
 fi
 
 
-if test "x$EMSCRIPTEN" != "x"; then :
-
-  enable_asm="no"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: compiling to javascript - asm implementations disabled" >&5
-$as_echo "$as_me: WARNING: compiling to javascript - asm implementations disabled" >&2;}
-
-fi
-
-# Check whether --enable-pie was given.
-if test "${enable_pie+set}" = set; then :
-  enableval=$enable_pie; enable_pie=$enableval
-else
-  enable_pie="maybe"
-fi
+DEPDIR="${am__leading_dot}deps"
 
+ac_config_commands="$ac_config_commands depfiles"
 
-case $host_os in #(
-  mingw*|cygwin*|msys) :
-    enable_pie="no" ;; #(
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether ${MAKE-make} supports the include directive" >&5
+$as_echo_n "checking whether ${MAKE-make} supports the include directive... " >&6; }
+cat > confinc.mk << 'END'
+am__doit:
+	@echo this is the am__doit target >confinc.out
+.PHONY: am__doit
+END
+am__include="#"
+am__quote=
+# BSD make does it like this.
+echo '.include "confinc.mk" # ignored' > confmf.BSD
+# Other make implementations (GNU, Solaris 10, AIX) do it like this.
+echo 'include confinc.mk # ignored' > confmf.GNU
+_am_result=no
+for s in GNU BSD; do
+  { echo "$as_me:$LINENO: ${MAKE-make} -f confmf.$s && cat confinc.out" >&5
+   (${MAKE-make} -f confmf.$s && cat confinc.out) >&5 2>&5
+   ac_status=$?
+   echo "$as_me:$LINENO: \$? = $ac_status" >&5
+   (exit $ac_status); }
+  case $?:`cat confinc.out 2>/dev/null` in #(
+  '0:this is the am__doit target') :
+    case $s in #(
+  BSD) :
+    am__include='.include' am__quote='"' ;; #(
+  *) :
+    am__include='include' am__quote='' ;;
+esac ;; #(
   *) :
      ;;
 esac
+  if test "$am__include" != "#"; then
+    _am_result="yes ($s style)"
+    break
+  fi
+done
+rm -f confinc.* confmf.*
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: ${_am_result}" >&5
+$as_echo "${_am_result}" >&6; }
 
-# Check whether --enable-blocking-random was given.
-if test "${enable_blocking_random+set}" = set; then :
-  enableval=$enable_blocking_random;
-  if test "x$enableval" = "xyes"; then :
-
-
-$as_echo "#define USE_BLOCKING_RANDOM 1" >>confdefs.h
-
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
+set dummy ${ac_tool_prefix}gcc; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_CC+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$CC"; then
+  ac_cv_prog_CC="$CC" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_CC="${ac_tool_prefix}gcc"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
 
 fi
-
 fi
-
-
-# Check whether --enable-minimal was given.
-if test "${enable_minimal+set}" = set; then :
-  enableval=$enable_minimal;
-  if test "x$enableval" = "xyes"; then :
-
-    enable_minimal="yes"
-
+CC=$ac_cv_prog_CC
+if test -n "$CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
+$as_echo "$CC" >&6; }
 else
-
-    enable_minimal="no"
-
-fi
-
-else
-
-  enable_minimal="no"
-
-fi
-
- if test x$enable_minimal = xyes; then
-  MINIMAL_TRUE=
-  MINIMAL_FALSE='#'
-else
-  MINIMAL_TRUE='#'
-  MINIMAL_FALSE=
-fi
-
-
-
-# Check whether --with-safecode was given.
-if test "${with_safecode+set}" = set; then :
-  withval=$with_safecode; if test "x$withval" = "xyes"; then :
-
-
-    : ${SAFECODE_HOME:=/opt/safecode}
-    LDFLAGS="$LDFLAGS -L${SAFECODE_HOME}/lib"
-    LIBS="$LIBS -lsc_dbg_rt -lpoolalloc_bitmap -lstdc++"
-    CFLAGS="$CFLAGS -fmemsafety"
-
-fi
-
-fi
-
-
-# Check whether --enable-debug was given.
-if test "${enable_debug+set}" = set; then :
-  enableval=$enable_debug;
-  if test "x$enableval" = "xyes"; then :
-
-    if test "x$LX_CFLAGS" = "xNONE"; then :
-
-      nxflags=""
-      for flag in `echo $CFLAGS`; do
-        case $flag in #(
-  -O*) :
-      ;; #(
-  -g*) :
-      ;; #(
-  *) :
-    as_fn_append nxflags " $flag" ;; #(
-  *) :
-     ;;
-esac
-      done
-      CFLAGS="$nxflags -O0 -g3"
-
-fi
-    CPPFLAGS="$CPPFLAGS -DDEBUG=1"
-
-fi
-
-fi
-
-
-# Check whether --enable-opt was given.
-if test "${enable_opt+set}" = set; then :
-  enableval=$enable_opt;
-  if test "x$enableval" = "xyes"; then :
-
-    CFLAGS="$CFLAGS -flto -march=native"
-    LDFLAGS="$LDFLAGS -flto -march=native"
-fi
-
-fi
-
-
-
-
-
-DEPDIR="${am__leading_dot}deps"
-
-ac_config_commands="$ac_config_commands depfiles"
-
-
-am_make=${MAKE-make}
-cat > confinc << 'END'
-am__doit:
-	@echo this is the am__doit target
-.PHONY: am__doit
-END
-# If we don't find an include directive, just comment out the code.
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for style of include used by $am_make" >&5
-$as_echo_n "checking for style of include used by $am_make... " >&6; }
-am__include="#"
-am__quote=
-_am_result=none
-# First try GNU make style include.
-echo "include confinc" > confmf
-# Ignore all kinds of additional output from 'make'.
-case `$am_make -s -f confmf 2> /dev/null` in #(
-*the\ am__doit\ target*)
-  am__include=include
-  am__quote=
-  _am_result=GNU
-  ;;
-esac
-# Now try BSD make style include.
-if test "$am__include" = "#"; then
-   echo '.include "confinc"' > confmf
-   case `$am_make -s -f confmf 2> /dev/null` in #(
-   *the\ am__doit\ target*)
-     am__include=.include
-     am__quote="\""
-     _am_result=BSD
-     ;;
-   esac
-fi
-
-
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $_am_result" >&5
-$as_echo "$_am_result" >&6; }
-rm -f confinc confmf
-
-ac_ext=c
-ac_cpp='$CPP $CPPFLAGS'
-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
-ac_compiler_gnu=$ac_cv_c_compiler_gnu
-if test -n "$ac_tool_prefix"; then
-  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
-set dummy ${ac_tool_prefix}gcc; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_CC+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  if test -n "$CC"; then
-  ac_cv_prog_CC="$CC" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_CC="${ac_tool_prefix}gcc"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
-
-fi
-fi
-CC=$ac_cv_prog_CC
-if test -n "$CC"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
-$as_echo "$CC" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
 
 
@@ -4384,386 +4365,266 @@ else
 fi
 
 
-   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C99" >&5
-$as_echo_n "checking for $CC option to accept ISO C99... " >&6; }
-if ${ac_cv_prog_cc_c99+:} false; then :
+
+if test "x$EMSCRIPTEN" != "x"; then :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -s ASSERTIONS=0" >&5
+$as_echo_n "checking whether C compiler accepts -s ASSERTIONS=0... " >&6; }
+if ${ax_cv_check_cflags___s_ASSERTIONS_0+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  ac_cv_prog_cc_c99=no
-ac_save_CC=$CC
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdarg.h>
-#include <stdbool.h>
-#include <stdlib.h>
-#include <wchar.h>
-#include <stdio.h>
 
-// Check varargs macros.  These examples are taken from C99 6.10.3.5.
-#define debug(...) fprintf (stderr, __VA_ARGS__)
-#define showlist(...) puts (#__VA_ARGS__)
-#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
-static void
-test_varargs_macros (void)
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -s ASSERTIONS=0"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
 {
-  int x = 1234;
-  int y = 5678;
-  debug ("Flag");
-  debug ("X = %d\n", x);
-  showlist (The first, second, and third items.);
-  report (x>y, "x is %d but y is %d", x, y);
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
 }
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___s_ASSERTIONS_0=yes
+else
+  ax_cv_check_cflags___s_ASSERTIONS_0=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___s_ASSERTIONS_0" >&5
+$as_echo "$ax_cv_check_cflags___s_ASSERTIONS_0" >&6; }
+if test "x$ax_cv_check_cflags___s_ASSERTIONS_0" = xyes; then :
 
-// Check long long types.
-#define BIG64 18446744073709551615ull
-#define BIG32 4294967295ul
-#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
-#if !BIG_OK
-  your preprocessor is broken;
-#endif
-#if BIG_OK
-#else
-  your preprocessor is broken;
-#endif
-static long long int bignum = -9223372036854775807LL;
-static unsigned long long int ubignum = BIG64;
-
-struct incomplete_array
-{
-  int datasize;
-  double data[];
-};
+    enable_asm="no"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: compiling to JavaScript - asm implementations disabled" >&5
+$as_echo "$as_me: WARNING: compiling to JavaScript - asm implementations disabled" >&2;}
 
-struct named_init {
-  int number;
-  const wchar_t *name;
-  double average;
-};
+else
 
-typedef const char *ccp;
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: EMSCRIPTEN environment variable defined, but emcc doesn't appear to be used - Assuming compilation to native code" >&5
+$as_echo "$as_me: WARNING: EMSCRIPTEN environment variable defined, but emcc doesn't appear to be used - Assuming compilation to native code" >&2;}
+    CFLAGS="$CFLAGS -U__EMSCRIPTEN__"
+    unset EMSCRIPTEN
 
-static inline int
-test_restrict (ccp restrict text)
-{
-  // See if C++-style comments work.
-  // Iterate through items via the restricted pointer.
-  // Also check for declarations in for loops.
-  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
-    continue;
-  return 0;
-}
+fi
 
-// Check varargs and va_copy.
-static void
-test_varargs (const char *format, ...)
-{
-  va_list args;
-  va_start (args, format);
-  va_list args_copy;
-  va_copy (args_copy, args);
 
-  const char *str;
-  int number;
-  float fnumber;
+fi
 
-  while (*format)
-    {
-      switch (*format++)
-	{
-	case 's': // string
-	  str = va_arg (args_copy, const char *);
-	  break;
-	case 'd': // int
-	  number = va_arg (args_copy, int);
-	  break;
-	case 'f': // float
-	  fnumber = va_arg (args_copy, double);
-	  break;
-	default:
-	  break;
-	}
-    }
-  va_end (args_copy);
-  va_end (args);
-}
+# Check whether --enable-pie was given.
+if test "${enable_pie+set}" = set; then :
+  enableval=$enable_pie; enable_pie=$enableval
+else
+  enable_pie="maybe"
+fi
 
-int
-main ()
-{
 
-  // Check bool.
-  _Bool success = false;
+case $host_os in #(
+  mingw*|cygwin*|msys) :
+    enable_pie="no" ;; #(
+  *) :
+     ;;
+esac
 
-  // Check restrict.
-  if (test_restrict ("String literal") == 0)
-    success = true;
-  char *restrict newvar = "Another string";
-
-  // Check varargs.
-  test_varargs ("s, d' f .", "string", 65, 34.234);
-  test_varargs_macros ();
-
-  // Check flexible array members.
-  struct incomplete_array *ia =
-    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
-  ia->datasize = 10;
-  for (int i = 0; i < ia->datasize; ++i)
-    ia->data[i] = i * 1.234;
-
-  // Check named initializers.
-  struct named_init ni = {
-    .number = 34,
-    .name = L"Test wide string",
-    .average = 543.34343,
-  };
-
-  ni.number = 58;
+# Check whether --enable-blocking-random was given.
+if test "${enable_blocking_random+set}" = set; then :
+  enableval=$enable_blocking_random;
+  if test "x$enableval" = "xyes"; then :
 
-  int dynamic_array[ni.number];
-  dynamic_array[ni.number - 1] = 543;
 
-  // work around unused variable warnings
-  return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
-	  || dynamic_array[ni.number - 1] != 543);
+$as_echo "#define USE_BLOCKING_RANDOM 1" >>confdefs.h
 
-  ;
-  return 0;
-}
-_ACEOF
-for ac_arg in '' -std=gnu99 -std=c99 -c99 -AC99 -D_STDC_C99= -qlanglvl=extc99
-do
-  CC="$ac_save_CC $ac_arg"
-  if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_prog_cc_c99=$ac_arg
-fi
-rm -f core conftest.err conftest.$ac_objext
-  test "x$ac_cv_prog_cc_c99" != "xno" && break
-done
-rm -f conftest.$ac_ext
-CC=$ac_save_CC
 
 fi
-# AC_CACHE_VAL
-case "x$ac_cv_prog_cc_c99" in
-  x)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
-$as_echo "none needed" >&6; } ;;
-  xno)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
-$as_echo "unsupported" >&6; } ;;
-  *)
-    CC="$CC $ac_cv_prog_cc_c99"
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99" >&5
-$as_echo "$ac_cv_prog_cc_c99" >&6; } ;;
-esac
-if test "x$ac_cv_prog_cc_c99" != xno; then :
 
 fi
 
 
-# By default we simply use the C compiler to build assembly code.
-
-test "${CCAS+set}" = set || CCAS=$CC
-test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS
+# Check whether --enable-minimal was given.
+if test "${enable_minimal+set}" = set; then :
+  enableval=$enable_minimal;
+  if test "x$enableval" = "xyes"; then :
 
+    enable_minimal="yes"
+    SODIUM_LIBRARY_MINIMAL_DEF="#define SODIUM_LIBRARY_MINIMAL 1"
 
+$as_echo "#define MINIMAL 1" >>confdefs.h
 
-depcc="$CCAS"   am_compiler_list=
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
-$as_echo_n "checking dependency style of $depcc... " >&6; }
-if ${am_cv_CCAS_dependencies_compiler_type+:} false; then :
-  $as_echo_n "(cached) " >&6
 else
-  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
-  # We make a subdir and do the tests there.  Otherwise we can end up
-  # making bogus files that we don't know about and never remove.  For
-  # instance it was reported that on HP-UX the gcc test will end up
-  # making a dummy file named 'D' -- because '-MD' means "put the output
-  # in D".
-  rm -rf conftest.dir
-  mkdir conftest.dir
-  # Copy depcomp to subdir because otherwise we won't find it if we're
-  # using a relative directory.
-  cp "$am_depcomp" conftest.dir
-  cd conftest.dir
-  # We will build objects and dependencies in a subdirectory because
-  # it helps to detect inapplicable dependency modes.  For instance
-  # both Tru64's cc and ICC support -MD to output dependencies as a
-  # side effect of compilation, but ICC will put the dependencies in
-  # the current directory while Tru64 will put them in the object
-  # directory.
-  mkdir sub
-
-  am_cv_CCAS_dependencies_compiler_type=none
-  if test "$am_compiler_list" = ""; then
-     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
-  fi
-  am__universal=false
 
+    enable_minimal="no"
 
-  for depmode in $am_compiler_list; do
-    # Setup a source with many dependencies, because some compilers
-    # like to wrap large dependency lists on column 80 (with \), and
-    # we should not choose a depcomp mode which is confused by this.
-    #
-    # We need to recreate these files for each test, as the compiler may
-    # overwrite some of them when testing with obscure command lines.
-    # This happens at least with the AIX C compiler.
-    : > sub/conftest.c
-    for i in 1 2 3 4 5 6; do
-      echo '#include "conftst'$i'.h"' >> sub/conftest.c
-      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
-      # Solaris 10 /bin/sh.
-      echo '/* dummy */' > sub/conftst$i.h
-    done
-    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
-
-    # We check with '-c' and '-o' for the sake of the "dashmstdout"
-    # mode.  It turns out that the SunPro C++ compiler does not properly
-    # handle '-M -o', and we need to detect this.  Also, some Intel
-    # versions had trouble with output in subdirs.
-    am__obj=sub/conftest.${OBJEXT-o}
-    am__minus_obj="-o $am__obj"
-    case $depmode in
-    gcc)
-      # This depmode causes a compiler race in universal mode.
-      test "$am__universal" = false || continue
-      ;;
-    nosideeffect)
-      # After this tag, mechanisms are not by side-effect, so they'll
-      # only be used when explicitly requested.
-      if test "x$enable_dependency_tracking" = xyes; then
-	continue
-      else
-	break
-      fi
-      ;;
-    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
-      # This compiler won't grok '-c -o', but also, the minuso test has
-      # not run yet.  These depmodes are late enough in the game, and
-      # so weak that their functioning should not be impacted.
-      am__obj=conftest.${OBJEXT-o}
-      am__minus_obj=
-      ;;
-    none) break ;;
-    esac
-    if depmode=$depmode \
-       source=sub/conftest.c object=$am__obj \
-       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
-       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
-         >/dev/null 2>conftest.err &&
-       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
-       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
-       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
-      # icc doesn't choke on unknown options, it will just issue warnings
-      # or remarks (even with -Werror).  So we grep stderr for any message
-      # that says an option was ignored or not supported.
-      # When given -MP, icc 7.0 and 7.1 complain thusly:
-      #   icc: Command line warning: ignoring option '-M'; no argument required
-      # The diagnosis changed in icc 8.0:
-      #   icc: Command line remark: option '-MP' not supported
-      if (grep 'ignoring option' conftest.err ||
-          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
-        am_cv_CCAS_dependencies_compiler_type=$depmode
-        break
-      fi
-    fi
-  done
+fi
 
-  cd ..
-  rm -rf conftest.dir
 else
-  am_cv_CCAS_dependencies_compiler_type=none
-fi
+
+  enable_minimal="no"
 
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_CCAS_dependencies_compiler_type" >&5
-$as_echo "$am_cv_CCAS_dependencies_compiler_type" >&6; }
-CCASDEPMODE=depmode=$am_cv_CCAS_dependencies_compiler_type
 
- if
-  test "x$enable_dependency_tracking" != xno \
-  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3; then
-  am__fastdepCCAS_TRUE=
-  am__fastdepCCAS_FALSE='#'
+ if test x$enable_minimal = xyes; then
+  MINIMAL_TRUE=
+  MINIMAL_FALSE='#'
 else
-  am__fastdepCCAS_TRUE='#'
-  am__fastdepCCAS_FALSE=
+  MINIMAL_TRUE='#'
+  MINIMAL_FALSE=
 fi
 
 
 
-ac_ext=c
-ac_cpp='$CPP $CPPFLAGS'
-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
-ac_compiler_gnu=$ac_cv_c_compiler_gnu
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
-$as_echo_n "checking how to run the C preprocessor... " >&6; }
-# On Suns, sometimes $CPP names a directory.
-if test -n "$CPP" && test -d "$CPP"; then
-  CPP=
-fi
-if test -z "$CPP"; then
-  if ${ac_cv_prog_CPP+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-      # Double quotes because CPP needs to be expanded
-    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
-    do
-      ac_preproc_ok=false
-for ac_c_preproc_warn_flag in '' yes
-do
-  # Use a header file that comes with gcc, so configuring glibc
-  # with a fresh cross-compiler works.
-  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
-  # <limits.h> exists even on freestanding compilers.
-  # On the NeXT, cc -E runs the code through the compiler's parser,
-  # not just through cpp. "Syntax error" is here to catch this case.
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#ifdef __STDC__
-# include <limits.h>
-#else
-# include <assert.h>
-#endif
-		     Syntax error
-_ACEOF
-if ac_fn_c_try_cpp "$LINENO"; then :
-
-else
-  # Broken: fails on valid input.
-continue
-fi
-rm -f conftest.err conftest.i conftest.$ac_ext
 
-  # OK, works on sane cases.  Now check whether nonexistent headers
-  # can be detected and how.
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <ac_nonexistent.h>
-_ACEOF
-if ac_fn_c_try_cpp "$LINENO"; then :
-  # Broken: success on invalid input.
-continue
+# Check whether --with-pthreads was given.
+if test "${with_pthreads+set}" = set; then :
+  withval=$with_pthreads;
 else
-  # Passes both tests.
-ac_preproc_ok=:
-break
+  withval="yes"
 fi
-rm -f conftest.err conftest.i conftest.$ac_ext
 
-done
-# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
-rm -f conftest.i conftest.err conftest.$ac_ext
-if $ac_preproc_ok; then :
-  break
-fi
 
-    done
-    ac_cv_prog_CPP=$CPP
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output" >&5
+$as_echo_n "checking for a sed that does not truncate output... " >&6; }
+if ${ac_cv_path_SED+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/
+     for ac_i in 1 2 3 4 5 6 7; do
+       ac_script="$ac_script$as_nl$ac_script"
+     done
+     echo "$ac_script" 2>/dev/null | sed 99q >conftest.sed
+     { ac_script=; unset ac_script;}
+     if test -z "$SED"; then
+  ac_path_SED_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in sed gsed; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_SED="$as_dir/$ac_prog$ac_exec_ext"
+      as_fn_executable_p "$ac_path_SED" || continue
+# Check for GNU ac_path_SED and select it if it is found.
+  # Check for GNU $ac_path_SED
+case `"$ac_path_SED" --version 2>&1` in
+*GNU*)
+  ac_cv_path_SED="$ac_path_SED" ac_path_SED_found=:;;
+*)
+  ac_count=0
+  $as_echo_n 0123456789 >"conftest.in"
+  while :
+  do
+    cat "conftest.in" "conftest.in" >"conftest.tmp"
+    mv "conftest.tmp" "conftest.in"
+    cp "conftest.in" "conftest.nl"
+    $as_echo '' >> "conftest.nl"
+    "$ac_path_SED" -f conftest.sed < "conftest.nl" >"conftest.out" 2>/dev/null || break
+    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
+    as_fn_arith $ac_count + 1 && ac_count=$as_val
+    if test $ac_count -gt ${ac_path_SED_max-0}; then
+      # Best one so far, save it but keep looking for a better one
+      ac_cv_path_SED="$ac_path_SED"
+      ac_path_SED_max=$ac_count
+    fi
+    # 10*(2^10) chars as input seems more than enough
+    test $ac_count -gt 10 && break
+  done
+  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
+esac
+
+      $ac_path_SED_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_SED"; then
+    as_fn_error $? "no acceptable sed could be found in \$PATH" "$LINENO" 5
+  fi
+else
+  ac_cv_path_SED=$SED
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED" >&5
+$as_echo "$ac_cv_path_SED" >&6; }
+ SED="$ac_cv_path_SED"
+  rm -f conftest.sed
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
+$as_echo_n "checking how to run the C preprocessor... " >&6; }
+# On Suns, sometimes $CPP names a directory.
+if test -n "$CPP" && test -d "$CPP"; then
+  CPP=
+fi
+if test -z "$CPP"; then
+  if ${ac_cv_prog_CPP+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+      # Double quotes because CPP needs to be expanded
+    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
+    do
+      ac_preproc_ok=false
+for ac_c_preproc_warn_flag in '' yes
+do
+  # Use a header file that comes with gcc, so configuring glibc
+  # with a fresh cross-compiler works.
+  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
+  # <limits.h> exists even on freestanding compilers.
+  # On the NeXT, cc -E runs the code through the compiler's parser,
+  # not just through cpp. "Syntax error" is here to catch this case.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#ifdef __STDC__
+# include <limits.h>
+#else
+# include <assert.h>
+#endif
+		     Syntax error
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+
+else
+  # Broken: fails on valid input.
+continue
+fi
+rm -f conftest.err conftest.i conftest.$ac_ext
+
+  # OK, works on sane cases.  Now check whether nonexistent headers
+  # can be detected and how.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ac_nonexistent.h>
+_ACEOF
+if ac_fn_c_try_cpp "$LINENO"; then :
+  # Broken: success on invalid input.
+continue
+else
+  # Passes both tests.
+ac_preproc_ok=:
+break
+fi
+rm -f conftest.err conftest.i conftest.$ac_ext
+
+done
+# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
+rm -f conftest.i conftest.err conftest.$ac_ext
+if $ac_preproc_ok; then :
+  break
+fi
+
+    done
+    ac_cv_prog_CPP=$CPP
 
 fi
   CPP=$ac_cv_prog_CPP
@@ -4963,1886 +4824,4276 @@ $as_echo "$ac_cv_path_EGREP" >&6; }
  EGREP="$ac_cv_path_EGREP"
 
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
-$as_echo_n "checking for ANSI C header files... " >&6; }
-if ${ac_cv_header_stdc+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+if test "x$withval" = "xyes"; then :
+
+
+
+
+
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+ax_pthread_ok=no
+
+# We used to check for pthread.h first, but this fails if pthread.h
+# requires special compiler flags (e.g. on Tru64 or Sequent).
+# It gets checked for in the link test anyway.
+
+# First of all, check if the user has set any of the PTHREAD_LIBS,
+# etcetera environment variables, and if threads linking works using
+# them:
+if test "x$PTHREAD_CFLAGS$PTHREAD_LIBS" != "x"; then
+        ax_pthread_save_CC="$CC"
+        ax_pthread_save_CFLAGS="$CFLAGS"
+        ax_pthread_save_LIBS="$LIBS"
+        if test "x$PTHREAD_CC" != "x"; then :
+  CC="$PTHREAD_CC"
+fi
+        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
+        LIBS="$PTHREAD_LIBS $LIBS"
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS" >&5
+$as_echo_n "checking for pthread_join using $CC $PTHREAD_CFLAGS $PTHREAD_LIBS... " >&6; }
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdlib.h>
-#include <stdarg.h>
-#include <string.h>
-#include <float.h>
 
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char pthread_join ();
 int
 main ()
 {
-
+return pthread_join ();
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_header_stdc=yes
-else
-  ac_cv_header_stdc=no
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_pthread_ok=yes
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok" >&5
+$as_echo "$ax_pthread_ok" >&6; }
+        if test "x$ax_pthread_ok" = "xno"; then
+                PTHREAD_LIBS=""
+                PTHREAD_CFLAGS=""
+        fi
+        CC="$ax_pthread_save_CC"
+        CFLAGS="$ax_pthread_save_CFLAGS"
+        LIBS="$ax_pthread_save_LIBS"
+fi
+
+# We must check for the threads library under a number of different
+# names; the ordering is very important because some systems
+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the
+# libraries is broken (non-POSIX).
+
+# Create a list of thread flags to try.  Items starting with a "-" are
+# C compiler flags, and other items are library names, except for "none"
+# which indicates that we try without any flags at all, and "pthread-config"
+# which is a program returning the flags for the Pth emulation library.
+
+ax_pthread_flags="pthreads none -Kthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config"
+
+# The ordering *is* (sometimes) important.  Some notes on the
+# individual items follow:
+
+# pthreads: AIX (must check this before -lpthread)
+# none: in case threads are in libc; should be tried before -Kthread and
+#       other compiler flags to prevent continual compiler warnings
+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)
+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads), Tru64
+#           (Note: HP C rejects this with "bad form for `-t' option")
+# -pthreads: Solaris/gcc (Note: HP C also rejects)
+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it
+#      doesn't hurt to check since this sometimes defines pthreads and
+#      -D_REENTRANT too), HP C (must be checked before -lpthread, which
+#      is present but should not be used directly; and before -mthreads,
+#      because the compiler interprets this as "-mt" + "-hreads")
+# -mthreads: Mingw32/gcc, Lynx/gcc
+# pthread: Linux, etcetera
+# --thread-safe: KAI C++
+# pthread-config: use pthread-config program (for GNU Pth library)
 
-if test $ac_cv_header_stdc = yes; then
-  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+case $host_os in
+
+        freebsd*)
+
+        # -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)
+        # lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)
+
+        ax_pthread_flags="-kthread lthread $ax_pthread_flags"
+        ;;
+
+        hpux*)
+
+        # From the cc(1) man page: "[-mt] Sets various -D flags to enable
+        # multi-threading and also sets -lpthread."
+
+        ax_pthread_flags="-mt -pthread pthread $ax_pthread_flags"
+        ;;
+
+        openedition*)
+
+        # IBM z/OS requires a feature-test macro to be defined in order to
+        # enable POSIX threads at all, so give the user a hint if this is
+        # not set. (We don't define these ourselves, as they can affect
+        # other portions of the system API in unpredictable ways.)
+
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <string.h>
+
+#            if !defined(_OPEN_THREADS) && !defined(_UNIX03_THREADS)
+             AX_PTHREAD_ZOS_MISSING
+#            endif
 
 _ACEOF
 if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "memchr" >/dev/null 2>&1; then :
-
-else
-  ac_cv_header_stdc=no
+  $EGREP "AX_PTHREAD_ZOS_MISSING" >/dev/null 2>&1; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support." >&5
+$as_echo "$as_me: WARNING: IBM z/OS requires -D_OPEN_THREADS or -D_UNIX03_THREADS to enable pthreads support." >&2;}
 fi
 rm -f conftest*
 
+        ;;
+
+        solaris*)
+
+        # On Solaris (at least, for some versions), libc contains stubbed
+        # (non-functional) versions of the pthreads routines, so link-based
+        # tests will erroneously succeed. (N.B.: The stubs are missing
+        # pthread_cleanup_push, or rather a function called by this macro,
+        # so we could check for that, but who knows whether they'll stub
+        # that too in a future libc.)  So we'll check first for the
+        # standard Solaris way of linking pthreads (-mt -lpthread).
+
+        ax_pthread_flags="-mt,pthread pthread $ax_pthread_flags"
+        ;;
+esac
+
+# GCC generally uses -pthread, or -pthreads on some platforms (e.g. SPARC)
+
+if test "x$GCC" = "xyes"; then :
+  ax_pthread_flags="-pthread -pthreads $ax_pthread_flags"
 fi
 
-if test $ac_cv_header_stdc = yes; then
-  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdlib.h>
+# The presence of a feature test macro requesting re-entrant function
+# definitions is, on some systems, a strong hint that pthreads support is
+# correctly enabled
 
-_ACEOF
-if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
-  $EGREP "free" >/dev/null 2>&1; then :
+case $host_os in
+        darwin* | hpux* | linux* | osf* | solaris*)
+        ax_pthread_check_macro="_REENTRANT"
+        ;;
+
+        aix*)
+        ax_pthread_check_macro="_THREAD_SAFE"
+        ;;
 
+        *)
+        ax_pthread_check_macro="--"
+        ;;
+esac
+if test "x$ax_pthread_check_macro" = "x--"; then :
+  ax_pthread_check_cond=0
 else
-  ac_cv_header_stdc=no
+  ax_pthread_check_cond="!defined($ax_pthread_check_macro)"
 fi
-rm -f conftest*
 
-fi
+# Are we compiling with Clang?
 
-if test $ac_cv_header_stdc = yes; then
-  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
-  if test "$cross_compiling" = yes; then :
-  :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC is Clang" >&5
+$as_echo_n "checking whether $CC is Clang... " >&6; }
+if ${ax_cv_PTHREAD_CLANG+:} false; then :
+  $as_echo_n "(cached) " >&6
 else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+  ax_cv_PTHREAD_CLANG=no
+     # Note that Autoconf sets GCC=yes for Clang as well as GCC
+     if test "x$GCC" = "xyes"; then
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <ctype.h>
-#include <stdlib.h>
-#if ((' ' & 0x0FF) == 0x020)
-# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
-# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
-#else
-# define ISLOWER(c) \
-		   (('a' <= (c) && (c) <= 'i') \
-		     || ('j' <= (c) && (c) <= 'r') \
-		     || ('s' <= (c) && (c) <= 'z'))
-# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
-#endif
+/* Note: Clang 2.7 lacks __clang_[a-z]+__ */
+#            if defined(__clang__) && defined(__llvm__)
+             AX_PTHREAD_CC_IS_CLANG
+#            endif
 
-#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
-int
-main ()
-{
-  int i;
-  for (i = 0; i < 256; i++)
-    if (XOR (islower (i), ISLOWER (i))
-	|| toupper (i) != TOUPPER (i))
-      return 2;
-  return 0;
-}
 _ACEOF
-if ac_fn_c_try_run "$LINENO"; then :
-
-else
-  ac_cv_header_stdc=no
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "AX_PTHREAD_CC_IS_CLANG" >/dev/null 2>&1; then :
+  ax_cv_PTHREAD_CLANG=yes
 fi
-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
-  conftest.$ac_objext conftest.beam conftest.$ac_ext
-fi
-
-fi
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
-$as_echo "$ac_cv_header_stdc" >&6; }
-if test $ac_cv_header_stdc = yes; then
+rm -f conftest*
 
-$as_echo "#define STDC_HEADERS 1" >>confdefs.h
+     fi
 
 fi
-
-# On IRIX 5.3, sys/types and inttypes.h are conflicting.
-for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
-		  inttypes.h stdint.h unistd.h
-do :
-  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
-ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default
-"
-if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
-  cat >>confdefs.h <<_ACEOF
-#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG" >&5
+$as_echo "$ax_cv_PTHREAD_CLANG" >&6; }
+ax_pthread_clang="$ax_cv_PTHREAD_CLANG"
+
+ax_pthread_clang_warning=no
+
+# Clang needs special handling, because older versions handle the -pthread
+# option in a rather... idiosyncratic way
+
+if test "x$ax_pthread_clang" = "xyes"; then
+
+        # Clang takes -pthread; it has never supported any other flag
+
+        # (Note 1: This will need to be revisited if a system that Clang
+        # supports has POSIX threads in a separate library.  This tends not
+        # to be the way of modern systems, but it's conceivable.)
+
+        # (Note 2: On some systems, notably Darwin, -pthread is not needed
+        # to get POSIX threads support; the API is always present and
+        # active.  We could reasonably leave PTHREAD_CFLAGS empty.  But
+        # -pthread does define _REENTRANT, and while the Darwin headers
+        # ignore this macro, third-party headers might not.)
+
+        PTHREAD_CFLAGS="-pthread"
+        PTHREAD_LIBS=
+
+        ax_pthread_ok=yes
+
+        # However, older versions of Clang make a point of warning the user
+        # that, in an invocation where only linking and no compilation is
+        # taking place, the -pthread option has no effect ("argument unused
+        # during compilation").  They expect -pthread to be passed in only
+        # when source code is being compiled.
+        #
+        # Problem is, this is at odds with the way Automake and most other
+        # C build frameworks function, which is that the same flags used in
+        # compilation (CFLAGS) are also used in linking.  Many systems
+        # supported by AX_PTHREAD require exactly this for POSIX threads
+        # support, and in fact it is often not straightforward to specify a
+        # flag that is used only in the compilation phase and not in
+        # linking.  Such a scenario is extremely rare in practice.
+        #
+        # Even though use of the -pthread flag in linking would only print
+        # a warning, this can be a nuisance for well-run software projects
+        # that build with -Werror.  So if the active version of Clang has
+        # this misfeature, we search for an option to squash it.
+
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread" >&5
+$as_echo_n "checking whether Clang needs flag to prevent \"argument unused\" warning when linking with -pthread... " >&6; }
+if ${ax_cv_PTHREAD_CLANG_NO_WARN_FLAG+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ax_cv_PTHREAD_CLANG_NO_WARN_FLAG=unknown
+             # Create an alternate version of $ac_link that compiles and
+             # links in two steps (.c -> .o, .o -> exe) instead of one
+             # (.c -> exe), because the warning occurs only in the second
+             # step
+             ax_pthread_save_ac_link="$ac_link"
+             ax_pthread_sed='s/conftest\.\$ac_ext/conftest.$ac_objext/g'
+             ax_pthread_link_step=`$as_echo "$ac_link" | sed "$ax_pthread_sed"`
+             ax_pthread_2step_ac_link="($ac_compile) && (echo ==== >&5) && ($ax_pthread_link_step)"
+             ax_pthread_save_CFLAGS="$CFLAGS"
+             for ax_pthread_try in '' -Qunused-arguments -Wno-unused-command-line-argument unknown; do
+                if test "x$ax_pthread_try" = "xunknown"; then :
+  break
+fi
+                CFLAGS="-Werror -Wunknown-warning-option $ax_pthread_try -pthread $ax_pthread_save_CFLAGS"
+                ac_link="$ax_pthread_save_ac_link"
+                cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+int main(void){return 0;}
 _ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_link="$ax_pthread_2step_ac_link"
+                     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+int main(void){return 0;}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  break
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
 
 fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+             done
+             ac_link="$ax_pthread_save_ac_link"
+             CFLAGS="$ax_pthread_save_CFLAGS"
+             if test "x$ax_pthread_try" = "x"; then :
+  ax_pthread_try=no
+fi
+             ax_cv_PTHREAD_CLANG_NO_WARN_FLAG="$ax_pthread_try"
 
-done
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_CLANG_NO_WARN_FLAG" >&5
+$as_echo "$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG" >&6; }
 
+        case "$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG" in
+                no | unknown) ;;
+                *) PTHREAD_CFLAGS="$ax_cv_PTHREAD_CLANG_NO_WARN_FLAG $PTHREAD_CFLAGS" ;;
+        esac
 
+fi # $ax_pthread_clang = yes
+
+if test "x$ax_pthread_ok" = "xno"; then
+for ax_pthread_try_flag in $ax_pthread_flags; do
+
+        case $ax_pthread_try_flag in
+                none)
+                { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether pthreads work without any flags" >&5
+$as_echo_n "checking whether pthreads work without any flags... " >&6; }
+                ;;
+
+                -mt,pthread)
+                { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether pthreads work with -mt -lpthread" >&5
+$as_echo_n "checking whether pthreads work with -mt -lpthread... " >&6; }
+                PTHREAD_CFLAGS="-mt"
+                PTHREAD_LIBS="-lpthread"
+                ;;
+
+                -*)
+                { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether pthreads work with $ax_pthread_try_flag" >&5
+$as_echo_n "checking whether pthreads work with $ax_pthread_try_flag... " >&6; }
+                PTHREAD_CFLAGS="$ax_pthread_try_flag"
+                ;;
+
+                pthread-config)
+                # Extract the first word of "pthread-config", so it can be a program name with args.
+set dummy pthread-config; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_ax_pthread_config+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ax_pthread_config"; then
+  ac_cv_prog_ax_pthread_config="$ax_pthread_config" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ax_pthread_config="yes"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
 
-  ac_fn_c_check_header_mongrel "$LINENO" "minix/config.h" "ac_cv_header_minix_config_h" "$ac_includes_default"
-if test "x$ac_cv_header_minix_config_h" = xyes; then :
-  MINIX=yes
+  test -z "$ac_cv_prog_ax_pthread_config" && ac_cv_prog_ax_pthread_config="no"
+fi
+fi
+ax_pthread_config=$ac_cv_prog_ax_pthread_config
+if test -n "$ax_pthread_config"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_pthread_config" >&5
+$as_echo "$ax_pthread_config" >&6; }
 else
-  MINIX=
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
 
 
-  if test "$MINIX" = yes; then
-
-$as_echo "#define _POSIX_SOURCE 1" >>confdefs.h
-
-
-$as_echo "#define _POSIX_1_SOURCE 2" >>confdefs.h
-
-
-$as_echo "#define _MINIX 1" >>confdefs.h
-
-  fi
+                if test "x$ax_pthread_config" = "xno"; then :
+  continue
+fi
+                PTHREAD_CFLAGS="`pthread-config --cflags`"
+                PTHREAD_LIBS="`pthread-config --ldflags` `pthread-config --libs`"
+                ;;
 
+                *)
+                { $as_echo "$as_me:${as_lineno-$LINENO}: checking for the pthreads library -l$ax_pthread_try_flag" >&5
+$as_echo_n "checking for the pthreads library -l$ax_pthread_try_flag... " >&6; }
+                PTHREAD_LIBS="-l$ax_pthread_try_flag"
+                ;;
+        esac
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether it is safe to define __EXTENSIONS__" >&5
-$as_echo_n "checking whether it is safe to define __EXTENSIONS__... " >&6; }
-if ${ac_cv_safe_to_define___extensions__+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+        ax_pthread_save_CFLAGS="$CFLAGS"
+        ax_pthread_save_LIBS="$LIBS"
+        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
+        LIBS="$PTHREAD_LIBS $LIBS"
+
+        # Check for various functions.  We must include pthread.h,
+        # since some functions may be macros.  (On the Sequent, we
+        # need a special flag -Kthread to make this header compile.)
+        # We check for pthread_join because it is in -lpthread on IRIX
+        # while pthread_create is in libc.  We check for pthread_attr_init
+        # due to DEC craziness with -lpthreads.  We check for
+        # pthread_cleanup_push because it is one of the few pthread
+        # functions on Solaris that doesn't have a non-functional libc stub.
+        # We try pthread_create on general principles.
+
+        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-
-#         define __EXTENSIONS__ 1
-          $ac_includes_default
+#include <pthread.h>
+#                       if $ax_pthread_check_cond
+#                        error "$ax_pthread_check_macro must be defined"
+#                       endif
+                        static void routine(void *a) { a = 0; }
+                        static void *start_routine(void *a) { return a; }
 int
 main ()
 {
-
+pthread_t th; pthread_attr_t attr;
+                        pthread_create(&th, 0, start_routine, 0);
+                        pthread_join(th, 0);
+                        pthread_attr_init(&attr);
+                        pthread_cleanup_push(routine, 0);
+                        pthread_cleanup_pop(0) /* ; */
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_safe_to_define___extensions__=yes
-else
-  ac_cv_safe_to_define___extensions__=no
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_pthread_ok=yes
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_safe_to_define___extensions__" >&5
-$as_echo "$ac_cv_safe_to_define___extensions__" >&6; }
-  test $ac_cv_safe_to_define___extensions__ = yes &&
-    $as_echo "#define __EXTENSIONS__ 1" >>confdefs.h
-
-  $as_echo "#define _ALL_SOURCE 1" >>confdefs.h
-
-  $as_echo "#define _GNU_SOURCE 1" >>confdefs.h
-
-  $as_echo "#define _POSIX_PTHREAD_SEMANTICS 1" >>confdefs.h
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
 
-  $as_echo "#define _TANDEM_SOURCE 1" >>confdefs.h
+        CFLAGS="$ax_pthread_save_CFLAGS"
+        LIBS="$ax_pthread_save_LIBS"
 
+        { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_pthread_ok" >&5
+$as_echo "$ax_pthread_ok" >&6; }
+        if test "x$ax_pthread_ok" = "xyes"; then :
+  break
+fi
 
+        PTHREAD_LIBS=""
+        PTHREAD_CFLAGS=""
+done
+fi
 
+# Various other checks:
+if test "x$ax_pthread_ok" = "xyes"; then
+        ax_pthread_save_CFLAGS="$CFLAGS"
+        ax_pthread_save_LIBS="$LIBS"
+        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
+        LIBS="$PTHREAD_LIBS $LIBS"
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for __native_client__ defined" >&5
-$as_echo_n "checking for __native_client__ defined... " >&6; }
-if ${ac_cv_defined___native_client__+:} false; then :
+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for joinable pthread attribute" >&5
+$as_echo_n "checking for joinable pthread attribute... " >&6; }
+if ${ax_cv_PTHREAD_JOINABLE_ATTR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+  ax_cv_PTHREAD_JOINABLE_ATTR=unknown
+             for ax_pthread_attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do
+                 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-
+#include <pthread.h>
 int
 main ()
 {
-
-  #ifdef __native_client__
-  int ok;
-  #else
-  choke me
-  #endif
-
+int attr = $ax_pthread_attr; return attr /* ; */
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_defined___native_client__=yes
-else
-  ac_cv_defined___native_client__=no
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_PTHREAD_JOINABLE_ATTR=$ax_pthread_attr; break
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+             done
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_defined___native_client__" >&5
-$as_echo "$ac_cv_defined___native_client__" >&6; }
-if test $ac_cv_defined___native_client__ != "no"; then :
-  NATIVECLIENT="yes"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_JOINABLE_ATTR" >&5
+$as_echo "$ax_cv_PTHREAD_JOINABLE_ATTR" >&6; }
+        if test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xunknown" && \
+               test "x$ax_cv_PTHREAD_JOINABLE_ATTR" != "xPTHREAD_CREATE_JOINABLE" && \
+               test "x$ax_pthread_joinable_attr_defined" != "xyes"; then :
+
+cat >>confdefs.h <<_ACEOF
+#define PTHREAD_CREATE_JOINABLE $ax_cv_PTHREAD_JOINABLE_ATTR
+_ACEOF
+
+               ax_pthread_joinable_attr_defined=yes
+
 fi
 
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether more special flags are required for pthreads" >&5
+$as_echo_n "checking whether more special flags are required for pthreads... " >&6; }
+if ${ax_cv_PTHREAD_SPECIAL_FLAGS+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ax_cv_PTHREAD_SPECIAL_FLAGS=no
+             case $host_os in
+             solaris*)
+             ax_cv_PTHREAD_SPECIAL_FLAGS="-D_POSIX_PTHREAD_SEMANTICS"
+             ;;
+             esac
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_SPECIAL_FLAGS" >&5
+$as_echo "$ax_cv_PTHREAD_SPECIAL_FLAGS" >&6; }
+        if test "x$ax_cv_PTHREAD_SPECIAL_FLAGS" != "xno" && \
+               test "x$ax_pthread_special_flags_added" != "xyes"; then :
+  PTHREAD_CFLAGS="$ax_cv_PTHREAD_SPECIAL_FLAGS $PTHREAD_CFLAGS"
+               ax_pthread_special_flags_added=yes
+fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for _FORTIFY_SOURCE defined" >&5
-$as_echo_n "checking for _FORTIFY_SOURCE defined... " >&6; }
-if ${ac_cv_defined__FORTIFY_SOURCE+:} false; then :
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking for PTHREAD_PRIO_INHERIT" >&5
+$as_echo_n "checking for PTHREAD_PRIO_INHERIT... " >&6; }
+if ${ax_cv_PTHREAD_PRIO_INHERIT+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-
+#include <pthread.h>
 int
 main ()
 {
-
-  #ifdef _FORTIFY_SOURCE
-  int ok;
-  #else
-  choke me
-  #endif
-
+int i = PTHREAD_PRIO_INHERIT;
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_defined__FORTIFY_SOURCE=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_PTHREAD_PRIO_INHERIT=yes
 else
-  ac_cv_defined__FORTIFY_SOURCE=no
+  ax_cv_PTHREAD_PRIO_INHERIT=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_defined__FORTIFY_SOURCE" >&5
-$as_echo "$ac_cv_defined__FORTIFY_SOURCE" >&6; }
-if test $ac_cv_defined__FORTIFY_SOURCE != "no"; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_PTHREAD_PRIO_INHERIT" >&5
+$as_echo "$ax_cv_PTHREAD_PRIO_INHERIT" >&6; }
+        if test "x$ax_cv_PTHREAD_PRIO_INHERIT" = "xyes" && \
+               test "x$ax_pthread_prio_inherit_defined" != "xyes"; then :
 
-else
+$as_echo "#define HAVE_PTHREAD_PRIO_INHERIT 1" >>confdefs.h
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -D_FORTIFY_SOURCE=2" >&5
-$as_echo_n "checking whether C compiler accepts -D_FORTIFY_SOURCE=2... " >&6; }
-if ${ax_cv_check_cflags___D_FORTIFY_SOURCE_2+:} false; then :
+               ax_pthread_prio_inherit_defined=yes
+
+fi
+
+        CFLAGS="$ax_pthread_save_CFLAGS"
+        LIBS="$ax_pthread_save_LIBS"
+
+        # More AIX lossage: compile with *_r variant
+        if test "x$GCC" != "xyes"; then
+            case $host_os in
+                aix*)
+                case "x/$CC" in #(
+  x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6) :
+    #handle absolute path differently from PATH based program lookup
+                     case "x$CC" in #(
+  x/*) :
+    if as_fn_executable_p ${CC}_r; then :
+  PTHREAD_CC="${CC}_r"
+fi ;; #(
+  *) :
+    for ac_prog in ${CC}_r
+do
+  # Extract the first word of "$ac_prog", so it can be a program name with args.
+set dummy $ac_prog; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_PTHREAD_CC+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -D_FORTIFY_SOURCE=2"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___D_FORTIFY_SOURCE_2=yes
+  if test -n "$PTHREAD_CC"; then
+  ac_cv_prog_PTHREAD_CC="$PTHREAD_CC" # Let the user override the test.
 else
-  ax_cv_check_cflags___D_FORTIFY_SOURCE_2=no
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_PTHREAD_CC="$ac_prog"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___D_FORTIFY_SOURCE_2" >&5
-$as_echo "$ax_cv_check_cflags___D_FORTIFY_SOURCE_2" >&6; }
-if test "x$ax_cv_check_cflags___D_FORTIFY_SOURCE_2" = xyes; then :
-  CPPFLAGS="$CPPFLAGS -D_FORTIFY_SOURCE=2"
+PTHREAD_CC=$ac_cv_prog_PTHREAD_CC
+if test -n "$PTHREAD_CC"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PTHREAD_CC" >&5
+$as_echo "$PTHREAD_CC" >&6; }
 else
-  :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
 
 
+  test -n "$PTHREAD_CC" && break
+done
+test -n "$PTHREAD_CC" || PTHREAD_CC="$CC"
+ ;;
+esac ;; #(
+  *) :
+     ;;
+esac
+                ;;
+            esac
+        fi
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fvisibility=hidden" >&5
-$as_echo_n "checking whether C compiler accepts -fvisibility=hidden... " >&6; }
-if ${ax_cv_check_cflags___fvisibility_hidden+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
+test -n "$PTHREAD_CC" || PTHREAD_CC="$CC"
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -fvisibility=hidden"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+
+
+
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test "x$ax_pthread_ok" = "xyes"; then
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+
+        #include <pthread.h>
+
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+
+        pthread_mutex_t mutex;
+
+        pthread_mutex_lock(&mutex);
+        pthread_mutex_unlock(&mutex)
+
+
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___fvisibility_hidden=yes
+if ac_fn_c_try_link "$LINENO"; then :
+
+
+$as_echo "#define HAVE_PTHREAD 1" >>confdefs.h
+
+        with_threads="yes"
+        LIBS="$PTHREAD_LIBS $LIBS"
+        PKGCONFIG_LIBS_PRIVATE="$PTHREAD_LIBS $PTHREAD_CFLAGS $PKGCONFIG_LIBS_PRIVATE"
+        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
+        CC="$PTHREAD_CC"
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+        :
 else
-  ax_cv_check_cflags___fvisibility_hidden=no
+        ax_pthread_ok=no
+         { $as_echo "$as_me:${as_lineno-$LINENO}: pthread mutexes are not available" >&5
+$as_echo "$as_me: pthread mutexes are not available" >&6;}
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fvisibility_hidden" >&5
-$as_echo "$ax_cv_check_cflags___fvisibility_hidden" >&6; }
-if test "x$ax_cv_check_cflags___fvisibility_hidden" = xyes; then :
-  CFLAGS="$CFLAGS -fvisibility=hidden"
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+
 else
-  :
+  with_threads="no"
 fi
 
 
-case $host_os in #(
-  cygwin*|mingw*|msys|pw32*|cegcc*) :
-      ;; #(
-  *) :
+# Check whether --with-safecode was given.
+if test "${with_safecode+set}" = set; then :
+  withval=$with_safecode; if test "x$withval" = "xyes"; then :
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fPIC" >&5
-$as_echo_n "checking whether C compiler accepts -fPIC... " >&6; }
-if ${ax_cv_check_cflags___fPIC+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -fPIC"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___fPIC=yes
-else
-  ax_cv_check_cflags___fPIC=no
+    : ${SAFECODE_HOME:=/opt/safecode}
+    LDFLAGS="$LDFLAGS -L${SAFECODE_HOME}/lib"
+    LIBS="$LIBS -lsc_dbg_rt -lpoolalloc_bitmap -lstdc++"
+    CFLAGS="$CFLAGS -fmemsafety"
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fPIC" >&5
-$as_echo "$ax_cv_check_cflags___fPIC" >&6; }
-if test "x$ax_cv_check_cflags___fPIC" = xyes; then :
 
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -fPIC" >&5
-$as_echo_n "checking whether the linker accepts -fPIC... " >&6; }
-if ${ax_cv_check_ldflags___fPIC+:} false; then :
+
+
+# Check whether --with-ctgrind was given.
+if test "${with_ctgrind+set}" = set; then :
+  withval=$with_ctgrind; if test "x$withval" = "xyes"; then :
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ct_poison in -lctgrind" >&5
+$as_echo_n "checking for ct_poison in -lctgrind... " >&6; }
+if ${ac_cv_lib_ctgrind_ct_poison+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -fPIC"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-lctgrind  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char ct_poison ();
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+return ct_poison ();
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___fPIC=yes
+  ac_cv_lib_ctgrind_ct_poison=yes
 else
-  ax_cv_check_ldflags___fPIC=no
+  ac_cv_lib_ctgrind_ct_poison=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+LIBS=$ac_check_lib_save_LIBS
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___fPIC" >&5
-$as_echo "$ax_cv_check_ldflags___fPIC" >&6; }
-if test "x$ax_cv_check_ldflags___fPIC" = xyes; then :
-  CFLAGS="$CFLAGS -fPIC"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_ctgrind_ct_poison" >&5
+$as_echo "$ac_cv_lib_ctgrind_ct_poison" >&6; }
+if test "x$ac_cv_lib_ctgrind_ct_poison" = xyes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_LIBCTGRIND 1
+_ACEOF
+
+  LIBS="-lctgrind $LIBS"
 
-else
-  :
 fi
 
 
-else
-  :
 fi
 
- ;;
-esac
+fi
 
-if test "$enable_pie" != "no"; then :
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fPIE" >&5
-$as_echo_n "checking whether C compiler accepts -fPIE... " >&6; }
-if ${ax_cv_check_cflags___fPIE+:} false; then :
+# Check whether --enable-retpoline was given.
+if test "${enable_retpoline+set}" = set; then :
+  enableval=$enable_retpoline; if test "x$enableval" = "xyes"; then :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mindirect-branch=thunk-inline" >&5
+$as_echo_n "checking whether C compiler accepts -mindirect-branch=thunk-inline... " >&6; }
+if ${ax_cv_check_cflags___mindirect_branch_thunk_inline+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -fPIE"
+  CFLAGS="$CFLAGS  -mindirect-branch=thunk-inline"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___fPIE=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mindirect_branch_thunk_inline=yes
 else
-  ax_cv_check_cflags___fPIE=no
+  ax_cv_check_cflags___mindirect_branch_thunk_inline=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fPIE" >&5
-$as_echo "$ax_cv_check_cflags___fPIE" >&6; }
-if test "x$ax_cv_check_cflags___fPIE" = xyes; then :
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -fPIE" >&5
-$as_echo_n "checking whether the linker accepts -fPIE... " >&6; }
-if ${ax_cv_check_ldflags___fPIE+:} false; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mindirect_branch_thunk_inline" >&5
+$as_echo "$ax_cv_check_cflags___mindirect_branch_thunk_inline" >&6; }
+if test "x$ax_cv_check_cflags___mindirect_branch_thunk_inline" = xyes; then :
+  CFLAGS="$CFLAGS -mindirect-branch=thunk-inline"
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mretpoline" >&5
+$as_echo_n "checking whether C compiler accepts -mretpoline... " >&6; }
+if ${ax_cv_check_cflags___mretpoline+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -fPIE"
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mretpoline"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___fPIE=yes
+  ax_cv_check_cflags___mretpoline=yes
 else
-  ax_cv_check_ldflags___fPIE=no
+  ax_cv_check_cflags___mretpoline=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+  CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___fPIE" >&5
-$as_echo "$ax_cv_check_ldflags___fPIE" >&6; }
-if test "x$ax_cv_check_ldflags___fPIE" = xyes; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -pie" >&5
-$as_echo_n "checking whether the linker accepts -pie... " >&6; }
-if ${ax_cv_check_ldflags___pie+:} false; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mretpoline" >&5
+$as_echo "$ax_cv_check_cflags___mretpoline" >&6; }
+if test "x$ax_cv_check_cflags___mretpoline" = xyes; then :
+  CFLAGS="$CFLAGS -mretpoline"
+else
+  :
+fi
+
+
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mindirect-branch-register" >&5
+$as_echo_n "checking whether C compiler accepts -mindirect-branch-register... " >&6; }
+if ${ax_cv_check_cflags___mindirect_branch_register+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -pie"
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mindirect-branch-register"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___pie=yes
+  ax_cv_check_cflags___mindirect_branch_register=yes
 else
-  ax_cv_check_ldflags___pie=no
+  ax_cv_check_cflags___mindirect_branch_register=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+  CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___pie" >&5
-$as_echo "$ax_cv_check_ldflags___pie" >&6; }
-if test "x$ax_cv_check_ldflags___pie" = xyes; then :
-  CFLAGS="$CFLAGS -fPIE"
-         LDFLAGS="$LDFLAGS -pie"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mindirect_branch_register" >&5
+$as_echo "$ax_cv_check_cflags___mindirect_branch_register" >&6; }
+if test "x$ax_cv_check_cflags___mindirect_branch_register" = xyes; then :
+  :
 else
   :
 fi
 
 
-else
-  :
 fi
 
+fi
+
+
+ENABLE_CWFLAGS=no
+# Check whether --enable-debug was given.
+if test "${enable_debug+set}" = set; then :
+  enableval=$enable_debug;
+  if test "x$enableval" = "xyes"; then :
+
+    if test "x$LX_CFLAGS" = "xNONE"; then :
+
+      nxflags=""
+      for flag in `echo $CFLAGS`; do
+        case $flag in #(
+  -O*) :
+      ;; #(
+  -g*) :
+      ;; #(
+  *) :
+    as_fn_append nxflags " $flag" ;; #(
+  *) :
+     ;;
+esac
+      done
+      CFLAGS="$nxflags -O -g3"
 
-else
-  :
 fi
+    ENABLE_CWFLAGS=yes
+    CPPFLAGS="$CPPFLAGS -DDEBUG=1 -U_FORTIFY_SOURCE"
 
+fi
 
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fno-strict-aliasing" >&5
-$as_echo_n "checking whether C compiler accepts -fno-strict-aliasing... " >&6; }
-if ${ax_cv_check_cflags___fno_strict_aliasing+:} false; then :
+
+# Check whether --enable-opt was given.
+if test "${enable_opt+set}" = set; then :
+  enableval=$enable_opt;
+  if test "x$enableval" = "xyes"; then :
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -Ofast" >&5
+$as_echo_n "checking whether C compiler accepts -Ofast... " >&6; }
+if ${ax_cv_check_cflags___Ofast+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -fno-strict-aliasing"
+  CFLAGS="$CFLAGS  -Ofast"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___fno_strict_aliasing=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___Ofast=yes
 else
-  ax_cv_check_cflags___fno_strict_aliasing=no
+  ax_cv_check_cflags___Ofast=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fno_strict_aliasing" >&5
-$as_echo "$ax_cv_check_cflags___fno_strict_aliasing" >&6; }
-if test "x$ax_cv_check_cflags___fno_strict_aliasing" = xyes; then :
-  CFLAGS="$CFLAGS -fno-strict-aliasing"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___Ofast" >&5
+$as_echo "$ax_cv_check_cflags___Ofast" >&6; }
+if test "x$ax_cv_check_cflags___Ofast" = xyes; then :
+  CFLAGS="$CFLAGS -Ofast"
 else
   :
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fno-strict-overflow" >&5
-$as_echo_n "checking whether C compiler accepts -fno-strict-overflow... " >&6; }
-if ${ax_cv_check_cflags___fno_strict_overflow+:} false; then :
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -ftree-vectorize" >&5
+$as_echo_n "checking whether C compiler accepts -ftree-vectorize... " >&6; }
+if ${ax_cv_check_cflags___ftree_vectorize+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -fno-strict-overflow"
+  CFLAGS="$CFLAGS  -ftree-vectorize"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___fno_strict_overflow=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___ftree_vectorize=yes
 else
-  ax_cv_check_cflags___fno_strict_overflow=no
+  ax_cv_check_cflags___ftree_vectorize=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fno_strict_overflow" >&5
-$as_echo "$ax_cv_check_cflags___fno_strict_overflow" >&6; }
-if test "x$ax_cv_check_cflags___fno_strict_overflow" = xyes; then :
-  CFLAGS="$CFLAGS -fno-strict-overflow"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___ftree_vectorize" >&5
+$as_echo "$ax_cv_check_cflags___ftree_vectorize" >&6; }
+if test "x$ax_cv_check_cflags___ftree_vectorize" = xyes; then :
+  CFLAGS="$CFLAGS -ftree-vectorize"
 else
+  :
+fi
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fwrapv" >&5
-$as_echo_n "checking whether C compiler accepts -fwrapv... " >&6; }
-if ${ax_cv_check_cflags___fwrapv+:} false; then :
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -ftree-slp-vectorize" >&5
+$as_echo_n "checking whether C compiler accepts -ftree-slp-vectorize... " >&6; }
+if ${ax_cv_check_cflags___ftree_slp_vectorize+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -fwrapv"
+  CFLAGS="$CFLAGS  -ftree-slp-vectorize"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___fwrapv=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___ftree_slp_vectorize=yes
 else
-  ax_cv_check_cflags___fwrapv=no
+  ax_cv_check_cflags___ftree_slp_vectorize=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fwrapv" >&5
-$as_echo "$ax_cv_check_cflags___fwrapv" >&6; }
-if test "x$ax_cv_check_cflags___fwrapv" = xyes; then :
-  CFLAGS="$CFLAGS -fwrapv"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___ftree_slp_vectorize" >&5
+$as_echo "$ax_cv_check_cflags___ftree_slp_vectorize" >&6; }
+if test "x$ax_cv_check_cflags___ftree_slp_vectorize" = xyes; then :
+  CFLAGS="$CFLAGS -ftree-slp-vectorize"
 else
   :
 fi
 
-
-fi
-
-
-LIBTOOL_OLD_FLAGS="$LIBTOOL_EXTRA_FLAGS"
-LIBTOOL_EXTRA_FLAGS="$LIBTOOL_EXTRA_FLAGS -version-info $SODIUM_LIBRARY_VERSION"
-# Check whether --enable-soname-versions was given.
-if test "${enable_soname_versions+set}" = set; then :
-  enableval=$enable_soname_versions;
-        if test "x$enableval" = "xno"; then :
-
-          LIBTOOL_EXTRA_FLAGS="$LIBTOOL_OLD_FLAGS -avoid-version"
-
-fi
-
-
-fi
-
-
-case $host_os in #(
-  cygwin*|mingw*|msys|pw32*|cegcc*) :
-
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,--dynamicbase" >&5
-$as_echo_n "checking whether the linker accepts -Wl,--dynamicbase... " >&6; }
-if ${ax_cv_check_ldflags___Wl___dynamicbase+:} false; then :
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fomit-frame-pointer" >&5
+$as_echo_n "checking whether C compiler accepts -fomit-frame-pointer... " >&6; }
+if ${ax_cv_check_cflags___fomit_frame_pointer+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -Wl,--dynamicbase"
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fomit-frame-pointer"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___Wl___dynamicbase=yes
+  ax_cv_check_cflags___fomit_frame_pointer=yes
 else
-  ax_cv_check_ldflags___Wl___dynamicbase=no
+  ax_cv_check_cflags___fomit_frame_pointer=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+  CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl___dynamicbase" >&5
-$as_echo "$ax_cv_check_ldflags___Wl___dynamicbase" >&6; }
-if test "x$ax_cv_check_ldflags___Wl___dynamicbase" = xyes; then :
-  LDFLAGS="$LDFLAGS -Wl,--dynamicbase"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fomit_frame_pointer" >&5
+$as_echo "$ax_cv_check_cflags___fomit_frame_pointer" >&6; }
+if test "x$ax_cv_check_cflags___fomit_frame_pointer" = xyes; then :
+  CFLAGS="$CFLAGS -fomit-frame-pointer"
 else
   :
 fi
 
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,--nxcompat" >&5
-$as_echo_n "checking whether the linker accepts -Wl,--nxcompat... " >&6; }
-if ${ax_cv_check_ldflags___Wl___nxcompat+:} false; then :
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -march=native" >&5
+$as_echo_n "checking whether C compiler accepts -march=native... " >&6; }
+if ${ax_cv_check_cflags___march_native+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -Wl,--nxcompat"
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -march=native"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___Wl___nxcompat=yes
+  ax_cv_check_cflags___march_native=yes
 else
-  ax_cv_check_ldflags___Wl___nxcompat=no
+  ax_cv_check_cflags___march_native=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+  CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl___nxcompat" >&5
-$as_echo "$ax_cv_check_ldflags___Wl___nxcompat" >&6; }
-if test "x$ax_cv_check_ldflags___Wl___nxcompat" = xyes; then :
-  LDFLAGS="$LDFLAGS -Wl,--nxcompat"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___march_native" >&5
+$as_echo "$ax_cv_check_cflags___march_native" >&6; }
+if test "x$ax_cv_check_cflags___march_native" = xyes; then :
+  CFLAGS="$CFLAGS -march=native"
 else
   :
 fi
 
-   ;; #(
-  *) :
-     ;;
-esac
 
-if test "x$enable_ssp" != "xno"; then :
+fi
 
+fi
 
-case $host_os in #(
-  cygwin*|mingw*|msys|pw32*|cegcc*|*aix*|*sunos*|*solaris*) :
-      ;; #(
-  *) :
 
-    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fstack-protector" >&5
-$as_echo_n "checking whether C compiler accepts -fstack-protector... " >&6; }
-if ${ax_cv_check_cflags___fstack_protector+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -fstack-protector"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___fstack_protector=yes
+
+
+
+		# Check whether --enable-valgrind was given.
+if test "${enable_valgrind+set}" = set; then :
+  enableval=$enable_valgrind; enable_valgrind=$enableval
 else
-  ax_cv_check_cflags___fstack_protector=no
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+  enable_valgrind=no
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fstack_protector" >&5
-$as_echo "$ax_cv_check_cflags___fstack_protector" >&6; }
-if test "x$ax_cv_check_cflags___fstack_protector" = xyes; then :
 
-      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -fstack-protector" >&5
-$as_echo_n "checking whether the linker accepts -fstack-protector... " >&6; }
-if ${ax_cv_check_ldflags___fstack_protector+:} false; then :
+
+	if test "$enable_valgrind" != "no"; then :
+
+		# Check for Valgrind.
+		# Extract the first word of "valgrind", so it can be a program name with args.
+set dummy valgrind; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_VALGRIND+:} false; then :
   $as_echo_n "(cached) " >&6
 else
+  if test -n "$VALGRIND"; then
+  ac_cv_prog_VALGRIND="$VALGRIND" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_VALGRIND="valgrind"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
 
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -fstack-protector"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___fstack_protector=yes
+fi
+fi
+VALGRIND=$ac_cv_prog_VALGRIND
+if test -n "$VALGRIND"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $VALGRIND" >&5
+$as_echo "$VALGRIND" >&6; }
 else
-  ax_cv_check_ldflags___fstack_protector=no
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+
+
+		if test "$VALGRIND" = ""; then :
+
+			if test "$enable_valgrind" = "yes"; then :
+
+				as_fn_error $? "Could not find valgrind; either install it or reconfigure with --disable-valgrind" "$LINENO" 5
+
+else
+
+				enable_valgrind=no
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___fstack_protector" >&5
-$as_echo "$ax_cv_check_ldflags___fstack_protector" >&6; }
-if test "x$ax_cv_check_ldflags___fstack_protector" = xyes; then :
-  CFLAGS="$CFLAGS -fstack-protector"
 
 else
-  :
+
+			enable_valgrind=yes
+
 fi
 
+fi
 
+	 if test "$enable_valgrind" = "yes"; then
+  VALGRIND_ENABLED_TRUE=
+  VALGRIND_ENABLED_FALSE='#'
 else
-  :
+  VALGRIND_ENABLED_TRUE='#'
+  VALGRIND_ENABLED_FALSE=
 fi
 
-   ;; #(
-  *) :
-     ;;
-esac
+	VALGRIND_ENABLED=$enable_valgrind
+
 
+	# Check for Valgrind tools we care about.
+	valgrind_enabled_tools=
+
+		# Check whether --enable-valgrind-memcheck was given.
+if test "${enable_valgrind_memcheck+set}" = set; then :
+  enableval=$enable_valgrind_memcheck; enable_valgrind_memcheck=$enableval
+else
+  enable_valgrind_memcheck=
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -Winit-self" >&5
-$as_echo_n "checking whether C compiler accepts -Winit-self... " >&6; }
-if ${ax_cv_check_cflags___Winit_self+:} false; then :
+		if test "$enable_valgrind" = "no"; then :
+
+			enable_valgrind_memcheck=no
+elif test "$enable_valgrind_memcheck" != "no"; then :
+
+			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Valgrind tool memcheck" >&5
+$as_echo_n "checking for Valgrind tool memcheck... " >&6; }
+if ${ax_cv_valgrind_tool_memcheck+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -Winit-self"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___Winit_self=yes
-else
-  ax_cv_check_cflags___Winit_self=no
+				ax_cv_valgrind_tool_memcheck=no
+
+				if `$VALGRIND --tool=memcheck --help >/dev/null 2>&1`; then :
+
+					ax_cv_valgrind_tool_memcheck=yes
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___Winit_self" >&5
-$as_echo "$ax_cv_check_cflags___Winit_self" >&6; }
-if test "x$ax_cv_check_cflags___Winit_self" = xyes; then :
-  CFLAGS="$CFLAGS -Winit-self"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_valgrind_tool_memcheck" >&5
+$as_echo "$ax_cv_valgrind_tool_memcheck" >&6; }
+			if test "$ax_cv_valgrind_tool_memcheck" = "no"; then :
+
+				if test "$enable_valgrind_memcheck" = "yes"; then :
+
+					as_fn_error $? "Valgrind does not support memcheck; reconfigure with --disable-valgrind-memcheck" "$LINENO" 5
+
 else
-  :
+
+					enable_valgrind_memcheck=no
+
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -Wwrite-strings" >&5
-$as_echo_n "checking whether C compiler accepts -Wwrite-strings... " >&6; }
-if ${ax_cv_check_cflags___Wwrite_strings+:} false; then :
-  $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -Wwrite-strings"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___Wwrite_strings=yes
-else
-  ax_cv_check_cflags___Wwrite_strings=no
+				enable_valgrind_memcheck=yes
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+
+fi
+		if test "$enable_valgrind_memcheck" = "yes"; then :
+
+			valgrind_enabled_tools="$valgrind_enabled_tools memcheck"
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___Wwrite_strings" >&5
-$as_echo "$ax_cv_check_cflags___Wwrite_strings" >&6; }
-if test "x$ax_cv_check_cflags___Wwrite_strings" = xyes; then :
-  CFLAGS="$CFLAGS -Wwrite-strings"
+		ENABLE_VALGRIND_memcheck=$enable_valgrind_memcheck
+
+
+		# Check whether --enable-valgrind-helgrind was given.
+if test "${enable_valgrind_helgrind+set}" = set; then :
+  enableval=$enable_valgrind_helgrind; enable_valgrind_helgrind=$enableval
 else
-  :
+  enable_valgrind_helgrind=
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -Wdiv-by-zero" >&5
-$as_echo_n "checking whether C compiler accepts -Wdiv-by-zero... " >&6; }
-if ${ax_cv_check_cflags___Wdiv_by_zero+:} false; then :
+		if test "$enable_valgrind" = "no"; then :
+
+			enable_valgrind_helgrind=no
+elif test "$enable_valgrind_helgrind" != "no"; then :
+
+			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Valgrind tool helgrind" >&5
+$as_echo_n "checking for Valgrind tool helgrind... " >&6; }
+if ${ax_cv_valgrind_tool_helgrind+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -Wdiv-by-zero"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___Wdiv_by_zero=yes
-else
-  ax_cv_check_cflags___Wdiv_by_zero=no
+				ax_cv_valgrind_tool_helgrind=no
+
+				if `$VALGRIND --tool=helgrind --help >/dev/null 2>&1`; then :
+
+					ax_cv_valgrind_tool_helgrind=yes
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___Wdiv_by_zero" >&5
-$as_echo "$ax_cv_check_cflags___Wdiv_by_zero" >&6; }
-if test "x$ax_cv_check_cflags___Wdiv_by_zero" = xyes; then :
-  CFLAGS="$CFLAGS -Wdiv-by-zero"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_valgrind_tool_helgrind" >&5
+$as_echo "$ax_cv_valgrind_tool_helgrind" >&6; }
+			if test "$ax_cv_valgrind_tool_helgrind" = "no"; then :
+
+				if test "$enable_valgrind_helgrind" = "yes"; then :
+
+					as_fn_error $? "Valgrind does not support helgrind; reconfigure with --disable-valgrind-helgrind" "$LINENO" 5
+
 else
-  :
+
+					enable_valgrind_helgrind=no
+
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -Wsometimes-uninitialized" >&5
-$as_echo_n "checking whether C compiler accepts -Wsometimes-uninitialized... " >&6; }
-if ${ax_cv_check_cflags___Wsometimes_uninitialized+:} false; then :
-  $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -Wsometimes-uninitialized"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___Wsometimes_uninitialized=yes
-else
-  ax_cv_check_cflags___Wsometimes_uninitialized=no
+				enable_valgrind_helgrind=yes
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___Wsometimes_uninitialized" >&5
-$as_echo "$ax_cv_check_cflags___Wsometimes_uninitialized" >&6; }
-if test "x$ax_cv_check_cflags___Wsometimes_uninitialized" = xyes; then :
-  CFLAGS="$CFLAGS -Wsometimes-uninitialized"
-else
-  :
+		if test "$enable_valgrind_helgrind" = "yes"; then :
+
+			valgrind_enabled_tools="$valgrind_enabled_tools helgrind"
+
 fi
+		ENABLE_VALGRIND_helgrind=$enable_valgrind_helgrind
 
 
+		# Check whether --enable-valgrind-drd was given.
+if test "${enable_valgrind_drd+set}" = set; then :
+  enableval=$enable_valgrind_drd; enable_valgrind_drd=$enableval
+else
+  enable_valgrind_drd=
+fi
+
+		if test "$enable_valgrind" = "no"; then :
 
+			enable_valgrind_drd=no
+elif test "$enable_valgrind_drd" != "no"; then :
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wall" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wall" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wall... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
+			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Valgrind tool drd" >&5
+$as_echo_n "checking for Valgrind tool drd... " >&6; }
+if ${ax_cv_valgrind_tool_drd+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wall"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
-else
-  eval "$as_CACHEVAR=no"
+				ax_cv_valgrind_tool_drd=no
+
+				if `$VALGRIND --tool=drd --help >/dev/null 2>&1`; then :
+
+					ax_cv_valgrind_tool_drd=yes
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+
 fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wall"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_valgrind_tool_drd" >&5
+$as_echo "$ax_cv_valgrind_tool_drd" >&6; }
+			if test "$ax_cv_valgrind_tool_drd" = "no"; then :
+
+				if test "$enable_valgrind_drd" = "yes"; then :
+
+					as_fn_error $? "Valgrind does not support drd; reconfigure with --disable-valgrind-drd" "$LINENO" 5
+
 else
-  :
+
+					enable_valgrind_drd=no
+
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wextra" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wextra" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wextra... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
-  $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wextra"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
-else
-  eval "$as_CACHEVAR=no"
+				enable_valgrind_drd=yes
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+
 fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wextra"
-else
-  :
+		if test "$enable_valgrind_drd" = "yes"; then :
+
+			valgrind_enabled_tools="$valgrind_enabled_tools drd"
+
 fi
+		ENABLE_VALGRIND_drd=$enable_valgrind_drd
 
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for clang" >&5
-$as_echo_n "checking for clang... " >&6; }
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
+		# Check whether --enable-valgrind-sgcheck was given.
+if test "${enable_valgrind_sgcheck+set}" = set; then :
+  enableval=$enable_valgrind_sgcheck; enable_valgrind_sgcheck=$enableval
+else
+  enable_valgrind_sgcheck=
+fi
 
-int
-main ()
-{
+		if test "$enable_valgrind" = "no"; then :
 
-#ifndef __clang__
-be sad
-#endif
+			enable_valgrind_sgcheck=no
+elif test "$enable_valgrind_sgcheck" != "no"; then :
 
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-   as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wno-unknown-warning-option" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wno-unknown-warning-option" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wno-unknown-warning-option... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
+			{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Valgrind tool sgcheck" >&5
+$as_echo_n "checking for Valgrind tool sgcheck... " >&6; }
+if ${ax_cv_valgrind_tool_sgcheck+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wno-unknown-warning-option"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
-else
-  eval "$as_CACHEVAR=no"
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+				ax_cv_valgrind_tool_sgcheck=no
+
+				if `$VALGRIND --tool=exp-sgcheck --help >/dev/null 2>&1`; then :
+
+					ax_cv_valgrind_tool_sgcheck=yes
+
 fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wno-unknown-warning-option"
-else
-  :
+
 fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_valgrind_tool_sgcheck" >&5
+$as_echo "$ax_cv_valgrind_tool_sgcheck" >&6; }
+			if test "$ax_cv_valgrind_tool_sgcheck" = "no"; then :
 
+				if test "$enable_valgrind_sgcheck" = "yes"; then :
+
+					as_fn_error $? "Valgrind does not support sgcheck; reconfigure with --disable-valgrind-sgcheck" "$LINENO" 5
 
 else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
+
+					enable_valgrind_sgcheck=no
 
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wbad-function-cast" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wbad-function-cast" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wbad-function-cast... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
-  $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wbad-function-cast"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
-else
-  eval "$as_CACHEVAR=no"
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+				enable_valgrind_sgcheck=yes
+
 fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wbad-function-cast"
-else
-  :
+
 fi
+		if test "$enable_valgrind_sgcheck" = "yes"; then :
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wcast-align" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wcast-align" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wcast-align... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
+			valgrind_enabled_tools="$valgrind_enabled_tools sgcheck"
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wcast-align"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
-else
-  eval "$as_CACHEVAR=no"
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wcast-align"
-else
-  :
 fi
+		ENABLE_VALGRIND_sgcheck=$enable_valgrind_sgcheck
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wcast-qual" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wcast-qual" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wcast-qual... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wcast-qual"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
-{
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
-else
-  eval "$as_CACHEVAR=no"
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wcast-qual"
-else
-  :
+	valgrind_tools="memcheck helgrind drd sgcheck"
+
+	valgrind_enabled_tools=$valgrind_enabled_tools
+
+
+VALGRIND_CHECK_RULES='
+# Valgrind check
+#
+# Optional:
+#  - VALGRIND_SUPPRESSIONS_FILES: Space-separated list of Valgrind suppressions
+#    files to load. (Default: empty)
+#  - VALGRIND_FLAGS: General flags to pass to all Valgrind tools.
+#    (Default: --num-callers=30)
+#  - VALGRIND_$toolname_FLAGS: Flags to pass to Valgrind $toolname (one of:
+#    memcheck, helgrind, drd, sgcheck). (Default: various)
+
+# Optional variables
+VALGRIND_SUPPRESSIONS ?= $(addprefix --suppressions=,$(VALGRIND_SUPPRESSIONS_FILES))
+VALGRIND_FLAGS ?= --num-callers=30
+VALGRIND_memcheck_FLAGS ?= --leak-check=full --show-reachable=no
+VALGRIND_helgrind_FLAGS ?= --history-level=approx
+VALGRIND_drd_FLAGS ?=
+VALGRIND_sgcheck_FLAGS ?=
+
+# Internal use
+valgrind_log_files = $(addprefix test-suite-,$(addsuffix .log,$(valgrind_tools)))
+
+valgrind_memcheck_flags = --tool=memcheck $(VALGRIND_memcheck_FLAGS)
+valgrind_helgrind_flags = --tool=helgrind $(VALGRIND_helgrind_FLAGS)
+valgrind_drd_flags = --tool=drd $(VALGRIND_drd_FLAGS)
+valgrind_sgcheck_flags = --tool=exp-sgcheck $(VALGRIND_sgcheck_FLAGS)
+
+valgrind_quiet = $(valgrind_quiet_$(V))
+valgrind_quiet_ = $(valgrind_quiet_$(AM_DEFAULT_VERBOSITY))
+valgrind_quiet_0 = --quiet
+valgrind_v_use   = $(valgrind_v_use_$(V))
+valgrind_v_use_  = $(valgrind_v_use_$(AM_DEFAULT_VERBOSITY))
+valgrind_v_use_0 = @echo "  USE   " $(patsubst check-valgrind-%,%,$''@):;
+
+# Support running with and without libtool.
+ifneq ($(LIBTOOL),)
+valgrind_lt = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=execute
+else
+valgrind_lt =
+endif
+
+# Use recursive makes in order to ignore errors during check
+check-valgrind:
+ifeq ($(VALGRIND_ENABLED),yes)
+	$(A''M_V_at)$(MAKE) $(AM_MAKEFLAGS) -k \
+		$(foreach tool, $(valgrind_enabled_tools), check-valgrind-$(tool))
+else
+	@echo "Need to use GNU make and reconfigure with --enable-valgrind"
+endif
+
+# Valgrind running
+VALGRIND_TESTS_ENVIRONMENT = \
+	$(TESTS_ENVIRONMENT) \
+	env VALGRIND=$(VALGRIND) \
+	G_SLICE=always-malloc,debug-blocks \
+	G_DEBUG=fatal-warnings,fatal-criticals,gc-friendly
+
+VALGRIND_LOG_COMPILER = \
+	$(valgrind_lt) \
+	$(VALGRIND) $(VALGRIND_SUPPRESSIONS) --error-exitcode=1 $(VALGRIND_FLAGS)
+
+define valgrind_tool_rule =
+check-valgrind-$(1):
+ifeq ($$(VALGRIND_ENABLED)-$$(ENABLE_VALGRIND_$(1)),yes-yes)
+	$$(valgrind_v_use)$$(MAKE) check-TESTS \
+		TESTS_ENVIRONMENT="$$(VALGRIND_TESTS_ENVIRONMENT)" \
+		LOG_COMPILER="$$(VALGRIND_LOG_COMPILER)" \
+		LOG_FLAGS="$$(valgrind_$(1)_flags)" \
+		TEST_SUITE_LOG=test-suite-$(1).log
+else ifeq ($$(VALGRIND_ENABLED),yes)
+	@echo "Need to reconfigure with --enable-valgrind-$(1)"
+else
+	@echo "Need to reconfigure with --enable-valgrind"
+endif
+endef
+
+$(foreach tool,$(valgrind_tools),$(eval $(call valgrind_tool_rule,$(tool))))
+
+A''M_DISTCHECK_CONFIGURE_FLAGS ?=
+A''M_DISTCHECK_CONFIGURE_FLAGS += --disable-valgrind
+
+MOSTLYCLEANFILES ?=
+MOSTLYCLEANFILES += $(valgrind_log_files)
+
+.PHONY: check-valgrind $(add-prefix check-valgrind-,$(valgrind_tools))
+'
+
+	if test "$enable_valgrind" != "yes"; then :
+
+		VALGRIND_CHECK_RULES='
+check-valgrind:
+	@echo "Need to use GNU make and reconfigure with --enable-valgrind"'
+
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wchar-subscripts" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wchar-subscripts" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wchar-subscripts... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
+
+
+
+
+
+   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C99" >&5
+$as_echo_n "checking for $CC option to accept ISO C99... " >&6; }
+if ${ac_cv_prog_cc_c99+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wchar-subscripts"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+  ac_cv_prog_cc_c99=no
+ac_save_CC=$CC
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
+#include <stdarg.h>
+#include <stdbool.h>
+#include <stdlib.h>
+#include <wchar.h>
 #include <stdio.h>
-int
-main ()
+
+// Check varargs macros.  These examples are taken from C99 6.10.3.5.
+#define debug(...) fprintf (stderr, __VA_ARGS__)
+#define showlist(...) puts (#__VA_ARGS__)
+#define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
+static void
+test_varargs_macros (void)
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
-  ;
-  return 0;
+  int x = 1234;
+  int y = 5678;
+  debug ("Flag");
+  debug ("X = %d\n", x);
+  showlist (The first, second, and third items.);
+  report (x>y, "x is %d but y is %d", x, y);
 }
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
-else
-  eval "$as_CACHEVAR=no"
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wchar-subscripts"
-else
-  :
-fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wcomment" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wcomment" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wcomment... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
+// Check long long types.
+#define BIG64 18446744073709551615ull
+#define BIG32 4294967295ul
+#define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
+#if !BIG_OK
+  your preprocessor is broken;
+#endif
+#if BIG_OK
+#else
+  your preprocessor is broken;
+#endif
+static long long int bignum = -9223372036854775807LL;
+static unsigned long long int ubignum = BIG64;
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wcomment"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <stdio.h>
-int
-main ()
+struct incomplete_array
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+  int datasize;
+  double data[];
+};
+
+struct named_init {
+  int number;
+  const wchar_t *name;
+  double average;
+};
+
+typedef const char *ccp;
+
+static inline int
+test_restrict (ccp restrict text)
+{
+  // See if C++-style comments work.
+  // Iterate through items via the restricted pointer.
+  // Also check for declarations in for loops.
+  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
+    continue;
+  return 0;
+}
+
+// Check varargs and va_copy.
+static void
+test_varargs (const char *format, ...)
+{
+  va_list args;
+  va_start (args, format);
+  va_list args_copy;
+  va_copy (args_copy, args);
+
+  const char *str;
+  int number;
+  float fnumber;
+
+  while (*format)
+    {
+      switch (*format++)
+	{
+	case 's': // string
+	  str = va_arg (args_copy, const char *);
+	  break;
+	case 'd': // int
+	  number = va_arg (args_copy, int);
+	  break;
+	case 'f': // float
+	  fnumber = va_arg (args_copy, double);
+	  break;
+	default:
+	  break;
+	}
+    }
+  va_end (args_copy);
+  va_end (args);
+}
+
+int
+main ()
+{
+
+  // Check bool.
+  _Bool success = false;
+
+  // Check restrict.
+  if (test_restrict ("String literal") == 0)
+    success = true;
+  char *restrict newvar = "Another string";
+
+  // Check varargs.
+  test_varargs ("s, d' f .", "string", 65, 34.234);
+  test_varargs_macros ();
+
+  // Check flexible array members.
+  struct incomplete_array *ia =
+    malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
+  ia->datasize = 10;
+  for (int i = 0; i < ia->datasize; ++i)
+    ia->data[i] = i * 1.234;
+
+  // Check named initializers.
+  struct named_init ni = {
+    .number = 34,
+    .name = L"Test wide string",
+    .average = 543.34343,
+  };
+
+  ni.number = 58;
+
+  int dynamic_array[ni.number];
+  dynamic_array[ni.number - 1] = 543;
+
+  // work around unused variable warnings
+  return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
+	  || dynamic_array[ni.number - 1] != 543);
+
+  ;
+  return 0;
+}
+_ACEOF
+for ac_arg in '' -std=gnu99 -std=c99 -c99 -AC99 -D_STDC_C99= -qlanglvl=extc99
+do
+  CC="$ac_save_CC $ac_arg"
+  if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_prog_cc_c99=$ac_arg
+fi
+rm -f core conftest.err conftest.$ac_objext
+  test "x$ac_cv_prog_cc_c99" != "xno" && break
+done
+rm -f conftest.$ac_ext
+CC=$ac_save_CC
+
+fi
+# AC_CACHE_VAL
+case "x$ac_cv_prog_cc_c99" in
+  x)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
+$as_echo "none needed" >&6; } ;;
+  xno)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
+$as_echo "unsupported" >&6; } ;;
+  *)
+    CC="$CC $ac_cv_prog_cc_c99"
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c99" >&5
+$as_echo "$ac_cv_prog_cc_c99" >&6; } ;;
+esac
+if test "x$ac_cv_prog_cc_c99" != xno; then :
+
+fi
+
+
+# By default we simply use the C compiler to build assembly code.
+
+test "${CCAS+set}" = set || CCAS=$CC
+test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS
+
+
+
+depcc="$CCAS"   am_compiler_list=
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking dependency style of $depcc" >&5
+$as_echo_n "checking dependency style of $depcc... " >&6; }
+if ${am_cv_CCAS_dependencies_compiler_type+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
+  # We make a subdir and do the tests there.  Otherwise we can end up
+  # making bogus files that we don't know about and never remove.  For
+  # instance it was reported that on HP-UX the gcc test will end up
+  # making a dummy file named 'D' -- because '-MD' means "put the output
+  # in D".
+  rm -rf conftest.dir
+  mkdir conftest.dir
+  # Copy depcomp to subdir because otherwise we won't find it if we're
+  # using a relative directory.
+  cp "$am_depcomp" conftest.dir
+  cd conftest.dir
+  # We will build objects and dependencies in a subdirectory because
+  # it helps to detect inapplicable dependency modes.  For instance
+  # both Tru64's cc and ICC support -MD to output dependencies as a
+  # side effect of compilation, but ICC will put the dependencies in
+  # the current directory while Tru64 will put them in the object
+  # directory.
+  mkdir sub
+
+  am_cv_CCAS_dependencies_compiler_type=none
+  if test "$am_compiler_list" = ""; then
+     am_compiler_list=`sed -n 's/^#*\([a-zA-Z0-9]*\))$/\1/p' < ./depcomp`
+  fi
+  am__universal=false
+
+
+  for depmode in $am_compiler_list; do
+    # Setup a source with many dependencies, because some compilers
+    # like to wrap large dependency lists on column 80 (with \), and
+    # we should not choose a depcomp mode which is confused by this.
+    #
+    # We need to recreate these files for each test, as the compiler may
+    # overwrite some of them when testing with obscure command lines.
+    # This happens at least with the AIX C compiler.
+    : > sub/conftest.c
+    for i in 1 2 3 4 5 6; do
+      echo '#include "conftst'$i'.h"' >> sub/conftest.c
+      # Using ": > sub/conftst$i.h" creates only sub/conftst1.h with
+      # Solaris 10 /bin/sh.
+      echo '/* dummy */' > sub/conftst$i.h
+    done
+    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf
+
+    # We check with '-c' and '-o' for the sake of the "dashmstdout"
+    # mode.  It turns out that the SunPro C++ compiler does not properly
+    # handle '-M -o', and we need to detect this.  Also, some Intel
+    # versions had trouble with output in subdirs.
+    am__obj=sub/conftest.${OBJEXT-o}
+    am__minus_obj="-o $am__obj"
+    case $depmode in
+    gcc)
+      # This depmode causes a compiler race in universal mode.
+      test "$am__universal" = false || continue
+      ;;
+    nosideeffect)
+      # After this tag, mechanisms are not by side-effect, so they'll
+      # only be used when explicitly requested.
+      if test "x$enable_dependency_tracking" = xyes; then
+	continue
+      else
+	break
+      fi
+      ;;
+    msvc7 | msvc7msys | msvisualcpp | msvcmsys)
+      # This compiler won't grok '-c -o', but also, the minuso test has
+      # not run yet.  These depmodes are late enough in the game, and
+      # so weak that their functioning should not be impacted.
+      am__obj=conftest.${OBJEXT-o}
+      am__minus_obj=
+      ;;
+    none) break ;;
+    esac
+    if depmode=$depmode \
+       source=sub/conftest.c object=$am__obj \
+       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
+       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
+         >/dev/null 2>conftest.err &&
+       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
+       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
+       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
+      # icc doesn't choke on unknown options, it will just issue warnings
+      # or remarks (even with -Werror).  So we grep stderr for any message
+      # that says an option was ignored or not supported.
+      # When given -MP, icc 7.0 and 7.1 complain thusly:
+      #   icc: Command line warning: ignoring option '-M'; no argument required
+      # The diagnosis changed in icc 8.0:
+      #   icc: Command line remark: option '-MP' not supported
+      if (grep 'ignoring option' conftest.err ||
+          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
+        am_cv_CCAS_dependencies_compiler_type=$depmode
+        break
+      fi
+    fi
+  done
+
+  cd ..
+  rm -rf conftest.dir
+else
+  am_cv_CCAS_dependencies_compiler_type=none
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $am_cv_CCAS_dependencies_compiler_type" >&5
+$as_echo "$am_cv_CCAS_dependencies_compiler_type" >&6; }
+CCASDEPMODE=depmode=$am_cv_CCAS_dependencies_compiler_type
+
+ if
+  test "x$enable_dependency_tracking" != xno \
+  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3; then
+  am__fastdepCCAS_TRUE=
+  am__fastdepCCAS_FALSE='#'
+else
+  am__fastdepCCAS_TRUE='#'
+  am__fastdepCCAS_FALSE=
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
+$as_echo_n "checking for ANSI C header files... " >&6; }
+if ${ac_cv_header_stdc+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+#include <stdarg.h>
+#include <string.h>
+#include <float.h>
+
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_header_stdc=yes
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test $ac_cv_header_stdc = yes; then
+  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <string.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "memchr" >/dev/null 2>&1; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <stdlib.h>
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "free" >/dev/null 2>&1; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f conftest*
+
+fi
+
+if test $ac_cv_header_stdc = yes; then
+  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
+  if test "$cross_compiling" = yes; then :
+  :
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <ctype.h>
+#include <stdlib.h>
+#if ((' ' & 0x0FF) == 0x020)
+# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
+# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
+#else
+# define ISLOWER(c) \
+		   (('a' <= (c) && (c) <= 'i') \
+		     || ('j' <= (c) && (c) <= 'r') \
+		     || ('s' <= (c) && (c) <= 'z'))
+# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
+#endif
+
+#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
+int
+main ()
+{
+  int i;
+  for (i = 0; i < 256; i++)
+    if (XOR (islower (i), ISLOWER (i))
+	|| toupper (i) != TOUPPER (i))
+      return 2;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+
+else
+  ac_cv_header_stdc=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+fi
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
+$as_echo "$ac_cv_header_stdc" >&6; }
+if test $ac_cv_header_stdc = yes; then
+
+$as_echo "#define STDC_HEADERS 1" >>confdefs.h
+
+fi
+
+# On IRIX 5.3, sys/types and inttypes.h are conflicting.
+for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
+		  inttypes.h stdint.h unistd.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default
+"
+if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+
+  ac_fn_c_check_header_mongrel "$LINENO" "minix/config.h" "ac_cv_header_minix_config_h" "$ac_includes_default"
+if test "x$ac_cv_header_minix_config_h" = xyes; then :
+  MINIX=yes
+else
+  MINIX=
+fi
+
+
+  if test "$MINIX" = yes; then
+
+$as_echo "#define _POSIX_SOURCE 1" >>confdefs.h
+
+
+$as_echo "#define _POSIX_1_SOURCE 2" >>confdefs.h
+
+
+$as_echo "#define _MINIX 1" >>confdefs.h
+
+  fi
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether it is safe to define __EXTENSIONS__" >&5
+$as_echo_n "checking whether it is safe to define __EXTENSIONS__... " >&6; }
+if ${ac_cv_safe_to_define___extensions__+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#         define __EXTENSIONS__ 1
+          $ac_includes_default
+int
+main ()
+{
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_safe_to_define___extensions__=yes
+else
+  ac_cv_safe_to_define___extensions__=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_safe_to_define___extensions__" >&5
+$as_echo "$ac_cv_safe_to_define___extensions__" >&6; }
+  test $ac_cv_safe_to_define___extensions__ = yes &&
+    $as_echo "#define __EXTENSIONS__ 1" >>confdefs.h
+
+  $as_echo "#define _ALL_SOURCE 1" >>confdefs.h
+
+  $as_echo "#define _GNU_SOURCE 1" >>confdefs.h
+
+  $as_echo "#define _POSIX_PTHREAD_SEMANTICS 1" >>confdefs.h
+
+  $as_echo "#define _TANDEM_SOURCE 1" >>confdefs.h
+
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for variable-length arrays" >&5
+$as_echo_n "checking for variable-length arrays... " >&6; }
+if ${ac_cv_c_vararrays+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+static int x; char a[++x]; a[sizeof a - 1] = 0; return a[0];
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_c_vararrays=yes
+else
+  ac_cv_c_vararrays=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_vararrays" >&5
+$as_echo "$ac_cv_c_vararrays" >&6; }
+  if test $ac_cv_c_vararrays = yes; then
+
+$as_echo "#define HAVE_C_VARARRAYS 1" >>confdefs.h
+
+  fi
+
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for __wasi__ defined" >&5
+$as_echo_n "checking for __wasi__ defined... " >&6; }
+if ${ac_cv_defined___wasi__+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  #ifdef __wasi__
+  int ok;
+  #else
+  choke me
+  #endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_defined___wasi__=yes
+else
+  ac_cv_defined___wasi__=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_defined___wasi__" >&5
+$as_echo "$ac_cv_defined___wasi__" >&6; }
+if test $ac_cv_defined___wasi__ != "no"; then :
+  WASI="yes"
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for _FORTIFY_SOURCE defined" >&5
+$as_echo_n "checking for _FORTIFY_SOURCE defined... " >&6; }
+if ${ac_cv_defined__FORTIFY_SOURCE+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+  #ifdef _FORTIFY_SOURCE
+  int ok;
+  #else
+  choke me
+  #endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_defined__FORTIFY_SOURCE=yes
+else
+  ac_cv_defined__FORTIFY_SOURCE=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_defined__FORTIFY_SOURCE" >&5
+$as_echo "$ac_cv_defined__FORTIFY_SOURCE" >&6; }
+if test $ac_cv_defined__FORTIFY_SOURCE != "no"; then :
+
+else
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -D_FORTIFY_SOURCE=2" >&5
+$as_echo_n "checking whether C compiler accepts -D_FORTIFY_SOURCE=2... " >&6; }
+if ${ax_cv_check_cflags___D_FORTIFY_SOURCE_2+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -D_FORTIFY_SOURCE=2"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___D_FORTIFY_SOURCE_2=yes
+else
+  ax_cv_check_cflags___D_FORTIFY_SOURCE_2=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___D_FORTIFY_SOURCE_2" >&5
+$as_echo "$ax_cv_check_cflags___D_FORTIFY_SOURCE_2" >&6; }
+if test "x$ax_cv_check_cflags___D_FORTIFY_SOURCE_2" = xyes; then :
+  CPPFLAGS="$CPPFLAGS -D_FORTIFY_SOURCE=2"
+else
+  :
+fi
+
+
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fvisibility=hidden" >&5
+$as_echo_n "checking whether C compiler accepts -fvisibility=hidden... " >&6; }
+if ${ax_cv_check_cflags___fvisibility_hidden+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fvisibility=hidden"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fvisibility_hidden=yes
+else
+  ax_cv_check_cflags___fvisibility_hidden=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fvisibility_hidden" >&5
+$as_echo "$ax_cv_check_cflags___fvisibility_hidden" >&6; }
+if test "x$ax_cv_check_cflags___fvisibility_hidden" = xyes; then :
+  CFLAGS="$CFLAGS -fvisibility=hidden"
+else
+  :
+fi
+
+
+case $host_os in #(
+  cygwin*|mingw*|msys|pw32*|cegcc*) :
+      ;; #(
+  *) :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fPIC" >&5
+$as_echo_n "checking whether C compiler accepts -fPIC... " >&6; }
+if ${ax_cv_check_cflags___fPIC+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fPIC"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fPIC=yes
+else
+  ax_cv_check_cflags___fPIC=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fPIC" >&5
+$as_echo "$ax_cv_check_cflags___fPIC" >&6; }
+if test "x$ax_cv_check_cflags___fPIC" = xyes; then :
+  CFLAGS="$CFLAGS -fPIC"
+else
+  :
+fi
+
+ ;;
+esac
+
+if test "$enable_pie" != "no"; then :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fPIE" >&5
+$as_echo_n "checking whether C compiler accepts -fPIE... " >&6; }
+if ${ax_cv_check_cflags___fPIE+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fPIE"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fPIE=yes
+else
+  ax_cv_check_cflags___fPIE=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fPIE" >&5
+$as_echo "$ax_cv_check_cflags___fPIE" >&6; }
+if test "x$ax_cv_check_cflags___fPIE" = xyes; then :
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -pie" >&5
+$as_echo_n "checking whether the linker accepts -pie... " >&6; }
+if ${ax_cv_check_ldflags___pie+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -pie"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___pie=yes
+else
+  ax_cv_check_ldflags___pie=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___pie" >&5
+$as_echo "$ax_cv_check_ldflags___pie" >&6; }
+if test "x$ax_cv_check_ldflags___pie" = xyes; then :
+
+      CFLAGS="$CFLAGS -fPIE"
+       LDFLAGS="$LDFLAGS -pie"
+
+else
+  :
+fi
+
+
+else
+  :
+fi
+
+
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fno-strict-aliasing" >&5
+$as_echo_n "checking whether C compiler accepts -fno-strict-aliasing... " >&6; }
+if ${ax_cv_check_cflags___fno_strict_aliasing+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fno-strict-aliasing"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fno_strict_aliasing=yes
+else
+  ax_cv_check_cflags___fno_strict_aliasing=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fno_strict_aliasing" >&5
+$as_echo "$ax_cv_check_cflags___fno_strict_aliasing" >&6; }
+if test "x$ax_cv_check_cflags___fno_strict_aliasing" = xyes; then :
+  CFLAGS="$CFLAGS -fno-strict-aliasing"
+else
+  :
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fno-strict-overflow" >&5
+$as_echo_n "checking whether C compiler accepts -fno-strict-overflow... " >&6; }
+if ${ax_cv_check_cflags___fno_strict_overflow+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fno-strict-overflow"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fno_strict_overflow=yes
+else
+  ax_cv_check_cflags___fno_strict_overflow=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fno_strict_overflow" >&5
+$as_echo "$ax_cv_check_cflags___fno_strict_overflow" >&6; }
+if test "x$ax_cv_check_cflags___fno_strict_overflow" = xyes; then :
+  CFLAGS="$CFLAGS -fno-strict-overflow"
+else
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fwrapv" >&5
+$as_echo_n "checking whether C compiler accepts -fwrapv... " >&6; }
+if ${ax_cv_check_cflags___fwrapv+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fwrapv"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fwrapv=yes
+else
+  ax_cv_check_cflags___fwrapv=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fwrapv" >&5
+$as_echo "$ax_cv_check_cflags___fwrapv" >&6; }
+if test "x$ax_cv_check_cflags___fwrapv" = xyes; then :
+  CFLAGS="$CFLAGS -fwrapv"
+else
+  :
+fi
+
+
+fi
+
+
+if test "$GCC" = "yes" ; then :
+
+  case $host_cpu in #(
+  i?86|amd64|x86_64) :
+
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#if !defined(__clang__) && defined(__GNUC__) && ((__GNUC__ << 8) | __GNUC_MINOR__) < 0x403
+# error old gcc
+#endif
+int main(void) { return 0; }
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+else
+
+          { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -flax-vector-conversions" >&5
+$as_echo_n "checking whether C compiler accepts -flax-vector-conversions... " >&6; }
+if ${ax_cv_check_cflags___flax_vector_conversions+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -flax-vector-conversions"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___flax_vector_conversions=yes
+else
+  ax_cv_check_cflags___flax_vector_conversions=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___flax_vector_conversions" >&5
+$as_echo "$ax_cv_check_cflags___flax_vector_conversions" >&6; }
+if test "x$ax_cv_check_cflags___flax_vector_conversions" = xyes; then :
+  CFLAGS="$CFLAGS -flax-vector-conversions"
+else
+  :
+fi
+
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+     ;; #(
+  *) :
+     ;;
+esac
+
+fi
+
+LIBTOOL_OLD_FLAGS="$LIBTOOL_EXTRA_FLAGS"
+LIBTOOL_EXTRA_FLAGS="$LIBTOOL_EXTRA_FLAGS -version-info $SODIUM_LIBRARY_VERSION"
+# Check whether --enable-soname-versions was given.
+if test "${enable_soname_versions+set}" = set; then :
+  enableval=$enable_soname_versions;
+        if test "x$enableval" = "xno"; then :
+
+          LIBTOOL_EXTRA_FLAGS="$LIBTOOL_OLD_FLAGS -avoid-version"
+
+fi
+
+
+fi
+
+
+case $host_os in #(
+  cygwin*|mingw*|msys|pw32*|cegcc*) :
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,--dynamicbase" >&5
+$as_echo_n "checking whether the linker accepts -Wl,--dynamicbase... " >&6; }
+if ${ax_cv_check_ldflags___Wl___dynamicbase+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -Wl,--dynamicbase"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___Wl___dynamicbase=yes
+else
+  ax_cv_check_ldflags___Wl___dynamicbase=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl___dynamicbase" >&5
+$as_echo "$ax_cv_check_ldflags___Wl___dynamicbase" >&6; }
+if test "x$ax_cv_check_ldflags___Wl___dynamicbase" = xyes; then :
+  LDFLAGS="$LDFLAGS -Wl,--dynamicbase"
+else
+  :
+fi
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,--high-entropy-va" >&5
+$as_echo_n "checking whether the linker accepts -Wl,--high-entropy-va... " >&6; }
+if ${ax_cv_check_ldflags___Wl___high_entropy_va+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -Wl,--high-entropy-va"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___Wl___high_entropy_va=yes
+else
+  ax_cv_check_ldflags___Wl___high_entropy_va=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl___high_entropy_va" >&5
+$as_echo "$ax_cv_check_ldflags___Wl___high_entropy_va" >&6; }
+if test "x$ax_cv_check_ldflags___Wl___high_entropy_va" = xyes; then :
+  LDFLAGS="$LDFLAGS -Wl,--high-entropy-va"
+else
+  :
+fi
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,--nxcompat" >&5
+$as_echo_n "checking whether the linker accepts -Wl,--nxcompat... " >&6; }
+if ${ax_cv_check_ldflags___Wl___nxcompat+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -Wl,--nxcompat"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___Wl___nxcompat=yes
+else
+  ax_cv_check_ldflags___Wl___nxcompat=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl___nxcompat" >&5
+$as_echo "$ax_cv_check_ldflags___Wl___nxcompat" >&6; }
+if test "x$ax_cv_check_ldflags___Wl___nxcompat" = xyes; then :
+  LDFLAGS="$LDFLAGS -Wl,--nxcompat"
+else
+  :
+fi
+
+   ;; #(
+  *) :
+     ;;
+esac
+
+case $host_os in #(
+  cygwin*|mingw*|msys|pw32*|cegcc*) :
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fno-asynchronous-unwind-tables" >&5
+$as_echo_n "checking whether C compiler accepts -fno-asynchronous-unwind-tables... " >&6; }
+if ${ax_cv_check_cflags___fno_asynchronous_unwind_tables+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fno-asynchronous-unwind-tables"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fno_asynchronous_unwind_tables=yes
+else
+  ax_cv_check_cflags___fno_asynchronous_unwind_tables=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fno_asynchronous_unwind_tables" >&5
+$as_echo "$ax_cv_check_cflags___fno_asynchronous_unwind_tables" >&6; }
+if test "x$ax_cv_check_cflags___fno_asynchronous_unwind_tables" = xyes; then :
+
+      CFLAGS="$CFLAGS -fno-asynchronous-unwind-tables"
+
+else
+  :
+fi
+
+ ;; #(
+  *) :
+     ;;
+esac
+
+if test "x$enable_ssp" != "xno"; then :
+
+
+case $host_os in #(
+  cygwin*|mingw*|msys|pw32*|cegcc*|haiku|none) :
+      ;; #(
+  *) :
+
+    { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -fstack-protector" >&5
+$as_echo_n "checking whether C compiler accepts -fstack-protector... " >&6; }
+if ${ax_cv_check_cflags___fstack_protector+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -fstack-protector"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___fstack_protector=yes
+else
+  ax_cv_check_cflags___fstack_protector=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___fstack_protector" >&5
+$as_echo "$ax_cv_check_cflags___fstack_protector" >&6; }
+if test "x$ax_cv_check_cflags___fstack_protector" = xyes; then :
+
+      { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -fstack-protector" >&5
+$as_echo_n "checking whether the linker accepts -fstack-protector... " >&6; }
+if ${ax_cv_check_ldflags___fstack_protector+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -fstack-protector"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___fstack_protector=yes
+else
+  ax_cv_check_ldflags___fstack_protector=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___fstack_protector" >&5
+$as_echo "$ax_cv_check_ldflags___fstack_protector" >&6; }
+if test "x$ax_cv_check_ldflags___fstack_protector" = xyes; then :
+  CFLAGS="$CFLAGS -fstack-protector"
+
+else
+  :
+fi
+
+
+else
+  :
+fi
+
+   ;; #(
+  *) :
+     ;;
+esac
+
+fi
+
+
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CFLAGS -Wall" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CFLAGS -Wall" >&5
+$as_echo_n "checking whether C compiler accepts $CFLAGS -Wall... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CFLAGS -Wall"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CFLAGS -Wall"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CFLAGS -Wextra" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CFLAGS -Wextra" >&5
+$as_echo_n "checking whether C compiler accepts $CFLAGS -Wextra... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CFLAGS -Wextra"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CFLAGS -Wextra"
+else
+  :
+fi
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for clang" >&5
+$as_echo_n "checking for clang... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+int
+main ()
+{
+
+#ifndef __clang__
+#error Not clang
+#endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+   as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wno-unknown-warning-option" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wno-unknown-warning-option" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wno-unknown-warning-option... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wno-unknown-warning-option"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wno-unknown-warning-option"
+else
+  :
+fi
+
+
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wbad-function-cast" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wbad-function-cast" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wbad-function-cast... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wbad-function-cast"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wbad-function-cast"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wcast-qual" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wcast-qual" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wcast-qual... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wcast-qual"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wcast-qual"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wdiv-by-zero" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wdiv-by-zero" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wdiv-by-zero... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wdiv-by-zero"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wdiv-by-zero"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wduplicated-branches" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wduplicated-branches" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wduplicated-branches... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wduplicated-branches"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wduplicated-branches"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wduplicated-cond" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wduplicated-cond" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wduplicated-cond... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wduplicated-cond"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wduplicated-cond"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wfloat-equal" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wfloat-equal" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wfloat-equal... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wfloat-equal"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wfloat-equal"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wformat=2" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wformat=2" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wformat=2... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wformat=2"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wformat=2"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wlogical-op" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wlogical-op" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wlogical-op... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wlogical-op"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wlogical-op"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wmaybe-uninitialized" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wmaybe-uninitialized" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wmaybe-uninitialized... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wmaybe-uninitialized"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wmaybe-uninitialized"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wmisleading-indentation" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wmisleading-indentation" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wmisleading-indentation... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wmisleading-indentation"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wmisleading-indentation"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wmissing-declarations" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wmissing-declarations" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wmissing-declarations... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wmissing-declarations"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wmissing-declarations"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wmissing-prototypes" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wmissing-prototypes" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wmissing-prototypes... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wmissing-prototypes"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wmissing-prototypes"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wnested-externs" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wnested-externs" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wnested-externs... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wnested-externs"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wnested-externs"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wno-type-limits" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wno-type-limits" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wno-type-limits... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wno-type-limits"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wno-type-limits"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wno-unknown-pragmas" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wno-unknown-pragmas" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wno-unknown-pragmas... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wno-unknown-pragmas"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wno-unknown-pragmas"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wnormalized=id" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wnormalized=id" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wnormalized=id... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wnormalized=id"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
+else
+  eval "$as_CACHEVAR=no"
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CWFLAGS="$CWFLAGS -Wnormalized=id"
+else
+  :
+fi
+
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wnull-dereference" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wnull-dereference" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wnull-dereference... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  $CWFLAGS -Wnull-dereference"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wcomment"
+  CWFLAGS="$CWFLAGS -Wnull-dereference"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wfloat-equal" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wfloat-equal" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wfloat-equal... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wold-style-declaration" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wold-style-declaration" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wold-style-declaration... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wfloat-equal"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wold-style-declaration"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wfloat-equal"
+  CWFLAGS="$CWFLAGS -Wold-style-declaration"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wformat=2" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wformat=2" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wformat=2... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wpointer-arith" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wpointer-arith" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wpointer-arith... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wformat=2"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wpointer-arith"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wformat=2"
+  CWFLAGS="$CWFLAGS -Wpointer-arith"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wimplicit" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wimplicit" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wimplicit... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wredundant-decls" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wredundant-decls" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wredundant-decls... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wimplicit"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wredundant-decls"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wimplicit"
+  CWFLAGS="$CWFLAGS -Wredundant-decls"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wmissing-declarations" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wmissing-declarations" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wmissing-declarations... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wrestrict" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wrestrict" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wrestrict... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wmissing-declarations"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wrestrict"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wmissing-declarations"
+  CWFLAGS="$CWFLAGS -Wrestrict"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wmissing-prototypes" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wmissing-prototypes" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wmissing-prototypes... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wshorten-64-to-32" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wshorten-64-to-32" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wshorten-64-to-32... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wmissing-prototypes"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wshorten-64-to-32"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wmissing-prototypes"
+  CWFLAGS="$CWFLAGS -Wshorten-64-to-32"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wnormalized=id" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wnormalized=id" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wnormalized=id... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wsometimes-uninitialized" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wsometimes-uninitialized" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wsometimes-uninitialized... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wnormalized=id"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wsometimes-uninitialized"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wnormalized=id"
+  CWFLAGS="$CWFLAGS -Wsometimes-uninitialized"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Woverride-init" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Woverride-init" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Woverride-init... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wstrict-prototypes" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wstrict-prototypes" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wstrict-prototypes... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Woverride-init"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wstrict-prototypes"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Woverride-init"
+  CWFLAGS="$CWFLAGS -Wstrict-prototypes"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wparentheses" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wparentheses" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wparentheses... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wswitch-enum" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wswitch-enum" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wswitch-enum... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wparentheses"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wswitch-enum"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wparentheses"
+  CWFLAGS="$CWFLAGS -Wswitch-enum"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wpointer-arith" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wpointer-arith" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wpointer-arith... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wvariable-decl" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wvariable-decl" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wvariable-decl... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wpointer-arith"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wvariable-decl"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wpointer-arith"
+  CWFLAGS="$CWFLAGS -Wvariable-decl"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wredundant-decls" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wredundant-decls" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wredundant-decls... " >&6; }
+as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wwrite-strings" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wwrite-strings" >&5
+$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wwrite-strings... " >&6; }
 if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wredundant-decls"
+  CFLAGS="$CFLAGS  $CWFLAGS -Wwrite-strings"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   eval "$as_CACHEVAR=yes"
 else
   eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
 eval ac_res=\$$as_CACHEVAR
 	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
 $as_echo "$ac_res" >&6; }
 if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wredundant-decls"
+  CWFLAGS="$CWFLAGS -Wwrite-strings"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wstrict-prototypes" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wstrict-prototypes" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wstrict-prototypes... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,-z,relro" >&5
+$as_echo_n "checking whether the linker accepts -Wl,-z,relro... " >&6; }
+if ${ax_cv_check_ldflags___Wl__z_relro+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wstrict-prototypes"
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -Wl,-z,relro"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___Wl__z_relro=yes
 else
-  eval "$as_CACHEVAR=no"
+  ax_cv_check_ldflags___Wl__z_relro=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
 fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wstrict-prototypes"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl__z_relro" >&5
+$as_echo "$ax_cv_check_ldflags___Wl__z_relro" >&6; }
+if test "x$ax_cv_check_ldflags___Wl__z_relro" = xyes; then :
+  LDFLAGS="$LDFLAGS -Wl,-z,relro"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wswitch-enum" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wswitch-enum" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wswitch-enum... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,-z,now" >&5
+$as_echo_n "checking whether the linker accepts -Wl,-z,now... " >&6; }
+if ${ax_cv_check_ldflags___Wl__z_now+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wswitch-enum"
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -Wl,-z,now"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___Wl__z_now=yes
 else
-  eval "$as_CACHEVAR=no"
+  ax_cv_check_ldflags___Wl__z_now=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
 fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wswitch-enum"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl__z_now" >&5
+$as_echo "$ax_cv_check_ldflags___Wl__z_now" >&6; }
+if test "x$ax_cv_check_ldflags___Wl__z_now" = xyes; then :
+  LDFLAGS="$LDFLAGS -Wl,-z,now"
 else
   :
 fi
 
-as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CWFLAGS -Wvariable-decl" | $as_tr_sh`
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CWFLAGS -Wvariable-decl" >&5
-$as_echo_n "checking whether C compiler accepts $CWFLAGS -Wvariable-decl... " >&6; }
-if eval \${$as_CACHEVAR+:} false; then :
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,-z,noexecstack" >&5
+$as_echo_n "checking whether the linker accepts -Wl,-z,noexecstack... " >&6; }
+if ${ax_cv_check_ldflags___Wl__z_noexecstack+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  $CWFLAGS -Wvariable-decl"
+  ax_check_save_flags=$LDFLAGS
+  LDFLAGS="$LDFLAGS  -Wl,-z,noexecstack"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  eval "$as_CACHEVAR=yes"
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_ldflags___Wl__z_noexecstack=yes
 else
-  eval "$as_CACHEVAR=no"
+  ax_cv_check_ldflags___Wl__z_noexecstack=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  LDFLAGS=$ax_check_save_flags
 fi
-eval ac_res=\$$as_CACHEVAR
-	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
-$as_echo "$ac_res" >&6; }
-if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
-  CWFLAGS="$CWFLAGS -Wvariable-decl"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl__z_noexecstack" >&5
+$as_echo "$ax_cv_check_ldflags___Wl__z_noexecstack" >&6; }
+if test "x$ax_cv_check_ldflags___Wl__z_noexecstack" = xyes; then :
+  LDFLAGS="$LDFLAGS -Wl,-z,noexecstack"
+else
+  :
+fi
+
+
+
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether segmentation violations can be caught when using the C compiler" >&5
+$as_echo_n "checking whether segmentation violations can be caught when using the C compiler... " >&6; }
+if ${ax_cv_check_cCATCHABLE_SEGV+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+        if test "$cross_compiling" = yes; then :
+  ax_cv_check_cCATCHABLE_SEGV=unknown
+
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+
+#include <signal.h>
+#include <stdlib.h>
+static void sig(int _) { exit(0); }
+
+int
+main ()
+{
+
+volatile unsigned char * volatile x = (volatile unsigned char *) malloc(8);
+size_t i;
+
+signal(SIGSEGV, sig);
+signal(SIGBUS, sig);
+#if !defined(__SANITIZE_ADDRESS__) && !defined(__EMSCRIPTEN__)
+for (i = 0; i < 10000000; i += 1024) { x[-i] = x[i] = (unsigned char) i; }
+#endif
+free((void *) x);
+exit(1)
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_run "$LINENO"; then :
+  ax_cv_check_cCATCHABLE_SEGV=yes
+else
+  ax_cv_check_cCATCHABLE_SEGV=no
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cCATCHABLE_SEGV" >&5
+$as_echo "$ax_cv_check_cCATCHABLE_SEGV" >&6; }
+    if test "x$ax_cv_check_cCATCHABLE_SEGV" = xyes; then :
+
+$as_echo "#define HAVE_CATCHABLE_SEGV 1" >>confdefs.h
+
 else
-  :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: On this platform, segmentation violations cannot be caught using signal handlers. This is expected if you enabled a tool such as Address Sanitizer (-fsanitize=address), but be aware that using Address Sanitizer may also significantly reduce performance." >&5
+$as_echo "$as_me: WARNING: On this platform, segmentation violations cannot be caught using signal handlers. This is expected if you enabled a tool such as Address Sanitizer (-fsanitize=address), but be aware that using Address Sanitizer may also significantly reduce performance." >&2;}
+
 fi
 
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,-z,relro" >&5
-$as_echo_n "checking whether the linker accepts -Wl,-z,relro... " >&6; }
-if ${ax_cv_check_ldflags___Wl__z_relro+:} false; then :
+        { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether SIGABRT can be caught when using the C compiler" >&5
+$as_echo_n "checking whether SIGABRT can be caught when using the C compiler... " >&6; }
+if ${ax_cv_check_cCATCHABLE_ABRT+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -Wl,-z,relro"
+        if test "$cross_compiling" = yes; then :
+  ax_cv_check_cCATCHABLE_ABRT=unknown
+
+else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+
+
+#include <signal.h>
+#include <stdlib.h>
+
+#ifndef SIGABRT
+# error SIGABRT is not defined
+#endif
+
+static void sigabrt_handler_3(int _)
+{
+    exit(0);
+}
+
+static void sigabrt_handler_2(int _)
+{
+    signal(SIGABRT, sigabrt_handler_3);
+    abort();
+    exit(1);
+}
+
+static void sigabrt_handler_1(int _)
+{
+    signal(SIGABRT, sigabrt_handler_2);
+    abort();
+    exit(1);
+}
+
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+
+signal(SIGABRT, sigabrt_handler_1);
+abort();
+exit(1);
+
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___Wl__z_relro=yes
+if ac_fn_c_try_run "$LINENO"; then :
+  ax_cv_check_cCATCHABLE_ABRT=yes
 else
-  ax_cv_check_ldflags___Wl__z_relro=no
+  ax_cv_check_cCATCHABLE_ABRT=no
 fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl__z_relro" >&5
-$as_echo "$ax_cv_check_ldflags___Wl__z_relro" >&6; }
-if test "x$ax_cv_check_ldflags___Wl__z_relro" = xyes; then :
-  LDFLAGS="$LDFLAGS -Wl,-z,relro"
+
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cCATCHABLE_ABRT" >&5
+$as_echo "$ax_cv_check_cCATCHABLE_ABRT" >&6; }
+    if test "x$ax_cv_check_cCATCHABLE_ABRT" = xyes; then :
+
+$as_echo "#define HAVE_CATCHABLE_ABRT 1" >>confdefs.h
+
 else
-  :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: On this platform, SIGABRT cannot be caught using signal handlers." >&5
+$as_echo "$as_me: WARNING: On this platform, SIGABRT cannot be caught using signal handlers." >&2;}
+
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,-z,now" >&5
-$as_echo_n "checking whether the linker accepts -Wl,-z,now... " >&6; }
-if ${ax_cv_check_ldflags___Wl__z_now+:} false; then :
+
+if test "x$with_threads" = "xyes"; then :
+
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for thread local storage (TLS) class" >&5
+$as_echo_n "checking for thread local storage (TLS) class... " >&6; }
+  if ${ac_cv_tls+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -Wl,-z,now"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+  for ax_tls_keyword in thread_local _Thread_local __thread '__declspec(thread)' none; do
+       case $ax_tls_keyword in #(
+  none) :
+    ac_cv_tls=none ; break ;; #(
+  *) :
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <stdlib.h>
+               static void
+               foo(void) {
+               static  $ax_tls_keyword  int bar;
+               exit(1);
+               }
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___Wl__z_now=yes
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_tls=$ax_tls_keyword ; break
 else
-  ax_cv_check_ldflags___Wl__z_now=no
-fi
-rm -f core conftest.err conftest.$ac_objext \
-    conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+  ac_cv_tls=none
+
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl__z_now" >&5
-$as_echo "$ax_cv_check_ldflags___Wl__z_now" >&6; }
-if test "x$ax_cv_check_ldflags___Wl__z_now" = xyes; then :
-  LDFLAGS="$LDFLAGS -Wl,-z,now"
-else
-  :
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext ;;
+esac
+    done
+
 fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the linker accepts -Wl,-z,noexecstack" >&5
-$as_echo_n "checking whether the linker accepts -Wl,-z,noexecstack... " >&6; }
-if ${ax_cv_check_ldflags___Wl__z_noexecstack+:} false; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_tls" >&5
+$as_echo "$ac_cv_tls" >&6; }
+
+  if test "$ac_cv_tls" != "none"; then :
+
+cat >>confdefs.h <<_ACEOF
+#define TLS $ac_cv_tls
+_ACEOF
+
+     { $as_echo "$as_me:${as_lineno-$LINENO}: result: thread local storage is supported" >&5
+$as_echo "thread local storage is supported" >&6; }
+          { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -ftls-model=local-dynamic" >&5
+$as_echo_n "checking whether C compiler accepts -ftls-model=local-dynamic... " >&6; }
+if ${ax_cv_check_cflags___ftls_model_local_dynamic+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$LDFLAGS
-  LDFLAGS="$LDFLAGS  -Wl,-z,noexecstack"
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -ftls-model=local-dynamic"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U];if (fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
-  ax_cv_check_ldflags___Wl__z_noexecstack=yes
+  ax_cv_check_cflags___ftls_model_local_dynamic=yes
 else
-  ax_cv_check_ldflags___Wl__z_noexecstack=no
+  ax_cv_check_cflags___ftls_model_local_dynamic=no
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-  LDFLAGS=$ax_check_save_flags
+  CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_ldflags___Wl__z_noexecstack" >&5
-$as_echo "$ax_cv_check_ldflags___Wl__z_noexecstack" >&6; }
-if test "x$ax_cv_check_ldflags___Wl__z_noexecstack" = xyes; then :
-  LDFLAGS="$LDFLAGS -Wl,-z,noexecstack"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___ftls_model_local_dynamic" >&5
+$as_echo "$ax_cv_check_cflags___ftls_model_local_dynamic" >&6; }
+if test "x$ax_cv_check_cflags___ftls_model_local_dynamic" = xyes; then :
+  CFLAGS="$CFLAGS -ftls-model=local-dynamic"
 else
   :
 fi
 
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: thread local storage is not supported" >&5
+$as_echo "thread local storage is not supported" >&6; }
+fi
+
+fi
 
 case `pwd` in
   *\ * | *\	*)
@@ -6852,8 +9103,8 @@ esac
 
 
 
-macro_version='2.4.2'
-macro_revision='1.3337'
+macro_version='2.4.6'
+macro_revision='2.4.6'
 
 
 
@@ -6867,7 +9118,7 @@ macro_revision='1.3337'
 
 
 
-ltmain="$ac_aux_dir/ltmain.sh"
+ltmain=$ac_aux_dir/ltmain.sh
 
 # Backslashify metacharacters that are still active within
 # double-quoted strings.
@@ -6916,7 +9167,7 @@ func_echo_all ()
     $ECHO ""
 }
 
-case "$ECHO" in
+case $ECHO in
   printf*) { $as_echo "$as_me:${as_lineno-$LINENO}: result: printf" >&5
 $as_echo "printf" >&6; } ;;
   print*) { $as_echo "$as_me:${as_lineno-$LINENO}: result: print -r" >&5
@@ -7109,19 +9360,19 @@ test -z "$GREP" && GREP=grep
 
 # Check whether --with-gnu-ld was given.
 if test "${with_gnu_ld+set}" = set; then :
-  withval=$with_gnu_ld; test "$withval" = no || with_gnu_ld=yes
+  withval=$with_gnu_ld; test no = "$withval" || with_gnu_ld=yes
 else
   with_gnu_ld=no
 fi
 
 ac_prog=ld
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   # Check if gcc -print-prog-name=ld gives a path.
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for ld used by $CC" >&5
 $as_echo_n "checking for ld used by $CC... " >&6; }
   case $host in
   *-*-mingw*)
-    # gcc leaves a trailing carriage return which upsets mingw
+    # gcc leaves a trailing carriage return, which upsets mingw
     ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
   *)
     ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
@@ -7135,7 +9386,7 @@ $as_echo_n "checking for ld used by $CC... " >&6; }
       while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
 	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
       done
-      test -z "$LD" && LD="$ac_prog"
+      test -z "$LD" && LD=$ac_prog
       ;;
   "")
     # If it fails, then pretend we aren't using GCC.
@@ -7146,7 +9397,7 @@ $as_echo_n "checking for ld used by $CC... " >&6; }
     with_gnu_ld=unknown
     ;;
   esac
-elif test "$with_gnu_ld" = yes; then
+elif test yes = "$with_gnu_ld"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for GNU ld" >&5
 $as_echo_n "checking for GNU ld... " >&6; }
 else
@@ -7157,32 +9408,32 @@ if ${lt_cv_path_LD+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   if test -z "$LD"; then
-  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
   for ac_dir in $PATH; do
-    IFS="$lt_save_ifs"
+    IFS=$lt_save_ifs
     test -z "$ac_dir" && ac_dir=.
     if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
-      lt_cv_path_LD="$ac_dir/$ac_prog"
+      lt_cv_path_LD=$ac_dir/$ac_prog
       # Check to see if the program is GNU ld.  I'd rather use --version,
       # but apparently some variants of GNU ld only accept -v.
       # Break only if it was the GNU/non-GNU ld that we prefer.
       case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
       *GNU* | *'with BFD'*)
-	test "$with_gnu_ld" != no && break
+	test no != "$with_gnu_ld" && break
 	;;
       *)
-	test "$with_gnu_ld" != yes && break
+	test yes != "$with_gnu_ld" && break
 	;;
       esac
     fi
   done
-  IFS="$lt_save_ifs"
+  IFS=$lt_save_ifs
 else
-  lt_cv_path_LD="$LD" # Let the user override the test with a path.
+  lt_cv_path_LD=$LD # Let the user override the test with a path.
 fi
 fi
 
-LD="$lt_cv_path_LD"
+LD=$lt_cv_path_LD
 if test -n "$LD"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
 $as_echo "$LD" >&6; }
@@ -7225,33 +9476,38 @@ if ${lt_cv_path_NM+:} false; then :
 else
   if test -n "$NM"; then
   # Let the user override the test.
-  lt_cv_path_NM="$NM"
+  lt_cv_path_NM=$NM
 else
-  lt_nm_to_check="${ac_tool_prefix}nm"
+  lt_nm_to_check=${ac_tool_prefix}nm
   if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
     lt_nm_to_check="$lt_nm_to_check nm"
   fi
   for lt_tmp_nm in $lt_nm_to_check; do
-    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+    lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
     for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       test -z "$ac_dir" && ac_dir=.
-      tmp_nm="$ac_dir/$lt_tmp_nm"
-      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
+      tmp_nm=$ac_dir/$lt_tmp_nm
+      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext"; then
 	# Check to see if the nm accepts a BSD-compat flag.
-	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
+	# Adding the 'sed 1q' prevents false positives on HP-UX, which says:
 	#   nm: unknown option "B" ignored
 	# Tru64's nm complains that /dev/null is an invalid object file
-	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
-	*/dev/null* | *'Invalid file or object type'*)
+	# MSYS converts /dev/null to NUL, MinGW nm treats NUL as empty
+	case $build_os in
+	mingw*) lt_bad_file=conftest.nm/nofile ;;
+	*) lt_bad_file=/dev/null ;;
+	esac
+	case `"$tmp_nm" -B $lt_bad_file 2>&1 | sed '1q'` in
+	*$lt_bad_file* | *'Invalid file or object type'*)
 	  lt_cv_path_NM="$tmp_nm -B"
-	  break
+	  break 2
 	  ;;
 	*)
 	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
 	  */dev/null*)
 	    lt_cv_path_NM="$tmp_nm -p"
-	    break
+	    break 2
 	    ;;
 	  *)
 	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
@@ -7262,15 +9518,15 @@ else
 	esac
       fi
     done
-    IFS="$lt_save_ifs"
+    IFS=$lt_save_ifs
   done
   : ${lt_cv_path_NM=no}
 fi
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_NM" >&5
 $as_echo "$lt_cv_path_NM" >&6; }
-if test "$lt_cv_path_NM" != "no"; then
-  NM="$lt_cv_path_NM"
+if test no != "$lt_cv_path_NM"; then
+  NM=$lt_cv_path_NM
 else
   # Didn't find any BSD compatible name lister, look for dumpbin.
   if test -n "$DUMPBIN"; then :
@@ -7376,9 +9632,9 @@ esac
   fi
 fi
 
-    case `$DUMPBIN -symbols /dev/null 2>&1 | sed '1q'` in
+    case `$DUMPBIN -symbols -headers /dev/null 2>&1 | sed '1q'` in
     *COFF*)
-      DUMPBIN="$DUMPBIN -symbols"
+      DUMPBIN="$DUMPBIN -symbols -headers"
       ;;
     *)
       DUMPBIN=:
@@ -7386,8 +9642,8 @@ fi
     esac
   fi
 
-  if test "$DUMPBIN" != ":"; then
-    NM="$DUMPBIN"
+  if test : != "$DUMPBIN"; then
+    NM=$DUMPBIN
   fi
 fi
 test -z "$NM" && NM=nm
@@ -7438,7 +9694,7 @@ if ${lt_cv_sys_max_cmd_len+:} false; then :
   $as_echo_n "(cached) " >&6
 else
     i=0
-  teststring="ABCD"
+  teststring=ABCD
 
   case $build_os in
   msdosdjgpp*)
@@ -7478,7 +9734,7 @@ else
     lt_cv_sys_max_cmd_len=8192;
     ;;
 
-  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
+  bitrig* | darwin* | dragonfly* | freebsd* | netbsd* | openbsd*)
     # This has been around since 386BSD, at least.  Likely further.
     if test -x /sbin/sysctl; then
       lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
@@ -7529,22 +9785,22 @@ else
   *)
     lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
     if test -n "$lt_cv_sys_max_cmd_len" && \
-	test undefined != "$lt_cv_sys_max_cmd_len"; then
+       test undefined != "$lt_cv_sys_max_cmd_len"; then
       lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
       lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
     else
       # Make teststring a little bigger before we do anything with it.
       # a 1K string should be a reasonable start.
-      for i in 1 2 3 4 5 6 7 8 ; do
+      for i in 1 2 3 4 5 6 7 8; do
         teststring=$teststring$teststring
       done
       SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
       # If test is not a shell built-in, we'll probably end up computing a
       # maximum length that is only half of the actual maximum length, but
       # we can't tell.
-      while { test "X"`env echo "$teststring$teststring" 2>/dev/null` \
+      while { test X`env echo "$teststring$teststring" 2>/dev/null` \
 	         = "X$teststring$teststring"; } >/dev/null 2>&1 &&
-	      test $i != 17 # 1/2 MB should be enough
+	      test 17 != "$i" # 1/2 MB should be enough
       do
         i=`expr $i + 1`
         teststring=$teststring$teststring
@@ -7562,7 +9818,7 @@ else
 
 fi
 
-if test -n $lt_cv_sys_max_cmd_len ; then
+if test -n "$lt_cv_sys_max_cmd_len"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_sys_max_cmd_len" >&5
 $as_echo "$lt_cv_sys_max_cmd_len" >&6; }
 else
@@ -7580,30 +9836,6 @@ max_cmd_len=$lt_cv_sys_max_cmd_len
 : ${MV="mv -f"}
 : ${RM="rm -f"}
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands some XSI constructs" >&5
-$as_echo_n "checking whether the shell understands some XSI constructs... " >&6; }
-# Try some XSI features
-xsi_shell=no
-( _lt_dummy="a/b/c"
-  test "${_lt_dummy##*/},${_lt_dummy%/*},${_lt_dummy#??}"${_lt_dummy%"$_lt_dummy"}, \
-      = c,a/b,b/c, \
-    && eval 'test $(( 1 + 1 )) -eq 2 \
-    && test "${#_lt_dummy}" -eq 5' ) >/dev/null 2>&1 \
-  && xsi_shell=yes
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $xsi_shell" >&5
-$as_echo "$xsi_shell" >&6; }
-
-
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the shell understands \"+=\"" >&5
-$as_echo_n "checking whether the shell understands \"+=\"... " >&6; }
-lt_shell_append=no
-( foo=bar; set foo baz; eval "$1+=\$2" && test "$foo" = barbaz ) \
-    >/dev/null 2>&1 \
-  && lt_shell_append=yes
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_shell_append" >&5
-$as_echo "$lt_shell_append" >&6; }
-
-
 if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
   lt_unset=unset
 else
@@ -7726,13 +9958,13 @@ esac
 reload_cmds='$LD$reload_flag -o $output$reload_objs'
 case $host_os in
   cygwin* | mingw* | pw32* | cegcc*)
-    if test "$GCC" != yes; then
+    if test yes != "$GCC"; then
       reload_cmds=false
     fi
     ;;
   darwin*)
-    if test "$GCC" = yes; then
-      reload_cmds='$LTCC $LTCFLAGS -nostdlib ${wl}-r -o $output$reload_objs'
+    if test yes = "$GCC"; then
+      reload_cmds='$LTCC $LTCFLAGS -nostdlib $wl-r -o $output$reload_objs'
     else
       reload_cmds='$LD$reload_flag -o $output$reload_objs'
     fi
@@ -7860,13 +10092,13 @@ lt_cv_deplibs_check_method='unknown'
 # Need to set the preceding variable on all platforms that support
 # interlibrary dependencies.
 # 'none' -- dependencies not supported.
-# `unknown' -- same as none, but documents that we really don't know.
+# 'unknown' -- same as none, but documents that we really don't know.
 # 'pass_all' -- all dependencies passed with no checks.
 # 'test_compile' -- check by making test program.
 # 'file_magic [[regex]]' -- check by looking for files in library path
-# which responds to the $file_magic_cmd with a given extended regex.
-# If you have `file' or equivalent on your system and you're not sure
-# whether `pass_all' will *always* work, you probably want this one.
+# that responds to the $file_magic_cmd with a given extended regex.
+# If you have 'file' or equivalent on your system and you're not sure
+# whether 'pass_all' will *always* work, you probably want this one.
 
 case $host_os in
 aix[4-9]*)
@@ -7893,8 +10125,7 @@ mingw* | pw32*)
   # Base MSYS/MinGW do not provide the 'file' command needed by
   # func_win32_libid shell function, so use a weaker test based on 'objdump',
   # unless we find 'file', for example because we are cross-compiling.
-  # func_win32_libid assumes BSD nm, so disallow it if using MS dumpbin.
-  if ( test "$lt_cv_nm_interface" = "BSD nm" && file / ) >/dev/null 2>&1; then
+  if ( file / ) >/dev/null 2>&1; then
     lt_cv_deplibs_check_method='file_magic ^x86 archive import|^x86 DLL'
     lt_cv_file_magic_cmd='func_win32_libid'
   else
@@ -7972,7 +10203,7 @@ linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-netbsd* | netbsdelf*-gnu)
+netbsd*)
   if echo __ELF__ | $CC -E - | $GREP __ELF__ > /dev/null; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
   else
@@ -7990,8 +10221,8 @@ newos6*)
   lt_cv_deplibs_check_method=pass_all
   ;;
 
-openbsd*)
-  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+openbsd* | bitrig*)
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|\.so|_pic\.a)$'
   else
     lt_cv_deplibs_check_method='match_pattern /lib[^/]+(\.so\.[0-9]+\.[0-9]+|_pic\.a)$'
@@ -8044,6 +10275,9 @@ sysv4 | sysv4.3*)
 tpf*)
   lt_cv_deplibs_check_method=pass_all
   ;;
+os2*)
+  lt_cv_deplibs_check_method=pass_all
+  ;;
 esac
 
 fi
@@ -8201,8 +10435,8 @@ else
 
 case $host_os in
 cygwin* | mingw* | pw32* | cegcc*)
-  # two different shell functions defined in ltmain.sh
-  # decide which to use based on capabilities of $DLLTOOL
+  # two different shell functions defined in ltmain.sh;
+  # decide which one to use based on capabilities of $DLLTOOL
   case `$DLLTOOL --help 2>&1` in
   *--identify-strict*)
     lt_cv_sharedlib_from_linklib_cmd=func_cygming_dll_for_implib
@@ -8214,7 +10448,7 @@ cygwin* | mingw* | pw32* | cegcc*)
   ;;
 *)
   # fallback: assume linklib IS sharedlib
-  lt_cv_sharedlib_from_linklib_cmd="$ECHO"
+  lt_cv_sharedlib_from_linklib_cmd=$ECHO
   ;;
 esac
 
@@ -8368,7 +10602,7 @@ if ac_fn_c_try_compile "$LINENO"; then :
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }
-      if test "$ac_status" -eq 0; then
+      if test 0 -eq "$ac_status"; then
 	# Ensure the archiver fails upon bogus file names.
 	rm -f conftest.$ac_objext libconftest.a
 	{ { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$lt_ar_try\""; } >&5
@@ -8376,7 +10610,7 @@ if ac_fn_c_try_compile "$LINENO"; then :
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }
-	if test "$ac_status" -ne 0; then
+	if test 0 -ne "$ac_status"; then
           lt_cv_ar_at_file=@
         fi
       fi
@@ -8389,7 +10623,7 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ar_at_file" >&5
 $as_echo "$lt_cv_ar_at_file" >&6; }
 
-if test "x$lt_cv_ar_at_file" = xno; then
+if test no = "$lt_cv_ar_at_file"; then
   archiver_list_spec=
 else
   archiver_list_spec=$lt_cv_ar_at_file
@@ -8606,7 +10840,7 @@ old_postuninstall_cmds=
 
 if test -n "$RANLIB"; then
   case $host_os in
-  openbsd*)
+  bitrig* | openbsd*)
     old_postinstall_cmds="$old_postinstall_cmds~\$RANLIB -t \$tool_oldlib"
     ;;
   *)
@@ -8696,7 +10930,7 @@ cygwin* | mingw* | pw32* | cegcc*)
   symcode='[ABCDGISTW]'
   ;;
 hpux*)
-  if test "$host_cpu" = ia64; then
+  if test ia64 = "$host_cpu"; then
     symcode='[ABCDEGRST]'
   fi
   ;;
@@ -8729,14 +10963,44 @@ case `$NM -V 2>&1` in
   symcode='[ABCDGIRSTW]' ;;
 esac
 
+if test "$lt_cv_nm_interface" = "MS dumpbin"; then
+  # Gets list of data symbols to import.
+  lt_cv_sys_global_symbol_to_import="sed -n -e 's/^I .* \(.*\)$/\1/p'"
+  # Adjust the below global symbol transforms to fixup imported variables.
+  lt_cdecl_hook=" -e 's/^I .* \(.*\)$/extern __declspec(dllimport) char \1;/p'"
+  lt_c_name_hook=" -e 's/^I .* \(.*\)$/  {\"\1\", (void *) 0},/p'"
+  lt_c_name_lib_hook="\
+  -e 's/^I .* \(lib.*\)$/  {\"\1\", (void *) 0},/p'\
+  -e 's/^I .* \(.*\)$/  {\"lib\1\", (void *) 0},/p'"
+else
+  # Disable hooks by default.
+  lt_cv_sys_global_symbol_to_import=
+  lt_cdecl_hook=
+  lt_c_name_hook=
+  lt_c_name_lib_hook=
+fi
+
 # Transform an extracted symbol line into a proper C declaration.
 # Some systems (esp. on ia64) link data and code symbols differently,
 # so use this general approach.
-lt_cv_sys_global_symbol_to_cdecl="sed -n -e 's/^T .* \(.*\)$/extern int \1();/p' -e 's/^$symcode* .* \(.*\)$/extern char \1;/p'"
+lt_cv_sys_global_symbol_to_cdecl="sed -n"\
+$lt_cdecl_hook\
+" -e 's/^T .* \(.*\)$/extern int \1();/p'"\
+" -e 's/^$symcode$symcode* .* \(.*\)$/extern char \1;/p'"
 
 # Transform an extracted symbol line into symbol name and symbol address
-lt_cv_sys_global_symbol_to_c_name_address="sed -n -e 's/^: \([^ ]*\)[ ]*$/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"\2\", (void *) \&\2},/p'"
-lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n -e 's/^: \([^ ]*\)[ ]*$/  {\\\"\1\\\", (void *) 0},/p' -e 's/^$symcode* \([^ ]*\) \(lib[^ ]*\)$/  {\"\2\", (void *) \&\2},/p' -e 's/^$symcode* \([^ ]*\) \([^ ]*\)$/  {\"lib\2\", (void *) \&\2},/p'"
+lt_cv_sys_global_symbol_to_c_name_address="sed -n"\
+$lt_c_name_hook\
+" -e 's/^: \(.*\) .*$/  {\"\1\", (void *) 0},/p'"\
+" -e 's/^$symcode$symcode* .* \(.*\)$/  {\"\1\", (void *) \&\1},/p'"
+
+# Transform an extracted symbol line into symbol name with lib prefix and
+# symbol address.
+lt_cv_sys_global_symbol_to_c_name_address_lib_prefix="sed -n"\
+$lt_c_name_lib_hook\
+" -e 's/^: \(.*\) .*$/  {\"\1\", (void *) 0},/p'"\
+" -e 's/^$symcode$symcode* .* \(lib.*\)$/  {\"\1\", (void *) \&\1},/p'"\
+" -e 's/^$symcode$symcode* .* \(.*\)$/  {\"lib\1\", (void *) \&\1},/p'"
 
 # Handle CRLF in mingw tool chain
 opt_cr=
@@ -8754,21 +11018,24 @@ for ac_symprfx in "" "_"; do
 
   # Write the raw and C identifiers.
   if test "$lt_cv_nm_interface" = "MS dumpbin"; then
-    # Fake it for dumpbin and say T for any non-static function
-    # and D for any global variable.
+    # Fake it for dumpbin and say T for any non-static function,
+    # D for any global variable and I for any imported variable.
     # Also find C++ and __fastcall symbols from MSVC++,
     # which start with @ or ?.
     lt_cv_sys_global_symbol_pipe="$AWK '"\
 "     {last_section=section; section=\$ 3};"\
 "     /^COFF SYMBOL TABLE/{for(i in hide) delete hide[i]};"\
 "     /Section length .*#relocs.*(pick any)/{hide[last_section]=1};"\
+"     /^ *Symbol name *: /{split(\$ 0,sn,\":\"); si=substr(sn[2],2)};"\
+"     /^ *Type *: code/{print \"T\",si,substr(si,length(prfx))};"\
+"     /^ *Type *: data/{print \"I\",si,substr(si,length(prfx))};"\
 "     \$ 0!~/External *\|/{next};"\
 "     / 0+ UNDEF /{next}; / UNDEF \([^|]\)*()/{next};"\
 "     {if(hide[section]) next};"\
-"     {f=0}; \$ 0~/\(\).*\|/{f=1}; {printf f ? \"T \" : \"D \"};"\
-"     {split(\$ 0, a, /\||\r/); split(a[2], s)};"\
-"     s[1]~/^[@?]/{print s[1], s[1]; next};"\
-"     s[1]~prfx {split(s[1],t,\"@\"); print t[1], substr(t[1],length(prfx))}"\
+"     {f=\"D\"}; \$ 0~/\(\).*\|/{f=\"T\"};"\
+"     {split(\$ 0,a,/\||\r/); split(a[2],s)};"\
+"     s[1]~/^[@?]/{print f,s[1],s[1]; next};"\
+"     s[1]~prfx {split(s[1],t,\"@\"); print f,t[1],substr(t[1],length(prfx))}"\
 "     ' prfx=^$ac_symprfx"
   else
     lt_cv_sys_global_symbol_pipe="sed -n -e 's/^.*[	 ]\($symcode$symcode*\)[	 ][	 ]*$ac_symprfx$sympat$opt_cr$/$symxfrm/p'"
@@ -8816,11 +11083,11 @@ _LT_EOF
 	if $GREP ' nm_test_func$' "$nlist" >/dev/null; then
 	  cat <<_LT_EOF > conftest.$ac_ext
 /* Keep this code in sync between libtool.m4, ltmain, lt_system.h, and tests.  */
-#if defined(_WIN32) || defined(__CYGWIN__) || defined(_WIN32_WCE)
-/* DATA imports from DLLs on WIN32 con't be const, because runtime
+#if defined _WIN32 || defined __CYGWIN__ || defined _WIN32_WCE
+/* DATA imports from DLLs on WIN32 can't be const, because runtime
    relocations are performed -- see ld's documentation on pseudo-relocs.  */
 # define LT_DLSYM_CONST
-#elif defined(__osf__)
+#elif defined __osf__
 /* This system does not cope well with relocations in const data.  */
 # define LT_DLSYM_CONST
 #else
@@ -8846,7 +11113,7 @@ lt__PROGRAM__LTX_preloaded_symbols[] =
 {
   { "@PROGRAM@", (void *) 0 },
 _LT_EOF
-	  $SED "s/^$symcode$symcode* \(.*\) \(.*\)$/  {\"\2\", (void *) \&\2},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
+	  $SED "s/^$symcode$symcode* .* \(.*\)$/  {\"\1\", (void *) \&\1},/" < "$nlist" | $GREP -v main >> conftest.$ac_ext
 	  cat <<\_LT_EOF >> conftest.$ac_ext
   {0, (void *) 0}
 };
@@ -8866,13 +11133,13 @@ _LT_EOF
 	  mv conftest.$ac_objext conftstm.$ac_objext
 	  lt_globsym_save_LIBS=$LIBS
 	  lt_globsym_save_CFLAGS=$CFLAGS
-	  LIBS="conftstm.$ac_objext"
+	  LIBS=conftstm.$ac_objext
 	  CFLAGS="$CFLAGS$lt_prog_compiler_no_builtin_flag"
 	  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_link\""; } >&5
   (eval $ac_link) 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; } && test -s conftest${ac_exeext}; then
+  test $ac_status = 0; } && test -s conftest$ac_exeext; then
 	    pipe_works=yes
 	  fi
 	  LIBS=$lt_globsym_save_LIBS
@@ -8893,7 +11160,7 @@ _LT_EOF
   rm -rf conftest* conftst*
 
   # Do not use the global_symbol_pipe unless it works.
-  if test "$pipe_works" = yes; then
+  if test yes = "$pipe_works"; then
     break
   else
     lt_cv_sys_global_symbol_pipe=
@@ -8935,6 +11202,16 @@ fi
 
 
 
+
+
+
+
+
+
+
+
+
+
 
 
 
@@ -8958,9 +11235,9 @@ fi
 
 
 lt_sysroot=
-case ${with_sysroot} in #(
+case $with_sysroot in #(
  yes)
-   if test "$GCC" = yes; then
+   if test yes = "$GCC"; then
      lt_sysroot=`$CC --print-sysroot 2>/dev/null`
    fi
    ;; #(
@@ -8970,8 +11247,8 @@ case ${with_sysroot} in #(
  no|'')
    ;; #(
  *)
-   { $as_echo "$as_me:${as_lineno-$LINENO}: result: ${with_sysroot}" >&5
-$as_echo "${with_sysroot}" >&6; }
+   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $with_sysroot" >&5
+$as_echo "$with_sysroot" >&6; }
    as_fn_error $? "The sysroot must be an absolute path." "$LINENO" 5
    ;;
 esac
@@ -8983,18 +11260,99 @@ $as_echo "${lt_sysroot:-no}" >&6; }
 
 
 
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for a working dd" >&5
+$as_echo_n "checking for a working dd... " >&6; }
+if ${ac_cv_path_lt_DD+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  printf 0123456789abcdef0123456789abcdef >conftest.i
+cat conftest.i conftest.i >conftest2.i
+: ${lt_DD:=$DD}
+if test -z "$lt_DD"; then
+  ac_path_lt_DD_found=false
+  # Loop through the user's path and test for each of PROGNAME-LIST
+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_prog in dd; do
+    for ac_exec_ext in '' $ac_executable_extensions; do
+      ac_path_lt_DD="$as_dir/$ac_prog$ac_exec_ext"
+      as_fn_executable_p "$ac_path_lt_DD" || continue
+if "$ac_path_lt_DD" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then
+  cmp -s conftest.i conftest.out \
+  && ac_cv_path_lt_DD="$ac_path_lt_DD" ac_path_lt_DD_found=:
+fi
+      $ac_path_lt_DD_found && break 3
+    done
+  done
+  done
+IFS=$as_save_IFS
+  if test -z "$ac_cv_path_lt_DD"; then
+    :
+  fi
+else
+  ac_cv_path_lt_DD=$lt_DD
+fi
+
+rm -f conftest.i conftest2.i conftest.out
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_lt_DD" >&5
+$as_echo "$ac_cv_path_lt_DD" >&6; }
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to truncate binary pipes" >&5
+$as_echo_n "checking how to truncate binary pipes... " >&6; }
+if ${lt_cv_truncate_bin+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  printf 0123456789abcdef0123456789abcdef >conftest.i
+cat conftest.i conftest.i >conftest2.i
+lt_cv_truncate_bin=
+if "$ac_cv_path_lt_DD" bs=32 count=1 <conftest2.i >conftest.out 2>/dev/null; then
+  cmp -s conftest.i conftest.out \
+  && lt_cv_truncate_bin="$ac_cv_path_lt_DD bs=4096 count=1"
+fi
+rm -f conftest.i conftest2.i conftest.out
+test -z "$lt_cv_truncate_bin" && lt_cv_truncate_bin="$SED -e 4q"
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_truncate_bin" >&5
+$as_echo "$lt_cv_truncate_bin" >&6; }
+
+
+
+
+
+
+
+# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
+func_cc_basename ()
+{
+    for cc_temp in $*""; do
+      case $cc_temp in
+        compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+        distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+        \-*) ;;
+        *) break;;
+      esac
+    done
+    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
+}
+
 # Check whether --enable-libtool-lock was given.
 if test "${enable_libtool_lock+set}" = set; then :
   enableval=$enable_libtool_lock;
 fi
 
-test "x$enable_libtool_lock" != xno && enable_libtool_lock=yes
+test no = "$enable_libtool_lock" || enable_libtool_lock=yes
 
 # Some flags need to be propagated to the compiler or linker for good
 # libtool support.
 case $host in
 ia64-*-hpux*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set mode
+  # options accordingly.
   echo 'int i;' > conftest.$ac_ext
   if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
   (eval $ac_compile) 2>&5
@@ -9003,24 +11361,25 @@ ia64-*-hpux*)
   test $ac_status = 0; }; then
     case `/usr/bin/file conftest.$ac_objext` in
       *ELF-32*)
-	HPUX_IA64_MODE="32"
+	HPUX_IA64_MODE=32
 	;;
       *ELF-64*)
-	HPUX_IA64_MODE="64"
+	HPUX_IA64_MODE=64
 	;;
     esac
   fi
   rm -rf conftest*
   ;;
 *-*-irix6*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.
   echo '#line '$LINENO' "configure"' > conftest.$ac_ext
   if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
   (eval $ac_compile) 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
   test $ac_status = 0; }; then
-    if test "$lt_cv_prog_gnu_ld" = yes; then
+    if test yes = "$lt_cv_prog_gnu_ld"; then
       case `/usr/bin/file conftest.$ac_objext` in
 	*32-bit*)
 	  LD="${LD-ld} -melf32bsmip"
@@ -9049,9 +11408,50 @@ ia64-*-hpux*)
   rm -rf conftest*
   ;;
 
+mips64*-*linux*)
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.
+  echo '#line '$LINENO' "configure"' > conftest.$ac_ext
+  if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
+  (eval $ac_compile) 2>&5
+  ac_status=$?
+  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
+  test $ac_status = 0; }; then
+    emul=elf
+    case `/usr/bin/file conftest.$ac_objext` in
+      *32-bit*)
+	emul="${emul}32"
+	;;
+      *64-bit*)
+	emul="${emul}64"
+	;;
+    esac
+    case `/usr/bin/file conftest.$ac_objext` in
+      *MSB*)
+	emul="${emul}btsmip"
+	;;
+      *LSB*)
+	emul="${emul}ltsmip"
+	;;
+    esac
+    case `/usr/bin/file conftest.$ac_objext` in
+      *N32*)
+	emul="${emul}n32"
+	;;
+    esac
+    LD="${LD-ld} -m $emul"
+  fi
+  rm -rf conftest*
+  ;;
+
 x86_64-*kfreebsd*-gnu|x86_64-*linux*|powerpc*-*linux*| \
 s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.  Note that the listed cases only cover the
+  # situations where additional linker options are needed (such as when
+  # doing 32-bit compilation for a host where ld defaults to 64-bit, or
+  # vice versa); the common cases where no linker options are needed do
+  # not appear in the list.
   echo 'int i;' > conftest.$ac_ext
   if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
   (eval $ac_compile) 2>&5
@@ -9074,10 +11474,10 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
 		;;
 	    esac
 	    ;;
-	  powerpc64le-*)
+	  powerpc64le-*linux*)
 	    LD="${LD-ld} -m elf32lppclinux"
 	    ;;
-	  powerpc64-*)
+	  powerpc64-*linux*)
 	    LD="${LD-ld} -m elf32ppclinux"
 	    ;;
 	  s390x-*linux*)
@@ -9096,10 +11496,10 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
 	  x86_64-*linux*)
 	    LD="${LD-ld} -m elf_x86_64"
 	    ;;
-	  powerpcle-*)
+	  powerpcle-*linux*)
 	    LD="${LD-ld} -m elf64lppc"
 	    ;;
-	  powerpc-*)
+	  powerpc-*linux*)
 	    LD="${LD-ld} -m elf64ppc"
 	    ;;
 	  s390*-*linux*|s390*-*tpf*)
@@ -9117,7 +11517,7 @@ s390*-*linux*|s390*-*tpf*|sparc*-*linux*)
 
 *-*-sco3.2v5*)
   # On SCO OpenServer 5, we need -belf to get full-featured binaries.
-  SAVE_CFLAGS="$CFLAGS"
+  SAVE_CFLAGS=$CFLAGS
   CFLAGS="$CFLAGS -belf"
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler needs -belf" >&5
 $as_echo_n "checking whether the C compiler needs -belf... " >&6; }
@@ -9157,13 +11557,14 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_cc_needs_belf" >&5
 $as_echo "$lt_cv_cc_needs_belf" >&6; }
-  if test x"$lt_cv_cc_needs_belf" != x"yes"; then
+  if test yes != "$lt_cv_cc_needs_belf"; then
     # this is probably gcc 2.8.0, egcs 1.0 or newer; no need for -belf
-    CFLAGS="$SAVE_CFLAGS"
+    CFLAGS=$SAVE_CFLAGS
   fi
   ;;
 *-*solaris*)
-  # Find out which ABI we are using.
+  # Find out what ABI is being produced by ac_compile, and set linker
+  # options accordingly.
   echo 'int i;' > conftest.$ac_ext
   if { { eval echo "\"\$as_me\":${as_lineno-$LINENO}: \"$ac_compile\""; } >&5
   (eval $ac_compile) 2>&5
@@ -9175,7 +11576,7 @@ $as_echo "$lt_cv_cc_needs_belf" >&6; }
       case $lt_cv_prog_gnu_ld in
       yes*)
         case $host in
-        i?86-*-solaris*)
+        i?86-*-solaris*|x86_64-*-solaris*)
           LD="${LD-ld} -m elf_x86_64"
           ;;
         sparc*-*-solaris*)
@@ -9184,7 +11585,7 @@ $as_echo "$lt_cv_cc_needs_belf" >&6; }
         esac
         # GNU ld 2.21 introduced _sol2 emulations.  Use them if available.
         if ${LD-ld} -V | grep _sol2 >/dev/null 2>&1; then
-          LD="${LD-ld}_sol2"
+          LD=${LD-ld}_sol2
         fi
         ;;
       *)
@@ -9200,7 +11601,7 @@ $as_echo "$lt_cv_cc_needs_belf" >&6; }
   ;;
 esac
 
-need_locks="$enable_libtool_lock"
+need_locks=$enable_libtool_lock
 
 if test -n "$ac_tool_prefix"; then
   # Extract the first word of "${ac_tool_prefix}mt", so it can be a program name with args.
@@ -9311,7 +11712,7 @@ else
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_path_mainfest_tool" >&5
 $as_echo "$lt_cv_path_mainfest_tool" >&6; }
-if test "x$lt_cv_path_mainfest_tool" != xyes; then
+if test yes != "$lt_cv_path_mainfest_tool"; then
   MANIFEST_TOOL=:
 fi
 
@@ -9814,7 +12215,7 @@ if ${lt_cv_apple_cc_single_mod+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   lt_cv_apple_cc_single_mod=no
-      if test -z "${LT_MULTI_MODULE}"; then
+      if test -z "$LT_MULTI_MODULE"; then
 	# By default we will add the -single_module flag. You can override
 	# by either setting the environment variable LT_MULTI_MODULE
 	# non-empty at configure time, or by adding -multi_module to the
@@ -9832,7 +12233,7 @@ else
 	  cat conftest.err >&5
 	# Otherwise, if the output was created with a 0 exit code from
 	# the compiler, it worked.
-	elif test -f libconftest.dylib && test $_lt_result -eq 0; then
+	elif test -f libconftest.dylib && test 0 = "$_lt_result"; then
 	  lt_cv_apple_cc_single_mod=yes
 	else
 	  cat conftest.err >&5
@@ -9871,7 +12272,7 @@ else
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-	LDFLAGS="$save_LDFLAGS"
+	LDFLAGS=$save_LDFLAGS
 
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_ld_exported_symbols_list" >&5
@@ -9900,7 +12301,7 @@ _LT_EOF
       _lt_result=$?
       if test -s conftest.err && $GREP force_load conftest.err; then
 	cat conftest.err >&5
-      elif test -f conftest && test $_lt_result -eq 0 && $GREP forced_load conftest >/dev/null 2>&1 ; then
+      elif test -f conftest && test 0 = "$_lt_result" && $GREP forced_load conftest >/dev/null 2>&1; then
 	lt_cv_ld_force_load=yes
       else
 	cat conftest.err >&5
@@ -9913,32 +12314,32 @@ fi
 $as_echo "$lt_cv_ld_force_load" >&6; }
     case $host_os in
     rhapsody* | darwin1.[012])
-      _lt_dar_allow_undefined='${wl}-undefined ${wl}suppress' ;;
+      _lt_dar_allow_undefined='$wl-undefined ${wl}suppress' ;;
     darwin1.*)
-      _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+      _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;
     darwin*) # darwin 5.x on
       # if running on 10.5 or later, the deployment target defaults
       # to the OS version, if on x86, and 10.4, the deployment
       # target defaults to 10.4. Don't you love it?
       case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in
 	10.0,*86*-darwin8*|10.0,*-darwin[91]*)
-	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
-	10.[012]*)
-	  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;
+	  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;
+	10.[012][,.]*)
+	  _lt_dar_allow_undefined='$wl-flat_namespace $wl-undefined ${wl}suppress' ;;
 	10.*)
-	  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;
+	  _lt_dar_allow_undefined='$wl-undefined ${wl}dynamic_lookup' ;;
       esac
     ;;
   esac
-    if test "$lt_cv_apple_cc_single_mod" = "yes"; then
+    if test yes = "$lt_cv_apple_cc_single_mod"; then
       _lt_dar_single_mod='$single_module'
     fi
-    if test "$lt_cv_ld_exported_symbols_list" = "yes"; then
-      _lt_dar_export_syms=' ${wl}-exported_symbols_list,$output_objdir/${libname}-symbols.expsym'
+    if test yes = "$lt_cv_ld_exported_symbols_list"; then
+      _lt_dar_export_syms=' $wl-exported_symbols_list,$output_objdir/$libname-symbols.expsym'
     else
-      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/${libname}-symbols.expsym ${lib}'
+      _lt_dar_export_syms='~$NMEDIT -s $output_objdir/$libname-symbols.expsym $lib'
     fi
-    if test "$DSYMUTIL" != ":" && test "$lt_cv_ld_force_load" = "no"; then
+    if test : != "$DSYMUTIL" && test no = "$lt_cv_ld_force_load"; then
       _lt_dsymutil='~$DSYMUTIL $lib || :'
     else
       _lt_dsymutil=
@@ -9946,6 +12347,41 @@ $as_echo "$lt_cv_ld_force_load" >&6; }
     ;;
   esac
 
+# func_munge_path_list VARIABLE PATH
+# -----------------------------------
+# VARIABLE is name of variable containing _space_ separated list of
+# directories to be munged by the contents of PATH, which is string
+# having a format:
+# "DIR[:DIR]:"
+#       string "DIR[ DIR]" will be prepended to VARIABLE
+# ":DIR[:DIR]"
+#       string "DIR[ DIR]" will be appended to VARIABLE
+# "DIRP[:DIRP]::[DIRA:]DIRA"
+#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
+#       "DIRA[ DIRA]" will be appended to VARIABLE
+# "DIR[:DIR]"
+#       VARIABLE will be replaced by "DIR[ DIR]"
+func_munge_path_list ()
+{
+    case x$2 in
+    x)
+        ;;
+    *:)
+        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'` \$$1\"
+        ;;
+    x:*)
+        eval $1=\"\$$1 `$ECHO $2 | $SED 's/:/ /g'`\"
+        ;;
+    *::*)
+        eval $1=\"\$$1\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
+        eval $1=\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \$$1\"
+        ;;
+    *)
+        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'`\"
+        ;;
+    esac
+}
+
 for ac_header in dlfcn.h
 do :
   ac_fn_c_check_header_compile "$LINENO" "dlfcn.h" "ac_cv_header_dlfcn_h" "$ac_includes_default
@@ -9982,14 +12418,14 @@ if test "${enable_shared+set}" = set; then :
     *)
       enable_shared=no
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for pkg in $enableval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$pkg" = "X$p"; then
 	  enable_shared=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac
 else
@@ -10013,14 +12449,14 @@ if test "${enable_static+set}" = set; then :
     *)
      enable_static=no
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for pkg in $enableval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$pkg" = "X$p"; then
 	  enable_static=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac
 else
@@ -10044,14 +12480,14 @@ if test "${with_pic+set}" = set; then :
     *)
       pic_mode=default
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for lt_pkg in $withval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$lt_pkg" = "X$lt_p"; then
 	  pic_mode=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac
 else
@@ -10059,8 +12495,6 @@ else
 fi
 
 
-test -z "$pic_mode" && pic_mode=default
-
 
 
 
@@ -10076,14 +12510,14 @@ if test "${enable_fast_install+set}" = set; then :
     *)
       enable_fast_install=no
       # Look at the argument we got.  We use all the common list separators.
-      lt_save_ifs="$IFS"; IFS="${IFS}$PATH_SEPARATOR,"
+      lt_save_ifs=$IFS; IFS=$IFS$PATH_SEPARATOR,
       for pkg in $enableval; do
-	IFS="$lt_save_ifs"
+	IFS=$lt_save_ifs
 	if test "X$pkg" = "X$p"; then
 	  enable_fast_install=yes
 	fi
       done
-      IFS="$lt_save_ifs"
+      IFS=$lt_save_ifs
       ;;
     esac
 else
@@ -10097,11 +12531,63 @@ fi
 
 
 
+  shared_archive_member_spec=
+case $host,$enable_shared in
+power*-*-aix[5-9]*,yes)
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking which variant of shared library versioning to provide" >&5
+$as_echo_n "checking which variant of shared library versioning to provide... " >&6; }
+
+# Check whether --with-aix-soname was given.
+if test "${with_aix_soname+set}" = set; then :
+  withval=$with_aix_soname; case $withval in
+    aix|svr4|both)
+      ;;
+    *)
+      as_fn_error $? "Unknown argument to --with-aix-soname" "$LINENO" 5
+      ;;
+    esac
+    lt_cv_with_aix_soname=$with_aix_soname
+else
+  if ${lt_cv_with_aix_soname+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  lt_cv_with_aix_soname=aix
+fi
+
+    with_aix_soname=$lt_cv_with_aix_soname
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $with_aix_soname" >&5
+$as_echo "$with_aix_soname" >&6; }
+  if test aix != "$with_aix_soname"; then
+    # For the AIX way of multilib, we name the shared archive member
+    # based on the bitwidth used, traditionally 'shr.o' or 'shr_64.o',
+    # and 'shr.imp' or 'shr_64.imp', respectively, for the Import File.
+    # Even when GNU compilers ignore OBJECT_MODE but need '-maix64' flag,
+    # the AIX toolchain works better with OBJECT_MODE set (default 32).
+    if test 64 = "${OBJECT_MODE-32}"; then
+      shared_archive_member_spec=shr_64
+    else
+      shared_archive_member_spec=shr
+    fi
+  fi
+  ;;
+*)
+  with_aix_soname=aix
+  ;;
+esac
+
+
+
+
+
+
+
 
 
 
 # This can be used to rebuild libtool when needed
-LIBTOOL_DEPS="$ltmain"
+LIBTOOL_DEPS=$ltmain
 
 # Always use our own libtool.
 LIBTOOL='$(SHELL) $(top_builddir)/libtool'
@@ -10150,7 +12636,7 @@ test -z "$LN_S" && LN_S="ln -s"
 
 
 
-if test -n "${ZSH_VERSION+set}" ; then
+if test -n "${ZSH_VERSION+set}"; then
    setopt NO_GLOB_SUBST
 fi
 
@@ -10189,7 +12675,7 @@ aix3*)
   # AIX sometimes has problems with the GCC collect2 program.  For some
   # reason, if we set the COLLECT_NAMES environment variable, the problems
   # vanish in a puff of smoke.
-  if test "X${COLLECT_NAMES+set}" != Xset; then
+  if test set != "${COLLECT_NAMES+set}"; then
     COLLECT_NAMES=
     export COLLECT_NAMES
   fi
@@ -10200,14 +12686,14 @@ esac
 ofile=libtool
 can_build_shared=yes
 
-# All known linkers require a `.a' archive for static linking (except MSVC,
+# All known linkers require a '.a' archive for static linking (except MSVC,
 # which needs '.lib').
 libext=a
 
-with_gnu_ld="$lt_cv_prog_gnu_ld"
+with_gnu_ld=$lt_cv_prog_gnu_ld
 
-old_CC="$CC"
-old_CFLAGS="$CFLAGS"
+old_CC=$CC
+old_CFLAGS=$CFLAGS
 
 # Set sane defaults for various variables
 test -z "$CC" && CC=cc
@@ -10216,15 +12702,8 @@ test -z "$LTCFLAGS" && LTCFLAGS=$CFLAGS
 test -z "$LD" && LD=ld
 test -z "$ac_objext" && ac_objext=o
 
-for cc_temp in $compiler""; do
-  case $cc_temp in
-    compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
-    distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
-    \-*) ;;
-    *) break;;
-  esac
-done
-cc_basename=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
+func_cc_basename $compiler
+cc_basename=$func_cc_basename_result
 
 
 # Only perform the check for file, if the check method requires it
@@ -10239,22 +12718,22 @@ if ${lt_cv_path_MAGIC_CMD+:} false; then :
 else
   case $MAGIC_CMD in
 [\\/*] |  ?:[\\/]*)
-  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
   ;;
 *)
-  lt_save_MAGIC_CMD="$MAGIC_CMD"
-  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  lt_save_MAGIC_CMD=$MAGIC_CMD
+  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
   ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
   for ac_dir in $ac_dummy; do
-    IFS="$lt_save_ifs"
+    IFS=$lt_save_ifs
     test -z "$ac_dir" && ac_dir=.
-    if test -f $ac_dir/${ac_tool_prefix}file; then
-      lt_cv_path_MAGIC_CMD="$ac_dir/${ac_tool_prefix}file"
+    if test -f "$ac_dir/${ac_tool_prefix}file"; then
+      lt_cv_path_MAGIC_CMD=$ac_dir/"${ac_tool_prefix}file"
       if test -n "$file_magic_test_file"; then
 	case $deplibs_check_method in
 	"file_magic "*)
 	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
-	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
 	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
 	    $EGREP "$file_magic_regex" > /dev/null; then
 	    :
@@ -10277,13 +12756,13 @@ _LT_EOF
       break
     fi
   done
-  IFS="$lt_save_ifs"
-  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  IFS=$lt_save_ifs
+  MAGIC_CMD=$lt_save_MAGIC_CMD
   ;;
 esac
 fi
 
-MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+MAGIC_CMD=$lt_cv_path_MAGIC_CMD
 if test -n "$MAGIC_CMD"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
 $as_echo "$MAGIC_CMD" >&6; }
@@ -10305,22 +12784,22 @@ if ${lt_cv_path_MAGIC_CMD+:} false; then :
 else
   case $MAGIC_CMD in
 [\\/*] |  ?:[\\/]*)
-  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
+  lt_cv_path_MAGIC_CMD=$MAGIC_CMD # Let the user override the test with a path.
   ;;
 *)
-  lt_save_MAGIC_CMD="$MAGIC_CMD"
-  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
+  lt_save_MAGIC_CMD=$MAGIC_CMD
+  lt_save_ifs=$IFS; IFS=$PATH_SEPARATOR
   ac_dummy="/usr/bin$PATH_SEPARATOR$PATH"
   for ac_dir in $ac_dummy; do
-    IFS="$lt_save_ifs"
+    IFS=$lt_save_ifs
     test -z "$ac_dir" && ac_dir=.
-    if test -f $ac_dir/file; then
-      lt_cv_path_MAGIC_CMD="$ac_dir/file"
+    if test -f "$ac_dir/file"; then
+      lt_cv_path_MAGIC_CMD=$ac_dir/"file"
       if test -n "$file_magic_test_file"; then
 	case $deplibs_check_method in
 	"file_magic "*)
 	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
-	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+	  MAGIC_CMD=$lt_cv_path_MAGIC_CMD
 	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
 	    $EGREP "$file_magic_regex" > /dev/null; then
 	    :
@@ -10343,13 +12822,13 @@ _LT_EOF
       break
     fi
   done
-  IFS="$lt_save_ifs"
-  MAGIC_CMD="$lt_save_MAGIC_CMD"
+  IFS=$lt_save_ifs
+  MAGIC_CMD=$lt_save_MAGIC_CMD
   ;;
 esac
 fi
 
-MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
+MAGIC_CMD=$lt_cv_path_MAGIC_CMD
 if test -n "$MAGIC_CMD"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAGIC_CMD" >&5
 $as_echo "$MAGIC_CMD" >&6; }
@@ -10370,7 +12849,7 @@ esac
 
 # Use C for the default configuration in the libtool script
 
-lt_save_CC="$CC"
+lt_save_CC=$CC
 ac_ext=c
 ac_cpp='$CPP $CPPFLAGS'
 ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
@@ -10432,7 +12911,7 @@ if test -n "$compiler"; then
 
 lt_prog_compiler_no_builtin_flag=
 
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   case $cc_basename in
   nvcc*)
     lt_prog_compiler_no_builtin_flag=' -Xcompiler -fno-builtin' ;;
@@ -10448,7 +12927,7 @@ else
   lt_cv_prog_compiler_rtti_exceptions=no
    ac_outfile=conftest.$ac_objext
    echo "$lt_simple_compile_test_code" > conftest.$ac_ext
-   lt_compiler_flag="-fno-rtti -fno-exceptions"
+   lt_compiler_flag="-fno-rtti -fno-exceptions"  ## exclude from sc_useless_quotes_in_assignment
    # Insert the option either (1) after the last *FLAGS variable, or
    # (2) before a word containing "conftest.", or (3) at the end.
    # Note that $ac_compile itself does not contain backslashes and begins
@@ -10478,7 +12957,7 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_rtti_exceptions" >&5
 $as_echo "$lt_cv_prog_compiler_rtti_exceptions" >&6; }
 
-if test x"$lt_cv_prog_compiler_rtti_exceptions" = xyes; then
+if test yes = "$lt_cv_prog_compiler_rtti_exceptions"; then
     lt_prog_compiler_no_builtin_flag="$lt_prog_compiler_no_builtin_flag -fno-rtti -fno-exceptions"
 else
     :
@@ -10496,17 +12975,18 @@ lt_prog_compiler_pic=
 lt_prog_compiler_static=
 
 
-  if test "$GCC" = yes; then
+  if test yes = "$GCC"; then
     lt_prog_compiler_wl='-Wl,'
     lt_prog_compiler_static='-static'
 
     case $host_os in
       aix*)
       # All AIX code is PIC.
-      if test "$host_cpu" = ia64; then
+      if test ia64 = "$host_cpu"; then
 	# AIX 5 now supports IA64 processor
 	lt_prog_compiler_static='-Bstatic'
       fi
+      lt_prog_compiler_pic='-fPIC'
       ;;
 
     amigaos*)
@@ -10517,8 +12997,8 @@ lt_prog_compiler_static=
         ;;
       m68k)
             # FIXME: we need at least 68020 code to build shared libraries, but
-            # adding the `-m68020' flag to GCC prevents building anything better,
-            # like `-m68040'.
+            # adding the '-m68020' flag to GCC prevents building anything better,
+            # like '-m68040'.
             lt_prog_compiler_pic='-m68020 -resident32 -malways-restore-a4'
         ;;
       esac
@@ -10534,6 +13014,11 @@ lt_prog_compiler_static=
       # Although the cygwin gcc ignores -fPIC, still need this for old-style
       # (--disable-auto-import) libraries
       lt_prog_compiler_pic='-DDLL_EXPORT'
+      case $host_os in
+      os2*)
+	lt_prog_compiler_static='$wl-static'
+	;;
+      esac
       ;;
 
     darwin* | rhapsody*)
@@ -10604,7 +13089,7 @@ lt_prog_compiler_static=
     case $host_os in
     aix*)
       lt_prog_compiler_wl='-Wl,'
-      if test "$host_cpu" = ia64; then
+      if test ia64 = "$host_cpu"; then
 	# AIX 5 now supports IA64 processor
 	lt_prog_compiler_static='-Bstatic'
       else
@@ -10612,10 +13097,29 @@ lt_prog_compiler_static=
       fi
       ;;
 
+    darwin* | rhapsody*)
+      # PIC is the default on this platform
+      # Common symbols not allowed in MH_DYLIB files
+      lt_prog_compiler_pic='-fno-common'
+      case $cc_basename in
+      nagfor*)
+        # NAG Fortran compiler
+        lt_prog_compiler_wl='-Wl,-Wl,,'
+        lt_prog_compiler_pic='-PIC'
+        lt_prog_compiler_static='-Bstatic'
+        ;;
+      esac
+      ;;
+
     mingw* | cygwin* | pw32* | os2* | cegcc*)
       # This hack is so that the source file can tell whether it is being
       # built for inclusion in a dll (and should export symbols for example).
       lt_prog_compiler_pic='-DDLL_EXPORT'
+      case $host_os in
+      os2*)
+	lt_prog_compiler_static='$wl-static'
+	;;
+      esac
       ;;
 
     hpux9* | hpux10* | hpux11*)
@@ -10631,7 +13135,7 @@ lt_prog_compiler_static=
 	;;
       esac
       # Is there a better lt_prog_compiler_static that works with the bundled CC?
-      lt_prog_compiler_static='${wl}-a ${wl}archive'
+      lt_prog_compiler_static='$wl-a ${wl}archive'
       ;;
 
     irix5* | irix6* | nonstopux*)
@@ -10642,7 +13146,7 @@ lt_prog_compiler_static=
 
     linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
       case $cc_basename in
-      # old Intel for x86_64 which still supported -KPIC.
+      # old Intel for x86_64, which still supported -KPIC.
       ecc*)
 	lt_prog_compiler_wl='-Wl,'
 	lt_prog_compiler_pic='-KPIC'
@@ -10667,6 +13171,12 @@ lt_prog_compiler_static=
 	lt_prog_compiler_pic='-PIC'
 	lt_prog_compiler_static='-Bstatic'
 	;;
+      tcc*)
+	# Fabrice Bellard et al's Tiny C Compiler
+	lt_prog_compiler_wl='-Wl,'
+	lt_prog_compiler_pic='-fPIC'
+	lt_prog_compiler_static='-static'
+	;;
       pgcc* | pgf77* | pgf90* | pgf95* | pgfortran*)
         # Portland Group compilers (*not* the Pentium gcc compiler,
 	# which looks to be a dead project)
@@ -10764,7 +13274,7 @@ lt_prog_compiler_static=
       ;;
 
     sysv4*MP*)
-      if test -d /usr/nec ;then
+      if test -d /usr/nec; then
 	lt_prog_compiler_pic='-Kconform_pic'
 	lt_prog_compiler_static='-Bstatic'
       fi
@@ -10793,7 +13303,7 @@ lt_prog_compiler_static=
   fi
 
 case $host_os in
-  # For platforms which do not support PIC, -DPIC is meaningless:
+  # For platforms that do not support PIC, -DPIC is meaningless:
   *djgpp*)
     lt_prog_compiler_pic=
     ;;
@@ -10825,7 +13335,7 @@ else
   lt_cv_prog_compiler_pic_works=no
    ac_outfile=conftest.$ac_objext
    echo "$lt_simple_compile_test_code" > conftest.$ac_ext
-   lt_compiler_flag="$lt_prog_compiler_pic -DPIC"
+   lt_compiler_flag="$lt_prog_compiler_pic -DPIC"  ## exclude from sc_useless_quotes_in_assignment
    # Insert the option either (1) after the last *FLAGS variable, or
    # (2) before a word containing "conftest.", or (3) at the end.
    # Note that $ac_compile itself does not contain backslashes and begins
@@ -10855,7 +13365,7 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_pic_works" >&5
 $as_echo "$lt_cv_prog_compiler_pic_works" >&6; }
 
-if test x"$lt_cv_prog_compiler_pic_works" = xyes; then
+if test yes = "$lt_cv_prog_compiler_pic_works"; then
     case $lt_prog_compiler_pic in
      "" | " "*) ;;
      *) lt_prog_compiler_pic=" $lt_prog_compiler_pic" ;;
@@ -10887,7 +13397,7 @@ if ${lt_cv_prog_compiler_static_works+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   lt_cv_prog_compiler_static_works=no
-   save_LDFLAGS="$LDFLAGS"
+   save_LDFLAGS=$LDFLAGS
    LDFLAGS="$LDFLAGS $lt_tmp_static_flag"
    echo "$lt_simple_link_test_code" > conftest.$ac_ext
    if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
@@ -10906,13 +13416,13 @@ else
      fi
    fi
    $RM -r conftest*
-   LDFLAGS="$save_LDFLAGS"
+   LDFLAGS=$save_LDFLAGS
 
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler_static_works" >&5
 $as_echo "$lt_cv_prog_compiler_static_works" >&6; }
 
-if test x"$lt_cv_prog_compiler_static_works" = xyes; then
+if test yes = "$lt_cv_prog_compiler_static_works"; then
     :
 else
     lt_prog_compiler_static=
@@ -11032,8 +13542,8 @@ $as_echo "$lt_cv_prog_compiler_c_o" >&6; }
 
 
 
-hard_links="nottested"
-if test "$lt_cv_prog_compiler_c_o" = no && test "$need_locks" != no; then
+hard_links=nottested
+if test no = "$lt_cv_prog_compiler_c_o" && test no != "$need_locks"; then
   # do not overwrite the value of need_locks provided by the user
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking if we can lock with hard links" >&5
 $as_echo_n "checking if we can lock with hard links... " >&6; }
@@ -11045,9 +13555,9 @@ $as_echo_n "checking if we can lock with hard links... " >&6; }
   ln conftest.a conftest.b 2>/dev/null && hard_links=no
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hard_links" >&5
 $as_echo "$hard_links" >&6; }
-  if test "$hard_links" = no; then
-    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&5
-$as_echo "$as_me: WARNING: \`$CC' does not support \`-c -o', so \`make -j' may be unsafe" >&2;}
+  if test no = "$hard_links"; then
+    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe" >&5
+$as_echo "$as_me: WARNING: '$CC' does not support '-c -o', so 'make -j' may be unsafe" >&2;}
     need_locks=warn
   fi
 else
@@ -11090,9 +13600,9 @@ $as_echo_n "checking whether the $compiler linker ($LD) supports shared librarie
   # included in the symbol list
   include_expsyms=
   # exclude_expsyms can be an extended regexp of symbols to exclude
-  # it will be wrapped by ` (' and `)$', so one must not match beginning or
-  # end of line.  Example: `a|bc|.*d.*' will exclude the symbols `a' and `bc',
-  # as well as any symbol that contains `d'.
+  # it will be wrapped by ' (' and ')$', so one must not match beginning or
+  # end of line.  Example: 'a|bc|.*d.*' will exclude the symbols 'a' and 'bc',
+  # as well as any symbol that contains 'd'.
   exclude_expsyms='_GLOBAL_OFFSET_TABLE_|_GLOBAL__F[ID]_.*'
   # Although _GLOBAL_OFFSET_TABLE_ is a valid symbol C name, most a.out
   # platforms (ab)use it in PIC code, but their linkers get confused if
@@ -11107,7 +13617,7 @@ $as_echo_n "checking whether the $compiler linker ($LD) supports shared librarie
     # FIXME: the MSVC++ port hasn't been tested in a loooong time
     # When not using gcc, we currently assume that we are using
     # Microsoft Visual C++.
-    if test "$GCC" != yes; then
+    if test yes != "$GCC"; then
       with_gnu_ld=no
     fi
     ;;
@@ -11115,12 +13625,9 @@ $as_echo_n "checking whether the $compiler linker ($LD) supports shared librarie
     # we just hope/assume this is gcc and not c89 (= MSVC++)
     with_gnu_ld=yes
     ;;
-  openbsd*)
+  openbsd* | bitrig*)
     with_gnu_ld=no
     ;;
-  linux* | k*bsd*-gnu | gnu*)
-    link_all_deplibs=no
-    ;;
   esac
 
   ld_shlibs=yes
@@ -11128,7 +13635,7 @@ $as_echo_n "checking whether the $compiler linker ($LD) supports shared librarie
   # On some targets, GNU ld is compatible enough with the native linker
   # that we're better off using the native interface for both.
   lt_use_gnu_ld_interface=no
-  if test "$with_gnu_ld" = yes; then
+  if test yes = "$with_gnu_ld"; then
     case $host_os in
       aix*)
 	# The AIX port of GNU ld has always aspired to compatibility
@@ -11150,24 +13657,24 @@ $as_echo_n "checking whether the $compiler linker ($LD) supports shared librarie
     esac
   fi
 
-  if test "$lt_use_gnu_ld_interface" = yes; then
+  if test yes = "$lt_use_gnu_ld_interface"; then
     # If archive_cmds runs LD, not CC, wlarc should be empty
-    wlarc='${wl}'
+    wlarc='$wl'
 
     # Set some defaults for GNU ld with shared library support. These
     # are reset later if shared libraries are not supported. Putting them
     # here allows them to be overridden if necessary.
     runpath_var=LD_RUN_PATH
-    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
-    export_dynamic_flag_spec='${wl}--export-dynamic'
+    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+    export_dynamic_flag_spec='$wl--export-dynamic'
     # ancient GNU ld didn't support --whole-archive et. al.
     if $LD --help 2>&1 | $GREP 'no-whole-archive' > /dev/null; then
-      whole_archive_flag_spec="$wlarc"'--whole-archive$convenience '"$wlarc"'--no-whole-archive'
+      whole_archive_flag_spec=$wlarc'--whole-archive$convenience '$wlarc'--no-whole-archive'
     else
       whole_archive_flag_spec=
     fi
     supports_anon_versioning=no
-    case `$LD -v 2>&1` in
+    case `$LD -v | $SED -e 's/(^)\+)\s\+//' 2>&1` in
       *GNU\ gold*) supports_anon_versioning=yes ;;
       *\ [01].* | *\ 2.[0-9].* | *\ 2.10.*) ;; # catch versions < 2.11
       *\ 2.11.93.0.2\ *) supports_anon_versioning=yes ;; # RH7.3 ...
@@ -11180,7 +13687,7 @@ $as_echo_n "checking whether the $compiler linker ($LD) supports shared librarie
     case $host_os in
     aix[3-9]*)
       # On AIX/PPC, the GNU linker is very broken
-      if test "$host_cpu" != ia64; then
+      if test ia64 != "$host_cpu"; then
 	ld_shlibs=no
 	cat <<_LT_EOF 1>&2
 
@@ -11199,7 +13706,7 @@ _LT_EOF
       case $host_cpu in
       powerpc)
             # see comment about AmigaOS4 .so support
-            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
             archive_expsym_cmds=''
         ;;
       m68k)
@@ -11215,7 +13722,7 @@ _LT_EOF
 	allow_undefined_flag=unsupported
 	# Joseph Beckenbach <jrb3@best.com> says some releases of gcc
 	# support --undefined.  This deserves some investigation.  FIXME
-	archive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_cmds='$CC -nostart $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
       else
 	ld_shlibs=no
       fi
@@ -11225,7 +13732,7 @@ _LT_EOF
       # _LT_TAGVAR(hardcode_libdir_flag_spec, ) is actually meaningless,
       # as there is no search path for DLLs.
       hardcode_libdir_flag_spec='-L$libdir'
-      export_dynamic_flag_spec='${wl}--export-all-symbols'
+      export_dynamic_flag_spec='$wl--export-all-symbols'
       allow_undefined_flag=unsupported
       always_export_symbols=no
       enable_shared_with_static_runtimes=yes
@@ -11233,61 +13740,89 @@ _LT_EOF
       exclude_expsyms='[_]+GLOBAL_OFFSET_TABLE_|[_]+GLOBAL__[FID]_.*|[_]+head_[A-Za-z0-9_]+_dll|[A-Za-z0-9_]+_dll_iname'
 
       if $LD --help 2>&1 | $GREP 'auto-import' > /dev/null; then
-        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
-	# If the export-symbols file already is a .def file (1st line
-	# is EXPORTS), use it as is; otherwise, prepend...
-	archive_expsym_cmds='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
-	  cp $export_symbols $output_objdir/$soname.def;
-	else
-	  echo EXPORTS > $output_objdir/$soname.def;
-	  cat $export_symbols >> $output_objdir/$soname.def;
-	fi~
-	$CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname ${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+        archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
+	# If the export-symbols file already is a .def file, use it as
+	# is; otherwise, prepend EXPORTS...
+	archive_expsym_cmds='if   test DEF = "`$SED -n     -e '\''s/^[	 ]*//'\''     -e '\''/^\(;.*\)*$/d'\''     -e '\''s/^\(EXPORTS\|LIBRARY\)\([	 ].*\)*$/DEF/p'\''     -e q     $export_symbols`" ; then
+          cp $export_symbols $output_objdir/$soname.def;
+        else
+          echo EXPORTS > $output_objdir/$soname.def;
+          cat $export_symbols >> $output_objdir/$soname.def;
+        fi~
+        $CC -shared $output_objdir/$soname.def $libobjs $deplibs $compiler_flags -o $output_objdir/$soname $wl--enable-auto-image-base -Xlinker --out-implib -Xlinker $lib'
       else
 	ld_shlibs=no
       fi
       ;;
 
     haiku*)
-      archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+      archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
       link_all_deplibs=yes
       ;;
 
+    os2*)
+      hardcode_libdir_flag_spec='-L$libdir'
+      hardcode_minus_L=yes
+      allow_undefined_flag=unsupported
+      shrext_cmds=.dll
+      archive_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	emxexp $libobjs | $SED /"_DLL_InitTerm"/d >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      archive_expsym_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	prefix_cmds="$SED"~
+	if test EXPORTS = "`$SED 1q $export_symbols`"; then
+	  prefix_cmds="$prefix_cmds -e 1d";
+	fi~
+	prefix_cmds="$prefix_cmds -e \"s/^\(.*\)$/_\1/g\""~
+	cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
+      enable_shared_with_static_runtimes=yes
+      ;;
+
     interix[3-9]*)
       hardcode_direct=no
       hardcode_shlibpath_var=no
-      hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
-      export_dynamic_flag_spec='${wl}-E'
+      hardcode_libdir_flag_spec='$wl-rpath,$libdir'
+      export_dynamic_flag_spec='$wl-E'
       # Hack: On Interix 3.x, we cannot compile PIC because of a broken gcc.
       # Instead, shared libraries are loaded at an image base (0x10000000 by
       # default) and relocated if they conflict, which is a slow very memory
       # consuming and fragmenting process.  To avoid this, we pick a random,
       # 256 KiB-aligned image base between 0x50000000 and 0x6FFC0000 at link
       # time.  Moving up from 0x10000000 also allows more sbrk(2) space.
-      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
-      archive_expsym_cmds='sed "s,^,_," $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-h,$soname ${wl}--retain-symbols-file,$output_objdir/$soname.expsym ${wl}--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
+      archive_expsym_cmds='sed "s|^|_|" $export_symbols >$output_objdir/$soname.expsym~$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-h,$soname $wl--retain-symbols-file,$output_objdir/$soname.expsym $wl--image-base,`expr ${RANDOM-$$} % 4096 / 2 \* 262144 + 1342177280` -o $lib'
       ;;
 
     gnu* | linux* | tpf* | k*bsd*-gnu | kopensolaris*-gnu)
       tmp_diet=no
-      if test "$host_os" = linux-dietlibc; then
+      if test linux-dietlibc = "$host_os"; then
 	case $cc_basename in
 	  diet\ *) tmp_diet=yes;;	# linux-dietlibc with static linking (!diet-dyn)
 	esac
       fi
       if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \
-	 && test "$tmp_diet" = no
+	 && test no = "$tmp_diet"
       then
 	tmp_addflag=' $pic_flag'
 	tmp_sharedflag='-shared'
 	case $cc_basename,$host_cpu in
         pgcc*)				# Portland Group C compiler
-	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  tmp_addflag=' $pic_flag'
 	  ;;
 	pgf77* | pgf90* | pgf95* | pgfortran*)
 					# Portland Group f77 and f90 compilers
-	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  tmp_addflag=' $pic_flag -Mnomain' ;;
 	ecc*,ia64* | icc*,ia64*)	# Intel C compiler on ia64
 	  tmp_addflag=' -i_dynamic' ;;
@@ -11298,42 +13833,47 @@ _LT_EOF
 	lf95*)				# Lahey Fortran 8.1
 	  whole_archive_flag_spec=
 	  tmp_sharedflag='--shared' ;;
+        nagfor*)                        # NAGFOR 5.3
+          tmp_sharedflag='-Wl,-shared' ;;
 	xl[cC]* | bgxl[cC]* | mpixl[cC]*) # IBM XL C 8.0 on PPC (deal with xlf below)
 	  tmp_sharedflag='-qmkshrobj'
 	  tmp_addflag= ;;
 	nvcc*)	# Cuda Compiler Driver 2.2
-	  whole_archive_flag_spec='${wl}--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  whole_archive_flag_spec='$wl--whole-archive`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  compiler_needs_object=yes
 	  ;;
 	esac
 	case `$CC -V 2>&1 | sed 5q` in
 	*Sun\ C*)			# Sun C 5.9
-	  whole_archive_flag_spec='${wl}--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` ${wl}--no-whole-archive'
+	  whole_archive_flag_spec='$wl--whole-archive`new_convenience=; for conv in $convenience\"\"; do test -z \"$conv\" || new_convenience=\"$new_convenience,$conv\"; done; func_echo_all \"$new_convenience\"` $wl--no-whole-archive'
 	  compiler_needs_object=yes
 	  tmp_sharedflag='-G' ;;
 	*Sun\ F*)			# Sun Fortran 8.3
 	  tmp_sharedflag='-G' ;;
 	esac
-	archive_cmds='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+	archive_cmds='$CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
 
-        if test "x$supports_anon_versioning" = xyes; then
+        if test yes = "$supports_anon_versioning"; then
           archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
-	    cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
-	    echo "local: *; };" >> $output_objdir/$libname.ver~
-	    $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-version-script ${wl}$output_objdir/$libname.ver -o $lib'
+            cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+            echo "local: *; };" >> $output_objdir/$libname.ver~
+            $CC '"$tmp_sharedflag""$tmp_addflag"' $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-version-script $wl$output_objdir/$libname.ver -o $lib'
         fi
 
 	case $cc_basename in
+	tcc*)
+	  export_dynamic_flag_spec='-rdynamic'
+	  ;;
 	xlf* | bgf* | bgxlf* | mpixlf*)
 	  # IBM XL Fortran 10.1 on PPC cannot create shared libs itself
 	  whole_archive_flag_spec='--whole-archive$convenience --no-whole-archive'
-	  hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+	  hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
 	  archive_cmds='$LD -shared $libobjs $deplibs $linker_flags -soname $soname -o $lib'
-	  if test "x$supports_anon_versioning" = xyes; then
+	  if test yes = "$supports_anon_versioning"; then
 	    archive_expsym_cmds='echo "{ global:" > $output_objdir/$libname.ver~
-	      cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
-	      echo "local: *; };" >> $output_objdir/$libname.ver~
-	      $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
+              cat $export_symbols | sed -e "s/\(.*\)/\1;/" >> $output_objdir/$libname.ver~
+              echo "local: *; };" >> $output_objdir/$libname.ver~
+              $LD -shared $libobjs $deplibs $linker_flags -soname $soname -version-script $output_objdir/$libname.ver -o $lib'
 	  fi
 	  ;;
 	esac
@@ -11342,13 +13882,13 @@ _LT_EOF
       fi
       ;;
 
-    netbsd* | netbsdelf*-gnu)
+    netbsd*)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	archive_cmds='$LD -Bshareable $libobjs $deplibs $linker_flags -o $lib'
 	wlarc=
       else
-	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
       fi
       ;;
 
@@ -11366,8 +13906,8 @@ _LT_EOF
 
 _LT_EOF
       elif $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
       else
 	ld_shlibs=no
       fi
@@ -11379,7 +13919,7 @@ _LT_EOF
 	ld_shlibs=no
 	cat <<_LT_EOF 1>&2
 
-*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 can not
+*** Warning: Releases of the GNU linker prior to 2.16.91.0.3 cannot
 *** reliably create shared libraries on SCO systems.  Therefore, libtool
 *** is disabling shared libraries support.  We urge you to upgrade GNU
 *** binutils to release 2.16.91.0.3 or newer.  Another option is to modify
@@ -11394,9 +13934,9 @@ _LT_EOF
 	  # DT_RUNPATH tag from executables and libraries.  But doing so
 	  # requires that you compile everything twice, which is a pain.
 	  if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	    hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
-	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	    hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
+	    archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	    archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
 	  else
 	    ld_shlibs=no
 	  fi
@@ -11413,15 +13953,15 @@ _LT_EOF
 
     *)
       if $LD --help 2>&1 | $GREP ': supported targets:.* elf' > /dev/null; then
-	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
-	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname ${wl}-retain-symbols-file $wl$export_symbols -o $lib'
+	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
+	archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname $wl-retain-symbols-file $wl$export_symbols -o $lib'
       else
 	ld_shlibs=no
       fi
       ;;
     esac
 
-    if test "$ld_shlibs" = no; then
+    if test no = "$ld_shlibs"; then
       runpath_var=
       hardcode_libdir_flag_spec=
       export_dynamic_flag_spec=
@@ -11437,7 +13977,7 @@ _LT_EOF
       # Note: this linker hardcodes the directories in LIBPATH if there
       # are no directories specified by -L.
       hardcode_minus_L=yes
-      if test "$GCC" = yes && test -z "$lt_prog_compiler_static"; then
+      if test yes = "$GCC" && test -z "$lt_prog_compiler_static"; then
 	# Neither direct hardcoding nor static linking is supported with a
 	# broken collect2.
 	hardcode_direct=unsupported
@@ -11445,34 +13985,57 @@ _LT_EOF
       ;;
 
     aix[4-9]*)
-      if test "$host_cpu" = ia64; then
+      if test ia64 = "$host_cpu"; then
 	# On IA64, the linker does run time linking by default, so we don't
 	# have to do anything special.
 	aix_use_runtimelinking=no
 	exp_sym_flag='-Bexport'
-	no_entry_flag=""
+	no_entry_flag=
       else
 	# If we're using GNU nm, then we don't want the "-C" option.
-	# -C means demangle to AIX nm, but means don't demangle with GNU nm
-	# Also, AIX nm treats weak defined symbols like other global
-	# defined symbols, whereas GNU nm marks them as "W".
+	# -C means demangle to GNU nm, but means don't demangle to AIX nm.
+	# Without the "-l" option, or with the "-B" option, AIX nm treats
+	# weak defined symbols like other global defined symbols, whereas
+	# GNU nm marks them as "W".
+	# While the 'weak' keyword is ignored in the Export File, we need
+	# it in the Import File for the 'aix-soname' feature, so we have
+	# to replace the "-B" option with "-P" for AIX nm.
 	if $NM -V 2>&1 | $GREP 'GNU' > /dev/null; then
-	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	  export_symbols_cmds='$NM -Bpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W")) && (substr(\$ 3,1,1) != ".")) { if (\$ 2 == "W") { print \$ 3 " weak" } else { print \$ 3 } } }'\'' | sort -u > $export_symbols'
 	else
-	  export_symbols_cmds='$NM -BCpg $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B")) && (substr(\$ 3,1,1) != ".")) { print \$ 3 } }'\'' | sort -u > $export_symbols'
+	  export_symbols_cmds='`func_echo_all $NM | $SED -e '\''s/B\([^B]*\)$/P\1/'\''` -PCpgl $libobjs $convenience | awk '\''{ if (((\$ 2 == "T") || (\$ 2 == "D") || (\$ 2 == "B") || (\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) && (substr(\$ 1,1,1) != ".")) { if ((\$ 2 == "W") || (\$ 2 == "V") || (\$ 2 == "Z")) { print \$ 1 " weak" } else { print \$ 1 } } }'\'' | sort -u > $export_symbols'
 	fi
 	aix_use_runtimelinking=no
 
 	# Test if we are trying to use run time linking or normal
 	# AIX style linking. If -brtl is somewhere in LDFLAGS, we
-	# need to do runtime linking.
+	# have runtime linking enabled, and use it for executables.
+	# For shared libraries, we enable/disable runtime linking
+	# depending on the kind of the shared library created -
+	# when "with_aix_soname,aix_use_runtimelinking" is:
+	# "aix,no"   lib.a(lib.so.V) shared, rtl:no,  for executables
+	# "aix,yes"  lib.so          shared, rtl:yes, for executables
+	#            lib.a           static archive
+	# "both,no"  lib.so.V(shr.o) shared, rtl:yes
+	#            lib.a(lib.so.V) shared, rtl:no,  for executables
+	# "both,yes" lib.so.V(shr.o) shared, rtl:yes, for executables
+	#            lib.a(lib.so.V) shared, rtl:no
+	# "svr4,*"   lib.so.V(shr.o) shared, rtl:yes, for executables
+	#            lib.a           static archive
 	case $host_os in aix4.[23]|aix4.[23].*|aix[5-9]*)
 	  for ld_flag in $LDFLAGS; do
-	  if (test $ld_flag = "-brtl" || test $ld_flag = "-Wl,-brtl"); then
+	  if (test x-brtl = "x$ld_flag" || test x-Wl,-brtl = "x$ld_flag"); then
 	    aix_use_runtimelinking=yes
 	    break
 	  fi
 	  done
+	  if test svr4,no = "$with_aix_soname,$aix_use_runtimelinking"; then
+	    # With aix-soname=svr4, we create the lib.so.V shared archives only,
+	    # so we don't have lib.a shared libs to link our executables.
+	    # We have to force runtime linking in this case.
+	    aix_use_runtimelinking=yes
+	    LDFLAGS="$LDFLAGS -Wl,-brtl"
+	  fi
 	  ;;
 	esac
 
@@ -11491,13 +14054,21 @@ _LT_EOF
       hardcode_direct_absolute=yes
       hardcode_libdir_separator=':'
       link_all_deplibs=yes
-      file_list_spec='${wl}-f,'
+      file_list_spec='$wl-f,'
+      case $with_aix_soname,$aix_use_runtimelinking in
+      aix,*) ;; # traditional, no import file
+      svr4,* | *,yes) # use import file
+	# The Import File defines what to hardcode.
+	hardcode_direct=no
+	hardcode_direct_absolute=no
+	;;
+      esac
 
-      if test "$GCC" = yes; then
+      if test yes = "$GCC"; then
 	case $host_os in aix4.[012]|aix4.[012].*)
 	# We only want to do this on AIX 4.2 and lower, the check
 	# below for broken collect2 doesn't work under 4.3+
-	  collect2name=`${CC} -print-prog-name=collect2`
+	  collect2name=`$CC -print-prog-name=collect2`
 	  if test -f "$collect2name" &&
 	   strings "$collect2name" | $GREP resolve_lib_name >/dev/null
 	  then
@@ -11516,36 +14087,42 @@ _LT_EOF
 	  ;;
 	esac
 	shared_flag='-shared'
-	if test "$aix_use_runtimelinking" = yes; then
-	  shared_flag="$shared_flag "'${wl}-G'
+	if test yes = "$aix_use_runtimelinking"; then
+	  shared_flag="$shared_flag "'$wl-G'
 	fi
-	link_all_deplibs=no
+	# Need to ensure runtime linking is disabled for the traditional
+	# shared library, or the linker may eventually find shared libraries
+	# /with/ Import File - we do not want to mix them.
+	shared_flag_aix='-shared'
+	shared_flag_svr4='-shared $wl-G'
       else
 	# not using gcc
-	if test "$host_cpu" = ia64; then
+	if test ia64 = "$host_cpu"; then
 	# VisualAge C++, Version 5.5 for AIX 5L for IA-64, Beta 3 Release
 	# chokes on -Wl,-G. The following line is correct:
 	  shared_flag='-G'
 	else
-	  if test "$aix_use_runtimelinking" = yes; then
-	    shared_flag='${wl}-G'
+	  if test yes = "$aix_use_runtimelinking"; then
+	    shared_flag='$wl-G'
 	  else
-	    shared_flag='${wl}-bM:SRE'
+	    shared_flag='$wl-bM:SRE'
 	  fi
+	  shared_flag_aix='$wl-bM:SRE'
+	  shared_flag_svr4='$wl-G'
 	fi
       fi
 
-      export_dynamic_flag_spec='${wl}-bexpall'
+      export_dynamic_flag_spec='$wl-bexpall'
       # It seems that -bexpall does not export symbols beginning with
       # underscore (_), so it is better to generate a list of symbols to export.
       always_export_symbols=yes
-      if test "$aix_use_runtimelinking" = yes; then
+      if test aix,yes = "$with_aix_soname,$aix_use_runtimelinking"; then
 	# Warning - without using the other runtime loading flags (-brtl),
 	# -berok will link without error, but may produce a broken library.
 	allow_undefined_flag='-berok'
         # Determine the default libpath from the value encoded in an
         # empty executable.
-        if test "${lt_cv_aix_libpath+set}" = set; then
+        if test set = "${lt_cv_aix_libpath+set}"; then
   aix_libpath=$lt_cv_aix_libpath
 else
   if ${lt_cv_aix_libpath_+:} false; then :
@@ -11580,7 +14157,7 @@ fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
   if test -z "$lt_cv_aix_libpath_"; then
-    lt_cv_aix_libpath_="/usr/lib:/lib"
+    lt_cv_aix_libpath_=/usr/lib:/lib
   fi
 
 fi
@@ -11588,17 +14165,17 @@ fi
   aix_libpath=$lt_cv_aix_libpath_
 fi
 
-        hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
-        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags `if test "x${allow_undefined_flag}" != "x"; then func_echo_all "${wl}${allow_undefined_flag}"; else :; fi` '"\${wl}$exp_sym_flag:\$export_symbols $shared_flag"
+        hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'"$aix_libpath"
+        archive_expsym_cmds='$CC -o $output_objdir/$soname $libobjs $deplibs $wl'$no_entry_flag' $compiler_flags `if test -n "$allow_undefined_flag"; then func_echo_all "$wl$allow_undefined_flag"; else :; fi` $wl'$exp_sym_flag:\$export_symbols' '$shared_flag
       else
-	if test "$host_cpu" = ia64; then
-	  hardcode_libdir_flag_spec='${wl}-R $libdir:/usr/lib:/lib'
+	if test ia64 = "$host_cpu"; then
+	  hardcode_libdir_flag_spec='$wl-R $libdir:/usr/lib:/lib'
 	  allow_undefined_flag="-z nodefs"
-	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\${wl}$no_entry_flag"' $compiler_flags ${wl}${allow_undefined_flag} '"\${wl}$exp_sym_flag:\$export_symbols"
+	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs '"\$wl$no_entry_flag"' $compiler_flags $wl$allow_undefined_flag '"\$wl$exp_sym_flag:\$export_symbols"
 	else
 	 # Determine the default libpath from the value encoded in an
 	 # empty executable.
-	 if test "${lt_cv_aix_libpath+set}" = set; then
+	 if test set = "${lt_cv_aix_libpath+set}"; then
   aix_libpath=$lt_cv_aix_libpath
 else
   if ${lt_cv_aix_libpath_+:} false; then :
@@ -11633,7 +14210,7 @@ fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
   if test -z "$lt_cv_aix_libpath_"; then
-    lt_cv_aix_libpath_="/usr/lib:/lib"
+    lt_cv_aix_libpath_=/usr/lib:/lib
   fi
 
 fi
@@ -11641,21 +14218,33 @@ fi
   aix_libpath=$lt_cv_aix_libpath_
 fi
 
-	 hardcode_libdir_flag_spec='${wl}-blibpath:$libdir:'"$aix_libpath"
+	 hardcode_libdir_flag_spec='$wl-blibpath:$libdir:'"$aix_libpath"
 	  # Warning - without using the other run time loading flags,
 	  # -berok will link without error, but may produce a broken library.
-	  no_undefined_flag=' ${wl}-bernotok'
-	  allow_undefined_flag=' ${wl}-berok'
-	  if test "$with_gnu_ld" = yes; then
+	  no_undefined_flag=' $wl-bernotok'
+	  allow_undefined_flag=' $wl-berok'
+	  if test yes = "$with_gnu_ld"; then
 	    # We only use this code for GNU lds that support --whole-archive.
-	    whole_archive_flag_spec='${wl}--whole-archive$convenience ${wl}--no-whole-archive'
+	    whole_archive_flag_spec='$wl--whole-archive$convenience $wl--no-whole-archive'
 	  else
 	    # Exported symbols can be pulled into shared objects from archives
 	    whole_archive_flag_spec='$convenience'
 	  fi
 	  archive_cmds_need_lc=yes
-	  # This is similar to how AIX traditionally builds its shared libraries.
-	  archive_expsym_cmds="\$CC $shared_flag"' -o $output_objdir/$soname $libobjs $deplibs ${wl}-bnoentry $compiler_flags ${wl}-bE:$export_symbols${allow_undefined_flag}~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$soname'
+	  archive_expsym_cmds='$RM -r $output_objdir/$realname.d~$MKDIR $output_objdir/$realname.d'
+	  # -brtl affects multiple linker settings, -berok does not and is overridden later
+	  compiler_flags_filtered='`func_echo_all "$compiler_flags " | $SED -e "s%-brtl\\([, ]\\)%-berok\\1%g"`'
+	  if test svr4 != "$with_aix_soname"; then
+	    # This is similar to how AIX traditionally builds its shared libraries.
+	    archive_expsym_cmds="$archive_expsym_cmds"'~$CC '$shared_flag_aix' -o $output_objdir/$realname.d/$soname $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$AR $AR_FLAGS $output_objdir/$libname$release.a $output_objdir/$realname.d/$soname'
+	  fi
+	  if test aix != "$with_aix_soname"; then
+	    archive_expsym_cmds="$archive_expsym_cmds"'~$CC '$shared_flag_svr4' -o $output_objdir/$realname.d/$shared_archive_member_spec.o $libobjs $deplibs $wl-bnoentry '$compiler_flags_filtered'$wl-bE:$export_symbols$allow_undefined_flag~$STRIP -e $output_objdir/$realname.d/$shared_archive_member_spec.o~( func_echo_all "#! $soname($shared_archive_member_spec.o)"; if test shr_64 = "$shared_archive_member_spec"; then func_echo_all "# 64"; else func_echo_all "# 32"; fi; cat $export_symbols ) > $output_objdir/$realname.d/$shared_archive_member_spec.imp~$AR $AR_FLAGS $output_objdir/$soname $output_objdir/$realname.d/$shared_archive_member_spec.o $output_objdir/$realname.d/$shared_archive_member_spec.imp'
+	  else
+	    # used by -dlpreopen to get the symbols
+	    archive_expsym_cmds="$archive_expsym_cmds"'~$MV  $output_objdir/$realname.d/$soname $output_objdir'
+	  fi
+	  archive_expsym_cmds="$archive_expsym_cmds"'~$RM -r $output_objdir/$realname.d'
 	fi
       fi
       ;;
@@ -11664,7 +14253,7 @@ fi
       case $host_cpu in
       powerpc)
             # see comment about AmigaOS4 .so support
-            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags ${wl}-soname $wl$soname -o $lib'
+            archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags $wl-soname $wl$soname -o $lib'
             archive_expsym_cmds=''
         ;;
       m68k)
@@ -11694,16 +14283,17 @@ fi
 	# Tell ltmain to make .lib files, not .a files.
 	libext=lib
 	# Tell ltmain to make .dll files, not .so files.
-	shrext_cmds=".dll"
+	shrext_cmds=.dll
 	# FIXME: Setting linknames here is a bad hack.
-	archive_cmds='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-dll~linknames='
-	archive_expsym_cmds='if test "x`$SED 1q $export_symbols`" = xEXPORTS; then
-	    sed -n -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' -e '1\\\!p' < $export_symbols > $output_objdir/$soname.exp;
-	  else
-	    sed -e 's/\\\\\\\(.*\\\\\\\)/-link\\\ -EXPORT:\\\\\\\1/' < $export_symbols > $output_objdir/$soname.exp;
-	  fi~
-	  $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs "@$tool_output_objdir$soname.exp" -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~
-	  linknames='
+	archive_cmds='$CC -o $output_objdir/$soname $libobjs $compiler_flags $deplibs -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~linknames='
+	archive_expsym_cmds='if   test DEF = "`$SED -n     -e '\''s/^[	 ]*//'\''     -e '\''/^\(;.*\)*$/d'\''     -e '\''s/^\(EXPORTS\|LIBRARY\)\([	 ].*\)*$/DEF/p'\''     -e q     $export_symbols`" ; then
+            cp "$export_symbols" "$output_objdir/$soname.def";
+            echo "$tool_output_objdir$soname.def" > "$output_objdir/$soname.exp";
+          else
+            $SED -e '\''s/^/-link -EXPORT:/'\'' < $export_symbols > $output_objdir/$soname.exp;
+          fi~
+          $CC -o $tool_output_objdir$soname $libobjs $compiler_flags $deplibs "@$tool_output_objdir$soname.exp" -Wl,-DLL,-IMPLIB:"$tool_output_objdir$libname.dll.lib"~
+          linknames='
 	# The linker will not automatically build a static lib if we build a DLL.
 	# _LT_TAGVAR(old_archive_from_new_cmds, )='true'
 	enable_shared_with_static_runtimes=yes
@@ -11712,18 +14302,18 @@ fi
 	# Don't use ranlib
 	old_postinstall_cmds='chmod 644 $oldlib'
 	postlink_cmds='lt_outputfile="@OUTPUT@"~
-	  lt_tool_outputfile="@TOOL_OUTPUT@"~
-	  case $lt_outputfile in
-	    *.exe|*.EXE) ;;
-	    *)
-	      lt_outputfile="$lt_outputfile.exe"
-	      lt_tool_outputfile="$lt_tool_outputfile.exe"
-	      ;;
-	  esac~
-	  if test "$MANIFEST_TOOL" != ":" && test -f "$lt_outputfile.manifest"; then
-	    $MANIFEST_TOOL -manifest "$lt_tool_outputfile.manifest" -outputresource:"$lt_tool_outputfile" || exit 1;
-	    $RM "$lt_outputfile.manifest";
-	  fi'
+          lt_tool_outputfile="@TOOL_OUTPUT@"~
+          case $lt_outputfile in
+            *.exe|*.EXE) ;;
+            *)
+              lt_outputfile=$lt_outputfile.exe
+              lt_tool_outputfile=$lt_tool_outputfile.exe
+              ;;
+          esac~
+          if test : != "$MANIFEST_TOOL" && test -f "$lt_outputfile.manifest"; then
+            $MANIFEST_TOOL -manifest "$lt_tool_outputfile.manifest" -outputresource:"$lt_tool_outputfile" || exit 1;
+            $RM "$lt_outputfile.manifest";
+          fi'
 	;;
       *)
 	# Assume MSVC wrapper
@@ -11732,7 +14322,7 @@ fi
 	# Tell ltmain to make .lib files, not .a files.
 	libext=lib
 	# Tell ltmain to make .dll files, not .so files.
-	shrext_cmds=".dll"
+	shrext_cmds=.dll
 	# FIXME: Setting linknames here is a bad hack.
 	archive_cmds='$CC -o $lib $libobjs $compiler_flags `func_echo_all "$deplibs" | $SED '\''s/ -lc$//'\''` -link -dll~linknames='
 	# The linker will automatically build a .lib file if we build a DLL.
@@ -11751,24 +14341,24 @@ fi
   hardcode_direct=no
   hardcode_automatic=yes
   hardcode_shlibpath_var=unsupported
-  if test "$lt_cv_ld_force_load" = "yes"; then
-    whole_archive_flag_spec='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience ${wl}-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
+  if test yes = "$lt_cv_ld_force_load"; then
+    whole_archive_flag_spec='`for conv in $convenience\"\"; do test  -n \"$conv\" && new_convenience=\"$new_convenience $wl-force_load,$conv\"; done; func_echo_all \"$new_convenience\"`'
 
   else
     whole_archive_flag_spec=''
   fi
   link_all_deplibs=yes
-  allow_undefined_flag="$_lt_dar_allow_undefined"
+  allow_undefined_flag=$_lt_dar_allow_undefined
   case $cc_basename in
-     ifort*) _lt_dar_can_shared=yes ;;
+     ifort*|nagfor*) _lt_dar_can_shared=yes ;;
      *) _lt_dar_can_shared=$GCC ;;
   esac
-  if test "$_lt_dar_can_shared" = "yes"; then
+  if test yes = "$_lt_dar_can_shared"; then
     output_verbose_link_cmd=func_echo_all
-    archive_cmds="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod${_lt_dsymutil}"
-    module_cmds="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dsymutil}"
-    archive_expsym_cmds="sed 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring ${_lt_dar_single_mod}${_lt_dar_export_syms}${_lt_dsymutil}"
-    module_expsym_cmds="sed -e 's,^,_,' < \$export_symbols > \$output_objdir/\${libname}-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags${_lt_dar_export_syms}${_lt_dsymutil}"
+    archive_cmds="\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod$_lt_dsymutil"
+    module_cmds="\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags$_lt_dsymutil"
+    archive_expsym_cmds="sed 's|^|_|' < \$export_symbols > \$output_objdir/\$libname-symbols.expsym~\$CC -dynamiclib \$allow_undefined_flag -o \$lib \$libobjs \$deplibs \$compiler_flags -install_name \$rpath/\$soname \$verstring $_lt_dar_single_mod$_lt_dar_export_syms$_lt_dsymutil"
+    module_expsym_cmds="sed -e 's|^|_|' < \$export_symbols > \$output_objdir/\$libname-symbols.expsym~\$CC \$allow_undefined_flag -o \$lib -bundle \$libobjs \$deplibs \$compiler_flags$_lt_dar_export_syms$_lt_dsymutil"
 
   else
   ld_shlibs=no
@@ -11810,33 +14400,33 @@ fi
       ;;
 
     hpux9*)
-      if test "$GCC" = yes; then
-	archive_cmds='$RM $output_objdir/$soname~$CC -shared $pic_flag ${wl}+b ${wl}$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+      if test yes = "$GCC"; then
+	archive_cmds='$RM $output_objdir/$soname~$CC -shared $pic_flag $wl+b $wl$install_libdir -o $output_objdir/$soname $libobjs $deplibs $compiler_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
       else
-	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test $output_objdir/$soname = $lib || mv $output_objdir/$soname $lib'
+	archive_cmds='$RM $output_objdir/$soname~$LD -b +b $install_libdir -o $output_objdir/$soname $libobjs $deplibs $linker_flags~test "x$output_objdir/$soname" = "x$lib" || mv $output_objdir/$soname $lib'
       fi
-      hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+      hardcode_libdir_flag_spec='$wl+b $wl$libdir'
       hardcode_libdir_separator=:
       hardcode_direct=yes
 
       # hardcode_minus_L: Not really in the search PATH,
       # but as the default location of the library.
       hardcode_minus_L=yes
-      export_dynamic_flag_spec='${wl}-E'
+      export_dynamic_flag_spec='$wl-E'
       ;;
 
     hpux10*)
-      if test "$GCC" = yes && test "$with_gnu_ld" = no; then
-	archive_cmds='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes,no = "$GCC,$with_gnu_ld"; then
+	archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
       else
 	archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
       fi
-      if test "$with_gnu_ld" = no; then
-	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+      if test no = "$with_gnu_ld"; then
+	hardcode_libdir_flag_spec='$wl+b $wl$libdir'
 	hardcode_libdir_separator=:
 	hardcode_direct=yes
 	hardcode_direct_absolute=yes
-	export_dynamic_flag_spec='${wl}-E'
+	export_dynamic_flag_spec='$wl-E'
 	# hardcode_minus_L: Not really in the search PATH,
 	# but as the default location of the library.
 	hardcode_minus_L=yes
@@ -11844,25 +14434,25 @@ fi
       ;;
 
     hpux11*)
-      if test "$GCC" = yes && test "$with_gnu_ld" = no; then
+      if test yes,no = "$GCC,$with_gnu_ld"; then
 	case $host_cpu in
 	hppa*64*)
-	  archive_cmds='$CC -shared ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_cmds='$CC -shared $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	ia64*)
-	  archive_cmds='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	*)
-	  archive_cmds='$CC -shared $pic_flag ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_cmds='$CC -shared $pic_flag $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	esac
       else
 	case $host_cpu in
 	hppa*64*)
-	  archive_cmds='$CC -b ${wl}+h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_cmds='$CC -b $wl+h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	ia64*)
-	  archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
+	  archive_cmds='$CC -b $wl+h $wl$soname $wl+nodefaultrpath -o $lib $libobjs $deplibs $compiler_flags'
 	  ;;
 	*)
 
@@ -11874,7 +14464,7 @@ if ${lt_cv_prog_compiler__b+:} false; then :
   $as_echo_n "(cached) " >&6
 else
   lt_cv_prog_compiler__b=no
-   save_LDFLAGS="$LDFLAGS"
+   save_LDFLAGS=$LDFLAGS
    LDFLAGS="$LDFLAGS -b"
    echo "$lt_simple_link_test_code" > conftest.$ac_ext
    if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
@@ -11893,14 +14483,14 @@ else
      fi
    fi
    $RM -r conftest*
-   LDFLAGS="$save_LDFLAGS"
+   LDFLAGS=$save_LDFLAGS
 
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_prog_compiler__b" >&5
 $as_echo "$lt_cv_prog_compiler__b" >&6; }
 
-if test x"$lt_cv_prog_compiler__b" = xyes; then
-    archive_cmds='$CC -b ${wl}+h ${wl}$soname ${wl}+b ${wl}$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
+if test yes = "$lt_cv_prog_compiler__b"; then
+    archive_cmds='$CC -b $wl+h $wl$soname $wl+b $wl$install_libdir -o $lib $libobjs $deplibs $compiler_flags'
 else
     archive_cmds='$LD -b +h $soname +b $install_libdir -o $lib $libobjs $deplibs $linker_flags'
 fi
@@ -11908,8 +14498,8 @@ fi
 	  ;;
 	esac
       fi
-      if test "$with_gnu_ld" = no; then
-	hardcode_libdir_flag_spec='${wl}+b ${wl}$libdir'
+      if test no = "$with_gnu_ld"; then
+	hardcode_libdir_flag_spec='$wl+b $wl$libdir'
 	hardcode_libdir_separator=:
 
 	case $host_cpu in
@@ -11920,7 +14510,7 @@ fi
 	*)
 	  hardcode_direct=yes
 	  hardcode_direct_absolute=yes
-	  export_dynamic_flag_spec='${wl}-E'
+	  export_dynamic_flag_spec='$wl-E'
 
 	  # hardcode_minus_L: Not really in the search PATH,
 	  # but as the default location of the library.
@@ -11931,8 +14521,8 @@ fi
       ;;
 
     irix5* | irix6* | nonstopux*)
-      if test "$GCC" = yes; then
-	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      if test yes = "$GCC"; then
+	archive_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
 	# Try to use the -exported_symbol ld option, if it does not
 	# work, assume that -exports_file does not work either and
 	# implicitly export all symbols.
@@ -11942,8 +14532,8 @@ $as_echo_n "checking whether the $host_os linker accepts -exported_symbol... " >
 if ${lt_cv_irix_exported_symbol+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  save_LDFLAGS="$LDFLAGS"
-	   LDFLAGS="$LDFLAGS -shared ${wl}-exported_symbol ${wl}foo ${wl}-update_registry ${wl}/dev/null"
+  save_LDFLAGS=$LDFLAGS
+	   LDFLAGS="$LDFLAGS -shared $wl-exported_symbol ${wl}foo $wl-update_registry $wl/dev/null"
 	   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 int foo (void) { return 0; }
@@ -11955,25 +14545,35 @@ else
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
-           LDFLAGS="$save_LDFLAGS"
+           LDFLAGS=$save_LDFLAGS
 fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_irix_exported_symbol" >&5
 $as_echo "$lt_cv_irix_exported_symbol" >&6; }
-	if test "$lt_cv_irix_exported_symbol" = yes; then
-          archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations ${wl}-exports_file ${wl}$export_symbols -o $lib'
+	if test yes = "$lt_cv_irix_exported_symbol"; then
+          archive_expsym_cmds='$CC -shared $pic_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations $wl-exports_file $wl$export_symbols -o $lib'
 	fi
       else
-	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
-	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -exports_file $export_symbols -o $lib'
+	archive_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
+	archive_expsym_cmds='$CC -shared $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -exports_file $export_symbols -o $lib'
       fi
       archive_cmds_need_lc='no'
-      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
       hardcode_libdir_separator=:
       inherit_rpath=yes
       link_all_deplibs=yes
       ;;
 
-    netbsd* | netbsdelf*-gnu)
+    linux*)
+      case $cc_basename in
+      tcc*)
+	# Fabrice Bellard et al's Tiny C Compiler
+	ld_shlibs=yes
+	archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	;;
+      esac
+      ;;
+
+    netbsd*)
       if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
 	archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'  # a.out
       else
@@ -11987,7 +14587,7 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
     newsos6)
       archive_cmds='$LD -G -h $soname -o $lib $libobjs $deplibs $linker_flags'
       hardcode_direct=yes
-      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
       hardcode_libdir_separator=:
       hardcode_shlibpath_var=no
       ;;
@@ -11995,27 +14595,19 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
     *nto* | *qnx*)
       ;;
 
-    openbsd*)
+    openbsd* | bitrig*)
       if test -f /usr/libexec/ld.so; then
 	hardcode_direct=yes
 	hardcode_shlibpath_var=no
 	hardcode_direct_absolute=yes
-	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
+	if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
 	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
-	  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags ${wl}-retain-symbols-file,$export_symbols'
-	  hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
-	  export_dynamic_flag_spec='${wl}-E'
+	  archive_expsym_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags $wl-retain-symbols-file,$export_symbols'
+	  hardcode_libdir_flag_spec='$wl-rpath,$libdir'
+	  export_dynamic_flag_spec='$wl-E'
 	else
-	  case $host_os in
-	   openbsd[01].* | openbsd2.[0-7] | openbsd2.[0-7].*)
-	     archive_cmds='$LD -Bshareable -o $lib $libobjs $deplibs $linker_flags'
-	     hardcode_libdir_flag_spec='-R$libdir'
-	     ;;
-	   *)
-	     archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
-	     hardcode_libdir_flag_spec='${wl}-rpath,$libdir'
-	     ;;
-	  esac
+	  archive_cmds='$CC -shared $pic_flag -o $lib $libobjs $deplibs $compiler_flags'
+	  hardcode_libdir_flag_spec='$wl-rpath,$libdir'
 	fi
       else
 	ld_shlibs=no
@@ -12026,33 +14618,53 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
       hardcode_libdir_flag_spec='-L$libdir'
       hardcode_minus_L=yes
       allow_undefined_flag=unsupported
-      archive_cmds='$ECHO "LIBRARY $libname INITINSTANCE" > $output_objdir/$libname.def~$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~echo DATA >> $output_objdir/$libname.def~echo " SINGLE NONSHARED" >> $output_objdir/$libname.def~echo EXPORTS >> $output_objdir/$libname.def~emxexp $libobjs >> $output_objdir/$libname.def~$CC -Zdll -Zcrtdll -o $lib $libobjs $deplibs $compiler_flags $output_objdir/$libname.def'
-      old_archive_from_new_cmds='emximp -o $output_objdir/$libname.a $output_objdir/$libname.def'
+      shrext_cmds=.dll
+      archive_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	emxexp $libobjs | $SED /"_DLL_InitTerm"/d >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      archive_expsym_cmds='$ECHO "LIBRARY ${soname%$shared_ext} INITINSTANCE TERMINSTANCE" > $output_objdir/$libname.def~
+	$ECHO "DESCRIPTION \"$libname\"" >> $output_objdir/$libname.def~
+	$ECHO "DATA MULTIPLE NONSHARED" >> $output_objdir/$libname.def~
+	$ECHO EXPORTS >> $output_objdir/$libname.def~
+	prefix_cmds="$SED"~
+	if test EXPORTS = "`$SED 1q $export_symbols`"; then
+	  prefix_cmds="$prefix_cmds -e 1d";
+	fi~
+	prefix_cmds="$prefix_cmds -e \"s/^\(.*\)$/_\1/g\""~
+	cat $export_symbols | $prefix_cmds >> $output_objdir/$libname.def~
+	$CC -Zdll -Zcrtdll -o $output_objdir/$soname $libobjs $deplibs $compiler_flags $output_objdir/$libname.def~
+	emximp -o $lib $output_objdir/$libname.def'
+      old_archive_From_new_cmds='emximp -o $output_objdir/${libname}_dll.a $output_objdir/$libname.def'
+      enable_shared_with_static_runtimes=yes
       ;;
 
     osf3*)
-      if test "$GCC" = yes; then
-	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
-	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
+      if test yes = "$GCC"; then
+	allow_undefined_flag=' $wl-expect_unresolved $wl\*'
+	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
       else
 	allow_undefined_flag=' -expect_unresolved \*'
-	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
       fi
       archive_cmds_need_lc='no'
-      hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
       hardcode_libdir_separator=:
       ;;
 
     osf4* | osf5*)	# as osf3* with the addition of -msym flag
-      if test "$GCC" = yes; then
-	allow_undefined_flag=' ${wl}-expect_unresolved ${wl}\*'
-	archive_cmds='$CC -shared${allow_undefined_flag} $pic_flag $libobjs $deplibs $compiler_flags ${wl}-msym ${wl}-soname ${wl}$soname `test -n "$verstring" && func_echo_all "${wl}-set_version ${wl}$verstring"` ${wl}-update_registry ${wl}${output_objdir}/so_locations -o $lib'
-	hardcode_libdir_flag_spec='${wl}-rpath ${wl}$libdir'
+      if test yes = "$GCC"; then
+	allow_undefined_flag=' $wl-expect_unresolved $wl\*'
+	archive_cmds='$CC -shared$allow_undefined_flag $pic_flag $libobjs $deplibs $compiler_flags $wl-msym $wl-soname $wl$soname `test -n "$verstring" && func_echo_all "$wl-set_version $wl$verstring"` $wl-update_registry $wl$output_objdir/so_locations -o $lib'
+	hardcode_libdir_flag_spec='$wl-rpath $wl$libdir'
       else
 	allow_undefined_flag=' -expect_unresolved \*'
-	archive_cmds='$CC -shared${allow_undefined_flag} $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib'
+	archive_cmds='$CC -shared$allow_undefined_flag $libobjs $deplibs $compiler_flags -msym -soname $soname `test -n "$verstring" && func_echo_all "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib'
 	archive_expsym_cmds='for i in `cat $export_symbols`; do printf "%s %s\\n" -exported_symbol "\$i" >> $lib.exp; done; printf "%s\\n" "-hidden">> $lib.exp~
-	$CC -shared${allow_undefined_flag} ${wl}-input ${wl}$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "-set_version $verstring"` -update_registry ${output_objdir}/so_locations -o $lib~$RM $lib.exp'
+          $CC -shared$allow_undefined_flag $wl-input $wl$lib.exp $compiler_flags $libobjs $deplibs -soname $soname `test -n "$verstring" && $ECHO "-set_version $verstring"` -update_registry $output_objdir/so_locations -o $lib~$RM $lib.exp'
 
 	# Both c and cxx compiler support -rpath directly
 	hardcode_libdir_flag_spec='-rpath $libdir'
@@ -12063,24 +14675,24 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
 
     solaris*)
       no_undefined_flag=' -z defs'
-      if test "$GCC" = yes; then
-	wlarc='${wl}'
-	archive_cmds='$CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes = "$GCC"; then
+	wlarc='$wl'
+	archive_cmds='$CC -shared $pic_flag $wl-z ${wl}text $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags'
 	archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-	  $CC -shared $pic_flag ${wl}-z ${wl}text ${wl}-M ${wl}$lib.exp ${wl}-h ${wl}$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+          $CC -shared $pic_flag $wl-z ${wl}text $wl-M $wl$lib.exp $wl-h $wl$soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
       else
 	case `$CC -V 2>&1` in
 	*"Compilers 5.0"*)
 	  wlarc=''
-	  archive_cmds='$LD -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $linker_flags'
+	  archive_cmds='$LD -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $linker_flags'
 	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-	  $LD -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
+            $LD -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $linker_flags~$RM $lib.exp'
 	  ;;
 	*)
-	  wlarc='${wl}'
-	  archive_cmds='$CC -G${allow_undefined_flag} -h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	  wlarc='$wl'
+	  archive_cmds='$CC -G$allow_undefined_flag -h $soname -o $lib $libobjs $deplibs $compiler_flags'
 	  archive_expsym_cmds='echo "{ global:" > $lib.exp~cat $export_symbols | $SED -e "s/\(.*\)/\1;/" >> $lib.exp~echo "local: *; };" >> $lib.exp~
-	  $CC -G${allow_undefined_flag} -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
+            $CC -G$allow_undefined_flag -M $lib.exp -h $soname -o $lib $libobjs $deplibs $compiler_flags~$RM $lib.exp'
 	  ;;
 	esac
       fi
@@ -12090,11 +14702,11 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
       solaris2.[0-5] | solaris2.[0-5].*) ;;
       *)
 	# The compiler driver will combine and reorder linker options,
-	# but understands `-z linker_flag'.  GCC discards it without `$wl',
+	# but understands '-z linker_flag'.  GCC discards it without '$wl',
 	# but is careful enough not to reorder.
 	# Supported since Solaris 2.6 (maybe 2.5.1?)
-	if test "$GCC" = yes; then
-	  whole_archive_flag_spec='${wl}-z ${wl}allextract$convenience ${wl}-z ${wl}defaultextract'
+	if test yes = "$GCC"; then
+	  whole_archive_flag_spec='$wl-z ${wl}allextract$convenience $wl-z ${wl}defaultextract'
 	else
 	  whole_archive_flag_spec='-z allextract$convenience -z defaultextract'
 	fi
@@ -12104,10 +14716,10 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
       ;;
 
     sunos4*)
-      if test "x$host_vendor" = xsequent; then
+      if test sequent = "$host_vendor"; then
 	# Use $CC to link under sequent, because it throws in some extra .o
 	# files that make .init and .fini sections work.
-	archive_cmds='$CC -G ${wl}-h $soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_cmds='$CC -G $wl-h $soname -o $lib $libobjs $deplibs $compiler_flags'
       else
 	archive_cmds='$LD -assert pure-text -Bstatic -o $lib $libobjs $deplibs $linker_flags'
       fi
@@ -12156,43 +14768,43 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
       ;;
 
     sysv4*uw2* | sysv5OpenUNIX* | sysv5UnixWare7.[01].[10]* | unixware7* | sco3.2v5.0.[024]*)
-      no_undefined_flag='${wl}-z,text'
+      no_undefined_flag='$wl-z,text'
       archive_cmds_need_lc=no
       hardcode_shlibpath_var=no
       runpath_var='LD_RUN_PATH'
 
-      if test "$GCC" = yes; then
-	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes = "$GCC"; then
+	archive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       else
-	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       fi
       ;;
 
     sysv5* | sco3.2v5* | sco5v6*)
-      # Note: We can NOT use -z defs as we might desire, because we do not
+      # Note: We CANNOT use -z defs as we might desire, because we do not
       # link with -lc, and that would cause any symbols used from libc to
       # always be unresolved, which means just about no library would
       # ever link correctly.  If we're not using GNU ld we use -z text
       # though, which does catch some bad symbols but isn't as heavy-handed
       # as -z defs.
-      no_undefined_flag='${wl}-z,text'
-      allow_undefined_flag='${wl}-z,nodefs'
+      no_undefined_flag='$wl-z,text'
+      allow_undefined_flag='$wl-z,nodefs'
       archive_cmds_need_lc=no
       hardcode_shlibpath_var=no
-      hardcode_libdir_flag_spec='${wl}-R,$libdir'
+      hardcode_libdir_flag_spec='$wl-R,$libdir'
       hardcode_libdir_separator=':'
       link_all_deplibs=yes
-      export_dynamic_flag_spec='${wl}-Bexport'
+      export_dynamic_flag_spec='$wl-Bexport'
       runpath_var='LD_RUN_PATH'
 
-      if test "$GCC" = yes; then
-	archive_cmds='$CC -shared ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	archive_expsym_cmds='$CC -shared ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+      if test yes = "$GCC"; then
+	archive_cmds='$CC -shared $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -shared $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       else
-	archive_cmds='$CC -G ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
-	archive_expsym_cmds='$CC -G ${wl}-Bexport:$export_symbols ${wl}-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_cmds='$CC -G $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
+	archive_expsym_cmds='$CC -G $wl-Bexport:$export_symbols $wl-h,$soname -o $lib $libobjs $deplibs $compiler_flags'
       fi
       ;;
 
@@ -12207,10 +14819,10 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
       ;;
     esac
 
-    if test x$host_vendor = xsni; then
+    if test sni = "$host_vendor"; then
       case $host in
       sysv4 | sysv4.2uw2* | sysv4.3* | sysv5*)
-	export_dynamic_flag_spec='${wl}-Blargedynsym'
+	export_dynamic_flag_spec='$wl-Blargedynsym'
 	;;
       esac
     fi
@@ -12218,7 +14830,7 @@ $as_echo "$lt_cv_irix_exported_symbol" >&6; }
 
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ld_shlibs" >&5
 $as_echo "$ld_shlibs" >&6; }
-test "$ld_shlibs" = no && can_build_shared=no
+test no = "$ld_shlibs" && can_build_shared=no
 
 with_gnu_ld=$with_gnu_ld
 
@@ -12244,7 +14856,7 @@ x|xyes)
   # Assume -lc should be added
   archive_cmds_need_lc=yes
 
-  if test "$enable_shared" = yes && test "$GCC" = yes; then
+  if test yes,yes = "$GCC,$enable_shared"; then
     case $archive_cmds in
     *'~'*)
       # FIXME: we may have to deal with multi-command sequences.
@@ -12459,14 +15071,14 @@ esac
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking dynamic linker characteristics" >&5
 $as_echo_n "checking dynamic linker characteristics... " >&6; }
 
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   case $host_os in
-    darwin*) lt_awk_arg="/^libraries:/,/LR/" ;;
-    *) lt_awk_arg="/^libraries:/" ;;
+    darwin*) lt_awk_arg='/^libraries:/,/LR/' ;;
+    *) lt_awk_arg='/^libraries:/' ;;
   esac
   case $host_os in
-    mingw* | cegcc*) lt_sed_strip_eq="s,=\([A-Za-z]:\),\1,g" ;;
-    *) lt_sed_strip_eq="s,=/,/,g" ;;
+    mingw* | cegcc*) lt_sed_strip_eq='s|=\([A-Za-z]:\)|\1|g' ;;
+    *) lt_sed_strip_eq='s|=/|/|g' ;;
   esac
   lt_search_path_spec=`$CC -print-search-dirs | awk $lt_awk_arg | $SED -e "s/^libraries://" -e $lt_sed_strip_eq`
   case $lt_search_path_spec in
@@ -12482,28 +15094,35 @@ if test "$GCC" = yes; then
     ;;
   esac
   # Ok, now we have the path, separated by spaces, we can step through it
-  # and add multilib dir if necessary.
+  # and add multilib dir if necessary...
   lt_tmp_lt_search_path_spec=
-  lt_multi_os_dir=`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  lt_multi_os_dir=/`$CC $CPPFLAGS $CFLAGS $LDFLAGS -print-multi-os-directory 2>/dev/null`
+  # ...but if some path component already ends with the multilib dir we assume
+  # that all is fine and trust -print-search-dirs as is (GCC 4.2? or newer).
+  case "$lt_multi_os_dir; $lt_search_path_spec " in
+  "/; "* | "/.; "* | "/./; "* | *"$lt_multi_os_dir "* | *"$lt_multi_os_dir/ "*)
+    lt_multi_os_dir=
+    ;;
+  esac
   for lt_sys_path in $lt_search_path_spec; do
-    if test -d "$lt_sys_path/$lt_multi_os_dir"; then
-      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path/$lt_multi_os_dir"
-    else
+    if test -d "$lt_sys_path$lt_multi_os_dir"; then
+      lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path$lt_multi_os_dir"
+    elif test -n "$lt_multi_os_dir"; then
       test -d "$lt_sys_path" && \
 	lt_tmp_lt_search_path_spec="$lt_tmp_lt_search_path_spec $lt_sys_path"
     fi
   done
   lt_search_path_spec=`$ECHO "$lt_tmp_lt_search_path_spec" | awk '
-BEGIN {RS=" "; FS="/|\n";} {
-  lt_foo="";
-  lt_count=0;
+BEGIN {RS = " "; FS = "/|\n";} {
+  lt_foo = "";
+  lt_count = 0;
   for (lt_i = NF; lt_i > 0; lt_i--) {
     if ($lt_i != "" && $lt_i != ".") {
       if ($lt_i == "..") {
         lt_count++;
       } else {
         if (lt_count == 0) {
-          lt_foo="/" $lt_i lt_foo;
+          lt_foo = "/" $lt_i lt_foo;
         } else {
           lt_count--;
         }
@@ -12517,7 +15136,7 @@ BEGIN {RS=" "; FS="/|\n";} {
   # for these hosts.
   case $host_os in
     mingw* | cegcc*) lt_search_path_spec=`$ECHO "$lt_search_path_spec" |\
-      $SED 's,/\([A-Za-z]:\),\1,g'` ;;
+      $SED 's|/\([A-Za-z]:\)|\1|g'` ;;
   esac
   sys_lib_search_path_spec=`$ECHO "$lt_search_path_spec" | $lt_NL2SP`
 else
@@ -12526,7 +15145,7 @@ fi
 library_names_spec=
 libname_spec='lib$name'
 soname_spec=
-shrext_cmds=".so"
+shrext_cmds=.so
 postinstall_cmds=
 postuninstall_cmds=
 finish_cmds=
@@ -12543,14 +15162,16 @@ hardcode_into_libs=no
 # flags to be left without arguments
 need_version=unknown
 
+
+
 case $host_os in
 aix3*)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix $libname.a'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname.a'
   shlibpath_var=LIBPATH
 
   # AIX 3 has no versioning support, so we append a major version to the name.
-  soname_spec='${libname}${release}${shared_ext}$major'
+  soname_spec='$libname$release$shared_ext$major'
   ;;
 
 aix[4-9]*)
@@ -12558,41 +15179,91 @@ aix[4-9]*)
   need_lib_prefix=no
   need_version=no
   hardcode_into_libs=yes
-  if test "$host_cpu" = ia64; then
+  if test ia64 = "$host_cpu"; then
     # AIX 5 supports IA64
-    library_names_spec='${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext}$versuffix $libname${shared_ext}'
+    library_names_spec='$libname$release$shared_ext$major $libname$release$shared_ext$versuffix $libname$shared_ext'
     shlibpath_var=LD_LIBRARY_PATH
   else
     # With GCC up to 2.95.x, collect2 would create an import file
     # for dependence libraries.  The import file would start with
-    # the line `#! .'.  This would cause the generated library to
-    # depend on `.', always an invalid library.  This was fixed in
+    # the line '#! .'.  This would cause the generated library to
+    # depend on '.', always an invalid library.  This was fixed in
     # development snapshots of GCC prior to 3.0.
     case $host_os in
       aix4 | aix4.[01] | aix4.[01].*)
       if { echo '#if __GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 97)'
 	   echo ' yes '
-	   echo '#endif'; } | ${CC} -E - | $GREP yes > /dev/null; then
+	   echo '#endif'; } | $CC -E - | $GREP yes > /dev/null; then
 	:
       else
 	can_build_shared=no
       fi
       ;;
     esac
-    # AIX (on Power*) has no versioning support, so currently we can not hardcode correct
+    # Using Import Files as archive members, it is possible to support
+    # filename-based versioning of shared library archives on AIX. While
+    # this would work for both with and without runtime linking, it will
+    # prevent static linking of such archives. So we do filename-based
+    # shared library versioning with .so extension only, which is used
+    # when both runtime linking and shared linking is enabled.
+    # Unfortunately, runtime linking may impact performance, so we do
+    # not want this to be the default eventually. Also, we use the
+    # versioned .so libs for executables only if there is the -brtl
+    # linker flag in LDFLAGS as well, or --with-aix-soname=svr4 only.
+    # To allow for filename-based versioning support, we need to create
+    # libNAME.so.V as an archive file, containing:
+    # *) an Import File, referring to the versioned filename of the
+    #    archive as well as the shared archive member, telling the
+    #    bitwidth (32 or 64) of that shared object, and providing the
+    #    list of exported symbols of that shared object, eventually
+    #    decorated with the 'weak' keyword
+    # *) the shared object with the F_LOADONLY flag set, to really avoid
+    #    it being seen by the linker.
+    # At run time we better use the real file rather than another symlink,
+    # but for link time we create the symlink libNAME.so -> libNAME.so.V
+
+    case $with_aix_soname,$aix_use_runtimelinking in
+    # AIX (on Power*) has no versioning support, so currently we cannot hardcode correct
     # soname into executable. Probably we can add versioning support to
     # collect2, so additional links can be useful in future.
-    if test "$aix_use_runtimelinking" = yes; then
+    aix,yes) # traditional libtool
+      dynamic_linker='AIX unversionable lib.so'
       # If using run time linking (on AIX 4.2 or later) use lib<name>.so
       # instead of lib<name>.a to let people know that these are not
       # typical AIX shared libraries.
-      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    else
+      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+      ;;
+    aix,no) # traditional AIX only
+      dynamic_linker='AIX lib.a(lib.so.V)'
       # We preserve .a as extension for shared libraries through AIX4.2
       # and later when we are not doing run time linking.
-      library_names_spec='${libname}${release}.a $libname.a'
-      soname_spec='${libname}${release}${shared_ext}$major'
-    fi
+      library_names_spec='$libname$release.a $libname.a'
+      soname_spec='$libname$release$shared_ext$major'
+      ;;
+    svr4,*) # full svr4 only
+      dynamic_linker="AIX lib.so.V($shared_archive_member_spec.o)"
+      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'
+      # We do not specify a path in Import Files, so LIBPATH fires.
+      shlibpath_overrides_runpath=yes
+      ;;
+    *,yes) # both, prefer svr4
+      dynamic_linker="AIX lib.so.V($shared_archive_member_spec.o), lib.a(lib.so.V)"
+      library_names_spec='$libname$release$shared_ext$major $libname$shared_ext'
+      # unpreferred sharedlib libNAME.a needs extra handling
+      postinstall_cmds='test -n "$linkname" || linkname="$realname"~func_stripname "" ".so" "$linkname"~$install_shared_prog "$dir/$func_stripname_result.$libext" "$destdir/$func_stripname_result.$libext"~test -z "$tstripme" || test -z "$striplib" || $striplib "$destdir/$func_stripname_result.$libext"'
+      postuninstall_cmds='for n in $library_names $old_library; do :; done~func_stripname "" ".so" "$n"~test "$func_stripname_result" = "$n" || func_append rmfiles " $odir/$func_stripname_result.$libext"'
+      # We do not specify a path in Import Files, so LIBPATH fires.
+      shlibpath_overrides_runpath=yes
+      ;;
+    *,no) # both, prefer aix
+      dynamic_linker="AIX lib.a(lib.so.V), lib.so.V($shared_archive_member_spec.o)"
+      library_names_spec='$libname$release.a $libname.a'
+      soname_spec='$libname$release$shared_ext$major'
+      # unpreferred sharedlib libNAME.so.V and symlink libNAME.so need extra handling
+      postinstall_cmds='test -z "$dlname" || $install_shared_prog $dir/$dlname $destdir/$dlname~test -z "$tstripme" || test -z "$striplib" || $striplib $destdir/$dlname~test -n "$linkname" || linkname=$realname~func_stripname "" ".a" "$linkname"~(cd "$destdir" && $LN_S -f $dlname $func_stripname_result.so)'
+      postuninstall_cmds='test -z "$dlname" || func_append rmfiles " $odir/$dlname"~for n in $old_library $library_names; do :; done~func_stripname "" ".a" "$n"~func_append rmfiles " $odir/$func_stripname_result.so"'
+      ;;
+    esac
     shlibpath_var=LIBPATH
   fi
   ;;
@@ -12602,18 +15273,18 @@ amigaos*)
   powerpc)
     # Since July 2007 AmigaOS4 officially supports .so libraries.
     # When compiling the executable, add -use-dynld -Lsobjs: to the compileline.
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
     ;;
   m68k)
     library_names_spec='$libname.ixlibrary $libname.a'
     # Create ${libname}_ixlibrary.a entries in /sys/libs.
-    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all "$lib" | $SED '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; test $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
+    finish_eval='for lib in `ls $libdir/*.ixlibrary 2>/dev/null`; do libname=`func_echo_all "$lib" | $SED '\''s%^.*/\([^/]*\)\.ixlibrary$%\1%'\''`; $RM /sys/libs/${libname}_ixlibrary.a; $show "cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a"; cd /sys/libs && $LN_S $lib ${libname}_ixlibrary.a || exit 1; done'
     ;;
   esac
   ;;
 
 beos*)
-  library_names_spec='${libname}${shared_ext}'
+  library_names_spec='$libname$shared_ext'
   dynamic_linker="$host_os ld.so"
   shlibpath_var=LIBRARY_PATH
   ;;
@@ -12621,8 +15292,8 @@ beos*)
 bsdi[45]*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   sys_lib_search_path_spec="/shlib /usr/lib /usr/X11/lib /usr/contrib/lib /lib /usr/local/lib"
@@ -12634,7 +15305,7 @@ bsdi[45]*)
 
 cygwin* | mingw* | pw32* | cegcc*)
   version_type=windows
-  shrext_cmds=".dll"
+  shrext_cmds=.dll
   need_version=no
   need_lib_prefix=no
 
@@ -12643,8 +15314,8 @@ cygwin* | mingw* | pw32* | cegcc*)
     # gcc
     library_names_spec='$libname.dll.a'
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
-    postinstall_cmds='base_file=`basename \${file}`~
-      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+    postinstall_cmds='base_file=`basename \$file`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; echo \$dlname'\''`~
       dldir=$destdir/`dirname \$dlpath`~
       test -d \$dldir || mkdir -p \$dldir~
       $install_prog $dir/$dlname \$dldir/$dlname~
@@ -12660,17 +15331,17 @@ cygwin* | mingw* | pw32* | cegcc*)
     case $host_os in
     cygwin*)
       # Cygwin DLLs use 'cyg' prefix rather than 'lib'
-      soname_spec='`echo ${libname} | sed -e 's/^lib/cyg/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      soname_spec='`echo $libname | sed -e 's/^lib/cyg/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'
 
       sys_lib_search_path_spec="$sys_lib_search_path_spec /usr/lib/w32api"
       ;;
     mingw* | cegcc*)
       # MinGW DLLs use traditional 'lib' prefix
-      soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'
       ;;
     pw32*)
       # pw32 DLLs use 'pw' prefix rather than 'lib'
-      library_names_spec='`echo ${libname} | sed -e 's/^lib/pw/'``echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
+      library_names_spec='`echo $libname | sed -e 's/^lib/pw/'``echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'
       ;;
     esac
     dynamic_linker='Win32 ld.exe'
@@ -12679,8 +15350,8 @@ cygwin* | mingw* | pw32* | cegcc*)
   *,cl*)
     # Native MSVC
     libname_spec='$name'
-    soname_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext}'
-    library_names_spec='${libname}.dll.lib'
+    soname_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext'
+    library_names_spec='$libname.dll.lib'
 
     case $build_os in
     mingw*)
@@ -12707,7 +15378,7 @@ cygwin* | mingw* | pw32* | cegcc*)
       sys_lib_search_path_spec=`cygpath --path --unix "$sys_lib_search_path_spec" | $SED -e "s/$PATH_SEPARATOR/ /g"`
       ;;
     *)
-      sys_lib_search_path_spec="$LIB"
+      sys_lib_search_path_spec=$LIB
       if $ECHO "$sys_lib_search_path_spec" | $GREP ';[c-zC-Z]:/' >/dev/null; then
         # It is most probably a Windows format PATH.
         sys_lib_search_path_spec=`$ECHO "$sys_lib_search_path_spec" | $SED -e 's/;/ /g'`
@@ -12720,8 +15391,8 @@ cygwin* | mingw* | pw32* | cegcc*)
     esac
 
     # DLL is installed to $(libdir)/../bin by postinstall_cmds
-    postinstall_cmds='base_file=`basename \${file}`~
-      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\${base_file}'\''i; echo \$dlname'\''`~
+    postinstall_cmds='base_file=`basename \$file`~
+      dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; echo \$dlname'\''`~
       dldir=$destdir/`dirname \$dlpath`~
       test -d \$dldir || mkdir -p \$dldir~
       $install_prog $dir/$dlname \$dldir/$dlname'
@@ -12734,7 +15405,7 @@ cygwin* | mingw* | pw32* | cegcc*)
 
   *)
     # Assume MSVC wrapper
-    library_names_spec='${libname}`echo ${release} | $SED -e 's/[.]/-/g'`${versuffix}${shared_ext} $libname.lib'
+    library_names_spec='$libname`echo $release | $SED -e 's/[.]/-/g'`$versuffix$shared_ext $libname.lib'
     dynamic_linker='Win32 ld.exe'
     ;;
   esac
@@ -12747,8 +15418,8 @@ darwin* | rhapsody*)
   version_type=darwin
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${major}$shared_ext ${libname}$shared_ext'
-  soname_spec='${libname}${release}${major}$shared_ext'
+  library_names_spec='$libname$release$major$shared_ext $libname$shared_ext'
+  soname_spec='$libname$release$major$shared_ext'
   shlibpath_overrides_runpath=yes
   shlibpath_var=DYLD_LIBRARY_PATH
   shrext_cmds='`test .$module = .yes && echo .so || echo .dylib`'
@@ -12761,8 +15432,8 @@ dgux*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname$shared_ext'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   ;;
 
@@ -12780,12 +15451,13 @@ freebsd* | dragonfly*)
   version_type=freebsd-$objformat
   case $version_type in
     freebsd-elf*)
-      library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
+      library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+      soname_spec='$libname$release$shared_ext$major'
       need_version=no
       need_lib_prefix=no
       ;;
     freebsd-*)
-      library_names_spec='${libname}${release}${shared_ext}$versuffix $libname${shared_ext}$versuffix'
+      library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
       need_version=yes
       ;;
   esac
@@ -12815,10 +15487,10 @@ haiku*)
   need_lib_prefix=no
   need_version=no
   dynamic_linker="$host_os runtime_loader"
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}${major} ${libname}${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LIBRARY_PATH
-  shlibpath_overrides_runpath=yes
+  shlibpath_overrides_runpath=no
   sys_lib_dlsearch_path_spec='/boot/home/config/lib /boot/common/lib /boot/system/lib'
   hardcode_into_libs=yes
   ;;
@@ -12836,14 +15508,15 @@ hpux9* | hpux10* | hpux11*)
     dynamic_linker="$host_os dld.so"
     shlibpath_var=LD_LIBRARY_PATH
     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
-    if test "X$HPUX_IA64_MODE" = X32; then
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
+    if test 32 = "$HPUX_IA64_MODE"; then
       sys_lib_search_path_spec="/usr/lib/hpux32 /usr/local/lib/hpux32 /usr/local/lib"
+      sys_lib_dlsearch_path_spec=/usr/lib/hpux32
     else
       sys_lib_search_path_spec="/usr/lib/hpux64 /usr/local/lib/hpux64"
+      sys_lib_dlsearch_path_spec=/usr/lib/hpux64
     fi
-    sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
     ;;
   hppa*64*)
     shrext_cmds='.sl'
@@ -12851,8 +15524,8 @@ hpux9* | hpux10* | hpux11*)
     dynamic_linker="$host_os dld.sl"
     shlibpath_var=LD_LIBRARY_PATH # How should we handle SHLIB_PATH
     shlibpath_overrides_runpath=yes # Unless +noenvvar is specified.
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
     sys_lib_search_path_spec="/usr/lib/pa20_64 /usr/ccs/lib/pa20_64"
     sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
     ;;
@@ -12861,8 +15534,8 @@ hpux9* | hpux10* | hpux11*)
     dynamic_linker="$host_os dld.sl"
     shlibpath_var=SHLIB_PATH
     shlibpath_overrides_runpath=no # +s is required to enable SHLIB_PATH
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
     ;;
   esac
   # HP-UX runs *really* slowly unless shared libraries are mode 555, ...
@@ -12875,8 +15548,8 @@ interix[3-9]*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   dynamic_linker='Interix 3.x ld.so.1 (PE, like ELF)'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
@@ -12887,7 +15560,7 @@ irix5* | irix6* | nonstopux*)
   case $host_os in
     nonstopux*) version_type=nonstopux ;;
     *)
-	if test "$lt_cv_prog_gnu_ld" = yes; then
+	if test yes = "$lt_cv_prog_gnu_ld"; then
 		version_type=linux # correct to gnu/linux during the next big refactor
 	else
 		version_type=irix
@@ -12895,8 +15568,8 @@ irix5* | irix6* | nonstopux*)
   esac
   need_lib_prefix=no
   need_version=no
-  soname_spec='${libname}${release}${shared_ext}$major'
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${release}${shared_ext} $libname${shared_ext}'
+  soname_spec='$libname$release$shared_ext$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$release$shared_ext $libname$shared_ext'
   case $host_os in
   irix5* | nonstopux*)
     libsuff= shlibsuff=
@@ -12915,8 +15588,8 @@ irix5* | irix6* | nonstopux*)
   esac
   shlibpath_var=LD_LIBRARY${shlibsuff}_PATH
   shlibpath_overrides_runpath=no
-  sys_lib_search_path_spec="/usr/lib${libsuff} /lib${libsuff} /usr/local/lib${libsuff}"
-  sys_lib_dlsearch_path_spec="/usr/lib${libsuff} /lib${libsuff}"
+  sys_lib_search_path_spec="/usr/lib$libsuff /lib$libsuff /usr/local/lib$libsuff"
+  sys_lib_dlsearch_path_spec="/usr/lib$libsuff /lib$libsuff"
   hardcode_into_libs=yes
   ;;
 
@@ -12925,13 +15598,33 @@ linux*oldld* | linux*aout* | linux*coff*)
   dynamic_linker=no
   ;;
 
+linux*android*)
+  version_type=none # Android doesn't support versioned libraries.
+  need_lib_prefix=no
+  need_version=no
+  library_names_spec='$libname$release$shared_ext'
+  soname_spec='$libname$release$shared_ext'
+  finish_cmds=
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
+
+  # This implies no fast_install, which is unacceptable.
+  # Some rework will be needed to allow for fast_install
+  # before this can be enabled.
+  hardcode_into_libs=yes
+
+  dynamic_linker='Android linker'
+  # Don't embed -rpath directories since the linker doesn't support them.
+  hardcode_libdir_flag_spec='-L$libdir'
+  ;;
+
 # This must be glibc/ELF.
 linux* | k*bsd*-gnu | kopensolaris*-gnu | gnu*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   finish_cmds='PATH="\$PATH:/sbin" ldconfig -n $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
@@ -12975,7 +15668,12 @@ fi
   # before this can be enabled.
   hardcode_into_libs=yes
 
-  # Append ld.so.conf contents to the search path
+  # Ideally, we could use ldconfig to report *all* directores which are
+  # searched for libraries, however this is still not possible.  Aside from not
+  # being certain /sbin/ldconfig is available, command
+  # 'ldconfig -N -X -v | grep ^/' on 64bit Fedora does not report /usr/lib64,
+  # even though it is searched at run-time.  Try to do the best guess by
+  # appending ld.so.conf contents (and includes) to the search path.
   if test -f /etc/ld.so.conf; then
     lt_ld_extra=`awk '/^include / { system(sprintf("cd /etc; cat %s 2>/dev/null", \$2)); skip = 1; } { if (!skip) print \$0; skip = 0; }' < /etc/ld.so.conf | $SED -e 's/#.*//;/^[	 ]*hwcap[	 ]/d;s/[:,	]/ /g;s/=[^=]*$//;s/=[^= ]* / /g;s/"//g;/^$/d' | tr '\n' ' '`
     sys_lib_dlsearch_path_spec="/lib /usr/lib $lt_ld_extra"
@@ -12990,29 +15688,17 @@ fi
   dynamic_linker='GNU/Linux ld.so'
   ;;
 
-netbsdelf*-gnu)
-  version_type=linux
-  need_lib_prefix=no
-  need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
-  shlibpath_var=LD_LIBRARY_PATH
-  shlibpath_overrides_runpath=no
-  hardcode_into_libs=yes
-  dynamic_linker='NetBSD ld.elf_so'
-  ;;
-
 netbsd*)
   version_type=sunos
   need_lib_prefix=no
   need_version=no
   if echo __ELF__ | $CC -E - | $GREP __ELF__ >/dev/null; then
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
     finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
     dynamic_linker='NetBSD (a.out) ld.so'
   else
-    library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major ${libname}${shared_ext}'
-    soname_spec='${libname}${release}${shared_ext}$major'
+    library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+    soname_spec='$libname$release$shared_ext$major'
     dynamic_linker='NetBSD ld.elf_so'
   fi
   shlibpath_var=LD_LIBRARY_PATH
@@ -13022,7 +15708,7 @@ netbsd*)
 
 newsos6)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
   ;;
@@ -13031,58 +15717,68 @@ newsos6)
   version_type=qnx
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
   hardcode_into_libs=yes
   dynamic_linker='ldqnx.so'
   ;;
 
-openbsd*)
+openbsd* | bitrig*)
   version_type=sunos
-  sys_lib_dlsearch_path_spec="/usr/lib"
+  sys_lib_dlsearch_path_spec=/usr/lib
   need_lib_prefix=no
-  # Some older versions of OpenBSD (3.3 at least) *do* need versioned libs.
-  case $host_os in
-    openbsd3.3 | openbsd3.3.*)	need_version=yes ;;
-    *)				need_version=no  ;;
-  esac
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
-  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
-  shlibpath_var=LD_LIBRARY_PATH
-  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`" || test "$host_os-$host_cpu" = "openbsd2.8-powerpc"; then
-    case $host_os in
-      openbsd2.[89] | openbsd2.[89].*)
-	shlibpath_overrides_runpath=no
-	;;
-      *)
-	shlibpath_overrides_runpath=yes
-	;;
-      esac
+  if test -z "`echo __ELF__ | $CC -E - | $GREP __ELF__`"; then
+    need_version=no
   else
-    shlibpath_overrides_runpath=yes
+    need_version=yes
   fi
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
+  finish_cmds='PATH="\$PATH:/sbin" ldconfig -m $libdir'
+  shlibpath_var=LD_LIBRARY_PATH
+  shlibpath_overrides_runpath=yes
   ;;
 
 os2*)
   libname_spec='$name'
-  shrext_cmds=".dll"
+  version_type=windows
+  shrext_cmds=.dll
+  need_version=no
   need_lib_prefix=no
-  library_names_spec='$libname${shared_ext} $libname.a'
+  # OS/2 can only load a DLL with a base name of 8 characters or less.
+  soname_spec='`test -n "$os2dllname" && libname="$os2dllname";
+    v=$($ECHO $release$versuffix | tr -d .-);
+    n=$($ECHO $libname | cut -b -$((8 - ${#v})) | tr . _);
+    $ECHO $n$v`$shared_ext'
+  library_names_spec='${libname}_dll.$libext'
   dynamic_linker='OS/2 ld.exe'
-  shlibpath_var=LIBPATH
+  shlibpath_var=BEGINLIBPATH
+  sys_lib_search_path_spec="/lib /usr/lib /usr/local/lib"
+  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
+  postinstall_cmds='base_file=`basename \$file`~
+    dlpath=`$SHELL 2>&1 -c '\''. $dir/'\''\$base_file'\''i; $ECHO \$dlname'\''`~
+    dldir=$destdir/`dirname \$dlpath`~
+    test -d \$dldir || mkdir -p \$dldir~
+    $install_prog $dir/$dlname \$dldir/$dlname~
+    chmod a+x \$dldir/$dlname~
+    if test -n '\''$stripme'\'' && test -n '\''$striplib'\''; then
+      eval '\''$striplib \$dldir/$dlname'\'' || exit \$?;
+    fi'
+  postuninstall_cmds='dldll=`$SHELL 2>&1 -c '\''. $file; $ECHO \$dlname'\''`~
+    dlpath=$dir/\$dldll~
+    $RM \$dlpath'
   ;;
 
 osf3* | osf4* | osf5*)
   version_type=osf
   need_lib_prefix=no
   need_version=no
-  soname_spec='${libname}${release}${shared_ext}$major'
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  soname_spec='$libname$release$shared_ext$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
   shlibpath_var=LD_LIBRARY_PATH
   sys_lib_search_path_spec="/usr/shlib /usr/ccs/lib /usr/lib/cmplrs/cc /usr/lib /usr/local/lib /var/shlib"
-  sys_lib_dlsearch_path_spec="$sys_lib_search_path_spec"
+  sys_lib_dlsearch_path_spec=$sys_lib_search_path_spec
   ;;
 
 rdos*)
@@ -13093,8 +15789,8 @@ solaris*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
   hardcode_into_libs=yes
@@ -13104,11 +15800,11 @@ solaris*)
 
 sunos4*)
   version_type=sunos
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${shared_ext}$versuffix'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$shared_ext$versuffix'
   finish_cmds='PATH="\$PATH:/usr/etc" ldconfig $libdir'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
-  if test "$with_gnu_ld" = yes; then
+  if test yes = "$with_gnu_ld"; then
     need_lib_prefix=no
   fi
   need_version=yes
@@ -13116,8 +15812,8 @@ sunos4*)
 
 sysv4 | sysv4.3*)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   case $host_vendor in
     sni)
@@ -13138,24 +15834,24 @@ sysv4 | sysv4.3*)
   ;;
 
 sysv4*MP*)
-  if test -d /usr/nec ;then
+  if test -d /usr/nec; then
     version_type=linux # correct to gnu/linux during the next big refactor
-    library_names_spec='$libname${shared_ext}.$versuffix $libname${shared_ext}.$major $libname${shared_ext}'
-    soname_spec='$libname${shared_ext}.$major'
+    library_names_spec='$libname$shared_ext.$versuffix $libname$shared_ext.$major $libname$shared_ext'
+    soname_spec='$libname$shared_ext.$major'
     shlibpath_var=LD_LIBRARY_PATH
   fi
   ;;
 
 sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
-  version_type=freebsd-elf
+  version_type=sco
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext} $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=yes
   hardcode_into_libs=yes
-  if test "$with_gnu_ld" = yes; then
+  if test yes = "$with_gnu_ld"; then
     sys_lib_search_path_spec='/usr/local/lib /usr/gnu/lib /usr/ccs/lib /usr/lib /lib'
   else
     sys_lib_search_path_spec='/usr/ccs/lib /usr/lib'
@@ -13173,7 +15869,7 @@ tpf*)
   version_type=linux # correct to gnu/linux during the next big refactor
   need_lib_prefix=no
   need_version=no
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
   shlibpath_var=LD_LIBRARY_PATH
   shlibpath_overrides_runpath=no
   hardcode_into_libs=yes
@@ -13181,8 +15877,8 @@ tpf*)
 
 uts4*)
   version_type=linux # correct to gnu/linux during the next big refactor
-  library_names_spec='${libname}${release}${shared_ext}$versuffix ${libname}${release}${shared_ext}$major $libname${shared_ext}'
-  soname_spec='${libname}${release}${shared_ext}$major'
+  library_names_spec='$libname$release$shared_ext$versuffix $libname$release$shared_ext$major $libname$shared_ext'
+  soname_spec='$libname$release$shared_ext$major'
   shlibpath_var=LD_LIBRARY_PATH
   ;;
 
@@ -13192,20 +15888,35 @@ uts4*)
 esac
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $dynamic_linker" >&5
 $as_echo "$dynamic_linker" >&6; }
-test "$dynamic_linker" = no && can_build_shared=no
+test no = "$dynamic_linker" && can_build_shared=no
 
 variables_saved_for_relink="PATH $shlibpath_var $runpath_var"
-if test "$GCC" = yes; then
+if test yes = "$GCC"; then
   variables_saved_for_relink="$variables_saved_for_relink GCC_EXEC_PREFIX COMPILER_PATH LIBRARY_PATH"
 fi
 
-if test "${lt_cv_sys_lib_search_path_spec+set}" = set; then
-  sys_lib_search_path_spec="$lt_cv_sys_lib_search_path_spec"
+if test set = "${lt_cv_sys_lib_search_path_spec+set}"; then
+  sys_lib_search_path_spec=$lt_cv_sys_lib_search_path_spec
 fi
-if test "${lt_cv_sys_lib_dlsearch_path_spec+set}" = set; then
-  sys_lib_dlsearch_path_spec="$lt_cv_sys_lib_dlsearch_path_spec"
+
+if test set = "${lt_cv_sys_lib_dlsearch_path_spec+set}"; then
+  sys_lib_dlsearch_path_spec=$lt_cv_sys_lib_dlsearch_path_spec
 fi
 
+# remember unaugmented sys_lib_dlsearch_path content for libtool script decls...
+configure_time_dlsearch_path=$sys_lib_dlsearch_path_spec
+
+# ... but it needs LT_SYS_LIBRARY_PATH munging for other configure-time code
+func_munge_path_list sys_lib_dlsearch_path_spec "$LT_SYS_LIBRARY_PATH"
+
+# to be used as default LT_SYS_LIBRARY_PATH value in generated libtool
+configure_time_lt_sys_library_path=$LT_SYS_LIBRARY_PATH
+
+
+
+
+
+
 
 
 
@@ -13302,15 +16013,15 @@ $as_echo_n "checking how to hardcode library paths into programs... " >&6; }
 hardcode_action=
 if test -n "$hardcode_libdir_flag_spec" ||
    test -n "$runpath_var" ||
-   test "X$hardcode_automatic" = "Xyes" ; then
+   test yes = "$hardcode_automatic"; then
 
   # We can hardcode non-existent directories.
-  if test "$hardcode_direct" != no &&
+  if test no != "$hardcode_direct" &&
      # If the only mechanism to avoid hardcoding is shlibpath_var, we
      # have to relink, otherwise we might link with an installed library
      # when we should be linking with a yet-to-be-installed one
-     ## test "$_LT_TAGVAR(hardcode_shlibpath_var, )" != no &&
-     test "$hardcode_minus_L" != no; then
+     ## test no != "$_LT_TAGVAR(hardcode_shlibpath_var, )" &&
+     test no != "$hardcode_minus_L"; then
     # Linking always hardcodes the temporary library directory.
     hardcode_action=relink
   else
@@ -13325,12 +16036,12 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $hardcode_action" >&5
 $as_echo "$hardcode_action" >&6; }
 
-if test "$hardcode_action" = relink ||
-   test "$inherit_rpath" = yes; then
+if test relink = "$hardcode_action" ||
+   test yes = "$inherit_rpath"; then
   # Fast installation is not supported
   enable_fast_install=no
-elif test "$shlibpath_overrides_runpath" = yes ||
-     test "$enable_shared" = no; then
+elif test yes = "$shlibpath_overrides_runpath" ||
+     test no = "$enable_shared"; then
   # Fast installation is not necessary
   enable_fast_install=needless
 fi
@@ -13340,7 +16051,7 @@ fi
 
 
 
-  if test "x$enable_dlopen" != xyes; then
+  if test yes != "$enable_dlopen"; then
   enable_dlopen=unknown
   enable_dlopen_self=unknown
   enable_dlopen_self_static=unknown
@@ -13350,23 +16061,23 @@ else
 
   case $host_os in
   beos*)
-    lt_cv_dlopen="load_add_on"
+    lt_cv_dlopen=load_add_on
     lt_cv_dlopen_libs=
     lt_cv_dlopen_self=yes
     ;;
 
   mingw* | pw32* | cegcc*)
-    lt_cv_dlopen="LoadLibrary"
+    lt_cv_dlopen=LoadLibrary
     lt_cv_dlopen_libs=
     ;;
 
   cygwin*)
-    lt_cv_dlopen="dlopen"
+    lt_cv_dlopen=dlopen
     lt_cv_dlopen_libs=
     ;;
 
   darwin*)
-  # if libdl is installed we need to link against it
+    # if libdl is installed we need to link against it
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
 $as_echo_n "checking for dlopen in -ldl... " >&6; }
 if ${ac_cv_lib_dl_dlopen+:} false; then :
@@ -13404,10 +16115,10 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
 $as_echo "$ac_cv_lib_dl_dlopen" >&6; }
 if test "x$ac_cv_lib_dl_dlopen" = xyes; then :
-  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl
 else
 
-    lt_cv_dlopen="dyld"
+    lt_cv_dlopen=dyld
     lt_cv_dlopen_libs=
     lt_cv_dlopen_self=yes
 
@@ -13415,10 +16126,18 @@ fi
 
     ;;
 
+  tpf*)
+    # Don't try to run any link tests for TPF.  We know it's impossible
+    # because TPF is a cross-compiler, and we know how we open DSOs.
+    lt_cv_dlopen=dlopen
+    lt_cv_dlopen_libs=
+    lt_cv_dlopen_self=no
+    ;;
+
   *)
     ac_fn_c_check_func "$LINENO" "shl_load" "ac_cv_func_shl_load"
 if test "x$ac_cv_func_shl_load" = xyes; then :
-  lt_cv_dlopen="shl_load"
+  lt_cv_dlopen=shl_load
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for shl_load in -ldld" >&5
 $as_echo_n "checking for shl_load in -ldld... " >&6; }
@@ -13457,11 +16176,11 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load" >&5
 $as_echo "$ac_cv_lib_dld_shl_load" >&6; }
 if test "x$ac_cv_lib_dld_shl_load" = xyes; then :
-  lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"
+  lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld
 else
   ac_fn_c_check_func "$LINENO" "dlopen" "ac_cv_func_dlopen"
 if test "x$ac_cv_func_dlopen" = xyes; then :
-  lt_cv_dlopen="dlopen"
+  lt_cv_dlopen=dlopen
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -ldl" >&5
 $as_echo_n "checking for dlopen in -ldl... " >&6; }
@@ -13500,7 +16219,7 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
 $as_echo "$ac_cv_lib_dl_dlopen" >&6; }
 if test "x$ac_cv_lib_dl_dlopen" = xyes; then :
-  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"
+  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld" >&5
 $as_echo_n "checking for dlopen in -lsvld... " >&6; }
@@ -13539,7 +16258,7 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen" >&5
 $as_echo "$ac_cv_lib_svld_dlopen" >&6; }
 if test "x$ac_cv_lib_svld_dlopen" = xyes; then :
-  lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"
+  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
 $as_echo_n "checking for dld_link in -ldld... " >&6; }
@@ -13578,7 +16297,7 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
 $as_echo "$ac_cv_lib_dld_dld_link" >&6; }
 if test "x$ac_cv_lib_dld_dld_link" = xyes; then :
-  lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"
+  lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld
 fi
 
 
@@ -13599,21 +16318,21 @@ fi
     ;;
   esac
 
-  if test "x$lt_cv_dlopen" != xno; then
-    enable_dlopen=yes
-  else
+  if test no = "$lt_cv_dlopen"; then
     enable_dlopen=no
+  else
+    enable_dlopen=yes
   fi
 
   case $lt_cv_dlopen in
   dlopen)
-    save_CPPFLAGS="$CPPFLAGS"
-    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
+    save_CPPFLAGS=$CPPFLAGS
+    test yes = "$ac_cv_header_dlfcn_h" && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"
 
-    save_LDFLAGS="$LDFLAGS"
+    save_LDFLAGS=$LDFLAGS
     wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
 
-    save_LIBS="$LIBS"
+    save_LIBS=$LIBS
     LIBS="$lt_cv_dlopen_libs $LIBS"
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself" >&5
@@ -13621,7 +16340,7 @@ $as_echo_n "checking whether a program can dlopen itself... " >&6; }
 if ${lt_cv_dlopen_self+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  	  if test "$cross_compiling" = yes; then :
+  	  if test yes = "$cross_compiling"; then :
   lt_cv_dlopen_self=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
@@ -13668,9 +16387,9 @@ else
 #  endif
 #endif
 
-/* When -fvisbility=hidden is used, assume the code has been annotated
+/* When -fvisibility=hidden is used, assume the code has been annotated
    correspondingly for the symbols needed.  */
-#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
+#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
 int fnord () __attribute__((visibility("default")));
 #endif
 
@@ -13700,7 +16419,7 @@ _LT_EOF
   (eval $ac_link) 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+  test $ac_status = 0; } && test -s "conftest$ac_exeext" 2>/dev/null; then
     (./conftest; exit; ) >&5 2>/dev/null
     lt_status=$?
     case x$lt_status in
@@ -13720,14 +16439,14 @@ fi
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $lt_cv_dlopen_self" >&5
 $as_echo "$lt_cv_dlopen_self" >&6; }
 
-    if test "x$lt_cv_dlopen_self" = xyes; then
+    if test yes = "$lt_cv_dlopen_self"; then
       wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a statically linked program can dlopen itself" >&5
 $as_echo_n "checking whether a statically linked program can dlopen itself... " >&6; }
 if ${lt_cv_dlopen_self_static+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  	  if test "$cross_compiling" = yes; then :
+  	  if test yes = "$cross_compiling"; then :
   lt_cv_dlopen_self_static=cross
 else
   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2
@@ -13774,9 +16493,9 @@ else
 #  endif
 #endif
 
-/* When -fvisbility=hidden is used, assume the code has been annotated
+/* When -fvisibility=hidden is used, assume the code has been annotated
    correspondingly for the symbols needed.  */
-#if defined(__GNUC__) && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
+#if defined __GNUC__ && (((__GNUC__ == 3) && (__GNUC_MINOR__ >= 3)) || (__GNUC__ > 3))
 int fnord () __attribute__((visibility("default")));
 #endif
 
@@ -13806,7 +16525,7 @@ _LT_EOF
   (eval $ac_link) 2>&5
   ac_status=$?
   $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
-  test $ac_status = 0; } && test -s conftest${ac_exeext} 2>/dev/null; then
+  test $ac_status = 0; } && test -s "conftest$ac_exeext" 2>/dev/null; then
     (./conftest; exit; ) >&5 2>/dev/null
     lt_status=$?
     case x$lt_status in
@@ -13827,9 +16546,9 @@ fi
 $as_echo "$lt_cv_dlopen_self_static" >&6; }
     fi
 
-    CPPFLAGS="$save_CPPFLAGS"
-    LDFLAGS="$save_LDFLAGS"
-    LIBS="$save_LIBS"
+    CPPFLAGS=$save_CPPFLAGS
+    LDFLAGS=$save_LDFLAGS
+    LIBS=$save_LIBS
     ;;
   esac
 
@@ -13860,266 +16579,892 @@ fi
 
 
 
-striplib=
-old_striplib=
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible" >&5
-$as_echo_n "checking whether stripping libraries is possible... " >&6; }
-if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
-  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
-  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
+striplib=
+old_striplib=
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether stripping libraries is possible" >&5
+$as_echo_n "checking whether stripping libraries is possible... " >&6; }
+if test -n "$STRIP" && $STRIP -V 2>&1 | $GREP "GNU strip" >/dev/null; then
+  test -z "$old_striplib" && old_striplib="$STRIP --strip-debug"
+  test -z "$striplib" && striplib="$STRIP --strip-unneeded"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+else
+# FIXME - insert some real tests, host_os isn't really good enough
+  case $host_os in
+  darwin*)
+    if test -n "$STRIP"; then
+      striplib="$STRIP -x"
+      old_striplib="$STRIP -S"
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+    else
+      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    fi
+    ;;
+  *)
+    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+    ;;
+  esac
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+  # Report what library types will actually be built
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries" >&5
+$as_echo_n "checking if libtool supports shared libraries... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $can_build_shared" >&5
+$as_echo "$can_build_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries" >&5
+$as_echo_n "checking whether to build shared libraries... " >&6; }
+  test no = "$can_build_shared" && enable_shared=no
+
+  # On AIX, shared libraries and static libraries use the same namespace, and
+  # are all built from PIC.
+  case $host_os in
+  aix3*)
+    test yes = "$enable_shared" && enable_static=no
+    if test -n "$RANLIB"; then
+      archive_cmds="$archive_cmds~\$RANLIB \$lib"
+      postinstall_cmds='$RANLIB $lib'
+    fi
+    ;;
+
+  aix[4-9]*)
+    if test ia64 != "$host_cpu"; then
+      case $enable_shared,$with_aix_soname,$aix_use_runtimelinking in
+      yes,aix,yes) ;;			# shared object as lib.so file only
+      yes,svr4,*) ;;			# shared object as lib.so archive member only
+      yes,*) enable_static=no ;;	# shared object in lib.a archive as well
+      esac
+    fi
+    ;;
+  esac
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_shared" >&5
+$as_echo "$enable_shared" >&6; }
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries" >&5
+$as_echo_n "checking whether to build static libraries... " >&6; }
+  # Make sure either enable_shared or enable_static is yes.
+  test yes = "$enable_shared" || enable_static=yes
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_static" >&5
+$as_echo "$enable_static" >&6; }
+
+
+
+
+fi
+ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+CC=$lt_save_CC
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+
+        ac_config_commands="$ac_config_commands libtool"
+
+
+
+
+# Only expand once:
+
+
+
+
+
+if test -n "$ac_tool_prefix"; then
+  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
+set dummy ${ac_tool_prefix}ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_AR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$AR"; then
+  ac_cv_prog_AR="$AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_AR="${ac_tool_prefix}ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+AR=$ac_cv_prog_AR
+if test -n "$AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
+$as_echo "$AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+
+fi
+if test -z "$ac_cv_prog_AR"; then
+  ac_ct_AR=$AR
+  # Extract the first word of "ar", so it can be a program name with args.
+set dummy ar; ac_word=$2
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
+$as_echo_n "checking for $ac_word... " >&6; }
+if ${ac_cv_prog_ac_ct_AR+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test -n "$ac_ct_AR"; then
+  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
+else
+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
+for as_dir in $PATH
+do
+  IFS=$as_save_IFS
+  test -z "$as_dir" && as_dir=.
+    for ac_exec_ext in '' $ac_executable_extensions; do
+  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
+    ac_cv_prog_ac_ct_AR="ar"
+    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
+    break 2
+  fi
+done
+  done
+IFS=$as_save_IFS
+
+fi
+fi
+ac_ct_AR=$ac_cv_prog_ac_ct_AR
+if test -n "$ac_ct_AR"; then
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
+$as_echo "$ac_ct_AR" >&6; }
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+
+  if test "x$ac_ct_AR" = x; then
+    AR="ar"
+  else
+    case $cross_compiling:$ac_tool_warned in
+yes:)
+{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
+$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
+ac_tool_warned=yes ;;
+esac
+    AR=$ac_ct_AR
+  fi
+else
+  AR="$ac_cv_prog_AR"
+fi
+
+
+
+if test "x$EMSCRIPTEN" = "x"; then :
+
+
+  oldcflags="$CFLAGS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mmmx" >&5
+$as_echo_n "checking whether C compiler accepts -mmmx... " >&6; }
+if ${ax_cv_check_cflags___mmmx+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mmmx"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mmmx=yes
+else
+  ax_cv_check_cflags___mmmx=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mmmx" >&5
+$as_echo "$ax_cv_check_cflags___mmmx" >&6; }
+if test "x$ax_cv_check_cflags___mmmx" = xyes; then :
+  CFLAGS="$CFLAGS -mmmx"
+else
+  :
+fi
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for MMX instructions set" >&5
+$as_echo_n "checking for MMX instructions set... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+#pragma GCC target("mmx")
+#include <mmintrin.h>
+
+int
+main ()
+{
+ __m64 x = _mm_setzero_si64();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+$as_echo "#define HAVE_MMINTRIN_H 1" >>confdefs.h
+
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mmmx" >&5
+$as_echo_n "checking whether C compiler accepts -mmmx... " >&6; }
+if ${ax_cv_check_cflags___mmmx+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mmmx"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mmmx=yes
+else
+  ax_cv_check_cflags___mmmx=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mmmx" >&5
+$as_echo "$ax_cv_check_cflags___mmmx" >&6; }
+if test "x$ax_cv_check_cflags___mmmx" = xyes; then :
+  CFLAGS_MMX="-mmmx"
+else
+  :
+fi
+
 else
-# FIXME - insert some real tests, host_os isn't really good enough
-  case $host_os in
-  darwin*)
-    if test -n "$STRIP" ; then
-      striplib="$STRIP -x"
-      old_striplib="$STRIP -S"
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
-    else
-      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-    fi
-    ;;
-  *)
-    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-    ;;
-  esac
 fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$oldcflags"
 
+  oldcflags="$CFLAGS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse2" >&5
+$as_echo_n "checking whether C compiler accepts -msse2... " >&6; }
+if ${ax_cv_check_cflags___msse2+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -msse2"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___msse2=yes
+else
+  ax_cv_check_cflags___msse2=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse2" >&5
+$as_echo "$ax_cv_check_cflags___msse2" >&6; }
+if test "x$ax_cv_check_cflags___msse2" = xyes; then :
+  CFLAGS="$CFLAGS -msse2"
+else
+  :
+fi
 
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSE2 instructions set" >&5
+$as_echo_n "checking for SSE2 instructions set... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
 
+#pragma GCC target("sse2")
+#ifndef __SSE2__
+# define __SSE2__
+#endif
+#include <emmintrin.h>
 
+int
+main ()
+{
+ __m128d x = _mm_setzero_pd();
+       __m128i z = _mm_srli_epi64(_mm_setzero_si128(), 26);
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 
+$as_echo "#define HAVE_EMMINTRIN_H 1" >>confdefs.h
 
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse2" >&5
+$as_echo_n "checking whether C compiler accepts -msse2... " >&6; }
+if ${ax_cv_check_cflags___msse2+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -msse2"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___msse2=yes
+else
+  ax_cv_check_cflags___msse2=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse2" >&5
+$as_echo "$ax_cv_check_cflags___msse2" >&6; }
+if test "x$ax_cv_check_cflags___msse2" = xyes; then :
+  CFLAGS_SSE2="-msse2"
+else
+  :
+fi
 
-
-
-
-  # Report which library types will actually be built
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if libtool supports shared libraries" >&5
-$as_echo_n "checking if libtool supports shared libraries... " >&6; }
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $can_build_shared" >&5
-$as_echo "$can_build_shared" >&6; }
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build shared libraries" >&5
-$as_echo_n "checking whether to build shared libraries... " >&6; }
-  test "$can_build_shared" = "no" && enable_shared=no
-
-  # On AIX, shared libraries and static libraries use the same namespace, and
-  # are all built from PIC.
-  case $host_os in
-  aix3*)
-    test "$enable_shared" = yes && enable_static=no
-    if test -n "$RANLIB"; then
-      archive_cmds="$archive_cmds~\$RANLIB \$lib"
-      postinstall_cmds='$RANLIB $lib'
-    fi
-    ;;
-
-  aix[4-9]*)
-    if test "$host_cpu" != ia64 && test "$aix_use_runtimelinking" = no ; then
-      test "$enable_shared" = yes && enable_static=no
-    fi
-    ;;
-  esac
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_shared" >&5
-$as_echo "$enable_shared" >&6; }
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether to build static libraries" >&5
-$as_echo_n "checking whether to build static libraries... " >&6; }
-  # Make sure either enable_shared or enable_static is yes.
-  test "$enable_shared" = yes || enable_static=yes
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $enable_static" >&5
-$as_echo "$enable_static" >&6; }
-
-
-
-
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
-ac_ext=c
-ac_cpp='$CPP $CPPFLAGS'
-ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
-ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
-ac_compiler_gnu=$ac_cv_c_compiler_gnu
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$oldcflags"
 
-CC="$lt_save_CC"
+  oldcflags="$CFLAGS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse3" >&5
+$as_echo_n "checking whether C compiler accepts -msse3... " >&6; }
+if ${ax_cv_check_cflags___msse3+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -msse3"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___msse3=yes
+else
+  ax_cv_check_cflags___msse3=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse3" >&5
+$as_echo "$ax_cv_check_cflags___msse3" >&6; }
+if test "x$ax_cv_check_cflags___msse3" = xyes; then :
+  CFLAGS="$CFLAGS -msse3"
+else
+  :
+fi
 
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSE3 instructions set" >&5
+$as_echo_n "checking for SSE3 instructions set... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
 
+#pragma GCC target("sse3")
+#include <pmmintrin.h>
 
+int
+main ()
+{
+ __m128 x = _mm_addsub_ps(_mm_cvtpd_ps(_mm_setzero_pd()),
+                                _mm_cvtpd_ps(_mm_setzero_pd()));
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 
+$as_echo "#define HAVE_PMMINTRIN_H 1" >>confdefs.h
 
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse3" >&5
+$as_echo_n "checking whether C compiler accepts -msse3... " >&6; }
+if ${ax_cv_check_cflags___msse3+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -msse3"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___msse3=yes
+else
+  ax_cv_check_cflags___msse3=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse3" >&5
+$as_echo "$ax_cv_check_cflags___msse3" >&6; }
+if test "x$ax_cv_check_cflags___msse3" = xyes; then :
+  CFLAGS_SSE3="-msse3"
+else
+  :
+fi
 
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$oldcflags"
 
+  oldcflags="$CFLAGS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mssse3" >&5
+$as_echo_n "checking whether C compiler accepts -mssse3... " >&6; }
+if ${ax_cv_check_cflags___mssse3+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mssse3"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mssse3=yes
+else
+  ax_cv_check_cflags___mssse3=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mssse3" >&5
+$as_echo "$ax_cv_check_cflags___mssse3" >&6; }
+if test "x$ax_cv_check_cflags___mssse3" = xyes; then :
+  CFLAGS="$CFLAGS -mssse3"
+else
+  :
+fi
 
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSSE3 instructions set" >&5
+$as_echo_n "checking for SSSE3 instructions set... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
 
+#pragma GCC target("ssse3")
+#include <tmmintrin.h>
 
+int
+main ()
+{
+ __m64 x = _mm_abs_pi32(_m_from_int(0));
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 
+$as_echo "#define HAVE_TMMINTRIN_H 1" >>confdefs.h
 
-        ac_config_commands="$ac_config_commands libtool"
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mssse3" >&5
+$as_echo_n "checking whether C compiler accepts -mssse3... " >&6; }
+if ${ax_cv_check_cflags___mssse3+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mssse3"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mssse3=yes
+else
+  ax_cv_check_cflags___mssse3=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mssse3" >&5
+$as_echo "$ax_cv_check_cflags___mssse3" >&6; }
+if test "x$ax_cv_check_cflags___mssse3" = xyes; then :
+  CFLAGS_SSSE3="-mssse3"
+else
+  :
+fi
 
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$oldcflags"
 
+  oldcflags="$CFLAGS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse4.1" >&5
+$as_echo_n "checking whether C compiler accepts -msse4.1... " >&6; }
+if ${ax_cv_check_cflags___msse4_1+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
 
-# Only expand once:
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -msse4.1"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___msse4_1=yes
+else
+  ax_cv_check_cflags___msse4_1=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse4_1" >&5
+$as_echo "$ax_cv_check_cflags___msse4_1" >&6; }
+if test "x$ax_cv_check_cflags___msse4_1" = xyes; then :
+  CFLAGS="$CFLAGS -msse4.1"
+else
+  :
+fi
 
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSE4.1 instructions set" >&5
+$as_echo_n "checking for SSE4.1 instructions set... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
 
+#pragma GCC target("sse4.1")
+#include <smmintrin.h>
 
+int
+main ()
+{
+ __m128i x = _mm_minpos_epu16(_mm_setzero_si128());
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 
+$as_echo "#define HAVE_SMMINTRIN_H 1" >>confdefs.h
 
-if test -n "$ac_tool_prefix"; then
-  # Extract the first word of "${ac_tool_prefix}ar", so it can be a program name with args.
-set dummy ${ac_tool_prefix}ar; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_AR+:} false; then :
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse4.1" >&5
+$as_echo_n "checking whether C compiler accepts -msse4.1... " >&6; }
+if ${ax_cv_check_cflags___msse4_1+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  if test -n "$AR"; then
-  ac_cv_prog_AR="$AR" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_AR="${ac_tool_prefix}ar"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -msse4.1"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___msse4_1=yes
+else
+  ax_cv_check_cflags___msse4_1=no
 fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
 fi
-AR=$ac_cv_prog_AR
-if test -n "$AR"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AR" >&5
-$as_echo "$AR" >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse4_1" >&5
+$as_echo "$ax_cv_check_cflags___msse4_1" >&6; }
+if test "x$ax_cv_check_cflags___msse4_1" = xyes; then :
+  CFLAGS_SSE41="-msse4.1"
+else
+  :
+fi
+
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
 fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$oldcflags"
 
-
-fi
-if test -z "$ac_cv_prog_AR"; then
-  ac_ct_AR=$AR
-  # Extract the first word of "ar", so it can be a program name with args.
-set dummy ar; ac_word=$2
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
-$as_echo_n "checking for $ac_word... " >&6; }
-if ${ac_cv_prog_ac_ct_AR+:} false; then :
+  oldcflags="$CFLAGS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx" >&5
+$as_echo_n "checking whether C compiler accepts -mavx... " >&6; }
+if ${ax_cv_check_cflags___mavx+:} false; then :
   $as_echo_n "(cached) " >&6
 else
-  if test -n "$ac_ct_AR"; then
-  ac_cv_prog_ac_ct_AR="$ac_ct_AR" # Let the user override the test.
-else
-as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
-for as_dir in $PATH
-do
-  IFS=$as_save_IFS
-  test -z "$as_dir" && as_dir=.
-    for ac_exec_ext in '' $ac_executable_extensions; do
-  if as_fn_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-    ac_cv_prog_ac_ct_AR="ar"
-    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
-    break 2
-  fi
-done
-  done
-IFS=$as_save_IFS
 
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mavx"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mavx=yes
+else
+  ax_cv_check_cflags___mavx=no
 fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
 fi
-ac_ct_AR=$ac_cv_prog_ac_ct_AR
-if test -n "$ac_ct_AR"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_AR" >&5
-$as_echo "$ac_ct_AR" >&6; }
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx" >&5
+$as_echo "$ax_cv_check_cflags___mavx" >&6; }
+if test "x$ax_cv_check_cflags___mavx" = xyes; then :
+  CFLAGS="$CFLAGS -mavx"
 else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
+  :
 fi
 
-  if test "x$ac_ct_AR" = x; then
-    AR="ar"
-  else
-    case $cross_compiling:$ac_tool_warned in
-yes:)
-{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
-$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
-ac_tool_warned=yes ;;
-esac
-    AR=$ac_ct_AR
-  fi
-else
-  AR="$ac_cv_prog_AR"
-fi
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AVX instructions set" >&5
+$as_echo_n "checking for AVX instructions set... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
 
+#pragma GCC target("avx")
+#include <immintrin.h>
 
+int
+main ()
+{
+ _mm256_zeroall();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 
-if test "x$EMSCRIPTEN" = "x"; then :
+$as_echo "#define HAVE_AVXINTRIN_H 1" >>confdefs.h
 
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx" >&5
+$as_echo_n "checking whether C compiler accepts -mavx... " >&6; }
+if ${ax_cv_check_cflags___mavx+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mavx"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mavx=yes
+else
+  ax_cv_check_cflags___mavx=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx" >&5
+$as_echo "$ax_cv_check_cflags___mavx" >&6; }
+if test "x$ax_cv_check_cflags___mavx" = xyes; then :
+  CFLAGS_AVX="-mavx"
+else
+  :
+fi
+
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$oldcflags"
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for MMX instructions set" >&5
-$as_echo_n "checking for MMX instructions set... " >&6; }
   oldcflags="$CFLAGS"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mmmx" >&5
-$as_echo_n "checking whether C compiler accepts -mmmx... " >&6; }
-if ${ax_cv_check_cflags___mmmx+:} false; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx2" >&5
+$as_echo_n "checking whether C compiler accepts -mavx2... " >&6; }
+if ${ax_cv_check_cflags___mavx2+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mmmx"
+  CFLAGS="$CFLAGS  -mavx2"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mmmx=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mavx2=yes
 else
-  ax_cv_check_cflags___mmmx=no
+  ax_cv_check_cflags___mavx2=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mmmx" >&5
-$as_echo "$ax_cv_check_cflags___mmmx" >&6; }
-if test "x$ax_cv_check_cflags___mmmx" = xyes; then :
-  CFLAGS="$CFLAGS -mmmx"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx2" >&5
+$as_echo "$ax_cv_check_cflags___mavx2" >&6; }
+if test "x$ax_cv_check_cflags___mavx2" = xyes; then :
+  CFLAGS="$CFLAGS -mavx2"
 else
   :
 fi
 
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AVX2 instructions set" >&5
+$as_echo_n "checking for AVX2 instructions set... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#pragma GCC target("mmx")
-#include <mmintrin.h>
+#pragma GCC target("avx2")
+#include <immintrin.h>
 
 int
 main ()
 {
- __m64 x = _mm_setzero_si64();
+
+__m256 x = _mm256_set1_ps(3.14);
+__m256 y = _mm256_permutevar8x32_ps(x, _mm256_set1_epi32(42));
+return _mm256_movemask_ps(_mm256_cmp_ps(x, y, _CMP_NEQ_OQ));
+
   ;
   return 0;
 }
@@ -14128,42 +17473,71 @@ if ac_fn_c_try_compile "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
-$as_echo "#define HAVE_MMINTRIN_H 1" >>confdefs.h
+$as_echo "#define HAVE_AVX2INTRIN_H 1" >>confdefs.h
 
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mmmx" >&5
-$as_echo_n "checking whether C compiler accepts -mmmx... " >&6; }
-if ${ax_cv_check_cflags___mmmx+:} false; then :
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx2" >&5
+$as_echo_n "checking whether C compiler accepts -mavx2... " >&6; }
+if ${ax_cv_check_cflags___mavx2+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mmmx"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mavx2"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mavx2=yes
+else
+  ax_cv_check_cflags___mavx2=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx2" >&5
+$as_echo "$ax_cv_check_cflags___mavx2" >&6; }
+if test "x$ax_cv_check_cflags___mavx2" = xyes; then :
+  CFLAGS_AVX2="-mavx2"
+else
+  :
+fi
+
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking if _mm256_broadcastsi128_si256 is correctly defined" >&5
+$as_echo_n "checking if _mm256_broadcastsi128_si256 is correctly defined... " >&6; }
+     cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+
+#pragma GCC target("avx2")
+#include <immintrin.h>
+
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+ __m256i y = _mm256_broadcastsi128_si256(_mm_setzero_si128());
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mmmx=yes
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 else
-  ax_cv_check_cflags___mmmx=no
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+$as_echo "#define _mm256_broadcastsi128_si256 _mm_broadcastsi128_si256" >>confdefs.h
+
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mmmx" >&5
-$as_echo "$ax_cv_check_cflags___mmmx" >&6; }
-if test "x$ax_cv_check_cflags___mmmx" = xyes; then :
-  CFLAGS_MMX="-mmmx"
-else
-  :
-fi
 
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
@@ -14172,57 +17546,71 @@ fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   CFLAGS="$oldcflags"
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSE2 instructions set" >&5
-$as_echo_n "checking for SSE2 instructions set... " >&6; }
   oldcflags="$CFLAGS"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse2" >&5
-$as_echo_n "checking whether C compiler accepts -msse2... " >&6; }
-if ${ax_cv_check_cflags___msse2+:} false; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx512f" >&5
+$as_echo_n "checking whether C compiler accepts -mavx512f... " >&6; }
+if ${ax_cv_check_cflags___mavx512f+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -msse2"
+  CFLAGS="$CFLAGS  -mavx512f"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___msse2=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mavx512f=yes
 else
-  ax_cv_check_cflags___msse2=no
+  ax_cv_check_cflags___mavx512f=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse2" >&5
-$as_echo "$ax_cv_check_cflags___msse2" >&6; }
-if test "x$ax_cv_check_cflags___msse2" = xyes; then :
-  CFLAGS="$CFLAGS -msse2"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx512f" >&5
+$as_echo "$ax_cv_check_cflags___mavx512f" >&6; }
+if test "x$ax_cv_check_cflags___mavx512f" = xyes; then :
+  CFLAGS="$CFLAGS -mavx512f"
 else
   :
 fi
 
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AVX512F instructions set" >&5
+$as_echo_n "checking for AVX512F instructions set... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#pragma GCC target("sse2")
-#ifndef __SSE2__
-# define __SSE2__
-#endif
-#include <emmintrin.h>
+#pragma GCC target("avx512f")
+#include <immintrin.h>
 
 int
 main ()
 {
- __m128d x = _mm_setzero_pd();
+
+
+#ifndef __AVX512F__
+# error No AVX512 support
+#elif defined(__clang__)
+# if __clang_major__ < 4
+#  error Compiler AVX512 support may be broken
+# endif
+#elif defined(__GNUC__)
+# if __GNUC__ < 6
+#  error Compiler AVX512 support may be broken
+# endif
+#endif
+
+__m512i x = _mm512_setzero_epi32();
+__m512i y = _mm512_permutexvar_epi64(_mm512_setr_epi64(0, 1, 4, 5, 2, 3, 6, 7), x);
+
   ;
   return 0;
 }
@@ -14231,39 +17619,40 @@ if ac_fn_c_try_compile "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
-$as_echo "#define HAVE_EMMINTRIN_H 1" >>confdefs.h
+$as_echo "#define HAVE_AVX512FINTRIN_H 1" >>confdefs.h
 
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse2" >&5
-$as_echo_n "checking whether C compiler accepts -msse2... " >&6; }
-if ${ax_cv_check_cflags___msse2+:} false; then :
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx512f" >&5
+$as_echo_n "checking whether C compiler accepts -mavx512f... " >&6; }
+if ${ax_cv_check_cflags___mavx512f+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -msse2"
+  CFLAGS="$CFLAGS  -mavx512f"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___msse2=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mavx512f=yes
 else
-  ax_cv_check_cflags___msse2=no
+  ax_cv_check_cflags___mavx512f=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse2" >&5
-$as_echo "$ax_cv_check_cflags___msse2" >&6; }
-if test "x$ax_cv_check_cflags___msse2" = xyes; then :
-  CFLAGS_SSE2="-msse2"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx512f" >&5
+$as_echo "$ax_cv_check_cflags___mavx512f" >&6; }
+if test "x$ax_cv_check_cflags___mavx512f" = xyes; then :
+  CFLAGS_AVX512F="-mavx512f"
 else
   :
 fi
@@ -14271,159 +17660,136 @@ fi
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse3" >&5
-$as_echo_n "checking whether C compiler accepts -msse3... " >&6; }
-if ${ax_cv_check_cflags___msse3+:} false; then :
+     as_CACHEVAR=`$as_echo "ax_cv_check_cflags__$CFLAGS -mno-avx512f" | $as_tr_sh`
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts $CFLAGS -mno-avx512f" >&5
+$as_echo_n "checking whether C compiler accepts $CFLAGS -mno-avx512f... " >&6; }
+if eval \${$as_CACHEVAR+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -msse3"
+  CFLAGS="$CFLAGS  $CFLAGS -mno-avx512f"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___msse3=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  eval "$as_CACHEVAR=yes"
 else
-  ax_cv_check_cflags___msse3=no
+  eval "$as_CACHEVAR=no"
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse3" >&5
-$as_echo "$ax_cv_check_cflags___msse3" >&6; }
-if test "x$ax_cv_check_cflags___msse3" = xyes; then :
-  CFLAGS="$CFLAGS -msse3"
+eval ac_res=\$$as_CACHEVAR
+	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
+$as_echo "$ac_res" >&6; }
+if eval test \"x\$"$as_CACHEVAR"\" = x"yes"; then :
+  CFLAGS="$CFLAGS -mno-avx512f"
 else
   :
 fi
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSE3 instructions set" >&5
-$as_echo_n "checking for SSE3 instructions set... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-
-#pragma GCC target("sse3")
-#include <pmmintrin.h>
-
-int
-main ()
-{
- __m128 x = _mm_addsub_ps(_mm_cvtpd_ps(_mm_setzero_pd()),
-                                _mm_cvtpd_ps(_mm_setzero_pd()));
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
 
-$as_echo "#define HAVE_PMMINTRIN_H 1" >>confdefs.h
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  CFLAGS="$oldcflags"
 
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse3" >&5
-$as_echo_n "checking whether C compiler accepts -msse3... " >&6; }
-if ${ax_cv_check_cflags___msse3+:} false; then :
+  oldcflags="$CFLAGS"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -maes" >&5
+$as_echo_n "checking whether C compiler accepts -maes... " >&6; }
+if ${ax_cv_check_cflags___maes+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -msse3"
+  CFLAGS="$CFLAGS  -maes"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___msse3=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___maes=yes
 else
-  ax_cv_check_cflags___msse3=no
+  ax_cv_check_cflags___maes=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse3" >&5
-$as_echo "$ax_cv_check_cflags___msse3" >&6; }
-if test "x$ax_cv_check_cflags___msse3" = xyes; then :
-  CFLAGS_SSE3="-msse3"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___maes" >&5
+$as_echo "$ax_cv_check_cflags___maes" >&6; }
+if test "x$ax_cv_check_cflags___maes" = xyes; then :
+  CFLAGS="$CFLAGS -maes"
 else
   :
 fi
 
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mssse3" >&5
-$as_echo_n "checking whether C compiler accepts -mssse3... " >&6; }
-if ${ax_cv_check_cflags___mssse3+:} false; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mpclmul" >&5
+$as_echo_n "checking whether C compiler accepts -mpclmul... " >&6; }
+if ${ax_cv_check_cflags___mpclmul+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mssse3"
+  CFLAGS="$CFLAGS  -mpclmul"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mssse3=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mpclmul=yes
 else
-  ax_cv_check_cflags___mssse3=no
+  ax_cv_check_cflags___mpclmul=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mssse3" >&5
-$as_echo "$ax_cv_check_cflags___mssse3" >&6; }
-if test "x$ax_cv_check_cflags___mssse3" = xyes; then :
-  CFLAGS="$CFLAGS -mssse3"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mpclmul" >&5
+$as_echo "$ax_cv_check_cflags___mpclmul" >&6; }
+if test "x$ax_cv_check_cflags___mpclmul" = xyes; then :
+  CFLAGS="$CFLAGS -mpclmul"
 else
   :
 fi
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSSE3 instructions set" >&5
-$as_echo_n "checking for SSSE3 instructions set... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AESNI instructions set and PCLMULQDQ" >&5
+$as_echo_n "checking for AESNI instructions set and PCLMULQDQ... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#pragma GCC target("ssse3")
-#include <tmmintrin.h>
+#pragma GCC target("aes")
+#pragma GCC target("pclmul")
+#include <wmmintrin.h>
 
 int
 main ()
 {
- __m64 x = _mm_abs_pi32(_m_from_int(0));
+ __m128i x = _mm_aesimc_si128(_mm_setzero_si128());
+       __m128i y = _mm_clmulepi64_si128(_mm_setzero_si128(), _mm_setzero_si128(), 0);
   ;
   return 0;
 }
@@ -14432,43 +17798,81 @@ if ac_fn_c_try_compile "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
-$as_echo "#define HAVE_TMMINTRIN_H 1" >>confdefs.h
+$as_echo "#define HAVE_WMMINTRIN_H 1" >>confdefs.h
 
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mssse3" >&5
-$as_echo_n "checking whether C compiler accepts -mssse3... " >&6; }
-if ${ax_cv_check_cflags___mssse3+:} false; then :
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -maes" >&5
+$as_echo_n "checking whether C compiler accepts -maes... " >&6; }
+if ${ax_cv_check_cflags___maes+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mssse3"
+  CFLAGS="$CFLAGS  -maes"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mssse3=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___maes=yes
 else
-  ax_cv_check_cflags___mssse3=no
+  ax_cv_check_cflags___maes=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+  CFLAGS=$ax_check_save_flags
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___maes" >&5
+$as_echo "$ax_cv_check_cflags___maes" >&6; }
+if test "x$ax_cv_check_cflags___maes" = xyes; then :
+  CFLAGS_AESNI="-maes"
+else
+  :
+fi
+
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mpclmul" >&5
+$as_echo_n "checking whether C compiler accepts -mpclmul... " >&6; }
+if ${ax_cv_check_cflags___mpclmul+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+  ax_check_save_flags=$CFLAGS
+  CFLAGS="$CFLAGS  -mpclmul"
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <time.h>
+int
+main ()
+{
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mpclmul=yes
+else
+  ax_cv_check_cflags___mpclmul=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mssse3" >&5
-$as_echo "$ax_cv_check_cflags___mssse3" >&6; }
-if test "x$ax_cv_check_cflags___mssse3" = xyes; then :
-  CFLAGS_SSSE3="-mssse3"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mpclmul" >&5
+$as_echo "$ax_cv_check_cflags___mpclmul" >&6; }
+if test "x$ax_cv_check_cflags___mpclmul" = xyes; then :
+  CFLAGS_PCLMUL="-mpclmul"
 else
   :
 fi
 
+
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
@@ -14477,53 +17881,54 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   CFLAGS="$oldcflags"
 
   oldcflags="$CFLAGS"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse4.1" >&5
-$as_echo_n "checking whether C compiler accepts -msse4.1... " >&6; }
-if ${ax_cv_check_cflags___msse4_1+:} false; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mrdrnd" >&5
+$as_echo_n "checking whether C compiler accepts -mrdrnd... " >&6; }
+if ${ax_cv_check_cflags___mrdrnd+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -msse4.1"
+  CFLAGS="$CFLAGS  -mrdrnd"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___msse4_1=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mrdrnd=yes
 else
-  ax_cv_check_cflags___msse4_1=no
+  ax_cv_check_cflags___mrdrnd=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse4_1" >&5
-$as_echo "$ax_cv_check_cflags___msse4_1" >&6; }
-if test "x$ax_cv_check_cflags___msse4_1" = xyes; then :
-  CFLAGS="$CFLAGS -msse4.1"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mrdrnd" >&5
+$as_echo "$ax_cv_check_cflags___mrdrnd" >&6; }
+if test "x$ax_cv_check_cflags___mrdrnd" = xyes; then :
+  CFLAGS="$CFLAGS -mrdrnd"
 else
   :
 fi
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SSE4.1 instructions set" >&5
-$as_echo_n "checking for SSE4.1 instructions set... " >&6; }
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for RDRAND" >&5
+$as_echo_n "checking for RDRAND... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#pragma GCC target("sse4.1")
-#include <smmintrin.h>
+#pragma GCC target("rdrnd")
+#include <immintrin.h>
 
 int
 main ()
 {
- __m128i x = _mm_minpos_epu16(_mm_setzero_si128());
+ unsigned long long x; _rdrand64_step(&x);
   ;
   return 0;
 }
@@ -14532,43 +17937,45 @@ if ac_fn_c_try_compile "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
-$as_echo "#define HAVE_SMMINTRIN_H 1" >>confdefs.h
+$as_echo "#define HAVE_RDRAND 1" >>confdefs.h
 
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -msse4.1" >&5
-$as_echo_n "checking whether C compiler accepts -msse4.1... " >&6; }
-if ${ax_cv_check_cflags___msse4_1+:} false; then :
+     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mrdrnd" >&5
+$as_echo_n "checking whether C compiler accepts -mrdrnd... " >&6; }
+if ${ax_cv_check_cflags___mrdrnd+:} false; then :
   $as_echo_n "(cached) " >&6
 else
 
   ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -msse4.1"
+  CFLAGS="$CFLAGS  -mrdrnd"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <time.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___msse4_1=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  ax_cv_check_cflags___mrdrnd=yes
 else
-  ax_cv_check_cflags___msse4_1=no
+  ax_cv_check_cflags___mrdrnd=no
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
   CFLAGS=$ax_check_save_flags
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___msse4_1" >&5
-$as_echo "$ax_cv_check_cflags___msse4_1" >&6; }
-if test "x$ax_cv_check_cflags___msse4_1" = xyes; then :
-  CFLAGS_SSE41="-msse4.1"
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mrdrnd" >&5
+$as_echo "$ax_cv_check_cflags___mrdrnd" >&6; }
+if test "x$ax_cv_check_cflags___mrdrnd" = xyes; then :
+  CFLAGS_RDRAND="-mrdrnd"
 else
   :
 fi
 
+
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
@@ -14576,822 +17983,1044 @@ fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   CFLAGS="$oldcflags"
 
-  oldcflags="$CFLAGS"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx" >&5
-$as_echo_n "checking whether C compiler accepts -mavx... " >&6; }
-if ${ax_cv_check_cflags___mavx+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mavx"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+fi
+
+
+
+
+
+
+
+
+
+
+
+
+
+for ac_header in sys/mman.h sys/random.h intrin.h
+do :
+  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
+ac_fn_c_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
+if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
+_ACEOF
+
+fi
+
+done
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if _xgetbv() is available" >&5
+$as_echo_n "checking if _xgetbv() is available... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+ #include <intrin.h>
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+ (void) _xgetbv(0)
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mavx=yes
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+$as_echo "#define HAVE__XGETBV 1" >>confdefs.h
+
 else
-  ax_cv_check_cflags___mavx=no
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx" >&5
-$as_echo "$ax_cv_check_cflags___mavx" >&6; }
-if test "x$ax_cv_check_cflags___mavx" = xyes; then :
-  CFLAGS="$CFLAGS -mavx"
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for inline" >&5
+$as_echo_n "checking for inline... " >&6; }
+if ${ac_cv_c_inline+:} false; then :
+  $as_echo_n "(cached) " >&6
 else
-  :
+  ac_cv_c_inline=no
+for ac_kw in inline __inline__ __inline; do
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#ifndef __cplusplus
+typedef int foo_t;
+static $ac_kw foo_t static_foo () {return 0; }
+$ac_kw foo_t foo () {return 0; }
+#endif
+
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_c_inline=$ac_kw
 fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+  test "$ac_cv_c_inline" != no && break
+done
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AVX instructions set" >&5
-$as_echo_n "checking for AVX instructions set... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_inline" >&5
+$as_echo "$ac_cv_c_inline" >&6; }
+
+case $ac_cv_c_inline in
+  inline | yes) ;;
+  *)
+    case $ac_cv_c_inline in
+      no) ac_val=;;
+      *) ac_val=$ac_cv_c_inline;;
+    esac
+    cat >>confdefs.h <<_ACEOF
+#ifndef __cplusplus
+#define inline $ac_val
+#endif
+_ACEOF
+    ;;
+esac
+
+case $host_cpu in #(
+  i?86|amd64|x86_64) :
+    ac_cv_c_bigendian=no
+ ;; #(
+  *) :
+     ;;
+esac
+ { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether byte ordering is bigendian" >&5
+$as_echo_n "checking whether byte ordering is bigendian... " >&6; }
+if ${ac_cv_c_bigendian+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_cv_c_bigendian=unknown
+    # See if we're dealing with a universal compiler.
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
+#ifndef __APPLE_CC__
+	       not a universal capable compiler
+	     #endif
+	     typedef int dummy;
 
-#pragma GCC target("avx")
-#include <immintrin.h>
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+
+	# Check for potential -arch flags.  It is not universal unless
+	# there are at least two -arch flags with different values.
+	ac_arch=
+	ac_prev=
+	for ac_word in $CC $CFLAGS $CPPFLAGS $LDFLAGS; do
+	 if test -n "$ac_prev"; then
+	   case $ac_word in
+	     i?86 | x86_64 | ppc | ppc64)
+	       if test -z "$ac_arch" || test "$ac_arch" = "$ac_word"; then
+		 ac_arch=$ac_word
+	       else
+		 ac_cv_c_bigendian=universal
+		 break
+	       fi
+	       ;;
+	   esac
+	   ac_prev=
+	 elif test "x$ac_word" = "x-arch"; then
+	   ac_prev=arch
+	 fi
+       done
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+    if test $ac_cv_c_bigendian = unknown; then
+      # See if sys/param.h defines the BYTE_ORDER macro.
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <sys/types.h>
+	     #include <sys/param.h>
 
 int
 main ()
 {
- _mm256_zeroall();
+#if ! (defined BYTE_ORDER && defined BIG_ENDIAN \
+		     && defined LITTLE_ENDIAN && BYTE_ORDER && BIG_ENDIAN \
+		     && LITTLE_ENDIAN)
+	      bogus endian macros
+	     #endif
+
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
+  # It does; now see whether it defined to BIG_ENDIAN or not.
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <sys/types.h>
+		#include <sys/param.h>
 
-$as_echo "#define HAVE_AVXINTRIN_H 1" >>confdefs.h
+int
+main ()
+{
+#if BYTE_ORDER != BIG_ENDIAN
+		 not big endian
+		#endif
 
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mavx" >&5
-$as_echo_n "checking whether C compiler accepts -mavx... " >&6; }
-if ${ax_cv_check_cflags___mavx+:} false; then :
-  $as_echo_n "(cached) " >&6
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  ac_cv_c_bigendian=yes
 else
+  ac_cv_c_bigendian=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+    fi
+    if test $ac_cv_c_bigendian = unknown; then
+      # See if <limits.h> defines _LITTLE_ENDIAN or _BIG_ENDIAN (e.g., Solaris).
+      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <limits.h>
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mavx"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+int
+main ()
+{
+#if ! (defined _LITTLE_ENDIAN || defined _BIG_ENDIAN)
+	      bogus endian macros
+	     #endif
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  # It does; now see whether it defined to _BIG_ENDIAN or not.
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+#include <limits.h>
+
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+#ifndef _BIG_ENDIAN
+		 not big endian
+		#endif
+
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mavx=yes
+  ac_cv_c_bigendian=yes
 else
-  ax_cv_check_cflags___mavx=no
+  ac_cv_c_bigendian=no
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mavx" >&5
-$as_echo "$ax_cv_check_cflags___mavx" >&6; }
-if test "x$ax_cv_check_cflags___mavx" = xyes; then :
-  CFLAGS_AVX="-mavx"
-else
-  :
-fi
-
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS="$oldcflags"
-
-  oldcflags="$CFLAGS"
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -maes" >&5
-$as_echo_n "checking whether C compiler accepts -maes... " >&6; }
-if ${ax_cv_check_cflags___maes+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
-
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -maes"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+    fi
+    if test $ac_cv_c_bigendian = unknown; then
+      # Compile a test program.
+      if test "$cross_compiling" = yes; then :
+  # Try to guess by grepping values from an object file.
+	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+short int ascii_mm[] =
+		  { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };
+		short int ascii_ii[] =
+		  { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };
+		int use_ascii (int i) {
+		  return ascii_mm[i] + ascii_ii[i];
+		}
+		short int ebcdic_ii[] =
+		  { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };
+		short int ebcdic_mm[] =
+		  { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };
+		int use_ebcdic (int i) {
+		  return ebcdic_mm[i] + ebcdic_ii[i];
+		}
+		extern int foo;
+
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+return use_ascii (foo) == use_ebcdic (foo);
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___maes=yes
-else
-  ax_cv_check_cflags___maes=no
+  if grep BIGenDianSyS conftest.$ac_objext >/dev/null; then
+	      ac_cv_c_bigendian=yes
+	    fi
+	    if grep LiTTleEnDian conftest.$ac_objext >/dev/null ; then
+	      if test "$ac_cv_c_bigendian" = unknown; then
+		ac_cv_c_bigendian=no
+	      else
+		# finding both strings is unlikely to happen, but who knows?
+		ac_cv_c_bigendian=unknown
+	      fi
+	    fi
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___maes" >&5
-$as_echo "$ax_cv_check_cflags___maes" >&6; }
-if test "x$ax_cv_check_cflags___maes" = xyes; then :
-  CFLAGS="$CFLAGS -maes"
-else
-  :
-fi
-
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mpclmul" >&5
-$as_echo_n "checking whether C compiler accepts -mpclmul... " >&6; }
-if ${ax_cv_check_cflags___mpclmul+:} false; then :
-  $as_echo_n "(cached) " >&6
 else
-
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mpclmul"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+$ac_includes_default
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+
+	     /* Are we little or big endian?  From Harbison&Steele.  */
+	     union
+	     {
+	       long int l;
+	       char c[sizeof (long int)];
+	     } u;
+	     u.l = 1;
+	     return u.c[sizeof (long int) - 1] == 1;
+
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mpclmul=yes
+if ac_fn_c_try_run "$LINENO"; then :
+  ac_cv_c_bigendian=no
 else
-  ax_cv_check_cflags___mpclmul=no
+  ac_cv_c_bigendian=yes
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mpclmul" >&5
-$as_echo "$ax_cv_check_cflags___mpclmul" >&6; }
-if test "x$ax_cv_check_cflags___mpclmul" = xyes; then :
-  CFLAGS="$CFLAGS -mpclmul"
-else
-  :
+
+    fi
 fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_bigendian" >&5
+$as_echo "$ac_cv_c_bigendian" >&6; }
+ case $ac_cv_c_bigendian in #(
+   yes)
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for AESNI instructions set and PCLMULQDQ" >&5
-$as_echo_n "checking for AESNI instructions set and PCLMULQDQ... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+$as_echo "#define NATIVE_BIG_ENDIAN 1" >>confdefs.h
+;; #(
+   no)
+
+$as_echo "#define NATIVE_LITTLE_ENDIAN 1" >>confdefs.h
+ ;; #(
+   universal)
+     as_fn_error $? "universal endianness is not supported - compile separately and use lipo(1)" "$LINENO" 5
+
+     ;; #(
+   *)
+     as_fn_error $? "unknown endianness" "$LINENO" 5 ;;
+ esac
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether __STDC_LIMIT_MACROS is required" >&5
+$as_echo_n "checking whether __STDC_LIMIT_MACROS is required... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#pragma GCC target("aes")
-#pragma GCC target("pclmul")
-#include <wmmintrin.h>
+#include <limits.h>
+#include <stdint.h>
 
 int
 main ()
 {
- __m128i x = _mm_aesimc_si128(_mm_setzero_si128());
-       __m128i y = _mm_clmulepi64_si128(_mm_setzero_si128(), _mm_setzero_si128(), 0);
+
+(void) SIZE_MAX;
+(void) UINT64_MAX;
+
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
+   CPPFLAGS="$CPPFLAGS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS"
 
-$as_echo "#define HAVE_WMMINTRIN_H 1" >>confdefs.h
-
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -maes" >&5
-$as_echo_n "checking whether C compiler accepts -maes... " >&6; }
-if ${ax_cv_check_cflags___maes+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -maes"
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we can use inline asm code" >&5
+$as_echo_n "checking whether we can use inline asm code... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+
+
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+
+int a = 42;
+int *pnt = &a;
+__asm__ __volatile__ ("" : : "r"(pnt) : "memory");
+
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___maes=yes
-else
-  ax_cv_check_cflags___maes=no
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___maes" >&5
-$as_echo "$ax_cv_check_cflags___maes" >&6; }
-if test "x$ax_cv_check_cflags___maes" = xyes; then :
-  CFLAGS_AESNI="-maes"
-else
-  :
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+$as_echo "#define HAVE_INLINE_ASM 1" >>confdefs.h
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
 fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
 
-     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether C compiler accepts -mpclmul" >&5
-$as_echo_n "checking whether C compiler accepts -mpclmul... " >&6; }
-if ${ax_cv_check_cflags___mpclmul+:} false; then :
-  $as_echo_n "(cached) " >&6
-else
+HAVE_AMD64_ASM_V=0
+if test "$enable_asm" != "no"; then :
 
-  ax_check_save_flags=$CFLAGS
-  CFLAGS="$CFLAGS  -mpclmul"
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we can use x86_64 asm code" >&5
+$as_echo_n "checking whether we can use x86_64 asm code... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <stdio.h>
+
+
 int
 main ()
 {
-char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)
+
+#if defined(__amd64) || defined(__amd64__) || defined(__x86_64__)
+# if defined(__CYGWIN__) || defined(__MINGW32__) || defined(__MINGW64__) || defined(_WIN32) || defined(_WIN64)
+#  error Windows x86_64 calling conventions are not supported yet
+# endif
+/* neat */
+#else
+# error !x86_64
+#endif
+unsigned char i = 0, o = 0, t;
+__asm__ __volatile__ ("pxor %%xmm12, %%xmm6 \n"
+                      "movb (%[i]), %[t] \n"
+                      "addb %[t], (%[o]) \n"
+                      : [t] "=&r"(t)
+                      : [o] "D"(&o), [i] "S"(&i)
+                      : "memory", "flags", "cc");
+
   ;
   return 0;
 }
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ax_cv_check_cflags___mpclmul=yes
-else
-  ax_cv_check_cflags___mpclmul=no
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS=$ax_check_save_flags
-fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ax_cv_check_cflags___mpclmul" >&5
-$as_echo "$ax_cv_check_cflags___mpclmul" >&6; }
-if test "x$ax_cv_check_cflags___mpclmul" = xyes; then :
-  CFLAGS_PCLMUL="-mpclmul"
-else
-  :
-fi
+_ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 
+$as_echo "#define HAVE_AMD64_ASM 1" >>confdefs.h
 
+   HAVE_AMD64_ASM_V=1
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  CFLAGS="$oldcflags"
-
 
 fi
+ if test $HAVE_AMD64_ASM_V = 1; then
+  HAVE_AMD64_ASM_TRUE=
+  HAVE_AMD64_ASM_FALSE='#'
+else
+  HAVE_AMD64_ASM_TRUE='#'
+  HAVE_AMD64_ASM_FALSE=
+fi
 
 
 
+HAVE_AVX_ASM_V=0
+if test "$enable_asm" != "no"; then :
 
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we can assemble AVX opcodes" >&5
+$as_echo_n "checking whether we can assemble AVX opcodes... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
 
 
+int
+main ()
+{
 
+#if defined(__amd64) || defined(__amd64__) || defined(__x86_64__)
+# if defined(__CYGWIN__) || defined(__MINGW32__) || defined(__MINGW64__) || defined(_WIN32) || defined(_WIN64)
+#  error Windows x86_64 calling conventions are not supported yet
+# endif
+/* neat */
+#else
+# error !x86_64
+#endif
+__asm__ __volatile__ ("vpunpcklqdq %xmm0,%xmm13,%xmm0");
 
-
-for ac_header in sys/mman.h
-do :
-  ac_fn_c_check_header_mongrel "$LINENO" "sys/mman.h" "ac_cv_header_sys_mman_h" "$ac_includes_default"
-if test "x$ac_cv_header_sys_mman_h" = xyes; then :
-  cat >>confdefs.h <<_ACEOF
-#define HAVE_SYS_MMAN_H 1
+  ;
+  return 0;
+}
 _ACEOF
+if ac_fn_c_try_compile "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
 
-fi
-
-done
-
-
+$as_echo "#define HAVE_AVX_ASM 1" >>confdefs.h
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for inline" >&5
-$as_echo_n "checking for inline... " >&6; }
-if ${ac_cv_c_inline+:} false; then :
-  $as_echo_n "(cached) " >&6
+   HAVE_AVX_ASM_V=1
 else
-  ac_cv_c_inline=no
-for ac_kw in inline __inline__ __inline; do
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#ifndef __cplusplus
-typedef int foo_t;
-static $ac_kw foo_t static_foo () {return 0; }
-$ac_kw foo_t foo () {return 0; }
-#endif
-
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_c_inline=$ac_kw
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-  test "$ac_cv_c_inline" != no && break
-done
 
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_inline" >&5
-$as_echo "$ac_cv_c_inline" >&6; }
-
-case $ac_cv_c_inline in
-  inline | yes) ;;
-  *)
-    case $ac_cv_c_inline in
-      no) ac_val=;;
-      *) ac_val=$ac_cv_c_inline;;
-    esac
-    cat >>confdefs.h <<_ACEOF
-#ifndef __cplusplus
-#define inline $ac_val
-#endif
-_ACEOF
-    ;;
-esac
-
- { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether byte ordering is bigendian" >&5
-$as_echo_n "checking whether byte ordering is bigendian... " >&6; }
-if ${ac_cv_c_bigendian+:} false; then :
-  $as_echo_n "(cached) " >&6
+ if test $HAVE_AVX_ASM_V = 1; then
+  HAVE_AVX_ASM_TRUE=
+  HAVE_AVX_ASM_FALSE='#'
 else
-  ac_cv_c_bigendian=unknown
-    # See if we're dealing with a universal compiler.
-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#ifndef __APPLE_CC__
-	       not a universal capable compiler
-	     #endif
-	     typedef int dummy;
+  HAVE_AVX_ASM_TRUE='#'
+  HAVE_AVX_ASM_FALSE=
+fi
 
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
 
-	# Check for potential -arch flags.  It is not universal unless
-	# there are at least two -arch flags with different values.
-	ac_arch=
-	ac_prev=
-	for ac_word in $CC $CFLAGS $CPPFLAGS $LDFLAGS; do
-	 if test -n "$ac_prev"; then
-	   case $ac_word in
-	     i?86 | x86_64 | ppc | ppc64)
-	       if test -z "$ac_arch" || test "$ac_arch" = "$ac_word"; then
-		 ac_arch=$ac_word
-	       else
-		 ac_cv_c_bigendian=universal
-		 break
-	       fi
-	       ;;
-	   esac
-	   ac_prev=
-	 elif test "x$ac_word" = "x-arch"; then
-	   ac_prev=arch
-	 fi
-       done
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-    if test $ac_cv_c_bigendian = unknown; then
-      # See if sys/param.h defines the BYTE_ORDER macro.
-      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <sys/types.h>
-	     #include <sys/param.h>
 
-int
-main ()
-{
-#if ! (defined BYTE_ORDER && defined BIG_ENDIAN \
-		     && defined LITTLE_ENDIAN && BYTE_ORDER && BIG_ENDIAN \
-		     && LITTLE_ENDIAN)
-	      bogus endian macros
-	     #endif
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for 128-bit arithmetic" >&5
+$as_echo_n "checking for 128-bit arithmetic... " >&6; }
+HAVE_TI_MODE_V=0
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
 
-  ;
-  return 0;
+#if !defined(__clang__) && !defined(__GNUC__) && !defined(__SIZEOF_INT128__)
+# error mode(TI) is a gcc extension, and __int128 is not available
+#endif
+#if defined(__clang__) && !defined(__x86_64__) && !defined(__aarch64__)
+# error clang does not properly handle the 128-bit type on 32-bit systems
+#endif
+#ifndef NATIVE_LITTLE_ENDIAN
+# error libsodium currently expects a little endian CPU for the 128-bit type
+#endif
+#ifdef __EMSCRIPTEN__
+# error emscripten currently doesn't support some operations on integers larger than 64 bits
+#endif
+#include <stddef.h>
+#include <stdint.h>
+#if defined(__SIZEOF_INT128__)
+typedef unsigned __int128 uint128_t;
+#else
+typedef unsigned uint128_t __attribute__((mode(TI)));
+#endif
+void fcontract(uint128_t *t) {
+  *t += 0x8000000000000 - 1;
+  *t *= *t;
+  *t >>= 84;
 }
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  # It does; now see whether it defined to BIG_ENDIAN or not.
-	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <sys/types.h>
-		#include <sys/param.h>
 
 int
 main ()
 {
-#if BYTE_ORDER != BIG_ENDIAN
-		 not big endian
-		#endif
+
+(void) fcontract;
 
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_c_bigendian=yes
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+$as_echo "#define HAVE_TI_MODE 1" >>confdefs.h
+
+ HAVE_TI_MODE_V=1
 else
-  ac_cv_c_bigendian=no
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ if test $HAVE_TI_MODE_V = 1; then
+  HAVE_TI_MODE_TRUE=
+  HAVE_TI_MODE_FALSE='#'
+else
+  HAVE_TI_MODE_TRUE='#'
+  HAVE_TI_MODE_FALSE=
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-    fi
-    if test $ac_cv_c_bigendian = unknown; then
-      # See if <limits.h> defines _LITTLE_ENDIAN or _BIG_ENDIAN (e.g., Solaris).
-      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
-/* end confdefs.h.  */
-#include <limits.h>
 
-int
-main ()
-{
-#if ! (defined _LITTLE_ENDIAN || defined _BIG_ENDIAN)
-	      bogus endian macros
-	     #endif
 
-  ;
-  return 0;
-}
-_ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  # It does; now see whether it defined to _BIG_ENDIAN or not.
-	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+
+HAVE_CPUID_V=0
+if test "$enable_asm" != "no"; then :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cpuid instruction" >&5
+$as_echo_n "checking for cpuid instruction... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-#include <limits.h>
 
 int
 main ()
 {
-#ifndef _BIG_ENDIAN
-		 not big endian
-		#endif
+
+unsigned int cpu_info[4];
+__asm__ __volatile__ ("xchgl %%ebx, %k1; cpuid; xchgl %%ebx, %k1" :
+                      "=a" (cpu_info[0]), "=&r" (cpu_info[1]),
+                      "=c" (cpu_info[2]), "=d" (cpu_info[3]) :
+                      "0" (0U), "2" (0U));
 
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
-  ac_cv_c_bigendian=yes
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+
+$as_echo "#define HAVE_CPUID 1" >>confdefs.h
+
+   HAVE_CPUID_V=1
 else
-  ac_cv_c_bigendian=no
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
 rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-    fi
-    if test $ac_cv_c_bigendian = unknown; then
-      # Compile a test program.
-      if test "$cross_compiling" = yes; then :
-  # Try to guess by grepping values from an object file.
-	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+
+
+asm_hide_symbol="unsupported"
+if test "$enable_asm" != "no"; then :
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the .private_extern asm directive is supported" >&5
+$as_echo_n "checking if the .private_extern asm directive is supported... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-short int ascii_mm[] =
-		  { 0x4249, 0x4765, 0x6E44, 0x6961, 0x6E53, 0x7953, 0 };
-		short int ascii_ii[] =
-		  { 0x694C, 0x5454, 0x656C, 0x6E45, 0x6944, 0x6E61, 0 };
-		int use_ascii (int i) {
-		  return ascii_mm[i] + ascii_ii[i];
-		}
-		short int ebcdic_ii[] =
-		  { 0x89D3, 0xE3E3, 0x8593, 0x95C5, 0x89C4, 0x9581, 0 };
-		short int ebcdic_mm[] =
-		  { 0xC2C9, 0xC785, 0x95C4, 0x8981, 0x95E2, 0xA8E2, 0 };
-		int use_ebcdic (int i) {
-		  return ebcdic_mm[i] + ebcdic_ii[i];
-		}
-		extern int foo;
 
 int
 main ()
 {
-return use_ascii (foo) == use_ebcdic (foo);
+
+__asm__ __volatile__ (".private_extern dummy_symbol \n"
+                      ".private_extern _dummy_symbol \n"
+                      ".globl dummy_symbol \n"
+                      ".globl _dummy_symbol \n"
+                      "dummy_symbol: \n"
+                      "_dummy_symbol: \n"
+                      "    nop \n"
+);
+
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  if grep BIGenDianSyS conftest.$ac_objext >/dev/null; then
-	      ac_cv_c_bigendian=yes
-	    fi
-	    if grep LiTTleEnDian conftest.$ac_objext >/dev/null ; then
-	      if test "$ac_cv_c_bigendian" = unknown; then
-		ac_cv_c_bigendian=no
-	      else
-		# finding both strings is unlikely to happen, but who knows?
-		ac_cv_c_bigendian=unknown
-	      fi
-	    fi
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+   asm_hide_symbol=".private_extern"
 else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if the .hidden asm directive is supported" >&5
+$as_echo_n "checking if the .hidden asm directive is supported... " >&6; }
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-$ac_includes_default
+
 int
 main ()
 {
 
-	     /* Are we little or big endian?  From Harbison&Steele.  */
-	     union
-	     {
-	       long int l;
-	       char c[sizeof (long int)];
-	     } u;
-	     u.l = 1;
-	     return u.c[sizeof (long int) - 1] == 1;
+__asm__ __volatile__ (".hidden dummy_symbol \n"
+                      ".hidden _dummy_symbol \n"
+                      ".globl dummy_symbol \n"
+                      ".globl _dummy_symbol \n"
+                      "dummy_symbol: \n"
+                      "_dummy_symbol: \n"
+                      "    nop \n"
+);
 
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_run "$LINENO"; then :
-  ac_cv_c_bigendian=no
+if ac_fn_c_try_link "$LINENO"; then :
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
+$as_echo "yes" >&6; }
+   if test "$asm_hide_symbol" = "unsupported"; then :
+  asm_hide_symbol=".hidden"
 else
-  ac_cv_c_bigendian=yes
-fi
-rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
-  conftest.$ac_objext conftest.beam conftest.$ac_ext
+  { $as_echo "$as_me:${as_lineno-$LINENO}: unable to reliably tag symbols as private" >&5
+$as_echo "$as_me: unable to reliably tag symbols as private" >&6;}
+           asm_hide_symbol="unsupported"
 fi
 
-    fi
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
 fi
-{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_bigendian" >&5
-$as_echo "$ac_cv_c_bigendian" >&6; }
- case $ac_cv_c_bigendian in #(
-   yes)
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
 
-$as_echo "#define NATIVE_BIG_ENDIAN 1" >>confdefs.h
-;; #(
-   no)
+  if test "$asm_hide_symbol" != "unsupported"; then :
 
-$as_echo "#define NATIVE_LITTLE_ENDIAN 1" >>confdefs.h
- ;; #(
-   universal)
-     as_fn_error $? "universal endianess is not supported - compile separately and use lipo(1)" "$LINENO" 5
 
-     ;; #(
-   *)
-     as_fn_error $? "unknown endianess" "$LINENO" 5 ;;
- esac
+cat >>confdefs.h <<_ACEOF
+#define ASM_HIDE_SYMBOL $asm_hide_symbol
+_ACEOF
 
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether __STDC_LIMIT_MACROS is required" >&5
-$as_echo_n "checking whether __STDC_LIMIT_MACROS is required... " >&6; }
+fi
+
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if weak symbols are supported" >&5
+$as_echo_n "checking if weak symbols are supported... " >&6; }
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#include <limits.h>
-#include <stdint.h>
+#if !defined(__ELF__) && !defined(__APPLE_CC__)
+# error Support for weak symbols may not be available
+#endif
+__attribute__((weak)) void __dummy(void *x) { }
+void f(void *x) { __dummy(x); }
 
 int
 main ()
 {
 
-(void) SIZE_MAX;
-(void) UINT64_MAX;
 
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-else
+if ac_fn_c_try_link "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-   CPPFLAGS="$CPPFLAGS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS"
 
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+$as_echo "#define HAVE_WEAK_SYMBOLS 1" >>confdefs.h
 
-HAVE_AMD64_ASM_V=0
-if test "$enable_asm" != "no"; then :
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we can use x86_64 asm code" >&5
-$as_echo_n "checking whether we can use x86_64 asm code... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if data alignment is required" >&5
+$as_echo_n "checking if data alignment is required... " >&6; }
+aligned_access_required=yes
+case $host_cpu in #(
+  i?86|amd64|x86_64|powerpc*|s390*) :
+    aligned_access_required=no ;; #(
+  arm*) :
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
+#ifndef __ARM_FEATURE_UNALIGNED
+# error data alignment is required
+#endif
 
 int
 main ()
 {
 
-#if defined(__amd64) || defined(__amd64__) || defined(__x86_64__)
-# if defined(__CYGWIN__) || defined(__MINGW32__) || defined(__MINGW64__) || defined(_WIN32) || defined(_WIN64)
-#  error Windows x86_64 calling conventions are not supported yet
-# endif
-/* neat */
-#else
-# error !x86_64
-#endif
-unsigned char i = 0, o = 0, t;
-__asm__ __volatile__ ("pxor %%xmm12, %%xmm6 \n"
-                      "movb (%[i]), %[t] \n"
-                      "addb %[t], (%[o]) \n"
-                      : [t] "=&r"(t)
-                      : [o] "D"(&o), [i] "S"(&i)
-                      : "memory", "flags", "cc");
-
   ;
   return 0;
 }
 _ACEOF
 if ac_fn_c_try_compile "$LINENO"; then :
+  aligned_access_required=no
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+ ;; #(
+  *) :
+     ;;
+esac
+if test "x$aligned_access_required" = "xyes"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-
-$as_echo "#define HAVE_AMD64_ASM 1" >>confdefs.h
-
-   HAVE_AMD64_ASM_V=1
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
-
-fi
- if test $HAVE_AMD64_ASM_V = 1; then
-  HAVE_AMD64_ASM_TRUE=
-  HAVE_AMD64_ASM_FALSE='#'
-else
-  HAVE_AMD64_ASM_TRUE='#'
-  HAVE_AMD64_ASM_FALSE=
-fi
-
 
+$as_echo "#define CPU_UNALIGNED_ACCESS 1" >>confdefs.h
 
-HAVE_AVX_ASM_V=0
-if test "$enable_asm" != "no"; then :
+fi
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we can assemble AVX opcodes" >&5
-$as_echo_n "checking whether we can assemble AVX opcodes... " >&6; }
-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if atomic operations are supported" >&5
+$as_echo_n "checking if atomic operations are supported... " >&6; }
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-
 int
 main ()
 {
 
-#if defined(__amd64) || defined(__amd64__) || defined(__x86_64__)
-# if defined(__CYGWIN__) || defined(__MINGW32__) || defined(__MINGW64__) || defined(_WIN32) || defined(_WIN64)
-#  error Windows x86_64 calling conventions are not supported yet
-# endif
-/* neat */
-#else
-# error !x86_64
-#endif
-__asm__ __volatile__ ("vpunpcklqdq %xmm0,%xmm13,%xmm0");
+static volatile int _sodium_lock;
+__sync_lock_test_and_set(&_sodium_lock, 1);
+__sync_lock_release(&_sodium_lock);
+
 
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
 
-$as_echo "#define HAVE_AVX_ASM 1" >>confdefs.h
+$as_echo "#define HAVE_ATOMIC_OPS 1" >>confdefs.h
 
-   HAVE_AVX_ASM_V=1
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+
+ac_fn_c_check_type "$LINENO" "size_t" "ac_cv_type_size_t" "$ac_includes_default"
+if test "x$ac_cv_type_size_t" = xyes; then :
+
+else
+
+cat >>confdefs.h <<_ACEOF
+#define size_t unsigned int
+_ACEOF
 
 fi
- if test $HAVE_AVX_ASM_V = 1; then
-  HAVE_AVX_ASM_TRUE=
-  HAVE_AVX_ASM_FALSE='#'
+
+# The Ultrix 4.2 mips builtin alloca declared by alloca.h only works
+# for constant arguments.  Useless!
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for working alloca.h" >&5
+$as_echo_n "checking for working alloca.h... " >&6; }
+if ${ac_cv_working_alloca_h+:} false; then :
+  $as_echo_n "(cached) " >&6
 else
-  HAVE_AVX_ASM_TRUE='#'
-  HAVE_AVX_ASM_FALSE=
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#include <alloca.h>
+int
+main ()
+{
+char *p = (char *) alloca (2 * sizeof (int));
+			  if (p) return 0;
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_working_alloca_h=yes
+else
+  ac_cv_working_alloca_h=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
 fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_working_alloca_h" >&5
+$as_echo "$ac_cv_working_alloca_h" >&6; }
+if test $ac_cv_working_alloca_h = yes; then
 
+$as_echo "#define HAVE_ALLOCA_H 1" >>confdefs.h
 
+fi
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for 128-bit arithmetic" >&5
-$as_echo_n "checking for 128-bit arithmetic... " >&6; }
-HAVE_TI_MODE_V=0
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for alloca" >&5
+$as_echo_n "checking for alloca... " >&6; }
+if ${ac_cv_func_alloca_works+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-
-#if !defined(__GNUC__) && !defined(__SIZEOF_INT128__)
-# error mode(TI) is a gcc extension, and __int128 is not available
-#endif
-#if defined(__clang__) && !defined(__x86_64__)
-# error clang does not properly handle the 128-bit type on 32-bit systems
-#endif
-#ifndef NATIVE_LITTLE_ENDIAN
-# error libsodium currently expects a little endian CPU for the 128-bit type
-#endif
-#ifdef __EMSCRIPTEN__
-# error emscripten currently supports only shift operations on integers \
-#       larger than 64 bits
-#endif
-#include <stddef.h>
-#include <stdint.h>
-#if defined(__SIZEOF_INT128__)
-typedef unsigned __int128 uint128_t;
+#ifdef __GNUC__
+# define alloca __builtin_alloca
 #else
-typedef unsigned uint128_t __attribute__((mode(TI)));
+# ifdef _MSC_VER
+#  include <malloc.h>
+#  define alloca _alloca
+# else
+#  ifdef HAVE_ALLOCA_H
+#   include <alloca.h>
+#  else
+#   ifdef _AIX
+ #pragma alloca
+#   else
+#    ifndef alloca /* predefined by HP cc +Olibcalls */
+void *alloca (size_t);
+#    endif
+#   endif
+#  endif
+# endif
 #endif
-void fcontract(uint128_t *t) {
-  *t += 0x8000000000000 - 1;
-}
 
 int
 main ()
-{
-
-(void) fcontract;
-
+{
+char *p = (char *) alloca (1);
+				    if (p) return 0;
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_func_alloca_works=yes
+else
+  ac_cv_func_alloca_works=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_func_alloca_works" >&5
+$as_echo "$ac_cv_func_alloca_works" >&6; }
 
-$as_echo "#define HAVE_TI_MODE 1" >>confdefs.h
+if test $ac_cv_func_alloca_works = yes; then
+
+$as_echo "#define HAVE_ALLOCA 1" >>confdefs.h
 
- HAVE_TI_MODE_V=1
 else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
- if test $HAVE_TI_MODE_V = 1; then
-  HAVE_TI_MODE_TRUE=
-  HAVE_TI_MODE_FALSE='#'
+  # The SVR3 libPW and SVR4 libucb both contain incompatible functions
+# that cause trouble.  Some versions do not even contain alloca or
+# contain a buggy version.  If you still want to use their alloca,
+# use ar to extract alloca.o from them instead of compiling alloca.c.
+
+ALLOCA=\${LIBOBJDIR}alloca.$ac_objext
+
+$as_echo "#define C_ALLOCA 1" >>confdefs.h
+
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether \`alloca.c' needs Cray hooks" >&5
+$as_echo_n "checking whether \`alloca.c' needs Cray hooks... " >&6; }
+if ${ac_cv_os_cray+:} false; then :
+  $as_echo_n "(cached) " >&6
 else
-  HAVE_TI_MODE_TRUE='#'
-  HAVE_TI_MODE_FALSE=
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+#if defined CRAY && ! defined CRAY2
+webecray
+#else
+wenotbecray
+#endif
+
+_ACEOF
+if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
+  $EGREP "webecray" >/dev/null 2>&1; then :
+  ac_cv_os_cray=yes
+else
+  ac_cv_os_cray=no
 fi
+rm -f conftest*
 
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_os_cray" >&5
+$as_echo "$ac_cv_os_cray" >&6; }
+if test $ac_cv_os_cray = yes; then
+  for ac_func in _getb67 GETB67 getb67; do
+    as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
 
+cat >>confdefs.h <<_ACEOF
+#define CRAY_STACKSEG_END $ac_func
+_ACEOF
 
-HAVE_CPUID_V=0
-if test "$enable_asm" != "no"; then :
+    break
+fi
 
-  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for cpuid instruction" >&5
-$as_echo_n "checking for cpuid instruction... " >&6; }
+  done
+fi
+
+{ $as_echo "$as_me:${as_lineno-$LINENO}: checking stack direction for C alloca" >&5
+$as_echo_n "checking stack direction for C alloca... " >&6; }
+if ${ac_cv_c_stack_direction+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  if test "$cross_compiling" = yes; then :
+  ac_cv_c_stack_direction=0
+else
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
-
+$ac_includes_default
 int
-main ()
+find_stack_direction (int *addr, int depth)
 {
+  int dir, dummy = 0;
+  if (! addr)
+    addr = &dummy;
+  *addr = addr < &dummy ? 1 : addr == &dummy ? 0 : -1;
+  dir = depth ? find_stack_direction (addr, depth - 1) : 0;
+  return dir + dummy;
+}
 
-unsigned int cpu_info[4];
-__asm__ __volatile__ ("xchgl %%ebx, %k1; cpuid; xchgl %%ebx, %k1" :
-                      "=a" (cpu_info[0]), "=&r" (cpu_info[1]),
-                      "=c" (cpu_info[2]), "=d" (cpu_info[3]) :
-                      "0" (0U), "2" (0U));
-
-  ;
-  return 0;
+int
+main (int argc, char **argv)
+{
+  return find_stack_direction (0, argc + !argv + 20) < 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
-$as_echo "yes" >&6; }
+if ac_fn_c_try_run "$LINENO"; then :
+  ac_cv_c_stack_direction=1
+else
+  ac_cv_c_stack_direction=-1
+fi
+rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
+  conftest.$ac_objext conftest.beam conftest.$ac_ext
+fi
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_stack_direction" >&5
+$as_echo "$ac_cv_c_stack_direction" >&6; }
+cat >>confdefs.h <<_ACEOF
+#define STACK_DIRECTION $ac_cv_c_stack_direction
+_ACEOF
 
-$as_echo "#define HAVE_CPUID 1" >>confdefs.h
 
-   HAVE_CPUID_V=1
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
 fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+if test "x$EMSCRIPTEN" = "x"; then :
+
+  for ac_func in arc4random arc4random_buf
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
 
 fi
+done
+
+  for ac_func in mmap mlock madvise mprotect
+do :
+  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
+ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
+if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+  cat >>confdefs.h <<_ACEOF
+#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+_ACEOF
 
+fi
+done
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if weak symbols are supported" >&5
-$as_echo_n "checking if weak symbols are supported... " >&6; }
-cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for getrandom with a standard API" >&5
+$as_echo_n "checking for getrandom with a standard API... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-__attribute__((weak)) void __dummy(void *x) { }
-void f(void *x) { __dummy(x); }
+#include <stdlib.h>
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif
+#ifdef HAVE_SYS_RANDOM_H
+# include <sys/random.h>
+#endif
 
 int
 main ()
 {
 
+unsigned char buf;
+(void) getrandom((void *) &buf, 1U, 0U);
 
   ;
   return 0;
@@ -15400,73 +19029,77 @@ _ACEOF
 if ac_fn_c_try_link "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
+   for ac_func in getrandom
+do :
+  ac_fn_c_check_func "$LINENO" "getrandom" "ac_cv_func_getrandom"
+if test "x$ac_cv_func_getrandom" = xyes; then :
+  cat >>confdefs.h <<_ACEOF
+#define HAVE_GETRANDOM 1
+_ACEOF
 
-$as_echo "#define HAVE_WEAK_SYMBOLS 1" >>confdefs.h
+fi
+done
 
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
 $as_echo "no" >&6; }
+
 fi
 rm -f core conftest.err conftest.$ac_objext \
     conftest$ac_exeext conftest.$ac_ext
 
-{ $as_echo "$as_me:${as_lineno-$LINENO}: checking if data alignment is required" >&5
-$as_echo_n "checking if data alignment is required... " >&6; }
-aligned_access_required=yes
-case $host_cpu in #(
-  i*86 | x86_64 | powerpc* | s390*) :
-    aligned_access_required=no ;; #(
-  arm*) :
-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for getentropy with a standard API" >&5
+$as_echo_n "checking for getentropy with a standard API... " >&6; }
+  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
-#ifndef __ARM_FEATURE_UNALIGNED
-# error data alignment is required
+#include <stdlib.h>
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif
+#ifdef HAVE_SYS_RANDOM_H
+# include <sys/random.h>
 #endif
 
 int
 main ()
 {
 
+#ifdef __APPLE__
+# error getentropy() is currently disabled on Apple operating systems
+#endif
+
+unsigned char buf;
+(void) getentropy((void *) &buf, 1U);
+
   ;
   return 0;
 }
 _ACEOF
-if ac_fn_c_try_compile "$LINENO"; then :
-  aligned_access_required=no
-fi
-rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
- ;; #(
-  *) :
-     ;;
-esac
-if test "x$aligned_access_required" = "xyes"; then :
+if ac_fn_c_try_link "$LINENO"; then :
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
 $as_echo "yes" >&6; }
-else
-  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
-$as_echo "no" >&6; }
-
-$as_echo "#define CPU_UNALIGNED_ACCESS 1" >>confdefs.h
-
-fi
-
-
-if test "x$EMSCRIPTEN" = "x"; then :
-
-  for ac_func in arc4random arc4random_buf
+   for ac_func in getentropy
 do :
-  as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
-ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
-if eval test \"x\$"$as_ac_var"\" = x"yes"; then :
+  ac_fn_c_check_func "$LINENO" "getentropy" "ac_cv_func_getentropy"
+if test "x$ac_cv_func_getentropy" = xyes; then :
   cat >>confdefs.h <<_ACEOF
-#define `$as_echo "HAVE_$ac_func" | $as_tr_cpp` 1
+#define HAVE_GETENTROPY 1
 _ACEOF
 
 fi
 done
 
-  for ac_func in mmap mlock madvise mprotect explicit_bzero
+else
+  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
+$as_echo "no" >&6; }
+
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+
+fi
+for ac_func in posix_memalign getpid nanosleep
 do :
   as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
 ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
@@ -15478,9 +19111,7 @@ _ACEOF
 fi
 done
 
-
-fi
-for ac_func in posix_memalign getpid
+for ac_func in memset_s explicit_bzero explicit_memset
 do :
   as_ac_var=`$as_echo "ac_cv_func_$ac_func" | $as_tr_sh`
 ac_fn_c_check_func "$LINENO" "$ac_func" "$as_ac_var"
@@ -15499,7 +19130,7 @@ TEST_LDFLAGS=''
 if test "x$EMSCRIPTEN" != "x"; then :
 
   EXEEXT=.js
-  TEST_LDFLAGS='--memory-init-file 0 --pre-js pre.js.inc -s NO_BROWSER=1 -s RESERVED_FUNCTION_POINTERS=8'
+  TEST_LDFLAGS='--memory-init-file 0 --pre-js pre.js.inc -s RESERVED_FUNCTION_POINTERS=8'
 
 fi
 
@@ -15511,17 +19142,20 @@ else
   EMSCRIPTEN_FALSE=
 fi
 
-
- if test "x$NATIVECLIENT" != "x"; then
-  NATIVECLIENT_TRUE=
-  NATIVECLIENT_FALSE='#'
+ if test "x$WASI" != "x"; then
+  WASI_TRUE=
+  WASI_FALSE='#'
 else
-  NATIVECLIENT_TRUE='#'
-  NATIVECLIENT_FALSE=
+  WASI_TRUE='#'
+  WASI_FALSE=
 fi
 
 
 
+$as_echo "#define CONFIGURED 1" >>confdefs.h
+
+
+
 
 enable_win32_dll=yes
 
@@ -15868,7 +19502,13 @@ fi
 
 
 
-ac_config_files="$ac_config_files Makefile src/Makefile src/libsodium/Makefile src/libsodium/include/Makefile src/libsodium/include/sodium/version.h"
+if test "x$ENABLE_CWFLAGS" = "xyes"; then :
+
+  CFLAGS="$CFLAGS $CWFLAGS"
+
+fi
+
+ac_config_files="$ac_config_files Makefile builds/Makefile contrib/Makefile dist-build/Makefile libsodium.pc libsodium-uninstalled.pc msvc-scripts/Makefile src/Makefile src/libsodium/Makefile src/libsodium/include/Makefile src/libsodium/include/sodium/version.h test/default/Makefile test/Makefile"
 
 cat >confcache <<\_ACEOF
 # This file is a shell script that caches the results of configure
@@ -16039,12 +19679,16 @@ if test -z "${AMDEP_TRUE}" && test -z "${AMDEP_FALSE}"; then
   as_fn_error $? "conditional \"AMDEP\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
+if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
+  as_fn_error $? "conditional \"am__fastdepCC\" was never defined.
+Usually this means the macro was only invoked conditionally." "$LINENO" 5
+fi
 if test -z "${MINIMAL_TRUE}" && test -z "${MINIMAL_FALSE}"; then
   as_fn_error $? "conditional \"MINIMAL\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
-if test -z "${am__fastdepCC_TRUE}" && test -z "${am__fastdepCC_FALSE}"; then
-  as_fn_error $? "conditional \"am__fastdepCC\" was never defined.
+if test -z "${VALGRIND_ENABLED_TRUE}" && test -z "${VALGRIND_ENABLED_FALSE}"; then
+  as_fn_error $? "conditional \"VALGRIND_ENABLED\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
 if test -z "${am__fastdepCCAS_TRUE}" && test -z "${am__fastdepCCAS_FALSE}"; then
@@ -16067,8 +19711,8 @@ if test -z "${EMSCRIPTEN_TRUE}" && test -z "${EMSCRIPTEN_FALSE}"; then
   as_fn_error $? "conditional \"EMSCRIPTEN\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
-if test -z "${NATIVECLIENT_TRUE}" && test -z "${NATIVECLIENT_FALSE}"; then
-  as_fn_error $? "conditional \"NATIVECLIENT\" was never defined.
+if test -z "${WASI_TRUE}" && test -z "${WASI_FALSE}"; then
+  as_fn_error $? "conditional \"WASI\" was never defined.
 Usually this means the macro was only invoked conditionally." "$LINENO" 5
 fi
 if test -z "${HAVE_LD_OUTPUT_DEF_TRUE}" && test -z "${HAVE_LD_OUTPUT_DEF_FALSE}"; then
@@ -16472,7 +20116,7 @@ cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
 # report actual input values of CONFIG_FILES etc. instead of their
 # values after options handling.
 ac_log="
-This file was extended by libsodium $as_me 1.0.7, which was
+This file was extended by libsodium $as_me 1.0.18, which was
 generated by GNU Autoconf 2.69.  Invocation command line was
 
   CONFIG_FILES    = $CONFIG_FILES
@@ -16530,7 +20174,7 @@ _ACEOF
 cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
 ac_cs_version="\\
-libsodium config.status 1.0.7
+libsodium config.status 1.0.18
 configured by $0, generated by GNU Autoconf 2.69,
   with options \\"\$ac_cs_config\\"
 
@@ -16638,7 +20282,7 @@ cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
 #
 # INIT-COMMANDS
 #
-AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"
+AMDEP_TRUE="$AMDEP_TRUE" MAKE="${MAKE-make}"
 
 
 # The HP-UX ksh and POSIX shell print the target directory to stdout
@@ -16654,6 +20298,7 @@ enable_shared='`$ECHO "$enable_shared" | $SED "$delay_single_quote_subst"`'
 enable_static='`$ECHO "$enable_static" | $SED "$delay_single_quote_subst"`'
 pic_mode='`$ECHO "$pic_mode" | $SED "$delay_single_quote_subst"`'
 enable_fast_install='`$ECHO "$enable_fast_install" | $SED "$delay_single_quote_subst"`'
+shared_archive_member_spec='`$ECHO "$shared_archive_member_spec" | $SED "$delay_single_quote_subst"`'
 SHELL='`$ECHO "$SHELL" | $SED "$delay_single_quote_subst"`'
 ECHO='`$ECHO "$ECHO" | $SED "$delay_single_quote_subst"`'
 PATH_SEPARATOR='`$ECHO "$PATH_SEPARATOR" | $SED "$delay_single_quote_subst"`'
@@ -16703,10 +20348,13 @@ compiler='`$ECHO "$compiler" | $SED "$delay_single_quote_subst"`'
 GCC='`$ECHO "$GCC" | $SED "$delay_single_quote_subst"`'
 lt_cv_sys_global_symbol_pipe='`$ECHO "$lt_cv_sys_global_symbol_pipe" | $SED "$delay_single_quote_subst"`'
 lt_cv_sys_global_symbol_to_cdecl='`$ECHO "$lt_cv_sys_global_symbol_to_cdecl" | $SED "$delay_single_quote_subst"`'
+lt_cv_sys_global_symbol_to_import='`$ECHO "$lt_cv_sys_global_symbol_to_import" | $SED "$delay_single_quote_subst"`'
 lt_cv_sys_global_symbol_to_c_name_address='`$ECHO "$lt_cv_sys_global_symbol_to_c_name_address" | $SED "$delay_single_quote_subst"`'
 lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='`$ECHO "$lt_cv_sys_global_symbol_to_c_name_address_lib_prefix" | $SED "$delay_single_quote_subst"`'
+lt_cv_nm_interface='`$ECHO "$lt_cv_nm_interface" | $SED "$delay_single_quote_subst"`'
 nm_file_list_spec='`$ECHO "$nm_file_list_spec" | $SED "$delay_single_quote_subst"`'
 lt_sysroot='`$ECHO "$lt_sysroot" | $SED "$delay_single_quote_subst"`'
+lt_cv_truncate_bin='`$ECHO "$lt_cv_truncate_bin" | $SED "$delay_single_quote_subst"`'
 objdir='`$ECHO "$objdir" | $SED "$delay_single_quote_subst"`'
 MAGIC_CMD='`$ECHO "$MAGIC_CMD" | $SED "$delay_single_quote_subst"`'
 lt_prog_compiler_no_builtin_flag='`$ECHO "$lt_prog_compiler_no_builtin_flag" | $SED "$delay_single_quote_subst"`'
@@ -16771,7 +20419,8 @@ finish_cmds='`$ECHO "$finish_cmds" | $SED "$delay_single_quote_subst"`'
 finish_eval='`$ECHO "$finish_eval" | $SED "$delay_single_quote_subst"`'
 hardcode_into_libs='`$ECHO "$hardcode_into_libs" | $SED "$delay_single_quote_subst"`'
 sys_lib_search_path_spec='`$ECHO "$sys_lib_search_path_spec" | $SED "$delay_single_quote_subst"`'
-sys_lib_dlsearch_path_spec='`$ECHO "$sys_lib_dlsearch_path_spec" | $SED "$delay_single_quote_subst"`'
+configure_time_dlsearch_path='`$ECHO "$configure_time_dlsearch_path" | $SED "$delay_single_quote_subst"`'
+configure_time_lt_sys_library_path='`$ECHO "$configure_time_lt_sys_library_path" | $SED "$delay_single_quote_subst"`'
 hardcode_action='`$ECHO "$hardcode_action" | $SED "$delay_single_quote_subst"`'
 enable_dlopen='`$ECHO "$enable_dlopen" | $SED "$delay_single_quote_subst"`'
 enable_dlopen_self='`$ECHO "$enable_dlopen_self" | $SED "$delay_single_quote_subst"`'
@@ -16823,9 +20472,12 @@ CFLAGS \
 compiler \
 lt_cv_sys_global_symbol_pipe \
 lt_cv_sys_global_symbol_to_cdecl \
+lt_cv_sys_global_symbol_to_import \
 lt_cv_sys_global_symbol_to_c_name_address \
 lt_cv_sys_global_symbol_to_c_name_address_lib_prefix \
+lt_cv_nm_interface \
 nm_file_list_spec \
+lt_cv_truncate_bin \
 lt_prog_compiler_no_builtin_flag \
 lt_prog_compiler_pic \
 lt_prog_compiler_wl \
@@ -16861,7 +20513,7 @@ striplib \
 AS; do
     case \`eval \\\\\$ECHO \\\\""\\\\\$\$var"\\\\"\` in
     *[\\\\\\\`\\"\\\$]*)
-      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED \\"\\\$sed_quote_subst\\"\\\`\\\\\\""
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED \\"\\\$sed_quote_subst\\"\\\`\\\\\\"" ## exclude from sc_prohibit_nested_quotes
       ;;
     *)
       eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
@@ -16888,10 +20540,11 @@ postinstall_cmds \
 postuninstall_cmds \
 finish_cmds \
 sys_lib_search_path_spec \
-sys_lib_dlsearch_path_spec; do
+configure_time_dlsearch_path \
+configure_time_lt_sys_library_path; do
     case \`eval \\\\\$ECHO \\\\""\\\\\$\$var"\\\\"\` in
     *[\\\\\\\`\\"\\\$]*)
-      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\""
+      eval "lt_\$var=\\\\\\"\\\`\\\$ECHO \\"\\\$\$var\\" | \\\$SED -e \\"\\\$double_quote_subst\\" -e \\"\\\$sed_quote_subst\\" -e \\"\\\$delay_variable_subst\\"\\\`\\\\\\"" ## exclude from sc_prohibit_nested_quotes
       ;;
     *)
       eval "lt_\$var=\\\\\\"\\\$\$var\\\\\\""
@@ -16900,19 +20553,16 @@ sys_lib_dlsearch_path_spec; do
 done
 
 ac_aux_dir='$ac_aux_dir'
-xsi_shell='$xsi_shell'
-lt_shell_append='$lt_shell_append'
 
-# See if we are running on zsh, and set the options which allow our
+# See if we are running on zsh, and set the options that allow our
 # commands through without removal of \ escapes INIT.
-if test -n "\${ZSH_VERSION+set}" ; then
+if test -n "\${ZSH_VERSION+set}"; then
    setopt NO_GLOB_SUBST
 fi
 
 
     PACKAGE='$PACKAGE'
     VERSION='$VERSION'
-    TIMESTAMP='$TIMESTAMP'
     RM='$RM'
     ofile='$ofile'
 
@@ -16930,10 +20580,18 @@ do
     "depfiles") CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
     "libtool") CONFIG_COMMANDS="$CONFIG_COMMANDS libtool" ;;
     "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
+    "builds/Makefile") CONFIG_FILES="$CONFIG_FILES builds/Makefile" ;;
+    "contrib/Makefile") CONFIG_FILES="$CONFIG_FILES contrib/Makefile" ;;
+    "dist-build/Makefile") CONFIG_FILES="$CONFIG_FILES dist-build/Makefile" ;;
+    "libsodium.pc") CONFIG_FILES="$CONFIG_FILES libsodium.pc" ;;
+    "libsodium-uninstalled.pc") CONFIG_FILES="$CONFIG_FILES libsodium-uninstalled.pc" ;;
+    "msvc-scripts/Makefile") CONFIG_FILES="$CONFIG_FILES msvc-scripts/Makefile" ;;
     "src/Makefile") CONFIG_FILES="$CONFIG_FILES src/Makefile" ;;
     "src/libsodium/Makefile") CONFIG_FILES="$CONFIG_FILES src/libsodium/Makefile" ;;
     "src/libsodium/include/Makefile") CONFIG_FILES="$CONFIG_FILES src/libsodium/include/Makefile" ;;
     "src/libsodium/include/sodium/version.h") CONFIG_FILES="$CONFIG_FILES src/libsodium/include/sodium/version.h" ;;
+    "test/default/Makefile") CONFIG_FILES="$CONFIG_FILES test/default/Makefile" ;;
+    "test/Makefile") CONFIG_FILES="$CONFIG_FILES test/Makefile" ;;
 
   *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
   esac
@@ -17367,29 +21025,35 @@ $as_echo "$as_me: executing $ac_file commands" >&6;}
   # Older Autoconf quotes --file arguments for eval, but not when files
   # are listed without --file.  Let's play safe and only enable the eval
   # if we detect the quoting.
-  case $CONFIG_FILES in
-  *\'*) eval set x "$CONFIG_FILES" ;;
-  *)   set x $CONFIG_FILES ;;
-  esac
+  # TODO: see whether this extra hack can be removed once we start
+  # requiring Autoconf 2.70 or later.
+  case $CONFIG_FILES in #(
+  *\'*) :
+    eval set x "$CONFIG_FILES" ;; #(
+  *) :
+    set x $CONFIG_FILES ;; #(
+  *) :
+     ;;
+esac
   shift
-  for mf
+  # Used to flag and report bootstrapping failures.
+  am_rc=0
+  for am_mf
   do
     # Strip MF so we end up with the name of the file.
-    mf=`echo "$mf" | sed -e 's/:.*$//'`
-    # Check whether this is an Automake generated Makefile or not.
-    # We used to match only the files named 'Makefile.in', but
-    # some people rename them; so instead we look at the file content.
-    # Grep'ing the first line is not enough: some people post-process
-    # each Makefile.in and add a new line on top of each file to say so.
-    # Grep'ing the whole file is not good either: AIX grep has a line
+    am_mf=`$as_echo "$am_mf" | sed -e 's/:.*$//'`
+    # Check whether this is an Automake generated Makefile which includes
+    # dependency-tracking related rules and includes.
+    # Grep'ing the whole file directly is not great: AIX grep has a line
     # limit of 2048, but all sed's we know have understand at least 4000.
-    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
-      dirpart=`$as_dirname -- "$mf" ||
-$as_expr X"$mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
-	 X"$mf" : 'X\(//\)[^/]' \| \
-	 X"$mf" : 'X\(//\)$' \| \
-	 X"$mf" : 'X\(/\)' \| . 2>/dev/null ||
-$as_echo X"$mf" |
+    sed -n 's,^am--depfiles:.*,X,p' "$am_mf" | grep X >/dev/null 2>&1 \
+      || continue
+    am_dirpart=`$as_dirname -- "$am_mf" ||
+$as_expr X"$am_mf" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
+	 X"$am_mf" : 'X\(//\)[^/]' \| \
+	 X"$am_mf" : 'X\(//\)$' \| \
+	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X"$am_mf" |
     sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
 	    s//\1/
 	    q
@@ -17407,106 +21071,99 @@ $as_echo X"$mf" |
 	    q
 	  }
 	  s/.*/./; q'`
-    else
-      continue
-    fi
-    # Extract the definition of DEPDIR, am__include, and am__quote
-    # from the Makefile without running 'make'.
-    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
-    test -z "$DEPDIR" && continue
-    am__include=`sed -n 's/^am__include = //p' < "$mf"`
-    test -z "$am__include" && continue
-    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
-    # Find all dependency output files, they are included files with
-    # $(DEPDIR) in their names.  We invoke sed twice because it is the
-    # simplest approach to changing $(DEPDIR) to its actual value in the
-    # expansion.
-    for file in `sed -n "
-      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
-	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g'`; do
-      # Make sure the directory exists.
-      test -f "$dirpart/$file" && continue
-      fdir=`$as_dirname -- "$file" ||
-$as_expr X"$file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
-	 X"$file" : 'X\(//\)[^/]' \| \
-	 X"$file" : 'X\(//\)$' \| \
-	 X"$file" : 'X\(/\)' \| . 2>/dev/null ||
-$as_echo X"$file" |
-    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
-	    s//\1/
-	    q
-	  }
-	  /^X\(\/\/\)[^/].*/{
+    am_filepart=`$as_basename -- "$am_mf" ||
+$as_expr X/"$am_mf" : '.*/\([^/][^/]*\)/*$' \| \
+	 X"$am_mf" : 'X\(//\)$' \| \
+	 X"$am_mf" : 'X\(/\)' \| . 2>/dev/null ||
+$as_echo X/"$am_mf" |
+    sed '/^.*\/\([^/][^/]*\)\/*$/{
 	    s//\1/
 	    q
 	  }
-	  /^X\(\/\/\)$/{
+	  /^X\/\(\/\/\)$/{
 	    s//\1/
 	    q
 	  }
-	  /^X\(\/\).*/{
+	  /^X\/\(\/\).*/{
 	    s//\1/
 	    q
 	  }
 	  s/.*/./; q'`
-      as_dir=$dirpart/$fdir; as_fn_mkdir_p
-      # echo "creating $dirpart/$file"
-      echo '# dummy' > "$dirpart/$file"
-    done
+    { echo "$as_me:$LINENO: cd "$am_dirpart" \
+      && sed -e '/# am--include-marker/d' "$am_filepart" \
+        | $MAKE -f - am--depfiles" >&5
+   (cd "$am_dirpart" \
+      && sed -e '/# am--include-marker/d' "$am_filepart" \
+        | $MAKE -f - am--depfiles) >&5 2>&5
+   ac_status=$?
+   echo "$as_me:$LINENO: \$? = $ac_status" >&5
+   (exit $ac_status); } || am_rc=$?
   done
+  if test $am_rc -ne 0; then
+    { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
+$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
+as_fn_error $? "Something went wrong bootstrapping makefile fragments
+    for automatic dependency tracking.  Try re-running configure with the
+    '--disable-dependency-tracking' option to at least be able to build
+    the package (albeit without support for automatic dependency tracking).
+See \`config.log' for more details" "$LINENO" 5; }
+  fi
+  { am_dirpart=; unset am_dirpart;}
+  { am_filepart=; unset am_filepart;}
+  { am_mf=; unset am_mf;}
+  { am_rc=; unset am_rc;}
+  rm -f conftest-deps.mk
 }
  ;;
     "libtool":C)
 
-    # See if we are running on zsh, and set the options which allow our
+    # See if we are running on zsh, and set the options that allow our
     # commands through without removal of \ escapes.
-    if test -n "${ZSH_VERSION+set}" ; then
+    if test -n "${ZSH_VERSION+set}"; then
       setopt NO_GLOB_SUBST
     fi
 
-    cfgfile="${ofile}T"
+    cfgfile=${ofile}T
     trap "$RM \"$cfgfile\"; exit 1" 1 2 15
     $RM "$cfgfile"
 
     cat <<_LT_EOF >> "$cfgfile"
 #! $SHELL
-
-# `$ECHO "$ofile" | sed 's%^.*/%%'` - Provide generalized library-building support services.
-# Generated automatically by $as_me ($PACKAGE$TIMESTAMP) $VERSION
+# Generated automatically by $as_me ($PACKAGE) $VERSION
 # Libtool was configured on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
 # NOTE: Changes made to this file will be lost: look at ltmain.sh.
+
+# Provide generalized library-building support services.
+# Written by Gordon Matzigkeit, 1996
+
+# Copyright (C) 2014 Free Software Foundation, Inc.
+# This is free software; see the source for copying conditions.  There is NO
+# warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
+
+# GNU Libtool is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2 of of the License, or
+# (at your option) any later version.
 #
-#   Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2003, 2004, 2005,
-#                 2006, 2007, 2008, 2009, 2010, 2011 Free Software
-#                 Foundation, Inc.
-#   Written by Gordon Matzigkeit, 1996
-#
-#   This file is part of GNU Libtool.
-#
-# GNU Libtool is free software; you can redistribute it and/or
-# modify it under the terms of the GNU General Public License as
-# published by the Free Software Foundation; either version 2 of
-# the License, or (at your option) any later version.
-#
-# As a special exception to the GNU General Public License,
-# if you distribute this file as part of a program or library that
-# is built using GNU Libtool, you may include this file under the
-# same distribution terms that you use for the rest of that program.
+# As a special exception to the GNU General Public License, if you
+# distribute this file as part of a program or library that is built
+# using GNU Libtool, you may include this file under the  same
+# distribution terms that you use for the rest of that program.
 #
-# GNU Libtool is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# GNU Libtool is distributed in the hope that it will be useful, but
+# WITHOUT ANY WARRANTY; without even the implied warranty of
 # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 # GNU General Public License for more details.
 #
 # You should have received a copy of the GNU General Public License
-# along with GNU Libtool; see the file COPYING.  If not, a copy
-# can be downloaded from http://www.gnu.org/licenses/gpl.html, or
-# obtained by writing to the Free Software Foundation, Inc.,
-# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
 
 
 # The names of the tagged configurations supported by this script.
-available_tags=""
+available_tags=''
+
+# Configured defaults for sys_lib_dlsearch_path munging.
+: \${LT_SYS_LIBRARY_PATH="$configure_time_lt_sys_library_path"}
 
 # ### BEGIN LIBTOOL CONFIG
 
@@ -17526,6 +21183,9 @@ pic_mode=$pic_mode
 # Whether or not to optimize for fast installation.
 fast_install=$enable_fast_install
 
+# Shared archive member basename,for filename based shared library versioning on AIX.
+shared_archive_member_spec=$shared_archive_member_spec
+
 # Shell to use when invoking shell scripts.
 SHELL=$lt_SHELL
 
@@ -17643,18 +21303,27 @@ global_symbol_pipe=$lt_lt_cv_sys_global_symbol_pipe
 # Transform the output of nm in a proper C declaration.
 global_symbol_to_cdecl=$lt_lt_cv_sys_global_symbol_to_cdecl
 
+# Transform the output of nm into a list of symbols to manually relocate.
+global_symbol_to_import=$lt_lt_cv_sys_global_symbol_to_import
+
 # Transform the output of nm in a C name address pair.
 global_symbol_to_c_name_address=$lt_lt_cv_sys_global_symbol_to_c_name_address
 
 # Transform the output of nm in a C name address pair when lib prefix is needed.
 global_symbol_to_c_name_address_lib_prefix=$lt_lt_cv_sys_global_symbol_to_c_name_address_lib_prefix
 
+# The name lister interface.
+nm_interface=$lt_lt_cv_nm_interface
+
 # Specify filename containing input files for \$NM.
 nm_file_list_spec=$lt_nm_file_list_spec
 
-# The root where to search for dependent libraries,and in which our libraries should be installed.
+# The root where to search for dependent libraries,and where our libraries should be installed.
 lt_sysroot=$lt_sysroot
 
+# Command to truncate a binary pipe.
+lt_truncate_bin=$lt_lt_cv_truncate_bin
+
 # The name of the directory that contains temporary libtool files.
 objdir=$objdir
 
@@ -17745,8 +21414,11 @@ hardcode_into_libs=$hardcode_into_libs
 # Compile-time system search path for libraries.
 sys_lib_search_path_spec=$lt_sys_lib_search_path_spec
 
-# Run-time system search path for libraries.
-sys_lib_dlsearch_path_spec=$lt_sys_lib_dlsearch_path_spec
+# Detected run-time system search path for libraries.
+sys_lib_dlsearch_path_spec=$lt_configure_time_dlsearch_path
+
+# Explicit LT_SYS_LIBRARY_PATH set during ./configure time.
+configure_time_lt_sys_library_path=$lt_configure_time_lt_sys_library_path
 
 # Whether dlopen is supported.
 dlopen_support=$enable_dlopen
@@ -17842,13 +21514,13 @@ hardcode_libdir_flag_spec=$lt_hardcode_libdir_flag_spec
 # Whether we need a single "-rpath" flag with a separated argument.
 hardcode_libdir_separator=$lt_hardcode_libdir_separator
 
-# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
 # DIR into the resulting binary.
 hardcode_direct=$hardcode_direct
 
-# Set to "yes" if using DIR/libNAME\${shared_ext} during linking hardcodes
+# Set to "yes" if using DIR/libNAME\$shared_ext during linking hardcodes
 # DIR into the resulting binary and the resulting library dependency is
-# "absolute",i.e impossible to change by setting \${shlibpath_var} if the
+# "absolute",i.e impossible to change by setting \$shlibpath_var if the
 # library is relocated.
 hardcode_direct_absolute=$hardcode_direct_absolute
 
@@ -17898,6 +21570,65 @@ hardcode_action=$hardcode_action
 
 # ### END LIBTOOL CONFIG
 
+_LT_EOF
+
+    cat <<'_LT_EOF' >> "$cfgfile"
+
+# ### BEGIN FUNCTIONS SHARED WITH CONFIGURE
+
+# func_munge_path_list VARIABLE PATH
+# -----------------------------------
+# VARIABLE is name of variable containing _space_ separated list of
+# directories to be munged by the contents of PATH, which is string
+# having a format:
+# "DIR[:DIR]:"
+#       string "DIR[ DIR]" will be prepended to VARIABLE
+# ":DIR[:DIR]"
+#       string "DIR[ DIR]" will be appended to VARIABLE
+# "DIRP[:DIRP]::[DIRA:]DIRA"
+#       string "DIRP[ DIRP]" will be prepended to VARIABLE and string
+#       "DIRA[ DIRA]" will be appended to VARIABLE
+# "DIR[:DIR]"
+#       VARIABLE will be replaced by "DIR[ DIR]"
+func_munge_path_list ()
+{
+    case x$2 in
+    x)
+        ;;
+    *:)
+        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'` \$$1\"
+        ;;
+    x:*)
+        eval $1=\"\$$1 `$ECHO $2 | $SED 's/:/ /g'`\"
+        ;;
+    *::*)
+        eval $1=\"\$$1\ `$ECHO $2 | $SED -e 's/.*:://' -e 's/:/ /g'`\"
+        eval $1=\"`$ECHO $2 | $SED -e 's/::.*//' -e 's/:/ /g'`\ \$$1\"
+        ;;
+    *)
+        eval $1=\"`$ECHO $2 | $SED 's/:/ /g'`\"
+        ;;
+    esac
+}
+
+
+# Calculate cc_basename.  Skip known compiler wrappers and cross-prefix.
+func_cc_basename ()
+{
+    for cc_temp in $*""; do
+      case $cc_temp in
+        compile | *[\\/]compile | ccache | *[\\/]ccache ) ;;
+        distcc | *[\\/]distcc | purify | *[\\/]purify ) ;;
+        \-*) ;;
+        *) break;;
+      esac
+    done
+    func_cc_basename_result=`$ECHO "$cc_temp" | $SED "s%.*/%%; s%^$host_alias-%%"`
+}
+
+
+# ### END FUNCTIONS SHARED WITH CONFIGURE
+
 _LT_EOF
 
   case $host_os in
@@ -17906,7 +21637,7 @@ _LT_EOF
 # AIX sometimes has problems with the GCC collect2 program.  For some
 # reason, if we set the COLLECT_NAMES environment variable, the problems
 # vanish in a puff of smoke.
-if test "X${COLLECT_NAMES+set}" != Xset; then
+if test set != "${COLLECT_NAMES+set}"; then
   COLLECT_NAMES=
   export COLLECT_NAMES
 fi
@@ -17915,7 +21646,7 @@ _LT_EOF
   esac
 
 
-ltmain="$ac_aux_dir/ltmain.sh"
+ltmain=$ac_aux_dir/ltmain.sh
 
 
   # We use sed instead of cat because bash on DJGPP gets confused if
@@ -17925,165 +21656,6 @@ ltmain="$ac_aux_dir/ltmain.sh"
   sed '$q' "$ltmain" >> "$cfgfile" \
      || (rm -f "$cfgfile"; exit 1)
 
-  if test x"$xsi_shell" = xyes; then
-  sed -e '/^func_dirname ()$/,/^} # func_dirname /c\
-func_dirname ()\
-{\
-\    case ${1} in\
-\      */*) func_dirname_result="${1%/*}${2}" ;;\
-\      *  ) func_dirname_result="${3}" ;;\
-\    esac\
-} # Extended-shell func_dirname implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_basename ()$/,/^} # func_basename /c\
-func_basename ()\
-{\
-\    func_basename_result="${1##*/}"\
-} # Extended-shell func_basename implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_dirname_and_basename ()$/,/^} # func_dirname_and_basename /c\
-func_dirname_and_basename ()\
-{\
-\    case ${1} in\
-\      */*) func_dirname_result="${1%/*}${2}" ;;\
-\      *  ) func_dirname_result="${3}" ;;\
-\    esac\
-\    func_basename_result="${1##*/}"\
-} # Extended-shell func_dirname_and_basename implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_stripname ()$/,/^} # func_stripname /c\
-func_stripname ()\
-{\
-\    # pdksh 5.2.14 does not do ${X%$Y} correctly if both X and Y are\
-\    # positional parameters, so assign one to ordinary parameter first.\
-\    func_stripname_result=${3}\
-\    func_stripname_result=${func_stripname_result#"${1}"}\
-\    func_stripname_result=${func_stripname_result%"${2}"}\
-} # Extended-shell func_stripname implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_split_long_opt ()$/,/^} # func_split_long_opt /c\
-func_split_long_opt ()\
-{\
-\    func_split_long_opt_name=${1%%=*}\
-\    func_split_long_opt_arg=${1#*=}\
-} # Extended-shell func_split_long_opt implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_split_short_opt ()$/,/^} # func_split_short_opt /c\
-func_split_short_opt ()\
-{\
-\    func_split_short_opt_arg=${1#??}\
-\    func_split_short_opt_name=${1%"$func_split_short_opt_arg"}\
-} # Extended-shell func_split_short_opt implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_lo2o ()$/,/^} # func_lo2o /c\
-func_lo2o ()\
-{\
-\    case ${1} in\
-\      *.lo) func_lo2o_result=${1%.lo}.${objext} ;;\
-\      *)    func_lo2o_result=${1} ;;\
-\    esac\
-} # Extended-shell func_lo2o implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_xform ()$/,/^} # func_xform /c\
-func_xform ()\
-{\
-    func_xform_result=${1%.*}.lo\
-} # Extended-shell func_xform implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_arith ()$/,/^} # func_arith /c\
-func_arith ()\
-{\
-    func_arith_result=$(( $* ))\
-} # Extended-shell func_arith implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_len ()$/,/^} # func_len /c\
-func_len ()\
-{\
-    func_len_result=${#1}\
-} # Extended-shell func_len implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-fi
-
-if test x"$lt_shell_append" = xyes; then
-  sed -e '/^func_append ()$/,/^} # func_append /c\
-func_append ()\
-{\
-    eval "${1}+=\\${2}"\
-} # Extended-shell func_append implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  sed -e '/^func_append_quoted ()$/,/^} # func_append_quoted /c\
-func_append_quoted ()\
-{\
-\    func_quote_for_eval "${2}"\
-\    eval "${1}+=\\\\ \\$func_quote_for_eval_result"\
-} # Extended-shell func_append_quoted implementation' "$cfgfile" > $cfgfile.tmp \
-  && mv -f "$cfgfile.tmp" "$cfgfile" \
-    || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-test 0 -eq $? || _lt_function_replace_fail=:
-
-
-  # Save a `func_append' function call where possible by direct use of '+='
-  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1+="%g' $cfgfile > $cfgfile.tmp \
-    && mv -f "$cfgfile.tmp" "$cfgfile" \
-      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-  test 0 -eq $? || _lt_function_replace_fail=:
-else
-  # Save a `func_append' function call even when '+=' is not available
-  sed -e 's%func_append \([a-zA-Z_]\{1,\}\) "%\1="$\1%g' $cfgfile > $cfgfile.tmp \
-    && mv -f "$cfgfile.tmp" "$cfgfile" \
-      || (rm -f "$cfgfile" && cp "$cfgfile.tmp" "$cfgfile" && rm -f "$cfgfile.tmp")
-  test 0 -eq $? || _lt_function_replace_fail=:
-fi
-
-if test x"$_lt_function_replace_fail" = x":"; then
-  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Unable to substitute extended shell functions in $ofile" >&5
-$as_echo "$as_me: WARNING: Unable to substitute extended shell functions in $ofile" >&2;}
-fi
-
-
    mv -f "$cfgfile" "$ofile" ||
     (rm -f "$ofile" && cp "$cfgfile" "$ofile" && rm -f "$cfgfile")
   chmod +x "$ofile"
diff --git a/libsodium/configure.ac b/libsodium/configure.ac
index 3dccac8..9e2de27 100644
--- a/libsodium/configure.ac
+++ b/libsodium/configure.ac
@@ -1,5 +1,5 @@
 AC_PREREQ([2.65])
-AC_INIT([libsodium],[1.0.7],
+AC_INIT([libsodium],[1.0.18],
   [https://github.com/jedisct1/libsodium/issues],
   [libsodium],
   [https://github.com/jedisct1/libsodium])
@@ -13,13 +13,11 @@ AM_MAINTAINER_MODE
 AM_DEP_TRACK
 
 AC_SUBST(VERSION)
-ISODATE=`date +%Y-%m-%d`
-AC_SUBST(ISODATE)
 
-SODIUM_LIBRARY_VERSION_MAJOR=9
-SODIUM_LIBRARY_VERSION_MINOR=0
-DLL_VERSION=8
-SODIUM_LIBRARY_VERSION=18:0:0
+SODIUM_LIBRARY_VERSION_MAJOR=10
+SODIUM_LIBRARY_VERSION_MINOR=3
+DLL_VERSION=24
+SODIUM_LIBRARY_VERSION=26:0:3
 #                       | | |
 #                +------+ | +---+
 #                |        |     |
@@ -36,12 +34,14 @@ AC_SUBST(SODIUM_LIBRARY_VERSION_MINOR)
 AC_SUBST(SODIUM_LIBRARY_VERSION)
 AC_SUBST(DLL_VERSION)
 
+AC_LANG_ASSERT(C)
 LX_CFLAGS=${CFLAGS-NONE}
+PKGCONFIG_LIBS_PRIVATE=""
 
 dnl Path check
 
-AS_IF([test pwd | fgrep ' ' > /dev/null 2>&1],
-  [AC_MSG_WARN([The build directory contains whitespaces - This can cause tests/installation to fail due to limitations of some libtool versions])]
+AS_IF([pwd | fgrep ' ' > /dev/null 2>&1],
+  [AC_MSG_ERROR([The build directory contains whitespaces - This can cause tests/installation to fail due to limitations of some libtool versions])]
 )
 
 dnl Switches
@@ -60,7 +60,7 @@ AC_ARG_ENABLE(ssp,
 ])
 
 AC_ARG_ENABLE(asm,
-[AS_HELP_STRING(--disable-asm,Disable assembly implementations)],
+[AS_HELP_STRING(--disable-asm,[Do not compile assembly code -- As a side effect, this disables CPU-specific implementations on non-Windows platforms. Only for use with targets such as WebAssembly.])],
 [
   AS_IF([test "x$enableval" = "xno"], [
     enable_asm="no"
@@ -72,9 +72,15 @@ AC_ARG_ENABLE(asm,
   enable_asm="yes"
 ])
 
-AS_IF([test "x$EMSCRIPTEN" != "x"],[
-  enable_asm="no"
-  AC_MSG_WARN([compiling to javascript - asm implementations disabled])
+AS_IF([test "x$EMSCRIPTEN" != "x"], [
+  AX_CHECK_COMPILE_FLAG([-s ASSERTIONS=0], [
+    enable_asm="no"
+    AC_MSG_WARN([compiling to JavaScript - asm implementations disabled])
+  ], [
+    AC_MSG_WARN([EMSCRIPTEN environment variable defined, but emcc doesn't appear to be used - Assuming compilation to native code])
+    CFLAGS="$CFLAGS -U__EMSCRIPTEN__"
+    unset EMSCRIPTEN
+  ])
 ])
 
 AC_ARG_ENABLE(pie,
@@ -97,6 +103,8 @@ AC_ARG_ENABLE(minimal,
 [
   AS_IF([test "x$enableval" = "xyes"], [
     enable_minimal="yes"
+    SODIUM_LIBRARY_MINIMAL_DEF="#define SODIUM_LIBRARY_MINIMAL 1"
+    AC_DEFINE([MINIMAL], [1], [Define for a minimal build, without deprecated functions and functions that high-level APIs depend on])
   ], [
     enable_minimal="no"
   ])
@@ -105,6 +113,34 @@ AC_ARG_ENABLE(minimal,
   enable_minimal="no"
 ])
 AM_CONDITIONAL([MINIMAL], [test x$enable_minimal = xyes])
+AC_SUBST(SODIUM_LIBRARY_MINIMAL_DEF)
+
+AC_ARG_WITH(pthreads, AC_HELP_STRING([--with-pthreads],
+ [use pthreads library, or --without-pthreads to disable threading support.]),
+ [ ], [withval="yes"])
+
+AS_IF([test "x$withval" = "xyes"], [
+  AX_PTHREAD([
+    AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+        #include <pthread.h>
+      ]], [[
+        pthread_mutex_t mutex;
+
+        pthread_mutex_lock(&mutex);
+        pthread_mutex_unlock(&mutex)
+      ]]
+    )], [
+        AC_DEFINE([HAVE_PTHREAD], [1], [Define if you have POSIX threads libraries and header files])
+        with_threads="yes"
+        LIBS="$PTHREAD_LIBS $LIBS"
+        PKGCONFIG_LIBS_PRIVATE="$PTHREAD_LIBS $PTHREAD_CFLAGS $PKGCONFIG_LIBS_PRIVATE"
+        CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
+        CC="$PTHREAD_CC"
+      ])
+    ],
+    [ AC_MSG_NOTICE(pthread mutexes are not available) ]
+  )
+], [with_threads="no"])
 
 AC_ARG_WITH(safecode,
 [AS_HELP_STRING(--with-safecode,For maintainers only - please do not use)],
@@ -117,6 +153,25 @@ AC_ARG_WITH(safecode,
   ])
 ])
 
+AC_ARG_WITH(ctgrind,
+[AS_HELP_STRING(--with-ctgrind,For maintainers only - please do not use)],
+[AS_IF([test "x$withval" = "xyes"], [
+    AC_CHECK_LIB(ctgrind, ct_poison)
+  ])
+])
+
+AC_ARG_ENABLE(retpoline,
+[AS_HELP_STRING(--enable-retpoline,Use return trampolines for indirect calls)],
+[AS_IF([test "x$enableval" = "xyes"], [
+  AX_CHECK_COMPILE_FLAG([-mindirect-branch=thunk-inline],
+    [CFLAGS="$CFLAGS -mindirect-branch=thunk-inline"],
+    [AX_CHECK_COMPILE_FLAG([-mretpoline], [CFLAGS="$CFLAGS -mretpoline"])]
+  )
+  AX_CHECK_COMPILE_FLAG([-mindirect-branch-register])
+  ])
+])
+
+ENABLE_CWFLAGS=no
 AC_ARG_ENABLE(debug,
 [AS_HELP_STRING(--enable-debug,For maintainers only - please do not use)],
 [
@@ -129,9 +184,10 @@ AC_ARG_ENABLE(debug,
           [-g*], [ ],
           [*], [AS_VAR_APPEND([nxflags], [" $flag"])])
       done
-      CFLAGS="$nxflags -O0 -g3"
+      CFLAGS="$nxflags -O -g3"
     ])
-    CPPFLAGS="$CPPFLAGS -DDEBUG=1"
+    ENABLE_CWFLAGS=yes
+    CPPFLAGS="$CPPFLAGS -DDEBUG=1 -U_FORTIFY_SOURCE"
   ])
 ])
 
@@ -139,19 +195,27 @@ AC_ARG_ENABLE(opt,
 [AS_HELP_STRING(--enable-opt,Optimize for the native CPU - The resulting library will be faster but not portable)],
 [
   AS_IF([test "x$enableval" = "xyes"], [
-    CFLAGS="$CFLAGS -flto -march=native"
-    LDFLAGS="$LDFLAGS -flto -march=native"])
+    AX_CHECK_COMPILE_FLAG([-Ofast], [CFLAGS="$CFLAGS -Ofast"])
+    AX_CHECK_COMPILE_FLAG([-ftree-vectorize], [CFLAGS="$CFLAGS -ftree-vectorize"])
+    AX_CHECK_COMPILE_FLAG([-ftree-slp-vectorize], [CFLAGS="$CFLAGS -ftree-slp-vectorize"])
+    AX_CHECK_COMPILE_FLAG([-fomit-frame-pointer], [CFLAGS="$CFLAGS -fomit-frame-pointer"])
+    AX_CHECK_COMPILE_FLAG([-march=native], [CFLAGS="$CFLAGS -march=native"])
+  ])
 ])
 
-AC_SUBST([MAINT])
+AC_SUBST(MAINT)
+AC_SUBST(PKGCONFIG_LIBS_PRIVATE)
+
+AX_VALGRIND_CHECK
 
 dnl Checks
 
 AC_PROG_CC_C99
 AM_PROG_AS
 AC_USE_SYSTEM_EXTENSIONS
+AC_C_VARARRAYS
 
-AC_CHECK_DEFINE([__native_client__], [NATIVECLIENT="yes"], [])
+AC_CHECK_DEFINE([__wasi__], [WASI="yes"], [])
 
 AC_CHECK_DEFINE([_FORTIFY_SOURCE], [], [
   AX_CHECK_COMPILE_FLAG([-D_FORTIFY_SOURCE=2],
@@ -162,19 +226,14 @@ AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],
   [CFLAGS="$CFLAGS -fvisibility=hidden"])
 
 AS_CASE([$host_os], [cygwin*|mingw*|msys|pw32*|cegcc*], [ ], [
-  AX_CHECK_COMPILE_FLAG([-fPIC], [
-    AX_CHECK_LINK_FLAG([-fPIC],
-      [CFLAGS="$CFLAGS -fPIC"]
-    )
-  ])
+  AX_CHECK_COMPILE_FLAG([-fPIC], [CFLAGS="$CFLAGS -fPIC"])
 ])
 
 AS_IF([test "$enable_pie" != "no"],[
   AX_CHECK_COMPILE_FLAG([-fPIE], [
-    AX_CHECK_LINK_FLAG([-fPIE],
-      [AX_CHECK_LINK_FLAG([-pie],
-        [CFLAGS="$CFLAGS -fPIE"
-         LDFLAGS="$LDFLAGS -pie"])
+    AX_CHECK_LINK_FLAG([-pie], [
+      [CFLAGS="$CFLAGS -fPIE"
+       LDFLAGS="$LDFLAGS -pie"]
     ])
   ])
 ])
@@ -184,6 +243,22 @@ AX_CHECK_COMPILE_FLAG([-fno-strict-overflow], [CFLAGS="$CFLAGS -fno-strict-overf
   AX_CHECK_COMPILE_FLAG([-fwrapv], [CFLAGS="$CFLAGS -fwrapv"])
 ])
 
+AS_IF([test "$GCC" = "yes" ], [
+  AS_CASE([$host_cpu],
+    [i?86|amd64|x86_64], [
+      AC_COMPILE_IFELSE(
+        [AC_LANG_SOURCE([
+#if !defined(__clang__) && defined(__GNUC__) && ((__GNUC__ << 8) | __GNUC_MINOR__) < 0x403
+# error old gcc
+#endif
+int main(void) { return 0; }
+         ])],,[
+          AX_CHECK_COMPILE_FLAG([-flax-vector-conversions], [CFLAGS="$CFLAGS -flax-vector-conversions"])
+        ])
+      ]
+    )
+  ])
+
 LIBTOOL_OLD_FLAGS="$LIBTOOL_EXTRA_FLAGS"
 LIBTOOL_EXTRA_FLAGS="$LIBTOOL_EXTRA_FLAGS -version-info $SODIUM_LIBRARY_VERSION"
 AC_ARG_ENABLE(soname-versions,
@@ -198,13 +273,21 @@ AC_ARG_ENABLE(soname-versions,
 AS_CASE([$host_os],
   [cygwin*|mingw*|msys|pw32*|cegcc*], [
     AX_CHECK_LINK_FLAG([-Wl,--dynamicbase], [LDFLAGS="$LDFLAGS -Wl,--dynamicbase"])
+    AX_CHECK_LINK_FLAG([-Wl,--high-entropy-va], [LDFLAGS="$LDFLAGS -Wl,--high-entropy-va"])
     AX_CHECK_LINK_FLAG([-Wl,--nxcompat], [LDFLAGS="$LDFLAGS -Wl,--nxcompat"])
   ])
 
+AS_CASE([$host_os],
+  [cygwin*|mingw*|msys|pw32*|cegcc*], [
+    AX_CHECK_COMPILE_FLAG([-fno-asynchronous-unwind-tables], [
+      [CFLAGS="$CFLAGS -fno-asynchronous-unwind-tables"]
+    ])
+])
+
 AS_IF([test "x$enable_ssp" != "xno"],[
 
 AS_CASE([$host_os],
-  [cygwin*|mingw*|msys|pw32*|cegcc*|*aix*|*sunos*|*solaris*], [ ],
+  [cygwin*|mingw*|msys|pw32*|cegcc*|haiku|none], [ ],
   [*], [
     AX_CHECK_COMPILE_FLAG([-fstack-protector], [
       AX_CHECK_LINK_FLAG([-fstack-protector],
@@ -214,20 +297,15 @@ AS_CASE([$host_os],
   ])
 ])
 
-AX_CHECK_COMPILE_FLAG([-Winit-self], [CFLAGS="$CFLAGS -Winit-self"])
-AX_CHECK_COMPILE_FLAG([-Wwrite-strings], [CFLAGS="$CFLAGS -Wwrite-strings"])
-AX_CHECK_COMPILE_FLAG([-Wdiv-by-zero], [CFLAGS="$CFLAGS -Wdiv-by-zero"])
-AX_CHECK_COMPILE_FLAG([-Wsometimes-uninitialized], [CFLAGS="$CFLAGS -Wsometimes-uninitialized"])
-
 AC_ARG_VAR([CWFLAGS], [define to compilation flags for generating extra warnings])
 
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wall], [CWFLAGS="$CWFLAGS -Wall"])
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wextra], [CWFLAGS="$CWFLAGS -Wextra"])
+AX_CHECK_COMPILE_FLAG([$CFLAGS -Wall], [CWFLAGS="$CFLAGS -Wall"])
+AX_CHECK_COMPILE_FLAG([$CFLAGS -Wextra], [CWFLAGS="$CFLAGS -Wextra"])
 
 AC_MSG_CHECKING(for clang)
 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]], [[
 #ifndef __clang__
-be sad
+#error Not clang
 #endif
 ]])],
   [AC_MSG_RESULT(yes)
@@ -238,28 +316,46 @@ be sad
 ])
 
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wbad-function-cast], [CWFLAGS="$CWFLAGS -Wbad-function-cast"])
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wcast-align], [CWFLAGS="$CWFLAGS -Wcast-align"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wcast-qual], [CWFLAGS="$CWFLAGS -Wcast-qual"])
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wchar-subscripts], [CWFLAGS="$CWFLAGS -Wchar-subscripts"])
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wcomment], [CWFLAGS="$CWFLAGS -Wcomment"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wdiv-by-zero], [CWFLAGS="$CWFLAGS -Wdiv-by-zero"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wduplicated-branches], [CWFLAGS="$CWFLAGS -Wduplicated-branches"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wduplicated-cond], [CWFLAGS="$CWFLAGS -Wduplicated-cond"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wfloat-equal], [CWFLAGS="$CWFLAGS -Wfloat-equal"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wformat=2], [CWFLAGS="$CWFLAGS -Wformat=2"])
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wimplicit], [CWFLAGS="$CWFLAGS -Wimplicit"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wlogical-op], [CWFLAGS="$CWFLAGS -Wlogical-op"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wmaybe-uninitialized], [CWFLAGS="$CWFLAGS -Wmaybe-uninitialized"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wmisleading-indentation], [CWFLAGS="$CWFLAGS -Wmisleading-indentation"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wmissing-declarations], [CWFLAGS="$CWFLAGS -Wmissing-declarations"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wmissing-prototypes], [CWFLAGS="$CWFLAGS -Wmissing-prototypes"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wnested-externs], [CWFLAGS="$CWFLAGS -Wnested-externs"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wno-type-limits], [CWFLAGS="$CWFLAGS -Wno-type-limits"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wno-unknown-pragmas], [CWFLAGS="$CWFLAGS -Wno-unknown-pragmas"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wnormalized=id], [CWFLAGS="$CWFLAGS -Wnormalized=id"])
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Woverride-init], [CWFLAGS="$CWFLAGS -Woverride-init"])
-AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wparentheses], [CWFLAGS="$CWFLAGS -Wparentheses"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wnull-dereference], [CWFLAGS="$CWFLAGS -Wnull-dereference"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wold-style-declaration], [CWFLAGS="$CWFLAGS -Wold-style-declaration"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wpointer-arith], [CWFLAGS="$CWFLAGS -Wpointer-arith"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wredundant-decls], [CWFLAGS="$CWFLAGS -Wredundant-decls"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wrestrict], [CWFLAGS="$CWFLAGS -Wrestrict"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wshorten-64-to-32], [CWFLAGS="$CWFLAGS -Wshorten-64-to-32"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wsometimes-uninitialized], [CWFLAGS="$CWFLAGS -Wsometimes-uninitialized"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wstrict-prototypes], [CWFLAGS="$CWFLAGS -Wstrict-prototypes"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wswitch-enum], [CWFLAGS="$CWFLAGS -Wswitch-enum"])
 AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wvariable-decl], [CWFLAGS="$CWFLAGS -Wvariable-decl"])
+AX_CHECK_COMPILE_FLAG([$CWFLAGS -Wwrite-strings], [CWFLAGS="$CWFLAGS -Wwrite-strings"])
 
 AX_CHECK_LINK_FLAG([-Wl,-z,relro], [LDFLAGS="$LDFLAGS -Wl,-z,relro"])
 AX_CHECK_LINK_FLAG([-Wl,-z,now], [LDFLAGS="$LDFLAGS -Wl,-z,now"])
 AX_CHECK_LINK_FLAG([-Wl,-z,noexecstack], [LDFLAGS="$LDFLAGS -Wl,-z,noexecstack"])
 
+AX_CHECK_CATCHABLE_SEGV
+AX_CHECK_CATCHABLE_ABRT
+
+AS_IF([test "x$with_threads" = "xyes"], [
+  AX_TLS([AC_MSG_RESULT(thread local storage is supported)
+          AX_CHECK_COMPILE_FLAG([-ftls-model=local-dynamic],
+            [CFLAGS="$CFLAGS -ftls-model=local-dynamic"])],
+         [AC_MSG_RESULT(thread local storage is not supported)]) ])
+
 LT_INIT
 AC_SUBST(LIBTOOL_DEPS)
 
@@ -268,11 +364,11 @@ AC_CHECK_TOOL([AR], [ar], [ar])
 
 dnl Checks for headers
 
-AS_IF([test "x$EMSCRIPTEN" = "x"],[
+AS_IF([test "x$EMSCRIPTEN" = "x"], [
 
-  AC_MSG_CHECKING(for MMX instructions set)
   oldcflags="$CFLAGS"
   AX_CHECK_COMPILE_FLAG([-mmmx], [CFLAGS="$CFLAGS -mmmx"])
+  AC_MSG_CHECKING(for MMX instructions set)
   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 #pragma GCC target("mmx")
 #include <mmintrin.h>
@@ -283,16 +379,17 @@ AS_IF([test "x$EMSCRIPTEN" = "x"],[
     [AC_MSG_RESULT(no)])
   CFLAGS="$oldcflags"
 
-  AC_MSG_CHECKING(for SSE2 instructions set)
   oldcflags="$CFLAGS"
   AX_CHECK_COMPILE_FLAG([-msse2], [CFLAGS="$CFLAGS -msse2"])
+  AC_MSG_CHECKING(for SSE2 instructions set)
   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
 #pragma GCC target("sse2")
 #ifndef __SSE2__
 # define __SSE2__
 #endif
 #include <emmintrin.h>
-]], [[ __m128d x = _mm_setzero_pd(); ]])],
+]], [[ __m128d x = _mm_setzero_pd();
+       __m128i z = _mm_srli_epi64(_mm_setzero_si128(), 26); ]])],
     [AC_MSG_RESULT(yes)
      AC_DEFINE([HAVE_EMMINTRIN_H], [1], [sse2 is available])
      AX_CHECK_COMPILE_FLAG([-msse2], [CFLAGS_SSE2="-msse2"])],
@@ -352,6 +449,65 @@ AS_IF([test "x$EMSCRIPTEN" = "x"],[
     [AC_MSG_RESULT(no)])
   CFLAGS="$oldcflags"
 
+  oldcflags="$CFLAGS"
+  AX_CHECK_COMPILE_FLAG([-mavx2], [CFLAGS="$CFLAGS -mavx2"])
+  AC_MSG_CHECKING(for AVX2 instructions set)
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#pragma GCC target("avx2")
+#include <immintrin.h>
+]], [[
+__m256 x = _mm256_set1_ps(3.14);
+__m256 y = _mm256_permutevar8x32_ps(x, _mm256_set1_epi32(42));
+return _mm256_movemask_ps(_mm256_cmp_ps(x, y, _CMP_NEQ_OQ));
+]])],
+    [AC_MSG_RESULT(yes)
+     AC_DEFINE([HAVE_AVX2INTRIN_H], [1], [AVX2 is available])
+     AX_CHECK_COMPILE_FLAG([-mavx2], [CFLAGS_AVX2="-mavx2"])
+     AC_MSG_CHECKING(if _mm256_broadcastsi128_si256 is correctly defined)
+     AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#pragma GCC target("avx2")
+#include <immintrin.h>
+     ]], [[ __m256i y = _mm256_broadcastsi128_si256(_mm_setzero_si128()); ]])],
+       [AC_MSG_RESULT(yes)],
+       [AC_MSG_RESULT(no)
+        AC_DEFINE([_mm256_broadcastsi128_si256], [_mm_broadcastsi128_si256],
+                  [Define to the local name of _mm256_broadcastsi128_si256])])
+     ],
+    [AC_MSG_RESULT(no)])
+  CFLAGS="$oldcflags"
+
+  oldcflags="$CFLAGS"
+  AX_CHECK_COMPILE_FLAG([-mavx512f], [CFLAGS="$CFLAGS -mavx512f"])
+  AC_MSG_CHECKING(for AVX512F instructions set)
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#pragma GCC target("avx512f")
+#include <immintrin.h>
+]], [[
+
+#ifndef __AVX512F__
+# error No AVX512 support
+#elif defined(__clang__)
+# if __clang_major__ < 4
+#  error Compiler AVX512 support may be broken
+# endif
+#elif defined(__GNUC__)
+# if __GNUC__ < 6
+#  error Compiler AVX512 support may be broken
+# endif
+#endif
+
+__m512i x = _mm512_setzero_epi32();
+__m512i y = _mm512_permutexvar_epi64(_mm512_setr_epi64(0, 1, 4, 5, 2, 3, 6, 7), x);
+]])],
+    [AC_MSG_RESULT(yes)
+     AC_DEFINE([HAVE_AVX512FINTRIN_H], [1], [AVX512F is available])
+     AX_CHECK_COMPILE_FLAG([-mavx512f], [CFLAGS_AVX512F="-mavx512f"])],
+    [AC_MSG_RESULT(no)
+     AX_CHECK_COMPILE_FLAG([$CFLAGS -mno-avx512f],
+       [CFLAGS="$CFLAGS -mno-avx512f"])
+    ])
+  CFLAGS="$oldcflags"
+
   oldcflags="$CFLAGS"
   AX_CHECK_COMPILE_FLAG([-maes], [CFLAGS="$CFLAGS -maes"])
   AX_CHECK_COMPILE_FLAG([-mpclmul], [CFLAGS="$CFLAGS -mpclmul"])
@@ -370,6 +526,20 @@ AS_IF([test "x$EMSCRIPTEN" = "x"],[
     [AC_MSG_RESULT(no)])
   CFLAGS="$oldcflags"
 
+  oldcflags="$CFLAGS"
+  AX_CHECK_COMPILE_FLAG([-mrdrnd], [CFLAGS="$CFLAGS -mrdrnd"])
+  AC_MSG_CHECKING(for RDRAND)
+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
+#pragma GCC target("rdrnd")
+#include <immintrin.h>
+]], [[ unsigned long long x; _rdrand64_step(&x); ]])],
+    [AC_MSG_RESULT(yes)
+     AC_DEFINE([HAVE_RDRAND], [1], [rdrand is available])
+     AX_CHECK_COMPILE_FLAG([-mrdrnd], [CFLAGS_RDRAND="-mrdrnd"])
+     ],
+    [AC_MSG_RESULT(no)])
+  CFLAGS="$oldcflags"
+
 ])
 
 AC_SUBST(CFLAGS_MMX)
@@ -377,19 +547,34 @@ AC_SUBST(CFLAGS_SSE2)
 AC_SUBST(CFLAGS_SSE3)
 AC_SUBST(CFLAGS_SSSE3)
 AC_SUBST(CFLAGS_SSE41)
+AC_SUBST(CFLAGS_AVX)
+AC_SUBST(CFLAGS_AVX2)
+AC_SUBST(CFLAGS_AVX512F)
 AC_SUBST(CFLAGS_AESNI)
 AC_SUBST(CFLAGS_PCLMUL)
+AC_SUBST(CFLAGS_RDRAND)
 
-AC_CHECK_HEADERS([sys/mman.h])
+AC_CHECK_HEADERS([sys/mman.h sys/random.h intrin.h])
+
+AC_MSG_CHECKING([if _xgetbv() is available])
+AC_LINK_IFELSE(
+  [AC_LANG_PROGRAM([[ #include <intrin.h> ]], [[ (void) _xgetbv(0) ]])],
+  [AC_MSG_RESULT(yes)
+   AC_DEFINE([HAVE__XGETBV], [1], [_xgetbv() is available])],
+  [AC_MSG_RESULT(no)])
 
 dnl Checks for typedefs, structures, and compiler characteristics.
 
 AC_C_INLINE
+AS_CASE([$host_cpu],
+  [i?86|amd64|x86_64],
+    [ac_cv_c_bigendian=no]
+)
 AC_C_BIGENDIAN(
   AC_DEFINE(NATIVE_BIG_ENDIAN, 1, [machine is bigendian]),
   AC_DEFINE(NATIVE_LITTLE_ENDIAN, 1, [machine is littleendian]),
-  AC_MSG_ERROR([unknown endianess]),
-  AC_MSG_ERROR([universal endianess is not supported - compile separately and use lipo(1)])
+  AC_MSG_ERROR([unknown endianness]),
+  AC_MSG_ERROR([universal endianness is not supported - compile separately and use lipo(1)])
 )
 
 AC_MSG_CHECKING(whether __STDC_LIMIT_MACROS is required)
@@ -405,6 +590,18 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
    CPPFLAGS="$CPPFLAGS -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS"
 ])
 
+AC_MSG_CHECKING(whether we can use inline asm code)
+AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+]], [[
+int a = 42;
+int *pnt = &a;
+__asm__ __volatile__ ("" : : "r"(pnt) : "memory");
+]])],
+  [AC_MSG_RESULT(yes)
+   AC_DEFINE([HAVE_INLINE_ASM], [1], [inline asm code can be used])]
+  [AC_MSG_RESULT(no)]
+)
+
 HAVE_AMD64_ASM_V=0
 AS_IF([test "$enable_asm" != "no"],[
   AC_MSG_CHECKING(whether we can use x86_64 asm code)
@@ -460,18 +657,17 @@ AC_SUBST(HAVE_AVX_ASM_V)
 AC_MSG_CHECKING(for 128-bit arithmetic)
 HAVE_TI_MODE_V=0
 AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
-#if !defined(__GNUC__) && !defined(__SIZEOF_INT128__)
+#if !defined(__clang__) && !defined(__GNUC__) && !defined(__SIZEOF_INT128__)
 # error mode(TI) is a gcc extension, and __int128 is not available
 #endif
-#if defined(__clang__) && !defined(__x86_64__)
+#if defined(__clang__) && !defined(__x86_64__) && !defined(__aarch64__)
 # error clang does not properly handle the 128-bit type on 32-bit systems
 #endif
 #ifndef NATIVE_LITTLE_ENDIAN
 # error libsodium currently expects a little endian CPU for the 128-bit type
 #endif
 #ifdef __EMSCRIPTEN__
-# error emscripten currently supports only shift operations on integers \
-#       larger than 64 bits
+# error emscripten currently doesn't support some operations on integers larger than 64 bits
 #endif
 #include <stddef.h>
 #include <stdint.h>
@@ -482,6 +678,8 @@ typedef unsigned uint128_t __attribute__((mode(TI)));
 #endif
 void fcontract(uint128_t *t) {
   *t += 0x8000000000000 - 1;
+  *t *= *t;
+  *t >>= 84;
 }
 ]], [[
 (void) fcontract;
@@ -510,8 +708,52 @@ __asm__ __volatile__ ("xchgl %%ebx, %k1; cpuid; xchgl %%ebx, %k1" :
   ])
 AC_SUBST(HAVE_CPUID_V)
 
+asm_hide_symbol="unsupported"
+AS_IF([test "$enable_asm" != "no"],[
+  AC_MSG_CHECKING(if the .private_extern asm directive is supported)
+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[ ]], [[
+__asm__ __volatile__ (".private_extern dummy_symbol \n"
+                      ".private_extern _dummy_symbol \n"
+                      ".globl dummy_symbol \n"
+                      ".globl _dummy_symbol \n"
+                      "dummy_symbol: \n"
+                      "_dummy_symbol: \n"
+                      "    nop \n"
+);
+  ]])],
+  [AC_MSG_RESULT(yes)
+   asm_hide_symbol=".private_extern"],
+  [AC_MSG_RESULT(no)])
+
+  AC_MSG_CHECKING(if the .hidden asm directive is supported)
+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[ ]], [[
+__asm__ __volatile__ (".hidden dummy_symbol \n"
+                      ".hidden _dummy_symbol \n"
+                      ".globl dummy_symbol \n"
+                      ".globl _dummy_symbol \n"
+                      "dummy_symbol: \n"
+                      "_dummy_symbol: \n"
+                      "    nop \n"
+);
+  ]])],
+  [AC_MSG_RESULT(yes)
+   AS_IF([test "$asm_hide_symbol" = "unsupported"],
+          [asm_hide_symbol=".hidden"],
+          [AC_MSG_NOTICE([unable to reliably tag symbols as private])
+           asm_hide_symbol="unsupported"])
+  ],
+  [AC_MSG_RESULT(no)])
+
+  AS_IF([test "$asm_hide_symbol" != "unsupported"],[
+    AC_DEFINE_UNQUOTED([ASM_HIDE_SYMBOL], [$asm_hide_symbol], [directive to hide symbols])
+  ])
+])
+
 AC_MSG_CHECKING(if weak symbols are supported)
 AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+#if !defined(__ELF__) && !defined(__APPLE_CC__)
+# error Support for weak symbols may not be available
+#endif
 __attribute__((weak)) void __dummy(void *x) { }
 void f(void *x) { __dummy(x); }
 ]], [[ ]]
@@ -523,7 +765,7 @@ void f(void *x) { __dummy(x); }
 AC_MSG_CHECKING(if data alignment is required)
 aligned_access_required=yes
 AS_CASE([$host_cpu],
-  [i*86 | x86_64 | powerpc* | s390*],
+  [i?86|amd64|x86_64|powerpc*|s390*],
     [aligned_access_required=no],
   [arm*],
     [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[
@@ -537,25 +779,79 @@ AS_IF([test "x$aligned_access_required" = "xyes"],
   [AC_MSG_RESULT(no)
    AC_DEFINE([CPU_UNALIGNED_ACCESS], [1], [unaligned memory access is supported])])
 
+AC_MSG_CHECKING(if atomic operations are supported)
+AC_LINK_IFELSE([AC_LANG_PROGRAM([[ ]], [[
+static volatile int _sodium_lock;
+__sync_lock_test_and_set(&_sodium_lock, 1);
+__sync_lock_release(&_sodium_lock);
+]]
+)],
+[AC_MSG_RESULT(yes)
+ AC_DEFINE([HAVE_ATOMIC_OPS], [1], [atomic operations are supported])],
+[AC_MSG_RESULT(no)])
+
 dnl Checks for functions and headers
 
+AC_FUNC_ALLOCA
 AS_IF([test "x$EMSCRIPTEN" = "x"],[
   AC_CHECK_FUNCS([arc4random arc4random_buf])
-  AC_CHECK_FUNCS([mmap mlock madvise mprotect explicit_bzero])
+  AC_CHECK_FUNCS([mmap mlock madvise mprotect])
+
+  AC_MSG_CHECKING(for getrandom with a standard API)
+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+#include <stdlib.h>
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif
+#ifdef HAVE_SYS_RANDOM_H
+# include <sys/random.h>
+#endif
+]], [[
+unsigned char buf;
+(void) getrandom((void *) &buf, 1U, 0U);
+  ]])],
+  [AC_MSG_RESULT(yes)
+   AC_CHECK_FUNCS([getrandom])],
+  [AC_MSG_RESULT(no)
+  ])
+
+  AC_MSG_CHECKING(for getentropy with a standard API)
+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[
+#include <stdlib.h>
+#ifdef HAVE_UNISTD_H
+# include <unistd.h>
+#endif
+#ifdef HAVE_SYS_RANDOM_H
+# include <sys/random.h>
+#endif
+]], [[
+#ifdef __APPLE__
+# error getentropy() is currently disabled on Apple operating systems
+#endif
+
+unsigned char buf;
+(void) getentropy((void *) &buf, 1U);
+  ]])],
+  [AC_MSG_RESULT(yes)
+   AC_CHECK_FUNCS([getentropy])],
+  [AC_MSG_RESULT(no)
+  ])
 ])
-AC_CHECK_FUNCS([posix_memalign getpid])
+AC_CHECK_FUNCS([posix_memalign getpid nanosleep])
+AC_CHECK_FUNCS([memset_s explicit_bzero explicit_memset])
 
 AC_SUBST([LIBTOOL_EXTRA_FLAGS])
 
 TEST_LDFLAGS=''
 AS_IF([test "x$EMSCRIPTEN" != "x"],[
   EXEEXT=.js
-  TEST_LDFLAGS='--memory-init-file 0 --pre-js pre.js.inc -s NO_BROWSER=1 -s RESERVED_FUNCTION_POINTERS=8'
+  TEST_LDFLAGS='--memory-init-file 0 --pre-js pre.js.inc -s RESERVED_FUNCTION_POINTERS=8'
 ])
 AC_SUBST(TEST_LDFLAGS)
 AM_CONDITIONAL([EMSCRIPTEN], [test "x$EMSCRIPTEN" != "x"])
+AM_CONDITIONAL([WASI], [test "x$WASI" != "x"])
 
-AM_CONDITIONAL([NATIVECLIENT], [test "x$NATIVECLIENT" != "x"])
+AC_DEFINE([CONFIGURED], [1], [the build system was properly configured])
 
 dnl Libtool.
 
@@ -570,10 +866,22 @@ AH_VERBATIM([NDEBUG], [/* Always evaluate assert() calls */
 #/**/undef/**/ NDEBUG
 #endif])
 
+AS_IF([test "x$ENABLE_CWFLAGS" = "xyes"], [
+  CFLAGS="$CFLAGS $CWFLAGS"
+])
+
 AC_CONFIG_FILES([Makefile
+                 builds/Makefile
+                 contrib/Makefile
+                 dist-build/Makefile
+                 libsodium.pc
+                 libsodium-uninstalled.pc
+                 msvc-scripts/Makefile
                  src/Makefile
                  src/libsodium/Makefile
                  src/libsodium/include/Makefile
                  src/libsodium/include/sodium/version.h
+                 test/default/Makefile
+                 test/Makefile
                  ])
 AC_OUTPUT
diff --git a/libsodium/libsodium.pc.in b/libsodium/libsodium.pc.in
index 6a983d5..6c2b43a 100644
--- a/libsodium/libsodium.pc.in
+++ b/libsodium/libsodium.pc.in
@@ -5,7 +5,8 @@ includedir=@includedir@
 
 Name: @PACKAGE_NAME@
 Version: @PACKAGE_VERSION@
-Description: A portable, cross-compilable, installable, packageable fork of NaCl, with a compatible API.
+Description: A modern and easy-to-use crypto library
 
 Libs: -L${libdir} -lsodium
+Libs.private: @PKGCONFIG_LIBS_PRIVATE@
 Cflags: -I${includedir}
diff --git a/libsodium/libsodium.sln b/libsodium/libsodium.sln
index 0afec29..f5808c6 100644
--- a/libsodium/libsodium.sln
+++ b/libsodium/libsodium.sln
@@ -1,40 +1,40 @@
-﻿
-Microsoft Visual Studio Solution File, Format Version 12.00
-# Visual Studio 14
-VisualStudioVersion = 14.0.23107.0
-MinimumVisualStudioVersion = 10.0.40219.1
-Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "libsodium", "libsodium.vcxproj", "{A185B162-6CB6-4502-B03F-B56F7699A8D9}"
-EndProject
-Global
-	GlobalSection(SolutionConfigurationPlatforms) = preSolution
-		Debug|Win32 = Debug|Win32
-		Debug|x64 = Debug|x64
-		DebugDLL|Win32 = DebugDLL|Win32
-		DebugDLL|x64 = DebugDLL|x64
-		Release|Win32 = Release|Win32
-		Release|x64 = Release|x64
-		ReleaseDLL|Win32 = ReleaseDLL|Win32
-		ReleaseDLL|x64 = ReleaseDLL|x64
-	EndGlobalSection
-	GlobalSection(ProjectConfigurationPlatforms) = postSolution
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|Win32.ActiveCfg = Debug|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|Win32.Build.0 = Debug|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|x64.ActiveCfg = Debug|x64
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|x64.Build.0 = Debug|x64
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|Win32.ActiveCfg = DebugDLL|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|Win32.Build.0 = DebugDLL|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|x64.ActiveCfg = DebugDLL|x64
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|x64.Build.0 = DebugDLL|x64
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|Win32.ActiveCfg = Release|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|Win32.Build.0 = Release|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|x64.ActiveCfg = Release|x64
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|x64.Build.0 = Release|x64
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|Win32.ActiveCfg = ReleaseDLL|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|Win32.Build.0 = ReleaseDLL|Win32
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|x64.ActiveCfg = ReleaseDLL|x64
-		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|x64.Build.0 = ReleaseDLL|x64
-	EndGlobalSection
-	GlobalSection(SolutionProperties) = preSolution
-		HideSolutionNode = FALSE
-	EndGlobalSection
-EndGlobal
+﻿
+Microsoft Visual Studio Solution File, Format Version 12.00
+# Visual Studio 14
+VisualStudioVersion = 14.0.23107.0
+MinimumVisualStudioVersion = 10.0.40219.1
+Project("{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}") = "libsodium", "libsodium.vcxproj", "{A185B162-6CB6-4502-B03F-B56F7699A8D9}"
+EndProject
+Global
+	GlobalSection(SolutionConfigurationPlatforms) = preSolution
+		Debug|Win32 = Debug|Win32
+		Debug|x64 = Debug|x64
+		DebugDLL|Win32 = DebugDLL|Win32
+		DebugDLL|x64 = DebugDLL|x64
+		Release|Win32 = Release|Win32
+		Release|x64 = Release|x64
+		ReleaseDLL|Win32 = ReleaseDLL|Win32
+		ReleaseDLL|x64 = ReleaseDLL|x64
+	EndGlobalSection
+	GlobalSection(ProjectConfigurationPlatforms) = postSolution
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|Win32.ActiveCfg = Debug|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|Win32.Build.0 = Debug|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|x64.ActiveCfg = Debug|x64
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Debug|x64.Build.0 = Debug|x64
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|Win32.ActiveCfg = DebugDLL|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|Win32.Build.0 = DebugDLL|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|x64.ActiveCfg = DebugDLL|x64
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.DebugDLL|x64.Build.0 = DebugDLL|x64
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|Win32.ActiveCfg = Release|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|Win32.Build.0 = Release|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|x64.ActiveCfg = Release|x64
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.Release|x64.Build.0 = Release|x64
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|Win32.ActiveCfg = ReleaseDLL|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|Win32.Build.0 = ReleaseDLL|Win32
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|x64.ActiveCfg = ReleaseDLL|x64
+		{A185B162-6CB6-4502-B03F-B56F7699A8D9}.ReleaseDLL|x64.Build.0 = ReleaseDLL|x64
+	EndGlobalSection
+	GlobalSection(SolutionProperties) = preSolution
+		HideSolutionNode = FALSE
+	EndGlobalSection
+EndGlobal
diff --git a/libsodium/libsodium.vcxproj b/libsodium/libsodium.vcxproj
index a0e8b20..e3b2072 100644
--- a/libsodium/libsodium.vcxproj
+++ b/libsodium/libsodium.vcxproj
@@ -1,538 +1,565 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project DefaultTargets="Build" ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup Label="ProjectConfigurations">
-    <ProjectConfiguration Include="DebugDLL|Win32">
-      <Configuration>DebugDLL</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="DebugDLL|x64">
-      <Configuration>DebugDLL</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|Win32">
-      <Configuration>Debug</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Debug|x64">
-      <Configuration>Debug</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="ReleaseDLL|Win32">
-      <Configuration>ReleaseDLL</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="ReleaseDLL|x64">
-      <Configuration>ReleaseDLL</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|Win32">
-      <Configuration>Release</Configuration>
-      <Platform>Win32</Platform>
-    </ProjectConfiguration>
-    <ProjectConfiguration Include="Release|x64">
-      <Configuration>Release</Configuration>
-      <Platform>x64</Platform>
-    </ProjectConfiguration>
-  </ItemGroup>
-  <PropertyGroup Label="Globals">
-    <ProjectGuid>{A185B162-6CB6-4502-B03F-B56F7699A8D9}</ProjectGuid>
-    <Keyword>Win32Proj</Keyword>
-    <RootNamespace>libsodium</RootNamespace>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>false</WholeProgramOptimization>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>false</WholeProgramOptimization>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>false</WholeProgramOptimization>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>true</UseDebugLibraries>
-    <CharacterSet>MultiByte</CharacterSet>
-    <WholeProgramOptimization>false</WholeProgramOptimization>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
-    <ConfigurationType>StaticLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
-    <ConfigurationType>DynamicLibrary</ConfigurationType>
-    <UseDebugLibraries>false</UseDebugLibraries>
-    <WholeProgramOptimization>true</WholeProgramOptimization>
-    <CharacterSet>MultiByte</CharacterSet>
-    <PlatformToolset>v140</PlatformToolset>
-  </PropertyGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
-  <ImportGroup Label="ExtensionSettings">
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
-    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
-    <Import Project="msvc-scripts\sodium.props" />
-  </ImportGroup>
-  <PropertyGroup Label="UserMacros" />
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
-    <LinkIncremental>true</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <LinkIncremental>false</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
-    <LinkIncremental>false</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <LinkIncremental>false</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
-    <LinkIncremental>false</LinkIncremental>
-    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
-    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
-  </PropertyGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
-    <ClCompile>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
-    <ClCompile>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
-    <ClCompile>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
-    <ClCompile>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <WarningLevel>Level3</WarningLevel>
-      <Optimization>Disabled</Optimization>
-      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
-    <ClCompile>
-      <WarningLevel>Level3</WarningLevel>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <Optimization>Full</Optimization>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
-    <ClCompile>
-      <WarningLevel>Level3</WarningLevel>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <Optimization>Full</Optimization>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
-      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
-    <ClCompile>
-      <WarningLevel>Level3</WarningLevel>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <Optimization>MaxSpeed</Optimization>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
-    <ClCompile>
-      <WarningLevel>Level3</WarningLevel>
-      <PrecompiledHeader>
-      </PrecompiledHeader>
-      <Optimization>MaxSpeed</Optimization>
-      <FunctionLevelLinking>true</FunctionLevelLinking>
-      <IntrinsicFunctions>true</IntrinsicFunctions>
-      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
-      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
-    </ClCompile>
-    <Link>
-      <SubSystem>Console</SubSystem>
-      <GenerateDebugInformation>true</GenerateDebugInformation>
-      <EnableCOMDATFolding>true</EnableCOMDATFolding>
-      <OptimizeReferences>true</OptimizeReferences>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemGroup>
-    <ClInclude Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-load-sse2.h" />
-    <ClInclude Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-load-sse41.h" />
-    <ClInclude Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-round.h" />
-    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.h" />
-    <ClInclude Include="src\libsodium\include\sodium.h" />
-    <ClInclude Include="src\libsodium\include\sodium\core.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_aes256gcm.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_chacha20poly1305.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha256.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512256.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_box.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_box_curve25519xsalsa20poly1305.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_hsalsa20.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa20.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa2012.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa208.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash_blake2b.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_hash.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha256.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha512.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_int32.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_int64.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth_poly1305.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_scryptsalsa208sha256.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_curve25519.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox_xsalsa20poly1305.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash_siphash24.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_sign.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_ed25519.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_edwards25519sha512batch.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_aes128ctr.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_chacha20.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa20.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa2012.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa208.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_xsalsa20.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint16.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint32.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint64.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint8.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_16.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_32.h" />
-    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_64.h" />
-    <ClInclude Include="src\libsodium\include\sodium\export.h" />
-    <ClInclude Include="src\libsodium\include\sodium\randombytes.h" />
-    <ClInclude Include="src\libsodium\include\sodium\randombytes_salsa20_random.h" />
-    <ClInclude Include="src\libsodium\include\sodium\randombytes_sysrandom.h" />
-    <ClInclude Include="src\libsodium\include\sodium\runtime.h" />
-    <ClInclude Include="src\libsodium\include\sodium\utils.h" />
-    <ClInclude Include="src\libsodium\include\sodium\version.h" />
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="src\libsodium\crypto_aead\aes256gcm\aesni\aead_aes256gcm_aesni.c" />
-    <ClCompile Include="src\libsodium\crypto_aead\chacha20poly1305\sodium\aead_chacha20poly1305.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\crypto_auth.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\auth_hmacsha256_api.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\cp\hmac_hmacsha256.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\cp\verify_hmacsha256.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\auth_hmacsha512_api.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\cp\hmac_hmacsha512.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\cp\verify_hmacsha512.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\auth_hmacsha512256_api.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\cp\hmac_hmacsha512256.c" />
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\cp\verify_hmacsha512256.c" />
-    <ClCompile Include="src\libsodium\crypto_box\crypto_box.c" />
-    <ClCompile Include="src\libsodium\crypto_box\crypto_box_easy.c" />
-    <ClCompile Include="src\libsodium\crypto_box\crypto_box_seal.c" />
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\box_curve25519xsalsa20poly1305_api.c" />
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\after_curve25519xsalsa20poly1305.c" />
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\before_curve25519xsalsa20poly1305.c" />
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\box_curve25519xsalsa20poly1305.c" />
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\keypair_curve25519xsalsa20poly1305.c" />
-    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\core_hsalsa20_api.c" />
-    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\ref2\core_hsalsa20.c" />
-    <ClCompile Include="src\libsodium\crypto_core\salsa2012\core_salsa2012_api.c" />
-    <ClCompile Include="src\libsodium\crypto_core\salsa2012\ref\core_salsa2012.c" />
-    <ClCompile Include="src\libsodium\crypto_core\salsa208\core_salsa208_api.c" />
-    <ClCompile Include="src\libsodium\crypto_core\salsa208\ref\core_salsa208.c" />
-    <ClCompile Include="src\libsodium\crypto_core\salsa20\core_salsa20_api.c" />
-    <ClCompile Include="src\libsodium\crypto_core\salsa20\ref\core_salsa20.c" />
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\generichash_blake2_api.c" />
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-compress-ref.c" />
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-compress-sse41.c" />
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-compress-ssse3.c" />
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-ref.c" />
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\generichash_blake2b.c" />
-    <ClCompile Include="src\libsodium\crypto_generichash\crypto_generichash.c" />
-    <ClCompile Include="src\libsodium\crypto_hash\crypto_hash.c" />
-    <ClCompile Include="src\libsodium\crypto_hash\sha256\hash_sha256_api.c" />
-    <ClCompile Include="src\libsodium\crypto_hash\sha256\cp\hash_sha256.c" />
-    <ClCompile Include="src\libsodium\crypto_hash\sha512\hash_sha512_api.c" />
-    <ClCompile Include="src\libsodium\crypto_hash\sha512\cp\hash_sha512.c" />
-    <ClCompile Include="src\libsodium\crypto_onetimeauth\crypto_onetimeauth.c" />
-    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna.c" />
-    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.c" />
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\crypto_scrypt-common.c" />
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\nosse\pwhash_scryptsalsa208sha256_nosse.c" />
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pbkdf2-sha256.c" />
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pwhash_scryptsalsa208sha256.c" />
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\scrypt_platform.c" />
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\sse\pwhash_scryptsalsa208sha256_sse.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\crypto_scalarmult.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\donna_c64\curve25519_donna_c64.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_0_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_1_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_add_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_copy_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_cswap_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_frombytes_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_invert_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_mul121666_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_mul_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_sq_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_sub_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_tobytes_curve25519_ref10.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\curve25519_sandy2x.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51_invert.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe_frombytes_sandy2x.c" />
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\scalarmult_curve25519.c" />
-    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox.c" />
-    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox_easy.c" />
-    <ClCompile Include="src\libsodium\crypto_secretbox\xsalsa20poly1305\ref\box_xsalsa20poly1305.c" />
-    <ClCompile Include="src\libsodium\crypto_secretbox\xsalsa20poly1305\secretbox_xsalsa20poly1305_api.c" />
-    <ClCompile Include="src\libsodium\crypto_shorthash\crypto_shorthash.c" />
-    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphash24.c" />
-    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\shorthash_siphash24_api.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\crypto_sign.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_0.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_1.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_add.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_cmov.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_copy.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_frombytes.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_invert.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_isnegative.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_isnonzero.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_mul.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_neg.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_pow22523.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_sq.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_sq2.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_sub.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_tobytes.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_add.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_double_scalarmult.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_frombytes.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_madd.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_msub.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p1p1_to_p2.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p1p1_to_p3.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p2_0.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p2_dbl.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_0.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_dbl.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_tobytes.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_to_cached.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_to_p2.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_precomp_0.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_scalarmult_base.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_sub.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_tobytes.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\keypair.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\obsolete.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\open.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sc_muladd.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sc_reduce.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sign.c" />
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\sign_ed25519_api.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\afternm_aes128ctr.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\beforenm_aes128ctr.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\common_aes128ctr.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\consts_aes128ctr.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\int128_aes128ctr.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\stream_aes128ctr.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\xor_afternm_aes128ctr.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\stream_aes128ctr_api.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\chacha20\ref\stream_chacha20_ref.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\chacha20\stream_chacha20.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\crypto_stream.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\ref\stream_salsa2012.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\ref\xor_salsa2012.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\stream_salsa2012_api.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa208\ref\stream_salsa208.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa208\ref\xor_salsa208.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa208\stream_salsa208_api.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa20\ref\stream_salsa20_ref.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa20\ref\xor_salsa20_ref.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\salsa20\stream_salsa20_api.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\ref\stream_xsalsa20.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\ref\xor_xsalsa20.c" />
-    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\stream_xsalsa20_api.c" />
-    <ClCompile Include="src\libsodium\crypto_verify\16\ref\verify_16.c" />
-    <ClCompile Include="src\libsodium\crypto_verify\16\verify_16_api.c" />
-    <ClCompile Include="src\libsodium\crypto_verify\32\ref\verify_32.c" />
-    <ClCompile Include="src\libsodium\crypto_verify\32\verify_32_api.c" />
-    <ClCompile Include="src\libsodium\crypto_verify\64\ref\verify_64.c" />
-    <ClCompile Include="src\libsodium\crypto_verify\64\verify_64_api.c" />
-    <ClCompile Include="src\libsodium\randombytes\randombytes.c" />
-    <ClCompile Include="src\libsodium\randombytes\salsa20\randombytes_salsa20_random.c" />
-    <ClCompile Include="src\libsodium\randombytes\sysrandom\randombytes_sysrandom.c" />
-    <ClCompile Include="src\libsodium\sodium\core.c" />
-    <ClCompile Include="src\libsodium\sodium\runtime.c" />
-    <ClCompile Include="src\libsodium\sodium\utils.c" />
-    <ClCompile Include="src\libsodium\sodium\version.c" />
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\sandy2x.S" />
-  </ItemGroup>
-  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
-  <ImportGroup Label="ExtensionTargets">
-  </ImportGroup>
-</Project>
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup Label="ProjectConfigurations">
+    <ProjectConfiguration Include="DebugDLL|Win32">
+      <Configuration>DebugDLL</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="DebugDLL|x64">
+      <Configuration>DebugDLL</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|Win32">
+      <Configuration>Debug</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Debug|x64">
+      <Configuration>Debug</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseDLL|Win32">
+      <Configuration>ReleaseDLL</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="ReleaseDLL|x64">
+      <Configuration>ReleaseDLL</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|Win32">
+      <Configuration>Release</Configuration>
+      <Platform>Win32</Platform>
+    </ProjectConfiguration>
+    <ProjectConfiguration Include="Release|x64">
+      <Configuration>Release</Configuration>
+      <Platform>x64</Platform>
+    </ProjectConfiguration>
+  </ItemGroup>
+  <PropertyGroup Label="Globals">
+    <ProjectGuid>{A185B162-6CB6-4502-B03F-B56F7699A8D9}</ProjectGuid>
+    <Keyword>Win32Proj</Keyword>
+    <RootNamespace>libsodium</RootNamespace>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>true</UseDebugLibraries>
+    <CharacterSet>MultiByte</CharacterSet>
+    <WholeProgramOptimization>false</WholeProgramOptimization>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
+    <ConfigurationType>StaticLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="Configuration">
+    <ConfigurationType>DynamicLibrary</ConfigurationType>
+    <UseDebugLibraries>false</UseDebugLibraries>
+    <WholeProgramOptimization>true</WholeProgramOptimization>
+    <CharacterSet>MultiByte</CharacterSet>
+    <PlatformToolset>v140</PlatformToolset>
+  </PropertyGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
+  <ImportGroup Label="ExtensionSettings">
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'" Label="PropertySheets">
+    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
+    <Import Project="msvc-scripts\sodium.props" />
+  </ImportGroup>
+  <PropertyGroup Label="UserMacros" />
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
+    <LinkIncremental>true</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
+    <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
+    <LinkIncremental>false</LinkIncremental>
+    <OutDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\</OutDir>
+    <IntDir>$(SolutionDir)Build\$(Configuration)\$(Platform)\Intermediate\</IntDir>
+  </PropertyGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
+    <ClCompile>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <Optimization>Disabled</Optimization>
+      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|Win32'">
+    <ClCompile>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <Optimization>Disabled</Optimization>
+      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
+    <ClCompile>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <Optimization>Disabled</Optimization>
+      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreadedDebug</RuntimeLibrary>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='DebugDLL|x64'">
+    <ClCompile>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <WarningLevel>Level3</WarningLevel>
+      <Optimization>Disabled</Optimization>
+      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>Full</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|Win32'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>Full</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+      <FavorSizeOrSpeed>Speed</FavorSizeOrSpeed>
+      <AdditionalIncludeDirectories>$(SolutionDir);$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include\sodium;$(SolutionDir)src\libsodium\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>SODIUM_STATIC;SODIUM_EXPORT=;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreaded</RuntimeLibrary>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='ReleaseDLL|x64'">
+    <ClCompile>
+      <WarningLevel>Level3</WarningLevel>
+      <PrecompiledHeader>
+      </PrecompiledHeader>
+      <Optimization>MaxSpeed</Optimization>
+      <FunctionLevelLinking>true</FunctionLevelLinking>
+      <IntrinsicFunctions>true</IntrinsicFunctions>
+      <PreprocessorDefinitions>SODIUM_EXPORT=__declspec(dllexport);SODIUM_DLL_EXPORT;WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
+      <DisableSpecificWarnings>4244;%(DisableSpecificWarnings)</DisableSpecificWarnings>
+      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
+    </ClCompile>
+    <Link>
+      <SubSystem>Console</SubSystem>
+      <GenerateDebugInformation>true</GenerateDebugInformation>
+      <EnableCOMDATFolding>true</EnableCOMDATFolding>
+      <OptimizeReferences>true</OptimizeReferences>
+    </Link>
+  </ItemDefinitionGroup>
+  <ItemGroup>
+    <ClCompile Include="src\libsodium\crypto_generichash\crypto_generichash.c" />
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\generichash_blake2.c" />
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-ref.c" />
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-ssse3.c" />
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-avx2.c" />
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-sse41.c" />
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\generichash_blake2b.c" />
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-ref.c" />
+    <ClCompile Include="src\libsodium\crypto_kx\crypto_kx.c" />
+    <ClCompile Include="src\libsodium\crypto_sign\crypto_sign.c" />
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\sign_ed25519.c" />
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\obsolete.c" />
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sign.c" />
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\keypair.c" />
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\open.c" />
+    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox.c" />
+    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox_easy.c" />
+    <ClCompile Include="src\libsodium\crypto_secretbox\xsalsa20poly1305\secretbox_xsalsa20poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_secretbox\xchacha20poly1305\secretbox_xchacha20poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\crypto_pwhash.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\blake2b-long.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-core.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-avx512f.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-ref.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-ssse3.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\pwhash_argon2i.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\pwhash_argon2id.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-avx2.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-encoding.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\scrypt_platform.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\crypto_scrypt-common.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pwhash_scryptsalsa208sha256.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pbkdf2-sha256.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\nosse\pwhash_scryptsalsa208sha256_nosse.c" />
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\sse\pwhash_scryptsalsa208sha256_sse.c" />
+    <ClCompile Include="src\libsodium\crypto_verify\sodium\verify.c" />
+    <ClCompile Include="src\libsodium\crypto_auth\crypto_auth.c" />
+    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\auth_hmacsha512.c" />
+    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\auth_hmacsha512256.c" />
+    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\auth_hmacsha256.c" />
+    <ClCompile Include="src\libsodium\crypto_kdf\crypto_kdf.c" />
+    <ClCompile Include="src\libsodium\crypto_kdf\blake2b\kdf_blake2b.c" />
+    <ClCompile Include="src\libsodium\crypto_shorthash\crypto_shorthash.c" />
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\shorthash_siphash24.c" />
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\shorthash_siphashx24.c" />
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphashx24_ref.c" />
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphash24_ref.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\crypto_scalarmult.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\ristretto255\ref10\scalarmult_ristretto255_ref10.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\ed25519\ref10\scalarmult_ed25519_ref10.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\scalarmult_curve25519.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\curve25519_sandy2x.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe_frombytes_sandy2x.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51_invert.c" />
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\x25519_ref10.c" />
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\crypto_onetimeauth.c" />
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna.c" />
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\sse2\poly1305_sse2.c" />
+    <ClCompile Include="src\libsodium\randombytes\randombytes.c" />
+    <ClCompile Include="src\libsodium\randombytes\sysrandom\randombytes_sysrandom.c" />
+    <ClCompile Include="src\libsodium\randombytes\internal\randombytes_internal_random.c" />
+    <ClCompile Include="src\libsodium\crypto_box\crypto_box_easy.c" />
+    <ClCompile Include="src\libsodium\crypto_box\crypto_box_seal.c" />
+    <ClCompile Include="src\libsodium\crypto_box\crypto_box.c" />
+    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\box_curve25519xsalsa20poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_box\curve25519xchacha20poly1305\box_curve25519xchacha20poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_box\curve25519xchacha20poly1305\box_seal_curve25519xchacha20poly1305.c" />
+    <ClCompile Include="src\libsodium\sodium\codecs.c" />
+    <ClCompile Include="src\libsodium\sodium\runtime.c" />
+    <ClCompile Include="src\libsodium\sodium\core.c" />
+    <ClCompile Include="src\libsodium\sodium\utils.c" />
+    <ClCompile Include="src\libsodium\sodium\version.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\crypto_stream.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\xchacha20\stream_xchacha20.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\stream_chacha20.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\ref\chacha20_ref.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-avx2.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-ssse3.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\stream_salsa20.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\ref\salsa20_ref.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-avx2.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-sse2.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\xmm6\salsa20_xmm6.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\stream_salsa2012.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\ref\stream_salsa2012_ref.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa208\stream_salsa208.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\salsa208\ref\stream_salsa208_ref.c" />
+    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\stream_xsalsa20.c" />
+    <ClCompile Include="src\libsodium\crypto_hash\crypto_hash.c" />
+    <ClCompile Include="src\libsodium\crypto_hash\sha512\hash_sha512.c" />
+    <ClCompile Include="src\libsodium\crypto_hash\sha512\cp\hash_sha512_cp.c" />
+    <ClCompile Include="src\libsodium\crypto_hash\sha256\hash_sha256.c" />
+    <ClCompile Include="src\libsodium\crypto_hash\sha256\cp\hash_sha256_cp.c" />
+    <ClCompile Include="src\libsodium\crypto_aead\xchacha20poly1305\sodium\aead_xchacha20poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_aead\aes256gcm\aesni\aead_aes256gcm_aesni.c" />
+    <ClCompile Include="src\libsodium\crypto_aead\chacha20poly1305\sodium\aead_chacha20poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_secretstream\xchacha20poly1305\secretstream_xchacha20poly1305.c" />
+    <ClCompile Include="src\libsodium\crypto_core\salsa\ref\core_salsa_ref.c" />
+    <ClCompile Include="src\libsodium\crypto_core\hchacha20\core_hchacha20.c" />
+    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\core_hsalsa20.c" />
+    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\ref2\core_hsalsa20_ref2.c" />
+    <ClCompile Include="src\libsodium\crypto_core\ed25519\core_ed25519.c" />
+    <ClCompile Include="src\libsodium\crypto_core\ed25519\core_ristretto255.c" />
+    <ClCompile Include="src\libsodium\crypto_core\ed25519\ref10\ed25519_ref10.c" />
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-load-sse2.h" />
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-load-avx2.h" />
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2.h" />
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-ssse3.h" />
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-load-sse41.h" />
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-avx2.h" />
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-sse41.h" />
+    <ClInclude Include="src\libsodium\crypto_sign\ed25519\ref10\sign_ed25519_ref10.h" />
+    <ClInclude Include="src\libsodium\include\sodium.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa2012.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth.h" />
+    <ClInclude Include="src\libsodium\include\sodium\utils.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_hchacha20.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha512.h" />
+    <ClInclude Include="src\libsodium\include\sodium\core.h" />
+    <ClInclude Include="src\libsodium\include\sodium\export.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa20.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash_siphash24.h" />
+    <ClInclude Include="src\libsodium\include\sodium\randombytes.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha256.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_xchacha20poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa20.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth_poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_ristretto255.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_kx.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_hash.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_sign.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_kdf.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha256.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_box.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_32.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_ristretto255.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_xchacha20.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa208.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512256.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_chacha20poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\randombytes_sysrandom.h" />
+    <ClInclude Include="src\libsodium\include\sodium\runtime.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa208.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_aes256gcm.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa2012.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox_xchacha20poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_16.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_chacha20.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_xsalsa20.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_hsalsa20.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_kdf_blake2b.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_curve25519.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_argon2id.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretstream_xchacha20poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_scryptsalsa208sha256.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_ed25519.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_64.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_box_curve25519xchacha20poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_ed25519.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_argon2i.h" />
+    <ClInclude Include="src\libsodium\include\sodium\randombytes_internal_random.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox_xsalsa20poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_ed25519.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_box_curve25519xsalsa20poly1305.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash_blake2b.h" />
+    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_edwards25519sha512batch.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\ed25519_ref10.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\ed25519_ref10_fe_25_5.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\ed25519_ref10_fe_51.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\sse2_64_32.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\common.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\mutex.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\chacha20_ietf_ext.h" />
+    <ClInclude Include="src\libsodium\include\sodium\private\implementations.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-ref.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-avx2.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\argon2.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-ssse3.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\argon2-encoding.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blake2b-long.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-avx512f.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\argon2-core.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\crypto_scrypt.h" />
+    <ClInclude Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pbkdf2-sha256.h" />
+    <ClInclude Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphash_ref.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\scalarmult_curve25519.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\consts_namespace.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder_namespace.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder_base_namespace.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\curve25519_sandy2x.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51_namespace.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder_base.h" />
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\ref10\x25519_ref10.h" />
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.h" />
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna.h" />
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna64.h" />
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna32.h" />
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\sse2\poly1305_sse2.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\stream_chacha20.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\ref\chacha20_ref.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u4.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-ssse3.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u0.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u1.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-avx2.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u8.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\stream_salsa20.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\ref\salsa20_ref.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u4.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u0.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u1.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-avx2.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u8.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-sse2.h" />
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6\salsa20_xmm6.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\constants.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\fe.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\base2.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\base.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\constants.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\fe.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\base2.h" />
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\base.h" />
+    <ClInclude Include="builds\msvc\resource.h" />
+  </ItemGroup>
+  <ItemGroup>
+    <ResourceCompile Include="builds\msvc\resource.rc">
+    </ResourceCompile>
+  </ItemGroup>
+  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
+  <ImportGroup Label="ExtensionTargets">
+  </ImportGroup>
+</Project>
diff --git a/libsodium/libsodium.vcxproj.filters b/libsodium/libsodium.vcxproj.filters
index 241e8fe..c886616 100644
--- a/libsodium/libsodium.vcxproj.filters
+++ b/libsodium/libsodium.vcxproj.filters
@@ -1,659 +1,729 @@
-﻿<?xml version="1.0" encoding="utf-8"?>
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-  <ItemGroup>
-    <Filter Include="Source Files">
-      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
-      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
-    </Filter>
-    <Filter Include="Header Files">
-      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
-      <Extensions>h;hpp;hxx;hm;inl;inc;xsd</Extensions>
-    </Filter>
-    <Filter Include="Resource Files">
-      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
-      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
-    </Filter>
-  </ItemGroup>
-  <ItemGroup>
-    <ClInclude Include="src\libsodium\include\sodium\core.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha256.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512256.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_box.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_box_curve25519xsalsa20poly1305.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_hsalsa20.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa20.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa208.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa2012.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash_blake2b.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_hash.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha256.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha512.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_int32.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_int64.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_curve25519.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox_xsalsa20poly1305.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash_siphash24.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_sign.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_ed25519.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_edwards25519sha512batch.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_aes128ctr.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa20.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa208.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa2012.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_xsalsa20.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint8.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint16.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint32.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_uint64.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_16.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_32.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_64.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\export.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\randombytes.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\randombytes_salsa20_random.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\randombytes_sysrandom.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\utils.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\version.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_scryptsalsa208sha256.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\runtime.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_chacha20.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_aes256gcm.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_chacha20poly1305.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth_poly1305.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-load-sse2.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-load-sse41.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-round.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.h">
-      <Filter>Header Files</Filter>
-    </ClInclude>
-  </ItemGroup>
-  <ItemGroup>
-    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\ref2\core_hsalsa20.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\core_hsalsa20_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_core\salsa20\ref\core_salsa20.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_core\salsa208\ref\core_salsa208.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_core\salsa2012\ref\core_salsa2012.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\auth_hmacsha256_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\auth_hmacsha512_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\auth_hmacsha512256_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\crypto_auth.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\cp\hmac_hmacsha256.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\cp\hmac_hmacsha512.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\cp\hmac_hmacsha512256.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\cp\verify_hmacsha512.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\cp\verify_hmacsha512256.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\after_curve25519xsalsa20poly1305.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\box_curve25519xsalsa20poly1305.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\box_curve25519xsalsa20poly1305_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\crypto_box.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\keypair_curve25519xsalsa20poly1305.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_core\salsa20\core_salsa20_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_core\salsa208\core_salsa208_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_core\salsa2012\core_salsa2012_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-ref.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_generichash\crypto_generichash.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\generichash_blake2_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\generichash_blake2b.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_hash\crypto_hash.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_hash\sha256\cp\hash_sha256.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_hash\sha256\hash_sha256_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_hash\sha512\cp\hash_sha512.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_hash\sha512\hash_sha512_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_onetimeauth\crypto_onetimeauth.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\crypto_scalarmult.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_secretbox\xsalsa20poly1305\ref\box_xsalsa20poly1305.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_secretbox\xsalsa20poly1305\secretbox_xsalsa20poly1305_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_shorthash\crypto_shorthash.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphash24.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\shorthash_siphash24_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\crypto_sign.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_0.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_1.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_add.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_cmov.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_copy.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_frombytes.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_invert.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_isnegative.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_isnonzero.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_mul.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_neg.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_pow22523.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_sq.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_sq2.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_sub.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\fe_tobytes.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_add.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_double_scalarmult.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_frombytes.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_madd.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_msub.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p1p1_to_p2.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p1p1_to_p3.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p2_0.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p2_dbl.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_0.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_dbl.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_to_cached.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_to_p2.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_p3_tobytes.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_precomp_0.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_scalarmult_base.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_sub.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\ge_tobytes.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\keypair.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\open.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sc_muladd.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sc_reduce.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sign.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\sign_ed25519_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\afternm_aes128ctr.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\beforenm_aes128ctr.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\common_aes128ctr.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\consts_aes128ctr.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\crypto_stream.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\int128_aes128ctr.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\stream_aes128ctr.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\stream_aes128ctr_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa20\stream_salsa20_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa20\ref\stream_salsa20_ref.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa208\ref\stream_salsa208.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa208\stream_salsa208_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\ref\stream_salsa2012.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\stream_salsa2012_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\ref\stream_xsalsa20.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\stream_xsalsa20_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\aes128ctr\portable\xor_afternm_aes128ctr.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa20\ref\xor_salsa20_ref.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa208\ref\xor_salsa208.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\ref\xor_salsa2012.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\ref\xor_xsalsa20.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_verify\16\ref\verify_16.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_verify\16\verify_16_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_verify\32\ref\verify_32.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_verify\32\verify_32_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_verify\64\ref\verify_64.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_verify\64\verify_64_api.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\sodium\core.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\sodium\utils.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\sodium\version.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\randombytes\randombytes.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\randombytes\salsa20\randombytes_salsa20_random.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\randombytes\sysrandom\randombytes_sysrandom.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\cp\verify_hmacsha256.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\crypto_scrypt-common.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pbkdf2-sha256.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pwhash_scryptsalsa208sha256.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\scrypt_platform.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\sodium\runtime.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\crypto_box_easy.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\crypto_box_seal.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox_easy.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\nosse\pwhash_scryptsalsa208sha256_nosse.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\sse\pwhash_scryptsalsa208sha256_sse.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\chacha20\stream_chacha20.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_stream\chacha20\ref\stream_chacha20_ref.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_0_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_1_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_add_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_copy_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_cswap_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_frombytes_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_invert_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_mul_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_mul121666_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_sq_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_sub_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\fe_tobytes_curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\ref\before_curve25519xsalsa20poly1305.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_aead\aes256gcm\aesni\aead_aes256gcm_aesni.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_aead\chacha20poly1305\sodium\aead_chacha20poly1305.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-compress-ref.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-compress-sse41.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_generichash\blake2\ref\blake2b-compress-ssse3.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\scalarmult_curve25519.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\donna_c64\curve25519_donna_c64.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\curve25519_ref10.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\curve25519_sandy2x.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe_frombytes_sandy2x.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51_invert.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\obsolete.c">
-      <Filter>Source Files</Filter>
-    </ClCompile>
-  </ItemGroup>
-  <ItemGroup>
-    <None Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\sandy2x.S">
-      <Filter>Source Files</Filter>
-    </None>
-  </ItemGroup>
-</Project>
+﻿<?xml version="1.0" encoding="utf-8"?>
+<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
+  <ItemGroup>
+    <Filter Include="Source Files">
+      <UniqueIdentifier>{4FC737F1-C7A5-4376-A066-2A32D752A2FF}</UniqueIdentifier>
+      <Extensions>cpp;c;cc;cxx;def;odl;idl;hpj;bat;asm;asmx</Extensions>
+    </Filter>
+    <Filter Include="Header Files">
+      <UniqueIdentifier>{93995380-89BD-4b04-88EB-625FBE52EBFB}</UniqueIdentifier>
+      <Extensions>h;hpp;hxx;hm;inl;inc;xsd</Extensions>
+    </Filter>
+    <Filter Include="Resource Files">
+      <UniqueIdentifier>{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}</UniqueIdentifier>
+      <Extensions>rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav;mfcribbon-ms</Extensions>
+    </Filter>
+  </ItemGroup>
+  <ItemGroup>
+    <ClCompile Include="src\libsodium\crypto_generichash\crypto_generichash.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\generichash_blake2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-ssse3.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-avx2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-sse41.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\generichash_blake2b.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_kx\crypto_kx.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_sign\crypto_sign.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\sign_ed25519.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\obsolete.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\sign.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\keypair.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_sign\ed25519\ref10\open.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_secretbox\crypto_secretbox_easy.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_secretbox\xsalsa20poly1305\secretbox_xsalsa20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_secretbox\xchacha20poly1305\secretbox_xchacha20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\crypto_pwhash.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\blake2b-long.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-core.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-avx512f.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-ssse3.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\pwhash_argon2i.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\pwhash_argon2id.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-fill-block-avx2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\argon2\argon2-encoding.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\scrypt_platform.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\crypto_scrypt-common.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pwhash_scryptsalsa208sha256.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pbkdf2-sha256.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\nosse\pwhash_scryptsalsa208sha256_nosse.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\sse\pwhash_scryptsalsa208sha256_sse.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_verify\sodium\verify.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_auth\crypto_auth.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512\auth_hmacsha512.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_auth\hmacsha512256\auth_hmacsha512256.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_auth\hmacsha256\auth_hmacsha256.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_kdf\crypto_kdf.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_kdf\blake2b\kdf_blake2b.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_shorthash\crypto_shorthash.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\shorthash_siphash24.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\shorthash_siphashx24.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphashx24_ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphash24_ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\crypto_scalarmult.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\ristretto255\ref10\scalarmult_ristretto255_ref10.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\ed25519\ref10\scalarmult_ed25519_ref10.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\scalarmult_curve25519.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\curve25519_sandy2x.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe_frombytes_sandy2x.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51_invert.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_scalarmult\curve25519\ref10\x25519_ref10.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\crypto_onetimeauth.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_onetimeauth\poly1305\sse2\poly1305_sse2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\randombytes\randombytes.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\randombytes\sysrandom\randombytes_sysrandom.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\randombytes\internal\randombytes_internal_random.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_box\crypto_box_easy.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_box\crypto_box_seal.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_box\crypto_box.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_box\curve25519xsalsa20poly1305\box_curve25519xsalsa20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_box\curve25519xchacha20poly1305\box_curve25519xchacha20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_box\curve25519xchacha20poly1305\box_seal_curve25519xchacha20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\sodium\codecs.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\sodium\runtime.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\sodium\core.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\sodium\utils.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\sodium\version.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\crypto_stream.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\xchacha20\stream_xchacha20.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\stream_chacha20.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\ref\chacha20_ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-avx2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-ssse3.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\stream_salsa20.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\ref\salsa20_ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-avx2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-sse2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa20\xmm6\salsa20_xmm6.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\stream_salsa2012.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa2012\ref\stream_salsa2012_ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa208\stream_salsa208.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\salsa208\ref\stream_salsa208_ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_stream\xsalsa20\stream_xsalsa20.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_hash\crypto_hash.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_hash\sha512\hash_sha512.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_hash\sha512\cp\hash_sha512_cp.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_hash\sha256\hash_sha256.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_hash\sha256\cp\hash_sha256_cp.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_aead\xchacha20poly1305\sodium\aead_xchacha20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_aead\aes256gcm\aesni\aead_aes256gcm_aesni.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_aead\chacha20poly1305\sodium\aead_chacha20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_secretstream\xchacha20poly1305\secretstream_xchacha20poly1305.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_core\salsa\ref\core_salsa_ref.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_core\hchacha20\core_hchacha20.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\core_hsalsa20.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_core\hsalsa20\ref2\core_hsalsa20_ref2.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_core\ed25519\core_ed25519.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_core\ed25519\core_ristretto255.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+    <ClCompile Include="src\libsodium\crypto_core\ed25519\ref10\ed25519_ref10.c">
+      <Filter>Source Files</Filter>
+    </ClCompile>
+  </ItemGroup>
+  <ItemGroup>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-load-sse2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-load-avx2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-ssse3.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-load-sse41.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-avx2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_generichash\blake2b\ref\blake2b-compress-sse41.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_sign\ed25519\ref10\sign_ed25519_ref10.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa2012.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\utils.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_hchacha20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha512.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\core.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\export.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash_siphash24.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\randombytes.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_hash_sha256.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_xchacha20poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth_poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_ristretto255.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_kx.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_hash.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_sign.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_kdf.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha256.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_box.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_32.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_ristretto255.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_xchacha20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa208.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_auth_hmacsha512256.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_chacha20poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\randombytes_sysrandom.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\runtime.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_salsa208.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_aead_aes256gcm.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_salsa2012.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox_xchacha20poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_16.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_chacha20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_stream_xsalsa20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_hsalsa20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_kdf_blake2b.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_curve25519.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_shorthash.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_argon2id.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretstream_xchacha20poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_scryptsalsa208sha256.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_ed25519.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_onetimeauth.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_verify_64.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_box_curve25519xchacha20poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_core_ed25519.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_pwhash_argon2i.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\randombytes_internal_random.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox_xsalsa20poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_secretbox.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_scalarmult_ed25519.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_box_curve25519xsalsa20poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_generichash_blake2b.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\crypto_sign_edwards25519sha512batch.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\ed25519_ref10.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\ed25519_ref10_fe_25_5.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\ed25519_ref10_fe_51.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\sse2_64_32.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\common.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\mutex.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\chacha20_ietf_ext.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\include\sodium\private\implementations.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-ref.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-avx2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\argon2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-ssse3.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\argon2-encoding.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blake2b-long.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\blamka-round-avx512f.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\argon2\argon2-core.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\crypto_scrypt.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_pwhash\scryptsalsa208sha256\pbkdf2-sha256.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_shorthash\siphash24\ref\shorthash_siphash_ref.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\scalarmult_curve25519.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\consts_namespace.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder_namespace.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder_base_namespace.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\curve25519_sandy2x.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\fe51_namespace.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\sandy2x\ladder_base.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_scalarmult\curve25519\ref10\x25519_ref10.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\onetimeauth_poly1305.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna64.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\donna\poly1305_donna32.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_onetimeauth\poly1305\sse2\poly1305_sse2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\stream_chacha20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\ref\chacha20_ref.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u4.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-ssse3.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u0.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u1.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\chacha20_dolbeau-avx2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\chacha20\dolbeau\u8.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\stream_salsa20.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\ref\salsa20_ref.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u4.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u0.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u1.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-avx2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\u8.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6int\salsa20_xmm6int-sse2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_stream\salsa20\xmm6\salsa20_xmm6.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\constants.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\fe.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\base2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_25_5\base.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\constants.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\fe.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\base2.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+    <ClInclude Include="src\libsodium\crypto_core\ed25519\ref10\fe_51\base.h">
+      <Filter>Header Files</Filter>
+    </ClInclude>
+  </ItemGroup>
+</Project>
diff --git a/libsodium/logo.png b/libsodium/logo.png
deleted file mode 100644
index 03dde02..0000000
Binary files a/libsodium/logo.png and /dev/null differ
diff --git a/libsodium/m4/ax_check_compile_flag.m4 b/libsodium/m4/ax_check_compile_flag.m4
index 5ae5d86..b030331 100644
--- a/libsodium/m4/ax_check_compile_flag.m4
+++ b/libsodium/m4/ax_check_compile_flag.m4
@@ -19,6 +19,8 @@
 #   the flags: "CFLAGS EXTRA-FLAGS FLAG".  This can for example be used to
 #   force the compiler to issue an error when a bad flag is given.
 #
+#   INPUT gives an alternative input source to AC_COMPILE_IFELSE.
+#
 #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this
 #   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.
 #
@@ -38,7 +40,7 @@
 #   Public License for more details.
 #
 #   You should have received a copy of the GNU General Public License along
-#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#   with this program. If not, see <https://www.gnu.org/licenses/>.
 #
 #   As a special exception, the respective Autoconf Macro's copyright owner
 #   gives unlimited permission to copy, distribute and modify the configure
@@ -53,7 +55,7 @@
 #   modified version of the Autoconf Macro, you may extend this special
 #   exception to the GPL to apply to your modified version as well.
 
-#serial 2
+#serial 5
 
 AC_DEFUN([AX_CHECK_COMPILE_FLAG],
 [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
@@ -61,8 +63,8 @@ AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl
 AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [
   ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS
   _AC_LANG_PREFIX[]FLAGS="$[]_AC_LANG_PREFIX[]FLAGS $4 $1"
-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]],
-  [[char x[42U], fodder = 0;if (fodder > -1000 && fgets(x,1000,stdin)) puts(x)]])],
+  AC_TRY_LINK([#include <time.h>],
+    [time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x],
     [AS_VAR_SET(CACHEVAR,[yes])],
     [AS_VAR_SET(CACHEVAR,[no])])
   _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])
diff --git a/libsodium/m4/ax_check_define.m4 b/libsodium/m4/ax_check_define.m4
index 4bc6948..20ba808 100644
--- a/libsodium/m4/ax_check_define.m4
+++ b/libsodium/m4/ax_check_define.m4
@@ -1,5 +1,5 @@
 # ===========================================================================
-#      http://www.gnu.org/software/autoconf-archive/ax_check_define.html
+#     https://www.gnu.org/software/autoconf-archive/ax_check_define.html
 # ===========================================================================
 #
 # SYNOPSIS
@@ -29,7 +29,7 @@
 #   Public License for more details.
 #
 #   You should have received a copy of the GNU General Public License along
-#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#   with this program. If not, see <https://www.gnu.org/licenses/>.
 #
 #   As a special exception, the respective Autoconf Macro's copyright owner
 #   gives unlimited permission to copy, distribute and modify the configure
@@ -44,7 +44,7 @@
 #   modified version of the Autoconf Macro, you may extend this special
 #   exception to the GPL to apply to your modified version as well.
 
-#serial 8
+#serial 9
 
 AU_ALIAS([AC_CHECK_DEFINED], [AC_CHECK_DEFINE])
 AC_DEFUN([AC_CHECK_DEFINE],[
diff --git a/libsodium/m4/ax_check_gnu_make.m4 b/libsodium/m4/ax_check_gnu_make.m4
deleted file mode 100644
index 938aad7..0000000
--- a/libsodium/m4/ax_check_gnu_make.m4
+++ /dev/null
@@ -1,78 +0,0 @@
-# ===========================================================================
-#     http://www.gnu.org/software/autoconf-archive/ax_check_gnu_make.html
-# ===========================================================================
-#
-# SYNOPSIS
-#
-#   AX_CHECK_GNU_MAKE()
-#
-# DESCRIPTION
-#
-#   This macro searches for a GNU version of make. If a match is found, the
-#   makefile variable `ifGNUmake' is set to the empty string, otherwise it
-#   is set to "#". This is useful for including a special features in a
-#   Makefile, which cannot be handled by other versions of make. The
-#   variable _cv_gnu_make_command is set to the command to invoke GNU make
-#   if it exists, the empty string otherwise.
-#
-#   Here is an example of its use:
-#
-#   Makefile.in might contain:
-#
-#     # A failsafe way of putting a dependency rule into a makefile
-#     $(DEPEND):
-#             $(CC) -MM $(srcdir)/*.c > $(DEPEND)
-#
-#     @ifGNUmake@ ifeq ($(DEPEND),$(wildcard $(DEPEND)))
-#     @ifGNUmake@ include $(DEPEND)
-#     @ifGNUmake@ endif
-#
-#   Then configure.in would normally contain:
-#
-#     AX_CHECK_GNU_MAKE()
-#     AC_OUTPUT(Makefile)
-#
-#   Then perhaps to cause gnu make to override any other make, we could do
-#   something like this (note that GNU make always looks for GNUmakefile
-#   first):
-#
-#     if  ! test x$_cv_gnu_make_command = x ; then
-#             mv Makefile GNUmakefile
-#             echo .DEFAULT: > Makefile ;
-#             echo \  $_cv_gnu_make_command \$@ >> Makefile;
-#     fi
-#
-#   Then, if any (well almost any) other make is called, and GNU make also
-#   exists, then the other make wraps the GNU make.
-#
-# LICENSE
-#
-#   Copyright (c) 2008 John Darrington <j.darrington@elvis.murdoch.edu.au>
-#
-#   Copying and distribution of this file, with or without modification, are
-#   permitted in any medium without royalty provided the copyright notice
-#   and this notice are preserved. This file is offered as-is, without any
-#   warranty.
-
-#serial 7
-
-AC_DEFUN([AX_CHECK_GNU_MAKE], [ AC_CACHE_CHECK( for GNU make,_cv_gnu_make_command,
-                _cv_gnu_make_command='' ;
-dnl Search all the common names for GNU make
-                for a in "$MAKE" make gmake gnumake ; do
-                        if test -z "$a" ; then continue ; fi ;
-                        if  ( sh -c "$a --version" 2> /dev/null | grep GNU  2>&1 > /dev/null ) ;  then
-                                _cv_gnu_make_command=$a ;
-                                break;
-                        fi
-                done ;
-        ) ;
-dnl If there was a GNU version, then set @ifGNUmake@ to the empty string, '#' otherwise
-        if test  "x$_cv_gnu_make_command" != "x"  ; then
-                ifGNUmake='' ;
-        else
-                ifGNUmake='#' ;
-                AC_MSG_RESULT("Not found");
-        fi
-        AC_SUBST(ifGNUmake)
-] )
diff --git a/libsodium/m4/ax_check_link_flag.m4 b/libsodium/m4/ax_check_link_flag.m4
index 950279f..06af181 100644
--- a/libsodium/m4/ax_check_link_flag.m4
+++ b/libsodium/m4/ax_check_link_flag.m4
@@ -1,10 +1,10 @@
 # ===========================================================================
-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html
+#    https://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html
 # ===========================================================================
 #
 # SYNOPSIS
 #
-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])
+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS], [INPUT])
 #
 # DESCRIPTION
 #
@@ -19,6 +19,8 @@
 #   EXTRA-FLAGS FLAG".  This can for example be used to force the linker to
 #   issue an error when a bad flag is given.
 #
+#   INPUT gives an alternative input source to AC_LINK_IFELSE.
+#
 #   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this
 #   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.
 #
@@ -38,7 +40,7 @@
 #   Public License for more details.
 #
 #   You should have received a copy of the GNU General Public License along
-#   with this program. If not, see <http://www.gnu.org/licenses/>.
+#   with this program. If not, see <https://www.gnu.org/licenses/>.
 #
 #   As a special exception, the respective Autoconf Macro's copyright owner
 #   gives unlimited permission to copy, distribute and modify the configure
@@ -53,7 +55,7 @@
 #   modified version of the Autoconf Macro, you may extend this special
 #   exception to the GPL to apply to your modified version as well.
 
-#serial 2
+#serial 5
 
 AC_DEFUN([AX_CHECK_LINK_FLAG],
 [AC_PREREQ(2.64)dnl for _AC_LANG_PREFIX and AS_VAR_IF
@@ -61,8 +63,8 @@ AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl
 AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [
   ax_check_save_flags=$LDFLAGS
   LDFLAGS="$LDFLAGS $4 $1"
-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]],
-  [[char x[42U];if (fgets(x,1000,stdin)) puts(x)]])],
+  AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <time.h>]],
+  [[time_t x; int fodder = 0; if (fodder > -1000 && time(&x)) return (int) x]])],
     [AS_VAR_SET(CACHEVAR,[yes])],
     [AS_VAR_SET(CACHEVAR,[no])])
   LDFLAGS=$ax_check_save_flags])
diff --git a/libsodium/m4/pkg.m4 b/libsodium/m4/pkg.m4
deleted file mode 100644
index c5b26b5..0000000
--- a/libsodium/m4/pkg.m4
+++ /dev/null
@@ -1,214 +0,0 @@
-# pkg.m4 - Macros to locate and utilise pkg-config.            -*- Autoconf -*-
-# serial 1 (pkg-config-0.24)
-# 
-# Copyright © 2004 Scott James Remnant <scott@netsplit.com>.
-#
-# This program is free software; you can redistribute it and/or modify
-# it under the terms of the GNU General Public License as published by
-# the Free Software Foundation; either version 2 of the License, or
-# (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful, but
-# WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-# General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
-#
-# As a special exception to the GNU General Public License, if you
-# distribute this file as part of a program that contains a
-# configuration script generated by Autoconf, you may include it under
-# the same distribution terms that you use for the rest of that program.
-
-# PKG_PROG_PKG_CONFIG([MIN-VERSION])
-# ----------------------------------
-AC_DEFUN([PKG_PROG_PKG_CONFIG],
-[m4_pattern_forbid([^_?PKG_[A-Z_]+$])
-m4_pattern_allow([^PKG_CONFIG(_(PATH|LIBDIR|SYSROOT_DIR|ALLOW_SYSTEM_(CFLAGS|LIBS)))?$])
-m4_pattern_allow([^PKG_CONFIG_(DISABLE_UNINSTALLED|TOP_BUILD_DIR|DEBUG_SPEW)$])
-AC_ARG_VAR([PKG_CONFIG], [path to pkg-config utility])
-AC_ARG_VAR([PKG_CONFIG_PATH], [directories to add to pkg-config's search path])
-AC_ARG_VAR([PKG_CONFIG_LIBDIR], [path overriding pkg-config's built-in search path])
-
-if test "x$ac_cv_env_PKG_CONFIG_set" != "xset"; then
-	AC_PATH_TOOL([PKG_CONFIG], [pkg-config])
-fi
-if test -n "$PKG_CONFIG"; then
-	_pkg_min_version=m4_default([$1], [0.9.0])
-	AC_MSG_CHECKING([pkg-config is at least version $_pkg_min_version])
-	if $PKG_CONFIG --atleast-pkgconfig-version $_pkg_min_version; then
-		AC_MSG_RESULT([yes])
-	else
-		AC_MSG_RESULT([no])
-		PKG_CONFIG=""
-	fi
-fi[]dnl
-])# PKG_PROG_PKG_CONFIG
-
-# PKG_CHECK_EXISTS(MODULES, [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
-#
-# Check to see whether a particular set of modules exists.  Similar
-# to PKG_CHECK_MODULES(), but does not set variables or print errors.
-#
-# Please remember that m4 expands AC_REQUIRE([PKG_PROG_PKG_CONFIG])
-# only at the first occurence in configure.ac, so if the first place
-# it's called might be skipped (such as if it is within an "if", you
-# have to call PKG_CHECK_EXISTS manually
-# --------------------------------------------------------------
-AC_DEFUN([PKG_CHECK_EXISTS],
-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
-if test -n "$PKG_CONFIG" && \
-    AC_RUN_LOG([$PKG_CONFIG --exists --print-errors "$1"]); then
-  m4_default([$2], [:])
-m4_ifvaln([$3], [else
-  $3])dnl
-fi])
-
-# _PKG_CONFIG([VARIABLE], [COMMAND], [MODULES])
-# ---------------------------------------------
-m4_define([_PKG_CONFIG],
-[if test -n "$$1"; then
-    pkg_cv_[]$1="$$1"
- elif test -n "$PKG_CONFIG"; then
-    PKG_CHECK_EXISTS([$3],
-                     [pkg_cv_[]$1=`$PKG_CONFIG --[]$2 "$3" 2>/dev/null`
-		      test "x$?" != "x0" && pkg_failed=yes ],
-		     [pkg_failed=yes])
- else
-    pkg_failed=untried
-fi[]dnl
-])# _PKG_CONFIG
-
-# _PKG_SHORT_ERRORS_SUPPORTED
-# -----------------------------
-AC_DEFUN([_PKG_SHORT_ERRORS_SUPPORTED],
-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])
-if $PKG_CONFIG --atleast-pkgconfig-version 0.20; then
-        _pkg_short_errors_supported=yes
-else
-        _pkg_short_errors_supported=no
-fi[]dnl
-])# _PKG_SHORT_ERRORS_SUPPORTED
-
-
-# PKG_CHECK_MODULES(VARIABLE-PREFIX, MODULES, [ACTION-IF-FOUND],
-# [ACTION-IF-NOT-FOUND])
-#
-#
-# Note that if there is a possibility the first call to
-# PKG_CHECK_MODULES might not happen, you should be sure to include an
-# explicit call to PKG_PROG_PKG_CONFIG in your configure.ac
-#
-#
-# --------------------------------------------------------------
-AC_DEFUN([PKG_CHECK_MODULES],
-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
-AC_ARG_VAR([$1][_CFLAGS], [C compiler flags for $1, overriding pkg-config])dnl
-AC_ARG_VAR([$1][_LIBS], [linker flags for $1, overriding pkg-config])dnl
-
-pkg_failed=no
-AC_MSG_CHECKING([for $1])
-
-_PKG_CONFIG([$1][_CFLAGS], [cflags], [$2])
-_PKG_CONFIG([$1][_LIBS], [libs], [$2])
-
-m4_define([_PKG_TEXT], [Alternatively, you may set the environment variables $1[]_CFLAGS
-and $1[]_LIBS to avoid the need to call pkg-config.
-See the pkg-config man page for more details.])
-
-if test $pkg_failed = yes; then
-   	AC_MSG_RESULT([no])
-        _PKG_SHORT_ERRORS_SUPPORTED
-        if test $_pkg_short_errors_supported = yes; then
-	        $1[]_PKG_ERRORS=`$PKG_CONFIG --short-errors --print-errors --cflags --libs "$2" 2>&1`
-        else 
-	        $1[]_PKG_ERRORS=`$PKG_CONFIG --print-errors --cflags --libs "$2" 2>&1`
-        fi
-	# Put the nasty error message in config.log where it belongs
-	echo "$$1[]_PKG_ERRORS" >&AS_MESSAGE_LOG_FD
-
-	m4_default([$4], [AC_MSG_ERROR(
-[Package requirements ($2) were not met:
-
-$$1_PKG_ERRORS
-
-Consider adjusting the PKG_CONFIG_PATH environment variable if you
-installed software in a non-standard prefix.
-
-_PKG_TEXT])[]dnl
-        ])
-elif test $pkg_failed = untried; then
-     	AC_MSG_RESULT([no])
-	m4_default([$4], [AC_MSG_FAILURE(
-[The pkg-config script could not be found or is too old.  Make sure it
-is in your PATH or set the PKG_CONFIG environment variable to the full
-path to pkg-config.
-
-_PKG_TEXT
-
-To get pkg-config, see <http://pkg-config.freedesktop.org/>.])[]dnl
-        ])
-else
-	$1[]_CFLAGS=$pkg_cv_[]$1[]_CFLAGS
-	$1[]_LIBS=$pkg_cv_[]$1[]_LIBS
-        AC_MSG_RESULT([yes])
-	$3
-fi[]dnl
-])# PKG_CHECK_MODULES
-
-
-# PKG_INSTALLDIR(DIRECTORY)
-# -------------------------
-# Substitutes the variable pkgconfigdir as the location where a module
-# should install pkg-config .pc files. By default the directory is
-# $libdir/pkgconfig, but the default can be changed by passing
-# DIRECTORY. The user can override through the --with-pkgconfigdir
-# parameter.
-AC_DEFUN([PKG_INSTALLDIR],
-[m4_pushdef([pkg_default], [m4_default([$1], ['${libdir}/pkgconfig'])])
-m4_pushdef([pkg_description],
-    [pkg-config installation directory @<:@]pkg_default[@:>@])
-AC_ARG_WITH([pkgconfigdir],
-    [AS_HELP_STRING([--with-pkgconfigdir], pkg_description)],,
-    [with_pkgconfigdir=]pkg_default)
-AC_SUBST([pkgconfigdir], [$with_pkgconfigdir])
-m4_popdef([pkg_default])
-m4_popdef([pkg_description])
-]) dnl PKG_INSTALLDIR
-
-
-# PKG_NOARCH_INSTALLDIR(DIRECTORY)
-# -------------------------
-# Substitutes the variable noarch_pkgconfigdir as the location where a
-# module should install arch-independent pkg-config .pc files. By
-# default the directory is $datadir/pkgconfig, but the default can be
-# changed by passing DIRECTORY. The user can override through the
-# --with-noarch-pkgconfigdir parameter.
-AC_DEFUN([PKG_NOARCH_INSTALLDIR],
-[m4_pushdef([pkg_default], [m4_default([$1], ['${datadir}/pkgconfig'])])
-m4_pushdef([pkg_description],
-    [pkg-config arch-independent installation directory @<:@]pkg_default[@:>@])
-AC_ARG_WITH([noarch-pkgconfigdir],
-    [AS_HELP_STRING([--with-noarch-pkgconfigdir], pkg_description)],,
-    [with_noarch_pkgconfigdir=]pkg_default)
-AC_SUBST([noarch_pkgconfigdir], [$with_noarch_pkgconfigdir])
-m4_popdef([pkg_default])
-m4_popdef([pkg_description])
-]) dnl PKG_NOARCH_INSTALLDIR
-
-
-# PKG_CHECK_VAR(VARIABLE, MODULE, CONFIG-VARIABLE,
-# [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])
-# -------------------------------------------
-# Retrieves the value of the pkg-config variable for the given module.
-AC_DEFUN([PKG_CHECK_VAR],
-[AC_REQUIRE([PKG_PROG_PKG_CONFIG])dnl
-AC_ARG_VAR([$1], [value of $3 for $2, overriding pkg-config])dnl
-
-_PKG_CONFIG([$1], [variable="][$3]["], [$2])
-AS_VAR_COPY([$1], [pkg_cv_][$1])
-
-AS_VAR_IF([$1], [""], [$5], [$4])dnl
-])# PKG_CHECK_VAR
diff --git a/libsodium/packaging/nuget/.gitignore b/libsodium/packaging/nuget/.gitignore
deleted file mode 100644
index d4b1a8c..0000000
--- a/libsodium/packaging/nuget/.gitignore
+++ /dev/null
@@ -1,4 +0,0 @@
-*.nupkg
-package.nuspec
-package.targets
-package.xml
diff --git a/libsodium/packaging/nuget/package.bat b/libsodium/packaging/nuget/package.bat
deleted file mode 100644
index cb3a54f..0000000
--- a/libsodium/packaging/nuget/package.bat
+++ /dev/null
@@ -1,13 +0,0 @@
-@ECHO OFF
-ECHO Started nuget packaging build.
-ECHO.
-REM http://www.nuget.org/packages/gsl
-gsl -q -script:package.gsl package.config
-ECHO.
-REM http://nuget.codeplex.com/releases
-nuget pack package.nuspec -verbosity detailed
-ECHO.
-ECHO NOTE: Ignore warnings not applicable to native code: "Issue: Assembly outside lib folder."
-ECHO.
-ECHO Completed nuget packaging build. The package is in the following folder:
-CD
\ No newline at end of file
diff --git a/libsodium/packaging/nuget/package.config b/libsodium/packaging/nuget/package.config
deleted file mode 100644
index 410130d..0000000
--- a/libsodium/packaging/nuget/package.config
+++ /dev/null
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!-- These values are populated into the package.gsl templates by package.bat. -->
-<!-- The target attribute controls path and file name only, id controls package naming. -->
-<package id="libsodium_vc120" target="libsodium" version = "1.0.3.0" pathversion="1_0_3_0" platformtoolset="v120" />
diff --git a/libsodium/packaging/nuget/package.gsl b/libsodium/packaging/nuget/package.gsl
deleted file mode 100644
index 822a870..0000000
--- a/libsodium/packaging/nuget/package.gsl
+++ /dev/null
@@ -1,260 +0,0 @@
-.#  Generate NuGet nuspec file (for subsequent packing).
-.#
-.#  This is a code generator built using the iMatix GSL code generation
-.#  language. See https://github.com/imatix/gsl for details. This script
-.#  is licensed under MIT/X11.
-.#
-.echo "Generating package.nuspec from template."
-.output "package.nuspec"
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-<package xmlns="http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd">
-    <metadata minClientVersion="2.5">
-        <id>$(package.id)</id>
-        <version>$(package.version)</version>
-        <title>$(package.id)</title>
-        <authors>libsodium contributors</authors>
-        <owners>Eric Voskuil</owners>
-        <licenseUrl>https://raw.github.com/jedisct1/libsodium/master/LICENSE</licenseUrl>
-        <projectUrl>https://github.com/jedisct1/libsodium</projectUrl>
-        <iconUrl>http://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Salt_shaker_on_white_background.jpg/220px-Salt_shaker_on_white_background.jpg</iconUrl>
-        <requireLicenseAcceptance>true</requireLicenseAcceptance>
-        <developmentDependency>false</developmentDependency>
-        <description>Sodium is a portable, cross-compilable, installable, packageable fork of NaCl (based on the latest released upstream version nacl-20110221), with a compatible API.</description>
-        <summary>Portable fork of NaCl, packaged for Visual Studio 2013 (v120) and CTP_Nov2013 compilers.</summary>
-        <releaseNotes>https://raw.github.com/jedisct1/libsodium/master/ChangeLog</releaseNotes>
-        <copyright>(c) 2013-2014, Frank Denis (attribution required)</copyright>
-        <tags>native, NaCl, salt, sodium, libodium, C++</tags>
-        <dependencies>
-.for dependency
-            <dependency id="$(id)" version="$(version)" />
-.endfor
-        </dependencies>        
-        <!-- Salt shaker icon by Dubravko Soric :
-        http://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Salt_shaker_on_white_background.jpg/220px-Salt_shaker_on_white_background.jpg -->
-    </metadata>
-    <files>
-        <!-- include -->
-                
-        <file src="..\\..\\src\\libsodium\\include\\sodium.h" target="build\\native\\include" />
-        <file src="..\\..\\src\\libsodium\\include\\sodium\\*.*" target="build\\native\\include\\sodium" />    
-
-        <!-- targets -->
-      
-        <file src="package.targets" target="build\\native\\$(package.id).targets" />
-        <file src="package.xml" target="build\\native\\package.xml" />
-                
-        <!-- libraries -->
-
-        <!-- x86 Dynamic libraries (.dll) -->
-        <file src="..\\..\\bin\\Win32\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).dll" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-$(package.pathversion).dll" />
-        <file src="..\\..\\bin\\Win32\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).dll" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" />
-
-        <!-- x86 Debugging symbols (.pdb) -->
-        <!--<file src="..\\..\\bin\\Win32\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).pdb" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-$(package.pathversion).pdb" />-->
-        <file src="..\\..\\bin\\Win32\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).pdb" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" />
-
-        <!-- x86 Import libraries (.imp.lib) -->
-        <file src="..\\..\\bin\\Win32\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib" />
-        <file src="..\\..\\bin\\Win32\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib" />
-
-        <!-- x86 Export libraries (.exp) -->
-        <file src="..\\..\\bin\\Win32\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).exp" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-$(package.pathversion).exp" />
-        <file src="..\\..\\bin\\Win32\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).exp" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).exp" />
-
-        <!-- x86 Static libraries (.lib) -->
-        <file src="..\\..\\bin\\Win32\\Release\\$(package.platformtoolset)\\static\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).lib" />
-        <file src="..\\..\\bin\\Win32\\Debug\\$(package.platformtoolset)\\static\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib" />
-
-        <!-- x86 Static link time code generation libraries (.ltcg.lib) -->
-        <file src="..\\..\\bin\\Win32\\Release\\$(package.platformtoolset)\\ltcg\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).ltcg.lib" />
-        <file src="..\\..\\bin\\Win32\\Debug\\$(package.platformtoolset)\\ltcg\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).ltcg.lib" />
-
-        <!-- x64 Dynamic libraries (.dll) -->
-        <file src="..\\..\\bin\\x64\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).dll" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-$(package.pathversion).dll" />
-        <file src="..\\..\\bin\\x64\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).dll" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" />
-
-        <!-- x64 Debugging symbols (.pdb) -->
-        <!--<file src="..\\..\\bin\\x64\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).pdb" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-$(package.pathversion).pdb" />-->
-        <file src="..\\..\\bin\\x64\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).pdb" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" />
-
-        <!-- x64 Import libraries (.imp.lib) -->
-        <file src="..\\..\\bin\\x64\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib" />
-        <file src="..\\..\\bin\\x64\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib" />
-
-        <!-- x64 Export libraries (.exp) -->
-        <file src="..\\..\\bin\\x64\\Release\\$(package.platformtoolset)\\dynamic\\$(package.target).exp" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-$(package.pathversion).exp" />
-        <file src="..\\..\\bin\\x64\\Debug\\$(package.platformtoolset)\\dynamic\\$(package.target).exp" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).exp" />
-
-        <!-- x64 Static libraries (.lib) -->
-        <file src="..\\..\\bin\\x64\\Release\\$(package.platformtoolset)\\static\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).lib" />
-        <file src="..\\..\\bin\\x64\\Debug\\$(package.platformtoolset)\\static\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib" />
-
-        <!-- x64 Static link time code generation libraries (.ltcg.lib) -->
-        <file src="..\\..\\bin\\x64\\Release\\$(package.platformtoolset)\\ltcg\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).ltcg.lib" />
-        <file src="..\\..\\bin\\x64\\Debug\\$(package.platformtoolset)\\ltcg\\$(package.target).lib" target="build\\native\\bin\\$(package.target)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).ltcg.lib" />
-    </files>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-</package>
-.echo "Generating package.targets from template."
-.output "package.targets"
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-
-  <!-- user interface -->
-  <ItemGroup>
-    <PropertyPageSchema Include="$\(MSBuildThisFileDirectory)package.xml" />
-  </ItemGroup>
-
-  <!-- general -->
-  <ItemDefinitionGroup>
-    <ClCompile>
-      <AdditionalIncludeDirectories>$\(MSBuildThisFileDirectory)include\\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>advapi32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <AdditionalLibraryDirectories>$\(MSBuildThisFileDirectory)bin\\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Linkage-$(package.target))' == 'static' Or '$\(Linkage-$(package.target))' == 'ltcg'">
-    <ClCompile>
-      <PreprocessorDefinitions>SODIUM_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-    </ClCompile>
-  </ItemDefinitionGroup>
-
-  <!-- static libraries -->
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'static' And $\(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-
-  <!-- static ltcg libraries -->
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'ltcg' And $\(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x86-$(package.platformtoolset)-mt-s-$(package.pathversion).ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'ltcg' And $\(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x86-$(package.platformtoolset)-mt-sgd-$(package.pathversion).ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'ltcg' And $\(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x64-$(package.platformtoolset)-mt-s-$(package.pathversion).ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'ltcg' And $\(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x64-$(package.platformtoolset)-mt-sgd-$(package.pathversion).ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  
-  <!-- dynamic import libraries -->
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x86-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x64-$(package.platformtoolset)-mt-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>$(package.target)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-
-  <!-- dynamic libraries with debug symbols -->
-  <Target Name="$(package.target)_AfterBuild" AfterTargets="AfterBuild" />
-  <Target Name="$(package.target)_AfterBuild_Win32_$(package.platformtoolset)_Dynamic_Release"
-          Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1"
-          AfterTargets="$(package.target)_AfterBuild">
-    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x86-$(package.platformtoolset)-mt-$(package.pathversion).dll" DestinationFiles="$\(TargetDir)$(package.target).dll" SkipUnchangedFiles="true" />
-    <!--<Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x86-$(package.platformtoolset)-mt-$(package.pathversion).pdb" DestinationFiles="$\(TargetDir)$(package.target).pdb" SkipUnchangedFiles="true" />-->
-  </Target>
-  <Target Name="$(package.target)_AfterBuild_Win32_$(package.platformtoolset)_Dynamic_Debug"
-          Condition="'$\(Platform)' == 'Win32' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1"
-          AfterTargets="$(package.target)_AfterBuild">
-    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" DestinationFiles="$\(TargetDir)$(package.target).dll" SkipUnchangedFiles="true" />
-    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x86-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" DestinationFiles="$\(TargetDir)$(package.target).pdb" SkipUnchangedFiles="true" />
-  </Target>
-  <Target Name="$(package.target)_AfterBuild_x64_$(package.platformtoolset)_Dynamic_Release"
-          Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Release')) != -1"
-          AfterTargets="$(package.target)_AfterBuild">
-    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x64-$(package.platformtoolset)-mt-$(package.pathversion).dll" DestinationFiles="$\(TargetDir)$(package.target).dll" SkipUnchangedFiles="true" />
-    <!--<Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x64-$(package.platformtoolset)-mt-$(package.pathversion).pdb" DestinationFiles="$\(TargetDir)$(package.target).pdb" SkipUnchangedFiles="true" />-->
-  </Target>
-  <Target Name="$(package.target)_AfterBuild_x64_$(package.platformtoolset)_Dynamic_Debug"
-          Condition="'$\(Platform)' == 'x64' And ('$\(PlatformToolset)' == '$(package.platformtoolset)' Or '$\(PlatformToolset)' == 'CTP_Nov2013') And '$\(Linkage-$(package.target))' == 'dynamic' And $\(Configuration.IndexOf('Debug')) != -1"
-          AfterTargets="$(package.target)_AfterBuild">
-    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).dll" DestinationFiles="$\(TargetDir)$(package.target).dll" SkipUnchangedFiles="true" />
-    <Copy SourceFiles="$\(MSBuildThisFileDirectory)bin\\$(package.target)-x64-$(package.platformtoolset)-mt-gd-$(package.pathversion).pdb" DestinationFiles="$\(TargetDir)$(package.target).pdb" SkipUnchangedFiles="true" />
-  </Target>
-
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-</Project>
-.echo "Generating package.xml (ui extension) from template."
-.output "package.xml"
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-<ProjectSchemaDefinitions xmlns="clr-namespace:Microsoft.Build.Framework.XamlTypes;assembly=Microsoft.Build.Framework">
-  <Rule Name="Linkage-$(package.target)-uiextension" PageTemplate="tool" DisplayName="NuGet Dependencies" SwitchPrefix="/" Order="1">
-    <Rule.Categories>
-      <Category Name="$(package.target)" DisplayName="$(package.target)" />
-    </Rule.Categories>
-    <Rule.DataSource>
-      <DataSource Persistence="ProjectFile" ItemType="" />
-    </Rule.DataSource>
-    <EnumProperty Name="Linkage-$(package.target)" DisplayName="Linkage" Description="How NuGet $(package.target) will be linked into the output of this project" Category="$(package.target)">
-      <EnumValue Name="" DisplayName="Not linked" />
-      <EnumValue Name="dynamic" DisplayName="Dynamic (DLL)" />
-      <EnumValue Name="static" DisplayName="Static (LIB)" />
-      <EnumValue Name="ltcg" DisplayName="Static using link time compile generation (LTCG)" />
-    </EnumProperty>
-  </Rule>
-</ProjectSchemaDefinitions>
\ No newline at end of file
diff --git a/libsodium/packaging/nuget/package.nuspec b/libsodium/packaging/nuget/package.nuspec
deleted file mode 100644
index d0d62bc..0000000
--- a/libsodium/packaging/nuget/package.nuspec
+++ /dev/null
@@ -1,95 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-<package xmlns="http://schemas.microsoft.com/packaging/2013/01/nuspec.xsd">
-    <metadata minClientVersion="2.5">
-        <id>libsodium_vc120</id>
-        <version>1.0.0.0</version>
-        <title>libsodium_vc120</title>
-        <authors>libsodium contributors</authors>
-        <owners>Eric Voskuil</owners>
-        <licenseUrl>https://raw.github.com/jedisct1/libsodium/master/LICENSE</licenseUrl>
-        <projectUrl>https://github.com/jedisct1/libsodium</projectUrl>
-        <iconUrl>http://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Salt_shaker_on_white_background.jpg/220px-Salt_shaker_on_white_background.jpg</iconUrl>
-        <requireLicenseAcceptance>true</requireLicenseAcceptance>
-        <developmentDependency>false</developmentDependency>
-        <description>Sodium is a portable, cross-compilable, installable, packageable fork of NaCl (based on the latest released upstream version nacl-20110221), with a compatible API.</description>
-        <summary>Portable fork of NaCl, packaged for Visual Studio 2013 (v120) and CTP_Nov2013 compilers.</summary>
-        <releaseNotes>https://raw.github.com/jedisct1/libsodium/master/ChangeLog</releaseNotes>
-        <copyright>(c) 2013-2014, Frank Denis (attribution required)</copyright>
-        <tags>native, NaCl, salt, sodium, libodium, C++</tags>
-        <dependencies>
-        </dependencies>        
-        <!-- Salt shaker icon by Dubravko Soric :
-        http://upload.wikimedia.org/wikipedia/commons/thumb/7/78/Salt_shaker_on_white_background.jpg/220px-Salt_shaker_on_white_background.jpg -->
-    </metadata>
-    <files>
-        <!-- include -->
-                
-        <file src="..\..\src\libsodium\include\sodium.h" target="build\native\include" />
-        <file src="..\..\src\libsodium\include\sodium\*.*" target="build\native\include\sodium" />             
-
-        <!-- targets -->
-      
-        <file src="package.targets" target="build\native\libsodium_vc120.targets" />
-        <file src="package.xml" target="build\native\package.xml" />
-                
-        <!-- libraries -->
-
-        <!-- x86 Dynamic libraries (.dll) -->
-        <file src="..\..\bin\Win32\Release\v120\dynamic\libsodium.dll" target="build\native\bin\libsodium-x86-v120-mt-1_0_0_0.dll" />
-        <file src="..\..\bin\Win32\Debug\v120\dynamic\libsodium.dll" target="build\native\bin\libsodium-x86-v120-mt-gd-1_0_0_0.dll" />
-
-        <!-- x86 Debugging symbols (.pdb) -->
-        <!--<file src="..\..\bin\Win32\Release\v120\dynamic\libsodium.pdb" target="build\native\bin\libsodium-x86-v120-mt-1_0_0_0.pdb" />-->
-        <file src="..\..\bin\Win32\Debug\v120\dynamic\libsodium.pdb" target="build\native\bin\libsodium-x86-v120-mt-gd-1_0_0_0.pdb" />
-
-        <!-- x86 Import libraries (.imp.lib) -->
-        <file src="..\..\bin\Win32\Release\v120\dynamic\libsodium.lib" target="build\native\bin\libsodium-x86-v120-mt-1_0_0_0.imp.lib" />
-        <file src="..\..\bin\Win32\Debug\v120\dynamic\libsodium.lib" target="build\native\bin\libsodium-x86-v120-mt-gd-1_0_0_0.imp.lib" />
-
-        <!-- x86 Export libraries (.exp) -->
-        <file src="..\..\bin\Win32\Release\v120\dynamic\libsodium.exp" target="build\native\bin\libsodium-x86-v120-mt-1_0_0_0.exp" />
-        <file src="..\..\bin\Win32\Debug\v120\dynamic\libsodium.exp" target="build\native\bin\libsodium-x86-v120-mt-gd-1_0_0_0.exp" />
-
-        <!-- x86 Static libraries (.lib) -->
-        <file src="..\..\bin\Win32\Release\v120\static\libsodium.lib" target="build\native\bin\libsodium-x86-v120-mt-s-1_0_0_0.lib" />
-        <file src="..\..\bin\Win32\Debug\v120\static\libsodium.lib" target="build\native\bin\libsodium-x86-v120-mt-sgd-1_0_0_0.lib" />
-
-        <!-- x86 Static link time code generation libraries (.ltcg.lib) -->
-        <file src="..\..\bin\Win32\Release\v120\ltcg\libsodium.lib" target="build\native\bin\libsodium-x86-v120-mt-s-1_0_0_0.ltcg.lib" />
-        <file src="..\..\bin\Win32\Debug\v120\ltcg\libsodium.lib" target="build\native\bin\libsodium-x86-v120-mt-sgd-1_0_0_0.ltcg.lib" />
-
-        <!-- x64 Dynamic libraries (.dll) -->
-        <file src="..\..\bin\x64\Release\v120\dynamic\libsodium.dll" target="build\native\bin\libsodium-x64-v120-mt-1_0_0_0.dll" />
-        <file src="..\..\bin\x64\Debug\v120\dynamic\libsodium.dll" target="build\native\bin\libsodium-x64-v120-mt-gd-1_0_0_0.dll" />
-
-        <!-- x64 Debugging symbols (.pdb) -->
-        <!--<file src="..\..\bin\x64\Release\v120\dynamic\libsodium.pdb" target="build\native\bin\libsodium-x64-v120-mt-1_0_0_0.pdb" />-->
-        <file src="..\..\bin\x64\Debug\v120\dynamic\libsodium.pdb" target="build\native\bin\libsodium-x64-v120-mt-gd-1_0_0_0.pdb" />
-
-        <!-- x64 Import libraries (.imp.lib) -->
-        <file src="..\..\bin\x64\Release\v120\dynamic\libsodium.lib" target="build\native\bin\libsodium-x64-v120-mt-1_0_0_0.imp.lib" />
-        <file src="..\..\bin\x64\Debug\v120\dynamic\libsodium.lib" target="build\native\bin\libsodium-x64-v120-mt-gd-1_0_0_0.imp.lib" />
-
-        <!-- x64 Export libraries (.exp) -->
-        <file src="..\..\bin\x64\Release\v120\dynamic\libsodium.exp" target="build\native\bin\libsodium-x64-v120-mt-1_0_0_0.exp" />
-        <file src="..\..\bin\x64\Debug\v120\dynamic\libsodium.exp" target="build\native\bin\libsodium-x64-v120-mt-gd-1_0_0_0.exp" />
-
-        <!-- x64 Static libraries (.lib) -->
-        <file src="..\..\bin\x64\Release\v120\static\libsodium.lib" target="build\native\bin\libsodium-x64-v120-mt-s-1_0_0_0.lib" />
-        <file src="..\..\bin\x64\Debug\v120\static\libsodium.lib" target="build\native\bin\libsodium-x64-v120-mt-sgd-1_0_0_0.lib" />
-
-        <!-- x64 Static link time code generation libraries (.ltcg.lib) -->
-        <file src="..\..\bin\x64\Release\v120\ltcg\libsodium.lib" target="build\native\bin\libsodium-x64-v120-mt-s-1_0_0_0.ltcg.lib" />
-        <file src="..\..\bin\x64\Debug\v120\ltcg\libsodium.lib" target="build\native\bin\libsodium-x64-v120-mt-sgd-1_0_0_0.ltcg.lib" />
-    </files>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-</package>
diff --git a/libsodium/packaging/nuget/package.targets b/libsodium/packaging/nuget/package.targets
deleted file mode 100644
index 2abac15..0000000
--- a/libsodium/packaging/nuget/package.targets
+++ /dev/null
@@ -1,128 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
-
-  <!-- user interface -->
-  <ItemGroup>
-    <PropertyPageSchema Include="$(MSBuildThisFileDirectory)package.xml" />
-  </ItemGroup>
-
-  <!-- general -->
-  <ItemDefinitionGroup>
-    <ClCompile>
-      <AdditionalIncludeDirectories>$(MSBuildThisFileDirectory)include\;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
-    </ClCompile>
-    <Link>
-      <AdditionalDependencies>advapi32.lib;crypt32.lib;%(AdditionalDependencies)</AdditionalDependencies>
-      <AdditionalLibraryDirectories>$(MSBuildThisFileDirectory)bin\;%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Linkage-libsodium)' == 'static' Or '$(Linkage-libsodium)' == 'ltcg'">
-    <ClCompile>
-      <PreprocessorDefinitions>SODIUM_STATIC;%(PreprocessorDefinitions)</PreprocessorDefinitions>
-    </ClCompile>
-  </ItemDefinitionGroup>
-
-  <!-- static libraries -->
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'static' And $(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x86-v120-mt-s-1_0_0_0.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'static' And $(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x86-v120-mt-sgd-1_0_0_0.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'static' And $(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x64-v120-mt-s-1_0_0_0.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'static' And $(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x64-v120-mt-sgd-1_0_0_0.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-
-  <!-- static ltcg libraries -->
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'ltcg' And $(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x86-v120-mt-s-1_0_0_0.ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'ltcg' And $(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x86-v120-mt-sgd-1_0_0_0.ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'ltcg' And $(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x64-v120-mt-s-1_0_0_0.ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'ltcg' And $(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x64-v120-mt-sgd-1_0_0_0.ltcg.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  
-  <!-- dynamic import libraries -->
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x86-v120-mt-1_0_0_0.imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x86-v120-mt-gd-1_0_0_0.imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Release')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x64-v120-mt-1_0_0_0.imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-  <ItemDefinitionGroup Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Debug')) != -1">
-    <Link>
-      <AdditionalDependencies>libsodium-x64-v120-mt-gd-1_0_0_0.imp.lib;%(AdditionalDependencies)</AdditionalDependencies>
-    </Link>
-  </ItemDefinitionGroup>
-
-  <!-- dynamic libraries with debug symbols -->
-  <Target Name="libsodium_AfterBuild" AfterTargets="AfterBuild" />
-  <Target Name="libsodium_AfterBuild_Win32_v120_Dynamic_Release"
-          Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Release')) != -1"
-          AfterTargets="libsodium_AfterBuild">
-    <Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x86-v120-mt-1_0_0_0.dll" DestinationFiles="$(TargetDir)libsodium.dll" SkipUnchangedFiles="true" />
-    <!--<Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x86-v120-mt-1_0_0_0.pdb" DestinationFiles="$(TargetDir)libsodium.pdb" SkipUnchangedFiles="true" />-->
-  </Target>
-  <Target Name="libsodium_AfterBuild_Win32_v120_Dynamic_Debug"
-          Condition="'$(Platform)' == 'Win32' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Debug')) != -1"
-          AfterTargets="libsodium_AfterBuild">
-    <Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x86-v120-mt-gd-1_0_0_0.dll" DestinationFiles="$(TargetDir)libsodium.dll" SkipUnchangedFiles="true" />
-    <Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x86-v120-mt-gd-1_0_0_0.pdb" DestinationFiles="$(TargetDir)libsodium.pdb" SkipUnchangedFiles="true" />
-  </Target>
-  <Target Name="libsodium_AfterBuild_x64_v120_Dynamic_Release"
-          Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Release')) != -1"
-          AfterTargets="libsodium_AfterBuild">
-    <Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x64-v120-mt-1_0_0_0.dll" DestinationFiles="$(TargetDir)libsodium.dll" SkipUnchangedFiles="true" />
-    <!--<Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x64-v120-mt-1_0_0_0.pdb" DestinationFiles="$(TargetDir)libsodium.pdb" SkipUnchangedFiles="true" />-->
-  </Target>
-  <Target Name="libsodium_AfterBuild_x64_v120_Dynamic_Debug"
-          Condition="'$(Platform)' == 'x64' And ('$(PlatformToolset)' == 'v120' Or '$(PlatformToolset)' == 'CTP_Nov2013') And '$(Linkage-libsodium)' == 'dynamic' And $(Configuration.IndexOf('Debug')) != -1"
-          AfterTargets="libsodium_AfterBuild">
-    <Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x64-v120-mt-gd-1_0_0_0.dll" DestinationFiles="$(TargetDir)libsodium.dll" SkipUnchangedFiles="true" />
-    <Copy SourceFiles="$(MSBuildThisFileDirectory)bin\libsodium-x64-v120-mt-gd-1_0_0_0.pdb" DestinationFiles="$(TargetDir)libsodium.pdb" SkipUnchangedFiles="true" />
-  </Target>
-
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-</Project>
diff --git a/libsodium/packaging/nuget/package.xml b/libsodium/packaging/nuget/package.xml
deleted file mode 100644
index abaea23..0000000
--- a/libsodium/packaging/nuget/package.xml
+++ /dev/null
@@ -1,22 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<!--
-#################################################################
-#   GENERATED SOURCE CODE, DO NOT EDIT EXCEPT EXPERIMENTALLY    #
-#################################################################
--->
-<ProjectSchemaDefinitions xmlns="clr-namespace:Microsoft.Build.Framework.XamlTypes;assembly=Microsoft.Build.Framework">
-  <Rule Name="Linkage-libsodium-uiextension" PageTemplate="tool" DisplayName="NuGet Dependencies" SwitchPrefix="/" Order="1">
-    <Rule.Categories>
-      <Category Name="libsodium" DisplayName="libsodium" />
-    </Rule.Categories>
-    <Rule.DataSource>
-      <DataSource Persistence="ProjectFile" ItemType="" />
-    </Rule.DataSource>
-    <EnumProperty Name="Linkage-libsodium" DisplayName="Linkage" Description="How NuGet libsodium will be linked into the output of this project" Category="libsodium">
-      <EnumValue Name="" DisplayName="Not linked" />
-      <EnumValue Name="dynamic" DisplayName="Dynamic (DLL)" />
-      <EnumValue Name="static" DisplayName="Static (LIB)" />
-      <EnumValue Name="ltcg" DisplayName="Static using link time compile generation (LTCG)" />
-    </EnumProperty>
-  </Rule>
-</ProjectSchemaDefinitions>
\ No newline at end of file
diff --git a/libsodium/src/Makefile.in b/libsodium/src/Makefile.in
index fbeccf8..d243b0d 100644
--- a/libsodium/src/Makefile.in
+++ b/libsodium/src/Makefile.in
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.14.1 from Makefile.am.
+# Makefile.in generated by automake 1.16.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+# Copyright (C) 1994-2018 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -14,7 +14,17 @@
 
 @SET_MAKE@
 VPATH = @srcdir@
-am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
 am__make_running_with_option = \
   case $${target_option-} in \
       ?) ;; \
@@ -78,17 +88,21 @@ POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
 subdir = src
-DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_catchable_abrt.m4 \
+	$(top_srcdir)/m4/ax_check_catchable_segv.m4 \
+	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
 	$(top_srcdir)/m4/ax_check_define.m4 \
 	$(top_srcdir)/m4/ax_check_link_flag.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
+	$(top_srcdir)/m4/ax_valgrind_check.m4 \
 	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/configure.ac
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
 mkinstalldirs = $(install_sh) -d
 CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
@@ -126,7 +140,7 @@ am__recursive_targets = \
   $(RECURSIVE_CLEAN_TARGETS) \
   $(am__extra_recursive_targets)
 AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
-	distdir
+	distdir distdir-am
 am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
 # Read a list of newline-separated strings from the standard input,
 # and print each of them once, without duplicates.  Input order is
@@ -147,6 +161,7 @@ am__define_uniq_tagged_files = \
 ETAGS = etags
 CTAGS = ctags
 DIST_SUBDIRS = $(SUBDIRS)
+am__DIST_COMMON = $(srcdir)/Makefile.in
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 am__relativize = \
   dir0=`pwd`; \
@@ -174,6 +189,7 @@ am__relativize = \
   done; \
   reldir="$$dir2"
 ACLOCAL = @ACLOCAL@
+ALLOCA = @ALLOCA@
 AMTAR = @AMTAR@
 AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
 AR = @AR@
@@ -189,8 +205,12 @@ CCASFLAGS = @CCASFLAGS@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
 CFLAGS_AESNI = @CFLAGS_AESNI@
+CFLAGS_AVX = @CFLAGS_AVX@
+CFLAGS_AVX2 = @CFLAGS_AVX2@
+CFLAGS_AVX512F = @CFLAGS_AVX512F@
 CFLAGS_MMX = @CFLAGS_MMX@
 CFLAGS_PCLMUL = @CFLAGS_PCLMUL@
+CFLAGS_RDRAND = @CFLAGS_RDRAND@
 CFLAGS_SSE2 = @CFLAGS_SSE2@
 CFLAGS_SSE3 = @CFLAGS_SSE3@
 CFLAGS_SSE41 = @CFLAGS_SSE41@
@@ -209,6 +229,10 @@ ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
+ENABLE_VALGRIND_drd = @ENABLE_VALGRIND_drd@
+ENABLE_VALGRIND_helgrind = @ENABLE_VALGRIND_helgrind@
+ENABLE_VALGRIND_memcheck = @ENABLE_VALGRIND_memcheck@
+ENABLE_VALGRIND_sgcheck = @ENABLE_VALGRIND_sgcheck@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
@@ -221,7 +245,6 @@ INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
-ISODATE = @ISODATE@
 LD = @LD@
 LDFLAGS = @LDFLAGS@
 LIBOBJS = @LIBOBJS@
@@ -232,6 +255,7 @@ LIBTOOL_EXTRA_FLAGS = @LIBTOOL_EXTRA_FLAGS@
 LIPO = @LIPO@
 LN_S = @LN_S@
 LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
 MAINT = @MAINT@
 MAKEINFO = @MAKEINFO@
 MANIFEST_TOOL = @MANIFEST_TOOL@
@@ -250,16 +274,23 @@ PACKAGE_TARNAME = @PACKAGE_TARNAME@
 PACKAGE_URL = @PACKAGE_URL@
 PACKAGE_VERSION = @PACKAGE_VERSION@
 PATH_SEPARATOR = @PATH_SEPARATOR@
+PKGCONFIG_LIBS_PRIVATE = @PKGCONFIG_LIBS_PRIVATE@
+PTHREAD_CC = @PTHREAD_CC@
+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
+PTHREAD_LIBS = @PTHREAD_LIBS@
 RANLIB = @RANLIB@
 SAFECODE_HOME = @SAFECODE_HOME@
 SED = @SED@
 SET_MAKE = @SET_MAKE@
 SHELL = @SHELL@
+SODIUM_LIBRARY_MINIMAL_DEF = @SODIUM_LIBRARY_MINIMAL_DEF@
 SODIUM_LIBRARY_VERSION = @SODIUM_LIBRARY_VERSION@
 SODIUM_LIBRARY_VERSION_MAJOR = @SODIUM_LIBRARY_VERSION_MAJOR@
 SODIUM_LIBRARY_VERSION_MINOR = @SODIUM_LIBRARY_VERSION_MINOR@
 STRIP = @STRIP@
 TEST_LDFLAGS = @TEST_LDFLAGS@
+VALGRIND = @VALGRIND@
+VALGRIND_ENABLED = @VALGRIND_ENABLED@
 VERSION = @VERSION@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
@@ -273,6 +304,7 @@ am__leading_dot = @am__leading_dot@
 am__quote = @am__quote@
 am__tar = @am__tar@
 am__untar = @am__untar@
+ax_pthread_config = @ax_pthread_config@
 bindir = @bindir@
 build = @build@
 build_alias = @build_alias@
@@ -313,6 +345,8 @@ target_alias = @target_alias@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
+valgrind_enabled_tools = @valgrind_enabled_tools@
+valgrind_tools = @valgrind_tools@
 SUBDIRS = \
 	libsodium
 
@@ -331,14 +365,13 @@ $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__confi
 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
 	  $(AUTOMAKE) --foreign src/Makefile
-.PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
-	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
-	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
 	esac;
 
 $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
@@ -455,7 +488,10 @@ cscopelist-am: $(am__tagged_files)
 distclean-tags:
 	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
 
-distdir: $(DISTFILES)
+distdir: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) distdir-am
+
+distdir-am: $(DISTFILES)
 	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	list='$(DISTFILES)'; \
@@ -626,6 +662,8 @@ uninstall-am:
 	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
 	ps ps-am tags tags-am uninstall uninstall-am
 
+.PRECIOUS: Makefile
+
 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
diff --git a/libsodium/src/libsodium/Makefile.am b/libsodium/src/libsodium/Makefile.am
index 23d9be6..cf4cfc9 100644
--- a/libsodium/src/libsodium/Makefile.am
+++ b/libsodium/src/libsodium/Makefile.am
@@ -1,42 +1,39 @@
+lib_LTLIBRARIES = \
+	libsodium.la
+
 libsodium_la_SOURCES = \
 	crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c \
+	crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c \
 	crypto_auth/crypto_auth.c \
-	crypto_auth/hmacsha256/auth_hmacsha256_api.c \
-	crypto_auth/hmacsha256/cp/hmac_hmacsha256.c \
-	crypto_auth/hmacsha256/cp/verify_hmacsha256.c \
-	crypto_auth/hmacsha512/auth_hmacsha512_api.c \
-	crypto_auth/hmacsha512/cp/hmac_hmacsha512.c \
-	crypto_auth/hmacsha512/cp/verify_hmacsha512.c \
-	crypto_auth/hmacsha512256/auth_hmacsha512256_api.c \
-	crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c \
-	crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c \
+	crypto_auth/hmacsha256/auth_hmacsha256.c \
+	crypto_auth/hmacsha512/auth_hmacsha512.c \
+	crypto_auth/hmacsha512256/auth_hmacsha512256.c \
 	crypto_box/crypto_box.c \
 	crypto_box/crypto_box_easy.c \
 	crypto_box/crypto_box_seal.c \
-	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c \
-	crypto_core/hsalsa20/ref2/core_hsalsa20.c \
-	crypto_core/hsalsa20/core_hsalsa20_api.c \
-	crypto_core/salsa20/ref/core_salsa20.c \
-	crypto_core/salsa20/core_salsa20_api.c \
+	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c \
+	crypto_core/ed25519/ref10/ed25519_ref10.c \
+	crypto_core/hchacha20/core_hchacha20.c \
+	crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c \
+	crypto_core/hsalsa20/core_hsalsa20.c \
+	crypto_core/salsa/ref/core_salsa_ref.c \
 	crypto_generichash/crypto_generichash.c \
-	crypto_generichash/blake2/generichash_blake2_api.c \
-	crypto_generichash/blake2/ref/blake2-impl.h \
-	crypto_generichash/blake2/ref/blake2.h \
-	crypto_generichash/blake2/ref/blake2b-compress-ref.c \
-	crypto_generichash/blake2/ref/blake2b-load-sse2.h \
-	crypto_generichash/blake2/ref/blake2b-load-sse41.h \
-	crypto_generichash/blake2/ref/blake2b-ref.c \
-	crypto_generichash/blake2/ref/blake2b-round.h \
-	crypto_generichash/blake2/ref/generichash_blake2b.c \
+	crypto_generichash/blake2b/generichash_blake2.c \
+	crypto_generichash/blake2b/ref/blake2.h \
+	crypto_generichash/blake2b/ref/blake2b-compress-ref.c \
+	crypto_generichash/blake2b/ref/blake2b-load-sse2.h \
+	crypto_generichash/blake2b/ref/blake2b-load-sse41.h \
+	crypto_generichash/blake2b/ref/blake2b-load-avx2.h \
+	crypto_generichash/blake2b/ref/blake2b-ref.c \
+	crypto_generichash/blake2b/ref/generichash_blake2b.c \
 	crypto_hash/crypto_hash.c \
-	crypto_hash/sha256/hash_sha256_api.c \
-	crypto_hash/sha256/cp/hash_sha256.c \
-	crypto_hash/sha512/hash_sha512_api.c \
-	crypto_hash/sha512/cp/hash_sha512.c \
+	crypto_hash/sha256/hash_sha256.c \
+	crypto_hash/sha256/cp/hash_sha256_cp.c \
+	crypto_hash/sha512/hash_sha512.c \
+	crypto_hash/sha512/cp/hash_sha512_cp.c \
+	crypto_kdf/blake2b/kdf_blake2b.c \
+	crypto_kdf/crypto_kdf.c \
+	crypto_kx/crypto_kx.c \
 	crypto_onetimeauth/crypto_onetimeauth.c \
 	crypto_onetimeauth/poly1305/onetimeauth_poly1305.c \
 	crypto_onetimeauth/poly1305/onetimeauth_poly1305.h \
@@ -44,138 +41,85 @@ libsodium_la_SOURCES = \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna32.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna64.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna.c \
-	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
-	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
-	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
-	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
-	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
-	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
-	crypto_pwhash/scryptsalsa208sha256/sysendian.h \
-	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
+	crypto_pwhash/argon2/argon2-core.c \
+	crypto_pwhash/argon2/argon2-core.h \
+	crypto_pwhash/argon2/argon2-encoding.c \
+	crypto_pwhash/argon2/argon2-encoding.h \
+	crypto_pwhash/argon2/argon2-fill-block-ref.c \
+	crypto_pwhash/argon2/argon2.c \
+	crypto_pwhash/argon2/argon2.h \
+	crypto_pwhash/argon2/blake2b-long.c \
+	crypto_pwhash/argon2/blake2b-long.h \
+	crypto_pwhash/argon2/blamka-round-ref.h \
+	crypto_pwhash/argon2/pwhash_argon2i.c \
+	crypto_pwhash/argon2/pwhash_argon2id.c \
+	crypto_pwhash/crypto_pwhash.c \
 	crypto_scalarmult/crypto_scalarmult.c \
+	crypto_scalarmult/curve25519/ref10/x25519_ref10.c \
+	crypto_scalarmult/curve25519/ref10/x25519_ref10.h \
 	crypto_scalarmult/curve25519/scalarmult_curve25519.c \
 	crypto_scalarmult/curve25519/scalarmult_curve25519.h \
 	crypto_secretbox/crypto_secretbox.c \
 	crypto_secretbox/crypto_secretbox_easy.c \
-	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c \
-	crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c \
+	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c \
+	crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c \
 	crypto_shorthash/crypto_shorthash.c \
-	crypto_shorthash/siphash24/shorthash_siphash24_api.c \
-	crypto_shorthash/siphash24/ref/shorthash_siphash24.c \
+	crypto_shorthash/siphash24/shorthash_siphash24.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h \
 	crypto_sign/crypto_sign.c \
-	crypto_sign/ed25519/ref10/base.h \
-	crypto_sign/ed25519/ref10/base2.h \
-	crypto_sign/ed25519/sign_ed25519_api.c \
-	crypto_sign/ed25519/ref10/d.h \
-	crypto_sign/ed25519/ref10/d2.h \
-	crypto_sign/ed25519/ref10/fe.h \
-	crypto_sign/ed25519/ref10/fe_0.c \
-	crypto_sign/ed25519/ref10/fe_1.c \
-	crypto_sign/ed25519/ref10/fe_add.c \
-	crypto_sign/ed25519/ref10/fe_cmov.c \
-	crypto_sign/ed25519/ref10/fe_copy.c \
-	crypto_sign/ed25519/ref10/fe_frombytes.c \
-	crypto_sign/ed25519/ref10/fe_invert.c \
-	crypto_sign/ed25519/ref10/fe_isnegative.c \
-	crypto_sign/ed25519/ref10/fe_isnonzero.c \
-	crypto_sign/ed25519/ref10/fe_mul.c \
-	crypto_sign/ed25519/ref10/fe_neg.c \
-	crypto_sign/ed25519/ref10/fe_pow22523.c \
-	crypto_sign/ed25519/ref10/fe_sq.c \
-	crypto_sign/ed25519/ref10/fe_sq2.c \
-	crypto_sign/ed25519/ref10/fe_sub.c \
-	crypto_sign/ed25519/ref10/fe_tobytes.c \
-	crypto_sign/ed25519/ref10/ge.h \
-	crypto_sign/ed25519/ref10/ge_add.c \
-	crypto_sign/ed25519/ref10/ge_add.h \
-	crypto_sign/ed25519/ref10/ge_double_scalarmult.c \
-	crypto_sign/ed25519/ref10/ge_frombytes.c \
-	crypto_sign/ed25519/ref10/ge_madd.c \
-	crypto_sign/ed25519/ref10/ge_madd.h \
-	crypto_sign/ed25519/ref10/ge_msub.c \
-	crypto_sign/ed25519/ref10/ge_msub.h \
-	crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c \
-	crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c \
-	crypto_sign/ed25519/ref10/ge_p2_0.c \
-	crypto_sign/ed25519/ref10/ge_p2_dbl.c \
-	crypto_sign/ed25519/ref10/ge_p2_dbl.h \
-	crypto_sign/ed25519/ref10/ge_p3_0.c \
-	crypto_sign/ed25519/ref10/ge_p3_dbl.c \
-	crypto_sign/ed25519/ref10/ge_p3_to_cached.c \
-	crypto_sign/ed25519/ref10/ge_p3_to_p2.c \
-	crypto_sign/ed25519/ref10/ge_p3_tobytes.c \
-	crypto_sign/ed25519/ref10/ge_precomp_0.c \
-	crypto_sign/ed25519/ref10/ge_scalarmult_base.c \
-	crypto_sign/ed25519/ref10/ge_sub.c \
-	crypto_sign/ed25519/ref10/ge_sub.h \
-	crypto_sign/ed25519/ref10/ge_tobytes.c \
+	crypto_sign/ed25519/sign_ed25519.c \
 	crypto_sign/ed25519/ref10/keypair.c \
 	crypto_sign/ed25519/ref10/open.c \
-	crypto_sign/ed25519/ref10/pow22523.h \
-	crypto_sign/ed25519/ref10/pow225521.h \
-	crypto_sign/ed25519/ref10/sc.h \
-	crypto_sign/ed25519/ref10/sc_muladd.c \
-	crypto_sign/ed25519/ref10/sc_reduce.c \
 	crypto_sign/ed25519/ref10/sign.c \
-	crypto_sign/ed25519/ref10/sqrtm1.h \
-	crypto_stream/crypto_stream.c \
+	crypto_sign/ed25519/ref10/sign_ed25519_ref10.h \
 	crypto_stream/chacha20/stream_chacha20.c \
 	crypto_stream/chacha20/stream_chacha20.h \
-	crypto_stream/chacha20/ref/stream_chacha20_ref.h \
-	crypto_stream/chacha20/ref/stream_chacha20_ref.c \
-	crypto_stream/salsa20/stream_salsa20_api.c \
-	crypto_stream/xsalsa20/stream_xsalsa20_api.c \
-	crypto_stream/xsalsa20/ref/stream_xsalsa20.c \
-	crypto_stream/xsalsa20/ref/xor_xsalsa20.c \
-	crypto_verify/16/verify_16_api.c \
-	crypto_verify/16/ref/verify_16.c \
-	crypto_verify/32/verify_32_api.c \
-	crypto_verify/32/ref/verify_32.c \
-	crypto_verify/64/verify_64_api.c \
-	crypto_verify/64/ref/verify_64.c \
+	crypto_stream/chacha20/ref/chacha20_ref.h \
+	crypto_stream/chacha20/ref/chacha20_ref.c \
+	crypto_stream/crypto_stream.c \
+	crypto_stream/salsa20/stream_salsa20.c \
+	crypto_stream/salsa20/stream_salsa20.h \
+	crypto_stream/xsalsa20/stream_xsalsa20.c \
+	crypto_verify/sodium/verify.c \
+	include/sodium/private/chacha20_ietf_ext.h \
+	include/sodium/private/common.h \
+	include/sodium/private/ed25519_ref10.h \
+	include/sodium/private/implementations.h \
+	include/sodium/private/mutex.h \
+	include/sodium/private/sse2_64_32.h \
 	randombytes/randombytes.c \
+	sodium/codecs.c \
 	sodium/core.c \
 	sodium/runtime.c \
 	sodium/utils.c \
 	sodium/version.c
 
-if !EMSCRIPTEN
-libsodium_la_SOURCES += \
-	randombytes/salsa20/randombytes_salsa20_random.c
-
-if NATIVECLIENT
+if HAVE_TI_MODE
 libsodium_la_SOURCES += \
-	randombytes/nativeclient/randombytes_nativeclient.c
+	crypto_core/ed25519/ref10/fe_51/base.h \
+	crypto_core/ed25519/ref10/fe_51/base2.h \
+	crypto_core/ed25519/ref10/fe_51/constants.h \
+	crypto_core/ed25519/ref10/fe_51/fe.h \
+	include/sodium/private/ed25519_ref10_fe_51.h
 else
 libsodium_la_SOURCES += \
-    randombytes/sysrandom/randombytes_sysrandom.c
-endif
-
+	crypto_core/ed25519/ref10/fe_25_5/base.h \
+	crypto_core/ed25519/ref10/fe_25_5/base2.h \
+	crypto_core/ed25519/ref10/fe_25_5/constants.h \
+	crypto_core/ed25519/ref10/fe_25_5/fe.h \
+	include/sodium/private/ed25519_ref10_fe_25_5.h
 endif
 
-if HAVE_TI_MODE
+if HAVE_AMD64_ASM
 libsodium_la_SOURCES += \
-	crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c \
-	crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h
+	crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S \
+	crypto_stream/salsa20/xmm6/salsa20_xmm6.c \
+	crypto_stream/salsa20/xmm6/salsa20_xmm6.h
 else
 libsodium_la_SOURCES += \
-	crypto_scalarmult/curve25519/ref10/curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/curve25519_ref10.h \
-	crypto_scalarmult/curve25519/ref10/fe.h \
-	crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/montgomery.h \
-	crypto_scalarmult/curve25519/ref10/pow225521.h
+	crypto_stream/salsa20/ref/salsa20_ref.c \
+	crypto_stream/salsa20/ref/salsa20_ref.h
 endif
 
 noinst_HEADERS = \
@@ -203,42 +147,34 @@ libsodium_la_SOURCES += \
 	crypto_scalarmult/curve25519/sandy2x/sandy2x.S
 endif
 
-if HAVE_AMD64_ASM
-libsodium_la_SOURCES += \
-	crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
-else
-libsodium_la_SOURCES += \
-	crypto_stream/salsa20/ref/stream_salsa20_ref.c \
-	crypto_stream/salsa20/ref/xor_salsa20_ref.c
-endif
-
 if !MINIMAL
 libsodium_la_SOURCES += \
-	crypto_core/salsa2012/ref/core_salsa2012.c \
-	crypto_core/salsa2012/core_salsa2012_api.c \
-	crypto_core/salsa208/ref/core_salsa208.c \
-	crypto_core/salsa208/core_salsa208_api.c \
+	crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c \
+	crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c \
+	crypto_core/ed25519/core_ed25519.c \
+	crypto_core/ed25519/core_ristretto255.c \
+	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
+	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
+	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
+	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
+	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
+	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
+	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
+	crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c \
+	crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c \
+	crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c \
+	crypto_shorthash/siphash24/shorthash_siphashx24.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c \
 	crypto_sign/ed25519/ref10/obsolete.c \
-	crypto_stream/aes128ctr/portable/afternm_aes128ctr.c \
-	crypto_stream/aes128ctr/stream_aes128ctr_api.c \
-	crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/common.h \
-	crypto_stream/aes128ctr/portable/common_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/consts.h \
-	crypto_stream/aes128ctr/portable/consts_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/int128.h \
-	crypto_stream/aes128ctr/portable/int128_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/stream_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/types.h \
-	crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c \
-	crypto_stream/salsa2012/stream_salsa2012_api.c \
-	crypto_stream/salsa2012/ref/stream_salsa2012.c \
-	crypto_stream/salsa2012/ref/xor_salsa2012.c \
-	crypto_stream/salsa208/stream_salsa208_api.c \
-	crypto_stream/salsa208/ref/stream_salsa208.c \
-	crypto_stream/salsa208/ref/xor_salsa208.c
+	crypto_stream/salsa2012/ref/stream_salsa2012_ref.c \
+	crypto_stream/salsa2012/stream_salsa2012.c \
+	crypto_stream/salsa208/ref/stream_salsa208_ref.c \
+	crypto_stream/salsa208/stream_salsa208.c \
+	crypto_stream/xchacha20/stream_xchacha20.c
 endif
 
+randombytes_internal_randombytes_internal_random_CFLAGS = @CFLAGS_RDRAND@
+
 libsodium_la_LDFLAGS = \
 	$(AM_LDFLAGS) \
 	-export-dynamic \
@@ -250,15 +186,37 @@ libsodium_la_CPPFLAGS = \
 	-I$(srcdir)/include/sodium \
 	-I$(builddir)/include/sodium
 
+if HAVE_LD_OUTPUT_DEF
+libsodium_la_LDFLAGS += -Wl,--output-def,libsodium-$(DLL_VERSION).def
+defexecdir = $(bindir)
+defexec_DATA = libsodium-$(DLL_VERSION).def
+CLEANFILES = $(defexec_DATA)
+libsodium-$(DLL_VERSION).def: libsodium.la
+endif
+
 SUBDIRS = \
 	include
 
-libsodium_la_LIBADD = libaesni.la libsse2.la libssse3.la libsse41.la
-noinst_LTLIBRARIES =  libsodium.la libaesni.la libsse2.la libssse3.la libsse41.la
+libsodium_la_LIBADD = libaesni.la libsse2.la libssse3.la libsse41.la libavx2.la libavx512f.la
+noinst_LTLIBRARIES  = libaesni.la libsse2.la libssse3.la libsse41.la libavx2.la libavx512f.la
+
+librdrand_la_LDFLAGS = $(libsodium_la_LDFLAGS)
+librdrand_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
+	@CFLAGS_RDRAND@
+librdrand_la_SOURCES = \
+	randombytes/internal/randombytes_internal_random.c
+
+if !EMSCRIPTEN
+libsodium_la_LIBADD += librdrand.la
+noinst_LTLIBRARIES  += librdrand.la
+
+libsodium_la_SOURCES += \
+	randombytes/sysrandom/randombytes_sysrandom.c
+endif
 
 libaesni_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libaesni_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSSE3@ @CFLAGS_AESNI@ @CFLAGS_PCLMUL@
+	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_AESNI@ @CFLAGS_PCLMUL@
 libaesni_la_SOURCES = \
 	crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c
 
@@ -266,20 +224,64 @@ libsse2_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libsse2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
 	@CFLAGS_SSE2@
 libsse2_la_SOURCES = \
-	crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c \
 	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c \
 	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h
+if !MINIMAL
+libsse2_la_SOURCES += \
+	crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
+endif
+
+if !HAVE_AMD64_ASM
+libsse2_la_SOURCES += \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.h \
+	crypto_stream/salsa20/xmm6int/u0.h \
+	crypto_stream/salsa20/xmm6int/u1.h \
+	crypto_stream/salsa20/xmm6int/u4.h
+endif
 
 libssse3_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libssse3_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
 	@CFLAGS_SSE2@ @CFLAGS_SSSE3@
 libssse3_la_SOURCES = \
-	crypto_generichash/blake2/ref/blake2b-compress-ssse3.c \
-	crypto_stream/chacha20/vec/stream_chacha20_vec.h \
-	crypto_stream/chacha20/vec/stream_chacha20_vec.c
+	crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c \
+	crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h \
+	crypto_pwhash/argon2/argon2-fill-block-ssse3.c \
+	crypto_pwhash/argon2/blamka-round-ssse3.h \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.h \
+	crypto_stream/chacha20/dolbeau/u0.h \
+	crypto_stream/chacha20/dolbeau/u1.h \
+	crypto_stream/chacha20/dolbeau/u4.h
 
 libsse41_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libsse41_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
 	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@
 libsse41_la_SOURCES = \
-	crypto_generichash/blake2/ref/blake2b-compress-sse41.c
+	crypto_generichash/blake2b/ref/blake2b-compress-sse41.c \
+	crypto_generichash/blake2b/ref/blake2b-compress-sse41.h
+
+libavx2_la_LDFLAGS = $(libsodium_la_LDFLAGS)
+libavx2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
+	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@ @CFLAGS_AVX@ @CFLAGS_AVX2@
+libavx2_la_SOURCES = \
+	crypto_generichash/blake2b/ref/blake2b-compress-avx2.c \
+	crypto_generichash/blake2b/ref/blake2b-compress-avx2.h \
+	crypto_pwhash/argon2/argon2-fill-block-avx2.c \
+	crypto_pwhash/argon2/blamka-round-avx2.h \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.h \
+	crypto_stream/chacha20/dolbeau/u8.h \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.h \
+	crypto_stream/salsa20/xmm6int/u0.h \
+	crypto_stream/salsa20/xmm6int/u1.h \
+	crypto_stream/salsa20/xmm6int/u4.h \
+	crypto_stream/salsa20/xmm6int/u8.h
+
+libavx512f_la_LDFLAGS = $(libsodium_la_LDFLAGS)
+libavx512f_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
+	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@ @CFLAGS_AVX@ @CFLAGS_AVX2@ @CFLAGS_AVX512F@
+libavx512f_la_SOURCES = \
+	crypto_pwhash/argon2/argon2-fill-block-avx512f.c \
+	crypto_pwhash/argon2/blamka-round-avx512f.h
diff --git a/libsodium/src/libsodium/Makefile.in b/libsodium/src/libsodium/Makefile.in
index 1a558ad..0958ad3 100644
--- a/libsodium/src/libsodium/Makefile.in
+++ b/libsodium/src/libsodium/Makefile.in
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.14.1 from Makefile.am.
+# Makefile.in generated by automake 1.16.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+# Copyright (C) 1994-2018 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -15,8 +15,19 @@
 @SET_MAKE@
 
 
+
 VPATH = @srcdir@
-am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
 am__make_running_with_option = \
   case $${target_option-} in \
       ?) ;; \
@@ -79,39 +90,30 @@ PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-@EMSCRIPTEN_FALSE@am__append_1 = \
-@EMSCRIPTEN_FALSE@	randombytes/salsa20/randombytes_salsa20_random.c
-
-@EMSCRIPTEN_FALSE@@NATIVECLIENT_TRUE@am__append_2 = \
-@EMSCRIPTEN_FALSE@@NATIVECLIENT_TRUE@	randombytes/nativeclient/randombytes_nativeclient.c
-
-@EMSCRIPTEN_FALSE@@NATIVECLIENT_FALSE@am__append_3 = \
-@EMSCRIPTEN_FALSE@@NATIVECLIENT_FALSE@    randombytes/sysrandom/randombytes_sysrandom.c
-
-@HAVE_TI_MODE_TRUE@am__append_4 = \
-@HAVE_TI_MODE_TRUE@	crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c \
-@HAVE_TI_MODE_TRUE@	crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h
-
-@HAVE_TI_MODE_FALSE@am__append_5 = \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/curve25519_ref10.h \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe.h \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/montgomery.h \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/pow225521.h
-
-@HAVE_AVX_ASM_TRUE@am__append_6 = \
+@HAVE_TI_MODE_TRUE@am__append_1 = \
+@HAVE_TI_MODE_TRUE@	crypto_core/ed25519/ref10/fe_51/base.h \
+@HAVE_TI_MODE_TRUE@	crypto_core/ed25519/ref10/fe_51/base2.h \
+@HAVE_TI_MODE_TRUE@	crypto_core/ed25519/ref10/fe_51/constants.h \
+@HAVE_TI_MODE_TRUE@	crypto_core/ed25519/ref10/fe_51/fe.h \
+@HAVE_TI_MODE_TRUE@	include/sodium/private/ed25519_ref10_fe_51.h
+
+@HAVE_TI_MODE_FALSE@am__append_2 = \
+@HAVE_TI_MODE_FALSE@	crypto_core/ed25519/ref10/fe_25_5/base.h \
+@HAVE_TI_MODE_FALSE@	crypto_core/ed25519/ref10/fe_25_5/base2.h \
+@HAVE_TI_MODE_FALSE@	crypto_core/ed25519/ref10/fe_25_5/constants.h \
+@HAVE_TI_MODE_FALSE@	crypto_core/ed25519/ref10/fe_25_5/fe.h \
+@HAVE_TI_MODE_FALSE@	include/sodium/private/ed25519_ref10_fe_25_5.h
+
+@HAVE_AMD64_ASM_TRUE@am__append_3 = \
+@HAVE_AMD64_ASM_TRUE@	crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S \
+@HAVE_AMD64_ASM_TRUE@	crypto_stream/salsa20/xmm6/salsa20_xmm6.c \
+@HAVE_AMD64_ASM_TRUE@	crypto_stream/salsa20/xmm6/salsa20_xmm6.h
+
+@HAVE_AMD64_ASM_FALSE@am__append_4 = \
+@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/ref/salsa20_ref.c \
+@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/ref/salsa20_ref.h
+
+@HAVE_AVX_ASM_TRUE@am__append_5 = \
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/consts_namespace.h \
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c \
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h \
@@ -126,55 +128,95 @@ host_triplet = @host@
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h \
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/sandy2x.S
 
-@HAVE_AMD64_ASM_TRUE@am__append_7 = \
-@HAVE_AMD64_ASM_TRUE@	crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
-
-@HAVE_AMD64_ASM_FALSE@am__append_8 = \
-@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/ref/stream_salsa20_ref.c \
-@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/ref/xor_salsa20_ref.c
-
-@MINIMAL_FALSE@am__append_9 = \
-@MINIMAL_FALSE@	crypto_core/salsa2012/ref/core_salsa2012.c \
-@MINIMAL_FALSE@	crypto_core/salsa2012/core_salsa2012_api.c \
-@MINIMAL_FALSE@	crypto_core/salsa208/ref/core_salsa208.c \
-@MINIMAL_FALSE@	crypto_core/salsa208/core_salsa208_api.c \
+@MINIMAL_FALSE@am__append_6 = \
+@MINIMAL_FALSE@	crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c \
+@MINIMAL_FALSE@	crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c \
+@MINIMAL_FALSE@	crypto_core/ed25519/core_ed25519.c \
+@MINIMAL_FALSE@	crypto_core/ed25519/core_ristretto255.c \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
+@MINIMAL_FALSE@	crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c \
+@MINIMAL_FALSE@	crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c \
+@MINIMAL_FALSE@	crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c \
+@MINIMAL_FALSE@	crypto_shorthash/siphash24/shorthash_siphashx24.c \
+@MINIMAL_FALSE@	crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c \
 @MINIMAL_FALSE@	crypto_sign/ed25519/ref10/obsolete.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/afternm_aes128ctr.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/stream_aes128ctr_api.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/common.h \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/common_aes128ctr.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/consts.h \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/consts_aes128ctr.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/int128.h \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/int128_aes128ctr.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/stream_aes128ctr.c \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/types.h \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c \
-@MINIMAL_FALSE@	crypto_stream/salsa2012/stream_salsa2012_api.c \
-@MINIMAL_FALSE@	crypto_stream/salsa2012/ref/stream_salsa2012.c \
-@MINIMAL_FALSE@	crypto_stream/salsa2012/ref/xor_salsa2012.c \
-@MINIMAL_FALSE@	crypto_stream/salsa208/stream_salsa208_api.c \
-@MINIMAL_FALSE@	crypto_stream/salsa208/ref/stream_salsa208.c \
-@MINIMAL_FALSE@	crypto_stream/salsa208/ref/xor_salsa208.c
+@MINIMAL_FALSE@	crypto_stream/salsa2012/ref/stream_salsa2012_ref.c \
+@MINIMAL_FALSE@	crypto_stream/salsa2012/stream_salsa2012.c \
+@MINIMAL_FALSE@	crypto_stream/salsa208/ref/stream_salsa208_ref.c \
+@MINIMAL_FALSE@	crypto_stream/salsa208/stream_salsa208.c \
+@MINIMAL_FALSE@	crypto_stream/xchacha20/stream_xchacha20.c
+
+@HAVE_LD_OUTPUT_DEF_TRUE@am__append_7 = -Wl,--output-def,libsodium-$(DLL_VERSION).def
+@EMSCRIPTEN_FALSE@am__append_8 = librdrand.la
+@EMSCRIPTEN_FALSE@am__append_9 = librdrand.la
+@EMSCRIPTEN_FALSE@am__append_10 = \
+@EMSCRIPTEN_FALSE@	randombytes/sysrandom/randombytes_sysrandom.c
+
+@MINIMAL_FALSE@am__append_11 = \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
+
+@HAVE_AMD64_ASM_FALSE@am__append_12 = \
+@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c \
+@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.h \
+@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/xmm6int/u0.h \
+@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/xmm6int/u1.h \
+@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/xmm6int/u4.h
 
 subdir = src/libsodium
-DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
-	$(top_srcdir)/build-aux/depcomp $(noinst_HEADERS)
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_catchable_abrt.m4 \
+	$(top_srcdir)/m4/ax_check_catchable_segv.m4 \
+	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
 	$(top_srcdir)/m4/ax_check_define.m4 \
 	$(top_srcdir)/m4/ax_check_link_flag.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
+	$(top_srcdir)/m4/ax_valgrind_check.m4 \
 	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/configure.ac
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(noinst_HEADERS) \
+	$(am__DIST_COMMON)
 mkinstalldirs = $(install_sh) -d
 CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
-LTLIBRARIES = $(noinst_LTLIBRARIES)
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__uninstall_files_from_dir = { \
+  test -z "$$files" \
+    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
+    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
+         $(am__cd) "$$dir" && rm -f $$files; }; \
+  }
+am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(defexecdir)"
+LTLIBRARIES = $(lib_LTLIBRARIES) $(noinst_LTLIBRARIES)
 libaesni_la_LIBADD =
 am__dirstamp = $(am__leading_dot)dirstamp
 am_libaesni_la_OBJECTS = crypto_aead/aes256gcm/aesni/libaesni_la-aead_aes256gcm_aesni.lo
@@ -186,162 +228,127 @@ am__v_lt_1 =
 libaesni_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
 	$(libaesni_la_LDFLAGS) $(LDFLAGS) -o $@
+libavx2_la_LIBADD =
+am_libavx2_la_OBJECTS = crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo \
+	crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo \
+	crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo \
+	crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo
+libavx2_la_OBJECTS = $(am_libavx2_la_OBJECTS)
+libavx2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(libavx2_la_LDFLAGS) $(LDFLAGS) -o $@
+libavx512f_la_LIBADD =
+am_libavx512f_la_OBJECTS = crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo
+libavx512f_la_OBJECTS = $(am_libavx512f_la_OBJECTS)
+libavx512f_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(libavx512f_la_LDFLAGS) $(LDFLAGS) -o $@
+librdrand_la_LIBADD =
+am_librdrand_la_OBJECTS = randombytes/internal/librdrand_la-randombytes_internal_random.lo
+librdrand_la_OBJECTS = $(am_librdrand_la_OBJECTS)
+librdrand_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
+	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
+	$(librdrand_la_LDFLAGS) $(LDFLAGS) -o $@
+@EMSCRIPTEN_FALSE@am_librdrand_la_rpath =
 libsodium_la_DEPENDENCIES = libaesni.la libsse2.la libssse3.la \
-	libsse41.la
+	libsse41.la libavx2.la libavx512f.la $(am__append_8)
 am__libsodium_la_SOURCES_DIST =  \
 	crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c \
+	crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c \
 	crypto_auth/crypto_auth.c \
-	crypto_auth/hmacsha256/auth_hmacsha256_api.c \
-	crypto_auth/hmacsha256/cp/hmac_hmacsha256.c \
-	crypto_auth/hmacsha256/cp/verify_hmacsha256.c \
-	crypto_auth/hmacsha512/auth_hmacsha512_api.c \
-	crypto_auth/hmacsha512/cp/hmac_hmacsha512.c \
-	crypto_auth/hmacsha512/cp/verify_hmacsha512.c \
-	crypto_auth/hmacsha512256/auth_hmacsha512256_api.c \
-	crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c \
-	crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c \
+	crypto_auth/hmacsha256/auth_hmacsha256.c \
+	crypto_auth/hmacsha512/auth_hmacsha512.c \
+	crypto_auth/hmacsha512256/auth_hmacsha512256.c \
 	crypto_box/crypto_box.c crypto_box/crypto_box_easy.c \
 	crypto_box/crypto_box_seal.c \
-	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c \
-	crypto_core/hsalsa20/ref2/core_hsalsa20.c \
-	crypto_core/hsalsa20/core_hsalsa20_api.c \
-	crypto_core/salsa20/ref/core_salsa20.c \
-	crypto_core/salsa20/core_salsa20_api.c \
+	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c \
+	crypto_core/ed25519/ref10/ed25519_ref10.c \
+	crypto_core/hchacha20/core_hchacha20.c \
+	crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c \
+	crypto_core/hsalsa20/core_hsalsa20.c \
+	crypto_core/salsa/ref/core_salsa_ref.c \
 	crypto_generichash/crypto_generichash.c \
-	crypto_generichash/blake2/generichash_blake2_api.c \
-	crypto_generichash/blake2/ref/blake2-impl.h \
-	crypto_generichash/blake2/ref/blake2.h \
-	crypto_generichash/blake2/ref/blake2b-compress-ref.c \
-	crypto_generichash/blake2/ref/blake2b-load-sse2.h \
-	crypto_generichash/blake2/ref/blake2b-load-sse41.h \
-	crypto_generichash/blake2/ref/blake2b-ref.c \
-	crypto_generichash/blake2/ref/blake2b-round.h \
-	crypto_generichash/blake2/ref/generichash_blake2b.c \
-	crypto_hash/crypto_hash.c crypto_hash/sha256/hash_sha256_api.c \
-	crypto_hash/sha256/cp/hash_sha256.c \
-	crypto_hash/sha512/hash_sha512_api.c \
-	crypto_hash/sha512/cp/hash_sha512.c \
-	crypto_onetimeauth/crypto_onetimeauth.c \
+	crypto_generichash/blake2b/generichash_blake2.c \
+	crypto_generichash/blake2b/ref/blake2.h \
+	crypto_generichash/blake2b/ref/blake2b-compress-ref.c \
+	crypto_generichash/blake2b/ref/blake2b-load-sse2.h \
+	crypto_generichash/blake2b/ref/blake2b-load-sse41.h \
+	crypto_generichash/blake2b/ref/blake2b-load-avx2.h \
+	crypto_generichash/blake2b/ref/blake2b-ref.c \
+	crypto_generichash/blake2b/ref/generichash_blake2b.c \
+	crypto_hash/crypto_hash.c crypto_hash/sha256/hash_sha256.c \
+	crypto_hash/sha256/cp/hash_sha256_cp.c \
+	crypto_hash/sha512/hash_sha512.c \
+	crypto_hash/sha512/cp/hash_sha512_cp.c \
+	crypto_kdf/blake2b/kdf_blake2b.c crypto_kdf/crypto_kdf.c \
+	crypto_kx/crypto_kx.c crypto_onetimeauth/crypto_onetimeauth.c \
 	crypto_onetimeauth/poly1305/onetimeauth_poly1305.c \
 	crypto_onetimeauth/poly1305/onetimeauth_poly1305.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna32.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna64.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna.c \
-	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
-	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
-	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
-	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
-	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
-	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
-	crypto_pwhash/scryptsalsa208sha256/sysendian.h \
-	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
+	crypto_pwhash/argon2/argon2-core.c \
+	crypto_pwhash/argon2/argon2-core.h \
+	crypto_pwhash/argon2/argon2-encoding.c \
+	crypto_pwhash/argon2/argon2-encoding.h \
+	crypto_pwhash/argon2/argon2-fill-block-ref.c \
+	crypto_pwhash/argon2/argon2.c crypto_pwhash/argon2/argon2.h \
+	crypto_pwhash/argon2/blake2b-long.c \
+	crypto_pwhash/argon2/blake2b-long.h \
+	crypto_pwhash/argon2/blamka-round-ref.h \
+	crypto_pwhash/argon2/pwhash_argon2i.c \
+	crypto_pwhash/argon2/pwhash_argon2id.c \
+	crypto_pwhash/crypto_pwhash.c \
 	crypto_scalarmult/crypto_scalarmult.c \
+	crypto_scalarmult/curve25519/ref10/x25519_ref10.c \
+	crypto_scalarmult/curve25519/ref10/x25519_ref10.h \
 	crypto_scalarmult/curve25519/scalarmult_curve25519.c \
 	crypto_scalarmult/curve25519/scalarmult_curve25519.h \
 	crypto_secretbox/crypto_secretbox.c \
 	crypto_secretbox/crypto_secretbox_easy.c \
-	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c \
-	crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c \
+	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c \
+	crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c \
 	crypto_shorthash/crypto_shorthash.c \
-	crypto_shorthash/siphash24/shorthash_siphash24_api.c \
-	crypto_shorthash/siphash24/ref/shorthash_siphash24.c \
-	crypto_sign/crypto_sign.c crypto_sign/ed25519/ref10/base.h \
-	crypto_sign/ed25519/ref10/base2.h \
-	crypto_sign/ed25519/sign_ed25519_api.c \
-	crypto_sign/ed25519/ref10/d.h crypto_sign/ed25519/ref10/d2.h \
-	crypto_sign/ed25519/ref10/fe.h \
-	crypto_sign/ed25519/ref10/fe_0.c \
-	crypto_sign/ed25519/ref10/fe_1.c \
-	crypto_sign/ed25519/ref10/fe_add.c \
-	crypto_sign/ed25519/ref10/fe_cmov.c \
-	crypto_sign/ed25519/ref10/fe_copy.c \
-	crypto_sign/ed25519/ref10/fe_frombytes.c \
-	crypto_sign/ed25519/ref10/fe_invert.c \
-	crypto_sign/ed25519/ref10/fe_isnegative.c \
-	crypto_sign/ed25519/ref10/fe_isnonzero.c \
-	crypto_sign/ed25519/ref10/fe_mul.c \
-	crypto_sign/ed25519/ref10/fe_neg.c \
-	crypto_sign/ed25519/ref10/fe_pow22523.c \
-	crypto_sign/ed25519/ref10/fe_sq.c \
-	crypto_sign/ed25519/ref10/fe_sq2.c \
-	crypto_sign/ed25519/ref10/fe_sub.c \
-	crypto_sign/ed25519/ref10/fe_tobytes.c \
-	crypto_sign/ed25519/ref10/ge.h \
-	crypto_sign/ed25519/ref10/ge_add.c \
-	crypto_sign/ed25519/ref10/ge_add.h \
-	crypto_sign/ed25519/ref10/ge_double_scalarmult.c \
-	crypto_sign/ed25519/ref10/ge_frombytes.c \
-	crypto_sign/ed25519/ref10/ge_madd.c \
-	crypto_sign/ed25519/ref10/ge_madd.h \
-	crypto_sign/ed25519/ref10/ge_msub.c \
-	crypto_sign/ed25519/ref10/ge_msub.h \
-	crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c \
-	crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c \
-	crypto_sign/ed25519/ref10/ge_p2_0.c \
-	crypto_sign/ed25519/ref10/ge_p2_dbl.c \
-	crypto_sign/ed25519/ref10/ge_p2_dbl.h \
-	crypto_sign/ed25519/ref10/ge_p3_0.c \
-	crypto_sign/ed25519/ref10/ge_p3_dbl.c \
-	crypto_sign/ed25519/ref10/ge_p3_to_cached.c \
-	crypto_sign/ed25519/ref10/ge_p3_to_p2.c \
-	crypto_sign/ed25519/ref10/ge_p3_tobytes.c \
-	crypto_sign/ed25519/ref10/ge_precomp_0.c \
-	crypto_sign/ed25519/ref10/ge_scalarmult_base.c \
-	crypto_sign/ed25519/ref10/ge_sub.c \
-	crypto_sign/ed25519/ref10/ge_sub.h \
-	crypto_sign/ed25519/ref10/ge_tobytes.c \
+	crypto_shorthash/siphash24/shorthash_siphash24.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h \
+	crypto_sign/crypto_sign.c crypto_sign/ed25519/sign_ed25519.c \
 	crypto_sign/ed25519/ref10/keypair.c \
 	crypto_sign/ed25519/ref10/open.c \
-	crypto_sign/ed25519/ref10/pow22523.h \
-	crypto_sign/ed25519/ref10/pow225521.h \
-	crypto_sign/ed25519/ref10/sc.h \
-	crypto_sign/ed25519/ref10/sc_muladd.c \
-	crypto_sign/ed25519/ref10/sc_reduce.c \
 	crypto_sign/ed25519/ref10/sign.c \
-	crypto_sign/ed25519/ref10/sqrtm1.h \
-	crypto_stream/crypto_stream.c \
+	crypto_sign/ed25519/ref10/sign_ed25519_ref10.h \
 	crypto_stream/chacha20/stream_chacha20.c \
 	crypto_stream/chacha20/stream_chacha20.h \
-	crypto_stream/chacha20/ref/stream_chacha20_ref.h \
-	crypto_stream/chacha20/ref/stream_chacha20_ref.c \
-	crypto_stream/salsa20/stream_salsa20_api.c \
-	crypto_stream/xsalsa20/stream_xsalsa20_api.c \
-	crypto_stream/xsalsa20/ref/stream_xsalsa20.c \
-	crypto_stream/xsalsa20/ref/xor_xsalsa20.c \
-	crypto_verify/16/verify_16_api.c \
-	crypto_verify/16/ref/verify_16.c \
-	crypto_verify/32/verify_32_api.c \
-	crypto_verify/32/ref/verify_32.c \
-	crypto_verify/64/verify_64_api.c \
-	crypto_verify/64/ref/verify_64.c randombytes/randombytes.c \
-	sodium/core.c sodium/runtime.c sodium/utils.c sodium/version.c \
-	randombytes/salsa20/randombytes_salsa20_random.c \
-	randombytes/nativeclient/randombytes_nativeclient.c \
-	randombytes/sysrandom/randombytes_sysrandom.c \
-	crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c \
-	crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h \
-	crypto_scalarmult/curve25519/ref10/curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/curve25519_ref10.h \
-	crypto_scalarmult/curve25519/ref10/fe.h \
-	crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c \
-	crypto_scalarmult/curve25519/ref10/montgomery.h \
-	crypto_scalarmult/curve25519/ref10/pow225521.h \
+	crypto_stream/chacha20/ref/chacha20_ref.h \
+	crypto_stream/chacha20/ref/chacha20_ref.c \
+	crypto_stream/crypto_stream.c \
+	crypto_stream/salsa20/stream_salsa20.c \
+	crypto_stream/salsa20/stream_salsa20.h \
+	crypto_stream/xsalsa20/stream_xsalsa20.c \
+	crypto_verify/sodium/verify.c \
+	include/sodium/private/chacha20_ietf_ext.h \
+	include/sodium/private/common.h \
+	include/sodium/private/ed25519_ref10.h \
+	include/sodium/private/implementations.h \
+	include/sodium/private/mutex.h \
+	include/sodium/private/sse2_64_32.h randombytes/randombytes.c \
+	sodium/codecs.c sodium/core.c sodium/runtime.c sodium/utils.c \
+	sodium/version.c crypto_core/ed25519/ref10/fe_51/base.h \
+	crypto_core/ed25519/ref10/fe_51/base2.h \
+	crypto_core/ed25519/ref10/fe_51/constants.h \
+	crypto_core/ed25519/ref10/fe_51/fe.h \
+	include/sodium/private/ed25519_ref10_fe_51.h \
+	crypto_core/ed25519/ref10/fe_25_5/base.h \
+	crypto_core/ed25519/ref10/fe_25_5/base2.h \
+	crypto_core/ed25519/ref10/fe_25_5/constants.h \
+	crypto_core/ed25519/ref10/fe_25_5/fe.h \
+	include/sodium/private/ed25519_ref10_fe_25_5.h \
+	crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S \
+	crypto_stream/salsa20/xmm6/salsa20_xmm6.c \
+	crypto_stream/salsa20/xmm6/salsa20_xmm6.h \
+	crypto_stream/salsa20/ref/salsa20_ref.c \
+	crypto_stream/salsa20/ref/salsa20_ref.h \
 	crypto_scalarmult/curve25519/sandy2x/consts_namespace.h \
 	crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c \
 	crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.h \
@@ -355,205 +362,157 @@ am__libsodium_la_SOURCES_DIST =  \
 	crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h \
 	crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h \
 	crypto_scalarmult/curve25519/sandy2x/sandy2x.S \
-	crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S \
-	crypto_stream/salsa20/ref/stream_salsa20_ref.c \
-	crypto_stream/salsa20/ref/xor_salsa20_ref.c \
-	crypto_core/salsa2012/ref/core_salsa2012.c \
-	crypto_core/salsa2012/core_salsa2012_api.c \
-	crypto_core/salsa208/ref/core_salsa208.c \
-	crypto_core/salsa208/core_salsa208_api.c \
+	crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c \
+	crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c \
+	crypto_core/ed25519/core_ed25519.c \
+	crypto_core/ed25519/core_ristretto255.c \
+	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
+	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
+	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
+	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
+	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
+	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
+	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
+	crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c \
+	crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c \
+	crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c \
+	crypto_shorthash/siphash24/shorthash_siphashx24.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c \
 	crypto_sign/ed25519/ref10/obsolete.c \
-	crypto_stream/aes128ctr/portable/afternm_aes128ctr.c \
-	crypto_stream/aes128ctr/stream_aes128ctr_api.c \
-	crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/common.h \
-	crypto_stream/aes128ctr/portable/common_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/consts.h \
-	crypto_stream/aes128ctr/portable/consts_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/int128.h \
-	crypto_stream/aes128ctr/portable/int128_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/stream_aes128ctr.c \
-	crypto_stream/aes128ctr/portable/types.h \
-	crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c \
-	crypto_stream/salsa2012/stream_salsa2012_api.c \
-	crypto_stream/salsa2012/ref/stream_salsa2012.c \
-	crypto_stream/salsa2012/ref/xor_salsa2012.c \
-	crypto_stream/salsa208/stream_salsa208_api.c \
-	crypto_stream/salsa208/ref/stream_salsa208.c \
-	crypto_stream/salsa208/ref/xor_salsa208.c
-@EMSCRIPTEN_FALSE@am__objects_1 = randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo
-@EMSCRIPTEN_FALSE@@NATIVECLIENT_TRUE@am__objects_2 = randombytes/nativeclient/libsodium_la-randombytes_nativeclient.lo
-@EMSCRIPTEN_FALSE@@NATIVECLIENT_FALSE@am__objects_3 = randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo
-@HAVE_TI_MODE_TRUE@am__objects_4 = crypto_scalarmult/curve25519/donna_c64/libsodium_la-curve25519_donna_c64.lo
-@HAVE_TI_MODE_FALSE@am__objects_5 = crypto_scalarmult/curve25519/ref10/libsodium_la-curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo \
-@HAVE_TI_MODE_FALSE@	crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo
-@HAVE_AVX_ASM_TRUE@am__objects_6 = crypto_scalarmult/curve25519/sandy2x/libsodium_la-curve25519_sandy2x.lo \
+	crypto_stream/salsa2012/ref/stream_salsa2012_ref.c \
+	crypto_stream/salsa2012/stream_salsa2012.c \
+	crypto_stream/salsa208/ref/stream_salsa208_ref.c \
+	crypto_stream/salsa208/stream_salsa208.c \
+	crypto_stream/xchacha20/stream_xchacha20.c \
+	randombytes/sysrandom/randombytes_sysrandom.c
+am__objects_1 =
+@HAVE_AMD64_ASM_TRUE@am__objects_2 = crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo \
+@HAVE_AMD64_ASM_TRUE@	crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo
+@HAVE_AMD64_ASM_FALSE@am__objects_3 = crypto_stream/salsa20/ref/libsodium_la-salsa20_ref.lo
+@HAVE_AVX_ASM_TRUE@am__objects_4 = crypto_scalarmult/curve25519/sandy2x/libsodium_la-curve25519_sandy2x.lo \
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe51_invert.lo \
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe_frombytes_sandy2x.lo \
 @HAVE_AVX_ASM_TRUE@	crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo
-@HAVE_AMD64_ASM_TRUE@am__objects_7 = crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo
-@HAVE_AMD64_ASM_FALSE@am__objects_8 = crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo \
-@HAVE_AMD64_ASM_FALSE@	crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo
-@MINIMAL_FALSE@am__objects_9 = crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo \
-@MINIMAL_FALSE@	crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo \
-@MINIMAL_FALSE@	crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo \
-@MINIMAL_FALSE@	crypto_core/salsa208/libsodium_la-core_salsa208_api.lo \
+@MINIMAL_FALSE@am__objects_5 = crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo \
+@MINIMAL_FALSE@	crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo \
+@MINIMAL_FALSE@	crypto_core/ed25519/libsodium_la-core_ed25519.lo \
+@MINIMAL_FALSE@	crypto_core/ed25519/libsodium_la-core_ristretto255.lo \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo \
+@MINIMAL_FALSE@	crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo \
+@MINIMAL_FALSE@	crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo \
+@MINIMAL_FALSE@	crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo \
+@MINIMAL_FALSE@	crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo \
+@MINIMAL_FALSE@	crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo \
+@MINIMAL_FALSE@	crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo \
 @MINIMAL_FALSE@	crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo \
-@MINIMAL_FALSE@	crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo \
-@MINIMAL_FALSE@	crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo \
-@MINIMAL_FALSE@	crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo \
-@MINIMAL_FALSE@	crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo \
-@MINIMAL_FALSE@	crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo \
-@MINIMAL_FALSE@	crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo \
-@MINIMAL_FALSE@	crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo
+@MINIMAL_FALSE@	crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo \
+@MINIMAL_FALSE@	crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo \
+@MINIMAL_FALSE@	crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo \
+@MINIMAL_FALSE@	crypto_stream/salsa208/libsodium_la-stream_salsa208.lo \
+@MINIMAL_FALSE@	crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo
+@EMSCRIPTEN_FALSE@am__objects_6 = randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo
 am_libsodium_la_OBJECTS = crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo \
+	crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo \
 	crypto_auth/libsodium_la-crypto_auth.lo \
-	crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo \
-	crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo \
-	crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo \
-	crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo \
-	crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo \
-	crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo \
-	crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo \
-	crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo \
-	crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo \
+	crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo \
+	crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo \
+	crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo \
 	crypto_box/libsodium_la-crypto_box.lo \
 	crypto_box/libsodium_la-crypto_box_easy.lo \
 	crypto_box/libsodium_la-crypto_box_seal.lo \
-	crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo \
-	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo \
-	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo \
-	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo \
-	crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo \
-	crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo \
-	crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo \
-	crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo \
-	crypto_core/salsa20/libsodium_la-core_salsa20_api.lo \
+	crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo \
+	crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo \
+	crypto_core/hchacha20/libsodium_la-core_hchacha20.lo \
+	crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo \
+	crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo \
+	crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo \
 	crypto_generichash/libsodium_la-crypto_generichash.lo \
-	crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo \
-	crypto_generichash/blake2/ref/libsodium_la-blake2b-compress-ref.lo \
-	crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo \
-	crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo \
+	crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo \
+	crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo \
+	crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo \
+	crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo \
 	crypto_hash/libsodium_la-crypto_hash.lo \
-	crypto_hash/sha256/libsodium_la-hash_sha256_api.lo \
-	crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo \
-	crypto_hash/sha512/libsodium_la-hash_sha512_api.lo \
-	crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo \
+	crypto_hash/sha256/libsodium_la-hash_sha256.lo \
+	crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo \
+	crypto_hash/sha512/libsodium_la-hash_sha512.lo \
+	crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo \
+	crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo \
+	crypto_kdf/libsodium_la-crypto_kdf.lo \
+	crypto_kx/libsodium_la-crypto_kx.lo \
 	crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo \
 	crypto_onetimeauth/poly1305/libsodium_la-onetimeauth_poly1305.lo \
 	crypto_onetimeauth/poly1305/donna/libsodium_la-poly1305_donna.lo \
-	crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo \
-	crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo \
-	crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo \
-	crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo \
-	crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo \
+	crypto_pwhash/argon2/libsodium_la-argon2-core.lo \
+	crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo \
+	crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo \
+	crypto_pwhash/argon2/libsodium_la-argon2.lo \
+	crypto_pwhash/argon2/libsodium_la-blake2b-long.lo \
+	crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo \
+	crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo \
+	crypto_pwhash/libsodium_la-crypto_pwhash.lo \
 	crypto_scalarmult/libsodium_la-crypto_scalarmult.lo \
+	crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo \
 	crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519.lo \
 	crypto_secretbox/libsodium_la-crypto_secretbox.lo \
 	crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo \
-	crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo \
-	crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo \
+	crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo \
+	crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo \
 	crypto_shorthash/libsodium_la-crypto_shorthash.lo \
-	crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo \
-	crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo \
+	crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo \
+	crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo \
 	crypto_sign/libsodium_la-crypto_sign.lo \
-	crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo \
+	crypto_sign/ed25519/libsodium_la-sign_ed25519.lo \
 	crypto_sign/ed25519/ref10/libsodium_la-keypair.lo \
 	crypto_sign/ed25519/ref10/libsodium_la-open.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo \
-	crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo \
 	crypto_sign/ed25519/ref10/libsodium_la-sign.lo \
-	crypto_stream/libsodium_la-crypto_stream.lo \
 	crypto_stream/chacha20/libsodium_la-stream_chacha20.lo \
-	crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo \
-	crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo \
-	crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo \
-	crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo \
-	crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo \
-	crypto_verify/16/libsodium_la-verify_16_api.lo \
-	crypto_verify/16/ref/libsodium_la-verify_16.lo \
-	crypto_verify/32/libsodium_la-verify_32_api.lo \
-	crypto_verify/32/ref/libsodium_la-verify_32.lo \
-	crypto_verify/64/libsodium_la-verify_64_api.lo \
-	crypto_verify/64/ref/libsodium_la-verify_64.lo \
+	crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo \
+	crypto_stream/libsodium_la-crypto_stream.lo \
+	crypto_stream/salsa20/libsodium_la-stream_salsa20.lo \
+	crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo \
+	crypto_verify/sodium/libsodium_la-verify.lo \
 	randombytes/libsodium_la-randombytes.lo \
-	sodium/libsodium_la-core.lo sodium/libsodium_la-runtime.lo \
-	sodium/libsodium_la-utils.lo sodium/libsodium_la-version.lo \
+	sodium/libsodium_la-codecs.lo sodium/libsodium_la-core.lo \
+	sodium/libsodium_la-runtime.lo sodium/libsodium_la-utils.lo \
+	sodium/libsodium_la-version.lo $(am__objects_1) \
 	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
-	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
-	$(am__objects_7) $(am__objects_8) $(am__objects_9)
+	$(am__objects_4) $(am__objects_5) $(am__objects_6)
 libsodium_la_OBJECTS = $(am_libsodium_la_OBJECTS)
 libsodium_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
 	$(libsodium_la_LDFLAGS) $(LDFLAGS) -o $@
 libsse2_la_LIBADD =
-am_libsse2_la_OBJECTS = crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo \
-	crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo
+am__libsse2_la_SOURCES_DIST =  \
+	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c \
+	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h \
+	crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.h \
+	crypto_stream/salsa20/xmm6int/u0.h \
+	crypto_stream/salsa20/xmm6int/u1.h \
+	crypto_stream/salsa20/xmm6int/u4.h
+@MINIMAL_FALSE@am__objects_7 = crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo
+@HAVE_AMD64_ASM_FALSE@am__objects_8 = crypto_stream/salsa20/xmm6int/libsse2_la-salsa20_xmm6int-sse2.lo
+am_libsse2_la_OBJECTS =  \
+	crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo \
+	$(am__objects_7) $(am__objects_8)
 libsse2_la_OBJECTS = $(am_libsse2_la_OBJECTS)
 libsse2_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
 	$(libsse2_la_LDFLAGS) $(LDFLAGS) -o $@
 libsse41_la_LIBADD =
-am_libsse41_la_OBJECTS = crypto_generichash/blake2/ref/libsse41_la-blake2b-compress-sse41.lo
+am_libsse41_la_OBJECTS = crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo
 libsse41_la_OBJECTS = $(am_libsse41_la_OBJECTS)
 libsse41_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
 	$(libsse41_la_LDFLAGS) $(LDFLAGS) -o $@
 libssse3_la_LIBADD =
-am_libssse3_la_OBJECTS = crypto_generichash/blake2/ref/libssse3_la-blake2b-compress-ssse3.lo \
-	crypto_stream/chacha20/vec/libssse3_la-stream_chacha20_vec.lo
+am_libssse3_la_OBJECTS = crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo \
+	crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo \
+	crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo
 libssse3_la_OBJECTS = $(am_libssse3_la_OBJECTS)
 libssse3_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
@@ -572,11 +531,119 @@ am__v_at_0 = @
 am__v_at_1 = 
 DEFAULT_INCLUDES = -I.@am__isrc@
 depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
-am__depfiles_maybe = depfiles
+am__maybe_remake_depfiles = depfiles
+am__depfiles_remade = crypto_aead/aes256gcm/aesni/$(DEPDIR)/libaesni_la-aead_aes256gcm_aesni.Plo \
+	crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo \
+	crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_xchacha20poly1305.Plo \
+	crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo \
+	crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256.Plo \
+	crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512.Plo \
+	crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256.Plo \
+	crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Plo \
+	crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Plo \
+	crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Plo \
+	crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xchacha20poly1305.Plo \
+	crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_seal_curve25519xchacha20poly1305.Plo \
+	crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo \
+	crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ed25519.Plo \
+	crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ristretto255.Plo \
+	crypto_core/ed25519/ref10/$(DEPDIR)/libsodium_la-ed25519_ref10.Plo \
+	crypto_core/hchacha20/$(DEPDIR)/libsodium_la-core_hchacha20.Plo \
+	crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo \
+	crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20_ref2.Plo \
+	crypto_core/salsa/ref/$(DEPDIR)/libsodium_la-core_salsa_ref.Plo \
+	crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Plo \
+	crypto_generichash/blake2b/$(DEPDIR)/libsodium_la-generichash_blake2.Plo \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/libavx2_la-blake2b-compress-avx2.Plo \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Plo \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Plo \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Plo \
+	crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Plo \
+	crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256.Plo \
+	crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256_cp.Plo \
+	crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512.Plo \
+	crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512_cp.Plo \
+	crypto_kdf/$(DEPDIR)/libsodium_la-crypto_kdf.Plo \
+	crypto_kdf/blake2b/$(DEPDIR)/libsodium_la-kdf_blake2b.Plo \
+	crypto_kx/$(DEPDIR)/libsodium_la-crypto_kx.Plo \
+	crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Plo \
+	crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Plo \
+	crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-poly1305_donna.Plo \
+	crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Plo \
+	crypto_pwhash/$(DEPDIR)/libsodium_la-crypto_pwhash.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libavx2_la-argon2-fill-block-avx2.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libavx512f_la-argon2-fill-block-avx512f.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-core.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-encoding.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-fill-block-ref.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-blake2b-long.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2i.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2id.Plo \
+	crypto_pwhash/argon2/$(DEPDIR)/libssse3_la-argon2-fill-block-ssse3.Plo \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo \
+	crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo \
+	crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsse2_la-pwhash_scryptsalsa208sha256_sse.Plo \
+	crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Plo \
+	crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Plo \
+	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-x25519_ref10.Plo \
+	crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-curve25519_sandy2x.Plo \
+	crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe51_invert.Plo \
+	crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe_frombytes_sandy2x.Plo \
+	crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Plo \
+	crypto_scalarmult/ed25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_ed25519_ref10.Plo \
+	crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/libsodium_la-scalarmult_ristretto255_ref10.Plo \
+	crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Plo \
+	crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Plo \
+	crypto_secretbox/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretbox_xchacha20poly1305.Plo \
+	crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305.Plo \
+	crypto_secretstream/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretstream_xchacha20poly1305.Plo \
+	crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Plo \
+	crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo \
+	crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphashx24.Plo \
+	crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24_ref.Plo \
+	crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphashx24_ref.Plo \
+	crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Plo \
+	crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519.Plo \
+	crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Plo \
+	crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Plo \
+	crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Plo \
+	crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo \
+	crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo \
+	crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Plo \
+	crypto_stream/chacha20/dolbeau/$(DEPDIR)/libavx2_la-chacha20_dolbeau-avx2.Plo \
+	crypto_stream/chacha20/dolbeau/$(DEPDIR)/libssse3_la-chacha20_dolbeau-ssse3.Plo \
+	crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-chacha20_ref.Plo \
+	crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20.Plo \
+	crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-salsa20_ref.Plo \
+	crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6-asm.Plo \
+	crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6.Plo \
+	crypto_stream/salsa20/xmm6int/$(DEPDIR)/libavx2_la-salsa20_xmm6int-avx2.Plo \
+	crypto_stream/salsa20/xmm6int/$(DEPDIR)/libsse2_la-salsa20_xmm6int-sse2.Plo \
+	crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo \
+	crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012_ref.Plo \
+	crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208.Plo \
+	crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208_ref.Plo \
+	crypto_stream/xchacha20/$(DEPDIR)/libsodium_la-stream_xchacha20.Plo \
+	crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo \
+	crypto_verify/sodium/$(DEPDIR)/libsodium_la-verify.Plo \
+	randombytes/$(DEPDIR)/libsodium_la-randombytes.Plo \
+	randombytes/internal/$(DEPDIR)/librdrand_la-randombytes_internal_random.Plo \
+	randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo \
+	sodium/$(DEPDIR)/libsodium_la-codecs.Plo \
+	sodium/$(DEPDIR)/libsodium_la-core.Plo \
+	sodium/$(DEPDIR)/libsodium_la-runtime.Plo \
+	sodium/$(DEPDIR)/libsodium_la-utils.Plo \
+	sodium/$(DEPDIR)/libsodium_la-version.Plo
 am__mv = mv -f
 CPPASCOMPILE = $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS)
-LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) \
+LTCPPASCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
 	$(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) \
 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
 	$(AM_CCASFLAGS) $(CCASFLAGS)
@@ -602,11 +669,14 @@ AM_V_CCLD = $(am__v_CCLD_@AM_V@)
 am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
 am__v_CCLD_0 = @echo "  CCLD    " $@;
 am__v_CCLD_1 = 
-SOURCES = $(libaesni_la_SOURCES) $(libsodium_la_SOURCES) \
-	$(libsse2_la_SOURCES) $(libsse41_la_SOURCES) \
-	$(libssse3_la_SOURCES)
-DIST_SOURCES = $(libaesni_la_SOURCES) $(am__libsodium_la_SOURCES_DIST) \
-	$(libsse2_la_SOURCES) $(libsse41_la_SOURCES) \
+SOURCES = $(libaesni_la_SOURCES) $(libavx2_la_SOURCES) \
+	$(libavx512f_la_SOURCES) $(librdrand_la_SOURCES) \
+	$(libsodium_la_SOURCES) $(libsse2_la_SOURCES) \
+	$(libsse41_la_SOURCES) $(libssse3_la_SOURCES)
+DIST_SOURCES = $(libaesni_la_SOURCES) $(libavx2_la_SOURCES) \
+	$(libavx512f_la_SOURCES) $(librdrand_la_SOURCES) \
+	$(am__libsodium_la_SOURCES_DIST) \
+	$(am__libsse2_la_SOURCES_DIST) $(libsse41_la_SOURCES) \
 	$(libssse3_la_SOURCES)
 RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
 	ctags-recursive dvi-recursive html-recursive info-recursive \
@@ -621,6 +691,7 @@ am__can_run_installinfo = \
     n|no|NO) false;; \
     *) (install-info --version) >/dev/null 2>&1;; \
   esac
+DATA = $(defexec_DATA)
 HEADERS = $(noinst_HEADERS)
 RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
   distclean-recursive maintainer-clean-recursive
@@ -629,7 +700,7 @@ am__recursive_targets = \
   $(RECURSIVE_CLEAN_TARGETS) \
   $(am__extra_recursive_targets)
 AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
-	distdir
+	distdir distdir-am
 am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
 # Read a list of newline-separated strings from the standard input,
 # and print each of them once, without duplicates.  Input order is
@@ -650,6 +721,8 @@ am__define_uniq_tagged_files = \
 ETAGS = etags
 CTAGS = ctags
 DIST_SUBDIRS = $(SUBDIRS)
+am__DIST_COMMON = $(srcdir)/Makefile.in \
+	$(top_srcdir)/build-aux/depcomp
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 am__relativize = \
   dir0=`pwd`; \
@@ -677,6 +750,7 @@ am__relativize = \
   done; \
   reldir="$$dir2"
 ACLOCAL = @ACLOCAL@
+ALLOCA = @ALLOCA@
 AMTAR = @AMTAR@
 AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
 AR = @AR@
@@ -692,8 +766,12 @@ CCASFLAGS = @CCASFLAGS@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
 CFLAGS_AESNI = @CFLAGS_AESNI@
+CFLAGS_AVX = @CFLAGS_AVX@
+CFLAGS_AVX2 = @CFLAGS_AVX2@
+CFLAGS_AVX512F = @CFLAGS_AVX512F@
 CFLAGS_MMX = @CFLAGS_MMX@
 CFLAGS_PCLMUL = @CFLAGS_PCLMUL@
+CFLAGS_RDRAND = @CFLAGS_RDRAND@
 CFLAGS_SSE2 = @CFLAGS_SSE2@
 CFLAGS_SSE3 = @CFLAGS_SSE3@
 CFLAGS_SSE41 = @CFLAGS_SSE41@
@@ -712,6 +790,10 @@ ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
+ENABLE_VALGRIND_drd = @ENABLE_VALGRIND_drd@
+ENABLE_VALGRIND_helgrind = @ENABLE_VALGRIND_helgrind@
+ENABLE_VALGRIND_memcheck = @ENABLE_VALGRIND_memcheck@
+ENABLE_VALGRIND_sgcheck = @ENABLE_VALGRIND_sgcheck@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
@@ -724,7 +806,6 @@ INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
-ISODATE = @ISODATE@
 LD = @LD@
 LDFLAGS = @LDFLAGS@
 LIBOBJS = @LIBOBJS@
@@ -735,6 +816,7 @@ LIBTOOL_EXTRA_FLAGS = @LIBTOOL_EXTRA_FLAGS@
 LIPO = @LIPO@
 LN_S = @LN_S@
 LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
 MAINT = @MAINT@
 MAKEINFO = @MAKEINFO@
 MANIFEST_TOOL = @MANIFEST_TOOL@
@@ -753,16 +835,23 @@ PACKAGE_TARNAME = @PACKAGE_TARNAME@
 PACKAGE_URL = @PACKAGE_URL@
 PACKAGE_VERSION = @PACKAGE_VERSION@
 PATH_SEPARATOR = @PATH_SEPARATOR@
+PKGCONFIG_LIBS_PRIVATE = @PKGCONFIG_LIBS_PRIVATE@
+PTHREAD_CC = @PTHREAD_CC@
+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
+PTHREAD_LIBS = @PTHREAD_LIBS@
 RANLIB = @RANLIB@
 SAFECODE_HOME = @SAFECODE_HOME@
 SED = @SED@
 SET_MAKE = @SET_MAKE@
 SHELL = @SHELL@
+SODIUM_LIBRARY_MINIMAL_DEF = @SODIUM_LIBRARY_MINIMAL_DEF@
 SODIUM_LIBRARY_VERSION = @SODIUM_LIBRARY_VERSION@
 SODIUM_LIBRARY_VERSION_MAJOR = @SODIUM_LIBRARY_VERSION_MAJOR@
 SODIUM_LIBRARY_VERSION_MINOR = @SODIUM_LIBRARY_VERSION_MINOR@
 STRIP = @STRIP@
 TEST_LDFLAGS = @TEST_LDFLAGS@
+VALGRIND = @VALGRIND@
+VALGRIND_ENABLED = @VALGRIND_ENABLED@
 VERSION = @VERSION@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
@@ -776,6 +865,7 @@ am__leading_dot = @am__leading_dot@
 am__quote = @am__quote@
 am__tar = @am__tar@
 am__untar = @am__untar@
+ax_pthread_config = @ax_pthread_config@
 bindir = @bindir@
 build = @build@
 build_alias = @build_alias@
@@ -816,141 +906,96 @@ target_alias = @target_alias@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
+valgrind_enabled_tools = @valgrind_enabled_tools@
+valgrind_tools = @valgrind_tools@
+lib_LTLIBRARIES = \
+	libsodium.la
+
 libsodium_la_SOURCES =  \
 	crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c \
+	crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c \
 	crypto_auth/crypto_auth.c \
-	crypto_auth/hmacsha256/auth_hmacsha256_api.c \
-	crypto_auth/hmacsha256/cp/hmac_hmacsha256.c \
-	crypto_auth/hmacsha256/cp/verify_hmacsha256.c \
-	crypto_auth/hmacsha512/auth_hmacsha512_api.c \
-	crypto_auth/hmacsha512/cp/hmac_hmacsha512.c \
-	crypto_auth/hmacsha512/cp/verify_hmacsha512.c \
-	crypto_auth/hmacsha512256/auth_hmacsha512256_api.c \
-	crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c \
-	crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c \
+	crypto_auth/hmacsha256/auth_hmacsha256.c \
+	crypto_auth/hmacsha512/auth_hmacsha512.c \
+	crypto_auth/hmacsha512256/auth_hmacsha512256.c \
 	crypto_box/crypto_box.c crypto_box/crypto_box_easy.c \
 	crypto_box/crypto_box_seal.c \
-	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c \
-	crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c \
-	crypto_core/hsalsa20/ref2/core_hsalsa20.c \
-	crypto_core/hsalsa20/core_hsalsa20_api.c \
-	crypto_core/salsa20/ref/core_salsa20.c \
-	crypto_core/salsa20/core_salsa20_api.c \
+	crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c \
+	crypto_core/ed25519/ref10/ed25519_ref10.c \
+	crypto_core/hchacha20/core_hchacha20.c \
+	crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c \
+	crypto_core/hsalsa20/core_hsalsa20.c \
+	crypto_core/salsa/ref/core_salsa_ref.c \
 	crypto_generichash/crypto_generichash.c \
-	crypto_generichash/blake2/generichash_blake2_api.c \
-	crypto_generichash/blake2/ref/blake2-impl.h \
-	crypto_generichash/blake2/ref/blake2.h \
-	crypto_generichash/blake2/ref/blake2b-compress-ref.c \
-	crypto_generichash/blake2/ref/blake2b-load-sse2.h \
-	crypto_generichash/blake2/ref/blake2b-load-sse41.h \
-	crypto_generichash/blake2/ref/blake2b-ref.c \
-	crypto_generichash/blake2/ref/blake2b-round.h \
-	crypto_generichash/blake2/ref/generichash_blake2b.c \
-	crypto_hash/crypto_hash.c crypto_hash/sha256/hash_sha256_api.c \
-	crypto_hash/sha256/cp/hash_sha256.c \
-	crypto_hash/sha512/hash_sha512_api.c \
-	crypto_hash/sha512/cp/hash_sha512.c \
-	crypto_onetimeauth/crypto_onetimeauth.c \
+	crypto_generichash/blake2b/generichash_blake2.c \
+	crypto_generichash/blake2b/ref/blake2.h \
+	crypto_generichash/blake2b/ref/blake2b-compress-ref.c \
+	crypto_generichash/blake2b/ref/blake2b-load-sse2.h \
+	crypto_generichash/blake2b/ref/blake2b-load-sse41.h \
+	crypto_generichash/blake2b/ref/blake2b-load-avx2.h \
+	crypto_generichash/blake2b/ref/blake2b-ref.c \
+	crypto_generichash/blake2b/ref/generichash_blake2b.c \
+	crypto_hash/crypto_hash.c crypto_hash/sha256/hash_sha256.c \
+	crypto_hash/sha256/cp/hash_sha256_cp.c \
+	crypto_hash/sha512/hash_sha512.c \
+	crypto_hash/sha512/cp/hash_sha512_cp.c \
+	crypto_kdf/blake2b/kdf_blake2b.c crypto_kdf/crypto_kdf.c \
+	crypto_kx/crypto_kx.c crypto_onetimeauth/crypto_onetimeauth.c \
 	crypto_onetimeauth/poly1305/onetimeauth_poly1305.c \
 	crypto_onetimeauth/poly1305/onetimeauth_poly1305.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna32.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna64.h \
 	crypto_onetimeauth/poly1305/donna/poly1305_donna.c \
-	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c \
-	crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h \
-	crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c \
-	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c \
-	crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h \
-	crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c \
-	crypto_pwhash/scryptsalsa208sha256/sysendian.h \
-	crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c \
+	crypto_pwhash/argon2/argon2-core.c \
+	crypto_pwhash/argon2/argon2-core.h \
+	crypto_pwhash/argon2/argon2-encoding.c \
+	crypto_pwhash/argon2/argon2-encoding.h \
+	crypto_pwhash/argon2/argon2-fill-block-ref.c \
+	crypto_pwhash/argon2/argon2.c crypto_pwhash/argon2/argon2.h \
+	crypto_pwhash/argon2/blake2b-long.c \
+	crypto_pwhash/argon2/blake2b-long.h \
+	crypto_pwhash/argon2/blamka-round-ref.h \
+	crypto_pwhash/argon2/pwhash_argon2i.c \
+	crypto_pwhash/argon2/pwhash_argon2id.c \
+	crypto_pwhash/crypto_pwhash.c \
 	crypto_scalarmult/crypto_scalarmult.c \
+	crypto_scalarmult/curve25519/ref10/x25519_ref10.c \
+	crypto_scalarmult/curve25519/ref10/x25519_ref10.h \
 	crypto_scalarmult/curve25519/scalarmult_curve25519.c \
 	crypto_scalarmult/curve25519/scalarmult_curve25519.h \
 	crypto_secretbox/crypto_secretbox.c \
 	crypto_secretbox/crypto_secretbox_easy.c \
-	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c \
-	crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c \
+	crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c \
+	crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c \
 	crypto_shorthash/crypto_shorthash.c \
-	crypto_shorthash/siphash24/shorthash_siphash24_api.c \
-	crypto_shorthash/siphash24/ref/shorthash_siphash24.c \
-	crypto_sign/crypto_sign.c crypto_sign/ed25519/ref10/base.h \
-	crypto_sign/ed25519/ref10/base2.h \
-	crypto_sign/ed25519/sign_ed25519_api.c \
-	crypto_sign/ed25519/ref10/d.h crypto_sign/ed25519/ref10/d2.h \
-	crypto_sign/ed25519/ref10/fe.h \
-	crypto_sign/ed25519/ref10/fe_0.c \
-	crypto_sign/ed25519/ref10/fe_1.c \
-	crypto_sign/ed25519/ref10/fe_add.c \
-	crypto_sign/ed25519/ref10/fe_cmov.c \
-	crypto_sign/ed25519/ref10/fe_copy.c \
-	crypto_sign/ed25519/ref10/fe_frombytes.c \
-	crypto_sign/ed25519/ref10/fe_invert.c \
-	crypto_sign/ed25519/ref10/fe_isnegative.c \
-	crypto_sign/ed25519/ref10/fe_isnonzero.c \
-	crypto_sign/ed25519/ref10/fe_mul.c \
-	crypto_sign/ed25519/ref10/fe_neg.c \
-	crypto_sign/ed25519/ref10/fe_pow22523.c \
-	crypto_sign/ed25519/ref10/fe_sq.c \
-	crypto_sign/ed25519/ref10/fe_sq2.c \
-	crypto_sign/ed25519/ref10/fe_sub.c \
-	crypto_sign/ed25519/ref10/fe_tobytes.c \
-	crypto_sign/ed25519/ref10/ge.h \
-	crypto_sign/ed25519/ref10/ge_add.c \
-	crypto_sign/ed25519/ref10/ge_add.h \
-	crypto_sign/ed25519/ref10/ge_double_scalarmult.c \
-	crypto_sign/ed25519/ref10/ge_frombytes.c \
-	crypto_sign/ed25519/ref10/ge_madd.c \
-	crypto_sign/ed25519/ref10/ge_madd.h \
-	crypto_sign/ed25519/ref10/ge_msub.c \
-	crypto_sign/ed25519/ref10/ge_msub.h \
-	crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c \
-	crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c \
-	crypto_sign/ed25519/ref10/ge_p2_0.c \
-	crypto_sign/ed25519/ref10/ge_p2_dbl.c \
-	crypto_sign/ed25519/ref10/ge_p2_dbl.h \
-	crypto_sign/ed25519/ref10/ge_p3_0.c \
-	crypto_sign/ed25519/ref10/ge_p3_dbl.c \
-	crypto_sign/ed25519/ref10/ge_p3_to_cached.c \
-	crypto_sign/ed25519/ref10/ge_p3_to_p2.c \
-	crypto_sign/ed25519/ref10/ge_p3_tobytes.c \
-	crypto_sign/ed25519/ref10/ge_precomp_0.c \
-	crypto_sign/ed25519/ref10/ge_scalarmult_base.c \
-	crypto_sign/ed25519/ref10/ge_sub.c \
-	crypto_sign/ed25519/ref10/ge_sub.h \
-	crypto_sign/ed25519/ref10/ge_tobytes.c \
+	crypto_shorthash/siphash24/shorthash_siphash24.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c \
+	crypto_shorthash/siphash24/ref/shorthash_siphash_ref.h \
+	crypto_sign/crypto_sign.c crypto_sign/ed25519/sign_ed25519.c \
 	crypto_sign/ed25519/ref10/keypair.c \
 	crypto_sign/ed25519/ref10/open.c \
-	crypto_sign/ed25519/ref10/pow22523.h \
-	crypto_sign/ed25519/ref10/pow225521.h \
-	crypto_sign/ed25519/ref10/sc.h \
-	crypto_sign/ed25519/ref10/sc_muladd.c \
-	crypto_sign/ed25519/ref10/sc_reduce.c \
 	crypto_sign/ed25519/ref10/sign.c \
-	crypto_sign/ed25519/ref10/sqrtm1.h \
-	crypto_stream/crypto_stream.c \
+	crypto_sign/ed25519/ref10/sign_ed25519_ref10.h \
 	crypto_stream/chacha20/stream_chacha20.c \
 	crypto_stream/chacha20/stream_chacha20.h \
-	crypto_stream/chacha20/ref/stream_chacha20_ref.h \
-	crypto_stream/chacha20/ref/stream_chacha20_ref.c \
-	crypto_stream/salsa20/stream_salsa20_api.c \
-	crypto_stream/xsalsa20/stream_xsalsa20_api.c \
-	crypto_stream/xsalsa20/ref/stream_xsalsa20.c \
-	crypto_stream/xsalsa20/ref/xor_xsalsa20.c \
-	crypto_verify/16/verify_16_api.c \
-	crypto_verify/16/ref/verify_16.c \
-	crypto_verify/32/verify_32_api.c \
-	crypto_verify/32/ref/verify_32.c \
-	crypto_verify/64/verify_64_api.c \
-	crypto_verify/64/ref/verify_64.c randombytes/randombytes.c \
-	sodium/core.c sodium/runtime.c sodium/utils.c sodium/version.c \
-	$(am__append_1) $(am__append_2) $(am__append_3) \
-	$(am__append_4) $(am__append_5) $(am__append_6) \
-	$(am__append_7) $(am__append_8) $(am__append_9)
+	crypto_stream/chacha20/ref/chacha20_ref.h \
+	crypto_stream/chacha20/ref/chacha20_ref.c \
+	crypto_stream/crypto_stream.c \
+	crypto_stream/salsa20/stream_salsa20.c \
+	crypto_stream/salsa20/stream_salsa20.h \
+	crypto_stream/xsalsa20/stream_xsalsa20.c \
+	crypto_verify/sodium/verify.c \
+	include/sodium/private/chacha20_ietf_ext.h \
+	include/sodium/private/common.h \
+	include/sodium/private/ed25519_ref10.h \
+	include/sodium/private/implementations.h \
+	include/sodium/private/mutex.h \
+	include/sodium/private/sse2_64_32.h randombytes/randombytes.c \
+	sodium/codecs.c sodium/core.c sodium/runtime.c sodium/utils.c \
+	sodium/version.c $(am__append_1) $(am__append_2) \
+	$(am__append_3) $(am__append_4) $(am__append_5) \
+	$(am__append_6) $(am__append_10)
 noinst_HEADERS = \
 	crypto_scalarmult/curve25519/sandy2x/consts.S \
 	crypto_scalarmult/curve25519/sandy2x/fe51_mul.S \
@@ -959,25 +1004,34 @@ noinst_HEADERS = \
 	crypto_scalarmult/curve25519/sandy2x/ladder.S \
 	crypto_scalarmult/curve25519/sandy2x/ladder_base.S
 
-libsodium_la_LDFLAGS = \
-	$(AM_LDFLAGS) \
-	-export-dynamic \
-	-no-undefined \
-	$(LIBTOOL_EXTRA_FLAGS)
-
+randombytes_internal_randombytes_internal_random_CFLAGS = @CFLAGS_RDRAND@
+libsodium_la_LDFLAGS = $(AM_LDFLAGS) -export-dynamic -no-undefined \
+	$(LIBTOOL_EXTRA_FLAGS) $(am__append_7)
 libsodium_la_CPPFLAGS = \
 	$(LTDLINCL) \
 	-I$(srcdir)/include/sodium \
 	-I$(builddir)/include/sodium
 
+@HAVE_LD_OUTPUT_DEF_TRUE@defexecdir = $(bindir)
+@HAVE_LD_OUTPUT_DEF_TRUE@defexec_DATA = libsodium-$(DLL_VERSION).def
+@HAVE_LD_OUTPUT_DEF_TRUE@CLEANFILES = $(defexec_DATA)
 SUBDIRS = \
 	include
 
-libsodium_la_LIBADD = libaesni.la libsse2.la libssse3.la libsse41.la
-noinst_LTLIBRARIES = libsodium.la libaesni.la libsse2.la libssse3.la libsse41.la
+libsodium_la_LIBADD = libaesni.la libsse2.la libssse3.la libsse41.la \
+	libavx2.la libavx512f.la $(am__append_8)
+noinst_LTLIBRARIES = libaesni.la libsse2.la libssse3.la libsse41.la \
+	libavx2.la libavx512f.la $(am__append_9)
+librdrand_la_LDFLAGS = $(libsodium_la_LDFLAGS)
+librdrand_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
+	@CFLAGS_RDRAND@
+
+librdrand_la_SOURCES = \
+	randombytes/internal/randombytes_internal_random.c
+
 libaesni_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libaesni_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
-	@CFLAGS_SSSE3@ @CFLAGS_AESNI@ @CFLAGS_PCLMUL@
+	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_AESNI@ @CFLAGS_PCLMUL@
 
 libaesni_la_SOURCES = \
 	crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c
@@ -986,26 +1040,58 @@ libsse2_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libsse2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
 	@CFLAGS_SSE2@
 
-libsse2_la_SOURCES = \
-	crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c \
-	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c \
-	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h
-
+libsse2_la_SOURCES = crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c \
+	crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h \
+	$(am__append_11) $(am__append_12)
 libssse3_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libssse3_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
 	@CFLAGS_SSE2@ @CFLAGS_SSSE3@
 
 libssse3_la_SOURCES = \
-	crypto_generichash/blake2/ref/blake2b-compress-ssse3.c \
-	crypto_stream/chacha20/vec/stream_chacha20_vec.h \
-	crypto_stream/chacha20/vec/stream_chacha20_vec.c
+	crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c \
+	crypto_generichash/blake2b/ref/blake2b-compress-ssse3.h \
+	crypto_pwhash/argon2/argon2-fill-block-ssse3.c \
+	crypto_pwhash/argon2/blamka-round-ssse3.h \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.h \
+	crypto_stream/chacha20/dolbeau/u0.h \
+	crypto_stream/chacha20/dolbeau/u1.h \
+	crypto_stream/chacha20/dolbeau/u4.h
 
 libsse41_la_LDFLAGS = $(libsodium_la_LDFLAGS)
 libsse41_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
 	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@
 
 libsse41_la_SOURCES = \
-	crypto_generichash/blake2/ref/blake2b-compress-sse41.c
+	crypto_generichash/blake2b/ref/blake2b-compress-sse41.c \
+	crypto_generichash/blake2b/ref/blake2b-compress-sse41.h
+
+libavx2_la_LDFLAGS = $(libsodium_la_LDFLAGS)
+libavx2_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
+	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@ @CFLAGS_AVX@ @CFLAGS_AVX2@
+
+libavx2_la_SOURCES = \
+	crypto_generichash/blake2b/ref/blake2b-compress-avx2.c \
+	crypto_generichash/blake2b/ref/blake2b-compress-avx2.h \
+	crypto_pwhash/argon2/argon2-fill-block-avx2.c \
+	crypto_pwhash/argon2/blamka-round-avx2.h \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c \
+	crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.h \
+	crypto_stream/chacha20/dolbeau/u8.h \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c \
+	crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.h \
+	crypto_stream/salsa20/xmm6int/u0.h \
+	crypto_stream/salsa20/xmm6int/u1.h \
+	crypto_stream/salsa20/xmm6int/u4.h \
+	crypto_stream/salsa20/xmm6int/u8.h
+
+libavx512f_la_LDFLAGS = $(libsodium_la_LDFLAGS)
+libavx512f_la_CPPFLAGS = $(libsodium_la_CPPFLAGS) \
+	@CFLAGS_SSE2@ @CFLAGS_SSSE3@ @CFLAGS_SSE41@ @CFLAGS_AVX@ @CFLAGS_AVX2@ @CFLAGS_AVX512F@
+
+libavx512f_la_SOURCES = \
+	crypto_pwhash/argon2/argon2-fill-block-avx512f.c \
+	crypto_pwhash/argon2/blamka-round-avx512f.h
 
 all: all-recursive
 
@@ -1023,14 +1109,13 @@ $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__confi
 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/libsodium/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
 	  $(AUTOMAKE) --foreign src/libsodium/Makefile
-.PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
-	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
-	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
 	esac;
 
 $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
@@ -1042,6 +1127,41 @@ $(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
 	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
 $(am__aclocal_m4_deps):
 
+install-libLTLIBRARIES: $(lib_LTLIBRARIES)
+	@$(NORMAL_INSTALL)
+	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
+	list2=; for p in $$list; do \
+	  if test -f $$p; then \
+	    list2="$$list2 $$p"; \
+	  else :; fi; \
+	done; \
+	test -z "$$list2" || { \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
+	}
+
+uninstall-libLTLIBRARIES:
+	@$(NORMAL_UNINSTALL)
+	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
+	for p in $$list; do \
+	  $(am__strip_dir) \
+	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
+	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
+	done
+
+clean-libLTLIBRARIES:
+	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
+	@list='$(lib_LTLIBRARIES)'; \
+	locs=`for p in $$list; do echo $$p; done | \
+	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
+	      sort -u`; \
+	test -z "$$locs" || { \
+	  echo rm -f $${locs}; \
+	  rm -f $${locs}; \
+	}
+
 clean-noinstLTLIBRARIES:
 	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
 	@list='$(noinst_LTLIBRARIES)'; \
@@ -1064,6 +1184,63 @@ crypto_aead/aes256gcm/aesni/libaesni_la-aead_aes256gcm_aesni.lo:  \
 
 libaesni.la: $(libaesni_la_OBJECTS) $(libaesni_la_DEPENDENCIES) $(EXTRA_libaesni_la_DEPENDENCIES) 
 	$(AM_V_CCLD)$(libaesni_la_LINK)  $(libaesni_la_OBJECTS) $(libaesni_la_LIBADD) $(LIBS)
+crypto_generichash/blake2b/ref/$(am__dirstamp):
+	@$(MKDIR_P) crypto_generichash/blake2b/ref
+	@: > crypto_generichash/blake2b/ref/$(am__dirstamp)
+crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_generichash/blake2b/ref/$(DEPDIR)
+	@: > crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo:  \
+	crypto_generichash/blake2b/ref/$(am__dirstamp) \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/argon2
+	@: > crypto_pwhash/argon2/$(am__dirstamp)
+crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/argon2/$(DEPDIR)
+	@: > crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/chacha20/dolbeau/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/chacha20/dolbeau
+	@: > crypto_stream/chacha20/dolbeau/$(am__dirstamp)
+crypto_stream/chacha20/dolbeau/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/chacha20/dolbeau/$(DEPDIR)
+	@: > crypto_stream/chacha20/dolbeau/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo:  \
+	crypto_stream/chacha20/dolbeau/$(am__dirstamp) \
+	crypto_stream/chacha20/dolbeau/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/xmm6int/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa20/xmm6int
+	@: > crypto_stream/salsa20/xmm6int/$(am__dirstamp)
+crypto_stream/salsa20/xmm6int/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa20/xmm6int/$(DEPDIR)
+	@: > crypto_stream/salsa20/xmm6int/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo:  \
+	crypto_stream/salsa20/xmm6int/$(am__dirstamp) \
+	crypto_stream/salsa20/xmm6int/$(DEPDIR)/$(am__dirstamp)
+
+libavx2.la: $(libavx2_la_OBJECTS) $(libavx2_la_DEPENDENCIES) $(EXTRA_libavx2_la_DEPENDENCIES) 
+	$(AM_V_CCLD)$(libavx2_la_LINK)  $(libavx2_la_OBJECTS) $(libavx2_la_LIBADD) $(LIBS)
+crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+
+libavx512f.la: $(libavx512f_la_OBJECTS) $(libavx512f_la_DEPENDENCIES) $(EXTRA_libavx512f_la_DEPENDENCIES) 
+	$(AM_V_CCLD)$(libavx512f_la_LINK)  $(libavx512f_la_OBJECTS) $(libavx512f_la_LIBADD) $(LIBS)
+randombytes/internal/$(am__dirstamp):
+	@$(MKDIR_P) randombytes/internal
+	@: > randombytes/internal/$(am__dirstamp)
+randombytes/internal/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) randombytes/internal/$(DEPDIR)
+	@: > randombytes/internal/$(DEPDIR)/$(am__dirstamp)
+randombytes/internal/librdrand_la-randombytes_internal_random.lo:  \
+	randombytes/internal/$(am__dirstamp) \
+	randombytes/internal/$(DEPDIR)/$(am__dirstamp)
+
+librdrand.la: $(librdrand_la_OBJECTS) $(librdrand_la_DEPENDENCIES) $(EXTRA_librdrand_la_DEPENDENCIES) 
+	$(AM_V_CCLD)$(librdrand_la_LINK) $(am_librdrand_la_rpath) $(librdrand_la_OBJECTS) $(librdrand_la_LIBADD) $(LIBS)
 crypto_aead/chacha20poly1305/sodium/$(am__dirstamp):
 	@$(MKDIR_P) crypto_aead/chacha20poly1305/sodium
 	@: > crypto_aead/chacha20poly1305/sodium/$(am__dirstamp)
@@ -1073,6 +1250,15 @@ crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp):
 crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo:  \
 	crypto_aead/chacha20poly1305/sodium/$(am__dirstamp) \
 	crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
+crypto_aead/xchacha20poly1305/sodium/$(am__dirstamp):
+	@$(MKDIR_P) crypto_aead/xchacha20poly1305/sodium
+	@: > crypto_aead/xchacha20poly1305/sodium/$(am__dirstamp)
+crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)
+	@: > crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
+crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo:  \
+	crypto_aead/xchacha20poly1305/sodium/$(am__dirstamp) \
+	crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
 crypto_auth/$(am__dirstamp):
 	@$(MKDIR_P) crypto_auth
 	@: > crypto_auth/$(am__dirstamp)
@@ -1087,63 +1273,27 @@ crypto_auth/hmacsha256/$(am__dirstamp):
 crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_auth/hmacsha256/$(DEPDIR)
 	@: > crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo:  \
+crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo:  \
 	crypto_auth/hmacsha256/$(am__dirstamp) \
 	crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha256/cp/$(am__dirstamp):
-	@$(MKDIR_P) crypto_auth/hmacsha256/cp
-	@: > crypto_auth/hmacsha256/cp/$(am__dirstamp)
-crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_auth/hmacsha256/cp/$(DEPDIR)
-	@: > crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo:  \
-	crypto_auth/hmacsha256/cp/$(am__dirstamp) \
-	crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo:  \
-	crypto_auth/hmacsha256/cp/$(am__dirstamp) \
-	crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
 crypto_auth/hmacsha512/$(am__dirstamp):
 	@$(MKDIR_P) crypto_auth/hmacsha512
 	@: > crypto_auth/hmacsha512/$(am__dirstamp)
 crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_auth/hmacsha512/$(DEPDIR)
 	@: > crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo:  \
+crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo:  \
 	crypto_auth/hmacsha512/$(am__dirstamp) \
 	crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512/cp/$(am__dirstamp):
-	@$(MKDIR_P) crypto_auth/hmacsha512/cp
-	@: > crypto_auth/hmacsha512/cp/$(am__dirstamp)
-crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_auth/hmacsha512/cp/$(DEPDIR)
-	@: > crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo:  \
-	crypto_auth/hmacsha512/cp/$(am__dirstamp) \
-	crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo:  \
-	crypto_auth/hmacsha512/cp/$(am__dirstamp) \
-	crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
 crypto_auth/hmacsha512256/$(am__dirstamp):
 	@$(MKDIR_P) crypto_auth/hmacsha512256
 	@: > crypto_auth/hmacsha512256/$(am__dirstamp)
 crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_auth/hmacsha512256/$(DEPDIR)
 	@: > crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo:  \
+crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo:  \
 	crypto_auth/hmacsha512256/$(am__dirstamp) \
 	crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512256/cp/$(am__dirstamp):
-	@$(MKDIR_P) crypto_auth/hmacsha512256/cp
-	@: > crypto_auth/hmacsha512256/cp/$(am__dirstamp)
-crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_auth/hmacsha512256/cp/$(DEPDIR)
-	@: > crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo:  \
-	crypto_auth/hmacsha512256/cp/$(am__dirstamp) \
-	crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo:  \
-	crypto_auth/hmacsha512256/cp/$(am__dirstamp) \
-	crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
 crypto_box/$(am__dirstamp):
 	@$(MKDIR_P) crypto_box
 	@: > crypto_box/$(am__dirstamp)
@@ -1164,34 +1314,34 @@ crypto_box/curve25519xsalsa20poly1305/$(am__dirstamp):
 crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)
 	@: > crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
-crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo:  \
+crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo:  \
 	crypto_box/curve25519xsalsa20poly1305/$(am__dirstamp) \
 	crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
-crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_box/curve25519xsalsa20poly1305/ref
-	@: > crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp)
-crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)
-	@: > crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo:  \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo:  \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo:  \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo:  \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp) \
-	crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_core/ed25519/ref10/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/ed25519/ref10
+	@: > crypto_core/ed25519/ref10/$(am__dirstamp)
+crypto_core/ed25519/ref10/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/ed25519/ref10/$(DEPDIR)
+	@: > crypto_core/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo:  \
+	crypto_core/ed25519/ref10/$(am__dirstamp) \
+	crypto_core/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_core/hchacha20/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/hchacha20
+	@: > crypto_core/hchacha20/$(am__dirstamp)
+crypto_core/hchacha20/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/hchacha20/$(DEPDIR)
+	@: > crypto_core/hchacha20/$(DEPDIR)/$(am__dirstamp)
+crypto_core/hchacha20/libsodium_la-core_hchacha20.lo:  \
+	crypto_core/hchacha20/$(am__dirstamp) \
+	crypto_core/hchacha20/$(DEPDIR)/$(am__dirstamp)
 crypto_core/hsalsa20/ref2/$(am__dirstamp):
 	@$(MKDIR_P) crypto_core/hsalsa20/ref2
 	@: > crypto_core/hsalsa20/ref2/$(am__dirstamp)
 crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_core/hsalsa20/ref2/$(DEPDIR)
 	@: > crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp)
-crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo:  \
+crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo:  \
 	crypto_core/hsalsa20/ref2/$(am__dirstamp) \
 	crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp)
 crypto_core/hsalsa20/$(am__dirstamp):
@@ -1200,27 +1350,18 @@ crypto_core/hsalsa20/$(am__dirstamp):
 crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_core/hsalsa20/$(DEPDIR)
 	@: > crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp)
-crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo:  \
+crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo:  \
 	crypto_core/hsalsa20/$(am__dirstamp) \
 	crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa20/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa20/ref
-	@: > crypto_core/salsa20/ref/$(am__dirstamp)
-crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa20/ref/$(DEPDIR)
-	@: > crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo:  \
-	crypto_core/salsa20/ref/$(am__dirstamp) \
-	crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa20/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa20
-	@: > crypto_core/salsa20/$(am__dirstamp)
-crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa20/$(DEPDIR)
-	@: > crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa20/libsodium_la-core_salsa20_api.lo:  \
-	crypto_core/salsa20/$(am__dirstamp) \
-	crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp)
+crypto_core/salsa/ref/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/salsa/ref
+	@: > crypto_core/salsa/ref/$(am__dirstamp)
+crypto_core/salsa/ref/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/salsa/ref/$(DEPDIR)
+	@: > crypto_core/salsa/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo:  \
+	crypto_core/salsa/ref/$(am__dirstamp) \
+	crypto_core/salsa/ref/$(DEPDIR)/$(am__dirstamp)
 crypto_generichash/$(am__dirstamp):
 	@$(MKDIR_P) crypto_generichash
 	@: > crypto_generichash/$(am__dirstamp)
@@ -1230,30 +1371,24 @@ crypto_generichash/$(DEPDIR)/$(am__dirstamp):
 crypto_generichash/libsodium_la-crypto_generichash.lo:  \
 	crypto_generichash/$(am__dirstamp) \
 	crypto_generichash/$(DEPDIR)/$(am__dirstamp)
-crypto_generichash/blake2/$(am__dirstamp):
-	@$(MKDIR_P) crypto_generichash/blake2
-	@: > crypto_generichash/blake2/$(am__dirstamp)
-crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_generichash/blake2/$(DEPDIR)
-	@: > crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp)
-crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo:  \
-	crypto_generichash/blake2/$(am__dirstamp) \
-	crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp)
-crypto_generichash/blake2/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_generichash/blake2/ref
-	@: > crypto_generichash/blake2/ref/$(am__dirstamp)
-crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_generichash/blake2/ref/$(DEPDIR)
-	@: > crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_generichash/blake2/ref/libsodium_la-blake2b-compress-ref.lo:  \
-	crypto_generichash/blake2/ref/$(am__dirstamp) \
-	crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo:  \
-	crypto_generichash/blake2/ref/$(am__dirstamp) \
-	crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo:  \
-	crypto_generichash/blake2/ref/$(am__dirstamp) \
-	crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/$(am__dirstamp):
+	@$(MKDIR_P) crypto_generichash/blake2b
+	@: > crypto_generichash/blake2b/$(am__dirstamp)
+crypto_generichash/blake2b/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_generichash/blake2b/$(DEPDIR)
+	@: > crypto_generichash/blake2b/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo:  \
+	crypto_generichash/blake2b/$(am__dirstamp) \
+	crypto_generichash/blake2b/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo:  \
+	crypto_generichash/blake2b/ref/$(am__dirstamp) \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo:  \
+	crypto_generichash/blake2b/ref/$(am__dirstamp) \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo:  \
+	crypto_generichash/blake2b/ref/$(am__dirstamp) \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
 crypto_hash/$(am__dirstamp):
 	@$(MKDIR_P) crypto_hash
 	@: > crypto_hash/$(am__dirstamp)
@@ -1268,7 +1403,7 @@ crypto_hash/sha256/$(am__dirstamp):
 crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_hash/sha256/$(DEPDIR)
 	@: > crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp)
-crypto_hash/sha256/libsodium_la-hash_sha256_api.lo:  \
+crypto_hash/sha256/libsodium_la-hash_sha256.lo:  \
 	crypto_hash/sha256/$(am__dirstamp) \
 	crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp)
 crypto_hash/sha256/cp/$(am__dirstamp):
@@ -1277,7 +1412,7 @@ crypto_hash/sha256/cp/$(am__dirstamp):
 crypto_hash/sha256/cp/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_hash/sha256/cp/$(DEPDIR)
 	@: > crypto_hash/sha256/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo:  \
+crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo:  \
 	crypto_hash/sha256/cp/$(am__dirstamp) \
 	crypto_hash/sha256/cp/$(DEPDIR)/$(am__dirstamp)
 crypto_hash/sha512/$(am__dirstamp):
@@ -1286,7 +1421,7 @@ crypto_hash/sha512/$(am__dirstamp):
 crypto_hash/sha512/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_hash/sha512/$(DEPDIR)
 	@: > crypto_hash/sha512/$(DEPDIR)/$(am__dirstamp)
-crypto_hash/sha512/libsodium_la-hash_sha512_api.lo:  \
+crypto_hash/sha512/libsodium_la-hash_sha512.lo:  \
 	crypto_hash/sha512/$(am__dirstamp) \
 	crypto_hash/sha512/$(DEPDIR)/$(am__dirstamp)
 crypto_hash/sha512/cp/$(am__dirstamp):
@@ -1295,9 +1430,34 @@ crypto_hash/sha512/cp/$(am__dirstamp):
 crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_hash/sha512/cp/$(DEPDIR)
 	@: > crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp)
-crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo:  \
+crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo:  \
 	crypto_hash/sha512/cp/$(am__dirstamp) \
 	crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp)
+crypto_kdf/blake2b/$(am__dirstamp):
+	@$(MKDIR_P) crypto_kdf/blake2b
+	@: > crypto_kdf/blake2b/$(am__dirstamp)
+crypto_kdf/blake2b/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_kdf/blake2b/$(DEPDIR)
+	@: > crypto_kdf/blake2b/$(DEPDIR)/$(am__dirstamp)
+crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo:  \
+	crypto_kdf/blake2b/$(am__dirstamp) \
+	crypto_kdf/blake2b/$(DEPDIR)/$(am__dirstamp)
+crypto_kdf/$(am__dirstamp):
+	@$(MKDIR_P) crypto_kdf
+	@: > crypto_kdf/$(am__dirstamp)
+crypto_kdf/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_kdf/$(DEPDIR)
+	@: > crypto_kdf/$(DEPDIR)/$(am__dirstamp)
+crypto_kdf/libsodium_la-crypto_kdf.lo: crypto_kdf/$(am__dirstamp) \
+	crypto_kdf/$(DEPDIR)/$(am__dirstamp)
+crypto_kx/$(am__dirstamp):
+	@$(MKDIR_P) crypto_kx
+	@: > crypto_kx/$(am__dirstamp)
+crypto_kx/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_kx/$(DEPDIR)
+	@: > crypto_kx/$(DEPDIR)/$(am__dirstamp)
+crypto_kx/libsodium_la-crypto_kx.lo: crypto_kx/$(am__dirstamp) \
+	crypto_kx/$(DEPDIR)/$(am__dirstamp)
 crypto_onetimeauth/$(am__dirstamp):
 	@$(MKDIR_P) crypto_onetimeauth
 	@: > crypto_onetimeauth/$(am__dirstamp)
@@ -1325,33 +1485,36 @@ crypto_onetimeauth/poly1305/donna/$(DEPDIR)/$(am__dirstamp):
 crypto_onetimeauth/poly1305/donna/libsodium_la-poly1305_donna.lo:  \
 	crypto_onetimeauth/poly1305/donna/$(am__dirstamp) \
 	crypto_onetimeauth/poly1305/donna/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp):
-	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256
-	@: > crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)
-	@: > crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo:  \
-	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
-	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo:  \
-	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
-	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo:  \
-	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
-	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo:  \
-	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
-	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp):
-	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/nosse
-	@: > crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)
-	@: > crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo:  \
-	crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp) \
-	crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libsodium_la-argon2-core.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libsodium_la-argon2.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libsodium_la-blake2b-long.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash
+	@: > crypto_pwhash/$(am__dirstamp)
+crypto_pwhash/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/$(DEPDIR)
+	@: > crypto_pwhash/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/libsodium_la-crypto_pwhash.lo:  \
+	crypto_pwhash/$(am__dirstamp) \
+	crypto_pwhash/$(DEPDIR)/$(am__dirstamp)
 crypto_scalarmult/$(am__dirstamp):
 	@$(MKDIR_P) crypto_scalarmult
 	@: > crypto_scalarmult/$(am__dirstamp)
@@ -1361,6 +1524,15 @@ crypto_scalarmult/$(DEPDIR)/$(am__dirstamp):
 crypto_scalarmult/libsodium_la-crypto_scalarmult.lo:  \
 	crypto_scalarmult/$(am__dirstamp) \
 	crypto_scalarmult/$(DEPDIR)/$(am__dirstamp)
+crypto_scalarmult/curve25519/ref10/$(am__dirstamp):
+	@$(MKDIR_P) crypto_scalarmult/curve25519/ref10
+	@: > crypto_scalarmult/curve25519/ref10/$(am__dirstamp)
+crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_scalarmult/curve25519/ref10/$(DEPDIR)
+	@: > crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo:  \
+	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
+	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
 crypto_scalarmult/curve25519/$(am__dirstamp):
 	@$(MKDIR_P) crypto_scalarmult/curve25519
 	@: > crypto_scalarmult/curve25519/$(am__dirstamp)
@@ -1388,18 +1560,18 @@ crypto_secretbox/xsalsa20poly1305/$(am__dirstamp):
 crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_secretbox/xsalsa20poly1305/$(DEPDIR)
 	@: > crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
-crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo:  \
+crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo:  \
 	crypto_secretbox/xsalsa20poly1305/$(am__dirstamp) \
 	crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
-crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_secretbox/xsalsa20poly1305/ref
-	@: > crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp)
-crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)
-	@: > crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo:  \
-	crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp) \
-	crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_secretstream/xchacha20poly1305/$(am__dirstamp):
+	@$(MKDIR_P) crypto_secretstream/xchacha20poly1305
+	@: > crypto_secretstream/xchacha20poly1305/$(am__dirstamp)
+crypto_secretstream/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_secretstream/xchacha20poly1305/$(DEPDIR)
+	@: > crypto_secretstream/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo:  \
+	crypto_secretstream/xchacha20poly1305/$(am__dirstamp) \
+	crypto_secretstream/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
 crypto_shorthash/$(am__dirstamp):
 	@$(MKDIR_P) crypto_shorthash
 	@: > crypto_shorthash/$(am__dirstamp)
@@ -1415,7 +1587,7 @@ crypto_shorthash/siphash24/$(am__dirstamp):
 crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_shorthash/siphash24/$(DEPDIR)
 	@: > crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp)
-crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo:  \
+crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo:  \
 	crypto_shorthash/siphash24/$(am__dirstamp) \
 	crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp)
 crypto_shorthash/siphash24/ref/$(am__dirstamp):
@@ -1424,7 +1596,7 @@ crypto_shorthash/siphash24/ref/$(am__dirstamp):
 crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_shorthash/siphash24/ref/$(DEPDIR)
 	@: > crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo:  \
+crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo:  \
 	crypto_shorthash/siphash24/ref/$(am__dirstamp) \
 	crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp)
 crypto_sign/$(am__dirstamp):
@@ -1441,7 +1613,7 @@ crypto_sign/ed25519/$(am__dirstamp):
 crypto_sign/ed25519/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_sign/ed25519/$(DEPDIR)
 	@: > crypto_sign/ed25519/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo:  \
+crypto_sign/ed25519/libsodium_la-sign_ed25519.lo:  \
 	crypto_sign/ed25519/$(am__dirstamp) \
 	crypto_sign/ed25519/$(DEPDIR)/$(am__dirstamp)
 crypto_sign/ed25519/ref10/$(am__dirstamp):
@@ -1450,132 +1622,15 @@ crypto_sign/ed25519/ref10/$(am__dirstamp):
 crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_sign/ed25519/ref10/$(DEPDIR)
 	@: > crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
 crypto_sign/ed25519/ref10/libsodium_la-keypair.lo:  \
 	crypto_sign/ed25519/ref10/$(am__dirstamp) \
 	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
 crypto_sign/ed25519/ref10/libsodium_la-open.lo:  \
 	crypto_sign/ed25519/ref10/$(am__dirstamp) \
 	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
 crypto_sign/ed25519/ref10/libsodium_la-sign.lo:  \
 	crypto_sign/ed25519/ref10/$(am__dirstamp) \
 	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream
-	@: > crypto_stream/$(am__dirstamp)
-crypto_stream/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/$(DEPDIR)
-	@: > crypto_stream/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/libsodium_la-crypto_stream.lo:  \
-	crypto_stream/$(am__dirstamp) \
-	crypto_stream/$(DEPDIR)/$(am__dirstamp)
 crypto_stream/chacha20/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/chacha20
 	@: > crypto_stream/chacha20/$(am__dirstamp)
@@ -1591,16 +1646,25 @@ crypto_stream/chacha20/ref/$(am__dirstamp):
 crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/chacha20/ref/$(DEPDIR)
 	@: > crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo:  \
+crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo:  \
 	crypto_stream/chacha20/ref/$(am__dirstamp) \
 	crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream
+	@: > crypto_stream/$(am__dirstamp)
+crypto_stream/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/$(DEPDIR)
+	@: > crypto_stream/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/libsodium_la-crypto_stream.lo:  \
+	crypto_stream/$(am__dirstamp) \
+	crypto_stream/$(DEPDIR)/$(am__dirstamp)
 crypto_stream/salsa20/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/salsa20
 	@: > crypto_stream/salsa20/$(am__dirstamp)
 crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/salsa20/$(DEPDIR)
 	@: > crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo:  \
+crypto_stream/salsa20/libsodium_la-stream_salsa20.lo:  \
 	crypto_stream/salsa20/$(am__dirstamp) \
 	crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp)
 crypto_stream/xsalsa20/$(am__dirstamp):
@@ -1609,75 +1673,18 @@ crypto_stream/xsalsa20/$(am__dirstamp):
 crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/xsalsa20/$(DEPDIR)
 	@: > crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo:  \
+crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo:  \
 	crypto_stream/xsalsa20/$(am__dirstamp) \
 	crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/xsalsa20/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/xsalsa20/ref
-	@: > crypto_stream/xsalsa20/ref/$(am__dirstamp)
-crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/xsalsa20/ref/$(DEPDIR)
-	@: > crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo:  \
-	crypto_stream/xsalsa20/ref/$(am__dirstamp) \
-	crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo:  \
-	crypto_stream/xsalsa20/ref/$(am__dirstamp) \
-	crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/16/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/16
-	@: > crypto_verify/16/$(am__dirstamp)
-crypto_verify/16/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/16/$(DEPDIR)
-	@: > crypto_verify/16/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/16/libsodium_la-verify_16_api.lo:  \
-	crypto_verify/16/$(am__dirstamp) \
-	crypto_verify/16/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/16/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/16/ref
-	@: > crypto_verify/16/ref/$(am__dirstamp)
-crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/16/ref/$(DEPDIR)
-	@: > crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/16/ref/libsodium_la-verify_16.lo:  \
-	crypto_verify/16/ref/$(am__dirstamp) \
-	crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/32/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/32
-	@: > crypto_verify/32/$(am__dirstamp)
-crypto_verify/32/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/32/$(DEPDIR)
-	@: > crypto_verify/32/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/32/libsodium_la-verify_32_api.lo:  \
-	crypto_verify/32/$(am__dirstamp) \
-	crypto_verify/32/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/32/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/32/ref
-	@: > crypto_verify/32/ref/$(am__dirstamp)
-crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/32/ref/$(DEPDIR)
-	@: > crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/32/ref/libsodium_la-verify_32.lo:  \
-	crypto_verify/32/ref/$(am__dirstamp) \
-	crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/64/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/64
-	@: > crypto_verify/64/$(am__dirstamp)
-crypto_verify/64/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/64/$(DEPDIR)
-	@: > crypto_verify/64/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/64/libsodium_la-verify_64_api.lo:  \
-	crypto_verify/64/$(am__dirstamp) \
-	crypto_verify/64/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/64/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/64/ref
-	@: > crypto_verify/64/ref/$(am__dirstamp)
-crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_verify/64/ref/$(DEPDIR)
-	@: > crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_verify/64/ref/libsodium_la-verify_64.lo:  \
-	crypto_verify/64/ref/$(am__dirstamp) \
-	crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_verify/sodium/$(am__dirstamp):
+	@$(MKDIR_P) crypto_verify/sodium
+	@: > crypto_verify/sodium/$(am__dirstamp)
+crypto_verify/sodium/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_verify/sodium/$(DEPDIR)
+	@: > crypto_verify/sodium/$(DEPDIR)/$(am__dirstamp)
+crypto_verify/sodium/libsodium_la-verify.lo:  \
+	crypto_verify/sodium/$(am__dirstamp) \
+	crypto_verify/sodium/$(DEPDIR)/$(am__dirstamp)
 randombytes/$(am__dirstamp):
 	@$(MKDIR_P) randombytes
 	@: > randombytes/$(am__dirstamp)
@@ -1692,6 +1699,8 @@ sodium/$(am__dirstamp):
 sodium/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) sodium/$(DEPDIR)
 	@: > sodium/$(DEPDIR)/$(am__dirstamp)
+sodium/libsodium_la-codecs.lo: sodium/$(am__dirstamp) \
+	sodium/$(DEPDIR)/$(am__dirstamp)
 sodium/libsodium_la-core.lo: sodium/$(am__dirstamp) \
 	sodium/$(DEPDIR)/$(am__dirstamp)
 sodium/libsodium_la-runtime.lo: sodium/$(am__dirstamp) \
@@ -1700,87 +1709,27 @@ sodium/libsodium_la-utils.lo: sodium/$(am__dirstamp) \
 	sodium/$(DEPDIR)/$(am__dirstamp)
 sodium/libsodium_la-version.lo: sodium/$(am__dirstamp) \
 	sodium/$(DEPDIR)/$(am__dirstamp)
-randombytes/salsa20/$(am__dirstamp):
-	@$(MKDIR_P) randombytes/salsa20
-	@: > randombytes/salsa20/$(am__dirstamp)
-randombytes/salsa20/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) randombytes/salsa20/$(DEPDIR)
-	@: > randombytes/salsa20/$(DEPDIR)/$(am__dirstamp)
-randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo:  \
-	randombytes/salsa20/$(am__dirstamp) \
-	randombytes/salsa20/$(DEPDIR)/$(am__dirstamp)
-randombytes/nativeclient/$(am__dirstamp):
-	@$(MKDIR_P) randombytes/nativeclient
-	@: > randombytes/nativeclient/$(am__dirstamp)
-randombytes/nativeclient/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) randombytes/nativeclient/$(DEPDIR)
-	@: > randombytes/nativeclient/$(DEPDIR)/$(am__dirstamp)
-randombytes/nativeclient/libsodium_la-randombytes_nativeclient.lo:  \
-	randombytes/nativeclient/$(am__dirstamp) \
-	randombytes/nativeclient/$(DEPDIR)/$(am__dirstamp)
-randombytes/sysrandom/$(am__dirstamp):
-	@$(MKDIR_P) randombytes/sysrandom
-	@: > randombytes/sysrandom/$(am__dirstamp)
-randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) randombytes/sysrandom/$(DEPDIR)
-	@: > randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
-randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo:  \
-	randombytes/sysrandom/$(am__dirstamp) \
-	randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp):
-	@$(MKDIR_P) crypto_scalarmult/curve25519/donna_c64
-	@: > crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp)
-crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)
-	@: > crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/donna_c64/libsodium_la-curve25519_donna_c64.lo:  \
-	crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/$(am__dirstamp):
-	@$(MKDIR_P) crypto_scalarmult/curve25519/ref10
-	@: > crypto_scalarmult/curve25519/ref10/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_scalarmult/curve25519/ref10/$(DEPDIR)
-	@: > crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo:  \
-	crypto_scalarmult/curve25519/ref10/$(am__dirstamp) \
-	crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/xmm6/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa20/xmm6
+	@: > crypto_stream/salsa20/xmm6/$(am__dirstamp)
+crypto_stream/salsa20/xmm6/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa20/xmm6/$(DEPDIR)
+	@: > crypto_stream/salsa20/xmm6/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo:  \
+	crypto_stream/salsa20/xmm6/$(am__dirstamp) \
+	crypto_stream/salsa20/xmm6/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo:  \
+	crypto_stream/salsa20/xmm6/$(am__dirstamp) \
+	crypto_stream/salsa20/xmm6/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/ref/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa20/ref
+	@: > crypto_stream/salsa20/ref/$(am__dirstamp)
+crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa20/ref/$(DEPDIR)
+	@: > crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/ref/libsodium_la-salsa20_ref.lo:  \
+	crypto_stream/salsa20/ref/$(am__dirstamp) \
+	crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
 crypto_scalarmult/curve25519/sandy2x/$(am__dirstamp):
 	@$(MKDIR_P) crypto_scalarmult/curve25519/sandy2x
 	@: > crypto_scalarmult/curve25519/sandy2x/$(am__dirstamp)
@@ -1799,156 +1748,150 @@ crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe_frombytes_sandy2x.lo:  \
 crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo:  \
 	crypto_scalarmult/curve25519/sandy2x/$(am__dirstamp) \
 	crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa20/amd64_xmm6
-	@: > crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp)
-crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)
-	@: > crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo:  \
-	crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp) \
-	crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa20/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa20/ref
-	@: > crypto_stream/salsa20/ref/$(am__dirstamp)
-crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa20/ref/$(DEPDIR)
-	@: > crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo:  \
-	crypto_stream/salsa20/ref/$(am__dirstamp) \
-	crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo:  \
-	crypto_stream/salsa20/ref/$(am__dirstamp) \
-	crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa2012/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa2012/ref
-	@: > crypto_core/salsa2012/ref/$(am__dirstamp)
-crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa2012/ref/$(DEPDIR)
-	@: > crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo:  \
-	crypto_core/salsa2012/ref/$(am__dirstamp) \
-	crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa2012/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa2012
-	@: > crypto_core/salsa2012/$(am__dirstamp)
-crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa2012/$(DEPDIR)
-	@: > crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo:  \
-	crypto_core/salsa2012/$(am__dirstamp) \
-	crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa208/ref/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa208/ref
-	@: > crypto_core/salsa208/ref/$(am__dirstamp)
-crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa208/ref/$(DEPDIR)
-	@: > crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo:  \
-	crypto_core/salsa208/ref/$(am__dirstamp) \
-	crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa208/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa208
-	@: > crypto_core/salsa208/$(am__dirstamp)
-crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_core/salsa208/$(DEPDIR)
-	@: > crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp)
-crypto_core/salsa208/libsodium_la-core_salsa208_api.lo:  \
-	crypto_core/salsa208/$(am__dirstamp) \
-	crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp)
-crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo:  \
-	crypto_sign/ed25519/ref10/$(am__dirstamp) \
-	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/aes128ctr/portable
-	@: > crypto_stream/aes128ctr/portable/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/aes128ctr/portable/$(DEPDIR)
-	@: > crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo:  \
-	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
-	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/aes128ctr
-	@: > crypto_stream/aes128ctr/$(am__dirstamp)
-crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/aes128ctr/$(DEPDIR)
-	@: > crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo:  \
-	crypto_stream/aes128ctr/$(am__dirstamp) \
-	crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo:  \
-	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
-	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo:  \
-	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
-	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo:  \
-	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
-	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo:  \
-	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
-	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo:  \
-	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
-	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo:  \
-	crypto_stream/aes128ctr/portable/$(am__dirstamp) \
-	crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa2012/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa2012
-	@: > crypto_stream/salsa2012/$(am__dirstamp)
-crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa2012/$(DEPDIR)
-	@: > crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo:  \
-	crypto_stream/salsa2012/$(am__dirstamp) \
-	crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa2012/ref/$(am__dirstamp):
+crypto_box/curve25519xchacha20poly1305/$(am__dirstamp):
+	@$(MKDIR_P) crypto_box/curve25519xchacha20poly1305
+	@: > crypto_box/curve25519xchacha20poly1305/$(am__dirstamp)
+crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_box/curve25519xchacha20poly1305/$(DEPDIR)
+	@: > crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo:  \
+	crypto_box/curve25519xchacha20poly1305/$(am__dirstamp) \
+	crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo:  \
+	crypto_box/curve25519xchacha20poly1305/$(am__dirstamp) \
+	crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+crypto_core/ed25519/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/ed25519
+	@: > crypto_core/ed25519/$(am__dirstamp)
+crypto_core/ed25519/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_core/ed25519/$(DEPDIR)
+	@: > crypto_core/ed25519/$(DEPDIR)/$(am__dirstamp)
+crypto_core/ed25519/libsodium_la-core_ed25519.lo:  \
+	crypto_core/ed25519/$(am__dirstamp) \
+	crypto_core/ed25519/$(DEPDIR)/$(am__dirstamp)
+crypto_core/ed25519/libsodium_la-core_ristretto255.lo:  \
+	crypto_core/ed25519/$(am__dirstamp) \
+	crypto_core/ed25519/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256
+	@: > crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)
+	@: > crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo:  \
+	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo:  \
+	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo:  \
+	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo:  \
+	crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp) \
+	crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/nosse
+	@: > crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)
+	@: > crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo:  \
+	crypto_pwhash/scryptsalsa208sha256/nosse/$(am__dirstamp) \
+	crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
+crypto_scalarmult/ed25519/ref10/$(am__dirstamp):
+	@$(MKDIR_P) crypto_scalarmult/ed25519/ref10
+	@: > crypto_scalarmult/ed25519/ref10/$(am__dirstamp)
+crypto_scalarmult/ed25519/ref10/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_scalarmult/ed25519/ref10/$(DEPDIR)
+	@: > crypto_scalarmult/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo:  \
+	crypto_scalarmult/ed25519/ref10/$(am__dirstamp) \
+	crypto_scalarmult/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_scalarmult/ristretto255/ref10/$(am__dirstamp):
+	@$(MKDIR_P) crypto_scalarmult/ristretto255/ref10
+	@: > crypto_scalarmult/ristretto255/ref10/$(am__dirstamp)
+crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_scalarmult/ristretto255/ref10/$(DEPDIR)
+	@: > crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo:  \
+	crypto_scalarmult/ristretto255/ref10/$(am__dirstamp) \
+	crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_secretbox/xchacha20poly1305/$(am__dirstamp):
+	@$(MKDIR_P) crypto_secretbox/xchacha20poly1305
+	@: > crypto_secretbox/xchacha20poly1305/$(am__dirstamp)
+crypto_secretbox/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_secretbox/xchacha20poly1305/$(DEPDIR)
+	@: > crypto_secretbox/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo:  \
+	crypto_secretbox/xchacha20poly1305/$(am__dirstamp) \
+	crypto_secretbox/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo:  \
+	crypto_shorthash/siphash24/$(am__dirstamp) \
+	crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp)
+crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo:  \
+	crypto_shorthash/siphash24/ref/$(am__dirstamp) \
+	crypto_shorthash/siphash24/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo:  \
+	crypto_sign/ed25519/ref10/$(am__dirstamp) \
+	crypto_sign/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa2012/ref/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/salsa2012/ref
 	@: > crypto_stream/salsa2012/ref/$(am__dirstamp)
 crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/salsa2012/ref/$(DEPDIR)
 	@: > crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo:  \
-	crypto_stream/salsa2012/ref/$(am__dirstamp) \
-	crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo:  \
+crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo:  \
 	crypto_stream/salsa2012/ref/$(am__dirstamp) \
 	crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa208/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa208
-	@: > crypto_stream/salsa208/$(am__dirstamp)
-crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/salsa208/$(DEPDIR)
-	@: > crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo:  \
-	crypto_stream/salsa208/$(am__dirstamp) \
-	crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa2012/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa2012
+	@: > crypto_stream/salsa2012/$(am__dirstamp)
+crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa2012/$(DEPDIR)
+	@: > crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo:  \
+	crypto_stream/salsa2012/$(am__dirstamp) \
+	crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
 crypto_stream/salsa208/ref/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/salsa208/ref
 	@: > crypto_stream/salsa208/ref/$(am__dirstamp)
 crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp):
 	@$(MKDIR_P) crypto_stream/salsa208/ref/$(DEPDIR)
 	@: > crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo:  \
-	crypto_stream/salsa208/ref/$(am__dirstamp) \
-	crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo:  \
+crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo:  \
 	crypto_stream/salsa208/ref/$(am__dirstamp) \
 	crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa208/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa208
+	@: > crypto_stream/salsa208/$(am__dirstamp)
+crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/salsa208/$(DEPDIR)
+	@: > crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa208/libsodium_la-stream_salsa208.lo:  \
+	crypto_stream/salsa208/$(am__dirstamp) \
+	crypto_stream/salsa208/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/xchacha20/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/xchacha20
+	@: > crypto_stream/xchacha20/$(am__dirstamp)
+crypto_stream/xchacha20/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_stream/xchacha20/$(DEPDIR)
+	@: > crypto_stream/xchacha20/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo:  \
+	crypto_stream/xchacha20/$(am__dirstamp) \
+	crypto_stream/xchacha20/$(DEPDIR)/$(am__dirstamp)
+randombytes/sysrandom/$(am__dirstamp):
+	@$(MKDIR_P) randombytes/sysrandom
+	@: > randombytes/sysrandom/$(am__dirstamp)
+randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) randombytes/sysrandom/$(DEPDIR)
+	@: > randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
+randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo:  \
+	randombytes/sysrandom/$(am__dirstamp) \
+	randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
 
 libsodium.la: $(libsodium_la_OBJECTS) $(libsodium_la_DEPENDENCIES) $(EXTRA_libsodium_la_DEPENDENCIES) 
-	$(AM_V_CCLD)$(libsodium_la_LINK)  $(libsodium_la_OBJECTS) $(libsodium_la_LIBADD) $(LIBS)
-crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp):
-	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/sse
-	@: > crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)
-	@: > crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp)
-crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo:  \
-	crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp) \
-	crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp)
+	$(AM_V_CCLD)$(libsodium_la_LINK) -rpath $(libdir) $(libsodium_la_OBJECTS) $(libsodium_la_LIBADD) $(LIBS)
 crypto_onetimeauth/poly1305/sse2/$(am__dirstamp):
 	@$(MKDIR_P) crypto_onetimeauth/poly1305/sse2
 	@: > crypto_onetimeauth/poly1305/sse2/$(am__dirstamp)
@@ -1958,27 +1901,36 @@ crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/$(am__dirstamp):
 crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo:  \
 	crypto_onetimeauth/poly1305/sse2/$(am__dirstamp) \
 	crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/sse
+	@: > crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp):
+	@$(MKDIR_P) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)
+	@: > crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo:  \
+	crypto_pwhash/scryptsalsa208sha256/sse/$(am__dirstamp) \
+	crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/salsa20/xmm6int/libsse2_la-salsa20_xmm6int-sse2.lo:  \
+	crypto_stream/salsa20/xmm6int/$(am__dirstamp) \
+	crypto_stream/salsa20/xmm6int/$(DEPDIR)/$(am__dirstamp)
 
 libsse2.la: $(libsse2_la_OBJECTS) $(libsse2_la_DEPENDENCIES) $(EXTRA_libsse2_la_DEPENDENCIES) 
 	$(AM_V_CCLD)$(libsse2_la_LINK)  $(libsse2_la_OBJECTS) $(libsse2_la_LIBADD) $(LIBS)
-crypto_generichash/blake2/ref/libsse41_la-blake2b-compress-sse41.lo:  \
-	crypto_generichash/blake2/ref/$(am__dirstamp) \
-	crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo:  \
+	crypto_generichash/blake2b/ref/$(am__dirstamp) \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
 
 libsse41.la: $(libsse41_la_OBJECTS) $(libsse41_la_DEPENDENCIES) $(EXTRA_libsse41_la_DEPENDENCIES) 
 	$(AM_V_CCLD)$(libsse41_la_LINK)  $(libsse41_la_OBJECTS) $(libsse41_la_LIBADD) $(LIBS)
-crypto_generichash/blake2/ref/libssse3_la-blake2b-compress-ssse3.lo:  \
-	crypto_generichash/blake2/ref/$(am__dirstamp) \
-	crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/chacha20/vec/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/chacha20/vec
-	@: > crypto_stream/chacha20/vec/$(am__dirstamp)
-crypto_stream/chacha20/vec/$(DEPDIR)/$(am__dirstamp):
-	@$(MKDIR_P) crypto_stream/chacha20/vec/$(DEPDIR)
-	@: > crypto_stream/chacha20/vec/$(DEPDIR)/$(am__dirstamp)
-crypto_stream/chacha20/vec/libssse3_la-stream_chacha20_vec.lo:  \
-	crypto_stream/chacha20/vec/$(am__dirstamp) \
-	crypto_stream/chacha20/vec/$(DEPDIR)/$(am__dirstamp)
+crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo:  \
+	crypto_generichash/blake2b/ref/$(am__dirstamp) \
+	crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
+crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo:  \
+	crypto_pwhash/argon2/$(am__dirstamp) \
+	crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo:  \
+	crypto_stream/chacha20/dolbeau/$(am__dirstamp) \
+	crypto_stream/chacha20/dolbeau/$(DEPDIR)/$(am__dirstamp)
 
 libssse3.la: $(libssse3_la_OBJECTS) $(libssse3_la_DEPENDENCIES) $(EXTRA_libssse3_la_DEPENDENCIES) 
 	$(AM_V_CCLD)$(libssse3_la_LINK)  $(libssse3_la_OBJECTS) $(libssse3_la_LIBADD) $(LIBS)
@@ -1989,48 +1941,40 @@ mostlyclean-compile:
 	-rm -f crypto_aead/aes256gcm/aesni/*.lo
 	-rm -f crypto_aead/chacha20poly1305/sodium/*.$(OBJEXT)
 	-rm -f crypto_aead/chacha20poly1305/sodium/*.lo
+	-rm -f crypto_aead/xchacha20poly1305/sodium/*.$(OBJEXT)
+	-rm -f crypto_aead/xchacha20poly1305/sodium/*.lo
 	-rm -f crypto_auth/*.$(OBJEXT)
 	-rm -f crypto_auth/*.lo
 	-rm -f crypto_auth/hmacsha256/*.$(OBJEXT)
 	-rm -f crypto_auth/hmacsha256/*.lo
-	-rm -f crypto_auth/hmacsha256/cp/*.$(OBJEXT)
-	-rm -f crypto_auth/hmacsha256/cp/*.lo
 	-rm -f crypto_auth/hmacsha512/*.$(OBJEXT)
 	-rm -f crypto_auth/hmacsha512/*.lo
-	-rm -f crypto_auth/hmacsha512/cp/*.$(OBJEXT)
-	-rm -f crypto_auth/hmacsha512/cp/*.lo
 	-rm -f crypto_auth/hmacsha512256/*.$(OBJEXT)
 	-rm -f crypto_auth/hmacsha512256/*.lo
-	-rm -f crypto_auth/hmacsha512256/cp/*.$(OBJEXT)
-	-rm -f crypto_auth/hmacsha512256/cp/*.lo
 	-rm -f crypto_box/*.$(OBJEXT)
 	-rm -f crypto_box/*.lo
+	-rm -f crypto_box/curve25519xchacha20poly1305/*.$(OBJEXT)
+	-rm -f crypto_box/curve25519xchacha20poly1305/*.lo
 	-rm -f crypto_box/curve25519xsalsa20poly1305/*.$(OBJEXT)
 	-rm -f crypto_box/curve25519xsalsa20poly1305/*.lo
-	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/*.$(OBJEXT)
-	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/*.lo
+	-rm -f crypto_core/ed25519/*.$(OBJEXT)
+	-rm -f crypto_core/ed25519/*.lo
+	-rm -f crypto_core/ed25519/ref10/*.$(OBJEXT)
+	-rm -f crypto_core/ed25519/ref10/*.lo
+	-rm -f crypto_core/hchacha20/*.$(OBJEXT)
+	-rm -f crypto_core/hchacha20/*.lo
 	-rm -f crypto_core/hsalsa20/*.$(OBJEXT)
 	-rm -f crypto_core/hsalsa20/*.lo
 	-rm -f crypto_core/hsalsa20/ref2/*.$(OBJEXT)
 	-rm -f crypto_core/hsalsa20/ref2/*.lo
-	-rm -f crypto_core/salsa20/*.$(OBJEXT)
-	-rm -f crypto_core/salsa20/*.lo
-	-rm -f crypto_core/salsa20/ref/*.$(OBJEXT)
-	-rm -f crypto_core/salsa20/ref/*.lo
-	-rm -f crypto_core/salsa2012/*.$(OBJEXT)
-	-rm -f crypto_core/salsa2012/*.lo
-	-rm -f crypto_core/salsa2012/ref/*.$(OBJEXT)
-	-rm -f crypto_core/salsa2012/ref/*.lo
-	-rm -f crypto_core/salsa208/*.$(OBJEXT)
-	-rm -f crypto_core/salsa208/*.lo
-	-rm -f crypto_core/salsa208/ref/*.$(OBJEXT)
-	-rm -f crypto_core/salsa208/ref/*.lo
+	-rm -f crypto_core/salsa/ref/*.$(OBJEXT)
+	-rm -f crypto_core/salsa/ref/*.lo
 	-rm -f crypto_generichash/*.$(OBJEXT)
 	-rm -f crypto_generichash/*.lo
-	-rm -f crypto_generichash/blake2/*.$(OBJEXT)
-	-rm -f crypto_generichash/blake2/*.lo
-	-rm -f crypto_generichash/blake2/ref/*.$(OBJEXT)
-	-rm -f crypto_generichash/blake2/ref/*.lo
+	-rm -f crypto_generichash/blake2b/*.$(OBJEXT)
+	-rm -f crypto_generichash/blake2b/*.lo
+	-rm -f crypto_generichash/blake2b/ref/*.$(OBJEXT)
+	-rm -f crypto_generichash/blake2b/ref/*.lo
 	-rm -f crypto_hash/*.$(OBJEXT)
 	-rm -f crypto_hash/*.lo
 	-rm -f crypto_hash/sha256/*.$(OBJEXT)
@@ -2041,6 +1985,12 @@ mostlyclean-compile:
 	-rm -f crypto_hash/sha512/*.lo
 	-rm -f crypto_hash/sha512/cp/*.$(OBJEXT)
 	-rm -f crypto_hash/sha512/cp/*.lo
+	-rm -f crypto_kdf/*.$(OBJEXT)
+	-rm -f crypto_kdf/*.lo
+	-rm -f crypto_kdf/blake2b/*.$(OBJEXT)
+	-rm -f crypto_kdf/blake2b/*.lo
+	-rm -f crypto_kx/*.$(OBJEXT)
+	-rm -f crypto_kx/*.lo
 	-rm -f crypto_onetimeauth/*.$(OBJEXT)
 	-rm -f crypto_onetimeauth/*.lo
 	-rm -f crypto_onetimeauth/poly1305/*.$(OBJEXT)
@@ -2049,6 +1999,10 @@ mostlyclean-compile:
 	-rm -f crypto_onetimeauth/poly1305/donna/*.lo
 	-rm -f crypto_onetimeauth/poly1305/sse2/*.$(OBJEXT)
 	-rm -f crypto_onetimeauth/poly1305/sse2/*.lo
+	-rm -f crypto_pwhash/*.$(OBJEXT)
+	-rm -f crypto_pwhash/*.lo
+	-rm -f crypto_pwhash/argon2/*.$(OBJEXT)
+	-rm -f crypto_pwhash/argon2/*.lo
 	-rm -f crypto_pwhash/scryptsalsa208sha256/*.$(OBJEXT)
 	-rm -f crypto_pwhash/scryptsalsa208sha256/*.lo
 	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/*.$(OBJEXT)
@@ -2059,18 +2013,22 @@ mostlyclean-compile:
 	-rm -f crypto_scalarmult/*.lo
 	-rm -f crypto_scalarmult/curve25519/*.$(OBJEXT)
 	-rm -f crypto_scalarmult/curve25519/*.lo
-	-rm -f crypto_scalarmult/curve25519/donna_c64/*.$(OBJEXT)
-	-rm -f crypto_scalarmult/curve25519/donna_c64/*.lo
 	-rm -f crypto_scalarmult/curve25519/ref10/*.$(OBJEXT)
 	-rm -f crypto_scalarmult/curve25519/ref10/*.lo
 	-rm -f crypto_scalarmult/curve25519/sandy2x/*.$(OBJEXT)
 	-rm -f crypto_scalarmult/curve25519/sandy2x/*.lo
+	-rm -f crypto_scalarmult/ed25519/ref10/*.$(OBJEXT)
+	-rm -f crypto_scalarmult/ed25519/ref10/*.lo
+	-rm -f crypto_scalarmult/ristretto255/ref10/*.$(OBJEXT)
+	-rm -f crypto_scalarmult/ristretto255/ref10/*.lo
 	-rm -f crypto_secretbox/*.$(OBJEXT)
 	-rm -f crypto_secretbox/*.lo
+	-rm -f crypto_secretbox/xchacha20poly1305/*.$(OBJEXT)
+	-rm -f crypto_secretbox/xchacha20poly1305/*.lo
 	-rm -f crypto_secretbox/xsalsa20poly1305/*.$(OBJEXT)
 	-rm -f crypto_secretbox/xsalsa20poly1305/*.lo
-	-rm -f crypto_secretbox/xsalsa20poly1305/ref/*.$(OBJEXT)
-	-rm -f crypto_secretbox/xsalsa20poly1305/ref/*.lo
+	-rm -f crypto_secretstream/xchacha20poly1305/*.$(OBJEXT)
+	-rm -f crypto_secretstream/xchacha20poly1305/*.lo
 	-rm -f crypto_shorthash/*.$(OBJEXT)
 	-rm -f crypto_shorthash/*.lo
 	-rm -f crypto_shorthash/siphash24/*.$(OBJEXT)
@@ -2085,22 +2043,20 @@ mostlyclean-compile:
 	-rm -f crypto_sign/ed25519/ref10/*.lo
 	-rm -f crypto_stream/*.$(OBJEXT)
 	-rm -f crypto_stream/*.lo
-	-rm -f crypto_stream/aes128ctr/*.$(OBJEXT)
-	-rm -f crypto_stream/aes128ctr/*.lo
-	-rm -f crypto_stream/aes128ctr/portable/*.$(OBJEXT)
-	-rm -f crypto_stream/aes128ctr/portable/*.lo
 	-rm -f crypto_stream/chacha20/*.$(OBJEXT)
 	-rm -f crypto_stream/chacha20/*.lo
+	-rm -f crypto_stream/chacha20/dolbeau/*.$(OBJEXT)
+	-rm -f crypto_stream/chacha20/dolbeau/*.lo
 	-rm -f crypto_stream/chacha20/ref/*.$(OBJEXT)
 	-rm -f crypto_stream/chacha20/ref/*.lo
-	-rm -f crypto_stream/chacha20/vec/*.$(OBJEXT)
-	-rm -f crypto_stream/chacha20/vec/*.lo
 	-rm -f crypto_stream/salsa20/*.$(OBJEXT)
 	-rm -f crypto_stream/salsa20/*.lo
-	-rm -f crypto_stream/salsa20/amd64_xmm6/*.$(OBJEXT)
-	-rm -f crypto_stream/salsa20/amd64_xmm6/*.lo
 	-rm -f crypto_stream/salsa20/ref/*.$(OBJEXT)
 	-rm -f crypto_stream/salsa20/ref/*.lo
+	-rm -f crypto_stream/salsa20/xmm6/*.$(OBJEXT)
+	-rm -f crypto_stream/salsa20/xmm6/*.lo
+	-rm -f crypto_stream/salsa20/xmm6int/*.$(OBJEXT)
+	-rm -f crypto_stream/salsa20/xmm6int/*.lo
 	-rm -f crypto_stream/salsa2012/*.$(OBJEXT)
 	-rm -f crypto_stream/salsa2012/*.lo
 	-rm -f crypto_stream/salsa2012/ref/*.$(OBJEXT)
@@ -2109,28 +2065,16 @@ mostlyclean-compile:
 	-rm -f crypto_stream/salsa208/*.lo
 	-rm -f crypto_stream/salsa208/ref/*.$(OBJEXT)
 	-rm -f crypto_stream/salsa208/ref/*.lo
+	-rm -f crypto_stream/xchacha20/*.$(OBJEXT)
+	-rm -f crypto_stream/xchacha20/*.lo
 	-rm -f crypto_stream/xsalsa20/*.$(OBJEXT)
 	-rm -f crypto_stream/xsalsa20/*.lo
-	-rm -f crypto_stream/xsalsa20/ref/*.$(OBJEXT)
-	-rm -f crypto_stream/xsalsa20/ref/*.lo
-	-rm -f crypto_verify/16/*.$(OBJEXT)
-	-rm -f crypto_verify/16/*.lo
-	-rm -f crypto_verify/16/ref/*.$(OBJEXT)
-	-rm -f crypto_verify/16/ref/*.lo
-	-rm -f crypto_verify/32/*.$(OBJEXT)
-	-rm -f crypto_verify/32/*.lo
-	-rm -f crypto_verify/32/ref/*.$(OBJEXT)
-	-rm -f crypto_verify/32/ref/*.lo
-	-rm -f crypto_verify/64/*.$(OBJEXT)
-	-rm -f crypto_verify/64/*.lo
-	-rm -f crypto_verify/64/ref/*.$(OBJEXT)
-	-rm -f crypto_verify/64/ref/*.lo
+	-rm -f crypto_verify/sodium/*.$(OBJEXT)
+	-rm -f crypto_verify/sodium/*.lo
 	-rm -f randombytes/*.$(OBJEXT)
 	-rm -f randombytes/*.lo
-	-rm -f randombytes/nativeclient/*.$(OBJEXT)
-	-rm -f randombytes/nativeclient/*.lo
-	-rm -f randombytes/salsa20/*.$(OBJEXT)
-	-rm -f randombytes/salsa20/*.lo
+	-rm -f randombytes/internal/*.$(OBJEXT)
+	-rm -f randombytes/internal/*.lo
 	-rm -f randombytes/sysrandom/*.$(OBJEXT)
 	-rm -f randombytes/sysrandom/*.lo
 	-rm -f sodium/*.$(OBJEXT)
@@ -2139,164 +2083,120 @@ mostlyclean-compile:
 distclean-compile:
 	-rm -f *.tab.c
 
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_aead/aes256gcm/aesni/$(DEPDIR)/libaesni_la-aead_aes256gcm_aesni.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-poly1305_donna.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsse2_la-pwhash_scryptsalsa208sha256_sse.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-curve25519_donna_c64.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-curve25519_sandy2x.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe51_invert.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe_frombytes_sandy2x.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/chacha20/vec/$(DEPDIR)/libssse3_la-stream_chacha20_vec.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@randombytes/$(DEPDIR)/libsodium_la-randombytes.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@randombytes/nativeclient/$(DEPDIR)/libsodium_la-randombytes_nativeclient.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-core.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-runtime.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-utils.Plo@am__quote@
-@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-version.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_aead/aes256gcm/aesni/$(DEPDIR)/libaesni_la-aead_aes256gcm_aesni.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_xchacha20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xchacha20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_seal_curve25519xchacha20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ed25519.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ristretto255.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/ed25519/ref10/$(DEPDIR)/libsodium_la-ed25519_ref10.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/hchacha20/$(DEPDIR)/libsodium_la-core_hchacha20.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20_ref2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_core/salsa/ref/$(DEPDIR)/libsodium_la-core_salsa_ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2b/$(DEPDIR)/libsodium_la-generichash_blake2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2b/ref/$(DEPDIR)/libavx2_la-blake2b-compress-avx2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2b/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_generichash/blake2b/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256_cp.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512_cp.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_kdf/$(DEPDIR)/libsodium_la-crypto_kdf.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_kdf/blake2b/$(DEPDIR)/libsodium_la-kdf_blake2b.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_kx/$(DEPDIR)/libsodium_la-crypto_kx.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-poly1305_donna.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/$(DEPDIR)/libsodium_la-crypto_pwhash.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libavx2_la-argon2-fill-block-avx2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libavx512f_la-argon2-fill-block-avx512f.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-core.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-encoding.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-fill-block-ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-blake2b-long.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2i.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2id.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/argon2/$(DEPDIR)/libssse3_la-argon2-fill-block-ssse3.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsse2_la-pwhash_scryptsalsa208sha256_sse.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-x25519_ref10.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-curve25519_sandy2x.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe51_invert.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe_frombytes_sandy2x.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/ed25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_ed25519_ref10.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/libsodium_la-scalarmult_ristretto255_ref10.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretbox_xchacha20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_secretstream/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretstream_xchacha20poly1305.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphashx24.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24_ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphashx24_ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/chacha20/dolbeau/$(DEPDIR)/libavx2_la-chacha20_dolbeau-avx2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/chacha20/dolbeau/$(DEPDIR)/libssse3_la-chacha20_dolbeau-ssse3.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-chacha20_ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-salsa20_ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6-asm.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/xmm6int/$(DEPDIR)/libavx2_la-salsa20_xmm6int-avx2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa20/xmm6int/$(DEPDIR)/libsse2_la-salsa20_xmm6int-sse2.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012_ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208_ref.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/xchacha20/$(DEPDIR)/libsodium_la-stream_xchacha20.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@crypto_verify/sodium/$(DEPDIR)/libsodium_la-verify.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@randombytes/$(DEPDIR)/libsodium_la-randombytes.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@randombytes/internal/$(DEPDIR)/librdrand_la-randombytes_internal_random.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-codecs.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-core.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-runtime.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-utils.Plo@am__quote@ # am--include-marker
+@AMDEP_TRUE@@am__include@ @am__quote@sodium/$(DEPDIR)/libsodium_la-version.Plo@am__quote@ # am--include-marker
+
+$(am__depfiles_remade):
+	@$(MKDIR_P) $(@D)
+	@echo '# dummy' >$@-t && $(am__mv) $@-t $@
+
+am--depfiles: $(am__depfiles_remade)
 
 .S.o:
 @am__fastdepCCAS_TRUE@	$(AM_V_CPPAS)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@@ -2322,19 +2222,19 @@ distclean-compile:
 @AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCCAS_FALSE@	$(AM_V_CPPAS@am__nodep@)$(LTCPPASCOMPILE) -c -o $@ $<
 
+crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo: crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S
+@am__fastdepCCAS_TRUE@	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo -MD -MP -MF crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6-asm.Tpo -c -o crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo `test -f 'crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S
+@am__fastdepCCAS_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6-asm.Tpo crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6-asm.Plo
+@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	$(AM_V_CPPAS)source='crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S' object='crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCCAS_FALSE@	$(AM_V_CPPAS@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6-asm.lo `test -f 'crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6/salsa20_xmm6-asm.S
+
 crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo: crypto_scalarmult/curve25519/sandy2x/sandy2x.S
-@am__fastdepCCAS_TRUE@	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo -MD -MP -MF crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Tpo -c -o crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo `test -f 'crypto_scalarmult/curve25519/sandy2x/sandy2x.S' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/sandy2x/sandy2x.S
+@am__fastdepCCAS_TRUE@	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo -MD -MP -MF crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Tpo -c -o crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo `test -f 'crypto_scalarmult/curve25519/sandy2x/sandy2x.S' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/sandy2x/sandy2x.S
 @am__fastdepCCAS_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Tpo crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Plo
 @AMDEP_TRUE@@am__fastdepCCAS_FALSE@	$(AM_V_CPPAS)source='crypto_scalarmult/curve25519/sandy2x/sandy2x.S' object='crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCCAS_FALSE@	$(AM_V_CPPAS@am__nodep@)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo `test -f 'crypto_scalarmult/curve25519/sandy2x/sandy2x.S' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/sandy2x/sandy2x.S
-
-crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo: crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
-@am__fastdepCCAS_TRUE@	$(AM_V_CPPAS)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -MT crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo -MD -MP -MF crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Tpo -c -o crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo `test -f 'crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S' || echo '$(srcdir)/'`crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
-@am__fastdepCCAS_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Tpo crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/libsodium_la-stream_salsa20_amd64_xmm6.Plo
-@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	$(AM_V_CPPAS)source='crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S' object='crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCCAS_FALSE@	DEPDIR=$(DEPDIR) $(CCASDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCCAS_FALSE@	$(AM_V_CPPAS@am__nodep@)$(LIBTOOL) $(AM_V_lt) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o crypto_stream/salsa20/amd64_xmm6/libsodium_la-stream_salsa20_amd64_xmm6.lo `test -f 'crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S' || echo '$(srcdir)/'`crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
+@am__fastdepCCAS_FALSE@	$(AM_V_CPPAS@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CCAS) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CCASFLAGS) $(CCASFLAGS) -c -o crypto_scalarmult/curve25519/sandy2x/libsodium_la-sandy2x.lo `test -f 'crypto_scalarmult/curve25519/sandy2x/sandy2x.S' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/sandy2x/sandy2x.S
 
 .c.o:
 @am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@@ -2367,82 +2267,89 @@ crypto_aead/aes256gcm/aesni/libaesni_la-aead_aes256gcm_aesni.lo: crypto_aead/aes
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libaesni_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_aead/aes256gcm/aesni/libaesni_la-aead_aes256gcm_aesni.lo `test -f 'crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c' || echo '$(srcdir)/'`crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c
 
-crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo: crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo -MD -MP -MF crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Tpo -c -o crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo `test -f 'crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Tpo crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' object='crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo: crypto_generichash/blake2b/ref/blake2b-compress-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo -MD -MP -MF crypto_generichash/blake2b/ref/$(DEPDIR)/libavx2_la-blake2b-compress-avx2.Tpo -c -o crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-avx2.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2b/ref/$(DEPDIR)/libavx2_la-blake2b-compress-avx2.Tpo crypto_generichash/blake2b/ref/$(DEPDIR)/libavx2_la-blake2b-compress-avx2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2b/ref/blake2b-compress-avx2.c' object='crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo `test -f 'crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2b/ref/libavx2_la-blake2b-compress-avx2.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-avx2.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-avx2.c
 
-crypto_auth/libsodium_la-crypto_auth.lo: crypto_auth/crypto_auth.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/libsodium_la-crypto_auth.lo -MD -MP -MF crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Tpo -c -o crypto_auth/libsodium_la-crypto_auth.lo `test -f 'crypto_auth/crypto_auth.c' || echo '$(srcdir)/'`crypto_auth/crypto_auth.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Tpo crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/crypto_auth.c' object='crypto_auth/libsodium_la-crypto_auth.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo: crypto_pwhash/argon2/argon2-fill-block-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libavx2_la-argon2-fill-block-avx2.Tpo -c -o crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-avx2.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libavx2_la-argon2-fill-block-avx2.Tpo crypto_pwhash/argon2/$(DEPDIR)/libavx2_la-argon2-fill-block-avx2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/argon2-fill-block-avx2.c' object='crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/libsodium_la-crypto_auth.lo `test -f 'crypto_auth/crypto_auth.c' || echo '$(srcdir)/'`crypto_auth/crypto_auth.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libavx2_la-argon2-fill-block-avx2.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-avx2.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-avx2.c
 
-crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo: crypto_auth/hmacsha256/auth_hmacsha256_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo -MD -MP -MF crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Tpo -c -o crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo `test -f 'crypto_auth/hmacsha256/auth_hmacsha256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/auth_hmacsha256_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Tpo crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha256/auth_hmacsha256_api.c' object='crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo: crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo -MD -MP -MF crypto_stream/chacha20/dolbeau/$(DEPDIR)/libavx2_la-chacha20_dolbeau-avx2.Tpo -c -o crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo `test -f 'crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c' || echo '$(srcdir)/'`crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/chacha20/dolbeau/$(DEPDIR)/libavx2_la-chacha20_dolbeau-avx2.Tpo crypto_stream/chacha20/dolbeau/$(DEPDIR)/libavx2_la-chacha20_dolbeau-avx2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c' object='crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256_api.lo `test -f 'crypto_auth/hmacsha256/auth_hmacsha256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/auth_hmacsha256_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/dolbeau/libavx2_la-chacha20_dolbeau-avx2.lo `test -f 'crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c' || echo '$(srcdir)/'`crypto_stream/chacha20/dolbeau/chacha20_dolbeau-avx2.c
 
-crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo: crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo -MD -MP -MF crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Tpo -c -o crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/hmac_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Tpo crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha256.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha256/cp/hmac_hmacsha256.c' object='crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo: crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo -MD -MP -MF crypto_stream/salsa20/xmm6int/$(DEPDIR)/libavx2_la-salsa20_xmm6int-avx2.Tpo -c -o crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo `test -f 'crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/xmm6int/$(DEPDIR)/libavx2_la-salsa20_xmm6int-avx2.Tpo crypto_stream/salsa20/xmm6int/$(DEPDIR)/libavx2_la-salsa20_xmm6int-avx2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c' object='crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha256/cp/libsodium_la-hmac_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/hmac_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/xmm6int/libavx2_la-salsa20_xmm6int-avx2.lo `test -f 'crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6int/salsa20_xmm6int-avx2.c
 
-crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo: crypto_auth/hmacsha256/cp/verify_hmacsha256.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo -MD -MP -MF crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Tpo -c -o crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/verify_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/verify_hmacsha256.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Tpo crypto_auth/hmacsha256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha256.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha256/cp/verify_hmacsha256.c' object='crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo: crypto_pwhash/argon2/argon2-fill-block-avx512f.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx512f_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libavx512f_la-argon2-fill-block-avx512f.Tpo -c -o crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-avx512f.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-avx512f.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libavx512f_la-argon2-fill-block-avx512f.Tpo crypto_pwhash/argon2/$(DEPDIR)/libavx512f_la-argon2-fill-block-avx512f.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/argon2-fill-block-avx512f.c' object='crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha256/cp/libsodium_la-verify_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/cp/verify_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/cp/verify_hmacsha256.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libavx512f_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libavx512f_la-argon2-fill-block-avx512f.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-avx512f.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-avx512f.c
 
-crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo: crypto_auth/hmacsha512/auth_hmacsha512_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo -MD -MP -MF crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Tpo -c -o crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo `test -f 'crypto_auth/hmacsha512/auth_hmacsha512_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/auth_hmacsha512_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Tpo crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512/auth_hmacsha512_api.c' object='crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo' libtool=yes @AMDEPBACKSLASH@
+randombytes/internal/librdrand_la-randombytes_internal_random.lo: randombytes/internal/randombytes_internal_random.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdrand_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/internal/librdrand_la-randombytes_internal_random.lo -MD -MP -MF randombytes/internal/$(DEPDIR)/librdrand_la-randombytes_internal_random.Tpo -c -o randombytes/internal/librdrand_la-randombytes_internal_random.lo `test -f 'randombytes/internal/randombytes_internal_random.c' || echo '$(srcdir)/'`randombytes/internal/randombytes_internal_random.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) randombytes/internal/$(DEPDIR)/librdrand_la-randombytes_internal_random.Tpo randombytes/internal/$(DEPDIR)/librdrand_la-randombytes_internal_random.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='randombytes/internal/randombytes_internal_random.c' object='randombytes/internal/librdrand_la-randombytes_internal_random.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512_api.lo `test -f 'crypto_auth/hmacsha512/auth_hmacsha512_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/auth_hmacsha512_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(librdrand_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/internal/librdrand_la-randombytes_internal_random.lo `test -f 'randombytes/internal/randombytes_internal_random.c' || echo '$(srcdir)/'`randombytes/internal/randombytes_internal_random.c
 
-crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo: crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo -MD -MP -MF crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Tpo -c -o crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/hmac_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Tpo crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512/cp/hmac_hmacsha512.c' object='crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo: crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo -MD -MP -MF crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Tpo -c -o crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo `test -f 'crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Tpo crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' object='crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512/cp/libsodium_la-hmac_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/hmac_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_aead/chacha20poly1305/sodium/libsodium_la-aead_chacha20poly1305.lo `test -f 'crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
 
-crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo: crypto_auth/hmacsha512/cp/verify_hmacsha512.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo -MD -MP -MF crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Tpo -c -o crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/verify_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/verify_hmacsha512.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Tpo crypto_auth/hmacsha512/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512/cp/verify_hmacsha512.c' object='crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo: crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo -MD -MP -MF crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_xchacha20poly1305.Tpo -c -o crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo `test -f 'crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_xchacha20poly1305.Tpo crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_xchacha20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c' object='crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512/cp/libsodium_la-verify_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/cp/verify_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/cp/verify_hmacsha512.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_aead/xchacha20poly1305/sodium/libsodium_la-aead_xchacha20poly1305.lo `test -f 'crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_aead/xchacha20poly1305/sodium/aead_xchacha20poly1305.c
 
-crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo: crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo -MD -MP -MF crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Tpo -c -o crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo `test -f 'crypto_auth/hmacsha512256/auth_hmacsha512256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Tpo crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512256/auth_hmacsha512256_api.c' object='crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_auth/libsodium_la-crypto_auth.lo: crypto_auth/crypto_auth.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/libsodium_la-crypto_auth.lo -MD -MP -MF crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Tpo -c -o crypto_auth/libsodium_la-crypto_auth.lo `test -f 'crypto_auth/crypto_auth.c' || echo '$(srcdir)/'`crypto_auth/crypto_auth.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Tpo crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/crypto_auth.c' object='crypto_auth/libsodium_la-crypto_auth.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/libsodium_la-crypto_auth.lo `test -f 'crypto_auth/crypto_auth.c' || echo '$(srcdir)/'`crypto_auth/crypto_auth.c
+
+crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo: crypto_auth/hmacsha256/auth_hmacsha256.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo -MD -MP -MF crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256.Tpo -c -o crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/auth_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/auth_hmacsha256.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256.Tpo crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha256/auth_hmacsha256.c' object='crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256_api.lo `test -f 'crypto_auth/hmacsha512256/auth_hmacsha512256_api.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha256/libsodium_la-auth_hmacsha256.lo `test -f 'crypto_auth/hmacsha256/auth_hmacsha256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha256/auth_hmacsha256.c
 
-crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo: crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo -MD -MP -MF crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Tpo -c -o crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Tpo crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-hmac_hmacsha512256.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c' object='crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo: crypto_auth/hmacsha512/auth_hmacsha512.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo -MD -MP -MF crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512.Tpo -c -o crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/auth_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/auth_hmacsha512.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512.Tpo crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512/auth_hmacsha512.c' object='crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512256/cp/libsodium_la-hmac_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512/libsodium_la-auth_hmacsha512.lo `test -f 'crypto_auth/hmacsha512/auth_hmacsha512.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512/auth_hmacsha512.c
 
-crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo: crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo -MD -MP -MF crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Tpo -c -o crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Tpo crypto_auth/hmacsha512256/cp/$(DEPDIR)/libsodium_la-verify_hmacsha512256.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c' object='crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo: crypto_auth/hmacsha512256/auth_hmacsha512256.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo -MD -MP -MF crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256.Tpo -c -o crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/auth_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/auth_hmacsha512256.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256.Tpo crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_auth/hmacsha512256/auth_hmacsha512256.c' object='crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512256/cp/libsodium_la-verify_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_auth/hmacsha512256/libsodium_la-auth_hmacsha512256.lo `test -f 'crypto_auth/hmacsha512256/auth_hmacsha512256.c' || echo '$(srcdir)/'`crypto_auth/hmacsha512256/auth_hmacsha512256.c
 
 crypto_box/libsodium_la-crypto_box.lo: crypto_box/crypto_box.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/libsodium_la-crypto_box.lo -MD -MP -MF crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Tpo -c -o crypto_box/libsodium_la-crypto_box.lo `test -f 'crypto_box/crypto_box.c' || echo '$(srcdir)/'`crypto_box/crypto_box.c
@@ -2465,68 +2372,47 @@ crypto_box/libsodium_la-crypto_box_seal.lo: crypto_box/crypto_box_seal.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/libsodium_la-crypto_box_seal.lo `test -f 'crypto_box/crypto_box_seal.c' || echo '$(srcdir)/'`crypto_box/crypto_box_seal.c
 
-crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo: crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Tpo crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c' object='crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305_api.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
-
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-after_curve25519xsalsa20poly1305.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-after_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/libsodium_la-box_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305.c
 
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-before_curve25519xsalsa20poly1305.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo: crypto_core/ed25519/ref10/ed25519_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo -MD -MP -MF crypto_core/ed25519/ref10/$(DEPDIR)/libsodium_la-ed25519_ref10.Tpo -c -o crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo `test -f 'crypto_core/ed25519/ref10/ed25519_ref10.c' || echo '$(srcdir)/'`crypto_core/ed25519/ref10/ed25519_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/ed25519/ref10/$(DEPDIR)/libsodium_la-ed25519_ref10.Tpo crypto_core/ed25519/ref10/$(DEPDIR)/libsodium_la-ed25519_ref10.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/ed25519/ref10/ed25519_ref10.c' object='crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-before_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/ed25519/ref10/libsodium_la-ed25519_ref10.lo `test -f 'crypto_core/ed25519/ref10/ed25519_ref10.c' || echo '$(srcdir)/'`crypto_core/ed25519/ref10/ed25519_ref10.c
 
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_core/hchacha20/libsodium_la-core_hchacha20.lo: crypto_core/hchacha20/core_hchacha20.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/hchacha20/libsodium_la-core_hchacha20.lo -MD -MP -MF crypto_core/hchacha20/$(DEPDIR)/libsodium_la-core_hchacha20.Tpo -c -o crypto_core/hchacha20/libsodium_la-core_hchacha20.lo `test -f 'crypto_core/hchacha20/core_hchacha20.c' || echo '$(srcdir)/'`crypto_core/hchacha20/core_hchacha20.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/hchacha20/$(DEPDIR)/libsodium_la-core_hchacha20.Tpo crypto_core/hchacha20/$(DEPDIR)/libsodium_la-core_hchacha20.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/hchacha20/core_hchacha20.c' object='crypto_core/hchacha20/libsodium_la-core_hchacha20.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-box_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/hchacha20/libsodium_la-core_hchacha20.lo `test -f 'crypto_core/hchacha20/core_hchacha20.c' || echo '$(srcdir)/'`crypto_core/hchacha20/core_hchacha20.c
 
-crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo: crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo -MD -MP -MF crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Tpo -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Tpo crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-keypair_curve25519xsalsa20poly1305.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c' object='crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo: crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo -MD -MP -MF crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20_ref2.Tpo -c -o crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo `test -f 'crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20_ref2.Tpo crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20_ref2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c' object='crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xsalsa20poly1305/ref/libsodium_la-keypair_curve25519xsalsa20poly1305.lo `test -f 'crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20_ref2.lo `test -f 'crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/ref2/core_hsalsa20_ref2.c
 
-crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo: crypto_core/hsalsa20/ref2/core_hsalsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo -MD -MP -MF crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Tpo -c -o crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo `test -f 'crypto_core/hsalsa20/ref2/core_hsalsa20.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/ref2/core_hsalsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Tpo crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/hsalsa20/ref2/core_hsalsa20.c' object='crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo: crypto_core/hsalsa20/core_hsalsa20.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo -MD -MP -MF crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20.Tpo -c -o crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo `test -f 'crypto_core/hsalsa20/core_hsalsa20.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/core_hsalsa20.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20.Tpo crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/hsalsa20/core_hsalsa20.c' object='crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/hsalsa20/ref2/libsodium_la-core_hsalsa20.lo `test -f 'crypto_core/hsalsa20/ref2/core_hsalsa20.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/ref2/core_hsalsa20.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/hsalsa20/libsodium_la-core_hsalsa20.lo `test -f 'crypto_core/hsalsa20/core_hsalsa20.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/core_hsalsa20.c
 
-crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo: crypto_core/hsalsa20/core_hsalsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo -MD -MP -MF crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Tpo -c -o crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo `test -f 'crypto_core/hsalsa20/core_hsalsa20_api.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/core_hsalsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Tpo crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/hsalsa20/core_hsalsa20_api.c' object='crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo: crypto_core/salsa/ref/core_salsa_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo -MD -MP -MF crypto_core/salsa/ref/$(DEPDIR)/libsodium_la-core_salsa_ref.Tpo -c -o crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo `test -f 'crypto_core/salsa/ref/core_salsa_ref.c' || echo '$(srcdir)/'`crypto_core/salsa/ref/core_salsa_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/salsa/ref/$(DEPDIR)/libsodium_la-core_salsa_ref.Tpo crypto_core/salsa/ref/$(DEPDIR)/libsodium_la-core_salsa_ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/salsa/ref/core_salsa_ref.c' object='crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/hsalsa20/libsodium_la-core_hsalsa20_api.lo `test -f 'crypto_core/hsalsa20/core_hsalsa20_api.c' || echo '$(srcdir)/'`crypto_core/hsalsa20/core_hsalsa20_api.c
-
-crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo: crypto_core/salsa20/ref/core_salsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo -MD -MP -MF crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Tpo -c -o crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo `test -f 'crypto_core/salsa20/ref/core_salsa20.c' || echo '$(srcdir)/'`crypto_core/salsa20/ref/core_salsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Tpo crypto_core/salsa20/ref/$(DEPDIR)/libsodium_la-core_salsa20.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/salsa20/ref/core_salsa20.c' object='crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa20/ref/libsodium_la-core_salsa20.lo `test -f 'crypto_core/salsa20/ref/core_salsa20.c' || echo '$(srcdir)/'`crypto_core/salsa20/ref/core_salsa20.c
-
-crypto_core/salsa20/libsodium_la-core_salsa20_api.lo: crypto_core/salsa20/core_salsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa20/libsodium_la-core_salsa20_api.lo -MD -MP -MF crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Tpo -c -o crypto_core/salsa20/libsodium_la-core_salsa20_api.lo `test -f 'crypto_core/salsa20/core_salsa20_api.c' || echo '$(srcdir)/'`crypto_core/salsa20/core_salsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Tpo crypto_core/salsa20/$(DEPDIR)/libsodium_la-core_salsa20_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/salsa20/core_salsa20_api.c' object='crypto_core/salsa20/libsodium_la-core_salsa20_api.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa20/libsodium_la-core_salsa20_api.lo `test -f 'crypto_core/salsa20/core_salsa20_api.c' || echo '$(srcdir)/'`crypto_core/salsa20/core_salsa20_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa/ref/libsodium_la-core_salsa_ref.lo `test -f 'crypto_core/salsa/ref/core_salsa_ref.c' || echo '$(srcdir)/'`crypto_core/salsa/ref/core_salsa_ref.c
 
 crypto_generichash/libsodium_la-crypto_generichash.lo: crypto_generichash/crypto_generichash.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/libsodium_la-crypto_generichash.lo -MD -MP -MF crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Tpo -c -o crypto_generichash/libsodium_la-crypto_generichash.lo `test -f 'crypto_generichash/crypto_generichash.c' || echo '$(srcdir)/'`crypto_generichash/crypto_generichash.c
@@ -2535,33 +2421,33 @@ crypto_generichash/libsodium_la-crypto_generichash.lo: crypto_generichash/crypto
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/libsodium_la-crypto_generichash.lo `test -f 'crypto_generichash/crypto_generichash.c' || echo '$(srcdir)/'`crypto_generichash/crypto_generichash.c
 
-crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo: crypto_generichash/blake2/generichash_blake2_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo -MD -MP -MF crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Tpo -c -o crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo `test -f 'crypto_generichash/blake2/generichash_blake2_api.c' || echo '$(srcdir)/'`crypto_generichash/blake2/generichash_blake2_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Tpo crypto_generichash/blake2/$(DEPDIR)/libsodium_la-generichash_blake2_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2/generichash_blake2_api.c' object='crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo: crypto_generichash/blake2b/generichash_blake2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo -MD -MP -MF crypto_generichash/blake2b/$(DEPDIR)/libsodium_la-generichash_blake2.Tpo -c -o crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo `test -f 'crypto_generichash/blake2b/generichash_blake2.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/generichash_blake2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2b/$(DEPDIR)/libsodium_la-generichash_blake2.Tpo crypto_generichash/blake2b/$(DEPDIR)/libsodium_la-generichash_blake2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2b/generichash_blake2.c' object='crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/libsodium_la-generichash_blake2_api.lo `test -f 'crypto_generichash/blake2/generichash_blake2_api.c' || echo '$(srcdir)/'`crypto_generichash/blake2/generichash_blake2_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2b/libsodium_la-generichash_blake2.lo `test -f 'crypto_generichash/blake2b/generichash_blake2.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/generichash_blake2.c
 
-crypto_generichash/blake2/ref/libsodium_la-blake2b-compress-ref.lo: crypto_generichash/blake2/ref/blake2b-compress-ref.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/ref/libsodium_la-blake2b-compress-ref.lo -MD -MP -MF crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Tpo -c -o crypto_generichash/blake2/ref/libsodium_la-blake2b-compress-ref.lo `test -f 'crypto_generichash/blake2/ref/blake2b-compress-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-compress-ref.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Tpo crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2/ref/blake2b-compress-ref.c' object='crypto_generichash/blake2/ref/libsodium_la-blake2b-compress-ref.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo: crypto_generichash/blake2b/ref/blake2b-compress-ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo -MD -MP -MF crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Tpo -c -o crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Tpo crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2b/ref/blake2b-compress-ref.c' object='crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/ref/libsodium_la-blake2b-compress-ref.lo `test -f 'crypto_generichash/blake2/ref/blake2b-compress-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-compress-ref.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2b/ref/libsodium_la-blake2b-compress-ref.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-ref.c
 
-crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo: crypto_generichash/blake2/ref/blake2b-ref.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo -MD -MP -MF crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Tpo -c -o crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo `test -f 'crypto_generichash/blake2/ref/blake2b-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-ref.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Tpo crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2/ref/blake2b-ref.c' object='crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo: crypto_generichash/blake2b/ref/blake2b-ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo -MD -MP -MF crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Tpo -c -o crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Tpo crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2b/ref/blake2b-ref.c' object='crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/ref/libsodium_la-blake2b-ref.lo `test -f 'crypto_generichash/blake2/ref/blake2b-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-ref.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2b/ref/libsodium_la-blake2b-ref.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-ref.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-ref.c
 
-crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo: crypto_generichash/blake2/ref/generichash_blake2b.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo -MD -MP -MF crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Tpo -c -o crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo `test -f 'crypto_generichash/blake2/ref/generichash_blake2b.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/generichash_blake2b.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Tpo crypto_generichash/blake2/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2/ref/generichash_blake2b.c' object='crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo: crypto_generichash/blake2b/ref/generichash_blake2b.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo -MD -MP -MF crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Tpo -c -o crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo `test -f 'crypto_generichash/blake2b/ref/generichash_blake2b.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/generichash_blake2b.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Tpo crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2b/ref/generichash_blake2b.c' object='crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/ref/libsodium_la-generichash_blake2b.lo `test -f 'crypto_generichash/blake2/ref/generichash_blake2b.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/generichash_blake2b.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2b/ref/libsodium_la-generichash_blake2b.lo `test -f 'crypto_generichash/blake2b/ref/generichash_blake2b.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/generichash_blake2b.c
 
 crypto_hash/libsodium_la-crypto_hash.lo: crypto_hash/crypto_hash.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/libsodium_la-crypto_hash.lo -MD -MP -MF crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Tpo -c -o crypto_hash/libsodium_la-crypto_hash.lo `test -f 'crypto_hash/crypto_hash.c' || echo '$(srcdir)/'`crypto_hash/crypto_hash.c
@@ -2570,33 +2456,54 @@ crypto_hash/libsodium_la-crypto_hash.lo: crypto_hash/crypto_hash.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/libsodium_la-crypto_hash.lo `test -f 'crypto_hash/crypto_hash.c' || echo '$(srcdir)/'`crypto_hash/crypto_hash.c
 
-crypto_hash/sha256/libsodium_la-hash_sha256_api.lo: crypto_hash/sha256/hash_sha256_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha256/libsodium_la-hash_sha256_api.lo -MD -MP -MF crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Tpo -c -o crypto_hash/sha256/libsodium_la-hash_sha256_api.lo `test -f 'crypto_hash/sha256/hash_sha256_api.c' || echo '$(srcdir)/'`crypto_hash/sha256/hash_sha256_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Tpo crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha256/hash_sha256_api.c' object='crypto_hash/sha256/libsodium_la-hash_sha256_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_hash/sha256/libsodium_la-hash_sha256.lo: crypto_hash/sha256/hash_sha256.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha256/libsodium_la-hash_sha256.lo -MD -MP -MF crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256.Tpo -c -o crypto_hash/sha256/libsodium_la-hash_sha256.lo `test -f 'crypto_hash/sha256/hash_sha256.c' || echo '$(srcdir)/'`crypto_hash/sha256/hash_sha256.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256.Tpo crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha256/hash_sha256.c' object='crypto_hash/sha256/libsodium_la-hash_sha256.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha256/libsodium_la-hash_sha256.lo `test -f 'crypto_hash/sha256/hash_sha256.c' || echo '$(srcdir)/'`crypto_hash/sha256/hash_sha256.c
+
+crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo: crypto_hash/sha256/cp/hash_sha256_cp.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo -MD -MP -MF crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256_cp.Tpo -c -o crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo `test -f 'crypto_hash/sha256/cp/hash_sha256_cp.c' || echo '$(srcdir)/'`crypto_hash/sha256/cp/hash_sha256_cp.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256_cp.Tpo crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256_cp.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha256/cp/hash_sha256_cp.c' object='crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha256/cp/libsodium_la-hash_sha256_cp.lo `test -f 'crypto_hash/sha256/cp/hash_sha256_cp.c' || echo '$(srcdir)/'`crypto_hash/sha256/cp/hash_sha256_cp.c
+
+crypto_hash/sha512/libsodium_la-hash_sha512.lo: crypto_hash/sha512/hash_sha512.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha512/libsodium_la-hash_sha512.lo -MD -MP -MF crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512.Tpo -c -o crypto_hash/sha512/libsodium_la-hash_sha512.lo `test -f 'crypto_hash/sha512/hash_sha512.c' || echo '$(srcdir)/'`crypto_hash/sha512/hash_sha512.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512.Tpo crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha512/hash_sha512.c' object='crypto_hash/sha512/libsodium_la-hash_sha512.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha256/libsodium_la-hash_sha256_api.lo `test -f 'crypto_hash/sha256/hash_sha256_api.c' || echo '$(srcdir)/'`crypto_hash/sha256/hash_sha256_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha512/libsodium_la-hash_sha512.lo `test -f 'crypto_hash/sha512/hash_sha512.c' || echo '$(srcdir)/'`crypto_hash/sha512/hash_sha512.c
 
-crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo: crypto_hash/sha256/cp/hash_sha256.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo -MD -MP -MF crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Tpo -c -o crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo `test -f 'crypto_hash/sha256/cp/hash_sha256.c' || echo '$(srcdir)/'`crypto_hash/sha256/cp/hash_sha256.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Tpo crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha256/cp/hash_sha256.c' object='crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo: crypto_hash/sha512/cp/hash_sha512_cp.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo -MD -MP -MF crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512_cp.Tpo -c -o crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo `test -f 'crypto_hash/sha512/cp/hash_sha512_cp.c' || echo '$(srcdir)/'`crypto_hash/sha512/cp/hash_sha512_cp.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512_cp.Tpo crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512_cp.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha512/cp/hash_sha512_cp.c' object='crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha256/cp/libsodium_la-hash_sha256.lo `test -f 'crypto_hash/sha256/cp/hash_sha256.c' || echo '$(srcdir)/'`crypto_hash/sha256/cp/hash_sha256.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha512/cp/libsodium_la-hash_sha512_cp.lo `test -f 'crypto_hash/sha512/cp/hash_sha512_cp.c' || echo '$(srcdir)/'`crypto_hash/sha512/cp/hash_sha512_cp.c
 
-crypto_hash/sha512/libsodium_la-hash_sha512_api.lo: crypto_hash/sha512/hash_sha512_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha512/libsodium_la-hash_sha512_api.lo -MD -MP -MF crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Tpo -c -o crypto_hash/sha512/libsodium_la-hash_sha512_api.lo `test -f 'crypto_hash/sha512/hash_sha512_api.c' || echo '$(srcdir)/'`crypto_hash/sha512/hash_sha512_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Tpo crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha512/hash_sha512_api.c' object='crypto_hash/sha512/libsodium_la-hash_sha512_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo: crypto_kdf/blake2b/kdf_blake2b.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo -MD -MP -MF crypto_kdf/blake2b/$(DEPDIR)/libsodium_la-kdf_blake2b.Tpo -c -o crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo `test -f 'crypto_kdf/blake2b/kdf_blake2b.c' || echo '$(srcdir)/'`crypto_kdf/blake2b/kdf_blake2b.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_kdf/blake2b/$(DEPDIR)/libsodium_la-kdf_blake2b.Tpo crypto_kdf/blake2b/$(DEPDIR)/libsodium_la-kdf_blake2b.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_kdf/blake2b/kdf_blake2b.c' object='crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha512/libsodium_la-hash_sha512_api.lo `test -f 'crypto_hash/sha512/hash_sha512_api.c' || echo '$(srcdir)/'`crypto_hash/sha512/hash_sha512_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_kdf/blake2b/libsodium_la-kdf_blake2b.lo `test -f 'crypto_kdf/blake2b/kdf_blake2b.c' || echo '$(srcdir)/'`crypto_kdf/blake2b/kdf_blake2b.c
 
-crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo: crypto_hash/sha512/cp/hash_sha512.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo -MD -MP -MF crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Tpo -c -o crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo `test -f 'crypto_hash/sha512/cp/hash_sha512.c' || echo '$(srcdir)/'`crypto_hash/sha512/cp/hash_sha512.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Tpo crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_hash/sha512/cp/hash_sha512.c' object='crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_kdf/libsodium_la-crypto_kdf.lo: crypto_kdf/crypto_kdf.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_kdf/libsodium_la-crypto_kdf.lo -MD -MP -MF crypto_kdf/$(DEPDIR)/libsodium_la-crypto_kdf.Tpo -c -o crypto_kdf/libsodium_la-crypto_kdf.lo `test -f 'crypto_kdf/crypto_kdf.c' || echo '$(srcdir)/'`crypto_kdf/crypto_kdf.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_kdf/$(DEPDIR)/libsodium_la-crypto_kdf.Tpo crypto_kdf/$(DEPDIR)/libsodium_la-crypto_kdf.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_kdf/crypto_kdf.c' object='crypto_kdf/libsodium_la-crypto_kdf.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_hash/sha512/cp/libsodium_la-hash_sha512.lo `test -f 'crypto_hash/sha512/cp/hash_sha512.c' || echo '$(srcdir)/'`crypto_hash/sha512/cp/hash_sha512.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_kdf/libsodium_la-crypto_kdf.lo `test -f 'crypto_kdf/crypto_kdf.c' || echo '$(srcdir)/'`crypto_kdf/crypto_kdf.c
+
+crypto_kx/libsodium_la-crypto_kx.lo: crypto_kx/crypto_kx.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_kx/libsodium_la-crypto_kx.lo -MD -MP -MF crypto_kx/$(DEPDIR)/libsodium_la-crypto_kx.Tpo -c -o crypto_kx/libsodium_la-crypto_kx.lo `test -f 'crypto_kx/crypto_kx.c' || echo '$(srcdir)/'`crypto_kx/crypto_kx.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_kx/$(DEPDIR)/libsodium_la-crypto_kx.Tpo crypto_kx/$(DEPDIR)/libsodium_la-crypto_kx.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_kx/crypto_kx.c' object='crypto_kx/libsodium_la-crypto_kx.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_kx/libsodium_la-crypto_kx.lo `test -f 'crypto_kx/crypto_kx.c' || echo '$(srcdir)/'`crypto_kx/crypto_kx.c
 
 crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo: crypto_onetimeauth/crypto_onetimeauth.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo -MD -MP -MF crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Tpo -c -o crypto_onetimeauth/libsodium_la-crypto_onetimeauth.lo `test -f 'crypto_onetimeauth/crypto_onetimeauth.c' || echo '$(srcdir)/'`crypto_onetimeauth/crypto_onetimeauth.c
@@ -2619,40 +2526,61 @@ crypto_onetimeauth/poly1305/donna/libsodium_la-poly1305_donna.lo: crypto_onetime
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/donna/libsodium_la-poly1305_donna.lo `test -f 'crypto_onetimeauth/poly1305/donna/poly1305_donna.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/donna/poly1305_donna.c
 
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo: crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libsodium_la-argon2-core.lo: crypto_pwhash/argon2/argon2-core.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libsodium_la-argon2-core.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-core.Tpo -c -o crypto_pwhash/argon2/libsodium_la-argon2-core.lo `test -f 'crypto_pwhash/argon2/argon2-core.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-core.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-core.Tpo crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-core.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/argon2-core.c' object='crypto_pwhash/argon2/libsodium_la-argon2-core.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libsodium_la-argon2-core.lo `test -f 'crypto_pwhash/argon2/argon2-core.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-core.c
 
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo: crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo: crypto_pwhash/argon2/argon2-encoding.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-encoding.Tpo -c -o crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo `test -f 'crypto_pwhash/argon2/argon2-encoding.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-encoding.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-encoding.Tpo crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-encoding.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/argon2-encoding.c' object='crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libsodium_la-argon2-encoding.lo `test -f 'crypto_pwhash/argon2/argon2-encoding.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-encoding.c
 
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo: crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo: crypto_pwhash/argon2/argon2-fill-block-ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-fill-block-ref.Tpo -c -o crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-ref.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-fill-block-ref.Tpo crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-fill-block-ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/argon2-fill-block-ref.c' object='crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libsodium_la-argon2-fill-block-ref.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-ref.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-ref.c
 
-crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo: crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libsodium_la-argon2.lo: crypto_pwhash/argon2/argon2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libsodium_la-argon2.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2.Tpo -c -o crypto_pwhash/argon2/libsodium_la-argon2.lo `test -f 'crypto_pwhash/argon2/argon2.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2.Tpo crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/argon2.c' object='crypto_pwhash/argon2/libsodium_la-argon2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libsodium_la-argon2.lo `test -f 'crypto_pwhash/argon2/argon2.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2.c
 
-crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo: crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Tpo crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' object='crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libsodium_la-blake2b-long.lo: crypto_pwhash/argon2/blake2b-long.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libsodium_la-blake2b-long.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-blake2b-long.Tpo -c -o crypto_pwhash/argon2/libsodium_la-blake2b-long.lo `test -f 'crypto_pwhash/argon2/blake2b-long.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/blake2b-long.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-blake2b-long.Tpo crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-blake2b-long.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/blake2b-long.c' object='crypto_pwhash/argon2/libsodium_la-blake2b-long.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libsodium_la-blake2b-long.lo `test -f 'crypto_pwhash/argon2/blake2b-long.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/blake2b-long.c
+
+crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo: crypto_pwhash/argon2/pwhash_argon2i.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2i.Tpo -c -o crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo `test -f 'crypto_pwhash/argon2/pwhash_argon2i.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/pwhash_argon2i.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2i.Tpo crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2i.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/pwhash_argon2i.c' object='crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libsodium_la-pwhash_argon2i.lo `test -f 'crypto_pwhash/argon2/pwhash_argon2i.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/pwhash_argon2i.c
+
+crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo: crypto_pwhash/argon2/pwhash_argon2id.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2id.Tpo -c -o crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo `test -f 'crypto_pwhash/argon2/pwhash_argon2id.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/pwhash_argon2id.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2id.Tpo crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2id.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/pwhash_argon2id.c' object='crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libsodium_la-pwhash_argon2id.lo `test -f 'crypto_pwhash/argon2/pwhash_argon2id.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/pwhash_argon2id.c
+
+crypto_pwhash/libsodium_la-crypto_pwhash.lo: crypto_pwhash/crypto_pwhash.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/libsodium_la-crypto_pwhash.lo -MD -MP -MF crypto_pwhash/$(DEPDIR)/libsodium_la-crypto_pwhash.Tpo -c -o crypto_pwhash/libsodium_la-crypto_pwhash.lo `test -f 'crypto_pwhash/crypto_pwhash.c' || echo '$(srcdir)/'`crypto_pwhash/crypto_pwhash.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/$(DEPDIR)/libsodium_la-crypto_pwhash.Tpo crypto_pwhash/$(DEPDIR)/libsodium_la-crypto_pwhash.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/crypto_pwhash.c' object='crypto_pwhash/libsodium_la-crypto_pwhash.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/libsodium_la-crypto_pwhash.lo `test -f 'crypto_pwhash/crypto_pwhash.c' || echo '$(srcdir)/'`crypto_pwhash/crypto_pwhash.c
 
 crypto_scalarmult/libsodium_la-crypto_scalarmult.lo: crypto_scalarmult/crypto_scalarmult.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/libsodium_la-crypto_scalarmult.lo -MD -MP -MF crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Tpo -c -o crypto_scalarmult/libsodium_la-crypto_scalarmult.lo `test -f 'crypto_scalarmult/crypto_scalarmult.c' || echo '$(srcdir)/'`crypto_scalarmult/crypto_scalarmult.c
@@ -2661,6 +2589,13 @@ crypto_scalarmult/libsodium_la-crypto_scalarmult.lo: crypto_scalarmult/crypto_sc
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/libsodium_la-crypto_scalarmult.lo `test -f 'crypto_scalarmult/crypto_scalarmult.c' || echo '$(srcdir)/'`crypto_scalarmult/crypto_scalarmult.c
 
+crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo: crypto_scalarmult/curve25519/ref10/x25519_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-x25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/x25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/x25519_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-x25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-x25519_ref10.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/x25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-x25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/x25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/x25519_ref10.c
+
 crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519.lo: crypto_scalarmult/curve25519/scalarmult_curve25519.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519.lo -MD -MP -MF crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Tpo -c -o crypto_scalarmult/curve25519/libsodium_la-scalarmult_curve25519.lo `test -f 'crypto_scalarmult/curve25519/scalarmult_curve25519.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/scalarmult_curve25519.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Tpo crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Plo
@@ -2682,19 +2617,19 @@ crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo: crypto_secretbox/crypto_
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/libsodium_la-crypto_secretbox_easy.lo `test -f 'crypto_secretbox/crypto_secretbox_easy.c' || echo '$(srcdir)/'`crypto_secretbox/crypto_secretbox_easy.c
 
-crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo: crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo -MD -MP -MF crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Tpo -c -o crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo `test -f 'crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Tpo crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c' object='crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo: crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo -MD -MP -MF crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305.Tpo -c -o crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo `test -f 'crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305.Tpo crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c' object='crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305_api.lo `test -f 'crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/xsalsa20poly1305/libsodium_la-secretbox_xsalsa20poly1305.lo `test -f 'crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305.c
 
-crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo: crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo -MD -MP -MF crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Tpo -c -o crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo `test -f 'crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Tpo crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/libsodium_la-box_xsalsa20poly1305.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c' object='crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo: crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo -MD -MP -MF crypto_secretstream/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretstream_xchacha20poly1305.Tpo -c -o crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo `test -f 'crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_secretstream/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretstream_xchacha20poly1305.Tpo crypto_secretstream/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretstream_xchacha20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c' object='crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/xsalsa20poly1305/ref/libsodium_la-box_xsalsa20poly1305.lo `test -f 'crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretstream/xchacha20poly1305/libsodium_la-secretstream_xchacha20poly1305.lo `test -f 'crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_secretstream/xchacha20poly1305/secretstream_xchacha20poly1305.c
 
 crypto_shorthash/libsodium_la-crypto_shorthash.lo: crypto_shorthash/crypto_shorthash.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/libsodium_la-crypto_shorthash.lo -MD -MP -MF crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Tpo -c -o crypto_shorthash/libsodium_la-crypto_shorthash.lo `test -f 'crypto_shorthash/crypto_shorthash.c' || echo '$(srcdir)/'`crypto_shorthash/crypto_shorthash.c
@@ -2703,19 +2638,19 @@ crypto_shorthash/libsodium_la-crypto_shorthash.lo: crypto_shorthash/crypto_short
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/libsodium_la-crypto_shorthash.lo `test -f 'crypto_shorthash/crypto_shorthash.c' || echo '$(srcdir)/'`crypto_shorthash/crypto_shorthash.c
 
-crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo: crypto_shorthash/siphash24/shorthash_siphash24_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo -MD -MP -MF crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Tpo -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphash24_api.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphash24_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Tpo crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_shorthash/siphash24/shorthash_siphash24_api.c' object='crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo: crypto_shorthash/siphash24/shorthash_siphash24.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo -MD -MP -MF crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24.Tpo -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphash24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphash24.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24.Tpo crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_shorthash/siphash24/shorthash_siphash24.c' object='crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24_api.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphash24_api.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphash24_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphash24.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphash24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphash24.c
 
-crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo: crypto_shorthash/siphash24/ref/shorthash_siphash24.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo -MD -MP -MF crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Tpo -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphash24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphash24.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Tpo crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_shorthash/siphash24/ref/shorthash_siphash24.c' object='crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo: crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo -MD -MP -MF crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24_ref.Tpo -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24_ref.Tpo crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24_ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c' object='crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphash24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphash24.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphash24_ref.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphash24_ref.c
 
 crypto_sign/libsodium_la-crypto_sign.lo: crypto_sign/crypto_sign.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/libsodium_la-crypto_sign.lo -MD -MP -MF crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Tpo -c -o crypto_sign/libsodium_la-crypto_sign.lo `test -f 'crypto_sign/crypto_sign.c' || echo '$(srcdir)/'`crypto_sign/crypto_sign.c
@@ -2724,250 +2659,12 @@ crypto_sign/libsodium_la-crypto_sign.lo: crypto_sign/crypto_sign.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/libsodium_la-crypto_sign.lo `test -f 'crypto_sign/crypto_sign.c' || echo '$(srcdir)/'`crypto_sign/crypto_sign.c
 
-crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo: crypto_sign/ed25519/sign_ed25519_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo -MD -MP -MF crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Tpo -c -o crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo `test -f 'crypto_sign/ed25519/sign_ed25519_api.c' || echo '$(srcdir)/'`crypto_sign/ed25519/sign_ed25519_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Tpo crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/sign_ed25519_api.c' object='crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/libsodium_la-sign_ed25519_api.lo `test -f 'crypto_sign/ed25519/sign_ed25519_api.c' || echo '$(srcdir)/'`crypto_sign/ed25519/sign_ed25519_api.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo: crypto_sign/ed25519/ref10/fe_0.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo `test -f 'crypto_sign/ed25519/ref10/fe_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_0.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_0.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_0.lo `test -f 'crypto_sign/ed25519/ref10/fe_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_0.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo: crypto_sign/ed25519/ref10/fe_1.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo `test -f 'crypto_sign/ed25519/ref10/fe_1.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_1.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_1.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_1.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_1.lo `test -f 'crypto_sign/ed25519/ref10/fe_1.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_1.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo: crypto_sign/ed25519/ref10/fe_add.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo `test -f 'crypto_sign/ed25519/ref10/fe_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_add.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_add.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_add.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_sign/ed25519/libsodium_la-sign_ed25519.lo: crypto_sign/ed25519/sign_ed25519.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/libsodium_la-sign_ed25519.lo -MD -MP -MF crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519.Tpo -c -o crypto_sign/ed25519/libsodium_la-sign_ed25519.lo `test -f 'crypto_sign/ed25519/sign_ed25519.c' || echo '$(srcdir)/'`crypto_sign/ed25519/sign_ed25519.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519.Tpo crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/sign_ed25519.c' object='crypto_sign/ed25519/libsodium_la-sign_ed25519.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_add.lo `test -f 'crypto_sign/ed25519/ref10/fe_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_add.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo: crypto_sign/ed25519/ref10/fe_cmov.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo `test -f 'crypto_sign/ed25519/ref10/fe_cmov.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_cmov.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_cmov.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_cmov.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_cmov.lo `test -f 'crypto_sign/ed25519/ref10/fe_cmov.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_cmov.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo: crypto_sign/ed25519/ref10/fe_copy.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo `test -f 'crypto_sign/ed25519/ref10/fe_copy.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_copy.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_copy.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_copy.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_copy.lo `test -f 'crypto_sign/ed25519/ref10/fe_copy.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_copy.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo: crypto_sign/ed25519/ref10/fe_frombytes.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_frombytes.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_frombytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_frombytes.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo: crypto_sign/ed25519/ref10/fe_invert.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo `test -f 'crypto_sign/ed25519/ref10/fe_invert.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_invert.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_invert.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_invert.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_invert.lo `test -f 'crypto_sign/ed25519/ref10/fe_invert.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_invert.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo: crypto_sign/ed25519/ref10/fe_isnegative.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnegative.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnegative.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnegative.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_isnegative.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnegative.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnegative.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnegative.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo: crypto_sign/ed25519/ref10/fe_isnonzero.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnonzero.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnonzero.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_isnonzero.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_isnonzero.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_isnonzero.lo `test -f 'crypto_sign/ed25519/ref10/fe_isnonzero.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_isnonzero.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo: crypto_sign/ed25519/ref10/fe_mul.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo `test -f 'crypto_sign/ed25519/ref10/fe_mul.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_mul.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_mul.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_mul.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_mul.lo `test -f 'crypto_sign/ed25519/ref10/fe_mul.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_mul.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo: crypto_sign/ed25519/ref10/fe_neg.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo `test -f 'crypto_sign/ed25519/ref10/fe_neg.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_neg.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_neg.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_neg.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_neg.lo `test -f 'crypto_sign/ed25519/ref10/fe_neg.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_neg.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo: crypto_sign/ed25519/ref10/fe_pow22523.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo `test -f 'crypto_sign/ed25519/ref10/fe_pow22523.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_pow22523.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_pow22523.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_pow22523.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_pow22523.lo `test -f 'crypto_sign/ed25519/ref10/fe_pow22523.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_pow22523.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo: crypto_sign/ed25519/ref10/fe_sq.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_sq.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo: crypto_sign/ed25519/ref10/fe_sq2.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq2.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sq2.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_sq2.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sq2.lo `test -f 'crypto_sign/ed25519/ref10/fe_sq2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sq2.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo: crypto_sign/ed25519/ref10/fe_sub.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo `test -f 'crypto_sign/ed25519/ref10/fe_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sub.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_sub.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_sub.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_sub.lo `test -f 'crypto_sign/ed25519/ref10/fe_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_sub.c
-
-crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo: crypto_sign/ed25519/ref10/fe_tobytes.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_tobytes.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/fe_tobytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-fe_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/fe_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/fe_tobytes.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo: crypto_sign/ed25519/ref10/ge_add.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo `test -f 'crypto_sign/ed25519/ref10/ge_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_add.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_add.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_add.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_add.lo `test -f 'crypto_sign/ed25519/ref10/ge_add.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_add.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo: crypto_sign/ed25519/ref10/ge_double_scalarmult.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo `test -f 'crypto_sign/ed25519/ref10/ge_double_scalarmult.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_double_scalarmult.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_double_scalarmult.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_double_scalarmult.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_double_scalarmult.lo `test -f 'crypto_sign/ed25519/ref10/ge_double_scalarmult.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_double_scalarmult.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo: crypto_sign/ed25519/ref10/ge_frombytes.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_frombytes.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_frombytes.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_frombytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_frombytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_frombytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_frombytes.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo: crypto_sign/ed25519/ref10/ge_madd.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo `test -f 'crypto_sign/ed25519/ref10/ge_madd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_madd.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_madd.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_madd.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_madd.lo `test -f 'crypto_sign/ed25519/ref10/ge_madd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_madd.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo: crypto_sign/ed25519/ref10/ge_msub.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo `test -f 'crypto_sign/ed25519/ref10/ge_msub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_msub.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_msub.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_msub.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_msub.lo `test -f 'crypto_sign/ed25519/ref10/ge_msub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_msub.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo: crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p2.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo: crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p1p1_to_p3.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p1p1_to_p3.lo `test -f 'crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo: crypto_sign/ed25519/ref10/ge_p2_0.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_0.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_0.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p2_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_0.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo: crypto_sign/ed25519/ref10/ge_p2_dbl.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_dbl.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p2_dbl.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p2_dbl.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p2_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p2_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p2_dbl.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo: crypto_sign/ed25519/ref10/ge_p3_0.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_0.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_0.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_0.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo: crypto_sign/ed25519/ref10/ge_p3_dbl.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_dbl.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_dbl.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_dbl.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_dbl.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_dbl.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_dbl.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo: crypto_sign/ed25519/ref10/ge_p3_to_cached.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_cached.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_cached.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_cached.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_to_cached.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_cached.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_cached.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_cached.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo: crypto_sign/ed25519/ref10/ge_p3_to_p2.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_p2.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_to_p2.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_to_p2.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_to_p2.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_to_p2.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_to_p2.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo: crypto_sign/ed25519/ref10/ge_p3_tobytes.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_tobytes.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_p3_tobytes.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_p3_tobytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_p3_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_p3_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_p3_tobytes.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo: crypto_sign/ed25519/ref10/ge_precomp_0.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_precomp_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_precomp_0.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_precomp_0.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_precomp_0.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_precomp_0.lo `test -f 'crypto_sign/ed25519/ref10/ge_precomp_0.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_precomp_0.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo: crypto_sign/ed25519/ref10/ge_scalarmult_base.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo `test -f 'crypto_sign/ed25519/ref10/ge_scalarmult_base.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_scalarmult_base.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_scalarmult_base.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_scalarmult_base.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_scalarmult_base.lo `test -f 'crypto_sign/ed25519/ref10/ge_scalarmult_base.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_scalarmult_base.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo: crypto_sign/ed25519/ref10/ge_sub.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo `test -f 'crypto_sign/ed25519/ref10/ge_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_sub.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_sub.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_sub.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_sub.lo `test -f 'crypto_sign/ed25519/ref10/ge_sub.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_sub.c
-
-crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo: crypto_sign/ed25519/ref10/ge_tobytes.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_tobytes.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-ge_tobytes.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/ge_tobytes.c' object='crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-ge_tobytes.lo `test -f 'crypto_sign/ed25519/ref10/ge_tobytes.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/ge_tobytes.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/libsodium_la-sign_ed25519.lo `test -f 'crypto_sign/ed25519/sign_ed25519.c' || echo '$(srcdir)/'`crypto_sign/ed25519/sign_ed25519.c
 
 crypto_sign/ed25519/ref10/libsodium_la-keypair.lo: crypto_sign/ed25519/ref10/keypair.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-keypair.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-keypair.lo `test -f 'crypto_sign/ed25519/ref10/keypair.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/keypair.c
@@ -2983,20 +2680,6 @@ crypto_sign/ed25519/ref10/libsodium_la-open.lo: crypto_sign/ed25519/ref10/open.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-open.lo `test -f 'crypto_sign/ed25519/ref10/open.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/open.c
 
-crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo: crypto_sign/ed25519/ref10/sc_muladd.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo `test -f 'crypto_sign/ed25519/ref10/sc_muladd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_muladd.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_muladd.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/sc_muladd.c' object='crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_muladd.lo `test -f 'crypto_sign/ed25519/ref10/sc_muladd.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_muladd.c
-
-crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo: crypto_sign/ed25519/ref10/sc_reduce.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo `test -f 'crypto_sign/ed25519/ref10/sc_reduce.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_reduce.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sc_reduce.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/sc_reduce.c' object='crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-sc_reduce.lo `test -f 'crypto_sign/ed25519/ref10/sc_reduce.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sc_reduce.c
-
 crypto_sign/ed25519/ref10/libsodium_la-sign.lo: crypto_sign/ed25519/ref10/sign.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-sign.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-sign.lo `test -f 'crypto_sign/ed25519/ref10/sign.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sign.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo
@@ -3004,13 +2687,6 @@ crypto_sign/ed25519/ref10/libsodium_la-sign.lo: crypto_sign/ed25519/ref10/sign.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-sign.lo `test -f 'crypto_sign/ed25519/ref10/sign.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/sign.c
 
-crypto_stream/libsodium_la-crypto_stream.lo: crypto_stream/crypto_stream.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/libsodium_la-crypto_stream.lo -MD -MP -MF crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Tpo -c -o crypto_stream/libsodium_la-crypto_stream.lo `test -f 'crypto_stream/crypto_stream.c' || echo '$(srcdir)/'`crypto_stream/crypto_stream.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Tpo crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/crypto_stream.c' object='crypto_stream/libsodium_la-crypto_stream.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/libsodium_la-crypto_stream.lo `test -f 'crypto_stream/crypto_stream.c' || echo '$(srcdir)/'`crypto_stream/crypto_stream.c
-
 crypto_stream/chacha20/libsodium_la-stream_chacha20.lo: crypto_stream/chacha20/stream_chacha20.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/libsodium_la-stream_chacha20.lo -MD -MP -MF crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Tpo -c -o crypto_stream/chacha20/libsodium_la-stream_chacha20.lo `test -f 'crypto_stream/chacha20/stream_chacha20.c' || echo '$(srcdir)/'`crypto_stream/chacha20/stream_chacha20.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Tpo crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Plo
@@ -3018,82 +2694,40 @@ crypto_stream/chacha20/libsodium_la-stream_chacha20.lo: crypto_stream/chacha20/s
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/libsodium_la-stream_chacha20.lo `test -f 'crypto_stream/chacha20/stream_chacha20.c' || echo '$(srcdir)/'`crypto_stream/chacha20/stream_chacha20.c
 
-crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo: crypto_stream/chacha20/ref/stream_chacha20_ref.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo -MD -MP -MF crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Tpo -c -o crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo `test -f 'crypto_stream/chacha20/ref/stream_chacha20_ref.c' || echo '$(srcdir)/'`crypto_stream/chacha20/ref/stream_chacha20_ref.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Tpo crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-stream_chacha20_ref.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/chacha20/ref/stream_chacha20_ref.c' object='crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/ref/libsodium_la-stream_chacha20_ref.lo `test -f 'crypto_stream/chacha20/ref/stream_chacha20_ref.c' || echo '$(srcdir)/'`crypto_stream/chacha20/ref/stream_chacha20_ref.c
-
-crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo: crypto_stream/salsa20/stream_salsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo -MD -MP -MF crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Tpo -c -o crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo `test -f 'crypto_stream/salsa20/stream_salsa20_api.c' || echo '$(srcdir)/'`crypto_stream/salsa20/stream_salsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Tpo crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/stream_salsa20_api.c' object='crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/libsodium_la-stream_salsa20_api.lo `test -f 'crypto_stream/salsa20/stream_salsa20_api.c' || echo '$(srcdir)/'`crypto_stream/salsa20/stream_salsa20_api.c
-
-crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo: crypto_stream/xsalsa20/stream_xsalsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo -MD -MP -MF crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Tpo -c -o crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo `test -f 'crypto_stream/xsalsa20/stream_xsalsa20_api.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/stream_xsalsa20_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Tpo crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/xsalsa20/stream_xsalsa20_api.c' object='crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20_api.lo `test -f 'crypto_stream/xsalsa20/stream_xsalsa20_api.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/stream_xsalsa20_api.c
-
-crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo: crypto_stream/xsalsa20/ref/stream_xsalsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo -MD -MP -MF crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Tpo -c -o crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/stream_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/stream_xsalsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Tpo crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/xsalsa20/ref/stream_xsalsa20.c' object='crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xsalsa20/ref/libsodium_la-stream_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/stream_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/stream_xsalsa20.c
-
-crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo: crypto_stream/xsalsa20/ref/xor_xsalsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo -MD -MP -MF crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Tpo -c -o crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/xor_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/xor_xsalsa20.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Tpo crypto_stream/xsalsa20/ref/$(DEPDIR)/libsodium_la-xor_xsalsa20.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/xsalsa20/ref/xor_xsalsa20.c' object='crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo: crypto_stream/chacha20/ref/chacha20_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo -MD -MP -MF crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-chacha20_ref.Tpo -c -o crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo `test -f 'crypto_stream/chacha20/ref/chacha20_ref.c' || echo '$(srcdir)/'`crypto_stream/chacha20/ref/chacha20_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-chacha20_ref.Tpo crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-chacha20_ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/chacha20/ref/chacha20_ref.c' object='crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xsalsa20/ref/libsodium_la-xor_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/ref/xor_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/ref/xor_xsalsa20.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/ref/libsodium_la-chacha20_ref.lo `test -f 'crypto_stream/chacha20/ref/chacha20_ref.c' || echo '$(srcdir)/'`crypto_stream/chacha20/ref/chacha20_ref.c
 
-crypto_verify/16/libsodium_la-verify_16_api.lo: crypto_verify/16/verify_16_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/16/libsodium_la-verify_16_api.lo -MD -MP -MF crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Tpo -c -o crypto_verify/16/libsodium_la-verify_16_api.lo `test -f 'crypto_verify/16/verify_16_api.c' || echo '$(srcdir)/'`crypto_verify/16/verify_16_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Tpo crypto_verify/16/$(DEPDIR)/libsodium_la-verify_16_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_verify/16/verify_16_api.c' object='crypto_verify/16/libsodium_la-verify_16_api.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/16/libsodium_la-verify_16_api.lo `test -f 'crypto_verify/16/verify_16_api.c' || echo '$(srcdir)/'`crypto_verify/16/verify_16_api.c
-
-crypto_verify/16/ref/libsodium_la-verify_16.lo: crypto_verify/16/ref/verify_16.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/16/ref/libsodium_la-verify_16.lo -MD -MP -MF crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Tpo -c -o crypto_verify/16/ref/libsodium_la-verify_16.lo `test -f 'crypto_verify/16/ref/verify_16.c' || echo '$(srcdir)/'`crypto_verify/16/ref/verify_16.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Tpo crypto_verify/16/ref/$(DEPDIR)/libsodium_la-verify_16.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_verify/16/ref/verify_16.c' object='crypto_verify/16/ref/libsodium_la-verify_16.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/16/ref/libsodium_la-verify_16.lo `test -f 'crypto_verify/16/ref/verify_16.c' || echo '$(srcdir)/'`crypto_verify/16/ref/verify_16.c
-
-crypto_verify/32/libsodium_la-verify_32_api.lo: crypto_verify/32/verify_32_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/32/libsodium_la-verify_32_api.lo -MD -MP -MF crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Tpo -c -o crypto_verify/32/libsodium_la-verify_32_api.lo `test -f 'crypto_verify/32/verify_32_api.c' || echo '$(srcdir)/'`crypto_verify/32/verify_32_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Tpo crypto_verify/32/$(DEPDIR)/libsodium_la-verify_32_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_verify/32/verify_32_api.c' object='crypto_verify/32/libsodium_la-verify_32_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/libsodium_la-crypto_stream.lo: crypto_stream/crypto_stream.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/libsodium_la-crypto_stream.lo -MD -MP -MF crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Tpo -c -o crypto_stream/libsodium_la-crypto_stream.lo `test -f 'crypto_stream/crypto_stream.c' || echo '$(srcdir)/'`crypto_stream/crypto_stream.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Tpo crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/crypto_stream.c' object='crypto_stream/libsodium_la-crypto_stream.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/32/libsodium_la-verify_32_api.lo `test -f 'crypto_verify/32/verify_32_api.c' || echo '$(srcdir)/'`crypto_verify/32/verify_32_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/libsodium_la-crypto_stream.lo `test -f 'crypto_stream/crypto_stream.c' || echo '$(srcdir)/'`crypto_stream/crypto_stream.c
 
-crypto_verify/32/ref/libsodium_la-verify_32.lo: crypto_verify/32/ref/verify_32.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/32/ref/libsodium_la-verify_32.lo -MD -MP -MF crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Tpo -c -o crypto_verify/32/ref/libsodium_la-verify_32.lo `test -f 'crypto_verify/32/ref/verify_32.c' || echo '$(srcdir)/'`crypto_verify/32/ref/verify_32.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Tpo crypto_verify/32/ref/$(DEPDIR)/libsodium_la-verify_32.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_verify/32/ref/verify_32.c' object='crypto_verify/32/ref/libsodium_la-verify_32.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa20/libsodium_la-stream_salsa20.lo: crypto_stream/salsa20/stream_salsa20.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/libsodium_la-stream_salsa20.lo -MD -MP -MF crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20.Tpo -c -o crypto_stream/salsa20/libsodium_la-stream_salsa20.lo `test -f 'crypto_stream/salsa20/stream_salsa20.c' || echo '$(srcdir)/'`crypto_stream/salsa20/stream_salsa20.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20.Tpo crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/stream_salsa20.c' object='crypto_stream/salsa20/libsodium_la-stream_salsa20.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/32/ref/libsodium_la-verify_32.lo `test -f 'crypto_verify/32/ref/verify_32.c' || echo '$(srcdir)/'`crypto_verify/32/ref/verify_32.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/libsodium_la-stream_salsa20.lo `test -f 'crypto_stream/salsa20/stream_salsa20.c' || echo '$(srcdir)/'`crypto_stream/salsa20/stream_salsa20.c
 
-crypto_verify/64/libsodium_la-verify_64_api.lo: crypto_verify/64/verify_64_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/64/libsodium_la-verify_64_api.lo -MD -MP -MF crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Tpo -c -o crypto_verify/64/libsodium_la-verify_64_api.lo `test -f 'crypto_verify/64/verify_64_api.c' || echo '$(srcdir)/'`crypto_verify/64/verify_64_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Tpo crypto_verify/64/$(DEPDIR)/libsodium_la-verify_64_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_verify/64/verify_64_api.c' object='crypto_verify/64/libsodium_la-verify_64_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo: crypto_stream/xsalsa20/stream_xsalsa20.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo -MD -MP -MF crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20.Tpo -c -o crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/stream_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/stream_xsalsa20.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20.Tpo crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/xsalsa20/stream_xsalsa20.c' object='crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/64/libsodium_la-verify_64_api.lo `test -f 'crypto_verify/64/verify_64_api.c' || echo '$(srcdir)/'`crypto_verify/64/verify_64_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xsalsa20/libsodium_la-stream_xsalsa20.lo `test -f 'crypto_stream/xsalsa20/stream_xsalsa20.c' || echo '$(srcdir)/'`crypto_stream/xsalsa20/stream_xsalsa20.c
 
-crypto_verify/64/ref/libsodium_la-verify_64.lo: crypto_verify/64/ref/verify_64.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/64/ref/libsodium_la-verify_64.lo -MD -MP -MF crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Tpo -c -o crypto_verify/64/ref/libsodium_la-verify_64.lo `test -f 'crypto_verify/64/ref/verify_64.c' || echo '$(srcdir)/'`crypto_verify/64/ref/verify_64.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Tpo crypto_verify/64/ref/$(DEPDIR)/libsodium_la-verify_64.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_verify/64/ref/verify_64.c' object='crypto_verify/64/ref/libsodium_la-verify_64.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_verify/sodium/libsodium_la-verify.lo: crypto_verify/sodium/verify.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_verify/sodium/libsodium_la-verify.lo -MD -MP -MF crypto_verify/sodium/$(DEPDIR)/libsodium_la-verify.Tpo -c -o crypto_verify/sodium/libsodium_la-verify.lo `test -f 'crypto_verify/sodium/verify.c' || echo '$(srcdir)/'`crypto_verify/sodium/verify.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_verify/sodium/$(DEPDIR)/libsodium_la-verify.Tpo crypto_verify/sodium/$(DEPDIR)/libsodium_la-verify.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_verify/sodium/verify.c' object='crypto_verify/sodium/libsodium_la-verify.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/64/ref/libsodium_la-verify_64.lo `test -f 'crypto_verify/64/ref/verify_64.c' || echo '$(srcdir)/'`crypto_verify/64/ref/verify_64.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_verify/sodium/libsodium_la-verify.lo `test -f 'crypto_verify/sodium/verify.c' || echo '$(srcdir)/'`crypto_verify/sodium/verify.c
 
 randombytes/libsodium_la-randombytes.lo: randombytes/randombytes.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/libsodium_la-randombytes.lo -MD -MP -MF randombytes/$(DEPDIR)/libsodium_la-randombytes.Tpo -c -o randombytes/libsodium_la-randombytes.lo `test -f 'randombytes/randombytes.c' || echo '$(srcdir)/'`randombytes/randombytes.c
@@ -3102,6 +2736,13 @@ randombytes/libsodium_la-randombytes.lo: randombytes/randombytes.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/libsodium_la-randombytes.lo `test -f 'randombytes/randombytes.c' || echo '$(srcdir)/'`randombytes/randombytes.c
 
+sodium/libsodium_la-codecs.lo: sodium/codecs.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sodium/libsodium_la-codecs.lo -MD -MP -MF sodium/$(DEPDIR)/libsodium_la-codecs.Tpo -c -o sodium/libsodium_la-codecs.lo `test -f 'sodium/codecs.c' || echo '$(srcdir)/'`sodium/codecs.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sodium/$(DEPDIR)/libsodium_la-codecs.Tpo sodium/$(DEPDIR)/libsodium_la-codecs.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='sodium/codecs.c' object='sodium/libsodium_la-codecs.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sodium/libsodium_la-codecs.lo `test -f 'sodium/codecs.c' || echo '$(srcdir)/'`sodium/codecs.c
+
 sodium/libsodium_la-core.lo: sodium/core.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT sodium/libsodium_la-core.lo -MD -MP -MF sodium/$(DEPDIR)/libsodium_la-core.Tpo -c -o sodium/libsodium_la-core.lo `test -f 'sodium/core.c' || echo '$(srcdir)/'`sodium/core.c
 @am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) sodium/$(DEPDIR)/libsodium_la-core.Tpo sodium/$(DEPDIR)/libsodium_la-core.Plo
@@ -3130,124 +2771,19 @@ sodium/libsodium_la-version.lo: sodium/version.c
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o sodium/libsodium_la-version.lo `test -f 'sodium/version.c' || echo '$(srcdir)/'`sodium/version.c
 
-randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo: randombytes/salsa20/randombytes_salsa20_random.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo -MD -MP -MF randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Tpo -c -o randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo `test -f 'randombytes/salsa20/randombytes_salsa20_random.c' || echo '$(srcdir)/'`randombytes/salsa20/randombytes_salsa20_random.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Tpo randombytes/salsa20/$(DEPDIR)/libsodium_la-randombytes_salsa20_random.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='randombytes/salsa20/randombytes_salsa20_random.c' object='randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo: crypto_stream/salsa20/xmm6/salsa20_xmm6.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo -MD -MP -MF crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6.Tpo -c -o crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo `test -f 'crypto_stream/salsa20/xmm6/salsa20_xmm6.c' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6/salsa20_xmm6.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6.Tpo crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/xmm6/salsa20_xmm6.c' object='crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/salsa20/libsodium_la-randombytes_salsa20_random.lo `test -f 'randombytes/salsa20/randombytes_salsa20_random.c' || echo '$(srcdir)/'`randombytes/salsa20/randombytes_salsa20_random.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/xmm6/libsodium_la-salsa20_xmm6.lo `test -f 'crypto_stream/salsa20/xmm6/salsa20_xmm6.c' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6/salsa20_xmm6.c
 
-randombytes/nativeclient/libsodium_la-randombytes_nativeclient.lo: randombytes/nativeclient/randombytes_nativeclient.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/nativeclient/libsodium_la-randombytes_nativeclient.lo -MD -MP -MF randombytes/nativeclient/$(DEPDIR)/libsodium_la-randombytes_nativeclient.Tpo -c -o randombytes/nativeclient/libsodium_la-randombytes_nativeclient.lo `test -f 'randombytes/nativeclient/randombytes_nativeclient.c' || echo '$(srcdir)/'`randombytes/nativeclient/randombytes_nativeclient.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) randombytes/nativeclient/$(DEPDIR)/libsodium_la-randombytes_nativeclient.Tpo randombytes/nativeclient/$(DEPDIR)/libsodium_la-randombytes_nativeclient.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='randombytes/nativeclient/randombytes_nativeclient.c' object='randombytes/nativeclient/libsodium_la-randombytes_nativeclient.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa20/ref/libsodium_la-salsa20_ref.lo: crypto_stream/salsa20/ref/salsa20_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/ref/libsodium_la-salsa20_ref.lo -MD -MP -MF crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-salsa20_ref.Tpo -c -o crypto_stream/salsa20/ref/libsodium_la-salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/salsa20_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-salsa20_ref.Tpo crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-salsa20_ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/ref/salsa20_ref.c' object='crypto_stream/salsa20/ref/libsodium_la-salsa20_ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/nativeclient/libsodium_la-randombytes_nativeclient.lo `test -f 'randombytes/nativeclient/randombytes_nativeclient.c' || echo '$(srcdir)/'`randombytes/nativeclient/randombytes_nativeclient.c
-
-randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo: randombytes/sysrandom/randombytes_sysrandom.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo -MD -MP -MF randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Tpo -c -o randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo `test -f 'randombytes/sysrandom/randombytes_sysrandom.c' || echo '$(srcdir)/'`randombytes/sysrandom/randombytes_sysrandom.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Tpo randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='randombytes/sysrandom/randombytes_sysrandom.c' object='randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo `test -f 'randombytes/sysrandom/randombytes_sysrandom.c' || echo '$(srcdir)/'`randombytes/sysrandom/randombytes_sysrandom.c
-
-crypto_scalarmult/curve25519/donna_c64/libsodium_la-curve25519_donna_c64.lo: crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/donna_c64/libsodium_la-curve25519_donna_c64.lo -MD -MP -MF crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-curve25519_donna_c64.Tpo -c -o crypto_scalarmult/curve25519/donna_c64/libsodium_la-curve25519_donna_c64.lo `test -f 'crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-curve25519_donna_c64.Tpo crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/libsodium_la-curve25519_donna_c64.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c' object='crypto_scalarmult/curve25519/donna_c64/libsodium_la-curve25519_donna_c64.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/donna_c64/libsodium_la-curve25519_donna_c64.lo `test -f 'crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_0_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_0_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_1_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_1_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_add_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_add_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_copy_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_copy_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_cswap_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_cswap_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_frombytes_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_frombytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_invert_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_invert_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_mul121666_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_mul121666_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sq_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sq_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_sub_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_sub_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
-
-crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo: crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo -MD -MP -MF crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Tpo -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Tpo crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-fe_tobytes_curve25519_ref10.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c' object='crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/ref10/libsodium_la-fe_tobytes_curve25519_ref10.lo `test -f 'crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/ref/libsodium_la-salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/salsa20_ref.c
 
 crypto_scalarmult/curve25519/sandy2x/libsodium_la-curve25519_sandy2x.lo: crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/curve25519/sandy2x/libsodium_la-curve25519_sandy2x.lo -MD -MP -MF crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-curve25519_sandy2x.Tpo -c -o crypto_scalarmult/curve25519/sandy2x/libsodium_la-curve25519_sandy2x.lo `test -f 'crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c
@@ -3270,152 +2806,159 @@ crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe_frombytes_sandy2x.lo: crypt
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/curve25519/sandy2x/libsodium_la-fe_frombytes_sandy2x.lo `test -f 'crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c' || echo '$(srcdir)/'`crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c
 
-crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo: crypto_stream/salsa20/ref/stream_salsa20_ref.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo -MD -MP -MF crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Tpo -c -o crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/stream_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/stream_salsa20_ref.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Tpo crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-stream_salsa20_ref.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/ref/stream_salsa20_ref.c' object='crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo: crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo -MD -MP -MF crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xchacha20poly1305.Tpo -c -o crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo `test -f 'crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xchacha20poly1305.Tpo crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xchacha20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c' object='crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/ref/libsodium_la-stream_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/stream_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/stream_salsa20_ref.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xchacha20poly1305/libsodium_la-box_curve25519xchacha20poly1305.lo `test -f 'crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xchacha20poly1305/box_curve25519xchacha20poly1305.c
 
-crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo: crypto_stream/salsa20/ref/xor_salsa20_ref.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo -MD -MP -MF crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Tpo -c -o crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/xor_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/xor_salsa20_ref.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Tpo crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-xor_salsa20_ref.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/ref/xor_salsa20_ref.c' object='crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo: crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo -MD -MP -MF crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_seal_curve25519xchacha20poly1305.Tpo -c -o crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo `test -f 'crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_seal_curve25519xchacha20poly1305.Tpo crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_seal_curve25519xchacha20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c' object='crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/ref/libsodium_la-xor_salsa20_ref.lo `test -f 'crypto_stream/salsa20/ref/xor_salsa20_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa20/ref/xor_salsa20_ref.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_box/curve25519xchacha20poly1305/libsodium_la-box_seal_curve25519xchacha20poly1305.lo `test -f 'crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_box/curve25519xchacha20poly1305/box_seal_curve25519xchacha20poly1305.c
 
-crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo: crypto_core/salsa2012/ref/core_salsa2012.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo -MD -MP -MF crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Tpo -c -o crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo `test -f 'crypto_core/salsa2012/ref/core_salsa2012.c' || echo '$(srcdir)/'`crypto_core/salsa2012/ref/core_salsa2012.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Tpo crypto_core/salsa2012/ref/$(DEPDIR)/libsodium_la-core_salsa2012.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/salsa2012/ref/core_salsa2012.c' object='crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_core/ed25519/libsodium_la-core_ed25519.lo: crypto_core/ed25519/core_ed25519.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/ed25519/libsodium_la-core_ed25519.lo -MD -MP -MF crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ed25519.Tpo -c -o crypto_core/ed25519/libsodium_la-core_ed25519.lo `test -f 'crypto_core/ed25519/core_ed25519.c' || echo '$(srcdir)/'`crypto_core/ed25519/core_ed25519.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ed25519.Tpo crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ed25519.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/ed25519/core_ed25519.c' object='crypto_core/ed25519/libsodium_la-core_ed25519.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa2012/ref/libsodium_la-core_salsa2012.lo `test -f 'crypto_core/salsa2012/ref/core_salsa2012.c' || echo '$(srcdir)/'`crypto_core/salsa2012/ref/core_salsa2012.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/ed25519/libsodium_la-core_ed25519.lo `test -f 'crypto_core/ed25519/core_ed25519.c' || echo '$(srcdir)/'`crypto_core/ed25519/core_ed25519.c
 
-crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo: crypto_core/salsa2012/core_salsa2012_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo -MD -MP -MF crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Tpo -c -o crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo `test -f 'crypto_core/salsa2012/core_salsa2012_api.c' || echo '$(srcdir)/'`crypto_core/salsa2012/core_salsa2012_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Tpo crypto_core/salsa2012/$(DEPDIR)/libsodium_la-core_salsa2012_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/salsa2012/core_salsa2012_api.c' object='crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_core/ed25519/libsodium_la-core_ristretto255.lo: crypto_core/ed25519/core_ristretto255.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/ed25519/libsodium_la-core_ristretto255.lo -MD -MP -MF crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ristretto255.Tpo -c -o crypto_core/ed25519/libsodium_la-core_ristretto255.lo `test -f 'crypto_core/ed25519/core_ristretto255.c' || echo '$(srcdir)/'`crypto_core/ed25519/core_ristretto255.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ristretto255.Tpo crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ristretto255.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/ed25519/core_ristretto255.c' object='crypto_core/ed25519/libsodium_la-core_ristretto255.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa2012/libsodium_la-core_salsa2012_api.lo `test -f 'crypto_core/salsa2012/core_salsa2012_api.c' || echo '$(srcdir)/'`crypto_core/salsa2012/core_salsa2012_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/ed25519/libsodium_la-core_ristretto255.lo `test -f 'crypto_core/ed25519/core_ristretto255.c' || echo '$(srcdir)/'`crypto_core/ed25519/core_ristretto255.c
 
-crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo: crypto_core/salsa208/ref/core_salsa208.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo -MD -MP -MF crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Tpo -c -o crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo `test -f 'crypto_core/salsa208/ref/core_salsa208.c' || echo '$(srcdir)/'`crypto_core/salsa208/ref/core_salsa208.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Tpo crypto_core/salsa208/ref/$(DEPDIR)/libsodium_la-core_salsa208.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/salsa208/ref/core_salsa208.c' object='crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo: crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa208/ref/libsodium_la-core_salsa208.lo `test -f 'crypto_core/salsa208/ref/core_salsa208.c' || echo '$(srcdir)/'`crypto_core/salsa208/ref/core_salsa208.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-crypto_scrypt-common.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
 
-crypto_core/salsa208/libsodium_la-core_salsa208_api.lo: crypto_core/salsa208/core_salsa208_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_core/salsa208/libsodium_la-core_salsa208_api.lo -MD -MP -MF crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Tpo -c -o crypto_core/salsa208/libsodium_la-core_salsa208_api.lo `test -f 'crypto_core/salsa208/core_salsa208_api.c' || echo '$(srcdir)/'`crypto_core/salsa208/core_salsa208_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Tpo crypto_core/salsa208/$(DEPDIR)/libsodium_la-core_salsa208_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_core/salsa208/core_salsa208_api.c' object='crypto_core/salsa208/libsodium_la-core_salsa208_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo: crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_core/salsa208/libsodium_la-core_salsa208_api.lo `test -f 'crypto_core/salsa208/core_salsa208_api.c' || echo '$(srcdir)/'`crypto_core/salsa208/core_salsa208_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-scrypt_platform.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
 
-crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo: crypto_sign/ed25519/ref10/obsolete.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo `test -f 'crypto_sign/ed25519/ref10/obsolete.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/obsolete.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/obsolete.c' object='crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo: crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo `test -f 'crypto_sign/ed25519/ref10/obsolete.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/obsolete.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pbkdf2-sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
 
-crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo: crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-afternm_aes128ctr.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/afternm_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo: crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Tpo crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' object='crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/libsodium_la-pwhash_scryptsalsa208sha256.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
+
+crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo: crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Tpo crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' object='crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/nosse/libsodium_la-pwhash_scryptsalsa208sha256_nosse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
 
-crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo: crypto_stream/aes128ctr/stream_aes128ctr_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo -MD -MP -MF crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Tpo -c -o crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo `test -f 'crypto_stream/aes128ctr/stream_aes128ctr_api.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/stream_aes128ctr_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Tpo crypto_stream/aes128ctr/$(DEPDIR)/libsodium_la-stream_aes128ctr_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/stream_aes128ctr_api.c' object='crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo: crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo -MD -MP -MF crypto_scalarmult/ed25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_ed25519_ref10.Tpo -c -o crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo `test -f 'crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/ed25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_ed25519_ref10.Tpo crypto_scalarmult/ed25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_ed25519_ref10.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c' object='crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/libsodium_la-stream_aes128ctr_api.lo `test -f 'crypto_stream/aes128ctr/stream_aes128ctr_api.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/stream_aes128ctr_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/ed25519/ref10/libsodium_la-scalarmult_ed25519_ref10.lo `test -f 'crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/ed25519/ref10/scalarmult_ed25519_ref10.c
 
-crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo: crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-beforenm_aes128ctr.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo: crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo -MD -MP -MF crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/libsodium_la-scalarmult_ristretto255_ref10.Tpo -c -o crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo `test -f 'crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/libsodium_la-scalarmult_ristretto255_ref10.Tpo crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/libsodium_la-scalarmult_ristretto255_ref10.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c' object='crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-beforenm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_scalarmult/ristretto255/ref10/libsodium_la-scalarmult_ristretto255_ref10.lo `test -f 'crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c' || echo '$(srcdir)/'`crypto_scalarmult/ristretto255/ref10/scalarmult_ristretto255_ref10.c
 
-crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo: crypto_stream/aes128ctr/portable/common_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/common_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/common_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-common_aes128ctr.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/common_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo: crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo -MD -MP -MF crypto_secretbox/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretbox_xchacha20poly1305.Tpo -c -o crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo `test -f 'crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_secretbox/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretbox_xchacha20poly1305.Tpo crypto_secretbox/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretbox_xchacha20poly1305.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c' object='crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-common_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/common_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/common_aes128ctr.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_secretbox/xchacha20poly1305/libsodium_la-secretbox_xchacha20poly1305.lo `test -f 'crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c' || echo '$(srcdir)/'`crypto_secretbox/xchacha20poly1305/secretbox_xchacha20poly1305.c
 
-crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo: crypto_stream/aes128ctr/portable/consts_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/consts_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/consts_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-consts_aes128ctr.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/consts_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo: crypto_shorthash/siphash24/shorthash_siphashx24.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo -MD -MP -MF crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphashx24.Tpo -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphashx24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphashx24.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphashx24.Tpo crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphashx24.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_shorthash/siphash24/shorthash_siphashx24.c' object='crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-consts_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/consts_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/consts_aes128ctr.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/libsodium_la-shorthash_siphashx24.lo `test -f 'crypto_shorthash/siphash24/shorthash_siphashx24.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/shorthash_siphashx24.c
 
-crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo: crypto_stream/aes128ctr/portable/int128_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/int128_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/int128_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-int128_aes128ctr.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/int128_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo: crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo -MD -MP -MF crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphashx24_ref.Tpo -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphashx24_ref.Tpo crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphashx24_ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c' object='crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-int128_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/int128_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/int128_aes128ctr.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_shorthash/siphash24/ref/libsodium_la-shorthash_siphashx24_ref.lo `test -f 'crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c' || echo '$(srcdir)/'`crypto_shorthash/siphash24/ref/shorthash_siphashx24_ref.c
 
-crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo: crypto_stream/aes128ctr/portable/stream_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/stream_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/stream_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-stream_aes128ctr.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/stream_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo: crypto_sign/ed25519/ref10/obsolete.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo -MD -MP -MF crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Tpo -c -o crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo `test -f 'crypto_sign/ed25519/ref10/obsolete.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/obsolete.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Tpo crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_sign/ed25519/ref10/obsolete.c' object='crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-stream_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/stream_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/stream_aes128ctr.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_sign/ed25519/ref10/libsodium_la-obsolete.lo `test -f 'crypto_sign/ed25519/ref10/obsolete.c' || echo '$(srcdir)/'`crypto_sign/ed25519/ref10/obsolete.c
 
-crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo: crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo -MD -MP -MF crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Tpo -c -o crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Tpo crypto_stream/aes128ctr/portable/$(DEPDIR)/libsodium_la-xor_afternm_aes128ctr.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c' object='crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo: crypto_stream/salsa2012/ref/stream_salsa2012_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo -MD -MP -MF crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012_ref.Tpo -c -o crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo `test -f 'crypto_stream/salsa2012/ref/stream_salsa2012_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/stream_salsa2012_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012_ref.Tpo crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012_ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa2012/ref/stream_salsa2012_ref.c' object='crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/aes128ctr/portable/libsodium_la-xor_afternm_aes128ctr.lo `test -f 'crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c' || echo '$(srcdir)/'`crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012_ref.lo `test -f 'crypto_stream/salsa2012/ref/stream_salsa2012_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/stream_salsa2012_ref.c
 
-crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo: crypto_stream/salsa2012/stream_salsa2012_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo -MD -MP -MF crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Tpo -c -o crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo `test -f 'crypto_stream/salsa2012/stream_salsa2012_api.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/stream_salsa2012_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Tpo crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa2012/stream_salsa2012_api.c' object='crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo: crypto_stream/salsa2012/stream_salsa2012.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo -MD -MP -MF crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012.Tpo -c -o crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo `test -f 'crypto_stream/salsa2012/stream_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/stream_salsa2012.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012.Tpo crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa2012/stream_salsa2012.c' object='crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/libsodium_la-stream_salsa2012_api.lo `test -f 'crypto_stream/salsa2012/stream_salsa2012_api.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/stream_salsa2012_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/libsodium_la-stream_salsa2012.lo `test -f 'crypto_stream/salsa2012/stream_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/stream_salsa2012.c
 
-crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo: crypto_stream/salsa2012/ref/stream_salsa2012.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo -MD -MP -MF crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Tpo -c -o crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/stream_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/stream_salsa2012.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Tpo crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa2012/ref/stream_salsa2012.c' object='crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo: crypto_stream/salsa208/ref/stream_salsa208_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo -MD -MP -MF crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208_ref.Tpo -c -o crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo `test -f 'crypto_stream/salsa208/ref/stream_salsa208_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/stream_salsa208_ref.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208_ref.Tpo crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208_ref.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa208/ref/stream_salsa208_ref.c' object='crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/ref/libsodium_la-stream_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/stream_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/stream_salsa2012.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/ref/libsodium_la-stream_salsa208_ref.lo `test -f 'crypto_stream/salsa208/ref/stream_salsa208_ref.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/stream_salsa208_ref.c
 
-crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo: crypto_stream/salsa2012/ref/xor_salsa2012.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo -MD -MP -MF crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Tpo -c -o crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/xor_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/xor_salsa2012.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Tpo crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-xor_salsa2012.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa2012/ref/xor_salsa2012.c' object='crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa208/libsodium_la-stream_salsa208.lo: crypto_stream/salsa208/stream_salsa208.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/libsodium_la-stream_salsa208.lo -MD -MP -MF crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208.Tpo -c -o crypto_stream/salsa208/libsodium_la-stream_salsa208.lo `test -f 'crypto_stream/salsa208/stream_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/stream_salsa208.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208.Tpo crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa208/stream_salsa208.c' object='crypto_stream/salsa208/libsodium_la-stream_salsa208.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa2012/ref/libsodium_la-xor_salsa2012.lo `test -f 'crypto_stream/salsa2012/ref/xor_salsa2012.c' || echo '$(srcdir)/'`crypto_stream/salsa2012/ref/xor_salsa2012.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/libsodium_la-stream_salsa208.lo `test -f 'crypto_stream/salsa208/stream_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/stream_salsa208.c
 
-crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo: crypto_stream/salsa208/stream_salsa208_api.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo -MD -MP -MF crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Tpo -c -o crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo `test -f 'crypto_stream/salsa208/stream_salsa208_api.c' || echo '$(srcdir)/'`crypto_stream/salsa208/stream_salsa208_api.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Tpo crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208_api.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa208/stream_salsa208_api.c' object='crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo: crypto_stream/xchacha20/stream_xchacha20.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo -MD -MP -MF crypto_stream/xchacha20/$(DEPDIR)/libsodium_la-stream_xchacha20.Tpo -c -o crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo `test -f 'crypto_stream/xchacha20/stream_xchacha20.c' || echo '$(srcdir)/'`crypto_stream/xchacha20/stream_xchacha20.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/xchacha20/$(DEPDIR)/libsodium_la-stream_xchacha20.Tpo crypto_stream/xchacha20/$(DEPDIR)/libsodium_la-stream_xchacha20.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/xchacha20/stream_xchacha20.c' object='crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/libsodium_la-stream_salsa208_api.lo `test -f 'crypto_stream/salsa208/stream_salsa208_api.c' || echo '$(srcdir)/'`crypto_stream/salsa208/stream_salsa208_api.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/xchacha20/libsodium_la-stream_xchacha20.lo `test -f 'crypto_stream/xchacha20/stream_xchacha20.c' || echo '$(srcdir)/'`crypto_stream/xchacha20/stream_xchacha20.c
 
-crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo: crypto_stream/salsa208/ref/stream_salsa208.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo -MD -MP -MF crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Tpo -c -o crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo `test -f 'crypto_stream/salsa208/ref/stream_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/stream_salsa208.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Tpo crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa208/ref/stream_salsa208.c' object='crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo' libtool=yes @AMDEPBACKSLASH@
+randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo: randombytes/sysrandom/randombytes_sysrandom.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo -MD -MP -MF randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Tpo -c -o randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo `test -f 'randombytes/sysrandom/randombytes_sysrandom.c' || echo '$(srcdir)/'`randombytes/sysrandom/randombytes_sysrandom.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Tpo randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='randombytes/sysrandom/randombytes_sysrandom.c' object='randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/ref/libsodium_la-stream_salsa208.lo `test -f 'crypto_stream/salsa208/ref/stream_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/stream_salsa208.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o randombytes/sysrandom/libsodium_la-randombytes_sysrandom.lo `test -f 'randombytes/sysrandom/randombytes_sysrandom.c' || echo '$(srcdir)/'`randombytes/sysrandom/randombytes_sysrandom.c
 
-crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo: crypto_stream/salsa208/ref/xor_salsa208.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo -MD -MP -MF crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Tpo -c -o crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo `test -f 'crypto_stream/salsa208/ref/xor_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/xor_salsa208.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Tpo crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-xor_salsa208.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa208/ref/xor_salsa208.c' object='crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo: crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo -MD -MP -MF crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Tpo -c -o crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo `test -f 'crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Tpo crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c' object='crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsodium_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa208/ref/libsodium_la-xor_salsa208.lo `test -f 'crypto_stream/salsa208/ref/xor_salsa208.c' || echo '$(srcdir)/'`crypto_stream/salsa208/ref/xor_salsa208.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo `test -f 'crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
 
 crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo: crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo -MD -MP -MF crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsse2_la-pwhash_scryptsalsa208sha256_sse.Tpo -c -o crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
@@ -3424,33 +2967,40 @@ crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_ss
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
 @am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/scryptsalsa208sha256/sse/libsse2_la-pwhash_scryptsalsa208sha256_sse.lo `test -f 'crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c' || echo '$(srcdir)/'`crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
 
-crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo: crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo -MD -MP -MF crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Tpo -c -o crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo `test -f 'crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Tpo crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c' object='crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/salsa20/xmm6int/libsse2_la-salsa20_xmm6int-sse2.lo: crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/salsa20/xmm6int/libsse2_la-salsa20_xmm6int-sse2.lo -MD -MP -MF crypto_stream/salsa20/xmm6int/$(DEPDIR)/libsse2_la-salsa20_xmm6int-sse2.Tpo -c -o crypto_stream/salsa20/xmm6int/libsse2_la-salsa20_xmm6int-sse2.lo `test -f 'crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/salsa20/xmm6int/$(DEPDIR)/libsse2_la-salsa20_xmm6int-sse2.Tpo crypto_stream/salsa20/xmm6int/$(DEPDIR)/libsse2_la-salsa20_xmm6int-sse2.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c' object='crypto_stream/salsa20/xmm6int/libsse2_la-salsa20_xmm6int-sse2.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_onetimeauth/poly1305/sse2/libsse2_la-poly1305_sse2.lo `test -f 'crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c' || echo '$(srcdir)/'`crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse2_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/salsa20/xmm6int/libsse2_la-salsa20_xmm6int-sse2.lo `test -f 'crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c' || echo '$(srcdir)/'`crypto_stream/salsa20/xmm6int/salsa20_xmm6int-sse2.c
+
+crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo: crypto_generichash/blake2b/ref/blake2b-compress-sse41.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse41_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo -MD -MP -MF crypto_generichash/blake2b/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Tpo -c -o crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-sse41.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-sse41.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2b/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Tpo crypto_generichash/blake2b/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2b/ref/blake2b-compress-sse41.c' object='crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo' libtool=yes @AMDEPBACKSLASH@
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse41_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2b/ref/libsse41_la-blake2b-compress-sse41.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-sse41.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-sse41.c
 
-crypto_generichash/blake2/ref/libsse41_la-blake2b-compress-sse41.lo: crypto_generichash/blake2/ref/blake2b-compress-sse41.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse41_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/ref/libsse41_la-blake2b-compress-sse41.lo -MD -MP -MF crypto_generichash/blake2/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Tpo -c -o crypto_generichash/blake2/ref/libsse41_la-blake2b-compress-sse41.lo `test -f 'crypto_generichash/blake2/ref/blake2b-compress-sse41.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-compress-sse41.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Tpo crypto_generichash/blake2/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2/ref/blake2b-compress-sse41.c' object='crypto_generichash/blake2/ref/libsse41_la-blake2b-compress-sse41.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo: crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo -MD -MP -MF crypto_generichash/blake2b/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Tpo -c -o crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2b/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Tpo crypto_generichash/blake2b/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c' object='crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libsse41_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/ref/libsse41_la-blake2b-compress-sse41.lo `test -f 'crypto_generichash/blake2/ref/blake2b-compress-sse41.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-compress-sse41.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2b/ref/libssse3_la-blake2b-compress-ssse3.lo `test -f 'crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c' || echo '$(srcdir)/'`crypto_generichash/blake2b/ref/blake2b-compress-ssse3.c
 
-crypto_generichash/blake2/ref/libssse3_la-blake2b-compress-ssse3.lo: crypto_generichash/blake2/ref/blake2b-compress-ssse3.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_generichash/blake2/ref/libssse3_la-blake2b-compress-ssse3.lo -MD -MP -MF crypto_generichash/blake2/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Tpo -c -o crypto_generichash/blake2/ref/libssse3_la-blake2b-compress-ssse3.lo `test -f 'crypto_generichash/blake2/ref/blake2b-compress-ssse3.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-compress-ssse3.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_generichash/blake2/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Tpo crypto_generichash/blake2/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_generichash/blake2/ref/blake2b-compress-ssse3.c' object='crypto_generichash/blake2/ref/libssse3_la-blake2b-compress-ssse3.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo: crypto_pwhash/argon2/argon2-fill-block-ssse3.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo -MD -MP -MF crypto_pwhash/argon2/$(DEPDIR)/libssse3_la-argon2-fill-block-ssse3.Tpo -c -o crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-ssse3.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-ssse3.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_pwhash/argon2/$(DEPDIR)/libssse3_la-argon2-fill-block-ssse3.Tpo crypto_pwhash/argon2/$(DEPDIR)/libssse3_la-argon2-fill-block-ssse3.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_pwhash/argon2/argon2-fill-block-ssse3.c' object='crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_generichash/blake2/ref/libssse3_la-blake2b-compress-ssse3.lo `test -f 'crypto_generichash/blake2/ref/blake2b-compress-ssse3.c' || echo '$(srcdir)/'`crypto_generichash/blake2/ref/blake2b-compress-ssse3.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_pwhash/argon2/libssse3_la-argon2-fill-block-ssse3.lo `test -f 'crypto_pwhash/argon2/argon2-fill-block-ssse3.c' || echo '$(srcdir)/'`crypto_pwhash/argon2/argon2-fill-block-ssse3.c
 
-crypto_stream/chacha20/vec/libssse3_la-stream_chacha20_vec.lo: crypto_stream/chacha20/vec/stream_chacha20_vec.c
-@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/vec/libssse3_la-stream_chacha20_vec.lo -MD -MP -MF crypto_stream/chacha20/vec/$(DEPDIR)/libssse3_la-stream_chacha20_vec.Tpo -c -o crypto_stream/chacha20/vec/libssse3_la-stream_chacha20_vec.lo `test -f 'crypto_stream/chacha20/vec/stream_chacha20_vec.c' || echo '$(srcdir)/'`crypto_stream/chacha20/vec/stream_chacha20_vec.c
-@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/chacha20/vec/$(DEPDIR)/libssse3_la-stream_chacha20_vec.Tpo crypto_stream/chacha20/vec/$(DEPDIR)/libssse3_la-stream_chacha20_vec.Plo
-@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/chacha20/vec/stream_chacha20_vec.c' object='crypto_stream/chacha20/vec/libssse3_la-stream_chacha20_vec.lo' libtool=yes @AMDEPBACKSLASH@
+crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo: crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c
+@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo -MD -MP -MF crypto_stream/chacha20/dolbeau/$(DEPDIR)/libssse3_la-chacha20_dolbeau-ssse3.Tpo -c -o crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo `test -f 'crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c' || echo '$(srcdir)/'`crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c
+@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) crypto_stream/chacha20/dolbeau/$(DEPDIR)/libssse3_la-chacha20_dolbeau-ssse3.Tpo crypto_stream/chacha20/dolbeau/$(DEPDIR)/libssse3_la-chacha20_dolbeau-ssse3.Plo
+@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c' object='crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo' libtool=yes @AMDEPBACKSLASH@
 @AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
-@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/vec/libssse3_la-stream_chacha20_vec.lo `test -f 'crypto_stream/chacha20/vec/stream_chacha20_vec.c' || echo '$(srcdir)/'`crypto_stream/chacha20/vec/stream_chacha20_vec.c
+@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libssse3_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o crypto_stream/chacha20/dolbeau/libssse3_la-chacha20_dolbeau-ssse3.lo `test -f 'crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c' || echo '$(srcdir)/'`crypto_stream/chacha20/dolbeau/chacha20_dolbeau-ssse3.c
 
 mostlyclean-libtool:
 	-rm -f *.lo
@@ -3459,47 +3009,50 @@ clean-libtool:
 	-rm -rf .libs _libs
 	-rm -rf crypto_aead/aes256gcm/aesni/.libs crypto_aead/aes256gcm/aesni/_libs
 	-rm -rf crypto_aead/chacha20poly1305/sodium/.libs crypto_aead/chacha20poly1305/sodium/_libs
+	-rm -rf crypto_aead/xchacha20poly1305/sodium/.libs crypto_aead/xchacha20poly1305/sodium/_libs
 	-rm -rf crypto_auth/.libs crypto_auth/_libs
 	-rm -rf crypto_auth/hmacsha256/.libs crypto_auth/hmacsha256/_libs
-	-rm -rf crypto_auth/hmacsha256/cp/.libs crypto_auth/hmacsha256/cp/_libs
 	-rm -rf crypto_auth/hmacsha512/.libs crypto_auth/hmacsha512/_libs
-	-rm -rf crypto_auth/hmacsha512/cp/.libs crypto_auth/hmacsha512/cp/_libs
 	-rm -rf crypto_auth/hmacsha512256/.libs crypto_auth/hmacsha512256/_libs
-	-rm -rf crypto_auth/hmacsha512256/cp/.libs crypto_auth/hmacsha512256/cp/_libs
 	-rm -rf crypto_box/.libs crypto_box/_libs
+	-rm -rf crypto_box/curve25519xchacha20poly1305/.libs crypto_box/curve25519xchacha20poly1305/_libs
 	-rm -rf crypto_box/curve25519xsalsa20poly1305/.libs crypto_box/curve25519xsalsa20poly1305/_libs
-	-rm -rf crypto_box/curve25519xsalsa20poly1305/ref/.libs crypto_box/curve25519xsalsa20poly1305/ref/_libs
+	-rm -rf crypto_core/ed25519/.libs crypto_core/ed25519/_libs
+	-rm -rf crypto_core/ed25519/ref10/.libs crypto_core/ed25519/ref10/_libs
+	-rm -rf crypto_core/hchacha20/.libs crypto_core/hchacha20/_libs
 	-rm -rf crypto_core/hsalsa20/.libs crypto_core/hsalsa20/_libs
 	-rm -rf crypto_core/hsalsa20/ref2/.libs crypto_core/hsalsa20/ref2/_libs
-	-rm -rf crypto_core/salsa20/.libs crypto_core/salsa20/_libs
-	-rm -rf crypto_core/salsa20/ref/.libs crypto_core/salsa20/ref/_libs
-	-rm -rf crypto_core/salsa2012/.libs crypto_core/salsa2012/_libs
-	-rm -rf crypto_core/salsa2012/ref/.libs crypto_core/salsa2012/ref/_libs
-	-rm -rf crypto_core/salsa208/.libs crypto_core/salsa208/_libs
-	-rm -rf crypto_core/salsa208/ref/.libs crypto_core/salsa208/ref/_libs
+	-rm -rf crypto_core/salsa/ref/.libs crypto_core/salsa/ref/_libs
 	-rm -rf crypto_generichash/.libs crypto_generichash/_libs
-	-rm -rf crypto_generichash/blake2/.libs crypto_generichash/blake2/_libs
-	-rm -rf crypto_generichash/blake2/ref/.libs crypto_generichash/blake2/ref/_libs
+	-rm -rf crypto_generichash/blake2b/.libs crypto_generichash/blake2b/_libs
+	-rm -rf crypto_generichash/blake2b/ref/.libs crypto_generichash/blake2b/ref/_libs
 	-rm -rf crypto_hash/.libs crypto_hash/_libs
 	-rm -rf crypto_hash/sha256/.libs crypto_hash/sha256/_libs
 	-rm -rf crypto_hash/sha256/cp/.libs crypto_hash/sha256/cp/_libs
 	-rm -rf crypto_hash/sha512/.libs crypto_hash/sha512/_libs
 	-rm -rf crypto_hash/sha512/cp/.libs crypto_hash/sha512/cp/_libs
+	-rm -rf crypto_kdf/.libs crypto_kdf/_libs
+	-rm -rf crypto_kdf/blake2b/.libs crypto_kdf/blake2b/_libs
+	-rm -rf crypto_kx/.libs crypto_kx/_libs
 	-rm -rf crypto_onetimeauth/.libs crypto_onetimeauth/_libs
 	-rm -rf crypto_onetimeauth/poly1305/.libs crypto_onetimeauth/poly1305/_libs
 	-rm -rf crypto_onetimeauth/poly1305/donna/.libs crypto_onetimeauth/poly1305/donna/_libs
 	-rm -rf crypto_onetimeauth/poly1305/sse2/.libs crypto_onetimeauth/poly1305/sse2/_libs
+	-rm -rf crypto_pwhash/.libs crypto_pwhash/_libs
+	-rm -rf crypto_pwhash/argon2/.libs crypto_pwhash/argon2/_libs
 	-rm -rf crypto_pwhash/scryptsalsa208sha256/.libs crypto_pwhash/scryptsalsa208sha256/_libs
 	-rm -rf crypto_pwhash/scryptsalsa208sha256/nosse/.libs crypto_pwhash/scryptsalsa208sha256/nosse/_libs
 	-rm -rf crypto_pwhash/scryptsalsa208sha256/sse/.libs crypto_pwhash/scryptsalsa208sha256/sse/_libs
 	-rm -rf crypto_scalarmult/.libs crypto_scalarmult/_libs
 	-rm -rf crypto_scalarmult/curve25519/.libs crypto_scalarmult/curve25519/_libs
-	-rm -rf crypto_scalarmult/curve25519/donna_c64/.libs crypto_scalarmult/curve25519/donna_c64/_libs
 	-rm -rf crypto_scalarmult/curve25519/ref10/.libs crypto_scalarmult/curve25519/ref10/_libs
 	-rm -rf crypto_scalarmult/curve25519/sandy2x/.libs crypto_scalarmult/curve25519/sandy2x/_libs
+	-rm -rf crypto_scalarmult/ed25519/ref10/.libs crypto_scalarmult/ed25519/ref10/_libs
+	-rm -rf crypto_scalarmult/ristretto255/ref10/.libs crypto_scalarmult/ristretto255/ref10/_libs
 	-rm -rf crypto_secretbox/.libs crypto_secretbox/_libs
+	-rm -rf crypto_secretbox/xchacha20poly1305/.libs crypto_secretbox/xchacha20poly1305/_libs
 	-rm -rf crypto_secretbox/xsalsa20poly1305/.libs crypto_secretbox/xsalsa20poly1305/_libs
-	-rm -rf crypto_secretbox/xsalsa20poly1305/ref/.libs crypto_secretbox/xsalsa20poly1305/ref/_libs
+	-rm -rf crypto_secretstream/xchacha20poly1305/.libs crypto_secretstream/xchacha20poly1305/_libs
 	-rm -rf crypto_shorthash/.libs crypto_shorthash/_libs
 	-rm -rf crypto_shorthash/siphash24/.libs crypto_shorthash/siphash24/_libs
 	-rm -rf crypto_shorthash/siphash24/ref/.libs crypto_shorthash/siphash24/ref/_libs
@@ -3507,31 +3060,45 @@ clean-libtool:
 	-rm -rf crypto_sign/ed25519/.libs crypto_sign/ed25519/_libs
 	-rm -rf crypto_sign/ed25519/ref10/.libs crypto_sign/ed25519/ref10/_libs
 	-rm -rf crypto_stream/.libs crypto_stream/_libs
-	-rm -rf crypto_stream/aes128ctr/.libs crypto_stream/aes128ctr/_libs
-	-rm -rf crypto_stream/aes128ctr/portable/.libs crypto_stream/aes128ctr/portable/_libs
 	-rm -rf crypto_stream/chacha20/.libs crypto_stream/chacha20/_libs
+	-rm -rf crypto_stream/chacha20/dolbeau/.libs crypto_stream/chacha20/dolbeau/_libs
 	-rm -rf crypto_stream/chacha20/ref/.libs crypto_stream/chacha20/ref/_libs
-	-rm -rf crypto_stream/chacha20/vec/.libs crypto_stream/chacha20/vec/_libs
 	-rm -rf crypto_stream/salsa20/.libs crypto_stream/salsa20/_libs
-	-rm -rf crypto_stream/salsa20/amd64_xmm6/.libs crypto_stream/salsa20/amd64_xmm6/_libs
 	-rm -rf crypto_stream/salsa20/ref/.libs crypto_stream/salsa20/ref/_libs
+	-rm -rf crypto_stream/salsa20/xmm6/.libs crypto_stream/salsa20/xmm6/_libs
+	-rm -rf crypto_stream/salsa20/xmm6int/.libs crypto_stream/salsa20/xmm6int/_libs
 	-rm -rf crypto_stream/salsa2012/.libs crypto_stream/salsa2012/_libs
 	-rm -rf crypto_stream/salsa2012/ref/.libs crypto_stream/salsa2012/ref/_libs
 	-rm -rf crypto_stream/salsa208/.libs crypto_stream/salsa208/_libs
 	-rm -rf crypto_stream/salsa208/ref/.libs crypto_stream/salsa208/ref/_libs
+	-rm -rf crypto_stream/xchacha20/.libs crypto_stream/xchacha20/_libs
 	-rm -rf crypto_stream/xsalsa20/.libs crypto_stream/xsalsa20/_libs
-	-rm -rf crypto_stream/xsalsa20/ref/.libs crypto_stream/xsalsa20/ref/_libs
-	-rm -rf crypto_verify/16/.libs crypto_verify/16/_libs
-	-rm -rf crypto_verify/16/ref/.libs crypto_verify/16/ref/_libs
-	-rm -rf crypto_verify/32/.libs crypto_verify/32/_libs
-	-rm -rf crypto_verify/32/ref/.libs crypto_verify/32/ref/_libs
-	-rm -rf crypto_verify/64/.libs crypto_verify/64/_libs
-	-rm -rf crypto_verify/64/ref/.libs crypto_verify/64/ref/_libs
+	-rm -rf crypto_verify/sodium/.libs crypto_verify/sodium/_libs
 	-rm -rf randombytes/.libs randombytes/_libs
-	-rm -rf randombytes/nativeclient/.libs randombytes/nativeclient/_libs
-	-rm -rf randombytes/salsa20/.libs randombytes/salsa20/_libs
+	-rm -rf randombytes/internal/.libs randombytes/internal/_libs
 	-rm -rf randombytes/sysrandom/.libs randombytes/sysrandom/_libs
 	-rm -rf sodium/.libs sodium/_libs
+install-defexecDATA: $(defexec_DATA)
+	@$(NORMAL_INSTALL)
+	@list='$(defexec_DATA)'; test -n "$(defexecdir)" || list=; \
+	if test -n "$$list"; then \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(defexecdir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(defexecdir)" || exit 1; \
+	fi; \
+	for p in $$list; do \
+	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
+	  echo "$$d$$p"; \
+	done | $(am__base_list) | \
+	while read files; do \
+	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(defexecdir)'"; \
+	  $(INSTALL_DATA) $$files "$(DESTDIR)$(defexecdir)" || exit $$?; \
+	done
+
+uninstall-defexecDATA:
+	@$(NORMAL_UNINSTALL)
+	@list='$(defexec_DATA)'; test -n "$(defexecdir)" || list=; \
+	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
+	dir='$(DESTDIR)$(defexecdir)'; $(am__uninstall_files_from_dir)
 
 # This directory's subdirectories are mostly independent; you can cd
 # into them and run 'make' without going through this Makefile.
@@ -3632,7 +3199,10 @@ cscopelist-am: $(am__tagged_files)
 distclean-tags:
 	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
 
-distdir: $(DISTFILES)
+distdir: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) distdir-am
+
+distdir-am: $(DISTFILES)
 	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	list='$(DISTFILES)'; \
@@ -3689,9 +3259,12 @@ distdir: $(DISTFILES)
 	done
 check-am: all-am
 check: check-recursive
-all-am: Makefile $(LTLIBRARIES) $(HEADERS)
+all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
 installdirs: installdirs-recursive
 installdirs-am:
+	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(defexecdir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
 install: install-recursive
 install-exec: install-exec-recursive
 install-data: install-data-recursive
@@ -3714,6 +3287,7 @@ install-strip:
 mostlyclean-generic:
 
 clean-generic:
+	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)
 
 distclean-generic:
 	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
@@ -3722,48 +3296,40 @@ distclean-generic:
 	-rm -f crypto_aead/aes256gcm/aesni/$(am__dirstamp)
 	-rm -f crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_aead/chacha20poly1305/sodium/$(am__dirstamp)
+	-rm -f crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_aead/xchacha20poly1305/sodium/$(am__dirstamp)
 	-rm -f crypto_auth/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_auth/$(am__dirstamp)
 	-rm -f crypto_auth/hmacsha256/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_auth/hmacsha256/$(am__dirstamp)
-	-rm -f crypto_auth/hmacsha256/cp/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_auth/hmacsha256/cp/$(am__dirstamp)
 	-rm -f crypto_auth/hmacsha512/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_auth/hmacsha512/$(am__dirstamp)
-	-rm -f crypto_auth/hmacsha512/cp/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_auth/hmacsha512/cp/$(am__dirstamp)
 	-rm -f crypto_auth/hmacsha512256/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_auth/hmacsha512256/$(am__dirstamp)
-	-rm -f crypto_auth/hmacsha512256/cp/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_auth/hmacsha512256/cp/$(am__dirstamp)
 	-rm -f crypto_box/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_box/$(am__dirstamp)
+	-rm -f crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_box/curve25519xchacha20poly1305/$(am__dirstamp)
 	-rm -f crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_box/curve25519xsalsa20poly1305/$(am__dirstamp)
-	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_box/curve25519xsalsa20poly1305/ref/$(am__dirstamp)
+	-rm -f crypto_core/ed25519/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_core/ed25519/$(am__dirstamp)
+	-rm -f crypto_core/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_core/ed25519/ref10/$(am__dirstamp)
+	-rm -f crypto_core/hchacha20/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_core/hchacha20/$(am__dirstamp)
 	-rm -f crypto_core/hsalsa20/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_core/hsalsa20/$(am__dirstamp)
 	-rm -f crypto_core/hsalsa20/ref2/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_core/hsalsa20/ref2/$(am__dirstamp)
-	-rm -f crypto_core/salsa20/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_core/salsa20/$(am__dirstamp)
-	-rm -f crypto_core/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_core/salsa20/ref/$(am__dirstamp)
-	-rm -f crypto_core/salsa2012/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_core/salsa2012/$(am__dirstamp)
-	-rm -f crypto_core/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_core/salsa2012/ref/$(am__dirstamp)
-	-rm -f crypto_core/salsa208/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_core/salsa208/$(am__dirstamp)
-	-rm -f crypto_core/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_core/salsa208/ref/$(am__dirstamp)
+	-rm -f crypto_core/salsa/ref/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_core/salsa/ref/$(am__dirstamp)
 	-rm -f crypto_generichash/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_generichash/$(am__dirstamp)
-	-rm -f crypto_generichash/blake2/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_generichash/blake2/$(am__dirstamp)
-	-rm -f crypto_generichash/blake2/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_generichash/blake2/ref/$(am__dirstamp)
+	-rm -f crypto_generichash/blake2b/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_generichash/blake2b/$(am__dirstamp)
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_generichash/blake2b/ref/$(am__dirstamp)
 	-rm -f crypto_hash/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_hash/$(am__dirstamp)
 	-rm -f crypto_hash/sha256/$(DEPDIR)/$(am__dirstamp)
@@ -3774,6 +3340,12 @@ distclean-generic:
 	-rm -f crypto_hash/sha512/$(am__dirstamp)
 	-rm -f crypto_hash/sha512/cp/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_hash/sha512/cp/$(am__dirstamp)
+	-rm -f crypto_kdf/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_kdf/$(am__dirstamp)
+	-rm -f crypto_kdf/blake2b/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_kdf/blake2b/$(am__dirstamp)
+	-rm -f crypto_kx/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_kx/$(am__dirstamp)
 	-rm -f crypto_onetimeauth/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_onetimeauth/$(am__dirstamp)
 	-rm -f crypto_onetimeauth/poly1305/$(DEPDIR)/$(am__dirstamp)
@@ -3782,6 +3354,10 @@ distclean-generic:
 	-rm -f crypto_onetimeauth/poly1305/donna/$(am__dirstamp)
 	-rm -f crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_onetimeauth/poly1305/sse2/$(am__dirstamp)
+	-rm -f crypto_pwhash/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_pwhash/$(am__dirstamp)
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_pwhash/argon2/$(am__dirstamp)
 	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_pwhash/scryptsalsa208sha256/$(am__dirstamp)
 	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/$(am__dirstamp)
@@ -3792,18 +3368,22 @@ distclean-generic:
 	-rm -f crypto_scalarmult/$(am__dirstamp)
 	-rm -f crypto_scalarmult/curve25519/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_scalarmult/curve25519/$(am__dirstamp)
-	-rm -f crypto_scalarmult/curve25519/donna_c64/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_scalarmult/curve25519/donna_c64/$(am__dirstamp)
 	-rm -f crypto_scalarmult/curve25519/ref10/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_scalarmult/curve25519/ref10/$(am__dirstamp)
 	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_scalarmult/curve25519/sandy2x/$(am__dirstamp)
+	-rm -f crypto_scalarmult/ed25519/ref10/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_scalarmult/ed25519/ref10/$(am__dirstamp)
+	-rm -f crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_scalarmult/ristretto255/ref10/$(am__dirstamp)
 	-rm -f crypto_secretbox/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_secretbox/$(am__dirstamp)
+	-rm -f crypto_secretbox/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_secretbox/xchacha20poly1305/$(am__dirstamp)
 	-rm -f crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_secretbox/xsalsa20poly1305/$(am__dirstamp)
-	-rm -f crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_secretbox/xsalsa20poly1305/ref/$(am__dirstamp)
+	-rm -f crypto_secretstream/xchacha20poly1305/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_secretstream/xchacha20poly1305/$(am__dirstamp)
 	-rm -f crypto_shorthash/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_shorthash/$(am__dirstamp)
 	-rm -f crypto_shorthash/siphash24/$(DEPDIR)/$(am__dirstamp)
@@ -3818,22 +3398,20 @@ distclean-generic:
 	-rm -f crypto_sign/ed25519/ref10/$(am__dirstamp)
 	-rm -f crypto_stream/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/$(am__dirstamp)
-	-rm -f crypto_stream/aes128ctr/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_stream/aes128ctr/$(am__dirstamp)
-	-rm -f crypto_stream/aes128ctr/portable/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_stream/aes128ctr/portable/$(am__dirstamp)
 	-rm -f crypto_stream/chacha20/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/chacha20/$(am__dirstamp)
+	-rm -f crypto_stream/chacha20/dolbeau/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_stream/chacha20/dolbeau/$(am__dirstamp)
 	-rm -f crypto_stream/chacha20/ref/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/chacha20/ref/$(am__dirstamp)
-	-rm -f crypto_stream/chacha20/vec/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_stream/chacha20/vec/$(am__dirstamp)
 	-rm -f crypto_stream/salsa20/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/salsa20/$(am__dirstamp)
-	-rm -f crypto_stream/salsa20/amd64_xmm6/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_stream/salsa20/amd64_xmm6/$(am__dirstamp)
 	-rm -f crypto_stream/salsa20/ref/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/salsa20/ref/$(am__dirstamp)
+	-rm -f crypto_stream/salsa20/xmm6/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_stream/salsa20/xmm6/$(am__dirstamp)
+	-rm -f crypto_stream/salsa20/xmm6int/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_stream/salsa20/xmm6int/$(am__dirstamp)
 	-rm -f crypto_stream/salsa2012/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/salsa2012/$(am__dirstamp)
 	-rm -f crypto_stream/salsa2012/ref/$(DEPDIR)/$(am__dirstamp)
@@ -3842,28 +3420,16 @@ distclean-generic:
 	-rm -f crypto_stream/salsa208/$(am__dirstamp)
 	-rm -f crypto_stream/salsa208/ref/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/salsa208/ref/$(am__dirstamp)
+	-rm -f crypto_stream/xchacha20/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_stream/xchacha20/$(am__dirstamp)
 	-rm -f crypto_stream/xsalsa20/$(DEPDIR)/$(am__dirstamp)
 	-rm -f crypto_stream/xsalsa20/$(am__dirstamp)
-	-rm -f crypto_stream/xsalsa20/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_stream/xsalsa20/ref/$(am__dirstamp)
-	-rm -f crypto_verify/16/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_verify/16/$(am__dirstamp)
-	-rm -f crypto_verify/16/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_verify/16/ref/$(am__dirstamp)
-	-rm -f crypto_verify/32/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_verify/32/$(am__dirstamp)
-	-rm -f crypto_verify/32/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_verify/32/ref/$(am__dirstamp)
-	-rm -f crypto_verify/64/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_verify/64/$(am__dirstamp)
-	-rm -f crypto_verify/64/ref/$(DEPDIR)/$(am__dirstamp)
-	-rm -f crypto_verify/64/ref/$(am__dirstamp)
+	-rm -f crypto_verify/sodium/$(DEPDIR)/$(am__dirstamp)
+	-rm -f crypto_verify/sodium/$(am__dirstamp)
 	-rm -f randombytes/$(DEPDIR)/$(am__dirstamp)
 	-rm -f randombytes/$(am__dirstamp)
-	-rm -f randombytes/nativeclient/$(DEPDIR)/$(am__dirstamp)
-	-rm -f randombytes/nativeclient/$(am__dirstamp)
-	-rm -f randombytes/salsa20/$(DEPDIR)/$(am__dirstamp)
-	-rm -f randombytes/salsa20/$(am__dirstamp)
+	-rm -f randombytes/internal/$(DEPDIR)/$(am__dirstamp)
+	-rm -f randombytes/internal/$(am__dirstamp)
 	-rm -f randombytes/sysrandom/$(DEPDIR)/$(am__dirstamp)
 	-rm -f randombytes/sysrandom/$(am__dirstamp)
 	-rm -f sodium/$(DEPDIR)/$(am__dirstamp)
@@ -3874,11 +3440,118 @@ maintainer-clean-generic:
 	@echo "it deletes files that may require special tools to rebuild."
 clean: clean-recursive
 
-clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
-	mostlyclean-am
+clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
+	clean-noinstLTLIBRARIES mostlyclean-am
 
 distclean: distclean-recursive
-	-rm -rf crypto_aead/aes256gcm/aesni/$(DEPDIR) crypto_aead/chacha20poly1305/sodium/$(DEPDIR) crypto_auth/$(DEPDIR) crypto_auth/hmacsha256/$(DEPDIR) crypto_auth/hmacsha256/cp/$(DEPDIR) crypto_auth/hmacsha512/$(DEPDIR) crypto_auth/hmacsha512/cp/$(DEPDIR) crypto_auth/hmacsha512256/$(DEPDIR) crypto_auth/hmacsha512256/cp/$(DEPDIR) crypto_box/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR) crypto_core/hsalsa20/$(DEPDIR) crypto_core/hsalsa20/ref2/$(DEPDIR) crypto_core/salsa20/$(DEPDIR) crypto_core/salsa20/ref/$(DEPDIR) crypto_core/salsa2012/$(DEPDIR) crypto_core/salsa2012/ref/$(DEPDIR) crypto_core/salsa208/$(DEPDIR) crypto_core/salsa208/ref/$(DEPDIR) crypto_generichash/$(DEPDIR) crypto_generichash/blake2/$(DEPDIR) crypto_generichash/blake2/ref/$(DEPDIR) crypto_hash/$(DEPDIR) crypto_hash/sha256/$(DEPDIR) crypto_hash/sha256/cp/$(DEPDIR) crypto_hash/sha512/$(DEPDIR) crypto_hash/sha512/cp/$(DEPDIR) crypto_onetimeauth/$(DEPDIR) crypto_onetimeauth/poly1305/$(DEPDIR) crypto_onetimeauth/poly1305/donna/$(DEPDIR) crypto_onetimeauth/poly1305/sse2/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR) crypto_scalarmult/$(DEPDIR) crypto_scalarmult/curve25519/$(DEPDIR) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR) crypto_scalarmult/curve25519/ref10/$(DEPDIR) crypto_scalarmult/curve25519/sandy2x/$(DEPDIR) crypto_secretbox/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR) crypto_shorthash/$(DEPDIR) crypto_shorthash/siphash24/$(DEPDIR) crypto_shorthash/siphash24/ref/$(DEPDIR) crypto_sign/$(DEPDIR) crypto_sign/ed25519/$(DEPDIR) crypto_sign/ed25519/ref10/$(DEPDIR) crypto_stream/$(DEPDIR) crypto_stream/aes128ctr/$(DEPDIR) crypto_stream/aes128ctr/portable/$(DEPDIR) crypto_stream/chacha20/$(DEPDIR) crypto_stream/chacha20/ref/$(DEPDIR) crypto_stream/chacha20/vec/$(DEPDIR) crypto_stream/salsa20/$(DEPDIR) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR) crypto_stream/salsa20/ref/$(DEPDIR) crypto_stream/salsa2012/$(DEPDIR) crypto_stream/salsa2012/ref/$(DEPDIR) crypto_stream/salsa208/$(DEPDIR) crypto_stream/salsa208/ref/$(DEPDIR) crypto_stream/xsalsa20/$(DEPDIR) crypto_stream/xsalsa20/ref/$(DEPDIR) crypto_verify/16/$(DEPDIR) crypto_verify/16/ref/$(DEPDIR) crypto_verify/32/$(DEPDIR) crypto_verify/32/ref/$(DEPDIR) crypto_verify/64/$(DEPDIR) crypto_verify/64/ref/$(DEPDIR) randombytes/$(DEPDIR) randombytes/nativeclient/$(DEPDIR) randombytes/salsa20/$(DEPDIR) randombytes/sysrandom/$(DEPDIR) sodium/$(DEPDIR)
+		-rm -f crypto_aead/aes256gcm/aesni/$(DEPDIR)/libaesni_la-aead_aes256gcm_aesni.Plo
+	-rm -f crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo
+	-rm -f crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_xchacha20poly1305.Plo
+	-rm -f crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo
+	-rm -f crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256.Plo
+	-rm -f crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512.Plo
+	-rm -f crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256.Plo
+	-rm -f crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Plo
+	-rm -f crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Plo
+	-rm -f crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Plo
+	-rm -f crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xchacha20poly1305.Plo
+	-rm -f crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_seal_curve25519xchacha20poly1305.Plo
+	-rm -f crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo
+	-rm -f crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ed25519.Plo
+	-rm -f crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ristretto255.Plo
+	-rm -f crypto_core/ed25519/ref10/$(DEPDIR)/libsodium_la-ed25519_ref10.Plo
+	-rm -f crypto_core/hchacha20/$(DEPDIR)/libsodium_la-core_hchacha20.Plo
+	-rm -f crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo
+	-rm -f crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20_ref2.Plo
+	-rm -f crypto_core/salsa/ref/$(DEPDIR)/libsodium_la-core_salsa_ref.Plo
+	-rm -f crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Plo
+	-rm -f crypto_generichash/blake2b/$(DEPDIR)/libsodium_la-generichash_blake2.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libavx2_la-blake2b-compress-avx2.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Plo
+	-rm -f crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Plo
+	-rm -f crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256.Plo
+	-rm -f crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256_cp.Plo
+	-rm -f crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512.Plo
+	-rm -f crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512_cp.Plo
+	-rm -f crypto_kdf/$(DEPDIR)/libsodium_la-crypto_kdf.Plo
+	-rm -f crypto_kdf/blake2b/$(DEPDIR)/libsodium_la-kdf_blake2b.Plo
+	-rm -f crypto_kx/$(DEPDIR)/libsodium_la-crypto_kx.Plo
+	-rm -f crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Plo
+	-rm -f crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Plo
+	-rm -f crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-poly1305_donna.Plo
+	-rm -f crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Plo
+	-rm -f crypto_pwhash/$(DEPDIR)/libsodium_la-crypto_pwhash.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libavx2_la-argon2-fill-block-avx2.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libavx512f_la-argon2-fill-block-avx512f.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-core.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-encoding.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-fill-block-ref.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-blake2b-long.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2i.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2id.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libssse3_la-argon2-fill-block-ssse3.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsse2_la-pwhash_scryptsalsa208sha256_sse.Plo
+	-rm -f crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Plo
+	-rm -f crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Plo
+	-rm -f crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-x25519_ref10.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-curve25519_sandy2x.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe51_invert.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe_frombytes_sandy2x.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Plo
+	-rm -f crypto_scalarmult/ed25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_ed25519_ref10.Plo
+	-rm -f crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/libsodium_la-scalarmult_ristretto255_ref10.Plo
+	-rm -f crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Plo
+	-rm -f crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Plo
+	-rm -f crypto_secretbox/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretbox_xchacha20poly1305.Plo
+	-rm -f crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305.Plo
+	-rm -f crypto_secretstream/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretstream_xchacha20poly1305.Plo
+	-rm -f crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Plo
+	-rm -f crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo
+	-rm -f crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphashx24.Plo
+	-rm -f crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24_ref.Plo
+	-rm -f crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphashx24_ref.Plo
+	-rm -f crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Plo
+	-rm -f crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo
+	-rm -f crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo
+	-rm -f crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Plo
+	-rm -f crypto_stream/chacha20/dolbeau/$(DEPDIR)/libavx2_la-chacha20_dolbeau-avx2.Plo
+	-rm -f crypto_stream/chacha20/dolbeau/$(DEPDIR)/libssse3_la-chacha20_dolbeau-ssse3.Plo
+	-rm -f crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-chacha20_ref.Plo
+	-rm -f crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20.Plo
+	-rm -f crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-salsa20_ref.Plo
+	-rm -f crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6-asm.Plo
+	-rm -f crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6.Plo
+	-rm -f crypto_stream/salsa20/xmm6int/$(DEPDIR)/libavx2_la-salsa20_xmm6int-avx2.Plo
+	-rm -f crypto_stream/salsa20/xmm6int/$(DEPDIR)/libsse2_la-salsa20_xmm6int-sse2.Plo
+	-rm -f crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo
+	-rm -f crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012_ref.Plo
+	-rm -f crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208.Plo
+	-rm -f crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208_ref.Plo
+	-rm -f crypto_stream/xchacha20/$(DEPDIR)/libsodium_la-stream_xchacha20.Plo
+	-rm -f crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo
+	-rm -f crypto_verify/sodium/$(DEPDIR)/libsodium_la-verify.Plo
+	-rm -f randombytes/$(DEPDIR)/libsodium_la-randombytes.Plo
+	-rm -f randombytes/internal/$(DEPDIR)/librdrand_la-randombytes_internal_random.Plo
+	-rm -f randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-codecs.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-core.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-runtime.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-utils.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-version.Plo
 	-rm -f Makefile
 distclean-am: clean-am distclean-compile distclean-generic \
 	distclean-tags
@@ -3901,7 +3574,7 @@ install-dvi: install-dvi-recursive
 
 install-dvi-am:
 
-install-exec-am:
+install-exec-am: install-defexecDATA install-libLTLIBRARIES
 
 install-html: install-html-recursive
 
@@ -3924,7 +3597,114 @@ install-ps-am:
 installcheck-am:
 
 maintainer-clean: maintainer-clean-recursive
-	-rm -rf crypto_aead/aes256gcm/aesni/$(DEPDIR) crypto_aead/chacha20poly1305/sodium/$(DEPDIR) crypto_auth/$(DEPDIR) crypto_auth/hmacsha256/$(DEPDIR) crypto_auth/hmacsha256/cp/$(DEPDIR) crypto_auth/hmacsha512/$(DEPDIR) crypto_auth/hmacsha512/cp/$(DEPDIR) crypto_auth/hmacsha512256/$(DEPDIR) crypto_auth/hmacsha512256/cp/$(DEPDIR) crypto_box/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/$(DEPDIR) crypto_box/curve25519xsalsa20poly1305/ref/$(DEPDIR) crypto_core/hsalsa20/$(DEPDIR) crypto_core/hsalsa20/ref2/$(DEPDIR) crypto_core/salsa20/$(DEPDIR) crypto_core/salsa20/ref/$(DEPDIR) crypto_core/salsa2012/$(DEPDIR) crypto_core/salsa2012/ref/$(DEPDIR) crypto_core/salsa208/$(DEPDIR) crypto_core/salsa208/ref/$(DEPDIR) crypto_generichash/$(DEPDIR) crypto_generichash/blake2/$(DEPDIR) crypto_generichash/blake2/ref/$(DEPDIR) crypto_hash/$(DEPDIR) crypto_hash/sha256/$(DEPDIR) crypto_hash/sha256/cp/$(DEPDIR) crypto_hash/sha512/$(DEPDIR) crypto_hash/sha512/cp/$(DEPDIR) crypto_onetimeauth/$(DEPDIR) crypto_onetimeauth/poly1305/$(DEPDIR) crypto_onetimeauth/poly1305/donna/$(DEPDIR) crypto_onetimeauth/poly1305/sse2/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR) crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR) crypto_scalarmult/$(DEPDIR) crypto_scalarmult/curve25519/$(DEPDIR) crypto_scalarmult/curve25519/donna_c64/$(DEPDIR) crypto_scalarmult/curve25519/ref10/$(DEPDIR) crypto_scalarmult/curve25519/sandy2x/$(DEPDIR) crypto_secretbox/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/$(DEPDIR) crypto_secretbox/xsalsa20poly1305/ref/$(DEPDIR) crypto_shorthash/$(DEPDIR) crypto_shorthash/siphash24/$(DEPDIR) crypto_shorthash/siphash24/ref/$(DEPDIR) crypto_sign/$(DEPDIR) crypto_sign/ed25519/$(DEPDIR) crypto_sign/ed25519/ref10/$(DEPDIR) crypto_stream/$(DEPDIR) crypto_stream/aes128ctr/$(DEPDIR) crypto_stream/aes128ctr/portable/$(DEPDIR) crypto_stream/chacha20/$(DEPDIR) crypto_stream/chacha20/ref/$(DEPDIR) crypto_stream/chacha20/vec/$(DEPDIR) crypto_stream/salsa20/$(DEPDIR) crypto_stream/salsa20/amd64_xmm6/$(DEPDIR) crypto_stream/salsa20/ref/$(DEPDIR) crypto_stream/salsa2012/$(DEPDIR) crypto_stream/salsa2012/ref/$(DEPDIR) crypto_stream/salsa208/$(DEPDIR) crypto_stream/salsa208/ref/$(DEPDIR) crypto_stream/xsalsa20/$(DEPDIR) crypto_stream/xsalsa20/ref/$(DEPDIR) crypto_verify/16/$(DEPDIR) crypto_verify/16/ref/$(DEPDIR) crypto_verify/32/$(DEPDIR) crypto_verify/32/ref/$(DEPDIR) crypto_verify/64/$(DEPDIR) crypto_verify/64/ref/$(DEPDIR) randombytes/$(DEPDIR) randombytes/nativeclient/$(DEPDIR) randombytes/salsa20/$(DEPDIR) randombytes/sysrandom/$(DEPDIR) sodium/$(DEPDIR)
+		-rm -f crypto_aead/aes256gcm/aesni/$(DEPDIR)/libaesni_la-aead_aes256gcm_aesni.Plo
+	-rm -f crypto_aead/chacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_chacha20poly1305.Plo
+	-rm -f crypto_aead/xchacha20poly1305/sodium/$(DEPDIR)/libsodium_la-aead_xchacha20poly1305.Plo
+	-rm -f crypto_auth/$(DEPDIR)/libsodium_la-crypto_auth.Plo
+	-rm -f crypto_auth/hmacsha256/$(DEPDIR)/libsodium_la-auth_hmacsha256.Plo
+	-rm -f crypto_auth/hmacsha512/$(DEPDIR)/libsodium_la-auth_hmacsha512.Plo
+	-rm -f crypto_auth/hmacsha512256/$(DEPDIR)/libsodium_la-auth_hmacsha512256.Plo
+	-rm -f crypto_box/$(DEPDIR)/libsodium_la-crypto_box.Plo
+	-rm -f crypto_box/$(DEPDIR)/libsodium_la-crypto_box_easy.Plo
+	-rm -f crypto_box/$(DEPDIR)/libsodium_la-crypto_box_seal.Plo
+	-rm -f crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xchacha20poly1305.Plo
+	-rm -f crypto_box/curve25519xchacha20poly1305/$(DEPDIR)/libsodium_la-box_seal_curve25519xchacha20poly1305.Plo
+	-rm -f crypto_box/curve25519xsalsa20poly1305/$(DEPDIR)/libsodium_la-box_curve25519xsalsa20poly1305.Plo
+	-rm -f crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ed25519.Plo
+	-rm -f crypto_core/ed25519/$(DEPDIR)/libsodium_la-core_ristretto255.Plo
+	-rm -f crypto_core/ed25519/ref10/$(DEPDIR)/libsodium_la-ed25519_ref10.Plo
+	-rm -f crypto_core/hchacha20/$(DEPDIR)/libsodium_la-core_hchacha20.Plo
+	-rm -f crypto_core/hsalsa20/$(DEPDIR)/libsodium_la-core_hsalsa20.Plo
+	-rm -f crypto_core/hsalsa20/ref2/$(DEPDIR)/libsodium_la-core_hsalsa20_ref2.Plo
+	-rm -f crypto_core/salsa/ref/$(DEPDIR)/libsodium_la-core_salsa_ref.Plo
+	-rm -f crypto_generichash/$(DEPDIR)/libsodium_la-crypto_generichash.Plo
+	-rm -f crypto_generichash/blake2b/$(DEPDIR)/libsodium_la-generichash_blake2.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libavx2_la-blake2b-compress-avx2.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-compress-ref.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-blake2b-ref.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsodium_la-generichash_blake2b.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libsse41_la-blake2b-compress-sse41.Plo
+	-rm -f crypto_generichash/blake2b/ref/$(DEPDIR)/libssse3_la-blake2b-compress-ssse3.Plo
+	-rm -f crypto_hash/$(DEPDIR)/libsodium_la-crypto_hash.Plo
+	-rm -f crypto_hash/sha256/$(DEPDIR)/libsodium_la-hash_sha256.Plo
+	-rm -f crypto_hash/sha256/cp/$(DEPDIR)/libsodium_la-hash_sha256_cp.Plo
+	-rm -f crypto_hash/sha512/$(DEPDIR)/libsodium_la-hash_sha512.Plo
+	-rm -f crypto_hash/sha512/cp/$(DEPDIR)/libsodium_la-hash_sha512_cp.Plo
+	-rm -f crypto_kdf/$(DEPDIR)/libsodium_la-crypto_kdf.Plo
+	-rm -f crypto_kdf/blake2b/$(DEPDIR)/libsodium_la-kdf_blake2b.Plo
+	-rm -f crypto_kx/$(DEPDIR)/libsodium_la-crypto_kx.Plo
+	-rm -f crypto_onetimeauth/$(DEPDIR)/libsodium_la-crypto_onetimeauth.Plo
+	-rm -f crypto_onetimeauth/poly1305/$(DEPDIR)/libsodium_la-onetimeauth_poly1305.Plo
+	-rm -f crypto_onetimeauth/poly1305/donna/$(DEPDIR)/libsodium_la-poly1305_donna.Plo
+	-rm -f crypto_onetimeauth/poly1305/sse2/$(DEPDIR)/libsse2_la-poly1305_sse2.Plo
+	-rm -f crypto_pwhash/$(DEPDIR)/libsodium_la-crypto_pwhash.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libavx2_la-argon2-fill-block-avx2.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libavx512f_la-argon2-fill-block-avx512f.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-core.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-encoding.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2-fill-block-ref.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-argon2.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-blake2b-long.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2i.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libsodium_la-pwhash_argon2id.Plo
+	-rm -f crypto_pwhash/argon2/$(DEPDIR)/libssse3_la-argon2-fill-block-ssse3.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-crypto_scrypt-common.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pbkdf2-sha256.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/$(DEPDIR)/libsodium_la-scrypt_platform.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/nosse/$(DEPDIR)/libsodium_la-pwhash_scryptsalsa208sha256_nosse.Plo
+	-rm -f crypto_pwhash/scryptsalsa208sha256/sse/$(DEPDIR)/libsse2_la-pwhash_scryptsalsa208sha256_sse.Plo
+	-rm -f crypto_scalarmult/$(DEPDIR)/libsodium_la-crypto_scalarmult.Plo
+	-rm -f crypto_scalarmult/curve25519/$(DEPDIR)/libsodium_la-scalarmult_curve25519.Plo
+	-rm -f crypto_scalarmult/curve25519/ref10/$(DEPDIR)/libsodium_la-x25519_ref10.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-curve25519_sandy2x.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe51_invert.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-fe_frombytes_sandy2x.Plo
+	-rm -f crypto_scalarmult/curve25519/sandy2x/$(DEPDIR)/libsodium_la-sandy2x.Plo
+	-rm -f crypto_scalarmult/ed25519/ref10/$(DEPDIR)/libsodium_la-scalarmult_ed25519_ref10.Plo
+	-rm -f crypto_scalarmult/ristretto255/ref10/$(DEPDIR)/libsodium_la-scalarmult_ristretto255_ref10.Plo
+	-rm -f crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox.Plo
+	-rm -f crypto_secretbox/$(DEPDIR)/libsodium_la-crypto_secretbox_easy.Plo
+	-rm -f crypto_secretbox/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretbox_xchacha20poly1305.Plo
+	-rm -f crypto_secretbox/xsalsa20poly1305/$(DEPDIR)/libsodium_la-secretbox_xsalsa20poly1305.Plo
+	-rm -f crypto_secretstream/xchacha20poly1305/$(DEPDIR)/libsodium_la-secretstream_xchacha20poly1305.Plo
+	-rm -f crypto_shorthash/$(DEPDIR)/libsodium_la-crypto_shorthash.Plo
+	-rm -f crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphash24.Plo
+	-rm -f crypto_shorthash/siphash24/$(DEPDIR)/libsodium_la-shorthash_siphashx24.Plo
+	-rm -f crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphash24_ref.Plo
+	-rm -f crypto_shorthash/siphash24/ref/$(DEPDIR)/libsodium_la-shorthash_siphashx24_ref.Plo
+	-rm -f crypto_sign/$(DEPDIR)/libsodium_la-crypto_sign.Plo
+	-rm -f crypto_sign/ed25519/$(DEPDIR)/libsodium_la-sign_ed25519.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-keypair.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-obsolete.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-open.Plo
+	-rm -f crypto_sign/ed25519/ref10/$(DEPDIR)/libsodium_la-sign.Plo
+	-rm -f crypto_stream/$(DEPDIR)/libsodium_la-crypto_stream.Plo
+	-rm -f crypto_stream/chacha20/$(DEPDIR)/libsodium_la-stream_chacha20.Plo
+	-rm -f crypto_stream/chacha20/dolbeau/$(DEPDIR)/libavx2_la-chacha20_dolbeau-avx2.Plo
+	-rm -f crypto_stream/chacha20/dolbeau/$(DEPDIR)/libssse3_la-chacha20_dolbeau-ssse3.Plo
+	-rm -f crypto_stream/chacha20/ref/$(DEPDIR)/libsodium_la-chacha20_ref.Plo
+	-rm -f crypto_stream/salsa20/$(DEPDIR)/libsodium_la-stream_salsa20.Plo
+	-rm -f crypto_stream/salsa20/ref/$(DEPDIR)/libsodium_la-salsa20_ref.Plo
+	-rm -f crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6-asm.Plo
+	-rm -f crypto_stream/salsa20/xmm6/$(DEPDIR)/libsodium_la-salsa20_xmm6.Plo
+	-rm -f crypto_stream/salsa20/xmm6int/$(DEPDIR)/libavx2_la-salsa20_xmm6int-avx2.Plo
+	-rm -f crypto_stream/salsa20/xmm6int/$(DEPDIR)/libsse2_la-salsa20_xmm6int-sse2.Plo
+	-rm -f crypto_stream/salsa2012/$(DEPDIR)/libsodium_la-stream_salsa2012.Plo
+	-rm -f crypto_stream/salsa2012/ref/$(DEPDIR)/libsodium_la-stream_salsa2012_ref.Plo
+	-rm -f crypto_stream/salsa208/$(DEPDIR)/libsodium_la-stream_salsa208.Plo
+	-rm -f crypto_stream/salsa208/ref/$(DEPDIR)/libsodium_la-stream_salsa208_ref.Plo
+	-rm -f crypto_stream/xchacha20/$(DEPDIR)/libsodium_la-stream_xchacha20.Plo
+	-rm -f crypto_stream/xsalsa20/$(DEPDIR)/libsodium_la-stream_xsalsa20.Plo
+	-rm -f crypto_verify/sodium/$(DEPDIR)/libsodium_la-verify.Plo
+	-rm -f randombytes/$(DEPDIR)/libsodium_la-randombytes.Plo
+	-rm -f randombytes/internal/$(DEPDIR)/librdrand_la-randombytes_internal_random.Plo
+	-rm -f randombytes/sysrandom/$(DEPDIR)/libsodium_la-randombytes_sysrandom.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-codecs.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-core.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-runtime.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-utils.Plo
+	-rm -f sodium/$(DEPDIR)/libsodium_la-version.Plo
 	-rm -f Makefile
 maintainer-clean-am: distclean-am maintainer-clean-generic
 
@@ -3941,25 +3721,30 @@ ps: ps-recursive
 
 ps-am:
 
-uninstall-am:
+uninstall-am: uninstall-defexecDATA uninstall-libLTLIBRARIES
 
 .MAKE: $(am__recursive_targets) install-am install-strip
 
-.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
-	check-am clean clean-generic clean-libtool \
-	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
-	distclean-compile distclean-generic distclean-libtool \
-	distclean-tags distdir dvi dvi-am html html-am info info-am \
-	install install-am install-data install-data-am install-dvi \
+.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
+	am--depfiles check check-am clean clean-generic \
+	clean-libLTLIBRARIES clean-libtool clean-noinstLTLIBRARIES \
+	cscopelist-am ctags ctags-am distclean distclean-compile \
+	distclean-generic distclean-libtool distclean-tags distdir dvi \
+	dvi-am html html-am info info-am install install-am \
+	install-data install-data-am install-defexecDATA install-dvi \
 	install-dvi-am install-exec install-exec-am install-html \
-	install-html-am install-info install-info-am install-man \
-	install-pdf install-pdf-am install-ps install-ps-am \
-	install-strip installcheck installcheck-am installdirs \
-	installdirs-am maintainer-clean maintainer-clean-generic \
-	mostlyclean mostlyclean-compile mostlyclean-generic \
-	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
-	uninstall-am
+	install-html-am install-info install-info-am \
+	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
+	install-ps install-ps-am install-strip installcheck \
+	installcheck-am installdirs installdirs-am maintainer-clean \
+	maintainer-clean-generic mostlyclean mostlyclean-compile \
+	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
+	tags tags-am uninstall uninstall-am uninstall-defexecDATA \
+	uninstall-libLTLIBRARIES
+
+.PRECIOUS: Makefile
 
+@HAVE_LD_OUTPUT_DEF_TRUE@libsodium-$(DLL_VERSION).def: libsodium.la
 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
 # Otherwise a system limit (for SysV at least) may be exceeded.
diff --git a/libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c b/libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c
index 80065c9..69707a6 100644
--- a/libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c
+++ b/libsodium/src/libsodium/crypto_aead/aes256gcm/aesni/aead_aes256gcm_aesni.c
@@ -1,25 +1,38 @@
 
 /*
- * AES256-GCM, based on original code by Romain Dolbeau
+ * AES256-GCM, based on the "Intel Carry-Less Multiplication Instruction and its Usage for Computing
+ * the GCM Mode" paper and reference code, using the aggregated reduction method.
+ * Originally adapted by Romain Dolbeau.
  */
 
+#include <errno.h>
 #include <stdint.h>
 #include <stdlib.h>
 #include <string.h>
 
+#include "core.h"
 #include "crypto_aead_aes256gcm.h"
 #include "export.h"
+#include "private/common.h"
+#include "private/sse2_64_32.h"
+#include "randombytes.h"
 #include "runtime.h"
 #include "utils.h"
 
-#if defined(HAVE_WMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
+#if defined(HAVE_TMMINTRIN_H) && defined(HAVE_WMMINTRIN_H)
 
-#pragma GCC target("ssse3")
-#pragma GCC target("aes")
-#pragma GCC target("pclmul")
+# ifdef __GNUC__
+#  pragma GCC target("ssse3")
+#  pragma GCC target("aes")
+#  pragma GCC target("pclmul")
+# endif
 
-#include <immintrin.h>
+#include <tmmintrin.h>
+#include <wmmintrin.h>
+
+#ifndef ENOSYS
+# define ENOSYS ENXIO
+#endif
 
 #if defined(__INTEL_COMPILER) || defined(_bswap64)
 #elif defined(_MSC_VER)
@@ -38,74 +51,49 @@ _bswap64(const uint64_t x)
 }
 #endif
 
-typedef struct context {
-    CRYPTO_ALIGN(16) unsigned char H[16];
-    __m128i          rkeys[16];
-} context;
+typedef struct aes256gcm_state {
+    __m128i       rkeys[16];
+    unsigned char H[16];
+} aes256gcm_state;
 
 static inline void
-aesni_key256_expand(const unsigned char *key, __m128 *rkeys)
-{
-    __m128 key0 = _mm_loadu_ps((const float *) (key + 0));
-    __m128 key1 = _mm_loadu_ps((const float *) (key + 16));
-    __m128 temp0, temp1, temp2, temp4;
-    int    idx = 0;
-
-    rkeys[idx++] = key0;
-    temp0 = key0;
-    temp2 = key1;
-    temp4 = _mm_setzero_ps();
-
-/* why single precision floating-point rather than integer instructions ?
-     because _mm_shuffle_ps takes two inputs, while _mm_shuffle_epi32 only
-     takes one - it doesn't perform the same computation...
-     _mm_shuffle_ps takes the lower 64 bits of the result from the first
-     operand, and the higher 64 bits of the result from the second operand
-     (in both cases, all four input floats are accessible).
-     I don't like the non-orthogonal naming scheme :-(
-
-     This is all strongly inspired by the openssl assembly code.
-  */
-#define BLOCK1(IMM)                                                 \
-    temp1 = _mm_castsi128_ps(_mm_aeskeygenassist_si128(_mm_castps_si128(temp2), IMM));\
-    rkeys[idx++] = temp2;                                           \
-    temp4 = _mm_shuffle_ps(temp4, temp0, 0x10);                     \
-    temp0 = _mm_xor_ps(temp0, temp4);                               \
-    temp4 = _mm_shuffle_ps(temp4, temp0, 0x8c);                     \
-    temp0 = _mm_xor_ps(temp0, temp4);                               \
-    temp1 = _mm_shuffle_ps(temp1, temp1, 0xff);                     \
-    temp0 = _mm_xor_ps(temp0, temp1)
-
-#define BLOCK2(IMM)                                                 \
-    temp1 = _mm_castsi128_ps(_mm_aeskeygenassist_si128(_mm_castps_si128(temp0), IMM));\
-    rkeys[idx++] = temp0;                                           \
-    temp4 = _mm_shuffle_ps(temp4, temp2, 0x10);                     \
-    temp2 = _mm_xor_ps(temp2, temp4);                               \
-    temp4 = _mm_shuffle_ps(temp4, temp2, 0x8c);                     \
-    temp2 = _mm_xor_ps(temp2, temp4);                               \
-    temp1 = _mm_shuffle_ps(temp1, temp1, 0xaa);                     \
-    temp2 = _mm_xor_ps(temp2, temp1)
-
-    BLOCK1(0x01);
-    BLOCK2(0x01);
-
-    BLOCK1(0x02);
-    BLOCK2(0x02);
-
-    BLOCK1(0x04);
-    BLOCK2(0x04);
-
-    BLOCK1(0x08);
-    BLOCK2(0x08);
-
-    BLOCK1(0x10);
-    BLOCK2(0x10);
-
-    BLOCK1(0x20);
-    BLOCK2(0x20);
-
-    BLOCK1(0x40);
-    rkeys[idx++] = temp0;
+aesni_key256_expand(const unsigned char *key, __m128i * const rkeys)
+{
+    __m128i  X0, X1, X2, X3;
+    int      i = 0;
+
+    X0 = _mm_loadu_si128((const __m128i *) &key[0]);
+    rkeys[i++] = X0;
+
+    X2 = _mm_loadu_si128((const __m128i *) &key[16]);
+    rkeys[i++] = X2;
+
+#define EXPAND_KEY_1(S) do { \
+    X1 = _mm_shuffle_epi32(_mm_aeskeygenassist_si128(X2, (S)), 0xff); \
+    X3 = _mm_castps_si128(_mm_shuffle_ps(_mm_castsi128_ps(X3), _mm_castsi128_ps(X0), 0x10)); \
+    X0 = _mm_xor_si128(X0, X3); \
+    X3 = _mm_castps_si128(_mm_shuffle_ps(_mm_castsi128_ps(X3), _mm_castsi128_ps(X0), 0x8c)); \
+    X0 = _mm_xor_si128(_mm_xor_si128(X0, X3), X1); \
+    rkeys[i++] = X0; \
+} while (0)
+
+#define EXPAND_KEY_2(S) do { \
+    X1 = _mm_shuffle_epi32(_mm_aeskeygenassist_si128(X0, (S)), 0xaa); \
+    X3 = _mm_castps_si128(_mm_shuffle_ps(_mm_castsi128_ps(X3), _mm_castsi128_ps(X2), 0x10)); \
+    X2 = _mm_xor_si128(X2, X3); \
+    X3 = _mm_castps_si128(_mm_shuffle_ps(_mm_castsi128_ps(X3), _mm_castsi128_ps(X2), 0x8c)); \
+    X2 = _mm_xor_si128(_mm_xor_si128(X2, X3), X1); \
+    rkeys[i++] = X2; \
+} while (0)
+
+    X3 = _mm_setzero_si128();
+    EXPAND_KEY_1(0x01); EXPAND_KEY_2(0x01);
+    EXPAND_KEY_1(0x02); EXPAND_KEY_2(0x02);
+    EXPAND_KEY_1(0x04); EXPAND_KEY_2(0x04);
+    EXPAND_KEY_1(0x08); EXPAND_KEY_2(0x08);
+    EXPAND_KEY_1(0x10); EXPAND_KEY_2(0x10);
+    EXPAND_KEY_1(0x20); EXPAND_KEY_2(0x20);
+    EXPAND_KEY_1(0x40);
 }
 
 /** single, by-the-book AES encryption with AES-NI */
@@ -113,19 +101,28 @@ static inline void
 aesni_encrypt1(unsigned char *out, __m128i nv, const __m128i *rkeys)
 {
     __m128i temp = _mm_xor_si128(nv, rkeys[0]);
-    int     roundctr;
 
-#pragma unroll(13)
-    for (roundctr = 1; roundctr < 14; roundctr++) {
-        temp = _mm_aesenc_si128(temp, rkeys[roundctr]);
-    }
+    temp = _mm_aesenc_si128(temp, rkeys[1]);
+    temp = _mm_aesenc_si128(temp, rkeys[2]);
+    temp = _mm_aesenc_si128(temp, rkeys[3]);
+    temp = _mm_aesenc_si128(temp, rkeys[4]);
+    temp = _mm_aesenc_si128(temp, rkeys[5]);
+    temp = _mm_aesenc_si128(temp, rkeys[6]);
+    temp = _mm_aesenc_si128(temp, rkeys[7]);
+    temp = _mm_aesenc_si128(temp, rkeys[8]);
+    temp = _mm_aesenc_si128(temp, rkeys[9]);
+    temp = _mm_aesenc_si128(temp, rkeys[10]);
+    temp = _mm_aesenc_si128(temp, rkeys[11]);
+    temp = _mm_aesenc_si128(temp, rkeys[12]);
+    temp = _mm_aesenc_si128(temp, rkeys[13]);
+
     temp = _mm_aesenclast_si128(temp, rkeys[14]);
     _mm_storeu_si128((__m128i *) out, temp);
 }
 
 /** multiple-blocks-at-once AES encryption with AES-NI ;
-    on Haswell, aesenc as a latency of 7 and a througput of 1
-    so the sequence of aesenc should be bubble-free, if you
+    on Haswell, aesenc has a latency of 7 and a throughput of 1
+    so the sequence of aesenc should be bubble-free if you
     have at least 8 blocks. Let's build an arbitratry-sized
     function */
 /* Step 1 : loading the nonce */
@@ -264,7 +261,7 @@ addmul(unsigned char *c, const unsigned char *a, unsigned int xlen, const unsign
     _mm_storeu_si128((__m128i *) c, tmp21);
 }
 
-/* pure multiplication, for pre-computing  powers of H */
+/* pure multiplication, for pre-computing powers of H */
 static inline __m128i
 mulv(__m128i A, __m128i B)
 {
@@ -323,19 +320,19 @@ mulv(__m128i A, __m128i B)
     tmp##a##B = _mm_xor_si128(tmp##a##B, X##a); \
     tmp##a = _mm_clmulepi64_si128(tmp##a, tmp##a##B, 0x00)
 
-#define REDUCE4(rev, H0_, H1_, H2_, H3_, X0_, X1_, X2_, X3_, accv) \
+#define MULREDUCE4(rev, H0_, H1_, H2_, H3_, X0_, X1_, X2_, X3_, accv) \
 do { \
     MAKE4(RED_DECL); \
-    __m128i       lo, hi; \
-    __m128i       tmp8, tmp9; \
-    __m128i       H0 = H0_; \
-    __m128i       H1 = H1_; \
-    __m128i       H2 = H2_; \
-    __m128i       H3 = H3_; \
-    __m128i       X0 = X0_; \
-    __m128i       X1 = X1_; \
-    __m128i       X2 = X2_; \
-    __m128i       X3 = X3_; \
+    __m128i lo, hi; \
+    __m128i tmp8, tmp9; \
+    __m128i H0 = H0_; \
+    __m128i H1 = H1_; \
+    __m128i H2 = H2_; \
+    __m128i H3 = H3_; \
+    __m128i X0 = X0_; \
+    __m128i X1 = X1_; \
+    __m128i X2 = X2_; \
+    __m128i X3 = X3_; \
 \
 /* byte-revert the inputs & xor the first one into the accumulator */ \
 \
@@ -444,8 +441,8 @@ do { \
     MAKE8(XORx); \
     MAKE8(STOREx); \
     accv_ = _mm_load_si128((const __m128i *) accum); \
-    REDUCE4(rev, hv, h2v, h3v, h4v, temp3, temp2, temp1, temp0, accv_); \
-    REDUCE4(rev, hv, h2v, h3v, h4v, temp7, temp6, temp5, temp4, accv_); \
+    MULREDUCE4(rev, hv, h2v, h3v, h4v, temp3, temp2, temp1, temp0, accv_); \
+    MULREDUCE4(rev, hv, h2v, h3v, h4v, temp7, temp6, temp5, temp4, accv_); \
     _mm_store_si128((__m128i *) accum, accv_); \
 } while(0)
 
@@ -461,8 +458,8 @@ do { \
     \
     MAKE8(LOADx); \
     accv_ = _mm_load_si128((const __m128i *) accum); \
-    REDUCE4(rev, hv, h2v, h3v, h4v, in3, in2, in1, in0, accv_); \
-    REDUCE4(rev, hv, h2v, h3v, h4v, in7, in6, in5, in4, accv_); \
+    MULREDUCE4(rev, hv, h2v, h3v, h4v, in3, in2, in1, in0, accv_); \
+    MULREDUCE4(rev, hv, h2v, h3v, h4v, in7, in6, in5, in4, accv_); \
     _mm_store_si128((__m128i *) accum, accv_); \
 } while(0)
 
@@ -491,33 +488,34 @@ int
 crypto_aead_aes256gcm_beforenm(crypto_aead_aes256gcm_state *ctx_,
                                const unsigned char *k)
 {
-    context       *ctx = (context *) ctx_;
-    __m128i       *rkeys = ctx->rkeys;
-    __m128i        zero = _mm_setzero_si128();
-    unsigned char *H = ctx->H;
+    aes256gcm_state *ctx = (aes256gcm_state *) (void *) ctx_;
+    unsigned char   *H = ctx->H;
+    __m128i         *rkeys = ctx->rkeys;
+    __m128i          zero = _mm_setzero_si128();
 
-    (void) sizeof(int[(sizeof *ctx_) >= (sizeof *ctx) ? 1 : -1]);
-    aesni_key256_expand(k, (__m128 *) rkeys);
+    COMPILER_ASSERT((sizeof *ctx_) >= (sizeof *ctx));
+    aesni_key256_expand(k, rkeys);
     aesni_encrypt1(H, zero, rkeys);
 
     return 0;
 }
 
 int
-crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen,
-                                      const unsigned char *m, unsigned long long mlen,
-                                      const unsigned char *ad, unsigned long long adlen,
-                                      const unsigned char *nsec,
-                                      const unsigned char *npub,
-                                      const crypto_aead_aes256gcm_state *ctx_)
+crypto_aead_aes256gcm_encrypt_detached_afternm(unsigned char *c,
+                                               unsigned char *mac, unsigned long long *maclen_p,
+                                               const unsigned char *m, unsigned long long mlen,
+                                               const unsigned char *ad, unsigned long long adlen,
+                                               const unsigned char *nsec,
+                                               const unsigned char *npub,
+                                               const crypto_aead_aes256gcm_state *ctx_)
 {
-    const __m128i       rev = _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
-    const context      *ctx = (const context *) ctx_;
-    const __m128i      *rkeys = ctx->rkeys;
-    __m128i             Hv, H2v, H3v, H4v, accv;
-    unsigned long long  i, j;
-    unsigned long long  adlen_rnd64 = adlen & ~63ULL;
-    unsigned long long  mlen_rnd128 = mlen & ~127ULL;
+    const __m128i          rev = _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
+    const aes256gcm_state *ctx = (const aes256gcm_state *) (const void *) ctx_;
+    const __m128i         *rkeys = ctx->rkeys;
+    __m128i                Hv, H2v, H3v, H4v, accv;
+    unsigned long long     i, j;
+    unsigned long long     adlen_rnd64 = adlen & ~63ULL;
+    unsigned long long     mlen_rnd128 = mlen & ~127ULL;
     CRYPTO_ALIGN(16) uint32_t      n2[4];
     CRYPTO_ALIGN(16) unsigned char H[16];
     CRYPTO_ALIGN(16) unsigned char T[16];
@@ -526,8 +524,8 @@ crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen
 
     (void) nsec;
     memcpy(H, ctx->H, sizeof H);
-    if (mlen > 16ULL * (1ULL << 32)) {
-        abort();
+    if (mlen > crypto_aead_aes256gcm_MESSAGEBYTES_MAX) {
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
     memcpy(&n2[0], npub, 3 * 4);
     n2[3] = 0x01000000;
@@ -547,13 +545,13 @@ crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen
     H4v = mulv(H3v, Hv);
 
     accv = _mm_setzero_si128();
-    /* unrolled by 4 GCM (by 8 doesn't improve using REDUCE4) */
+    /* unrolled by 4 GCM (by 8 doesn't improve using MULREDUCE4) */
     for (i = 0; i < adlen_rnd64; i += 64) {
         __m128i X4_ = _mm_loadu_si128((const __m128i *) (ad + i + 0));
         __m128i X3_ = _mm_loadu_si128((const __m128i *) (ad + i + 16));
         __m128i X2_ = _mm_loadu_si128((const __m128i *) (ad + i + 32));
         __m128i X1_ = _mm_loadu_si128((const __m128i *) (ad + i + 48));
-        REDUCE4(rev, Hv, H2v, H3v, H4v, X1_, X2_, X3_, X4_, accv);
+        MULREDUCE4(rev, Hv, H2v, H3v, H4v, X1_, X2_, X3_, X4_, accv);
     }
     _mm_store_si128((__m128i *) accum, accv);
 
@@ -578,7 +576,7 @@ crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen
         }                                                                                            \
     } while(0)
 
-/* remainder loop, with the slower GCM update to accomodate partial blocks */
+/* remainder loop, with the slower GCM update to accommodate partial blocks */
 #define LOOPRMD128                                           \
     do {                                                     \
         const int iter = 8;                                  \
@@ -614,30 +612,49 @@ crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen
     addmul(accum, fb, 16, H);
 
     for (i = 0; i < 16; ++i) {
-        c[i + mlen] = T[i] ^ accum[15 - i];
+        mac[i] = T[i] ^ accum[15 - i];
     }
-    if (clen != NULL) {
-        *clen = mlen + 16;
+    if (maclen_p != NULL) {
+        *maclen_p = 16;
     }
     return 0;
 }
 
 int
-crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen_p,
-                                      unsigned char *nsec,
-                                      const unsigned char *c, unsigned long long clen,
+crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen_p,
+                                      const unsigned char *m, unsigned long long mlen,
                                       const unsigned char *ad, unsigned long long adlen,
+                                      const unsigned char *nsec,
                                       const unsigned char *npub,
                                       const crypto_aead_aes256gcm_state *ctx_)
 {
-    const __m128i       rev = _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
-    const context      *ctx = (const context *) ctx_;
-    const __m128i      *rkeys = ctx->rkeys;
-    __m128i             Hv, H2v, H3v, H4v, accv;
-    unsigned long long  i, j;
-    unsigned long long  adlen_rnd64 = adlen & ~63ULL;
-    unsigned long long  mlen;
-    unsigned long long  mlen_rnd128;
+    int ret = crypto_aead_aes256gcm_encrypt_detached_afternm(c,
+                                                             c + mlen, NULL,
+                                                             m, mlen,
+                                                             ad, adlen,
+                                                             nsec, npub, ctx_);
+    if (clen_p != NULL) {
+        *clen_p = mlen + crypto_aead_aes256gcm_ABYTES;
+    }
+    return ret;
+}
+
+int
+crypto_aead_aes256gcm_decrypt_detached_afternm(unsigned char *m, unsigned char *nsec,
+                                               const unsigned char *c, unsigned long long clen,
+                                               const unsigned char *mac,
+                                               const unsigned char *ad, unsigned long long adlen,
+                                               const unsigned char *npub,
+                                               const crypto_aead_aes256gcm_state *ctx_)
+{
+    const __m128i          rev = _mm_set_epi8(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15);
+    const aes256gcm_state *ctx = (const aes256gcm_state *) (const void *) ctx_;
+    const __m128i         *rkeys = ctx->rkeys;
+    __m128i                Hv, H2v, H3v, H4v, accv;
+    unsigned long long     i, j;
+    unsigned long long     adlen_rnd64 = adlen & ~63ULL;
+    unsigned long long     mlen;
+    unsigned long long     mlen_rnd128;
     CRYPTO_ALIGN(16) uint32_t      n2[4];
     CRYPTO_ALIGN(16) unsigned char H[16];
     CRYPTO_ALIGN(16) unsigned char T[16];
@@ -645,20 +662,15 @@ crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen
     CRYPTO_ALIGN(16) unsigned char fb[16];
 
     (void) nsec;
-    if (clen > 16ULL * (1ULL << 32) - 16ULL) {
-        abort();
+    if (clen > crypto_aead_aes256gcm_MESSAGEBYTES_MAX) {
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
-    if (mlen_p != NULL) {
-        *mlen_p = 0U;
-    }
-    if (clen < 16) {
-        return -1;
-    }
-    mlen = clen - 16;
+    mlen = clen;
 
     memcpy(&n2[0], npub, 3 * 4);
     n2[3] = 0x01000000;
     aesni_encrypt1(T, _mm_load_si128((const __m128i *) n2), rkeys);
+
     {
         uint64_t x;
         x = _bswap64((uint64_t)(8 * adlen));
@@ -666,6 +678,7 @@ crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen
         x = _bswap64((uint64_t)(8 * mlen));
         memcpy(&fb[8], &x, sizeof x);
     }
+
     memcpy(H, ctx->H, sizeof H);
     Hv = _mm_shuffle_epi8(_mm_load_si128((const __m128i *) H), rev);
     _mm_store_si128((__m128i *) H, Hv);
@@ -679,7 +692,7 @@ crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen
         __m128i X3_ = _mm_loadu_si128((const __m128i *) (ad + i + 16));
         __m128i X2_ = _mm_loadu_si128((const __m128i *) (ad + i + 32));
         __m128i X1_ = _mm_loadu_si128((const __m128i *) (ad + i + 48));
-        REDUCE4(rev, Hv, H2v, H3v, H4v, X1_, X2_, X3_, X4_, accv);
+        MULREDUCE4(rev, Hv, H2v, H3v, H4v, X1_, X2_, X3_, X4_, accv);
     }
     _mm_store_si128((__m128i *) accum, accv);
 
@@ -752,6 +765,7 @@ crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen
             }                                                \
         }                                                    \
     } while(0)
+
     n2[3] &= 0x00ffffff;
 
     COUNTER_INC2(n2);
@@ -762,21 +776,71 @@ crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen
         unsigned char d = 0;
 
         for (i = 0; i < 16; i++) {
-            d |= (c[i + mlen] ^ (T[i] ^ accum[15 - i]));
+            d |= (mac[i] ^ (T[i] ^ accum[15 - i]));
         }
         if (d != 0) {
+            if (m != NULL) {
+                memset(m, 0, mlen);
+            }
             return -1;
         }
+        if (m == NULL) {
+            return 0;
+        }
     }
     n2[3] = 0U;
     COUNTER_INC2(n2);
     LOOPDRND128;
     LOOPDRMD128;
 
+    return 0;
+}
+
+int
+crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen_p,
+                                      unsigned char *nsec,
+                                      const unsigned char *c, unsigned long long clen,
+                                      const unsigned char *ad, unsigned long long adlen,
+                                      const unsigned char *npub,
+                                      const crypto_aead_aes256gcm_state *ctx_)
+{
+    unsigned long long mlen = 0ULL;
+    int                ret = -1;
+
+    if (clen >= crypto_aead_aes256gcm_ABYTES) {
+        ret = crypto_aead_aes256gcm_decrypt_detached_afternm
+            (m, nsec, c, clen - crypto_aead_aes256gcm_ABYTES,
+             c + clen - crypto_aead_aes256gcm_ABYTES,
+             ad, adlen, npub, ctx_);
+    }
     if (mlen_p != NULL) {
+        if (ret == 0) {
+            mlen = clen - crypto_aead_aes256gcm_ABYTES;
+        }
         *mlen_p = mlen;
     }
-    return 0;
+    return ret;
+}
+
+int
+crypto_aead_aes256gcm_encrypt_detached(unsigned char *c,
+                                       unsigned char *mac,
+                                       unsigned long long *maclen_p,
+                                       const unsigned char *m,
+                                       unsigned long long mlen,
+                                       const unsigned char *ad,
+                                       unsigned long long adlen,
+                                       const unsigned char *nsec,
+                                       const unsigned char *npub,
+                                       const unsigned char *k)
+{
+    CRYPTO_ALIGN(16) crypto_aead_aes256gcm_state ctx;
+
+    crypto_aead_aes256gcm_beforenm(&ctx, k);
+
+    return crypto_aead_aes256gcm_encrypt_detached_afternm
+        (c, mac, maclen_p, m, mlen, ad, adlen, nsec, npub,
+            (const crypto_aead_aes256gcm_state *) &ctx);
 }
 
 int
@@ -790,13 +854,37 @@ crypto_aead_aes256gcm_encrypt(unsigned char *c,
                               const unsigned char *npub,
                               const unsigned char *k)
 {
-    crypto_aead_aes256gcm_state ctx;
+    CRYPTO_ALIGN(16) crypto_aead_aes256gcm_state ctx;
+    int ret;
 
     crypto_aead_aes256gcm_beforenm(&ctx, k);
 
-    return crypto_aead_aes256gcm_encrypt_afternm
+    ret = crypto_aead_aes256gcm_encrypt_afternm
         (c, clen_p, m, mlen, ad, adlen, nsec, npub,
             (const crypto_aead_aes256gcm_state *) &ctx);
+    sodium_memzero(&ctx, sizeof ctx);
+
+    return ret;
+}
+
+int
+crypto_aead_aes256gcm_decrypt_detached(unsigned char *m,
+                                       unsigned char *nsec,
+                                       const unsigned char *c,
+                                       unsigned long long clen,
+                                       const unsigned char *mac,
+                                       const unsigned char *ad,
+                                       unsigned long long adlen,
+                                       const unsigned char *npub,
+                                       const unsigned char *k)
+{
+    CRYPTO_ALIGN(16) crypto_aead_aes256gcm_state ctx;
+
+    crypto_aead_aes256gcm_beforenm(&ctx, k);
+
+    return crypto_aead_aes256gcm_decrypt_detached_afternm
+        (m, nsec, c, clen, mac, ad, adlen, npub,
+            (const crypto_aead_aes256gcm_state *) &ctx);
 }
 
 int
@@ -810,13 +898,17 @@ crypto_aead_aes256gcm_decrypt(unsigned char *m,
                               const unsigned char *npub,
                               const unsigned char *k)
 {
-    crypto_aead_aes256gcm_state ctx;
+    CRYPTO_ALIGN(16) crypto_aead_aes256gcm_state ctx;
+    int ret;
 
     crypto_aead_aes256gcm_beforenm(&ctx, k);
 
-    return crypto_aead_aes256gcm_decrypt_afternm
+    ret = crypto_aead_aes256gcm_decrypt_afternm
         (m, mlen_p, nsec, c, clen, ad, adlen, npub,
-            (const crypto_aead_aes256gcm_state *) &ctx);
+         (const crypto_aead_aes256gcm_state *) &ctx);
+    sodium_memzero(&ctx, sizeof ctx);
+
+    return ret;
 }
 
 int
@@ -825,6 +917,125 @@ crypto_aead_aes256gcm_is_available(void)
     return sodium_runtime_has_pclmul() & sodium_runtime_has_aesni();
 }
 
+#else
+
+int
+crypto_aead_aes256gcm_encrypt_detached(unsigned char *c,
+                                       unsigned char *mac,
+                                       unsigned long long *maclen_p,
+                                       const unsigned char *m,
+                                       unsigned long long mlen,
+                                       const unsigned char *ad,
+                                       unsigned long long adlen,
+                                       const unsigned char *nsec,
+                                       const unsigned char *npub,
+                                       const unsigned char *k)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_encrypt(unsigned char *c, unsigned long long *clen_p,
+                              const unsigned char *m, unsigned long long mlen,
+                              const unsigned char *ad, unsigned long long adlen,
+                              const unsigned char *nsec, const unsigned char *npub,
+                              const unsigned char *k)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_decrypt_detached(unsigned char *m,
+                                       unsigned char *nsec,
+                                       const unsigned char *c,
+                                       unsigned long long clen,
+                                       const unsigned char *mac,
+                                       const unsigned char *ad,
+                                       unsigned long long adlen,
+                                       const unsigned char *npub,
+                                       const unsigned char *k)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_decrypt(unsigned char *m, unsigned long long *mlen_p,
+                              unsigned char *nsec, const unsigned char *c,
+                              unsigned long long clen, const unsigned char *ad,
+                              unsigned long long adlen, const unsigned char *npub,
+                              const unsigned char *k)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_beforenm(crypto_aead_aes256gcm_state *ctx_,
+                               const unsigned char *k)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_encrypt_detached_afternm(unsigned char *c,
+                                               unsigned char *mac, unsigned long long *maclen_p,
+                                               const unsigned char *m, unsigned long long mlen,
+                                               const unsigned char *ad, unsigned long long adlen,
+                                               const unsigned char *nsec,
+                                               const unsigned char *npub,
+                                               const crypto_aead_aes256gcm_state *ctx_)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c, unsigned long long *clen_p,
+                                      const unsigned char *m, unsigned long long mlen,
+                                      const unsigned char *ad, unsigned long long adlen,
+                                      const unsigned char *nsec, const unsigned char *npub,
+                                      const crypto_aead_aes256gcm_state *ctx_)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_decrypt_detached_afternm(unsigned char *m, unsigned char *nsec,
+                                               const unsigned char *c, unsigned long long clen,
+                                               const unsigned char *mac,
+                                               const unsigned char *ad, unsigned long long adlen,
+                                               const unsigned char *npub,
+                                               const crypto_aead_aes256gcm_state *ctx_)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m, unsigned long long *mlen_p,
+                                      unsigned char *nsec,
+                                      const unsigned char *c, unsigned long long clen,
+                                      const unsigned char *ad, unsigned long long adlen,
+                                      const unsigned char *npub,
+                                      const crypto_aead_aes256gcm_state *ctx_)
+{
+    errno = ENOSYS;
+    return -1;
+}
+
+int
+crypto_aead_aes256gcm_is_available(void)
+{
+    return 0;
+}
+
+#endif
+
 size_t
 crypto_aead_aes256gcm_keybytes(void)
 {
@@ -855,12 +1066,14 @@ crypto_aead_aes256gcm_statebytes(void)
     return (sizeof(crypto_aead_aes256gcm_state) + (size_t) 15U) & ~(size_t) 15U;
 }
 
-#else
-
-int
-crypto_aead_aes256gcm_is_available(void)
+size_t
+crypto_aead_aes256gcm_messagebytes_max(void)
 {
-    return 0;
+    return crypto_aead_aes256gcm_MESSAGEBYTES_MAX;
 }
 
-#endif
+void
+crypto_aead_aes256gcm_keygen(unsigned char k[crypto_aead_aes256gcm_KEYBYTES])
+{
+    randombytes_buf(k, crypto_aead_aes256gcm_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c b/libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
index 703485a..c354087 100644
--- a/libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
+++ b/libsodium/src/libsodium/crypto_aead/chacha20poly1305/sodium/aead_chacha20poly1305.c
@@ -1,106 +1,110 @@
 
+#include <stdint.h>
 #include <stdlib.h>
 #include <limits.h>
 #include <string.h>
 
+#include "core.h"
 #include "crypto_aead_chacha20poly1305.h"
 #include "crypto_onetimeauth_poly1305.h"
 #include "crypto_stream_chacha20.h"
 #include "crypto_verify_16.h"
+#include "randombytes.h"
 #include "utils.h"
 
-static unsigned char _pad0[16];
+#include "private/chacha20_ietf_ext.h"
+#include "private/common.h"
 
-static inline void
-_u64_le_from_ull(unsigned char out[8U], unsigned long long x)
-{
-    out[0] = (unsigned char) (x & 0xff); x >>= 8;
-    out[1] = (unsigned char) (x & 0xff); x >>= 8;
-    out[2] = (unsigned char) (x & 0xff); x >>= 8;
-    out[3] = (unsigned char) (x & 0xff); x >>= 8;
-    out[4] = (unsigned char) (x & 0xff); x >>= 8;
-    out[5] = (unsigned char) (x & 0xff); x >>= 8;
-    out[6] = (unsigned char) (x & 0xff); x >>= 8;
-    out[7] = (unsigned char) (x & 0xff);
-}
+static const unsigned char _pad0[16] = { 0 };
 
 int
-crypto_aead_chacha20poly1305_encrypt(unsigned char *c,
-                                     unsigned long long *clen_p,
-                                     const unsigned char *m,
-                                     unsigned long long mlen,
-                                     const unsigned char *ad,
-                                     unsigned long long adlen,
-                                     const unsigned char *nsec,
-                                     const unsigned char *npub,
-                                     const unsigned char *k)
+crypto_aead_chacha20poly1305_encrypt_detached(unsigned char *c,
+                                              unsigned char *mac,
+                                              unsigned long long *maclen_p,
+                                              const unsigned char *m,
+                                              unsigned long long mlen,
+                                              const unsigned char *ad,
+                                              unsigned long long adlen,
+                                              const unsigned char *nsec,
+                                              const unsigned char *npub,
+                                              const unsigned char *k)
 {
     crypto_onetimeauth_poly1305_state state;
     unsigned char                     block0[64U];
     unsigned char                     slen[8U];
 
     (void) nsec;
-/* LCOV_EXCL_START */
-#ifdef ULONG_LONG_MAX
-    if (mlen > ULONG_LONG_MAX - crypto_aead_chacha20poly1305_ABYTES) {
-        if (clen_p != NULL) {
-            *clen_p = 0ULL;
-        }
-        return -1;
-    }
-#endif
-/* LCOV_EXCL_STOP */
-
     crypto_stream_chacha20(block0, sizeof block0, npub, k);
     crypto_onetimeauth_poly1305_init(&state, block0);
     sodium_memzero(block0, sizeof block0);
 
     crypto_onetimeauth_poly1305_update(&state, ad, adlen);
-    _u64_le_from_ull(slen, adlen);
+    STORE64_LE(slen, (uint64_t) adlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
     crypto_stream_chacha20_xor_ic(c, m, mlen, npub, 1U, k);
 
     crypto_onetimeauth_poly1305_update(&state, c, mlen);
-    _u64_le_from_ull(slen, mlen);
+    STORE64_LE(slen, (uint64_t) mlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
-    crypto_onetimeauth_poly1305_final(&state, c + mlen);
+    crypto_onetimeauth_poly1305_final(&state, mac);
     sodium_memzero(&state, sizeof state);
 
-    if (clen_p != NULL) {
-        *clen_p = mlen + crypto_aead_chacha20poly1305_ABYTES;
+    if (maclen_p != NULL) {
+        *maclen_p = crypto_aead_chacha20poly1305_ABYTES;
     }
     return 0;
 }
 
 int
-crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,
-                                          unsigned long long *clen_p,
-                                          const unsigned char *m,
-                                          unsigned long long mlen,
-                                          const unsigned char *ad,
-                                          unsigned long long adlen,
-                                          const unsigned char *nsec,
-                                          const unsigned char *npub,
-                                          const unsigned char *k)
+crypto_aead_chacha20poly1305_encrypt(unsigned char *c,
+                                     unsigned long long *clen_p,
+                                     const unsigned char *m,
+                                     unsigned long long mlen,
+                                     const unsigned char *ad,
+                                     unsigned long long adlen,
+                                     const unsigned char *nsec,
+                                     const unsigned char *npub,
+                                     const unsigned char *k)
+{
+    unsigned long long clen = 0ULL;
+    int                ret;
+
+    if (mlen > crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    ret = crypto_aead_chacha20poly1305_encrypt_detached(c,
+                                                        c + mlen, NULL,
+                                                        m, mlen,
+                                                        ad, adlen,
+                                                        nsec, npub, k);
+    if (clen_p != NULL) {
+        if (ret == 0) {
+            clen = mlen + crypto_aead_chacha20poly1305_ABYTES;
+        }
+        *clen_p = clen;
+    }
+    return ret;
+}
+
+int
+crypto_aead_chacha20poly1305_ietf_encrypt_detached(unsigned char *c,
+                                                   unsigned char *mac,
+                                                   unsigned long long *maclen_p,
+                                                   const unsigned char *m,
+                                                   unsigned long long mlen,
+                                                   const unsigned char *ad,
+                                                   unsigned long long adlen,
+                                                   const unsigned char *nsec,
+                                                   const unsigned char *npub,
+                                                   const unsigned char *k)
 {
     crypto_onetimeauth_poly1305_state state;
     unsigned char                     block0[64U];
     unsigned char                     slen[8U];
 
     (void) nsec;
-/* LCOV_EXCL_START */
-#ifdef ULONG_LONG_MAX
-    if (mlen > ULONG_LONG_MAX - crypto_aead_chacha20poly1305_ABYTES) {
-        if (clen_p != NULL) {
-            *clen_p = 0ULL;
-        }
-        return -1;
-    }
-#endif
-/* LCOV_EXCL_STOP */
-
     crypto_stream_chacha20_ietf(block0, sizeof block0, npub, k);
     crypto_onetimeauth_poly1305_init(&state, block0);
     sodium_memzero(block0, sizeof block0);
@@ -113,102 +117,151 @@ crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,
     crypto_onetimeauth_poly1305_update(&state, c, mlen);
     crypto_onetimeauth_poly1305_update(&state, _pad0, (0x10 - mlen) & 0xf);
 
-    _u64_le_from_ull(slen, adlen);
+    STORE64_LE(slen, (uint64_t) adlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
-    _u64_le_from_ull(slen, mlen);
+    STORE64_LE(slen, (uint64_t) mlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
-    crypto_onetimeauth_poly1305_final(&state, c + mlen);
+    crypto_onetimeauth_poly1305_final(&state, mac);
     sodium_memzero(&state, sizeof state);
 
-    if (clen_p != NULL) {
-        *clen_p = mlen + crypto_aead_chacha20poly1305_ABYTES;
+    if (maclen_p != NULL) {
+        *maclen_p = crypto_aead_chacha20poly1305_ietf_ABYTES;
     }
     return 0;
 }
 
 int
-crypto_aead_chacha20poly1305_decrypt(unsigned char *m,
-                                     unsigned long long *mlen_p,
-                                     unsigned char *nsec,
-                                     const unsigned char *c,
-                                     unsigned long long clen,
-                                     const unsigned char *ad,
-                                     unsigned long long adlen,
-                                     const unsigned char *npub,
-                                     const unsigned char *k)
+crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,
+                                          unsigned long long *clen_p,
+                                          const unsigned char *m,
+                                          unsigned long long mlen,
+                                          const unsigned char *ad,
+                                          unsigned long long adlen,
+                                          const unsigned char *nsec,
+                                          const unsigned char *npub,
+                                          const unsigned char *k)
+{
+    unsigned long long clen = 0ULL;
+    int                ret;
+
+    if (mlen > crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    ret = crypto_aead_chacha20poly1305_ietf_encrypt_detached(c,
+                                                             c + mlen, NULL,
+                                                             m, mlen,
+                                                             ad, adlen,
+                                                             nsec, npub, k);
+    if (clen_p != NULL) {
+        if (ret == 0) {
+            clen = mlen + crypto_aead_chacha20poly1305_ietf_ABYTES;
+        }
+        *clen_p = clen;
+    }
+    return ret;
+}
+
+int
+crypto_aead_chacha20poly1305_decrypt_detached(unsigned char *m,
+                                              unsigned char *nsec,
+                                              const unsigned char *c,
+                                              unsigned long long clen,
+                                              const unsigned char *mac,
+                                              const unsigned char *ad,
+                                              unsigned long long adlen,
+                                              const unsigned char *npub,
+                                              const unsigned char *k)
 {
     crypto_onetimeauth_poly1305_state state;
     unsigned char                     block0[64U];
     unsigned char                     slen[8U];
-    unsigned char                     mac[crypto_aead_chacha20poly1305_ABYTES];
+    unsigned char                     computed_mac[crypto_aead_chacha20poly1305_ABYTES];
     unsigned long long                mlen;
     int                               ret;
 
     (void) nsec;
-    if (mlen_p != NULL) {
-        *mlen_p = 0ULL;
-    }
-    if (clen < crypto_aead_chacha20poly1305_ABYTES) {
-        return -1;
-    }
     crypto_stream_chacha20(block0, sizeof block0, npub, k);
     crypto_onetimeauth_poly1305_init(&state, block0);
     sodium_memzero(block0, sizeof block0);
 
     crypto_onetimeauth_poly1305_update(&state, ad, adlen);
-    _u64_le_from_ull(slen, adlen);
+    STORE64_LE(slen, (uint64_t) adlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
-    mlen = clen - crypto_aead_chacha20poly1305_ABYTES;
+    mlen = clen;
     crypto_onetimeauth_poly1305_update(&state, c, mlen);
-    _u64_le_from_ull(slen, mlen);
+    STORE64_LE(slen, (uint64_t) mlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
-    crypto_onetimeauth_poly1305_final(&state, mac);
+    crypto_onetimeauth_poly1305_final(&state, computed_mac);
     sodium_memzero(&state, sizeof state);
 
-    (void) sizeof(int[sizeof mac == 16U ? 1 : -1]);
-    ret = crypto_verify_16(mac, c + mlen);
-    sodium_memzero(mac, sizeof mac);
+    COMPILER_ASSERT(sizeof computed_mac == 16U);
+    ret = crypto_verify_16(computed_mac, mac);
+    sodium_memzero(computed_mac, sizeof computed_mac);
+    if (m == NULL) {
+        return ret;
+    }
     if (ret != 0) {
         memset(m, 0, mlen);
         return -1;
     }
-    crypto_stream_chacha20_xor_ic
-        (m, c, mlen, npub, 1U, k);
+    crypto_stream_chacha20_xor_ic(m, c, mlen, npub, 1U, k);
+
+    return 0;
+}
+
+int
+crypto_aead_chacha20poly1305_decrypt(unsigned char *m,
+                                     unsigned long long *mlen_p,
+                                     unsigned char *nsec,
+                                     const unsigned char *c,
+                                     unsigned long long clen,
+                                     const unsigned char *ad,
+                                     unsigned long long adlen,
+                                     const unsigned char *npub,
+                                     const unsigned char *k)
+{
+    unsigned long long mlen = 0ULL;
+    int                ret = -1;
+
+    if (clen >= crypto_aead_chacha20poly1305_ABYTES) {
+        ret = crypto_aead_chacha20poly1305_decrypt_detached
+            (m, nsec,
+             c, clen - crypto_aead_chacha20poly1305_ABYTES,
+             c + clen - crypto_aead_chacha20poly1305_ABYTES,
+             ad, adlen, npub, k);
+    }
     if (mlen_p != NULL) {
+        if (ret == 0) {
+            mlen = clen - crypto_aead_chacha20poly1305_ABYTES;
+        }
         *mlen_p = mlen;
     }
-    return 0;
+    return ret;
 }
 
 int
-crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,
-                                          unsigned long long *mlen_p,
-                                          unsigned char *nsec,
-                                          const unsigned char *c,
-                                          unsigned long long clen,
-                                          const unsigned char *ad,
-                                          unsigned long long adlen,
-                                          const unsigned char *npub,
-                                          const unsigned char *k)
+crypto_aead_chacha20poly1305_ietf_decrypt_detached(unsigned char *m,
+                                                   unsigned char *nsec,
+                                                   const unsigned char *c,
+                                                   unsigned long long clen,
+                                                   const unsigned char *mac,
+                                                   const unsigned char *ad,
+                                                   unsigned long long adlen,
+                                                   const unsigned char *npub,
+                                                   const unsigned char *k)
 {
     crypto_onetimeauth_poly1305_state state;
     unsigned char                     block0[64U];
     unsigned char                     slen[8U];
-    unsigned char                     mac[crypto_aead_chacha20poly1305_ABYTES];
+    unsigned char                     computed_mac[crypto_aead_chacha20poly1305_ietf_ABYTES];
     unsigned long long                mlen;
     int                               ret;
 
     (void) nsec;
-    if (mlen_p != NULL) {
-        *mlen_p = 0ULL;
-    }
-    if (clen < crypto_aead_chacha20poly1305_ABYTES) {
-        return -1;
-    }
     crypto_stream_chacha20_ietf(block0, sizeof block0, npub, k);
     crypto_onetimeauth_poly1305_init(&state, block0);
     sodium_memzero(block0, sizeof block0);
@@ -216,54 +269,132 @@ crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,
     crypto_onetimeauth_poly1305_update(&state, ad, adlen);
     crypto_onetimeauth_poly1305_update(&state, _pad0, (0x10 - adlen) & 0xf);
 
-    mlen = clen - crypto_aead_chacha20poly1305_ABYTES;
+    mlen = clen;
     crypto_onetimeauth_poly1305_update(&state, c, mlen);
     crypto_onetimeauth_poly1305_update(&state, _pad0, (0x10 - mlen) & 0xf);
 
-    _u64_le_from_ull(slen, adlen);
+    STORE64_LE(slen, (uint64_t) adlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
-    _u64_le_from_ull(slen, mlen);
+    STORE64_LE(slen, (uint64_t) mlen);
     crypto_onetimeauth_poly1305_update(&state, slen, sizeof slen);
 
-    crypto_onetimeauth_poly1305_final(&state, mac);
+    crypto_onetimeauth_poly1305_final(&state, computed_mac);
     sodium_memzero(&state, sizeof state);
 
-    (void) sizeof(int[sizeof mac == 16U ? 1 : -1]);
-    ret = crypto_verify_16(mac, c + mlen);
-    sodium_memzero(mac, sizeof mac);
+    COMPILER_ASSERT(sizeof computed_mac == 16U);
+    ret = crypto_verify_16(computed_mac, mac);
+    sodium_memzero(computed_mac, sizeof computed_mac);
+    if (m == NULL) {
+        return ret;
+    }
     if (ret != 0) {
         memset(m, 0, mlen);
         return -1;
     }
     crypto_stream_chacha20_ietf_xor_ic(m, c, mlen, npub, 1U, k);
+
+    return 0;
+}
+
+int
+crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,
+                                          unsigned long long *mlen_p,
+                                          unsigned char *nsec,
+                                          const unsigned char *c,
+                                          unsigned long long clen,
+                                          const unsigned char *ad,
+                                          unsigned long long adlen,
+                                          const unsigned char *npub,
+                                          const unsigned char *k)
+{
+    unsigned long long mlen = 0ULL;
+    int                ret = -1;
+
+    if (clen >= crypto_aead_chacha20poly1305_ietf_ABYTES) {
+        ret = crypto_aead_chacha20poly1305_ietf_decrypt_detached
+            (m, nsec,
+             c, clen - crypto_aead_chacha20poly1305_ietf_ABYTES,
+             c + clen - crypto_aead_chacha20poly1305_ietf_ABYTES,
+             ad, adlen, npub, k);
+    }
     if (mlen_p != NULL) {
+        if (ret == 0) {
+            mlen = clen - crypto_aead_chacha20poly1305_ietf_ABYTES;
+        }
         *mlen_p = mlen;
     }
-    return 0;
+    return ret;
 }
 
 size_t
-crypto_aead_chacha20poly1305_keybytes(void) {
-    return crypto_aead_chacha20poly1305_KEYBYTES;
+crypto_aead_chacha20poly1305_ietf_keybytes(void)
+{
+    return crypto_aead_chacha20poly1305_ietf_KEYBYTES;
 }
 
 size_t
-crypto_aead_chacha20poly1305_npubbytes(void) {
-    return crypto_aead_chacha20poly1305_NPUBBYTES;
+crypto_aead_chacha20poly1305_ietf_npubbytes(void)
+{
+    return crypto_aead_chacha20poly1305_ietf_NPUBBYTES;
+}
+
+size_t
+crypto_aead_chacha20poly1305_ietf_nsecbytes(void)
+{
+    return crypto_aead_chacha20poly1305_ietf_NSECBYTES;
+}
+
+size_t
+crypto_aead_chacha20poly1305_ietf_abytes(void)
+{
+    return crypto_aead_chacha20poly1305_ietf_ABYTES;
+}
+
+size_t
+crypto_aead_chacha20poly1305_ietf_messagebytes_max(void)
+{
+    return crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX;
+}
+
+void
+crypto_aead_chacha20poly1305_ietf_keygen(unsigned char k[crypto_aead_chacha20poly1305_ietf_KEYBYTES])
+{
+    randombytes_buf(k, crypto_aead_chacha20poly1305_ietf_KEYBYTES);
 }
 
 size_t
-crypto_aead_chacha20poly1305_ietf_npubbytes(void) {
-    return crypto_aead_chacha20poly1305_IETF_NPUBBYTES;
+crypto_aead_chacha20poly1305_keybytes(void)
+{
+    return crypto_aead_chacha20poly1305_KEYBYTES;
 }
 
 size_t
-crypto_aead_chacha20poly1305_nsecbytes(void) {
+crypto_aead_chacha20poly1305_npubbytes(void)
+{
+    return crypto_aead_chacha20poly1305_NPUBBYTES;
+}
+
+size_t
+crypto_aead_chacha20poly1305_nsecbytes(void)
+{
     return crypto_aead_chacha20poly1305_NSECBYTES;
 }
 
 size_t
-crypto_aead_chacha20poly1305_abytes(void) {
+crypto_aead_chacha20poly1305_abytes(void)
+{
     return crypto_aead_chacha20poly1305_ABYTES;
 }
+
+size_t
+crypto_aead_chacha20poly1305_messagebytes_max(void)
+{
+    return crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX;
+}
+
+void
+crypto_aead_chacha20poly1305_keygen(unsigned char k[crypto_aead_chacha20poly1305_KEYBYTES])
+{
+    randombytes_buf(k, crypto_aead_chacha20poly1305_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_auth/crypto_auth.c b/libsodium/src/libsodium/crypto_auth/crypto_auth.c
index e76b149..d061c8c 100644
--- a/libsodium/src/libsodium/crypto_auth/crypto_auth.c
+++ b/libsodium/src/libsodium/crypto_auth/crypto_auth.c
@@ -1,5 +1,6 @@
 
 #include "crypto_auth.h"
+#include "randombytes.h"
 
 size_t
 crypto_auth_bytes(void)
@@ -32,3 +33,9 @@ crypto_auth_verify(const unsigned char *h, const unsigned char *in,
 {
     return crypto_auth_hmacsha512256_verify(h, in, inlen, k);
 }
+
+void
+crypto_auth_keygen(unsigned char k[crypto_auth_KEYBYTES])
+{
+    randombytes_buf(k, crypto_auth_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c b/libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c
deleted file mode 100644
index 9b8353f..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha256/auth_hmacsha256_api.c
+++ /dev/null
@@ -1,16 +0,0 @@
-#include "crypto_auth_hmacsha256.h"
-
-size_t
-crypto_auth_hmacsha256_bytes(void) {
-    return crypto_auth_hmacsha256_BYTES;
-}
-
-size_t
-crypto_auth_hmacsha256_keybytes(void) {
-    return crypto_auth_hmacsha256_KEYBYTES;
-}
-
-size_t
-crypto_auth_hmacsha256_statebytes(void) {
-    return sizeof(crypto_auth_hmacsha256_state);
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c b/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
deleted file mode 100644
index dc7a7ce..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/hmac_hmacsha256.c
+++ /dev/null
@@ -1,110 +0,0 @@
-
-/*-
- * Copyright 2005,2007,2009 Colin Percival
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
- * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
- * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
- * SUCH DAMAGE.
- *
- */
-
-#include "crypto_auth_hmacsha256.h"
-#include "crypto_hash_sha256.h"
-#include "utils.h"
-
-#include <sys/types.h>
-
-#include <stdint.h>
-#include <string.h>
-
-int
-crypto_auth_hmacsha256_init(crypto_auth_hmacsha256_state *state,
-                            const unsigned char *key,
-                            size_t keylen)
-{
-    unsigned char pad[64];
-    unsigned char khash[32];
-    size_t        i;
-
-    if (keylen > 64) {
-        crypto_hash_sha256_init(&state->ictx);
-        crypto_hash_sha256_update(&state->ictx, key, keylen);
-        crypto_hash_sha256_final(&state->ictx, khash);
-        key = khash;
-        keylen = 32;
-    }
-    crypto_hash_sha256_init(&state->ictx);
-    memset(pad, 0x36, 64);
-    for (i = 0; i < keylen; i++) {
-        pad[i] ^= key[i];
-    }
-    crypto_hash_sha256_update(&state->ictx, pad, 64);
-
-    crypto_hash_sha256_init(&state->octx);
-    memset(pad, 0x5c, 64);
-    for (i = 0; i < keylen; i++) {
-        pad[i] ^= key[i];
-    }
-    crypto_hash_sha256_update(&state->octx, pad, 64);
-
-    sodium_memzero((void *) pad, sizeof pad);
-    sodium_memzero((void *) khash, sizeof khash);
-
-    return 0;
-}
-
-int
-crypto_auth_hmacsha256_update(crypto_auth_hmacsha256_state *state,
-                              const unsigned char *in,
-                              unsigned long long inlen)
-{
-    crypto_hash_sha256_update(&state->ictx, in, inlen);
-
-    return 0;
-}
-
-int
-crypto_auth_hmacsha256_final(crypto_auth_hmacsha256_state *state,
-                             unsigned char *out)
-{
-    unsigned char ihash[32];
-
-    crypto_hash_sha256_final(&state->ictx, ihash);
-    crypto_hash_sha256_update(&state->octx, ihash, 32);
-    crypto_hash_sha256_final(&state->octx, out);
-
-    sodium_memzero((void *) ihash, sizeof ihash);
-
-    return 0;
-}
-
-int
-crypto_auth_hmacsha256(unsigned char *out, const unsigned char *in,
-                       unsigned long long inlen, const unsigned char *k)
-{
-    crypto_auth_hmacsha256_state state;
-
-    crypto_auth_hmacsha256_init(&state, k, crypto_auth_hmacsha256_KEYBYTES);
-    crypto_auth_hmacsha256_update(&state, in, inlen);
-    crypto_auth_hmacsha256_final(&state, out);
-
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/verify_hmacsha256.c b/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/verify_hmacsha256.c
deleted file mode 100644
index 046a8b9..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha256/cp/verify_hmacsha256.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "crypto_auth_hmacsha256.h"
-#include "crypto_verify_32.h"
-#include "utils.h"
-
-int crypto_auth_hmacsha256_verify(const unsigned char *h,const unsigned char *in,unsigned long long inlen,const unsigned char *k)
-{
-  unsigned char correct[32];
-  crypto_auth_hmacsha256(correct,in,inlen,k);
-  return crypto_verify_32(h,correct) | (-(h == correct)) |
-         sodium_memcmp(correct,h,32);
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c b/libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c
deleted file mode 100644
index 49b8c2d..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha512/auth_hmacsha512_api.c
+++ /dev/null
@@ -1,16 +0,0 @@
-#include "crypto_auth_hmacsha512.h"
-
-size_t
-crypto_auth_hmacsha512_bytes(void) {
-    return crypto_auth_hmacsha512_BYTES;
-}
-
-size_t
-crypto_auth_hmacsha512_keybytes(void) {
-    return crypto_auth_hmacsha512_KEYBYTES;
-}
-
-size_t
-crypto_auth_hmacsha512_statebytes(void) {
-    return sizeof(crypto_auth_hmacsha512_state);
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c b/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
deleted file mode 100644
index dc8b63a..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/hmac_hmacsha512.c
+++ /dev/null
@@ -1,110 +0,0 @@
-
-/*-
- * Copyright 2005,2007,2009 Colin Percival
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
- * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
- * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
- * SUCH DAMAGE.
- *
- */
-
-#include "crypto_auth_hmacsha512.h"
-#include "crypto_hash_sha512.h"
-#include "utils.h"
-
-#include <sys/types.h>
-
-#include <stdint.h>
-#include <string.h>
-
-int
-crypto_auth_hmacsha512_init(crypto_auth_hmacsha512_state *state,
-                            const unsigned char *key,
-                            size_t keylen)
-{
-    unsigned char pad[128];
-    unsigned char khash[64];
-    size_t        i;
-
-    if (keylen > 128) {
-        crypto_hash_sha512_init(&state->ictx);
-        crypto_hash_sha512_update(&state->ictx, key, keylen);
-        crypto_hash_sha512_final(&state->ictx, khash);
-        key = khash;
-        keylen = 64;
-    }
-    crypto_hash_sha512_init(&state->ictx);
-    memset(pad, 0x36, 128);
-    for (i = 0; i < keylen; i++) {
-        pad[i] ^= key[i];
-    }
-    crypto_hash_sha512_update(&state->ictx, pad, 128);
-
-    crypto_hash_sha512_init(&state->octx);
-    memset(pad, 0x5c, 128);
-    for (i = 0; i < keylen; i++) {
-        pad[i] ^= key[i];
-    }
-    crypto_hash_sha512_update(&state->octx, pad, 128);
-
-    sodium_memzero((void *) pad, sizeof pad);
-    sodium_memzero((void *) khash, sizeof khash);
-
-    return 0;
-}
-
-int
-crypto_auth_hmacsha512_update(crypto_auth_hmacsha512_state *state,
-                              const unsigned char *in,
-                              unsigned long long inlen)
-{
-    crypto_hash_sha512_update(&state->ictx, in, inlen);
-
-    return 0;
-}
-
-int
-crypto_auth_hmacsha512_final(crypto_auth_hmacsha512_state *state,
-                             unsigned char *out)
-{
-    unsigned char ihash[64];
-
-    crypto_hash_sha512_final(&state->ictx, ihash);
-    crypto_hash_sha512_update(&state->octx, ihash, 64);
-    crypto_hash_sha512_final(&state->octx, out);
-
-    sodium_memzero((void *) ihash, sizeof ihash);
-
-    return 0;
-}
-
-int
-crypto_auth_hmacsha512(unsigned char *out, const unsigned char *in,
-                       unsigned long long inlen, const unsigned char *k)
-{
-    crypto_auth_hmacsha512_state state;
-
-    crypto_auth_hmacsha512_init(&state, k, crypto_auth_hmacsha512_KEYBYTES);
-    crypto_auth_hmacsha512_update(&state, in, inlen);
-    crypto_auth_hmacsha512_final(&state, out);
-
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/verify_hmacsha512.c b/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/verify_hmacsha512.c
deleted file mode 100644
index 9897349..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha512/cp/verify_hmacsha512.c
+++ /dev/null
@@ -1,12 +0,0 @@
-#include "crypto_auth_hmacsha512.h"
-#include "crypto_verify_64.h"
-#include "utils.h"
-
-int crypto_auth_hmacsha512_verify(const unsigned char *h, const unsigned char *in,
-                                  unsigned long long inlen, const unsigned char *k)
-{
-  unsigned char correct[64];
-  crypto_auth_hmacsha512(correct,in,inlen,k);
-  return crypto_verify_64(h,correct) | (-(h == correct)) |
-         sodium_memcmp(correct,h,64);
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c b/libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
deleted file mode 100644
index 9405bbb..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha512256/auth_hmacsha512256_api.c
+++ /dev/null
@@ -1,16 +0,0 @@
-#include "crypto_auth_hmacsha512256.h"
-
-size_t
-crypto_auth_hmacsha512256_bytes(void) {
-    return crypto_auth_hmacsha512256_BYTES;
-}
-
-size_t
-crypto_auth_hmacsha512256_keybytes(void) {
-    return crypto_auth_hmacsha512256_KEYBYTES;
-}
-
-size_t
-crypto_auth_hmacsha512256_statebytes(void) {
-    return sizeof(crypto_auth_hmacsha512256_state);
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c b/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
deleted file mode 100644
index 5b55e1c..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/hmac_hmacsha512256.c
+++ /dev/null
@@ -1,54 +0,0 @@
-
-#include "crypto_auth_hmacsha512256.h"
-#include "crypto_auth_hmacsha512.h"
-#include "crypto_hash_sha512.h"
-#include "utils.h"
-
-#include <sys/types.h>
-
-#include <stdint.h>
-#include <string.h>
-
-int
-crypto_auth_hmacsha512256_init(crypto_auth_hmacsha512256_state *state,
-                               const unsigned char *key,
-                               size_t keylen)
-{
-    return crypto_auth_hmacsha512_init((crypto_auth_hmacsha512_state *) state,
-                                       key, keylen);
-}
-
-int
-crypto_auth_hmacsha512256_update(crypto_auth_hmacsha512256_state *state,
-                                 const unsigned char *in,
-                                 unsigned long long inlen)
-{
-    return crypto_auth_hmacsha512_update((crypto_auth_hmacsha512_state *) state,
-                                         in, inlen);
-}
-
-int
-crypto_auth_hmacsha512256_final(crypto_auth_hmacsha512256_state *state,
-                                unsigned char *out)
-{
-    unsigned char out0[64];
-
-    crypto_auth_hmacsha512_final((crypto_auth_hmacsha512_state *) state, out0);
-    memcpy(out, out0, 32);
-
-    return 0;
-}
-
-int
-crypto_auth_hmacsha512256(unsigned char *out, const unsigned char *in,
-                          unsigned long long inlen, const unsigned char *k)
-{
-    crypto_auth_hmacsha512256_state state;
-
-    crypto_auth_hmacsha512256_init(&state, k,
-                                   crypto_auth_hmacsha512256_KEYBYTES);
-    crypto_auth_hmacsha512256_update(&state, in, inlen);
-    crypto_auth_hmacsha512256_final(&state, out);
-
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c b/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
deleted file mode 100644
index 07af71b..0000000
--- a/libsodium/src/libsodium/crypto_auth/hmacsha512256/cp/verify_hmacsha512256.c
+++ /dev/null
@@ -1,14 +0,0 @@
-#include "crypto_auth_hmacsha512256.h"
-#include "crypto_verify_32.h"
-#include "utils.h"
-
-int crypto_auth_hmacsha512256_verify(const unsigned char *h,
-                                     const unsigned char *in,
-                                     unsigned long long inlen,
-                                     const unsigned char *k)
-{
-  unsigned char correct[32];
-  crypto_auth_hmacsha512256(correct,in,inlen,k);
-  return crypto_verify_32(h,correct) | (-(h == correct)) |
-         sodium_memcmp(correct,h,32);
-}
diff --git a/libsodium/src/libsodium/crypto_box/crypto_box.c b/libsodium/src/libsodium/crypto_box/crypto_box.c
index 7ae4297..7e4f00b 100644
--- a/libsodium/src/libsodium/crypto_box/crypto_box.c
+++ b/libsodium/src/libsodium/crypto_box/crypto_box.c
@@ -49,6 +49,12 @@ crypto_box_macbytes(void)
     return crypto_box_MACBYTES;
 }
 
+size_t
+crypto_box_messagebytes_max(void)
+{
+    return crypto_box_MESSAGEBYTES_MAX;
+}
+
 const char *
 crypto_box_primitive(void)
 {
diff --git a/libsodium/src/libsodium/crypto_box/crypto_box_easy.c b/libsodium/src/libsodium/crypto_box/crypto_box_easy.c
index e1cba83..deb40b4 100644
--- a/libsodium/src/libsodium/crypto_box/crypto_box_easy.c
+++ b/libsodium/src/libsodium/crypto_box/crypto_box_easy.c
@@ -3,8 +3,10 @@
 #include <stdint.h>
 #include <stdlib.h>
 
+#include "core.h"
 #include "crypto_box.h"
 #include "crypto_secretbox.h"
+#include "private/common.h"
 #include "utils.h"
 
 int
@@ -24,8 +26,7 @@ crypto_box_detached(unsigned char *c, unsigned char *mac,
     unsigned char k[crypto_box_BEFORENMBYTES];
     int           ret;
 
-    (void) sizeof(int[crypto_box_BEFORENMBYTES >=
-                      crypto_secretbox_KEYBYTES ? 1 : -1]);
+    COMPILER_ASSERT(crypto_box_BEFORENMBYTES >= crypto_secretbox_KEYBYTES);
     if (crypto_box_beforenm(k, pk, sk) != 0) {
         return -1;
     }
@@ -40,8 +41,8 @@ crypto_box_easy_afternm(unsigned char *c, const unsigned char *m,
                         unsigned long long mlen, const unsigned char *n,
                         const unsigned char *k)
 {
-    if (mlen > SIZE_MAX - crypto_box_MACBYTES) {
-        return -1;
+    if (mlen > crypto_box_MESSAGEBYTES_MAX) {
+        sodium_misuse();
     }
     return crypto_box_detached_afternm(c + crypto_box_MACBYTES, c, m, mlen, n,
                                        k);
@@ -52,8 +53,8 @@ crypto_box_easy(unsigned char *c, const unsigned char *m,
                 unsigned long long mlen, const unsigned char *n,
                 const unsigned char *pk, const unsigned char *sk)
 {
-    if (mlen > SIZE_MAX - crypto_box_MACBYTES) {
-        return -1;
+    if (mlen > crypto_box_MESSAGEBYTES_MAX) {
+        sodium_misuse();
     }
     return crypto_box_detached(c + crypto_box_MACBYTES, c, m, mlen, n,
                                pk, sk);
@@ -62,7 +63,8 @@ crypto_box_easy(unsigned char *c, const unsigned char *m,
 int
 crypto_box_open_detached_afternm(unsigned char *m, const unsigned char *c,
                                  const unsigned char *mac,
-                                 unsigned long long clen, const unsigned char *n,
+                                 unsigned long long clen,
+                                 const unsigned char *n,
                                  const unsigned char *k)
 {
     return crypto_secretbox_open_detached(m, c, mac, clen, n, k);
diff --git a/libsodium/src/libsodium/crypto_box/crypto_box_seal.c b/libsodium/src/libsodium/crypto_box/crypto_box_seal.c
index e494b07..7181334 100644
--- a/libsodium/src/libsodium/crypto_box/crypto_box_seal.c
+++ b/libsodium/src/libsodium/crypto_box/crypto_box_seal.c
@@ -3,6 +3,7 @@
 
 #include "crypto_box.h"
 #include "crypto_generichash.h"
+#include "private/common.h"
 #include "utils.h"
 
 static int
@@ -35,9 +36,9 @@ crypto_box_seal(unsigned char *c, const unsigned char *m,
     _crypto_box_seal_nonce(nonce, epk, pk);
     ret = crypto_box_easy(c + crypto_box_PUBLICKEYBYTES, m, mlen,
                           nonce, pk, esk);
-    sodium_memzero(nonce, sizeof nonce);
-    sodium_memzero(epk, sizeof epk);
     sodium_memzero(esk, sizeof esk);
+    sodium_memzero(epk, sizeof epk);
+    sodium_memzero(nonce, sizeof nonce);
 
     return ret;
 }
@@ -54,7 +55,7 @@ crypto_box_seal_open(unsigned char *m, const unsigned char *c,
     }
     _crypto_box_seal_nonce(nonce, c, pk);
 
-    (void) sizeof(int[crypto_box_PUBLICKEYBYTES < crypto_box_SEALBYTES ? 1 : -1]);
+    COMPILER_ASSERT(crypto_box_PUBLICKEYBYTES < crypto_box_SEALBYTES);
     return crypto_box_open_easy(m, c + crypto_box_PUBLICKEYBYTES,
                                 clen - crypto_box_PUBLICKEYBYTES,
                                 nonce, c, sk);
diff --git a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c b/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
deleted file mode 100644
index 1c002d2..0000000
--- a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/box_curve25519xsalsa20poly1305_api.c
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "crypto_box_curve25519xsalsa20poly1305.h"
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_seedbytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_SEEDBYTES;
-}
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_publickeybytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES;
-}
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_secretkeybytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES;
-}
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_beforenmbytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES;
-}
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_noncebytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_NONCEBYTES;
-}
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_zerobytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_ZEROBYTES;
-}
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_boxzerobytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES;
-}
-
-size_t
-crypto_box_curve25519xsalsa20poly1305_macbytes(void) {
-    return crypto_box_curve25519xsalsa20poly1305_MACBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c b/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
deleted file mode 100644
index c35ca2e..0000000
--- a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/after_curve25519xsalsa20poly1305.c
+++ /dev/null
@@ -1,22 +0,0 @@
-#include "crypto_box_curve25519xsalsa20poly1305.h"
-#include "crypto_secretbox_xsalsa20poly1305.h"
-
-int crypto_box_curve25519xsalsa20poly1305_afternm(
-  unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  return crypto_secretbox_xsalsa20poly1305(c,m,mlen,n,k);
-}
-
-int crypto_box_curve25519xsalsa20poly1305_open_afternm(
-  unsigned char *m,
-  const unsigned char *c,unsigned long long clen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  return crypto_secretbox_xsalsa20poly1305_open(m,c,clen,n,k);
-}
diff --git a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c b/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
deleted file mode 100644
index 2440c82..0000000
--- a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/before_curve25519xsalsa20poly1305.c
+++ /dev/null
@@ -1,21 +0,0 @@
-#include "crypto_box_curve25519xsalsa20poly1305.h"
-#include "crypto_core_hsalsa20.h"
-#include "crypto_scalarmult_curve25519.h"
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-static const unsigned char n[16] = {0};
-
-int crypto_box_curve25519xsalsa20poly1305_beforenm(
-  unsigned char *k,
-  const unsigned char *pk,
-  const unsigned char *sk
-)
-{
-  unsigned char s[32];
-  if (crypto_scalarmult_curve25519(s,sk,pk) != 0) {
-      return -1;
-  }
-  return crypto_core_hsalsa20(k,n,s,sigma);
-}
diff --git a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c b/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
deleted file mode 100644
index fdaa5e0..0000000
--- a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/box_curve25519xsalsa20poly1305.c
+++ /dev/null
@@ -1,42 +0,0 @@
-#include "crypto_box_curve25519xsalsa20poly1305.h"
-#include "utils.h"
-
-int crypto_box_curve25519xsalsa20poly1305(
-  unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n,
-  const unsigned char *pk,
-  const unsigned char *sk
-)
-{
-  unsigned char k[crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES];
-  int           ret;
-
-  if (crypto_box_curve25519xsalsa20poly1305_beforenm(k,pk,sk) != 0) {
-      return -1;
-  }
-  ret = crypto_box_curve25519xsalsa20poly1305_afternm(c,m,mlen,n,k);
-  sodium_memzero(k, sizeof k);
-
-  return ret;
-}
-
-int crypto_box_curve25519xsalsa20poly1305_open(
-  unsigned char *m,
-  const unsigned char *c,unsigned long long clen,
-  const unsigned char *n,
-  const unsigned char *pk,
-  const unsigned char *sk
-)
-{
-  unsigned char k[crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES];
-  int           ret;
-
-  if (crypto_box_curve25519xsalsa20poly1305_beforenm(k,pk,sk) != 0) {
-      return -1;
-  }
-  ret = crypto_box_curve25519xsalsa20poly1305_open_afternm(m,c,clen,n,k);
-  sodium_memzero(k, sizeof k);
-
-  return ret;
-}
diff --git a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c b/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
deleted file mode 100644
index 60efce4..0000000
--- a/libsodium/src/libsodium/crypto_box/curve25519xsalsa20poly1305/ref/keypair_curve25519xsalsa20poly1305.c
+++ /dev/null
@@ -1,29 +0,0 @@
-#include <string.h>
-
-#include "crypto_box_curve25519xsalsa20poly1305.h"
-#include "crypto_hash_sha512.h"
-#include "crypto_scalarmult_curve25519.h"
-#include "randombytes.h"
-#include "utils.h"
-
-int crypto_box_curve25519xsalsa20poly1305_seed_keypair(
-  unsigned char *pk,
-  unsigned char *sk,
-  const unsigned char *seed
-)
-{
-  unsigned char hash[64];
-  crypto_hash_sha512(hash,seed,32);
-  memmove(sk,hash,32);
-  sodium_memzero(hash, sizeof hash);
-  return crypto_scalarmult_curve25519_base(pk,sk);
-}
-
-int crypto_box_curve25519xsalsa20poly1305_keypair(
-  unsigned char *pk,
-  unsigned char *sk
-)
-{
-  randombytes_buf(sk,32);
-  return crypto_scalarmult_curve25519_base(pk,sk);
-}
diff --git a/libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c b/libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c
deleted file mode 100644
index 37c4923..0000000
--- a/libsodium/src/libsodium/crypto_core/hsalsa20/core_hsalsa20_api.c
+++ /dev/null
@@ -1,21 +0,0 @@
-#include "crypto_core_hsalsa20.h"
-
-size_t
-crypto_core_hsalsa20_outputbytes(void) {
-    return crypto_core_hsalsa20_OUTPUTBYTES;
-}
-
-size_t
-crypto_core_hsalsa20_inputbytes(void) {
-    return crypto_core_hsalsa20_INPUTBYTES;
-}
-
-size_t
-crypto_core_hsalsa20_keybytes(void) {
-    return crypto_core_hsalsa20_KEYBYTES;
-}
-
-size_t
-crypto_core_hsalsa20_constbytes(void) {
-    return crypto_core_hsalsa20_CONSTBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c b/libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c
deleted file mode 100644
index ae71f0b..0000000
--- a/libsodium/src/libsodium/crypto_core/hsalsa20/ref2/core_hsalsa20.c
+++ /dev/null
@@ -1,108 +0,0 @@
-/*
-version 20080912
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_hsalsa20.h"
-
-#define ROUNDS 20
-
-typedef unsigned int uint32;
-
-static uint32 rotate(uint32 u,int c)
-{
-  return (u << c) | (u >> (32 - c));
-}
-
-static uint32 load_littleendian(const unsigned char *x)
-{
-  return
-      (uint32) (x[0]) \
-  | (((uint32) (x[1])) << 8) \
-  | (((uint32) (x[2])) << 16) \
-  | (((uint32) (x[3])) << 24)
-  ;
-}
-
-static void store_littleendian(unsigned char *x,uint32 u)
-{
-  x[0] = u; u >>= 8;
-  x[1] = u; u >>= 8;
-  x[2] = u; u >>= 8;
-  x[3] = u;
-}
-
-int crypto_core_hsalsa20(
-        unsigned char *out,
-  const unsigned char *in,
-  const unsigned char *k,
-  const unsigned char *c
-)
-{
-  uint32 x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;
-  int i;
-
-  x0 = load_littleendian(c + 0);
-  x1 = load_littleendian(k + 0);
-  x2 = load_littleendian(k + 4);
-  x3 = load_littleendian(k + 8);
-  x4 = load_littleendian(k + 12);
-  x5 = load_littleendian(c + 4);
-  x6 = load_littleendian(in + 0);
-  x7 = load_littleendian(in + 4);
-  x8 = load_littleendian(in + 8);
-  x9 = load_littleendian(in + 12);
-  x10 = load_littleendian(c + 8);
-  x11 = load_littleendian(k + 16);
-  x12 = load_littleendian(k + 20);
-  x13 = load_littleendian(k + 24);
-  x14 = load_littleendian(k + 28);
-  x15 = load_littleendian(c + 12);
-
-  for (i = ROUNDS;i > 0;i -= 2) {
-     x4 ^= rotate( x0+x12, 7);
-     x8 ^= rotate( x4+ x0, 9);
-    x12 ^= rotate( x8+ x4,13);
-     x0 ^= rotate(x12+ x8,18);
-     x9 ^= rotate( x5+ x1, 7);
-    x13 ^= rotate( x9+ x5, 9);
-     x1 ^= rotate(x13+ x9,13);
-     x5 ^= rotate( x1+x13,18);
-    x14 ^= rotate(x10+ x6, 7);
-     x2 ^= rotate(x14+x10, 9);
-     x6 ^= rotate( x2+x14,13);
-    x10 ^= rotate( x6+ x2,18);
-     x3 ^= rotate(x15+x11, 7);
-     x7 ^= rotate( x3+x15, 9);
-    x11 ^= rotate( x7+ x3,13);
-    x15 ^= rotate(x11+ x7,18);
-     x1 ^= rotate( x0+ x3, 7);
-     x2 ^= rotate( x1+ x0, 9);
-     x3 ^= rotate( x2+ x1,13);
-     x0 ^= rotate( x3+ x2,18);
-     x6 ^= rotate( x5+ x4, 7);
-     x7 ^= rotate( x6+ x5, 9);
-     x4 ^= rotate( x7+ x6,13);
-     x5 ^= rotate( x4+ x7,18);
-    x11 ^= rotate(x10+ x9, 7);
-     x8 ^= rotate(x11+x10, 9);
-     x9 ^= rotate( x8+x11,13);
-    x10 ^= rotate( x9+ x8,18);
-    x12 ^= rotate(x15+x14, 7);
-    x13 ^= rotate(x12+x15, 9);
-    x14 ^= rotate(x13+x12,13);
-    x15 ^= rotate(x14+x13,18);
-  }
-
-  store_littleendian(out + 0,x0);
-  store_littleendian(out + 4,x5);
-  store_littleendian(out + 8,x10);
-  store_littleendian(out + 12,x15);
-  store_littleendian(out + 16,x6);
-  store_littleendian(out + 20,x7);
-  store_littleendian(out + 24,x8);
-  store_littleendian(out + 28,x9);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c b/libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c
deleted file mode 100644
index 910b461..0000000
--- a/libsodium/src/libsodium/crypto_core/salsa20/core_salsa20_api.c
+++ /dev/null
@@ -1,21 +0,0 @@
-#include "crypto_core_salsa20.h"
-
-size_t
-crypto_core_salsa20_outputbytes(void) {
-    return crypto_core_salsa20_OUTPUTBYTES;
-}
-
-size_t
-crypto_core_salsa20_inputbytes(void) {
-    return crypto_core_salsa20_INPUTBYTES;
-}
-
-size_t
-crypto_core_salsa20_keybytes(void) {
-    return crypto_core_salsa20_KEYBYTES;
-}
-
-size_t
-crypto_core_salsa20_constbytes(void) {
-    return crypto_core_salsa20_CONSTBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c b/libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c
deleted file mode 100644
index 8096791..0000000
--- a/libsodium/src/libsodium/crypto_core/salsa20/ref/core_salsa20.c
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
-version 20080912
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa20.h"
-
-#define ROUNDS 20
-
-typedef unsigned int uint32;
-
-static uint32 rotate(uint32 u,int c)
-{
-  return (u << c) | (u >> (32 - c));
-}
-
-static uint32 load_littleendian(const unsigned char *x)
-{
-  return
-      (uint32) (x[0]) \
-  | (((uint32) (x[1])) << 8) \
-  | (((uint32) (x[2])) << 16) \
-  | (((uint32) (x[3])) << 24)
-  ;
-}
-
-static void store_littleendian(unsigned char *x,uint32 u)
-{
-  x[0] = u; u >>= 8;
-  x[1] = u; u >>= 8;
-  x[2] = u; u >>= 8;
-  x[3] = u;
-}
-
-int crypto_core_salsa20(
-        unsigned char *out,
-  const unsigned char *in,
-  const unsigned char *k,
-  const unsigned char *c
-)
-{
-  uint32 x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;
-  uint32 j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;
-  int i;
-
-  j0 = x0 = load_littleendian(c + 0);
-  j1 = x1 = load_littleendian(k + 0);
-  j2 = x2 = load_littleendian(k + 4);
-  j3 = x3 = load_littleendian(k + 8);
-  j4 = x4 = load_littleendian(k + 12);
-  j5 = x5 = load_littleendian(c + 4);
-  j6 = x6 = load_littleendian(in + 0);
-  j7 = x7 = load_littleendian(in + 4);
-  j8 = x8 = load_littleendian(in + 8);
-  j9 = x9 = load_littleendian(in + 12);
-  j10 = x10 = load_littleendian(c + 8);
-  j11 = x11 = load_littleendian(k + 16);
-  j12 = x12 = load_littleendian(k + 20);
-  j13 = x13 = load_littleendian(k + 24);
-  j14 = x14 = load_littleendian(k + 28);
-  j15 = x15 = load_littleendian(c + 12);
-
-  for (i = ROUNDS;i > 0;i -= 2) {
-     x4 ^= rotate( x0+x12, 7);
-     x8 ^= rotate( x4+ x0, 9);
-    x12 ^= rotate( x8+ x4,13);
-     x0 ^= rotate(x12+ x8,18);
-     x9 ^= rotate( x5+ x1, 7);
-    x13 ^= rotate( x9+ x5, 9);
-     x1 ^= rotate(x13+ x9,13);
-     x5 ^= rotate( x1+x13,18);
-    x14 ^= rotate(x10+ x6, 7);
-     x2 ^= rotate(x14+x10, 9);
-     x6 ^= rotate( x2+x14,13);
-    x10 ^= rotate( x6+ x2,18);
-     x3 ^= rotate(x15+x11, 7);
-     x7 ^= rotate( x3+x15, 9);
-    x11 ^= rotate( x7+ x3,13);
-    x15 ^= rotate(x11+ x7,18);
-     x1 ^= rotate( x0+ x3, 7);
-     x2 ^= rotate( x1+ x0, 9);
-     x3 ^= rotate( x2+ x1,13);
-     x0 ^= rotate( x3+ x2,18);
-     x6 ^= rotate( x5+ x4, 7);
-     x7 ^= rotate( x6+ x5, 9);
-     x4 ^= rotate( x7+ x6,13);
-     x5 ^= rotate( x4+ x7,18);
-    x11 ^= rotate(x10+ x9, 7);
-     x8 ^= rotate(x11+x10, 9);
-     x9 ^= rotate( x8+x11,13);
-    x10 ^= rotate( x9+ x8,18);
-    x12 ^= rotate(x15+x14, 7);
-    x13 ^= rotate(x12+x15, 9);
-    x14 ^= rotate(x13+x12,13);
-    x15 ^= rotate(x14+x13,18);
-  }
-
-  x0 += j0;
-  x1 += j1;
-  x2 += j2;
-  x3 += j3;
-  x4 += j4;
-  x5 += j5;
-  x6 += j6;
-  x7 += j7;
-  x8 += j8;
-  x9 += j9;
-  x10 += j10;
-  x11 += j11;
-  x12 += j12;
-  x13 += j13;
-  x14 += j14;
-  x15 += j15;
-
-  store_littleendian(out + 0,x0);
-  store_littleendian(out + 4,x1);
-  store_littleendian(out + 8,x2);
-  store_littleendian(out + 12,x3);
-  store_littleendian(out + 16,x4);
-  store_littleendian(out + 20,x5);
-  store_littleendian(out + 24,x6);
-  store_littleendian(out + 28,x7);
-  store_littleendian(out + 32,x8);
-  store_littleendian(out + 36,x9);
-  store_littleendian(out + 40,x10);
-  store_littleendian(out + 44,x11);
-  store_littleendian(out + 48,x12);
-  store_littleendian(out + 52,x13);
-  store_littleendian(out + 56,x14);
-  store_littleendian(out + 60,x15);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c b/libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c
deleted file mode 100644
index e49a81e..0000000
--- a/libsodium/src/libsodium/crypto_core/salsa2012/core_salsa2012_api.c
+++ /dev/null
@@ -1,21 +0,0 @@
-#include "crypto_core_salsa2012.h"
-
-size_t
-crypto_core_salsa2012_outputbytes(void) {
-    return crypto_core_salsa2012_OUTPUTBYTES;
-}
-
-size_t
-crypto_core_salsa2012_inputbytes(void) {
-    return crypto_core_salsa2012_INPUTBYTES;
-}
-
-size_t
-crypto_core_salsa2012_keybytes(void) {
-    return crypto_core_salsa2012_KEYBYTES;
-}
-
-size_t
-crypto_core_salsa2012_constbytes(void) {
-    return crypto_core_salsa2012_CONSTBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c b/libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c
deleted file mode 100644
index 2c3d540..0000000
--- a/libsodium/src/libsodium/crypto_core/salsa2012/ref/core_salsa2012.c
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
-version 20080913
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa2012.h"
-
-#define ROUNDS 12
-
-typedef unsigned int uint32;
-
-static uint32 rotate(uint32 u,int c)
-{
-  return (u << c) | (u >> (32 - c));
-}
-
-static uint32 load_littleendian(const unsigned char *x)
-{
-  return
-      (uint32) (x[0]) \
-  | (((uint32) (x[1])) << 8) \
-  | (((uint32) (x[2])) << 16) \
-  | (((uint32) (x[3])) << 24)
-  ;
-}
-
-static void store_littleendian(unsigned char *x,uint32 u)
-{
-  x[0] = u; u >>= 8;
-  x[1] = u; u >>= 8;
-  x[2] = u; u >>= 8;
-  x[3] = u;
-}
-
-int crypto_core_salsa2012(
-        unsigned char *out,
-  const unsigned char *in,
-  const unsigned char *k,
-  const unsigned char *c
-)
-{
-  uint32 x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;
-  uint32 j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;
-  int i;
-
-  j0 = x0 = load_littleendian(c + 0);
-  j1 = x1 = load_littleendian(k + 0);
-  j2 = x2 = load_littleendian(k + 4);
-  j3 = x3 = load_littleendian(k + 8);
-  j4 = x4 = load_littleendian(k + 12);
-  j5 = x5 = load_littleendian(c + 4);
-  j6 = x6 = load_littleendian(in + 0);
-  j7 = x7 = load_littleendian(in + 4);
-  j8 = x8 = load_littleendian(in + 8);
-  j9 = x9 = load_littleendian(in + 12);
-  j10 = x10 = load_littleendian(c + 8);
-  j11 = x11 = load_littleendian(k + 16);
-  j12 = x12 = load_littleendian(k + 20);
-  j13 = x13 = load_littleendian(k + 24);
-  j14 = x14 = load_littleendian(k + 28);
-  j15 = x15 = load_littleendian(c + 12);
-
-  for (i = ROUNDS;i > 0;i -= 2) {
-     x4 ^= rotate( x0+x12, 7);
-     x8 ^= rotate( x4+ x0, 9);
-    x12 ^= rotate( x8+ x4,13);
-     x0 ^= rotate(x12+ x8,18);
-     x9 ^= rotate( x5+ x1, 7);
-    x13 ^= rotate( x9+ x5, 9);
-     x1 ^= rotate(x13+ x9,13);
-     x5 ^= rotate( x1+x13,18);
-    x14 ^= rotate(x10+ x6, 7);
-     x2 ^= rotate(x14+x10, 9);
-     x6 ^= rotate( x2+x14,13);
-    x10 ^= rotate( x6+ x2,18);
-     x3 ^= rotate(x15+x11, 7);
-     x7 ^= rotate( x3+x15, 9);
-    x11 ^= rotate( x7+ x3,13);
-    x15 ^= rotate(x11+ x7,18);
-     x1 ^= rotate( x0+ x3, 7);
-     x2 ^= rotate( x1+ x0, 9);
-     x3 ^= rotate( x2+ x1,13);
-     x0 ^= rotate( x3+ x2,18);
-     x6 ^= rotate( x5+ x4, 7);
-     x7 ^= rotate( x6+ x5, 9);
-     x4 ^= rotate( x7+ x6,13);
-     x5 ^= rotate( x4+ x7,18);
-    x11 ^= rotate(x10+ x9, 7);
-     x8 ^= rotate(x11+x10, 9);
-     x9 ^= rotate( x8+x11,13);
-    x10 ^= rotate( x9+ x8,18);
-    x12 ^= rotate(x15+x14, 7);
-    x13 ^= rotate(x12+x15, 9);
-    x14 ^= rotate(x13+x12,13);
-    x15 ^= rotate(x14+x13,18);
-  }
-
-  x0 += j0;
-  x1 += j1;
-  x2 += j2;
-  x3 += j3;
-  x4 += j4;
-  x5 += j5;
-  x6 += j6;
-  x7 += j7;
-  x8 += j8;
-  x9 += j9;
-  x10 += j10;
-  x11 += j11;
-  x12 += j12;
-  x13 += j13;
-  x14 += j14;
-  x15 += j15;
-
-  store_littleendian(out + 0,x0);
-  store_littleendian(out + 4,x1);
-  store_littleendian(out + 8,x2);
-  store_littleendian(out + 12,x3);
-  store_littleendian(out + 16,x4);
-  store_littleendian(out + 20,x5);
-  store_littleendian(out + 24,x6);
-  store_littleendian(out + 28,x7);
-  store_littleendian(out + 32,x8);
-  store_littleendian(out + 36,x9);
-  store_littleendian(out + 40,x10);
-  store_littleendian(out + 44,x11);
-  store_littleendian(out + 48,x12);
-  store_littleendian(out + 52,x13);
-  store_littleendian(out + 56,x14);
-  store_littleendian(out + 60,x15);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c b/libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c
deleted file mode 100644
index 72c336c..0000000
--- a/libsodium/src/libsodium/crypto_core/salsa208/core_salsa208_api.c
+++ /dev/null
@@ -1,21 +0,0 @@
-#include "crypto_core_salsa208.h"
-
-size_t
-crypto_core_salsa208_outputbytes(void) {
-    return crypto_core_salsa208_OUTPUTBYTES;
-}
-
-size_t
-crypto_core_salsa208_inputbytes(void) {
-    return crypto_core_salsa208_INPUTBYTES;
-}
-
-size_t
-crypto_core_salsa208_keybytes(void) {
-    return crypto_core_salsa208_KEYBYTES;
-}
-
-size_t
-crypto_core_salsa208_constbytes(void) {
-    return crypto_core_salsa208_CONSTBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c b/libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c
deleted file mode 100644
index 5078bfb..0000000
--- a/libsodium/src/libsodium/crypto_core/salsa208/ref/core_salsa208.c
+++ /dev/null
@@ -1,134 +0,0 @@
-/*
-version 20080913
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa208.h"
-
-#define ROUNDS 8
-
-typedef unsigned int uint32;
-
-static uint32 rotate(uint32 u,int c)
-{
-  return (u << c) | (u >> (32 - c));
-}
-
-static uint32 load_littleendian(const unsigned char *x)
-{
-  return
-      (uint32) (x[0]) \
-  | (((uint32) (x[1])) << 8) \
-  | (((uint32) (x[2])) << 16) \
-  | (((uint32) (x[3])) << 24)
-  ;
-}
-
-static void store_littleendian(unsigned char *x,uint32 u)
-{
-  x[0] = u; u >>= 8;
-  x[1] = u; u >>= 8;
-  x[2] = u; u >>= 8;
-  x[3] = u;
-}
-
-int crypto_core_salsa208(
-        unsigned char *out,
-  const unsigned char *in,
-  const unsigned char *k,
-  const unsigned char *c
-)
-{
-  uint32 x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;
-  uint32 j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;
-  int i;
-
-  j0 = x0 = load_littleendian(c + 0);
-  j1 = x1 = load_littleendian(k + 0);
-  j2 = x2 = load_littleendian(k + 4);
-  j3 = x3 = load_littleendian(k + 8);
-  j4 = x4 = load_littleendian(k + 12);
-  j5 = x5 = load_littleendian(c + 4);
-  j6 = x6 = load_littleendian(in + 0);
-  j7 = x7 = load_littleendian(in + 4);
-  j8 = x8 = load_littleendian(in + 8);
-  j9 = x9 = load_littleendian(in + 12);
-  j10 = x10 = load_littleendian(c + 8);
-  j11 = x11 = load_littleendian(k + 16);
-  j12 = x12 = load_littleendian(k + 20);
-  j13 = x13 = load_littleendian(k + 24);
-  j14 = x14 = load_littleendian(k + 28);
-  j15 = x15 = load_littleendian(c + 12);
-
-  for (i = ROUNDS;i > 0;i -= 2) {
-     x4 ^= rotate( x0+x12, 7);
-     x8 ^= rotate( x4+ x0, 9);
-    x12 ^= rotate( x8+ x4,13);
-     x0 ^= rotate(x12+ x8,18);
-     x9 ^= rotate( x5+ x1, 7);
-    x13 ^= rotate( x9+ x5, 9);
-     x1 ^= rotate(x13+ x9,13);
-     x5 ^= rotate( x1+x13,18);
-    x14 ^= rotate(x10+ x6, 7);
-     x2 ^= rotate(x14+x10, 9);
-     x6 ^= rotate( x2+x14,13);
-    x10 ^= rotate( x6+ x2,18);
-     x3 ^= rotate(x15+x11, 7);
-     x7 ^= rotate( x3+x15, 9);
-    x11 ^= rotate( x7+ x3,13);
-    x15 ^= rotate(x11+ x7,18);
-     x1 ^= rotate( x0+ x3, 7);
-     x2 ^= rotate( x1+ x0, 9);
-     x3 ^= rotate( x2+ x1,13);
-     x0 ^= rotate( x3+ x2,18);
-     x6 ^= rotate( x5+ x4, 7);
-     x7 ^= rotate( x6+ x5, 9);
-     x4 ^= rotate( x7+ x6,13);
-     x5 ^= rotate( x4+ x7,18);
-    x11 ^= rotate(x10+ x9, 7);
-     x8 ^= rotate(x11+x10, 9);
-     x9 ^= rotate( x8+x11,13);
-    x10 ^= rotate( x9+ x8,18);
-    x12 ^= rotate(x15+x14, 7);
-    x13 ^= rotate(x12+x15, 9);
-    x14 ^= rotate(x13+x12,13);
-    x15 ^= rotate(x14+x13,18);
-  }
-
-  x0 += j0;
-  x1 += j1;
-  x2 += j2;
-  x3 += j3;
-  x4 += j4;
-  x5 += j5;
-  x6 += j6;
-  x7 += j7;
-  x8 += j8;
-  x9 += j9;
-  x10 += j10;
-  x11 += j11;
-  x12 += j12;
-  x13 += j13;
-  x14 += j14;
-  x15 += j15;
-
-  store_littleendian(out + 0,x0);
-  store_littleendian(out + 4,x1);
-  store_littleendian(out + 8,x2);
-  store_littleendian(out + 12,x3);
-  store_littleendian(out + 16,x4);
-  store_littleendian(out + 20,x5);
-  store_littleendian(out + 24,x6);
-  store_littleendian(out + 28,x7);
-  store_littleendian(out + 32,x8);
-  store_littleendian(out + 36,x9);
-  store_littleendian(out + 40,x10);
-  store_littleendian(out + 44,x11);
-  store_littleendian(out + 48,x12);
-  store_littleendian(out + 52,x13);
-  store_littleendian(out + 56,x14);
-  store_littleendian(out + 60,x15);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c b/libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c
deleted file mode 100644
index b775921..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/generichash_blake2_api.c
+++ /dev/null
@@ -1,41 +0,0 @@
-#include "crypto_generichash_blake2b.h"
-
-size_t
-crypto_generichash_blake2b_bytes_min(void) {
-    return crypto_generichash_blake2b_BYTES_MIN;
-}
-
-size_t
-crypto_generichash_blake2b_bytes_max(void) {
-    return crypto_generichash_blake2b_BYTES_MAX;
-}
-
-size_t
-crypto_generichash_blake2b_bytes(void) {
-    return crypto_generichash_blake2b_BYTES;
-}
-
-size_t
-crypto_generichash_blake2b_keybytes_min(void) {
-    return crypto_generichash_blake2b_KEYBYTES_MIN;
-}
-
-size_t
-crypto_generichash_blake2b_keybytes_max(void) {
-    return crypto_generichash_blake2b_KEYBYTES_MAX;
-}
-
-size_t
-crypto_generichash_blake2b_keybytes(void) {
-    return crypto_generichash_blake2b_KEYBYTES;
-}
-
-size_t
-crypto_generichash_blake2b_saltbytes(void) {
-    return crypto_generichash_blake2b_SALTBYTES;
-}
-
-size_t
-crypto_generichash_blake2b_personalbytes(void) {
-    return crypto_generichash_blake2b_PERSONALBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h
deleted file mode 100644
index b14728d..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2-impl.h
+++ /dev/null
@@ -1,137 +0,0 @@
-/*
-   BLAKE2 reference source code package - reference C implementations
-
-   Written in 2012 by Samuel Neves <sneves@dei.uc.pt>
-
-   To the extent possible under law, the author(s) have dedicated all copyright
-   and related and neighboring rights to this software to the public domain
-   worldwide. This software is distributed without any warranty.
-
-   You should have received a copy of the CC0 Public Domain Dedication along with
-   this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
-*/
-
-#ifndef blake2_impl_H
-#define blake2_impl_H
-
-#include <stdint.h>
-#include <string.h>
-
-#include "utils.h"
-
-static inline uint32_t load32( const void *src )
-{
-#ifdef NATIVE_LITTLE_ENDIAN
-  uint32_t w;
-  memcpy(&w, src, sizeof w);
-  return w;
-#else
-  const uint8_t *p = ( const uint8_t * )src;
-  uint32_t w = *p++;
-  w |= ( uint32_t )( *p++ ) <<  8;
-  w |= ( uint32_t )( *p++ ) << 16;
-  w |= ( uint32_t )( *p++ ) << 24;
-  return w;
-#endif
-}
-
-static inline uint64_t load64( const void *src )
-{
-#ifdef NATIVE_LITTLE_ENDIAN
-  uint64_t w;
-  memcpy(&w, src, sizeof w);
-  return w;
-#else
-  const uint8_t *p = ( const uint8_t * )src;
-  uint64_t w = *p++;
-  w |= ( uint64_t )( *p++ ) <<  8;
-  w |= ( uint64_t )( *p++ ) << 16;
-  w |= ( uint64_t )( *p++ ) << 24;
-  w |= ( uint64_t )( *p++ ) << 32;
-  w |= ( uint64_t )( *p++ ) << 40;
-  w |= ( uint64_t )( *p++ ) << 48;
-  w |= ( uint64_t )( *p++ ) << 56;
-  return w;
-#endif
-}
-
-static inline void store32( void *dst, uint32_t w )
-{
-#ifdef NATIVE_LITTLE_ENDIAN
-  memcpy(dst, &w, sizeof w);
-#else
-  uint8_t *p = ( uint8_t * )dst;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w;
-#endif
-}
-
-static inline void store64( void *dst, uint64_t w )
-{
-#ifdef NATIVE_LITTLE_ENDIAN
-  memcpy(dst, &w, sizeof w);
-#else
-  uint8_t *p = ( uint8_t * )dst;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w;
-#endif
-}
-
-static inline uint64_t load48( const void *src )
-{
-  const uint8_t *p = ( const uint8_t * )src;
-  uint64_t w = *p++;
-  w |= ( uint64_t )( *p++ ) <<  8;
-  w |= ( uint64_t )( *p++ ) << 16;
-  w |= ( uint64_t )( *p++ ) << 24;
-  w |= ( uint64_t )( *p++ ) << 32;
-  w |= ( uint64_t )( *p++ ) << 40;
-  return w;
-}
-
-static inline void store48( void *dst, uint64_t w )
-{
-  uint8_t *p = ( uint8_t * )dst;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w; w >>= 8;
-  *p++ = ( uint8_t )w;
-}
-
-static inline uint32_t rotl32( const uint32_t w, const unsigned c )
-{
-  return ( w << c ) | ( w >> ( 32 - c ) );
-}
-
-static inline uint64_t rotl64( const uint64_t w, const unsigned c )
-{
-  return ( w << c ) | ( w >> ( 64 - c ) );
-}
-
-static inline uint32_t rotr32( const uint32_t w, const unsigned c )
-{
-  return ( w >> c ) | ( w << ( 32 - c ) );
-}
-
-static inline uint64_t rotr64( const uint64_t w, const unsigned c )
-{
-  return ( w >> c ) | ( w << ( 64 - c ) );
-}
-
-/* prevents compiler optimizing out memset() */
-static inline void secure_zero_memory( void *v, size_t n )
-{
-  sodium_memzero(v, n);
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h
deleted file mode 100644
index 3f53fd0..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2.h
+++ /dev/null
@@ -1,188 +0,0 @@
-/*
-   BLAKE2 reference source code package - reference C implementations
-
-   Written in 2012 by Samuel Neves <sneves@dei.uc.pt>
-
-   To the extent possible under law, the author(s) have dedicated all copyright
-   and related and neighboring rights to this software to the public domain
-   worldwide. This software is distributed without any warranty.
-
-   You should have received a copy of the CC0 Public Domain Dedication along with
-   this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
-*/
-
-#ifndef blake2_H
-#define blake2_H
-
-#include <stddef.h>
-#include <stdint.h>
-
-#include "crypto_generichash_blake2b.h"
-#include "export.h"
-
-#define blake2b_init_param               crypto_generichash_blake2b__init_param
-#define blake2b_init                     crypto_generichash_blake2b__init
-#define blake2b_init_salt_personal       crypto_generichash_blake2b__init_salt_personal
-#define blake2b_init_key                 crypto_generichash_blake2b__init_key
-#define blake2b_init_key_salt_personal   crypto_generichash_blake2b__init_key_salt_personal
-#define blake2b_update                   crypto_generichash_blake2b__update
-#define blake2b_final                    crypto_generichash_blake2b__final
-#define blake2b                          crypto_generichash_blake2b__blake2b
-#define blake2b_salt_personal            crypto_generichash_blake2b__blake2b_salt_personal
-#define blake2b_pick_best_implementation crypto_generichash_blake2b__pick_best_implementation
-
-#if defined(__cplusplus)
-extern "C" {
-#endif
-
-  enum blake2s_constant
-  {
-    BLAKE2S_BLOCKBYTES = 64,
-    BLAKE2S_OUTBYTES   = 32,
-    BLAKE2S_KEYBYTES   = 32,
-    BLAKE2S_SALTBYTES  = 8,
-    BLAKE2S_PERSONALBYTES = 8
-  };
-
-  enum blake2b_constant
-  {
-    BLAKE2B_BLOCKBYTES = 128,
-    BLAKE2B_OUTBYTES   = 64,
-    BLAKE2B_KEYBYTES   = 64,
-    BLAKE2B_SALTBYTES  = 16,
-    BLAKE2B_PERSONALBYTES = 16
-  };
-
-#if defined(__IBMC__) || defined(__SUNPRO_C) || defined(__SUNPRO_CC)
-# pragma pack(1)
-#else
-# pragma pack(push, 1)
-#endif
-
-  typedef struct blake2s_param_
-  {
-    uint8_t  digest_length; // 1
-    uint8_t  key_length;    // 2
-    uint8_t  fanout;        // 3
-    uint8_t  depth;         // 4
-    uint32_t leaf_length;   // 8
-    uint8_t  node_offset[6];// 14
-    uint8_t  node_depth;    // 15
-    uint8_t  inner_length;  // 16
-    // uint8_t  reserved[0];
-    uint8_t  salt[BLAKE2S_SALTBYTES]; // 24
-    uint8_t  personal[BLAKE2S_PERSONALBYTES];  // 32
-  } blake2s_param;
-
-CRYPTO_ALIGN( 64 ) typedef struct blake2s_state_
-  {
-    uint32_t h[8];
-    uint32_t t[2];
-    uint32_t f[2];
-    uint8_t  buf[2 * BLAKE2S_BLOCKBYTES];
-    size_t   buflen;
-    uint8_t  last_node;
-  } blake2s_state ;
-
-  typedef struct blake2b_param_
-  {
-    uint8_t  digest_length; // 1
-    uint8_t  key_length;    // 2
-    uint8_t  fanout;        // 3
-    uint8_t  depth;         // 4
-    uint32_t leaf_length;   // 8
-    uint64_t node_offset;   // 16
-    uint8_t  node_depth;    // 17
-    uint8_t  inner_length;  // 18
-    uint8_t  reserved[14];  // 32
-    uint8_t  salt[BLAKE2B_SALTBYTES]; // 48
-    uint8_t  personal[BLAKE2B_PERSONALBYTES];  // 64
-  } blake2b_param;
-
-#ifndef DEFINE_BLAKE2B_STATE
-typedef crypto_generichash_blake2b_state blake2b_state;
-#else
-CRYPTO_ALIGN( 64 ) typedef struct blake2b_state_
-  {
-    uint64_t h[8];
-    uint64_t t[2];
-    uint64_t f[2];
-    uint8_t  buf[2 * BLAKE2B_BLOCKBYTES];
-    size_t   buflen;
-    uint8_t  last_node;
-  } blake2b_state;
-#endif
-
-  typedef struct blake2sp_state_
-  {
-    blake2s_state S[8][1];
-    blake2s_state R[1];
-    uint8_t buf[8 * BLAKE2S_BLOCKBYTES];
-    size_t  buflen;
-  } blake2sp_state;
-
-  typedef struct blake2bp_state_
-  {
-    blake2b_state S[4][1];
-    blake2b_state R[1];
-    uint8_t buf[4 * BLAKE2B_BLOCKBYTES];
-    size_t  buflen;
-  } blake2bp_state;
-
-#if defined(__IBMC__) || defined(__SUNPRO_C) || defined(__SUNPRO_CC)
-# pragma pack()
-#else
-# pragma pack(pop)
-#endif
-
-  // Streaming API
-  int blake2s_init( blake2s_state *S, const uint8_t outlen );
-  int blake2s_init_key( blake2s_state *S, const uint8_t outlen, const void *key, const uint8_t keylen );
-  int blake2s_init_param( blake2s_state *S, const blake2s_param *P );
-  int blake2s_update( blake2s_state *S, const uint8_t *in, uint64_t inlen );
-  int blake2s_final( blake2s_state *S, uint8_t *out, uint8_t outlen );
-
-  int blake2b_init( blake2b_state *S, const uint8_t outlen );
-  int blake2b_init_salt_personal( blake2b_state *S, const uint8_t outlen,
-                                  const void *personal, const void *salt );
-  int blake2b_init_key( blake2b_state *S, const uint8_t outlen, const void *key, const uint8_t keylen );
-  int blake2b_init_key_salt_personal( blake2b_state *S, const uint8_t outlen, const void *key, const uint8_t keylen,
-                                      const void *salt, const void *personal );
-  int blake2b_init_param( blake2b_state *S, const blake2b_param *P );
-  int blake2b_update( blake2b_state *S, const uint8_t *in, uint64_t inlen );
-  int blake2b_final( blake2b_state *S, uint8_t *out, uint8_t outlen );
-
-  int blake2sp_init( blake2sp_state *S, const uint8_t outlen );
-  int blake2sp_init_key( blake2sp_state *S, const uint8_t outlen, const void *key, const uint8_t keylen );
-  int blake2sp_update( blake2sp_state *S, const uint8_t *in, uint64_t inlen );
-  int blake2sp_final( blake2sp_state *S, uint8_t *out, uint8_t outlen );
-
-  int blake2bp_init( blake2bp_state *S, const uint8_t outlen );
-  int blake2bp_init_key( blake2bp_state *S, const uint8_t outlen, const void *key, const uint8_t keylen );
-  int blake2bp_update( blake2bp_state *S, const uint8_t *in, uint64_t inlen );
-  int blake2bp_final( blake2bp_state *S, uint8_t *out, uint8_t outlen );
-
-  // Simple API
-  int blake2s( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen );
-  int blake2b( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen );
-  int blake2b_salt_personal( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen, const void *salt, const void *personal );
-
-  int blake2sp( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen );
-  int blake2bp( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen );
-
-  static inline int blake2( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen )
-  {
-    return blake2b( out, in, key, outlen, inlen, keylen );
-  }
-
-  typedef int ( *blake2b_compress_fn )( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] );
-  int blake2b_pick_best_implementation(void);
-  int blake2b_compress_ref( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] );
-  int blake2b_compress_ssse3( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] );
-  int blake2b_compress_sse41( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] );
-
-#if defined(__cplusplus)
-}
-#endif
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c
deleted file mode 100644
index c177ed1..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ref.c
+++ /dev/null
@@ -1,93 +0,0 @@
-
-#include <stdint.h>
-#include <string.h>
-
-#include "blake2.h"
-#include "blake2-impl.h"
-
-static const uint64_t blake2b_IV[8] =
-{
-  0x6a09e667f3bcc908ULL, 0xbb67ae8584caa73bULL,
-  0x3c6ef372fe94f82bULL, 0xa54ff53a5f1d36f1ULL,
-  0x510e527fade682d1ULL, 0x9b05688c2b3e6c1fULL,
-  0x1f83d9abfb41bd6bULL, 0x5be0cd19137e2179ULL
-};
-
-static const uint8_t blake2b_sigma[12][16] =
-{
-  {  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 } ,
-  { 14, 10,  4,  8,  9, 15, 13,  6,  1, 12,  0,  2, 11,  7,  5,  3 } ,
-  { 11,  8, 12,  0,  5,  2, 15, 13, 10, 14,  3,  6,  7,  1,  9,  4 } ,
-  {  7,  9,  3,  1, 13, 12, 11, 14,  2,  6,  5, 10,  4,  0, 15,  8 } ,
-  {  9,  0,  5,  7,  2,  4, 10, 15, 14,  1, 11, 12,  6,  8,  3, 13 } ,
-  {  2, 12,  6, 10,  0, 11,  8,  3,  4, 13,  7,  5, 15, 14,  1,  9 } ,
-  { 12,  5,  1, 15, 14, 13,  4, 10,  0,  7,  6,  3,  9,  2,  8, 11 } ,
-  { 13, 11,  7, 14, 12,  1,  3,  9,  5,  0, 15,  4,  8,  6,  2, 10 } ,
-  {  6, 15, 14,  9, 11,  3,  0,  8, 12,  2, 13,  7,  1,  4, 10,  5 } ,
-  { 10,  2,  8,  4,  7,  6,  1,  5, 15, 11,  9, 14,  3, 12, 13 , 0 } ,
-  {  0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15 } ,
-  { 14, 10,  4,  8,  9, 15, 13,  6,  1, 12,  0,  2, 11,  7,  5,  3 }
-};
-
-int blake2b_compress_ref( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] )
-{
-  uint64_t m[16];
-  uint64_t v[16];
-  int      i;
-
-  for( i = 0; i < 16; ++i )
-    m[i] = load64( block + i * sizeof( m[i] ) );
-
-  for( i = 0; i < 8; ++i )
-    v[i] = S->h[i];
-
-  v[ 8] = blake2b_IV[0];
-  v[ 9] = blake2b_IV[1];
-  v[10] = blake2b_IV[2];
-  v[11] = blake2b_IV[3];
-  v[12] = S->t[0] ^ blake2b_IV[4];
-  v[13] = S->t[1] ^ blake2b_IV[5];
-  v[14] = S->f[0] ^ blake2b_IV[6];
-  v[15] = S->f[1] ^ blake2b_IV[7];
-#define G(r,i,a,b,c,d) \
-  do { \
-    a = a + b + m[blake2b_sigma[r][2*i+0]]; \
-    d = rotr64(d ^ a, 32); \
-    c = c + d; \
-    b = rotr64(b ^ c, 24); \
-    a = a + b + m[blake2b_sigma[r][2*i+1]]; \
-    d = rotr64(d ^ a, 16); \
-    c = c + d; \
-    b = rotr64(b ^ c, 63); \
-  } while(0)
-#define ROUND(r)  \
-  do { \
-    G(r,0,v[ 0],v[ 4],v[ 8],v[12]); \
-    G(r,1,v[ 1],v[ 5],v[ 9],v[13]); \
-    G(r,2,v[ 2],v[ 6],v[10],v[14]); \
-    G(r,3,v[ 3],v[ 7],v[11],v[15]); \
-    G(r,4,v[ 0],v[ 5],v[10],v[15]); \
-    G(r,5,v[ 1],v[ 6],v[11],v[12]); \
-    G(r,6,v[ 2],v[ 7],v[ 8],v[13]); \
-    G(r,7,v[ 3],v[ 4],v[ 9],v[14]); \
-  } while(0)
-  ROUND( 0 );
-  ROUND( 1 );
-  ROUND( 2 );
-  ROUND( 3 );
-  ROUND( 4 );
-  ROUND( 5 );
-  ROUND( 6 );
-  ROUND( 7 );
-  ROUND( 8 );
-  ROUND( 9 );
-  ROUND( 10 );
-  ROUND( 11 );
-
-  for( i = 0; i < 8; ++i )
-    S->h[i] = S->h[i] ^ v[i] ^ v[i + 8];
-
-#undef G
-#undef ROUND
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c
deleted file mode 100644
index 48424e6..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-sse41.c
+++ /dev/null
@@ -1,80 +0,0 @@
-
-#define BLAKE2_USE_SSSE3
-#define BLAKE2_USE_SSE41
-
-#include <stdint.h>
-#include <string.h>
-
-#if (defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H) && defined(HAVE_SMMINTRIN_H)) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-
-#pragma GCC target("sse2")
-#pragma GCC target("ssse3")
-#pragma GCC target("sse4.1")
-
-#include <emmintrin.h>
-#include <tmmintrin.h>
-#include <smmintrin.h>
-
-#include "blake2.h"
-#include "blake2-impl.h"
-#include "blake2b-round.h"
-
-static const uint64_t blake2b_IV[8] =
-{
-  0x6a09e667f3bcc908ULL, 0xbb67ae8584caa73bULL,
-  0x3c6ef372fe94f82bULL, 0xa54ff53a5f1d36f1ULL,
-  0x510e527fade682d1ULL, 0x9b05688c2b3e6c1fULL,
-  0x1f83d9abfb41bd6bULL, 0x5be0cd19137e2179ULL
-};
-
-int blake2b_compress_sse41( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] )
-{
-  __m128i row1l, row1h;
-  __m128i row2l, row2h;
-  __m128i row3l, row3h;
-  __m128i row4l, row4h;
-  __m128i b0, b1;
-  __m128i t0, t1;
-  const __m128i r16 = _mm_setr_epi8( 2, 3, 4, 5, 6, 7, 0, 1, 10, 11, 12, 13, 14, 15, 8, 9 );
-  const __m128i r24 = _mm_setr_epi8( 3, 4, 5, 6, 7, 0, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10 );
-  const __m128i m0 = LOADU( block + 00 );
-  const __m128i m1 = LOADU( block + 16 );
-  const __m128i m2 = LOADU( block + 32 );
-  const __m128i m3 = LOADU( block + 48 );
-  const __m128i m4 = LOADU( block + 64 );
-  const __m128i m5 = LOADU( block + 80 );
-  const __m128i m6 = LOADU( block + 96 );
-  const __m128i m7 = LOADU( block + 112 );
-  row1l = LOADU( &S->h[0] );
-  row1h = LOADU( &S->h[2] );
-  row2l = LOADU( &S->h[4] );
-  row2h = LOADU( &S->h[6] );
-  row3l = LOADU( &blake2b_IV[0] );
-  row3h = LOADU( &blake2b_IV[2] );
-  row4l = _mm_xor_si128( LOADU( &blake2b_IV[4] ), LOADU( &S->t[0] ) );
-  row4h = _mm_xor_si128( LOADU( &blake2b_IV[6] ), LOADU( &S->f[0] ) );
-  ROUND( 0 );
-  ROUND( 1 );
-  ROUND( 2 );
-  ROUND( 3 );
-  ROUND( 4 );
-  ROUND( 5 );
-  ROUND( 6 );
-  ROUND( 7 );
-  ROUND( 8 );
-  ROUND( 9 );
-  ROUND( 10 );
-  ROUND( 11 );
-  row1l = _mm_xor_si128( row3l, row1l );
-  row1h = _mm_xor_si128( row3h, row1h );
-  STOREU( &S->h[0], _mm_xor_si128( LOADU( &S->h[0] ), row1l ) );
-  STOREU( &S->h[2], _mm_xor_si128( LOADU( &S->h[2] ), row1h ) );
-  row2l = _mm_xor_si128( row4l, row2l );
-  row2h = _mm_xor_si128( row4h, row2h );
-  STOREU( &S->h[4], _mm_xor_si128( LOADU( &S->h[4] ), row2l ) );
-  STOREU( &S->h[6], _mm_xor_si128( LOADU( &S->h[6] ), row2h ) );
-  return 0;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.c b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.c
deleted file mode 100644
index 775cac1..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-compress-ssse3.c
+++ /dev/null
@@ -1,89 +0,0 @@
-
-#define BLAKE2_USE_SSSE3
-
-#include <stdint.h>
-#include <string.h>
-
-#if (defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H)) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64)))
-
-#pragma GCC target("sse2")
-#pragma GCC target("ssse3")
-
-#ifdef _MSC_VER
-# include <intrin.h> /* for _mm_set_epi64x */
-#endif
-#include <emmintrin.h>
-#include <tmmintrin.h>
-
-#include "blake2.h"
-#include "blake2-impl.h"
-#include "blake2b-round.h"
-
-static const uint64_t blake2b_IV[8] =
-{
-  0x6a09e667f3bcc908ULL, 0xbb67ae8584caa73bULL,
-  0x3c6ef372fe94f82bULL, 0xa54ff53a5f1d36f1ULL,
-  0x510e527fade682d1ULL, 0x9b05688c2b3e6c1fULL,
-  0x1f83d9abfb41bd6bULL, 0x5be0cd19137e2179ULL
-};
-
-int blake2b_compress_ssse3( blake2b_state *S, const uint8_t block[BLAKE2B_BLOCKBYTES] )
-{
-  __m128i row1l, row1h;
-  __m128i row2l, row2h;
-  __m128i row3l, row3h;
-  __m128i row4l, row4h;
-  __m128i b0, b1;
-  __m128i t0, t1;
-  const __m128i r16 = _mm_setr_epi8( 2, 3, 4, 5, 6, 7, 0, 1, 10, 11, 12, 13, 14, 15, 8, 9 );
-  const __m128i r24 = _mm_setr_epi8( 3, 4, 5, 6, 7, 0, 1, 2, 11, 12, 13, 14, 15, 8, 9, 10 );
-  const uint64_t  m0 = ( ( uint64_t * )block )[ 0];
-  const uint64_t  m1 = ( ( uint64_t * )block )[ 1];
-  const uint64_t  m2 = ( ( uint64_t * )block )[ 2];
-  const uint64_t  m3 = ( ( uint64_t * )block )[ 3];
-  const uint64_t  m4 = ( ( uint64_t * )block )[ 4];
-  const uint64_t  m5 = ( ( uint64_t * )block )[ 5];
-  const uint64_t  m6 = ( ( uint64_t * )block )[ 6];
-  const uint64_t  m7 = ( ( uint64_t * )block )[ 7];
-  const uint64_t  m8 = ( ( uint64_t * )block )[ 8];
-  const uint64_t  m9 = ( ( uint64_t * )block )[ 9];
-  const uint64_t m10 = ( ( uint64_t * )block )[10];
-  const uint64_t m11 = ( ( uint64_t * )block )[11];
-  const uint64_t m12 = ( ( uint64_t * )block )[12];
-  const uint64_t m13 = ( ( uint64_t * )block )[13];
-  const uint64_t m14 = ( ( uint64_t * )block )[14];
-  const uint64_t m15 = ( ( uint64_t * )block )[15];
-
-  row1l = LOADU( &S->h[0] );
-  row1h = LOADU( &S->h[2] );
-  row2l = LOADU( &S->h[4] );
-  row2h = LOADU( &S->h[6] );
-  row3l = LOADU( &blake2b_IV[0] );
-  row3h = LOADU( &blake2b_IV[2] );
-  row4l = _mm_xor_si128( LOADU( &blake2b_IV[4] ), LOADU( &S->t[0] ) );
-  row4h = _mm_xor_si128( LOADU( &blake2b_IV[6] ), LOADU( &S->f[0] ) );
-  ROUND( 0 );
-  ROUND( 1 );
-  ROUND( 2 );
-  ROUND( 3 );
-  ROUND( 4 );
-  ROUND( 5 );
-  ROUND( 6 );
-  ROUND( 7 );
-  ROUND( 8 );
-  ROUND( 9 );
-  ROUND( 10 );
-  ROUND( 11 );
-  row1l = _mm_xor_si128( row3l, row1l );
-  row1h = _mm_xor_si128( row3h, row1h );
-  STOREU( &S->h[0], _mm_xor_si128( LOADU( &S->h[0] ), row1l ) );
-  STOREU( &S->h[2], _mm_xor_si128( LOADU( &S->h[2] ), row1h ) );
-  row2l = _mm_xor_si128( row4l, row2l );
-  row2h = _mm_xor_si128( row4h, row2h );
-  STOREU( &S->h[4], _mm_xor_si128( LOADU( &S->h[4] ), row2l ) );
-  STOREU( &S->h[6], _mm_xor_si128( LOADU( &S->h[6] ), row2h ) );
-  return 0;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h
deleted file mode 100644
index fb05a19..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse2.h
+++ /dev/null
@@ -1,68 +0,0 @@
-/*
-   BLAKE2 reference source code package - optimized C implementations
-
-   Written in 2012 by Samuel Neves <sneves@dei.uc.pt>
-
-   To the extent possible under law, the author(s) have dedicated all copyright
-   and related and neighboring rights to this software to the public domain
-   worldwide. This software is distributed without any warranty.
-
-   You should have received a copy of the CC0 Public Domain Dedication along with
-   this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
-*/
-
-#ifndef blake2b_load_sse2_H
-#define blake2b_load_sse2_H
-
-#define LOAD_MSG_0_1(b0, b1) b0 = _mm_set_epi64x(m2, m0); b1 = _mm_set_epi64x(m6, m4)
-#define LOAD_MSG_0_2(b0, b1) b0 = _mm_set_epi64x(m3, m1); b1 = _mm_set_epi64x(m7, m5)
-#define LOAD_MSG_0_3(b0, b1) b0 = _mm_set_epi64x(m10, m8); b1 = _mm_set_epi64x(m14, m12)
-#define LOAD_MSG_0_4(b0, b1) b0 = _mm_set_epi64x(m11, m9); b1 = _mm_set_epi64x(m15, m13)
-#define LOAD_MSG_1_1(b0, b1) b0 = _mm_set_epi64x(m4, m14); b1 = _mm_set_epi64x(m13, m9)
-#define LOAD_MSG_1_2(b0, b1) b0 = _mm_set_epi64x(m8, m10); b1 = _mm_set_epi64x(m6, m15)
-#define LOAD_MSG_1_3(b0, b1) b0 = _mm_set_epi64x(m0, m1); b1 = _mm_set_epi64x(m5, m11)
-#define LOAD_MSG_1_4(b0, b1) b0 = _mm_set_epi64x(m2, m12); b1 = _mm_set_epi64x(m3, m7)
-#define LOAD_MSG_2_1(b0, b1) b0 = _mm_set_epi64x(m12, m11); b1 = _mm_set_epi64x(m15, m5)
-#define LOAD_MSG_2_2(b0, b1) b0 = _mm_set_epi64x(m0, m8); b1 = _mm_set_epi64x(m13, m2)
-#define LOAD_MSG_2_3(b0, b1) b0 = _mm_set_epi64x(m3, m10); b1 = _mm_set_epi64x(m9, m7)
-#define LOAD_MSG_2_4(b0, b1) b0 = _mm_set_epi64x(m6, m14); b1 = _mm_set_epi64x(m4, m1)
-#define LOAD_MSG_3_1(b0, b1) b0 = _mm_set_epi64x(m3, m7); b1 = _mm_set_epi64x(m11, m13)
-#define LOAD_MSG_3_2(b0, b1) b0 = _mm_set_epi64x(m1, m9); b1 = _mm_set_epi64x(m14, m12)
-#define LOAD_MSG_3_3(b0, b1) b0 = _mm_set_epi64x(m5, m2); b1 = _mm_set_epi64x(m15, m4)
-#define LOAD_MSG_3_4(b0, b1) b0 = _mm_set_epi64x(m10, m6); b1 = _mm_set_epi64x(m8, m0)
-#define LOAD_MSG_4_1(b0, b1) b0 = _mm_set_epi64x(m5, m9); b1 = _mm_set_epi64x(m10, m2)
-#define LOAD_MSG_4_2(b0, b1) b0 = _mm_set_epi64x(m7, m0); b1 = _mm_set_epi64x(m15, m4)
-#define LOAD_MSG_4_3(b0, b1) b0 = _mm_set_epi64x(m11, m14); b1 = _mm_set_epi64x(m3, m6)
-#define LOAD_MSG_4_4(b0, b1) b0 = _mm_set_epi64x(m12, m1); b1 = _mm_set_epi64x(m13, m8)
-#define LOAD_MSG_5_1(b0, b1) b0 = _mm_set_epi64x(m6, m2); b1 = _mm_set_epi64x(m8, m0)
-#define LOAD_MSG_5_2(b0, b1) b0 = _mm_set_epi64x(m10, m12); b1 = _mm_set_epi64x(m3, m11)
-#define LOAD_MSG_5_3(b0, b1) b0 = _mm_set_epi64x(m7, m4); b1 = _mm_set_epi64x(m1, m15)
-#define LOAD_MSG_5_4(b0, b1) b0 = _mm_set_epi64x(m5, m13); b1 = _mm_set_epi64x(m9, m14)
-#define LOAD_MSG_6_1(b0, b1) b0 = _mm_set_epi64x(m1, m12); b1 = _mm_set_epi64x(m4, m14)
-#define LOAD_MSG_6_2(b0, b1) b0 = _mm_set_epi64x(m15, m5); b1 = _mm_set_epi64x(m10, m13)
-#define LOAD_MSG_6_3(b0, b1) b0 = _mm_set_epi64x(m6, m0); b1 = _mm_set_epi64x(m8, m9)
-#define LOAD_MSG_6_4(b0, b1) b0 = _mm_set_epi64x(m3, m7); b1 = _mm_set_epi64x(m11, m2)
-#define LOAD_MSG_7_1(b0, b1) b0 = _mm_set_epi64x(m7, m13); b1 = _mm_set_epi64x(m3, m12)
-#define LOAD_MSG_7_2(b0, b1) b0 = _mm_set_epi64x(m14, m11); b1 = _mm_set_epi64x(m9, m1)
-#define LOAD_MSG_7_3(b0, b1) b0 = _mm_set_epi64x(m15, m5); b1 = _mm_set_epi64x(m2, m8)
-#define LOAD_MSG_7_4(b0, b1) b0 = _mm_set_epi64x(m4, m0); b1 = _mm_set_epi64x(m10, m6)
-#define LOAD_MSG_8_1(b0, b1) b0 = _mm_set_epi64x(m14, m6); b1 = _mm_set_epi64x(m0, m11)
-#define LOAD_MSG_8_2(b0, b1) b0 = _mm_set_epi64x(m9, m15); b1 = _mm_set_epi64x(m8, m3)
-#define LOAD_MSG_8_3(b0, b1) b0 = _mm_set_epi64x(m13, m12); b1 = _mm_set_epi64x(m10, m1)
-#define LOAD_MSG_8_4(b0, b1) b0 = _mm_set_epi64x(m7, m2); b1 = _mm_set_epi64x(m5, m4)
-#define LOAD_MSG_9_1(b0, b1) b0 = _mm_set_epi64x(m8, m10); b1 = _mm_set_epi64x(m1, m7)
-#define LOAD_MSG_9_2(b0, b1) b0 = _mm_set_epi64x(m4, m2); b1 = _mm_set_epi64x(m5, m6)
-#define LOAD_MSG_9_3(b0, b1) b0 = _mm_set_epi64x(m9, m15); b1 = _mm_set_epi64x(m13, m3)
-#define LOAD_MSG_9_4(b0, b1) b0 = _mm_set_epi64x(m14, m11); b1 = _mm_set_epi64x(m0, m12)
-#define LOAD_MSG_10_1(b0, b1) b0 = _mm_set_epi64x(m2, m0); b1 = _mm_set_epi64x(m6, m4)
-#define LOAD_MSG_10_2(b0, b1) b0 = _mm_set_epi64x(m3, m1); b1 = _mm_set_epi64x(m7, m5)
-#define LOAD_MSG_10_3(b0, b1) b0 = _mm_set_epi64x(m10, m8); b1 = _mm_set_epi64x(m14, m12)
-#define LOAD_MSG_10_4(b0, b1) b0 = _mm_set_epi64x(m11, m9); b1 = _mm_set_epi64x(m15, m13)
-#define LOAD_MSG_11_1(b0, b1) b0 = _mm_set_epi64x(m4, m14); b1 = _mm_set_epi64x(m13, m9)
-#define LOAD_MSG_11_2(b0, b1) b0 = _mm_set_epi64x(m8, m10); b1 = _mm_set_epi64x(m6, m15)
-#define LOAD_MSG_11_3(b0, b1) b0 = _mm_set_epi64x(m0, m1); b1 = _mm_set_epi64x(m5, m11)
-#define LOAD_MSG_11_4(b0, b1) b0 = _mm_set_epi64x(m2, m12); b1 = _mm_set_epi64x(m3, m7)
-
-
-#endif
-
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h
deleted file mode 100644
index 38ca244..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-load-sse41.h
+++ /dev/null
@@ -1,402 +0,0 @@
-/*
-   BLAKE2 reference source code package - optimized C implementations
-
-   Written in 2012 by Samuel Neves <sneves@dei.uc.pt>
-
-   To the extent possible under law, the author(s) have dedicated all copyright
-   and related and neighboring rights to this software to the public domain
-   worldwide. This software is distributed without any warranty.
-
-   You should have received a copy of the CC0 Public Domain Dedication along with
-   this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
-*/
-
-#ifndef blake2b_load_sse41_H
-#define blake2b_load_sse41_H
-
-#define LOAD_MSG_0_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m0, m1); \
-b1 = _mm_unpacklo_epi64(m2, m3); \
-} while(0)
-
-
-#define LOAD_MSG_0_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m0, m1); \
-b1 = _mm_unpackhi_epi64(m2, m3); \
-} while(0)
-
-
-#define LOAD_MSG_0_3(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m4, m5); \
-b1 = _mm_unpacklo_epi64(m6, m7); \
-} while(0)
-
-
-#define LOAD_MSG_0_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m4, m5); \
-b1 = _mm_unpackhi_epi64(m6, m7); \
-} while(0)
-
-
-#define LOAD_MSG_1_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m7, m2); \
-b1 = _mm_unpackhi_epi64(m4, m6); \
-} while(0)
-
-
-#define LOAD_MSG_1_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m5, m4); \
-b1 = _mm_alignr_epi8(m3, m7, 8); \
-} while(0)
-
-
-#define LOAD_MSG_1_3(b0, b1) \
-do \
-{ \
-b0 = _mm_shuffle_epi32(m0, _MM_SHUFFLE(1,0,3,2)); \
-b1 = _mm_unpackhi_epi64(m5, m2); \
-} while(0)
-
-
-#define LOAD_MSG_1_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m6, m1); \
-b1 = _mm_unpackhi_epi64(m3, m1); \
-} while(0)
-
-
-#define LOAD_MSG_2_1(b0, b1) \
-do \
-{ \
-b0 = _mm_alignr_epi8(m6, m5, 8); \
-b1 = _mm_unpackhi_epi64(m2, m7); \
-} while(0)
-
-
-#define LOAD_MSG_2_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m4, m0); \
-b1 = _mm_blend_epi16(m1, m6, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_2_3(b0, b1) \
-do \
-{ \
-b0 = _mm_blend_epi16(m5, m1, 0xF0); \
-b1 = _mm_unpackhi_epi64(m3, m4); \
-} while(0)
-
-
-#define LOAD_MSG_2_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m7, m3); \
-b1 = _mm_alignr_epi8(m2, m0, 8); \
-} while(0)
-
-
-#define LOAD_MSG_3_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m3, m1); \
-b1 = _mm_unpackhi_epi64(m6, m5); \
-} while(0)
-
-
-#define LOAD_MSG_3_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m4, m0); \
-b1 = _mm_unpacklo_epi64(m6, m7); \
-} while(0)
-
-
-#define LOAD_MSG_3_3(b0, b1) \
-do \
-{ \
-b0 = _mm_blend_epi16(m1, m2, 0xF0); \
-b1 = _mm_blend_epi16(m2, m7, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_3_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m3, m5); \
-b1 = _mm_unpacklo_epi64(m0, m4); \
-} while(0)
-
-
-#define LOAD_MSG_4_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m4, m2); \
-b1 = _mm_unpacklo_epi64(m1, m5); \
-} while(0)
-
-
-#define LOAD_MSG_4_2(b0, b1) \
-do \
-{ \
-b0 = _mm_blend_epi16(m0, m3, 0xF0); \
-b1 = _mm_blend_epi16(m2, m7, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_4_3(b0, b1) \
-do \
-{ \
-b0 = _mm_blend_epi16(m7, m5, 0xF0); \
-b1 = _mm_blend_epi16(m3, m1, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_4_4(b0, b1) \
-do \
-{ \
-b0 = _mm_alignr_epi8(m6, m0, 8); \
-b1 = _mm_blend_epi16(m4, m6, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_5_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m1, m3); \
-b1 = _mm_unpacklo_epi64(m0, m4); \
-} while(0)
-
-
-#define LOAD_MSG_5_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m6, m5); \
-b1 = _mm_unpackhi_epi64(m5, m1); \
-} while(0)
-
-
-#define LOAD_MSG_5_3(b0, b1) \
-do \
-{ \
-b0 = _mm_blend_epi16(m2, m3, 0xF0); \
-b1 = _mm_unpackhi_epi64(m7, m0); \
-} while(0)
-
-
-#define LOAD_MSG_5_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m6, m2); \
-b1 = _mm_blend_epi16(m7, m4, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_6_1(b0, b1) \
-do \
-{ \
-b0 = _mm_blend_epi16(m6, m0, 0xF0); \
-b1 = _mm_unpacklo_epi64(m7, m2); \
-} while(0)
-
-
-#define LOAD_MSG_6_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m2, m7); \
-b1 = _mm_alignr_epi8(m5, m6, 8); \
-} while(0)
-
-
-#define LOAD_MSG_6_3(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m0, m3); \
-b1 = _mm_shuffle_epi32(m4, _MM_SHUFFLE(1,0,3,2)); \
-} while(0)
-
-
-#define LOAD_MSG_6_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m3, m1); \
-b1 = _mm_blend_epi16(m1, m5, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_7_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m6, m3); \
-b1 = _mm_blend_epi16(m6, m1, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_7_2(b0, b1) \
-do \
-{ \
-b0 = _mm_alignr_epi8(m7, m5, 8); \
-b1 = _mm_unpackhi_epi64(m0, m4); \
-} while(0)
-
-
-#define LOAD_MSG_7_3(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m2, m7); \
-b1 = _mm_unpacklo_epi64(m4, m1); \
-} while(0)
-
-
-#define LOAD_MSG_7_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m0, m2); \
-b1 = _mm_unpacklo_epi64(m3, m5); \
-} while(0)
-
-
-#define LOAD_MSG_8_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m3, m7); \
-b1 = _mm_alignr_epi8(m0, m5, 8); \
-} while(0)
-
-
-#define LOAD_MSG_8_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m7, m4); \
-b1 = _mm_alignr_epi8(m4, m1, 8); \
-} while(0)
-
-
-#define LOAD_MSG_8_3(b0, b1) \
-do \
-{ \
-b0 = m6; \
-b1 = _mm_alignr_epi8(m5, m0, 8); \
-} while(0)
-
-
-#define LOAD_MSG_8_4(b0, b1) \
-do \
-{ \
-b0 = _mm_blend_epi16(m1, m3, 0xF0); \
-b1 = m2; \
-} while(0)
-
-
-#define LOAD_MSG_9_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m5, m4); \
-b1 = _mm_unpackhi_epi64(m3, m0); \
-} while(0)
-
-
-#define LOAD_MSG_9_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m1, m2); \
-b1 = _mm_blend_epi16(m3, m2, 0xF0); \
-} while(0)
-
-
-#define LOAD_MSG_9_3(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m7, m4); \
-b1 = _mm_unpackhi_epi64(m1, m6); \
-} while(0)
-
-
-#define LOAD_MSG_9_4(b0, b1) \
-do \
-{ \
-b0 = _mm_alignr_epi8(m7, m5, 8); \
-b1 = _mm_unpacklo_epi64(m6, m0); \
-} while(0)
-
-
-#define LOAD_MSG_10_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m0, m1); \
-b1 = _mm_unpacklo_epi64(m2, m3); \
-} while(0)
-
-
-#define LOAD_MSG_10_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m0, m1); \
-b1 = _mm_unpackhi_epi64(m2, m3); \
-} while(0)
-
-
-#define LOAD_MSG_10_3(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m4, m5); \
-b1 = _mm_unpacklo_epi64(m6, m7); \
-} while(0)
-
-
-#define LOAD_MSG_10_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpackhi_epi64(m4, m5); \
-b1 = _mm_unpackhi_epi64(m6, m7); \
-} while(0)
-
-
-#define LOAD_MSG_11_1(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m7, m2); \
-b1 = _mm_unpackhi_epi64(m4, m6); \
-} while(0)
-
-
-#define LOAD_MSG_11_2(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m5, m4); \
-b1 = _mm_alignr_epi8(m3, m7, 8); \
-} while(0)
-
-
-#define LOAD_MSG_11_3(b0, b1) \
-do \
-{ \
-b0 = _mm_shuffle_epi32(m0, _MM_SHUFFLE(1,0,3,2)); \
-b1 = _mm_unpackhi_epi64(m5, m2); \
-} while(0)
-
-
-#define LOAD_MSG_11_4(b0, b1) \
-do \
-{ \
-b0 = _mm_unpacklo_epi64(m6, m1); \
-b1 = _mm_unpackhi_epi64(m3, m1); \
-} while(0)
-
-
-#endif
-
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c
deleted file mode 100644
index 0e1628e..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-ref.c
+++ /dev/null
@@ -1,435 +0,0 @@
-/*
-   BLAKE2 reference source code package - C implementations
-
-   Written in 2012 by Samuel Neves <sneves@dei.uc.pt>
-
-   To the extent possible under law, the author(s) have dedicated all copyright
-   and related and neighboring rights to this software to the public domain
-   worldwide. This software is distributed without any warranty.
-
-   You should have received a copy of the CC0 Public Domain Dedication along with
-   this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
-*/
-
-#include <assert.h>
-#include <stdint.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "blake2.h"
-#include "blake2-impl.h"
-#include "runtime.h"
-
-#ifdef HAVE_TI_MODE
-# if defined(__SIZEOF_INT128__)
-typedef unsigned __int128 uint128_t;
-# else
-typedef unsigned uint128_t __attribute__((mode(TI)));
-# endif
-#endif
-
-static blake2b_compress_fn blake2b_compress = blake2b_compress_ref;
-
-static const uint64_t blake2b_IV[8] =
-{
-  0x6a09e667f3bcc908ULL, 0xbb67ae8584caa73bULL,
-  0x3c6ef372fe94f82bULL, 0xa54ff53a5f1d36f1ULL,
-  0x510e527fade682d1ULL, 0x9b05688c2b3e6c1fULL,
-  0x1f83d9abfb41bd6bULL, 0x5be0cd19137e2179ULL
-};
-
-/* LCOV_EXCL_START */
-static inline int blake2b_set_lastnode( blake2b_state *S )
-{
-  S->f[1] = -1;
-  return 0;
-}
-/* LCOV_EXCL_STOP */
-#if 0
-static inline int blake2b_clear_lastnode( blake2b_state *S )
-{
-  S->f[1] = 0;
-  return 0;
-}
-#endif
-
-static inline int blake2b_set_lastblock( blake2b_state *S )
-{
-  if( S->last_node ) blake2b_set_lastnode( S );
-
-  S->f[0] = -1;
-  return 0;
-}
-#if 0
-static inline int blake2b_clear_lastblock( blake2b_state *S )
-{
-  if( S->last_node ) blake2b_clear_lastnode( S );
-
-  S->f[0] = 0;
-  return 0;
-}
-#endif
-static inline int blake2b_increment_counter( blake2b_state *S, const uint64_t inc )
-{
-#ifdef HAVE_TI_MODE
-  uint128_t t = ( ( uint128_t )S->t[1] << 64 ) | S->t[0];
-  t += inc;
-  S->t[0] = ( uint64_t )( t >>  0 );
-  S->t[1] = ( uint64_t )( t >> 64 );
-#else
-  S->t[0] += inc;
-  S->t[1] += ( S->t[0] < inc );
-#endif
-  return 0;
-}
-
-// Parameter-related functions
-#if 0
-static inline int blake2b_param_set_digest_length( blake2b_param *P, const uint8_t digest_length )
-{
-  P->digest_length = digest_length;
-  return 0;
-}
-
-static inline int blake2b_param_set_fanout( blake2b_param *P, const uint8_t fanout )
-{
-  P->fanout = fanout;
-  return 0;
-}
-
-static inline int blake2b_param_set_max_depth( blake2b_param *P, const uint8_t depth )
-{
-  P->depth = depth;
-  return 0;
-}
-
-static inline int blake2b_param_set_leaf_length( blake2b_param *P, const uint32_t leaf_length )
-{
-  store32( &P->leaf_length, leaf_length );
-  return 0;
-}
-
-static inline int blake2b_param_set_node_offset( blake2b_param *P, const uint64_t node_offset )
-{
-  store64( &P->node_offset, node_offset );
-  return 0;
-}
-
-static inline int blake2b_param_set_node_depth( blake2b_param *P, const uint8_t node_depth )
-{
-  P->node_depth = node_depth;
-  return 0;
-}
-
-static inline int blake2b_param_set_inner_length( blake2b_param *P, const uint8_t inner_length )
-{
-  P->inner_length = inner_length;
-  return 0;
-}
-#endif
-static inline int blake2b_param_set_salt( blake2b_param *P, const uint8_t salt[BLAKE2B_SALTBYTES] )
-{
-  memcpy( P->salt, salt, BLAKE2B_SALTBYTES );
-  return 0;
-}
-
-static inline int blake2b_param_set_personal( blake2b_param *P, const uint8_t personal[BLAKE2B_PERSONALBYTES] )
-{
-  memcpy( P->personal, personal, BLAKE2B_PERSONALBYTES );
-  return 0;
-}
-
-static inline int blake2b_init0( blake2b_state *S )
-{
-  int i;
-  memset( S, 0, sizeof( blake2b_state ) );
-
-  for( i = 0; i < 8; ++i ) S->h[i] = blake2b_IV[i];
-
-  return 0;
-}
-
-/* init xors IV with input parameter block */
-int blake2b_init_param( blake2b_state *S, const blake2b_param *P )
-{
-  size_t i;
-  const uint8_t *p;
-
-  blake2b_init0( S );
-  p = ( const uint8_t * )( P );
-
-  /* IV XOR ParamBlock */
-  for( i = 0; i < 8; ++i )
-    S->h[i] ^= load64( p + sizeof( S->h[i] ) * i );
-
-  return 0;
-}
-
-int blake2b_init( blake2b_state *S, const uint8_t outlen )
-{
-  blake2b_param P[1];
-
-  if ( ( !outlen ) || ( outlen > BLAKE2B_OUTBYTES ) ) abort();
-
-  P->digest_length = outlen;
-  P->key_length    = 0;
-  P->fanout        = 1;
-  P->depth         = 1;
-  store32( &P->leaf_length, 0 );
-  store64( &P->node_offset, 0 );
-  P->node_depth    = 0;
-  P->inner_length  = 0;
-  memset( P->reserved, 0, sizeof( P->reserved ) );
-  memset( P->salt,     0, sizeof( P->salt ) );
-  memset( P->personal, 0, sizeof( P->personal ) );
-  return blake2b_init_param( S, P );
-}
-
-int blake2b_init_salt_personal( blake2b_state *S, const uint8_t outlen,
-                                const void *salt, const void *personal )
-{
-  blake2b_param P[1];
-
-  if ( ( !outlen ) || ( outlen > BLAKE2B_OUTBYTES ) ) abort();
-
-  P->digest_length = outlen;
-  P->key_length    = 0;
-  P->fanout        = 1;
-  P->depth         = 1;
-  store32( &P->leaf_length, 0 );
-  store64( &P->node_offset, 0 );
-  P->node_depth    = 0;
-  P->inner_length  = 0;
-  memset( P->reserved, 0, sizeof( P->reserved ) );
-  if (salt != NULL) {
-    blake2b_param_set_salt( P, (const uint8_t *) salt );
-  } else {
-    memset( P->salt, 0, sizeof( P->salt ) );
-  }
-  if (personal != NULL) {
-    blake2b_param_set_personal( P, (const uint8_t *) personal );
-  } else {
-    memset( P->personal, 0, sizeof( P->personal ) );
-  }
-  return blake2b_init_param( S, P );
-}
-
-int blake2b_init_key( blake2b_state *S, const uint8_t outlen, const void *key, const uint8_t keylen )
-{
-  blake2b_param P[1];
-
-  if ( ( !outlen ) || ( outlen > BLAKE2B_OUTBYTES ) ) abort();
-
-  if ( !key || !keylen || keylen > BLAKE2B_KEYBYTES ) abort();
-
-  P->digest_length = outlen;
-  P->key_length    = keylen;
-  P->fanout        = 1;
-  P->depth         = 1;
-  store32( &P->leaf_length, 0 );
-  store64( &P->node_offset, 0 );
-  P->node_depth    = 0;
-  P->inner_length  = 0;
-  memset( P->reserved, 0, sizeof( P->reserved ) );
-  memset( P->salt,     0, sizeof( P->salt ) );
-  memset( P->personal, 0, sizeof( P->personal ) );
-
-  if( blake2b_init_param( S, P ) < 0 ) abort();
-
-  {
-    uint8_t block[BLAKE2B_BLOCKBYTES];
-    memset( block, 0, BLAKE2B_BLOCKBYTES );
-    memcpy( block, key, keylen );
-    blake2b_update( S, block, BLAKE2B_BLOCKBYTES );
-    secure_zero_memory( block, BLAKE2B_BLOCKBYTES ); /* Burn the key from stack */
-  }
-  return 0;
-}
-
-int blake2b_init_key_salt_personal( blake2b_state *S, const uint8_t outlen, const void *key, const uint8_t keylen,
-                                    const void *salt, const void *personal )
-{
-  blake2b_param P[1];
-
-  if ( ( !outlen ) || ( outlen > BLAKE2B_OUTBYTES ) ) abort();
-
-  if ( !key || !keylen || keylen > BLAKE2B_KEYBYTES ) abort();
-
-  P->digest_length = outlen;
-  P->key_length    = keylen;
-  P->fanout        = 1;
-  P->depth         = 1;
-  store32( &P->leaf_length, 0 );
-  store64( &P->node_offset, 0 );
-  P->node_depth    = 0;
-  P->inner_length  = 0;
-  memset( P->reserved, 0, sizeof( P->reserved ) );
-  if (salt != NULL) {
-    blake2b_param_set_salt( P, (const uint8_t *) salt );
-  } else {
-    memset( P->salt, 0, sizeof( P->salt ) );
-  }
-  if (personal != NULL) {
-    blake2b_param_set_personal( P, (const uint8_t *) personal );
-  } else {
-    memset( P->personal, 0, sizeof( P->personal ) );
-  }
-
-  if( blake2b_init_param( S, P ) < 0 ) abort();
-
-  {
-    uint8_t block[BLAKE2B_BLOCKBYTES];
-    memset( block, 0, BLAKE2B_BLOCKBYTES );
-    memcpy( block, key, keylen );
-    blake2b_update( S, block, BLAKE2B_BLOCKBYTES );
-    secure_zero_memory( block, BLAKE2B_BLOCKBYTES ); /* Burn the key from stack */
-  }
-  return 0;
-}
-
-/* inlen now in bytes */
-int blake2b_update( blake2b_state *S, const uint8_t *in, uint64_t inlen )
-{
-  while( inlen > 0 )
-  {
-    size_t left = S->buflen;
-    size_t fill = 2 * BLAKE2B_BLOCKBYTES - left;
-
-    if( inlen > fill )
-    {
-      memcpy( S->buf + left, in, fill ); // Fill buffer
-      S->buflen += fill;
-      blake2b_increment_counter( S, BLAKE2B_BLOCKBYTES );
-      blake2b_compress( S, S->buf ); // Compress
-      memcpy( S->buf, S->buf + BLAKE2B_BLOCKBYTES, BLAKE2B_BLOCKBYTES ); // Shift buffer left
-      S->buflen -= BLAKE2B_BLOCKBYTES;
-      in += fill;
-      inlen -= fill;
-    }
-    else // inlen <= fill
-    {
-      memcpy( S->buf + left, in, inlen );
-      S->buflen += inlen; // Be lazy, do not compress
-      in += inlen;
-      inlen -= inlen;
-    }
-  }
-
-  return 0;
-}
-
-int blake2b_final( blake2b_state *S, uint8_t *out, uint8_t outlen )
-{
-  if( !outlen || outlen > BLAKE2B_OUTBYTES ) {
-    abort();
-  }
-  if( S->buflen > BLAKE2B_BLOCKBYTES )
-  {
-    blake2b_increment_counter( S, BLAKE2B_BLOCKBYTES );
-    blake2b_compress( S, S->buf );
-    S->buflen -= BLAKE2B_BLOCKBYTES;
-    assert( S->buflen <= BLAKE2B_BLOCKBYTES );
-    memcpy( S->buf, S->buf + BLAKE2B_BLOCKBYTES, S->buflen );
-  }
-
-  blake2b_increment_counter( S, S->buflen );
-  blake2b_set_lastblock( S );
-  memset( S->buf + S->buflen, 0, 2 * BLAKE2B_BLOCKBYTES - S->buflen ); /* Padding */
-  blake2b_compress( S, S->buf );
-
-#ifdef NATIVE_LITTLE_ENDIAN
-  memcpy( out, &S->h[0], outlen );
-#else
-  {
-    uint8_t buffer[BLAKE2B_OUTBYTES];
-    int     i;
-
-    for( i = 0; i < 8; ++i ) /* Output full hash to temp buffer */
-      store64( buffer + sizeof( S->h[i] ) * i, S->h[i] );
-    memcpy( out, buffer, outlen );
-  }
-#endif
-  return 0;
-}
-
-/* inlen, at least, should be uint64_t. Others can be size_t. */
-int blake2b( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen )
-{
-  blake2b_state S[1];
-
-  /* Verify parameters */
-  if( NULL == in && inlen > 0 ) abort();
-
-  if( NULL == out ) abort();
-
-  if( !outlen || outlen > BLAKE2B_OUTBYTES ) abort();
-
-  if( NULL == key && keylen > 0 ) abort();
-
-  if( keylen > BLAKE2B_KEYBYTES ) abort();
-
-  if( keylen > 0 )
-  {
-    if( blake2b_init_key( S, outlen, key, keylen ) < 0 ) abort();
-  }
-  else
-  {
-    if( blake2b_init( S, outlen ) < 0 ) abort();
-  }
-
-  blake2b_update( S, ( const uint8_t * )in, inlen );
-  blake2b_final( S, out, outlen );
-  return 0;
-}
-
-int blake2b_salt_personal( uint8_t *out, const void *in, const void *key, const uint8_t outlen, const uint64_t inlen, uint8_t keylen,
-                           const void *salt, const void *personal )
-{
-  blake2b_state S[1];
-
-  /* Verify parameters */
-  if( NULL == in && inlen > 0 ) abort();
-
-  if( NULL == out ) abort();
-
-  if( !outlen || outlen > BLAKE2B_OUTBYTES ) abort();
-
-  if( NULL == key && keylen > 0 ) abort();
-
-  if( keylen > BLAKE2B_KEYBYTES ) abort();
-
-  if( keylen > 0 )
-  {
-    if( blake2b_init_key_salt_personal( S, outlen, key, keylen, salt, personal ) < 0 ) abort();
-  }
-  else
-  {
-    if( blake2b_init_salt_personal( S, outlen, salt, personal ) < 0 ) abort();
-  }
-
-  blake2b_update( S, ( const uint8_t * )in, inlen );
-  blake2b_final( S, out, outlen );
-  return 0;
-}
-
-int
-blake2b_pick_best_implementation(void)
-{
-#if (defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H) && defined(HAVE_SMMINTRIN_H)) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-  if (sodium_runtime_has_sse41()) {
-    blake2b_compress = blake2b_compress_sse41;
-    return 0;
-  }
-#endif
-#if (defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H)) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64)))
-  if (sodium_runtime_has_ssse3()) {
-    blake2b_compress = blake2b_compress_ssse3;
-    return 0;
-  }
-#endif
-  blake2b_compress = blake2b_compress_ref;
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-round.h b/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-round.h
deleted file mode 100644
index 0c322b1..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/blake2b-round.h
+++ /dev/null
@@ -1,123 +0,0 @@
-/*
-   BLAKE2 reference source code package - optimized C implementations
-
-   Written in 2012 by Samuel Neves <sneves@dei.uc.pt>
-
-   To the extent possible under law, the author(s) have dedicated all copyright
-   and related and neighboring rights to this software to the public domain
-   worldwide. This software is distributed without any warranty.
-
-   You should have received a copy of the CC0 Public Domain Dedication along with
-   this software. If not, see <http://creativecommons.org/publicdomain/zero/1.0/>.
-*/
-
-#ifndef blake2b_round_H
-#define blake2b_round_H
-
-#ifndef BLAKE2_USE_SSSE3
-# error BLAKE2_USE_SSSE3 must be defined in order to use this file
-#endif
-
-#define LOADU(p)  _mm_loadu_si128( (const __m128i *)(const void *)(p) )
-#define STOREU(p,r) _mm_storeu_si128((__m128i *)(void *)(p), r)
-
-#define TOF(reg) _mm_castsi128_ps((reg))
-#define TOI(reg) _mm_castps_si128((reg))
-
-
-/* Microarchitecture-specific macros */
-#define _mm_roti_epi64(x, c) \
-    (-(c) == 32) ? _mm_shuffle_epi32((x), _MM_SHUFFLE(2,3,0,1))  \
-    : (-(c) == 24) ? _mm_shuffle_epi8((x), r24) \
-    : (-(c) == 16) ? _mm_shuffle_epi8((x), r16) \
-    : (-(c) == 63) ? _mm_xor_si128(_mm_srli_epi64((x), -(c)), _mm_add_epi64((x), (x)))  \
-    : _mm_xor_si128(_mm_srli_epi64((x), -(c)), _mm_slli_epi64((x), 64-(-(c))))
-
-
-#define G1(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h,b0,b1) \
-  row1l = _mm_add_epi64(_mm_add_epi64(row1l, b0), row2l); \
-  row1h = _mm_add_epi64(_mm_add_epi64(row1h, b1), row2h); \
-  \
-  row4l = _mm_xor_si128(row4l, row1l); \
-  row4h = _mm_xor_si128(row4h, row1h); \
-  \
-  row4l = _mm_roti_epi64(row4l, -32); \
-  row4h = _mm_roti_epi64(row4h, -32); \
-  \
-  row3l = _mm_add_epi64(row3l, row4l); \
-  row3h = _mm_add_epi64(row3h, row4h); \
-  \
-  row2l = _mm_xor_si128(row2l, row3l); \
-  row2h = _mm_xor_si128(row2h, row3h); \
-  \
-  row2l = _mm_roti_epi64(row2l, -24); \
-  row2h = _mm_roti_epi64(row2h, -24); \
-
-#define G2(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h,b0,b1) \
-  row1l = _mm_add_epi64(_mm_add_epi64(row1l, b0), row2l); \
-  row1h = _mm_add_epi64(_mm_add_epi64(row1h, b1), row2h); \
-  \
-  row4l = _mm_xor_si128(row4l, row1l); \
-  row4h = _mm_xor_si128(row4h, row1h); \
-  \
-  row4l = _mm_roti_epi64(row4l, -16); \
-  row4h = _mm_roti_epi64(row4h, -16); \
-  \
-  row3l = _mm_add_epi64(row3l, row4l); \
-  row3h = _mm_add_epi64(row3h, row4h); \
-  \
-  row2l = _mm_xor_si128(row2l, row3l); \
-  row2h = _mm_xor_si128(row2h, row3h); \
-  \
-  row2l = _mm_roti_epi64(row2l, -63); \
-  row2h = _mm_roti_epi64(row2h, -63); \
-
-#define DIAGONALIZE(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h) \
-  t0 = _mm_alignr_epi8(row2h, row2l, 8); \
-  t1 = _mm_alignr_epi8(row2l, row2h, 8); \
-  row2l = t0; \
-  row2h = t1; \
-  \
-  t0 = row3l; \
-  row3l = row3h; \
-  row3h = t0;    \
-  \
-  t0 = _mm_alignr_epi8(row4h, row4l, 8); \
-  t1 = _mm_alignr_epi8(row4l, row4h, 8); \
-  row4l = t1; \
-  row4h = t0;
-
-#define UNDIAGONALIZE(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h) \
-  t0 = _mm_alignr_epi8(row2l, row2h, 8); \
-  t1 = _mm_alignr_epi8(row2h, row2l, 8); \
-  row2l = t0; \
-  row2h = t1; \
-  \
-  t0 = row3l; \
-  row3l = row3h; \
-  row3h = t0; \
-  \
-  t0 = _mm_alignr_epi8(row4l, row4h, 8); \
-  t1 = _mm_alignr_epi8(row4h, row4l, 8); \
-  row4l = t1; \
-  row4h = t0;
-
-#if defined(BLAKE2_USE_SSE41)
-#include "blake2b-load-sse41.h"
-#else
-#include "blake2b-load-sse2.h"
-#endif
-
-#define ROUND(r) \
-  LOAD_MSG_ ##r ##_1(b0, b1); \
-  G1(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h,b0,b1); \
-  LOAD_MSG_ ##r ##_2(b0, b1); \
-  G2(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h,b0,b1); \
-  DIAGONALIZE(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h); \
-  LOAD_MSG_ ##r ##_3(b0, b1); \
-  G1(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h,b0,b1); \
-  LOAD_MSG_ ##r ##_4(b0, b1); \
-  G2(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h,b0,b1); \
-  UNDIAGONALIZE(row1l,row2l,row3l,row4l,row1h,row2h,row3h,row4h);
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c b/libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c
deleted file mode 100644
index 1d6ca03..0000000
--- a/libsodium/src/libsodium/crypto_generichash/blake2/ref/generichash_blake2b.c
+++ /dev/null
@@ -1,114 +0,0 @@
-
-#include <assert.h>
-#include <limits.h>
-#include <stdint.h>
-
-#include "crypto_generichash_blake2b.h"
-#include "blake2.h"
-
-int
-crypto_generichash_blake2b(unsigned char *out, size_t outlen,
-                           const unsigned char *in, unsigned long long inlen,
-                           const unsigned char *key, size_t keylen)
-{
-    if (outlen <= 0U || outlen > BLAKE2B_OUTBYTES ||
-        keylen > BLAKE2B_KEYBYTES || inlen > UINT64_MAX) {
-        return -1;
-    }
-    assert(outlen <= UINT8_MAX);
-    assert(keylen <= UINT8_MAX);
-
-    return blake2b((uint8_t *) out, in, key,
-                   (uint8_t) outlen, (uint64_t) inlen, (uint8_t) keylen);
-}
-
-int
-crypto_generichash_blake2b_salt_personal(unsigned char *out, size_t outlen,
-                                         const unsigned char *in, unsigned long long inlen,
-                                         const unsigned char *key, size_t keylen,
-                                         const unsigned char *salt,
-                                         const unsigned char *personal)
-{
-    if (outlen <= 0U || outlen > BLAKE2B_OUTBYTES ||
-        keylen > BLAKE2B_KEYBYTES || inlen > UINT64_MAX) {
-        return -1;
-    }
-    assert(outlen <= UINT8_MAX);
-    assert(keylen <= UINT8_MAX);
-
-    return blake2b_salt_personal((uint8_t *) out, in, key,
-                                 (uint8_t) outlen, (uint64_t) inlen, (uint8_t) keylen,
-                                 salt, personal);
-}
-
-int
-crypto_generichash_blake2b_init(crypto_generichash_blake2b_state *state,
-                                const unsigned char *key,
-                                const size_t keylen, const size_t outlen)
-{
-    if (outlen <= 0U || outlen > BLAKE2B_OUTBYTES ||
-        keylen > BLAKE2B_KEYBYTES) {
-        return -1;
-    }
-    assert(outlen <= UINT8_MAX);
-    assert(keylen <= UINT8_MAX);
-    if (key == NULL || keylen <= 0U) {
-        if (blake2b_init(state, (uint8_t) outlen) != 0) {
-            return -1; /* LCOV_EXCL_LINE */
-        }
-    } else if (blake2b_init_key(state, (uint8_t) outlen, key,
-                                (uint8_t) keylen) != 0) {
-        return -1; /* LCOV_EXCL_LINE */
-    }
-    return 0;
-}
-
-int
-crypto_generichash_blake2b_init_salt_personal(crypto_generichash_blake2b_state *state,
-                                              const unsigned char *key,
-                                              const size_t keylen, const size_t outlen,
-                                              const unsigned char *salt,
-                                              const unsigned char *personal)
-{
-    if (outlen <= 0U || outlen > BLAKE2B_OUTBYTES ||
-        keylen > BLAKE2B_KEYBYTES) {
-        return -1;
-    }
-    assert(outlen <= UINT8_MAX);
-    assert(keylen <= UINT8_MAX);
-    if (key == NULL || keylen <= 0U) {
-        if (blake2b_init_salt_personal(state, (uint8_t) outlen,
-                                       salt, personal) != 0) {
-            return -1; /* LCOV_EXCL_LINE */
-        }
-    } else if (blake2b_init_key_salt_personal(state,
-                                              (uint8_t) outlen, key,
-                                              (uint8_t) keylen,
-                                              salt, personal) != 0) {
-        return -1; /* LCOV_EXCL_LINE */
-    }
-    return 0;
-}
-
-int
-crypto_generichash_blake2b_update(crypto_generichash_blake2b_state *state,
-                                  const unsigned char *in,
-                                  unsigned long long inlen)
-{
-    return blake2b_update(state, (const uint8_t *) in, (uint64_t) inlen);
-}
-
-int
-crypto_generichash_blake2b_final(crypto_generichash_blake2b_state *state,
-                                 unsigned char *out,
-                                 const size_t outlen)
-{
-    assert(outlen <= UINT8_MAX);
-    return blake2b_final(state, (uint8_t *) out, (uint8_t) outlen);
-}
-
-int
-_crypto_generichash_blake2b_pick_best_implementation(void)
-{
-    return blake2b_pick_best_implementation();
-}
diff --git a/libsodium/src/libsodium/crypto_generichash/crypto_generichash.c b/libsodium/src/libsodium/crypto_generichash/crypto_generichash.c
index ffe2f50..a9a14e9 100644
--- a/libsodium/src/libsodium/crypto_generichash/crypto_generichash.c
+++ b/libsodium/src/libsodium/crypto_generichash/crypto_generichash.c
@@ -1,5 +1,6 @@
 
 #include "crypto_generichash.h"
+#include "randombytes.h"
 
 size_t
 crypto_generichash_bytes_min(void)
@@ -82,3 +83,9 @@ crypto_generichash_final(crypto_generichash_state *state,
     return crypto_generichash_blake2b_final
         ((crypto_generichash_blake2b_state *) state, out, outlen);
 }
+
+void
+crypto_generichash_keygen(unsigned char k[crypto_generichash_KEYBYTES])
+{
+    randombytes_buf(k, crypto_generichash_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c b/libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c
deleted file mode 100644
index 6dc8934..0000000
--- a/libsodium/src/libsodium/crypto_hash/sha256/cp/hash_sha256.c
+++ /dev/null
@@ -1,301 +0,0 @@
-
-/*-
- * Copyright 2005,2007,2009 Colin Percival
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
- * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
- * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
- * SUCH DAMAGE.
- *
- */
-
-#include "crypto_hash_sha256.h"
-#include "utils.h"
-
-#include <sys/types.h>
-
-#include <limits.h>
-#include <stdint.h>
-#include <stdlib.h>
-#include <string.h>
-
-/* Avoid namespace collisions with BSD <sys/endian.h>. */
-#define be32dec _sha256_be32dec
-#define be32enc _sha256_be32enc
-#define be64enc _sha256_be64enc
-
-static inline uint32_t
-be32dec(const void *pp)
-{
-    const uint8_t *p = (uint8_t const *)pp;
-
-    return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
-            ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
-}
-
-static inline void
-be32enc(void *pp, uint32_t x)
-{
-    uint8_t *p = (uint8_t *)pp;
-
-    p[3] = x & 0xff;
-    p[2] = (x >> 8) & 0xff;
-    p[1] = (x >> 16) & 0xff;
-    p[0] = (x >> 24) & 0xff;
-}
-
-static inline void
-be64enc(void * pp, uint64_t x)
-{
-    uint8_t * p = (uint8_t *)pp;
-
-    p[7] = x & 0xff;
-    p[6] = (x >> 8) & 0xff;
-    p[5] = (x >> 16) & 0xff;
-    p[4] = (x >> 24) & 0xff;
-    p[3] = (x >> 32) & 0xff;
-    p[2] = (x >> 40) & 0xff;
-    p[1] = (x >> 48) & 0xff;
-    p[0] = (x >> 56) & 0xff;
-}
-
-static void
-be32enc_vect(unsigned char *dst, const uint32_t *src, size_t len)
-{
-    size_t i;
-
-    for (i = 0; i < len / 4; i++) {
-        be32enc(dst + i * 4, src[i]);
-    }
-}
-
-static void
-be32dec_vect(uint32_t *dst, const unsigned char *src, size_t len)
-{
-    size_t i;
-
-    for (i = 0; i < len / 4; i++) {
-        dst[i] = be32dec(src + i * 4);
-    }
-}
-
-#define Ch(x, y, z)     ((x & (y ^ z)) ^ z)
-#define Maj(x, y, z)    ((x & (y | z)) | (y & z))
-#define SHR(x, n)       (x >> n)
-#define ROTR(x, n)      ((x >> n) | (x << (32 - n)))
-#define S0(x)           (ROTR(x, 2) ^ ROTR(x, 13) ^ ROTR(x, 22))
-#define S1(x)           (ROTR(x, 6) ^ ROTR(x, 11) ^ ROTR(x, 25))
-#define s0(x)           (ROTR(x, 7) ^ ROTR(x, 18) ^ SHR(x, 3))
-#define s1(x)           (ROTR(x, 17) ^ ROTR(x, 19) ^ SHR(x, 10))
-
-#define RND(a, b, c, d, e, f, g, h, k)              \
-    t0 = h + S1(e) + Ch(e, f, g) + k;               \
-    t1 = S0(a) + Maj(a, b, c);                      \
-    d += t0;                                        \
-    h  = t0 + t1;
-
-#define RNDr(S, W, i, k)                    \
-    RND(S[(64 - i) % 8], S[(65 - i) % 8],   \
-        S[(66 - i) % 8], S[(67 - i) % 8],   \
-        S[(68 - i) % 8], S[(69 - i) % 8],   \
-        S[(70 - i) % 8], S[(71 - i) % 8],   \
-        W[i] + k)
-
-static void
-SHA256_Transform(uint32_t *state, const unsigned char block[64])
-{
-    uint32_t W[64];
-    uint32_t S[8];
-    uint32_t t0, t1;
-    int i;
-
-    be32dec_vect(W, block, 64);
-    for (i = 16; i < 64; i++) {
-        W[i] = s1(W[i - 2]) + W[i - 7] + s0(W[i - 15]) + W[i - 16];
-    }
-
-    memcpy(S, state, 32);
-
-    RNDr(S, W, 0, 0x428a2f98);
-    RNDr(S, W, 1, 0x71374491);
-    RNDr(S, W, 2, 0xb5c0fbcf);
-    RNDr(S, W, 3, 0xe9b5dba5);
-    RNDr(S, W, 4, 0x3956c25b);
-    RNDr(S, W, 5, 0x59f111f1);
-    RNDr(S, W, 6, 0x923f82a4);
-    RNDr(S, W, 7, 0xab1c5ed5);
-    RNDr(S, W, 8, 0xd807aa98);
-    RNDr(S, W, 9, 0x12835b01);
-    RNDr(S, W, 10, 0x243185be);
-    RNDr(S, W, 11, 0x550c7dc3);
-    RNDr(S, W, 12, 0x72be5d74);
-    RNDr(S, W, 13, 0x80deb1fe);
-    RNDr(S, W, 14, 0x9bdc06a7);
-    RNDr(S, W, 15, 0xc19bf174);
-    RNDr(S, W, 16, 0xe49b69c1);
-    RNDr(S, W, 17, 0xefbe4786);
-    RNDr(S, W, 18, 0x0fc19dc6);
-    RNDr(S, W, 19, 0x240ca1cc);
-    RNDr(S, W, 20, 0x2de92c6f);
-    RNDr(S, W, 21, 0x4a7484aa);
-    RNDr(S, W, 22, 0x5cb0a9dc);
-    RNDr(S, W, 23, 0x76f988da);
-    RNDr(S, W, 24, 0x983e5152);
-    RNDr(S, W, 25, 0xa831c66d);
-    RNDr(S, W, 26, 0xb00327c8);
-    RNDr(S, W, 27, 0xbf597fc7);
-    RNDr(S, W, 28, 0xc6e00bf3);
-    RNDr(S, W, 29, 0xd5a79147);
-    RNDr(S, W, 30, 0x06ca6351);
-    RNDr(S, W, 31, 0x14292967);
-    RNDr(S, W, 32, 0x27b70a85);
-    RNDr(S, W, 33, 0x2e1b2138);
-    RNDr(S, W, 34, 0x4d2c6dfc);
-    RNDr(S, W, 35, 0x53380d13);
-    RNDr(S, W, 36, 0x650a7354);
-    RNDr(S, W, 37, 0x766a0abb);
-    RNDr(S, W, 38, 0x81c2c92e);
-    RNDr(S, W, 39, 0x92722c85);
-    RNDr(S, W, 40, 0xa2bfe8a1);
-    RNDr(S, W, 41, 0xa81a664b);
-    RNDr(S, W, 42, 0xc24b8b70);
-    RNDr(S, W, 43, 0xc76c51a3);
-    RNDr(S, W, 44, 0xd192e819);
-    RNDr(S, W, 45, 0xd6990624);
-    RNDr(S, W, 46, 0xf40e3585);
-    RNDr(S, W, 47, 0x106aa070);
-    RNDr(S, W, 48, 0x19a4c116);
-    RNDr(S, W, 49, 0x1e376c08);
-    RNDr(S, W, 50, 0x2748774c);
-    RNDr(S, W, 51, 0x34b0bcb5);
-    RNDr(S, W, 52, 0x391c0cb3);
-    RNDr(S, W, 53, 0x4ed8aa4a);
-    RNDr(S, W, 54, 0x5b9cca4f);
-    RNDr(S, W, 55, 0x682e6ff3);
-    RNDr(S, W, 56, 0x748f82ee);
-    RNDr(S, W, 57, 0x78a5636f);
-    RNDr(S, W, 58, 0x84c87814);
-    RNDr(S, W, 59, 0x8cc70208);
-    RNDr(S, W, 60, 0x90befffa);
-    RNDr(S, W, 61, 0xa4506ceb);
-    RNDr(S, W, 62, 0xbef9a3f7);
-    RNDr(S, W, 63, 0xc67178f2);
-
-    for (i = 0; i < 8; i++) {
-        state[i] += S[i];
-    }
-
-    sodium_memzero((void *) W, sizeof W);
-    sodium_memzero((void *) S, sizeof S);
-    sodium_memzero((void *) &t0, sizeof t0);
-    sodium_memzero((void *) &t1, sizeof t1);
-}
-
-static unsigned char PAD[64] = {
-    0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
-};
-
-static void
-SHA256_Pad(crypto_hash_sha256_state *state)
-{
-    unsigned char len[8];
-    uint32_t r, plen;
-
-    be64enc(len, state->count);
-
-    r = (state->count >> 3) & 0x3f;
-    plen = (r < 56) ? (56 - r) : (120 - r);
-    crypto_hash_sha256_update(state, PAD, (unsigned long long) plen);
-
-    crypto_hash_sha256_update(state, len, 8);
-}
-
-int
-crypto_hash_sha256_init(crypto_hash_sha256_state *state)
-{
-    static const uint32_t sha256_initstate[8] = {
-        0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
-        0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
-    };
-
-    state->count = (uint64_t) 0U;
-    memcpy(state->state, sha256_initstate, sizeof sha256_initstate);
-
-    return 0;
-}
-
-int
-crypto_hash_sha256_update(crypto_hash_sha256_state *state,
-                          const unsigned char *in,
-                          unsigned long long inlen)
-{
-    uint32_t r;
-
-    if (inlen <= 0U) {
-        return 0;
-    }
-    r = (state->count >> 3) & 0x3f;
-    state->count += (uint64_t)(inlen) << 3;
-
-    if (inlen < 64 - r) {
-        memcpy(&state->buf[r], in, inlen);
-        return 0;
-    }
-    memcpy(&state->buf[r], in, 64 - r);
-    SHA256_Transform(state->state, state->buf);
-    in += 64 - r;
-    inlen -= 64 - r;
-
-    while (inlen >= 64) {
-        SHA256_Transform(state->state, in);
-        in += 64;
-        inlen -= 64;
-    }
-    memcpy(state->buf, in, inlen);
-
-    return 0;
-}
-
-int
-crypto_hash_sha256_final(crypto_hash_sha256_state *state,
-                         unsigned char *out)
-{
-    SHA256_Pad(state);
-    be32enc_vect(out, state->state, 32);
-    sodium_memzero((void *) state, sizeof *state);
-
-    return 0;
-}
-
-int
-crypto_hash_sha256(unsigned char *out, const unsigned char *in,
-                   unsigned long long inlen)
-{
-    crypto_hash_sha256_state state;
-
-    crypto_hash_sha256_init(&state);
-    crypto_hash_sha256_update(&state, in, inlen);
-    crypto_hash_sha256_final(&state, out);
-
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_hash/sha256/hash_sha256_api.c b/libsodium/src/libsodium/crypto_hash/sha256/hash_sha256_api.c
deleted file mode 100644
index ca208ff..0000000
--- a/libsodium/src/libsodium/crypto_hash/sha256/hash_sha256_api.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "crypto_hash_sha256.h"
-
-size_t
-crypto_hash_sha256_bytes(void) {
-    return crypto_hash_sha256_BYTES;
-}
-
-size_t
-crypto_hash_sha256_statebytes(void) {
-    return sizeof(crypto_hash_sha256_state);
-}
diff --git a/libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c b/libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c
deleted file mode 100644
index 164cedb..0000000
--- a/libsodium/src/libsodium/crypto_hash/sha512/cp/hash_sha512.c
+++ /dev/null
@@ -1,321 +0,0 @@
-
-/*-
- * Copyright 2005,2007,2009 Colin Percival
- * All rights reserved.
- *
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions
- * are met:
- * 1. Redistributions of source code must retain the above copyright
- *    notice, this list of conditions and the following disclaimer.
- * 2. Redistributions in binary form must reproduce the above copyright
- *    notice, this list of conditions and the following disclaimer in the
- *    documentation and/or other materials provided with the distribution.
- *
- * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
- * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
- * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
- * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
- * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
- * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
- * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
- * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
- * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
- * SUCH DAMAGE.
- *
- */
-
-#include "crypto_hash_sha512.h"
-#include "utils.h"
-
-#include <sys/types.h>
-
-#include <limits.h>
-#include <stdint.h>
-#include <stdlib.h>
-#include <string.h>
-
-/* Avoid namespace collisions with BSD <sys/endian.h>. */
-#define be64dec _sha512_be64dec
-#define be64enc _sha512_be64enc
-
-static inline uint64_t
-be64dec(const void *pp)
-{
-    const uint8_t *p = (uint8_t const *)pp;
-
-    return ((uint64_t)(p[7]) + ((uint64_t)(p[6]) << 8) +
-            ((uint64_t)(p[5]) << 16) + ((uint64_t)(p[4]) << 24) +
-            ((uint64_t)(p[3]) << 32) + ((uint64_t)(p[2]) << 40) +
-            ((uint64_t)(p[1]) << 48) + ((uint64_t)(p[0]) << 56));
-}
-
-static inline void
-be64enc(void *pp, uint64_t x)
-{
-    uint8_t *p = (uint8_t *)pp;
-
-    p[7] = x & 0xff;
-    p[6] = (x >> 8) & 0xff;
-    p[5] = (x >> 16) & 0xff;
-    p[4] = (x >> 24) & 0xff;
-    p[3] = (x >> 32) & 0xff;
-    p[2] = (x >> 40) & 0xff;
-    p[1] = (x >> 48) & 0xff;
-    p[0] = (x >> 56) & 0xff;
-}
-
-static void
-be64enc_vect(unsigned char *dst, const uint64_t *src, size_t len)
-{
-    size_t i;
-
-    for (i = 0; i < len / 8; i++) {
-        be64enc(dst + i * 8, src[i]);
-    }
-}
-
-static void
-be64dec_vect(uint64_t *dst, const unsigned char *src, size_t len)
-{
-    size_t i;
-
-    for (i = 0; i < len / 8; i++) {
-        dst[i] = be64dec(src + i * 8);
-    }
-}
-
-#define Ch(x, y, z)     ((x & (y ^ z)) ^ z)
-#define Maj(x, y, z)    ((x & (y | z)) | (y & z))
-#define SHR(x, n)       (x >> n)
-#define ROTR(x, n)      ((x >> n) | (x << (64 - n)))
-#define S0(x)           (ROTR(x, 28) ^ ROTR(x, 34) ^ ROTR(x, 39))
-#define S1(x)           (ROTR(x, 14) ^ ROTR(x, 18) ^ ROTR(x, 41))
-#define s0(x)           (ROTR(x, 1) ^ ROTR(x, 8) ^ SHR(x, 7))
-#define s1(x)           (ROTR(x, 19) ^ ROTR(x, 61) ^ SHR(x, 6))
-
-#define RND(a, b, c, d, e, f, g, h, k)              \
-    t0 = h + S1(e) + Ch(e, f, g) + k;               \
-    t1 = S0(a) + Maj(a, b, c);                      \
-    d += t0;                                        \
-    h  = t0 + t1;
-
-#define RNDr(S, W, i, k)                    \
-    RND(S[(80 - i) % 8], S[(81 - i) % 8],   \
-        S[(82 - i) % 8], S[(83 - i) % 8],   \
-        S[(84 - i) % 8], S[(85 - i) % 8],   \
-        S[(86 - i) % 8], S[(87 - i) % 8],   \
-        W[i] + k)
-
-static void
-SHA512_Transform(uint64_t *state, const unsigned char block[128])
-{
-    uint64_t W[80];
-    uint64_t S[8];
-    uint64_t t0, t1;
-    int i;
-
-    be64dec_vect(W, block, 128);
-    for (i = 16; i < 80; i++) {
-        W[i] = s1(W[i - 2]) + W[i - 7] + s0(W[i - 15]) + W[i - 16];
-    }
-
-    memcpy(S, state, 64);
-
-    RNDr(S, W, 0, 0x428a2f98d728ae22ULL);
-    RNDr(S, W, 1, 0x7137449123ef65cdULL);
-    RNDr(S, W, 2, 0xb5c0fbcfec4d3b2fULL);
-    RNDr(S, W, 3, 0xe9b5dba58189dbbcULL);
-    RNDr(S, W, 4, 0x3956c25bf348b538ULL);
-    RNDr(S, W, 5, 0x59f111f1b605d019ULL);
-    RNDr(S, W, 6, 0x923f82a4af194f9bULL);
-    RNDr(S, W, 7, 0xab1c5ed5da6d8118ULL);
-    RNDr(S, W, 8, 0xd807aa98a3030242ULL);
-    RNDr(S, W, 9, 0x12835b0145706fbeULL);
-    RNDr(S, W, 10, 0x243185be4ee4b28cULL);
-    RNDr(S, W, 11, 0x550c7dc3d5ffb4e2ULL);
-    RNDr(S, W, 12, 0x72be5d74f27b896fULL);
-    RNDr(S, W, 13, 0x80deb1fe3b1696b1ULL);
-    RNDr(S, W, 14, 0x9bdc06a725c71235ULL);
-    RNDr(S, W, 15, 0xc19bf174cf692694ULL);
-    RNDr(S, W, 16, 0xe49b69c19ef14ad2ULL);
-    RNDr(S, W, 17, 0xefbe4786384f25e3ULL);
-    RNDr(S, W, 18, 0x0fc19dc68b8cd5b5ULL);
-    RNDr(S, W, 19, 0x240ca1cc77ac9c65ULL);
-    RNDr(S, W, 20, 0x2de92c6f592b0275ULL);
-    RNDr(S, W, 21, 0x4a7484aa6ea6e483ULL);
-    RNDr(S, W, 22, 0x5cb0a9dcbd41fbd4ULL);
-    RNDr(S, W, 23, 0x76f988da831153b5ULL);
-    RNDr(S, W, 24, 0x983e5152ee66dfabULL);
-    RNDr(S, W, 25, 0xa831c66d2db43210ULL);
-    RNDr(S, W, 26, 0xb00327c898fb213fULL);
-    RNDr(S, W, 27, 0xbf597fc7beef0ee4ULL);
-    RNDr(S, W, 28, 0xc6e00bf33da88fc2ULL);
-    RNDr(S, W, 29, 0xd5a79147930aa725ULL);
-    RNDr(S, W, 30, 0x06ca6351e003826fULL);
-    RNDr(S, W, 31, 0x142929670a0e6e70ULL);
-    RNDr(S, W, 32, 0x27b70a8546d22ffcULL);
-    RNDr(S, W, 33, 0x2e1b21385c26c926ULL);
-    RNDr(S, W, 34, 0x4d2c6dfc5ac42aedULL);
-    RNDr(S, W, 35, 0x53380d139d95b3dfULL);
-    RNDr(S, W, 36, 0x650a73548baf63deULL);
-    RNDr(S, W, 37, 0x766a0abb3c77b2a8ULL);
-    RNDr(S, W, 38, 0x81c2c92e47edaee6ULL);
-    RNDr(S, W, 39, 0x92722c851482353bULL);
-    RNDr(S, W, 40, 0xa2bfe8a14cf10364ULL);
-    RNDr(S, W, 41, 0xa81a664bbc423001ULL);
-    RNDr(S, W, 42, 0xc24b8b70d0f89791ULL);
-    RNDr(S, W, 43, 0xc76c51a30654be30ULL);
-    RNDr(S, W, 44, 0xd192e819d6ef5218ULL);
-    RNDr(S, W, 45, 0xd69906245565a910ULL);
-    RNDr(S, W, 46, 0xf40e35855771202aULL);
-    RNDr(S, W, 47, 0x106aa07032bbd1b8ULL);
-    RNDr(S, W, 48, 0x19a4c116b8d2d0c8ULL);
-    RNDr(S, W, 49, 0x1e376c085141ab53ULL);
-    RNDr(S, W, 50, 0x2748774cdf8eeb99ULL);
-    RNDr(S, W, 51, 0x34b0bcb5e19b48a8ULL);
-    RNDr(S, W, 52, 0x391c0cb3c5c95a63ULL);
-    RNDr(S, W, 53, 0x4ed8aa4ae3418acbULL);
-    RNDr(S, W, 54, 0x5b9cca4f7763e373ULL);
-    RNDr(S, W, 55, 0x682e6ff3d6b2b8a3ULL);
-    RNDr(S, W, 56, 0x748f82ee5defb2fcULL);
-    RNDr(S, W, 57, 0x78a5636f43172f60ULL);
-    RNDr(S, W, 58, 0x84c87814a1f0ab72ULL);
-    RNDr(S, W, 59, 0x8cc702081a6439ecULL);
-    RNDr(S, W, 60, 0x90befffa23631e28ULL);
-    RNDr(S, W, 61, 0xa4506cebde82bde9ULL);
-    RNDr(S, W, 62, 0xbef9a3f7b2c67915ULL);
-    RNDr(S, W, 63, 0xc67178f2e372532bULL);
-    RNDr(S, W, 64, 0xca273eceea26619cULL);
-    RNDr(S, W, 65, 0xd186b8c721c0c207ULL);
-    RNDr(S, W, 66, 0xeada7dd6cde0eb1eULL);
-    RNDr(S, W, 67, 0xf57d4f7fee6ed178ULL);
-    RNDr(S, W, 68, 0x06f067aa72176fbaULL);
-    RNDr(S, W, 69, 0x0a637dc5a2c898a6ULL);
-    RNDr(S, W, 70, 0x113f9804bef90daeULL);
-    RNDr(S, W, 71, 0x1b710b35131c471bULL);
-    RNDr(S, W, 72, 0x28db77f523047d84ULL);
-    RNDr(S, W, 73, 0x32caab7b40c72493ULL);
-    RNDr(S, W, 74, 0x3c9ebe0a15c9bebcULL);
-    RNDr(S, W, 75, 0x431d67c49c100d4cULL);
-    RNDr(S, W, 76, 0x4cc5d4becb3e42b6ULL);
-    RNDr(S, W, 77, 0x597f299cfc657e2aULL);
-    RNDr(S, W, 78, 0x5fcb6fab3ad6faecULL);
-    RNDr(S, W, 79, 0x6c44198c4a475817ULL);
-
-    for (i = 0; i < 8; i++) {
-        state[i] += S[i];
-    }
-
-    sodium_memzero((void *) W, sizeof W);
-    sodium_memzero((void *) S, sizeof S);
-    sodium_memzero((void *) &t0, sizeof t0);
-    sodium_memzero((void *) &t1, sizeof t1);
-}
-
-static unsigned char PAD[128] = {
-    0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
-    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
-};
-
-static void
-SHA512_Pad(crypto_hash_sha512_state *state)
-{
-    unsigned char len[16];
-    uint64_t r, plen;
-
-    be64enc_vect(len, state->count, 16);
-
-    r = (state->count[1] >> 3) & 0x7f;
-    plen = (r < 112) ? (112 - r) : (240 - r);
-    crypto_hash_sha512_update(state, PAD, (unsigned long long) plen);
-
-    crypto_hash_sha512_update(state, len, 16);
-}
-
-int
-crypto_hash_sha512_init(crypto_hash_sha512_state *state)
-{
-    static const uint64_t sha512_initstate[8] = {
-        0x6a09e667f3bcc908ULL, 0xbb67ae8584caa73bULL,
-        0x3c6ef372fe94f82bULL, 0xa54ff53a5f1d36f1ULL,
-        0x510e527fade682d1ULL, 0x9b05688c2b3e6c1fULL,
-        0x1f83d9abfb41bd6bULL, 0x5be0cd19137e2179ULL
-    };
-
-    state->count[0] = state->count[1] = (uint64_t) 0U;
-    memcpy(state->state, sha512_initstate, sizeof sha512_initstate);
-
-    return 0;
-}
-
-int
-crypto_hash_sha512_update(crypto_hash_sha512_state *state,
-                          const unsigned char *in,
-                          unsigned long long inlen)
-{
-    uint64_t bitlen[2];
-    uint64_t r;
-    const unsigned char *src = in;
-
-    r = (state->count[1] >> 3) & 0x7f;
-
-    bitlen[1] = ((uint64_t)inlen) << 3;
-    bitlen[0] = ((uint64_t)inlen) >> 61;
-
-    /* LCOV_EXCL_START */
-    if ((state->count[1] += bitlen[1]) < bitlen[1]) {
-        state->count[0]++;
-    }
-    /* LCOV_EXCL_STOP */
-    state->count[0] += bitlen[0];
-
-    if (inlen < 128 - r) {
-        memcpy(&state->buf[r], src, inlen);
-        return 0;
-    }
-    memcpy(&state->buf[r], src, 128 - r);
-    SHA512_Transform(state->state, state->buf);
-    src += 128 - r;
-    inlen -= 128 - r;
-
-    while (inlen >= 128) {
-        SHA512_Transform(state->state, src);
-        src += 128;
-        inlen -= 128;
-    }
-    memcpy(state->buf, src, inlen);
-
-    return 0;
-}
-
-int
-crypto_hash_sha512_final(crypto_hash_sha512_state *state,
-                         unsigned char *out)
-{
-    SHA512_Pad(state);
-    be64enc_vect(out, state->state, 64);
-    sodium_memzero((void *) state, sizeof *state);
-
-    return 0;
-}
-
-int
-crypto_hash_sha512(unsigned char *out, const unsigned char *in,
-                   unsigned long long inlen)
-{
-    crypto_hash_sha512_state state;
-
-    crypto_hash_sha512_init(&state);
-    crypto_hash_sha512_update(&state, in, inlen);
-    crypto_hash_sha512_final(&state, out);
-
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_hash/sha512/hash_sha512_api.c b/libsodium/src/libsodium/crypto_hash/sha512/hash_sha512_api.c
deleted file mode 100644
index b2629a8..0000000
--- a/libsodium/src/libsodium/crypto_hash/sha512/hash_sha512_api.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "crypto_hash_sha512.h"
-
-size_t
-crypto_hash_sha512_bytes(void) {
-    return crypto_hash_sha512_BYTES;
-}
-
-size_t
-crypto_hash_sha512_statebytes(void) {
-    return sizeof(crypto_hash_sha512_state);
-}
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c b/libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c
index 1e90d62..93567aa 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c
+++ b/libsodium/src/libsodium/crypto_onetimeauth/crypto_onetimeauth.c
@@ -1,5 +1,6 @@
 
 #include "crypto_onetimeauth.h"
+#include "randombytes.h"
 
 size_t
 crypto_onetimeauth_statebytes(void)
@@ -63,3 +64,8 @@ crypto_onetimeauth_primitive(void)
 {
     return crypto_onetimeauth_PRIMITIVE;
 }
+
+void crypto_onetimeauth_keygen(unsigned char k[crypto_onetimeauth_KEYBYTES])
+{
+    randombytes_buf(k, crypto_onetimeauth_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c
index c6206f4..e798072 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.c
@@ -1,11 +1,13 @@
 
+#include "poly1305_donna.h"
 #include "crypto_verify_16.h"
+#include "private/common.h"
 #include "utils.h"
-#include "poly1305_donna.h"
+
 #ifdef HAVE_TI_MODE
-# include "poly1305_donna64.h"
+#include "poly1305_donna64.h"
 #else
-# include "poly1305_donna32.h"
+#include "poly1305_donna32.h"
 #endif
 #include "../onetimeauth_poly1305.h"
 
@@ -19,15 +21,18 @@ poly1305_update(poly1305_state_internal_t *st, const unsigned char *m,
     if (st->leftover) {
         unsigned long long want = (poly1305_block_size - st->leftover);
 
-        if (want > bytes)
+        if (want > bytes) {
             want = bytes;
-        for (i = 0; i < want; i++)
+        }
+        for (i = 0; i < want; i++) {
             st->buffer[st->leftover + i] = m[i];
+        }
         bytes -= want;
         m += want;
         st->leftover += want;
-        if (st->leftover < poly1305_block_size)
+        if (st->leftover < poly1305_block_size) {
             return;
+        }
         poly1305_blocks(st, st->buffer, poly1305_block_size);
         st->leftover = 0;
     }
@@ -52,7 +57,7 @@ poly1305_update(poly1305_state_internal_t *st, const unsigned char *m,
 
 static int
 crypto_onetimeauth_poly1305_donna(unsigned char *out, const unsigned char *m,
-                                  unsigned long long inlen,
+                                  unsigned long long   inlen,
                                   const unsigned char *key)
 {
     CRYPTO_ALIGN(64) poly1305_state_internal_t state;
@@ -68,28 +73,28 @@ static int
 crypto_onetimeauth_poly1305_donna_init(crypto_onetimeauth_poly1305_state *state,
                                        const unsigned char *key)
 {
-    (void) sizeof(int[sizeof (crypto_onetimeauth_poly1305_state) >=
-                      sizeof (poly1305_state_internal_t) ? 1 : -1]);
-    poly1305_init((poly1305_state_internal_t *)(void *) state, key);
+    COMPILER_ASSERT(sizeof(crypto_onetimeauth_poly1305_state) >=
+        sizeof(poly1305_state_internal_t));
+    poly1305_init((poly1305_state_internal_t *) (void *) state, key);
 
     return 0;
 }
 
 static int
-crypto_onetimeauth_poly1305_donna_update(crypto_onetimeauth_poly1305_state *state,
-                                         const unsigned char *in,
-                                         unsigned long long inlen)
+crypto_onetimeauth_poly1305_donna_update(
+    crypto_onetimeauth_poly1305_state *state, const unsigned char *in,
+    unsigned long long inlen)
 {
-    poly1305_update((poly1305_state_internal_t *)(void *) state, in, inlen);
+    poly1305_update((poly1305_state_internal_t *) (void *) state, in, inlen);
 
     return 0;
 }
 
 static int
-crypto_onetimeauth_poly1305_donna_final(crypto_onetimeauth_poly1305_state *state,
-                                        unsigned char *out)
+crypto_onetimeauth_poly1305_donna_final(
+    crypto_onetimeauth_poly1305_state *state, unsigned char *out)
 {
-    poly1305_finish((poly1305_state_internal_t *)(void *) state, out);
+    poly1305_finish((poly1305_state_internal_t *) (void *) state, out);
 
     return 0;
 }
@@ -97,21 +102,23 @@ crypto_onetimeauth_poly1305_donna_final(crypto_onetimeauth_poly1305_state *state
 static int
 crypto_onetimeauth_poly1305_donna_verify(const unsigned char *h,
                                          const unsigned char *in,
-                                         unsigned long long inlen,
+                                         unsigned long long   inlen,
                                          const unsigned char *k)
 {
     unsigned char correct[16];
 
-    crypto_onetimeauth_poly1305_donna(correct,in,inlen,k);
+    crypto_onetimeauth_poly1305_donna(correct, in, inlen, k);
 
-    return crypto_verify_16(h,correct);
+    return crypto_verify_16(h, correct);
 }
 
 struct crypto_onetimeauth_poly1305_implementation
-crypto_onetimeauth_poly1305_donna_implementation = {
-    SODIUM_C99(.onetimeauth =) crypto_onetimeauth_poly1305_donna,
-    SODIUM_C99(.onetimeauth_verify =) crypto_onetimeauth_poly1305_donna_verify,
-    SODIUM_C99(.onetimeauth_init =) crypto_onetimeauth_poly1305_donna_init,
-    SODIUM_C99(.onetimeauth_update =) crypto_onetimeauth_poly1305_donna_update,
-    SODIUM_C99(.onetimeauth_final =) crypto_onetimeauth_poly1305_donna_final
-};
+    crypto_onetimeauth_poly1305_donna_implementation = {
+        SODIUM_C99(.onetimeauth =) crypto_onetimeauth_poly1305_donna,
+        SODIUM_C99(.onetimeauth_verify =)
+            crypto_onetimeauth_poly1305_donna_verify,
+        SODIUM_C99(.onetimeauth_init =) crypto_onetimeauth_poly1305_donna_init,
+        SODIUM_C99(.onetimeauth_update =)
+            crypto_onetimeauth_poly1305_donna_update,
+        SODIUM_C99(.onetimeauth_final =) crypto_onetimeauth_poly1305_donna_final
+    };
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h
index 344ee83..d6474b3 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna.h
@@ -3,29 +3,10 @@
 
 #include <stddef.h>
 
+#include "../onetimeauth_poly1305.h"
 #include "crypto_onetimeauth_poly1305.h"
 
 extern struct crypto_onetimeauth_poly1305_implementation
     crypto_onetimeauth_poly1305_donna_implementation;
 
-static int crypto_onetimeauth_poly1305_donna(unsigned char *out,
-                                             const unsigned char *in,
-                                             unsigned long long inlen,
-                                             const unsigned char *k);
-
-static int crypto_onetimeauth_poly1305_donna_verify(const unsigned char *h,
-                                                    const unsigned char *in,
-                                                    unsigned long long inlen,
-                                                    const unsigned char *k);
-
-static int crypto_onetimeauth_poly1305_donna_init(crypto_onetimeauth_poly1305_state *state,
-                                                  const unsigned char *key);
-
-static int crypto_onetimeauth_poly1305_donna_update(crypto_onetimeauth_poly1305_state *state,
-                                                    const unsigned char *in,
-                                                    unsigned long long inlen);
-
-static int crypto_onetimeauth_poly1305_donna_final(crypto_onetimeauth_poly1305_state *state,
-                                                   unsigned char *out);
-
 #endif /* poly1305_donna_H */
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h
index 921e084..cef6448 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna32.h
@@ -1,207 +1,235 @@
 /*
-        poly1305 implementation using 32 bit * 32 bit = 64 bit multiplication and 64 bit addition
+   poly1305 implementation using 32 bit * 32 bit = 64 bit multiplication
+   and 64 bit addition
 */
 
 #if defined(_MSC_VER)
 # define POLY1305_NOINLINE __declspec(noinline)
-#elif defined(__GNUC__)
+#elif defined(__clang__) || defined(__GNUC__)
 # define POLY1305_NOINLINE __attribute__((noinline))
 #else
 # define POLY1305_NOINLINE
 #endif
 
+#include "private/common.h"
+
 #define poly1305_block_size 16
 
 /* 17 + sizeof(unsigned long long) + 14*sizeof(unsigned long) */
 typedef struct poly1305_state_internal_t {
-        unsigned long r[5];
-        unsigned long h[5];
-        unsigned long pad[4];
-        unsigned long long leftover;
-        unsigned char buffer[poly1305_block_size];
-        unsigned char final;
+    unsigned long      r[5];
+    unsigned long      h[5];
+    unsigned long      pad[4];
+    unsigned long long leftover;
+    unsigned char      buffer[poly1305_block_size];
+    unsigned char      final;
 } poly1305_state_internal_t;
 
-/* interpret four 8 bit unsigned integers as a 32 bit unsigned integer in little endian */
-static unsigned long
-U8TO32(const unsigned char *p)
-{
-        return
-        (((unsigned long)(p[0] & 0xff)      ) |
-         ((unsigned long)(p[1] & 0xff) <<  8) |
-         ((unsigned long)(p[2] & 0xff) << 16) |
-         ((unsigned long)(p[3] & 0xff) << 24));
-}
-
-/* store a 32 bit unsigned integer as four 8 bit unsigned integers in little endian */
-static void
-U32TO8(unsigned char *p, unsigned long v)
-{
-        p[0] = (v      ) & 0xff;
-        p[1] = (v >>  8) & 0xff;
-        p[2] = (v >> 16) & 0xff;
-        p[3] = (v >> 24) & 0xff;
-}
-
 static void
 poly1305_init(poly1305_state_internal_t *st, const unsigned char key[32])
 {
-        /* r &= 0xffffffc0ffffffc0ffffffc0fffffff */
-        st->r[0] = (U8TO32(&key[ 0])     ) & 0x3ffffff;
-        st->r[1] = (U8TO32(&key[ 3]) >> 2) & 0x3ffff03;
-        st->r[2] = (U8TO32(&key[ 6]) >> 4) & 0x3ffc0ff;
-        st->r[3] = (U8TO32(&key[ 9]) >> 6) & 0x3f03fff;
-        st->r[4] = (U8TO32(&key[12]) >> 8) & 0x00fffff;
-
-        /* h = 0 */
-        st->h[0] = 0;
-        st->h[1] = 0;
-        st->h[2] = 0;
-        st->h[3] = 0;
-        st->h[4] = 0;
-
-        /* save pad for later */
-        st->pad[0] = U8TO32(&key[16]);
-        st->pad[1] = U8TO32(&key[20]);
-        st->pad[2] = U8TO32(&key[24]);
-        st->pad[3] = U8TO32(&key[28]);
-
-        st->leftover = 0;
-        st->final = 0;
+    /* r &= 0xffffffc0ffffffc0ffffffc0fffffff - wiped after finalization */
+    st->r[0] = (LOAD32_LE(&key[0])) & 0x3ffffff;
+    st->r[1] = (LOAD32_LE(&key[3]) >> 2) & 0x3ffff03;
+    st->r[2] = (LOAD32_LE(&key[6]) >> 4) & 0x3ffc0ff;
+    st->r[3] = (LOAD32_LE(&key[9]) >> 6) & 0x3f03fff;
+    st->r[4] = (LOAD32_LE(&key[12]) >> 8) & 0x00fffff;
+
+    /* h = 0 */
+    st->h[0] = 0;
+    st->h[1] = 0;
+    st->h[2] = 0;
+    st->h[3] = 0;
+    st->h[4] = 0;
+
+    /* save pad for later */
+    st->pad[0] = LOAD32_LE(&key[16]);
+    st->pad[1] = LOAD32_LE(&key[20]);
+    st->pad[2] = LOAD32_LE(&key[24]);
+    st->pad[3] = LOAD32_LE(&key[28]);
+
+    st->leftover = 0;
+    st->final    = 0;
 }
 
 static void
-poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m, unsigned long long bytes)
+poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
+                unsigned long long bytes)
 {
-        const unsigned long hibit = (st->final) ? 0 : (1 << 24); /* 1 << 128 */
-        unsigned long r0,r1,r2,r3,r4;
-        unsigned long s1,s2,s3,s4;
-        unsigned long h0,h1,h2,h3,h4;
-        unsigned long long d0,d1,d2,d3,d4;
-        unsigned long c;
-
-        r0 = st->r[0];
-        r1 = st->r[1];
-        r2 = st->r[2];
-        r3 = st->r[3];
-        r4 = st->r[4];
-
-        s1 = r1 * 5;
-        s2 = r2 * 5;
-        s3 = r3 * 5;
-        s4 = r4 * 5;
-
-        h0 = st->h[0];
-        h1 = st->h[1];
-        h2 = st->h[2];
-        h3 = st->h[3];
-        h4 = st->h[4];
-
-        while (bytes >= poly1305_block_size) {
-                /* h += m[i] */
-                h0 += (U8TO32(m+ 0)     ) & 0x3ffffff;
-                h1 += (U8TO32(m+ 3) >> 2) & 0x3ffffff;
-                h2 += (U8TO32(m+ 6) >> 4) & 0x3ffffff;
-                h3 += (U8TO32(m+ 9) >> 6) & 0x3ffffff;
-                h4 += (U8TO32(m+12) >> 8) | hibit;
-
-                /* h *= r */
-                d0 = ((unsigned long long)h0 * r0) + ((unsigned long long)h1 * s4) + ((unsigned long long)h2 * s3) + ((unsigned long long)h3 * s2) + ((unsigned long long)h4 * s1);
-                d1 = ((unsigned long long)h0 * r1) + ((unsigned long long)h1 * r0) + ((unsigned long long)h2 * s4) + ((unsigned long long)h3 * s3) + ((unsigned long long)h4 * s2);
-                d2 = ((unsigned long long)h0 * r2) + ((unsigned long long)h1 * r1) + ((unsigned long long)h2 * r0) + ((unsigned long long)h3 * s4) + ((unsigned long long)h4 * s3);
-                d3 = ((unsigned long long)h0 * r3) + ((unsigned long long)h1 * r2) + ((unsigned long long)h2 * r1) + ((unsigned long long)h3 * r0) + ((unsigned long long)h4 * s4);
-                d4 = ((unsigned long long)h0 * r4) + ((unsigned long long)h1 * r3) + ((unsigned long long)h2 * r2) + ((unsigned long long)h3 * r1) + ((unsigned long long)h4 * r0);
-
-                /* (partial) h %= p */
-                              c = (unsigned long)(d0 >> 26); h0 = (unsigned long)d0 & 0x3ffffff;
-                d1 += c;      c = (unsigned long)(d1 >> 26); h1 = (unsigned long)d1 & 0x3ffffff;
-                d2 += c;      c = (unsigned long)(d2 >> 26); h2 = (unsigned long)d2 & 0x3ffffff;
-                d3 += c;      c = (unsigned long)(d3 >> 26); h3 = (unsigned long)d3 & 0x3ffffff;
-                d4 += c;      c = (unsigned long)(d4 >> 26); h4 = (unsigned long)d4 & 0x3ffffff;
-                h0 += c * 5;  c =                (h0 >> 26); h0 =                h0 & 0x3ffffff;
-                h1 += c;
-
-                m += poly1305_block_size;
-                bytes -= poly1305_block_size;
-        }
-
-        st->h[0] = h0;
-        st->h[1] = h1;
-        st->h[2] = h2;
-        st->h[3] = h3;
-        st->h[4] = h4;
+    const unsigned long hibit = (st->final) ? 0UL : (1UL << 24); /* 1 << 128 */
+    unsigned long       r0, r1, r2, r3, r4;
+    unsigned long       s1, s2, s3, s4;
+    unsigned long       h0, h1, h2, h3, h4;
+    unsigned long long  d0, d1, d2, d3, d4;
+    unsigned long       c;
+
+    r0 = st->r[0];
+    r1 = st->r[1];
+    r2 = st->r[2];
+    r3 = st->r[3];
+    r4 = st->r[4];
+
+    s1 = r1 * 5;
+    s2 = r2 * 5;
+    s3 = r3 * 5;
+    s4 = r4 * 5;
+
+    h0 = st->h[0];
+    h1 = st->h[1];
+    h2 = st->h[2];
+    h3 = st->h[3];
+    h4 = st->h[4];
+
+    while (bytes >= poly1305_block_size) {
+        /* h += m[i] */
+        h0 += (LOAD32_LE(m + 0)) & 0x3ffffff;
+        h1 += (LOAD32_LE(m + 3) >> 2) & 0x3ffffff;
+        h2 += (LOAD32_LE(m + 6) >> 4) & 0x3ffffff;
+        h3 += (LOAD32_LE(m + 9) >> 6) & 0x3ffffff;
+        h4 += (LOAD32_LE(m + 12) >> 8) | hibit;
+
+        /* h *= r */
+        d0 = ((unsigned long long) h0 * r0) + ((unsigned long long) h1 * s4) +
+             ((unsigned long long) h2 * s3) + ((unsigned long long) h3 * s2) +
+             ((unsigned long long) h4 * s1);
+        d1 = ((unsigned long long) h0 * r1) + ((unsigned long long) h1 * r0) +
+             ((unsigned long long) h2 * s4) + ((unsigned long long) h3 * s3) +
+             ((unsigned long long) h4 * s2);
+        d2 = ((unsigned long long) h0 * r2) + ((unsigned long long) h1 * r1) +
+             ((unsigned long long) h2 * r0) + ((unsigned long long) h3 * s4) +
+             ((unsigned long long) h4 * s3);
+        d3 = ((unsigned long long) h0 * r3) + ((unsigned long long) h1 * r2) +
+             ((unsigned long long) h2 * r1) + ((unsigned long long) h3 * r0) +
+             ((unsigned long long) h4 * s4);
+        d4 = ((unsigned long long) h0 * r4) + ((unsigned long long) h1 * r3) +
+             ((unsigned long long) h2 * r2) + ((unsigned long long) h3 * r1) +
+             ((unsigned long long) h4 * r0);
+
+        /* (partial) h %= p */
+        c  = (unsigned long) (d0 >> 26);
+        h0 = (unsigned long) d0 & 0x3ffffff;
+        d1 += c;
+        c  = (unsigned long) (d1 >> 26);
+        h1 = (unsigned long) d1 & 0x3ffffff;
+        d2 += c;
+        c  = (unsigned long) (d2 >> 26);
+        h2 = (unsigned long) d2 & 0x3ffffff;
+        d3 += c;
+        c  = (unsigned long) (d3 >> 26);
+        h3 = (unsigned long) d3 & 0x3ffffff;
+        d4 += c;
+        c  = (unsigned long) (d4 >> 26);
+        h4 = (unsigned long) d4 & 0x3ffffff;
+        h0 += c * 5;
+        c  = (h0 >> 26);
+        h0 = h0 & 0x3ffffff;
+        h1 += c;
+
+        m += poly1305_block_size;
+        bytes -= poly1305_block_size;
+    }
+
+    st->h[0] = h0;
+    st->h[1] = h1;
+    st->h[2] = h2;
+    st->h[3] = h3;
+    st->h[4] = h4;
 }
 
 static POLY1305_NOINLINE void
 poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])
 {
-        unsigned long h0,h1,h2,h3,h4,c;
-        unsigned long g0,g1,g2,g3,g4;
-        unsigned long long f;
-        unsigned long mask;
-
-        /* process the remaining block */
-        if (st->leftover) {
-                unsigned long long i = st->leftover;
-                st->buffer[i++] = 1;
-                for (; i < poly1305_block_size; i++)
-                        st->buffer[i] = 0;
-                st->final = 1;
-                poly1305_blocks(st, st->buffer, poly1305_block_size);
+    unsigned long      h0, h1, h2, h3, h4, c;
+    unsigned long      g0, g1, g2, g3, g4;
+    unsigned long long f;
+    unsigned long      mask;
+
+    /* process the remaining block */
+    if (st->leftover) {
+        unsigned long long i = st->leftover;
+
+        st->buffer[i++] = 1;
+        for (; i < poly1305_block_size; i++) {
+            st->buffer[i] = 0;
         }
-
-        /* fully carry h */
-        h0 = st->h[0];
-        h1 = st->h[1];
-        h2 = st->h[2];
-        h3 = st->h[3];
-        h4 = st->h[4];
-
-                     c = h1 >> 26; h1 = h1 & 0x3ffffff;
-        h2 +=     c; c = h2 >> 26; h2 = h2 & 0x3ffffff;
-        h3 +=     c; c = h3 >> 26; h3 = h3 & 0x3ffffff;
-        h4 +=     c; c = h4 >> 26; h4 = h4 & 0x3ffffff;
-        h0 += c * 5; c = h0 >> 26; h0 = h0 & 0x3ffffff;
-        h1 +=     c;
-
-        /* compute h + -p */
-        g0 = h0 + 5; c = g0 >> 26; g0 &= 0x3ffffff;
-        g1 = h1 + c; c = g1 >> 26; g1 &= 0x3ffffff;
-        g2 = h2 + c; c = g2 >> 26; g2 &= 0x3ffffff;
-        g3 = h3 + c; c = g3 >> 26; g3 &= 0x3ffffff;
-        g4 = h4 + c - (1 << 26);
-
-        /* select h if h < p, or h + -p if h >= p */
-        mask = (g4 >> ((sizeof(unsigned long) * 8) - 1)) - 1;
-        g0 &= mask;
-        g1 &= mask;
-        g2 &= mask;
-        g3 &= mask;
-        g4 &= mask;
-        mask = ~mask;
-        h0 = (h0 & mask) | g0;
-        h1 = (h1 & mask) | g1;
-        h2 = (h2 & mask) | g2;
-        h3 = (h3 & mask) | g3;
-        h4 = (h4 & mask) | g4;
-
-        /* h = h % (2^128) */
-        h0 = ((h0      ) | (h1 << 26)) & 0xffffffff;
-        h1 = ((h1 >>  6) | (h2 << 20)) & 0xffffffff;
-        h2 = ((h2 >> 12) | (h3 << 14)) & 0xffffffff;
-        h3 = ((h3 >> 18) | (h4 <<  8)) & 0xffffffff;
-
-        /* mac = (h + pad) % (2^128) */
-        f = (unsigned long long)h0 + st->pad[0]            ; h0 = (unsigned long)f;
-        f = (unsigned long long)h1 + st->pad[1] + (f >> 32); h1 = (unsigned long)f;
-        f = (unsigned long long)h2 + st->pad[2] + (f >> 32); h2 = (unsigned long)f;
-        f = (unsigned long long)h3 + st->pad[3] + (f >> 32); h3 = (unsigned long)f;
-
-        U32TO8(mac +  0, h0);
-        U32TO8(mac +  4, h1);
-        U32TO8(mac +  8, h2);
-        U32TO8(mac + 12, h3);
-
-        /* zero out the state */
-        sodium_memzero((void *)st, sizeof *st);
+        st->final = 1;
+        poly1305_blocks(st, st->buffer, poly1305_block_size);
+    }
+
+    /* fully carry h */
+    h0 = st->h[0];
+    h1 = st->h[1];
+    h2 = st->h[2];
+    h3 = st->h[3];
+    h4 = st->h[4];
+
+    c  = h1 >> 26;
+    h1 = h1 & 0x3ffffff;
+    h2 += c;
+    c  = h2 >> 26;
+    h2 = h2 & 0x3ffffff;
+    h3 += c;
+    c  = h3 >> 26;
+    h3 = h3 & 0x3ffffff;
+    h4 += c;
+    c  = h4 >> 26;
+    h4 = h4 & 0x3ffffff;
+    h0 += c * 5;
+    c  = h0 >> 26;
+    h0 = h0 & 0x3ffffff;
+    h1 += c;
+
+    /* compute h + -p */
+    g0 = h0 + 5;
+    c  = g0 >> 26;
+    g0 &= 0x3ffffff;
+    g1 = h1 + c;
+    c  = g1 >> 26;
+    g1 &= 0x3ffffff;
+    g2 = h2 + c;
+    c  = g2 >> 26;
+    g2 &= 0x3ffffff;
+    g3 = h3 + c;
+    c  = g3 >> 26;
+    g3 &= 0x3ffffff;
+    g4 = h4 + c - (1UL << 26);
+
+    /* select h if h < p, or h + -p if h >= p */
+    mask = (g4 >> ((sizeof(unsigned long) * 8) - 1)) - 1;
+    g0 &= mask;
+    g1 &= mask;
+    g2 &= mask;
+    g3 &= mask;
+    g4 &= mask;
+    mask = ~mask;
+
+    h0 = (h0 & mask) | g0;
+    h1 = (h1 & mask) | g1;
+    h2 = (h2 & mask) | g2;
+    h3 = (h3 & mask) | g3;
+    h4 = (h4 & mask) | g4;
+
+    /* h = h % (2^128) */
+    h0 = ((h0) | (h1 << 26)) & 0xffffffff;
+    h1 = ((h1 >> 6) | (h2 << 20)) & 0xffffffff;
+    h2 = ((h2 >> 12) | (h3 << 14)) & 0xffffffff;
+    h3 = ((h3 >> 18) | (h4 << 8)) & 0xffffffff;
+
+    /* mac = (h + pad) % (2^128) */
+    f  = (unsigned long long) h0 + st->pad[0];
+    h0 = (unsigned long) f;
+    f  = (unsigned long long) h1 + st->pad[1] + (f >> 32);
+    h1 = (unsigned long) f;
+    f  = (unsigned long long) h2 + st->pad[2] + (f >> 32);
+    h2 = (unsigned long) f;
+    f  = (unsigned long long) h3 + st->pad[3] + (f >> 32);
+    h3 = (unsigned long) f;
+
+    STORE32_LE(mac + 0, (uint32_t) h0);
+    STORE32_LE(mac + 4, (uint32_t) h1);
+    STORE32_LE(mac + 8, (uint32_t) h2);
+    STORE32_LE(mac + 12, (uint32_t) h3);
+
+    /* zero out the state */
+    sodium_memzero((void *) st, sizeof *st);
 }
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h
index 2dbb4cb..2475bfa 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/donna/poly1305_donna64.h
@@ -1,22 +1,19 @@
 /*
-        poly1305 implementation using 64 bit * 64 bit = 128 bit multiplication and 128 bit addition
+   poly1305 implementation using 64 bit * 64 bit = 128 bit multiplication
+   and 128 bit addition
 */
 
-#if defined(__SIZEOF_INT128__)
-typedef unsigned __int128 uint128_t;
-#else
-typedef unsigned uint128_t __attribute__((mode(TI)));
-#endif
+#include "private/common.h"
 
-#define MUL(out, x, y) out = ((uint128_t)x * y)
+#define MUL(out, x, y) out = ((uint128_t) x * y)
 #define ADD(out, in) out += in
 #define ADDLO(out, in) out += in
-#define SHR(in, shift) (unsigned long long)(in >> (shift))
-#define LO(in) (unsigned long long)(in)
+#define SHR(in, shift) (unsigned long long) (in >> (shift))
+#define LO(in) (unsigned long long) (in)
 
 #if defined(_MSC_VER)
 # define POLY1305_NOINLINE __declspec(noinline)
-#elif defined(__GNUC__)
+#elif defined(__clang__) || defined(__GNUC__)
 # define POLY1305_NOINLINE __attribute__((noinline))
 #else
 # define POLY1305_NOINLINE
@@ -26,183 +23,199 @@ typedef unsigned uint128_t __attribute__((mode(TI)));
 
 /* 17 + sizeof(unsigned long long) + 8*sizeof(unsigned long long) */
 typedef struct poly1305_state_internal_t {
-        unsigned long long r[3];
-        unsigned long long h[3];
-        unsigned long long pad[2];
-        unsigned long long leftover;
-        unsigned char buffer[poly1305_block_size];
-        unsigned char final;
+    unsigned long long r[3];
+    unsigned long long h[3];
+    unsigned long long pad[2];
+    unsigned long long leftover;
+    unsigned char      buffer[poly1305_block_size];
+    unsigned char      final;
 } poly1305_state_internal_t;
 
-/* interpret eight 8 bit unsigned integers as a 64 bit unsigned integer in little endian */
-static unsigned long long
-U8TO64(const unsigned char *p)
-{
-        return
-           (((unsigned long long)(p[0] & 0xff)      ) |
-            ((unsigned long long)(p[1] & 0xff) <<  8) |
-            ((unsigned long long)(p[2] & 0xff) << 16) |
-            ((unsigned long long)(p[3] & 0xff) << 24) |
-            ((unsigned long long)(p[4] & 0xff) << 32) |
-            ((unsigned long long)(p[5] & 0xff) << 40) |
-            ((unsigned long long)(p[6] & 0xff) << 48) |
-            ((unsigned long long)(p[7] & 0xff) << 56));
-}
-
-/* store a 64 bit unsigned integer as eight 8 bit unsigned integers in little endian */
-static void
-U64TO8(unsigned char *p, unsigned long long v)
-{
-        p[0] = (v      ) & 0xff;
-        p[1] = (v >>  8) & 0xff;
-        p[2] = (v >> 16) & 0xff;
-        p[3] = (v >> 24) & 0xff;
-        p[4] = (v >> 32) & 0xff;
-        p[5] = (v >> 40) & 0xff;
-        p[6] = (v >> 48) & 0xff;
-        p[7] = (v >> 56) & 0xff;
-}
-
 static void
 poly1305_init(poly1305_state_internal_t *st, const unsigned char key[32])
 {
-        unsigned long long t0,t1;
+    unsigned long long t0, t1;
 
-        /* r &= 0xffffffc0ffffffc0ffffffc0fffffff */
-        t0 = U8TO64(&key[0]);
-        t1 = U8TO64(&key[8]);
+    /* r &= 0xffffffc0ffffffc0ffffffc0fffffff */
+    t0 = LOAD64_LE(&key[0]);
+    t1 = LOAD64_LE(&key[8]);
 
-        st->r[0] = ( t0                    ) & 0xffc0fffffff;
-        st->r[1] = ((t0 >> 44) | (t1 << 20)) & 0xfffffc0ffff;
-        st->r[2] = ((t1 >> 24)             ) & 0x00ffffffc0f;
+    /* wiped after finalization */
+    st->r[0] = (t0) & 0xffc0fffffff;
+    st->r[1] = ((t0 >> 44) | (t1 << 20)) & 0xfffffc0ffff;
+    st->r[2] = ((t1 >> 24)) & 0x00ffffffc0f;
 
-        /* h = 0 */
-        st->h[0] = 0;
-        st->h[1] = 0;
-        st->h[2] = 0;
+    /* h = 0 */
+    st->h[0] = 0;
+    st->h[1] = 0;
+    st->h[2] = 0;
 
-        /* save pad for later */
-        st->pad[0] = U8TO64(&key[16]);
-        st->pad[1] = U8TO64(&key[24]);
+    /* save pad for later */
+    st->pad[0] = LOAD64_LE(&key[16]);
+    st->pad[1] = LOAD64_LE(&key[24]);
 
-        st->leftover = 0;
-        st->final = 0;
+    st->leftover = 0;
+    st->final    = 0;
 }
 
 static void
-poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m, unsigned long long bytes)
+poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
+                unsigned long long bytes)
 {
-        const unsigned long long hibit = (st->final) ? 0 : ((unsigned long long)1 << 40); /* 1 << 128 */
-        unsigned long long r0,r1,r2;
-        unsigned long long s1,s2;
-        unsigned long long h0,h1,h2;
-        unsigned long long c;
-        uint128_t d0,d1,d2,d;
-
-        r0 = st->r[0];
-        r1 = st->r[1];
-        r2 = st->r[2];
-
-        h0 = st->h[0];
-        h1 = st->h[1];
-        h2 = st->h[2];
-
-        s1 = r1 * (5 << 2);
-        s2 = r2 * (5 << 2);
-
-        while (bytes >= poly1305_block_size) {
-                unsigned long long t0,t1;
-
-                /* h += m[i] */
-                t0 = U8TO64(&m[0]);
-                t1 = U8TO64(&m[8]);
-
-                h0 += (( t0                    ) & 0xfffffffffff);
-                h1 += (((t0 >> 44) | (t1 << 20)) & 0xfffffffffff);
-                h2 += (((t1 >> 24)             ) & 0x3ffffffffff) | hibit;
-
-                /* h *= r */
-                MUL(d0, h0, r0); MUL(d, h1, s2); ADD(d0, d); MUL(d, h2, s1); ADD(d0, d);
-                MUL(d1, h0, r1); MUL(d, h1, r0); ADD(d1, d); MUL(d, h2, s2); ADD(d1, d);
-                MUL(d2, h0, r2); MUL(d, h1, r1); ADD(d2, d); MUL(d, h2, r0); ADD(d2, d);
-
-                /* (partial) h %= p */
-                              c = SHR(d0, 44); h0 = LO(d0) & 0xfffffffffff;
-                ADDLO(d1, c); c = SHR(d1, 44); h1 = LO(d1) & 0xfffffffffff;
-                ADDLO(d2, c); c = SHR(d2, 42); h2 = LO(d2) & 0x3ffffffffff;
-                h0  += c * 5; c = (h0 >> 44);  h0 =    h0  & 0xfffffffffff;
-                h1  += c;
-
-                m += poly1305_block_size;
-                bytes -= poly1305_block_size;
-        }
+    const unsigned long long hibit =
+        (st->final) ? 0ULL : (1ULL << 40); /* 1 << 128 */
+    unsigned long long r0, r1, r2;
+    unsigned long long s1, s2;
+    unsigned long long h0, h1, h2;
+    unsigned long long c;
+    uint128_t          d0, d1, d2, d;
+
+    r0 = st->r[0];
+    r1 = st->r[1];
+    r2 = st->r[2];
+
+    h0 = st->h[0];
+    h1 = st->h[1];
+    h2 = st->h[2];
+
+    s1 = r1 * (5 << 2);
+    s2 = r2 * (5 << 2);
+
+    while (bytes >= poly1305_block_size) {
+        unsigned long long t0, t1;
+
+        /* h += m[i] */
+        t0 = LOAD64_LE(&m[0]);
+        t1 = LOAD64_LE(&m[8]);
+
+        h0 += t0 & 0xfffffffffff;
+        h1 += ((t0 >> 44) | (t1 << 20)) & 0xfffffffffff;
+        h2 += (((t1 >> 24)) & 0x3ffffffffff) | hibit;
+
+        /* h *= r */
+        MUL(d0, h0, r0);
+        MUL(d, h1, s2);
+        ADD(d0, d);
+        MUL(d, h2, s1);
+        ADD(d0, d);
+        MUL(d1, h0, r1);
+        MUL(d, h1, r0);
+        ADD(d1, d);
+        MUL(d, h2, s2);
+        ADD(d1, d);
+        MUL(d2, h0, r2);
+        MUL(d, h1, r1);
+        ADD(d2, d);
+        MUL(d, h2, r0);
+        ADD(d2, d);
+
+        /* (partial) h %= p */
+        c  = SHR(d0, 44);
+        h0 = LO(d0) & 0xfffffffffff;
+        ADDLO(d1, c);
+        c  = SHR(d1, 44);
+        h1 = LO(d1) & 0xfffffffffff;
+        ADDLO(d2, c);
+        c  = SHR(d2, 42);
+        h2 = LO(d2) & 0x3ffffffffff;
+        h0 += c * 5;
+        c  = (h0 >> 44);
+        h0 = h0 & 0xfffffffffff;
+        h1 += c;
 
-        st->h[0] = h0;
-        st->h[1] = h1;
-        st->h[2] = h2;
-}
+        m += poly1305_block_size;
+        bytes -= poly1305_block_size;
+    }
 
+    st->h[0] = h0;
+    st->h[1] = h1;
+    st->h[2] = h2;
+}
 
 static POLY1305_NOINLINE void
 poly1305_finish(poly1305_state_internal_t *st, unsigned char mac[16])
 {
-        unsigned long long h0,h1,h2,c;
-        unsigned long long g0,g1,g2;
-        unsigned long long t0,t1;
-
-        /* process the remaining block */
-        if (st->leftover) {
-                unsigned long long i = st->leftover;
-                st->buffer[i] = 1;
-                for (i = i + 1; i < poly1305_block_size; i++)
-                        st->buffer[i] = 0;
-                st->final = 1;
-                poly1305_blocks(st, st->buffer, poly1305_block_size);
-        }
+    unsigned long long h0, h1, h2, c;
+    unsigned long long g0, g1, g2;
+    unsigned long long t0, t1;
+    unsigned long long mask;
 
-        /* fully carry h */
-        h0 = st->h[0];
-        h1 = st->h[1];
-        h2 = st->h[2];
-
-                     c = (h1 >> 44); h1 &= 0xfffffffffff;
-        h2 += c;     c = (h2 >> 42); h2 &= 0x3ffffffffff;
-        h0 += c * 5; c = (h0 >> 44); h0 &= 0xfffffffffff;
-        h1 += c;         c = (h1 >> 44); h1 &= 0xfffffffffff;
-        h2 += c;     c = (h2 >> 42); h2 &= 0x3ffffffffff;
-        h0 += c * 5; c = (h0 >> 44); h0 &= 0xfffffffffff;
-        h1 += c;
+    /* process the remaining block */
+    if (st->leftover) {
+        unsigned long long i = st->leftover;
 
-        /* compute h + -p */
-        g0 = h0 + 5; c = (g0 >> 44); g0 &= 0xfffffffffff;
-        g1 = h1 + c; c = (g1 >> 44); g1 &= 0xfffffffffff;
-        g2 = h2 + c - ((unsigned long long)1 << 42);
-
-        /* select h if h < p, or h + -p if h >= p */
-        c = (g2 >> ((sizeof(unsigned long long) * 8) - 1)) - 1;
-        g0 &= c;
-        g1 &= c;
-        g2 &= c;
-        c = ~c;
-        h0 = (h0 & c) | g0;
-        h1 = (h1 & c) | g1;
-        h2 = (h2 & c) | g2;
-
-        /* h = (h + pad) */
-        t0 = st->pad[0];
-        t1 = st->pad[1];
-
-        h0 += (( t0                    ) & 0xfffffffffff)    ; c = (h0 >> 44); h0 &= 0xfffffffffff;
-        h1 += (((t0 >> 44) | (t1 << 20)) & 0xfffffffffff) + c; c = (h1 >> 44); h1 &= 0xfffffffffff;
-        h2 += (((t1 >> 24)             ) & 0x3ffffffffff) + c;                 h2 &= 0x3ffffffffff;
-
-        /* mac = h % (2^128) */
-        h0 = ((h0      ) | (h1 << 44));
-        h1 = ((h1 >> 20) | (h2 << 24));
-
-        U64TO8(&mac[0], h0);
-        U64TO8(&mac[8], h1);
-
-        /* zero out the state */
-        sodium_memzero((void *)st, sizeof *st);
+        st->buffer[i] = 1;
+
+        for (i = i + 1; i < poly1305_block_size; i++) {
+            st->buffer[i] = 0;
+        }
+        st->final = 1;
+        poly1305_blocks(st, st->buffer, poly1305_block_size);
+    }
+
+    /* fully carry h */
+    h0 = st->h[0];
+    h1 = st->h[1];
+    h2 = st->h[2];
+
+    c = h1 >> 44;
+    h1 &= 0xfffffffffff;
+    h2 += c;
+    c = h2 >> 42;
+    h2 &= 0x3ffffffffff;
+    h0 += c * 5;
+    c = h0 >> 44;
+    h0 &= 0xfffffffffff;
+    h1 += c;
+    c = h1 >> 44;
+    h1 &= 0xfffffffffff;
+    h2 += c;
+    c = h2 >> 42;
+    h2 &= 0x3ffffffffff;
+    h0 += c * 5;
+    c = h0 >> 44;
+    h0 &= 0xfffffffffff;
+    h1 += c;
+
+    /* compute h + -p */
+    g0 = h0 + 5;
+    c  = g0 >> 44;
+    g0 &= 0xfffffffffff;
+    g1 = h1 + c;
+    c  = g1 >> 44;
+    g1 &= 0xfffffffffff;
+    g2 = h2 + c - (1ULL << 42);
+
+    /* select h if h < p, or h + -p if h >= p */
+    mask = (g2 >> ((sizeof(unsigned long long) * 8) - 1)) - 1;
+    g0   &= mask;
+    g1   &= mask;
+    g2   &= mask;
+    mask =  ~mask;
+    h0   =  (h0 & mask) | g0;
+    h1   =  (h1 & mask) | g1;
+    h2   =  (h2 & mask) | g2;
+
+    /* h = (h + pad) */
+    t0 = st->pad[0];
+    t1 = st->pad[1];
+
+    h0 += ((t0) &0xfffffffffff);
+    c = (h0 >> 44);
+    h0 &= 0xfffffffffff;
+    h1 += (((t0 >> 44) | (t1 << 20)) & 0xfffffffffff) + c;
+    c = (h1 >> 44);
+    h1 &= 0xfffffffffff;
+    h2 += (((t1 >> 24)) & 0x3ffffffffff) + c;
+    h2 &= 0x3ffffffffff;
+
+    /* mac = h % (2^128) */
+    h0 = (h0) | (h1 << 44);
+    h1 = (h1 >> 20) | (h2 << 24);
+
+    STORE64_LE(&mac[0], h0);
+    STORE64_LE(&mac[8], h1);
+
+    /* zero out the state */
+    sodium_memzero((void *) st, sizeof *st);
 }
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c
index f313363..d5e2efa 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.c
@@ -1,7 +1,11 @@
 
-#include "crypto_onetimeauth_poly1305.h"
 #include "onetimeauth_poly1305.h"
+#include "crypto_onetimeauth_poly1305.h"
+#include "private/common.h"
+#include "private/implementations.h"
+#include "randombytes.h"
 #include "runtime.h"
+
 #include "donna/poly1305_donna.h"
 #if defined(HAVE_TI_MODE) && defined(HAVE_EMMINTRIN_H)
 # include "sse2/poly1305_sse2.h"
@@ -20,7 +24,7 @@ crypto_onetimeauth_poly1305(unsigned char *out, const unsigned char *in,
 int
 crypto_onetimeauth_poly1305_verify(const unsigned char *h,
                                    const unsigned char *in,
-                                   unsigned long long inlen,
+                                   unsigned long long   inlen,
                                    const unsigned char *k)
 {
     return implementation->onetimeauth_verify(h, in, inlen, k);
@@ -49,15 +53,30 @@ crypto_onetimeauth_poly1305_final(crypto_onetimeauth_poly1305_state *state,
 }
 
 size_t
-crypto_onetimeauth_poly1305_bytes(void) {
+crypto_onetimeauth_poly1305_bytes(void)
+{
     return crypto_onetimeauth_poly1305_BYTES;
 }
 
 size_t
-crypto_onetimeauth_poly1305_keybytes(void) {
+crypto_onetimeauth_poly1305_keybytes(void)
+{
     return crypto_onetimeauth_poly1305_KEYBYTES;
 }
 
+size_t
+crypto_onetimeauth_poly1305_statebytes(void)
+{
+    return sizeof(crypto_onetimeauth_poly1305_state);
+}
+
+void
+crypto_onetimeauth_poly1305_keygen(
+    unsigned char k[crypto_onetimeauth_poly1305_KEYBYTES])
+{
+    randombytes_buf(k, crypto_onetimeauth_poly1305_KEYBYTES);
+}
+
 int
 _crypto_onetimeauth_poly1305_pick_best_implementation(void)
 {
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h
index 0dca396..243eadd 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/onetimeauth_poly1305.h
@@ -2,22 +2,20 @@
 #ifndef onetimeauth_poly1305_H
 #define onetimeauth_poly1305_H
 
+#include "crypto_onetimeauth_poly1305.h"
+
 typedef struct crypto_onetimeauth_poly1305_implementation {
-    int (*onetimeauth)(unsigned char *out,
-                       const unsigned char *in,
-                       unsigned long long inlen,
-                       const unsigned char *k);
-    int (*onetimeauth_verify)(const unsigned char *h,
-                              const unsigned char *in,
-                              unsigned long long inlen,
-                              const unsigned char *k);
+    int (*onetimeauth)(unsigned char *out, const unsigned char *in,
+                       unsigned long long inlen, const unsigned char *k);
+    int (*onetimeauth_verify)(const unsigned char *h, const unsigned char *in,
+                              unsigned long long inlen, const unsigned char *k);
     int (*onetimeauth_init)(crypto_onetimeauth_poly1305_state *state,
-                            const unsigned char *key);
+                            const unsigned char *              key);
     int (*onetimeauth_update)(crypto_onetimeauth_poly1305_state *state,
-                              const unsigned char *in,
-                              unsigned long long inlen);
+                              const unsigned char *              in,
+                              unsigned long long                 inlen);
     int (*onetimeauth_final)(crypto_onetimeauth_poly1305_state *state,
-                             unsigned char *out);
+                             unsigned char *                    out);
 } crypto_onetimeauth_poly1305_implementation;
 
 #endif
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
index d5a8fbd..e80c961 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.c
@@ -2,67 +2,67 @@
 #include <stdint.h>
 #include <string.h>
 
+#include "../onetimeauth_poly1305.h"
 #include "crypto_verify_16.h"
-#include "utils.h"
 #include "poly1305_sse2.h"
-#include "../onetimeauth_poly1305.h"
+#include "private/common.h"
+#include "private/sse2_64_32.h"
+#include "utils.h"
 
 #if defined(HAVE_TI_MODE) && defined(HAVE_EMMINTRIN_H)
 
-#pragma GCC target("sse2")
+# ifdef __GNUC__
+#  pragma GCC target("sse2")
+# endif
 
-#include <emmintrin.h>
+# include <emmintrin.h>
 
 typedef __m128i xmmi;
 
-#if defined(__SIZEOF_INT128__)
-typedef unsigned __int128 uint128_t;
-#else
-typedef unsigned uint128_t __attribute__((mode(TI)));
-#endif
-
-#if defined(_MSC_VER)
-# define POLY1305_NOINLINE __declspec(noinline)
-#elif defined(__GNUC__)
-# define POLY1305_NOINLINE __attribute__((noinline))
-#else
-# define POLY1305_NOINLINE
-#endif
+# if defined(_MSC_VER)
+#  define POLY1305_NOINLINE __declspec(noinline)
+# elif defined(__clang__) || defined(__GNUC__)
+#  define POLY1305_NOINLINE __attribute__((noinline))
+# else
+#  define POLY1305_NOINLINE
+# endif
 
-#define poly1305_block_size 32
+# define poly1305_block_size 32
 
 enum poly1305_state_flags_t {
-    poly1305_started = 1,
-    poly1305_final_shift8 = 4,
+    poly1305_started       = 1,
+    poly1305_final_shift8  = 4,
     poly1305_final_shift16 = 8,
-    poly1305_final_r2_r = 16, /* use [r^2,r] for the final block */
-    poly1305_final_r_1 = 32, /* use [r,1] for the final block */
+    poly1305_final_r2_r    = 16, /* use [r^2,r] for the final block */
+    poly1305_final_r_1     = 32  /* use [r,1] for the final block */
 };
 
 typedef struct poly1305_state_internal_t {
     union {
         uint64_t h[3];
         uint32_t hh[10];
-    };                       /*  40 bytes  */
-    uint32_t R[5];           /*  20 bytes  */
-    uint32_t R2[5];          /*  20 bytes  */
-    uint32_t R4[5];          /*  20 bytes  */
-    uint64_t pad[2];         /*  16 bytes  */
-    uint64_t flags;          /*   8 bytes  */
-    unsigned long long leftover; /* 8 bytes */
-    unsigned char buffer[poly1305_block_size]; /* 32 bytes */
-} poly1305_state_internal_t;   /* 164 bytes total */
+    } H;                                            /*  40 bytes  */
+    uint32_t           R[5];                        /*  20 bytes  */
+    uint32_t           R2[5];                       /*  20 bytes  */
+    uint32_t           R4[5];                       /*  20 bytes  */
+    uint64_t           pad[2];                      /*  16 bytes  */
+    uint64_t           flags;                       /*   8 bytes  */
+    unsigned long long leftover;                    /* 8 bytes */
+    unsigned char      buffer[poly1305_block_size]; /* 32 bytes */
+} poly1305_state_internal_t;                        /* 164 bytes total */
 
 /*
- * _mm_loadl_epi64() is turned into a simple MOVQ. So, unaligned accesses are totally fine, even though this intrinsic requires a __m128i* input.
+ * _mm_loadl_epi64() is turned into a simple MOVQ. So, unaligned accesses are
+ * totally fine, even though this intrinsic requires a __m128i* input.
  * This confuses dynamic analysis, so force alignment, only in debug mode.
  */
-#ifdef DEBUG
+# ifdef DEBUG
 static xmmi
 _fakealign_mm_loadl_epi64(const void *m)
 {
     xmmi tmp;
     memcpy(&tmp, m, 8);
+
     return _mm_loadl_epi64(&tmp);
 }
 # define _mm_loadl_epi64(X) _fakealign_mm_loadl_epi64(X)
@@ -70,52 +70,71 @@ _fakealign_mm_loadl_epi64(const void *m)
 
 /* copy 0-31 bytes */
 static inline void
-poly1305_block_copy31(unsigned char *dst, const unsigned char *src, unsigned long long bytes)
+poly1305_block_copy31(unsigned char *dst, const unsigned char *src,
+                      unsigned long long bytes)
 {
     if (bytes & 16) {
         _mm_store_si128((xmmi *) (void *) dst,
                         _mm_loadu_si128((const xmmi *) (const void *) src));
-        src += 16; dst += 16;
+        src += 16;
+        dst += 16;
+    }
+    if (bytes & 8) {
+        memcpy(dst, src, 8);
+        src += 8;
+        dst += 8;
+    }
+    if (bytes & 4) {
+        memcpy(dst, src, 4);
+        src += 4;
+        dst += 4;
+    }
+    if (bytes & 2) {
+        memcpy(dst, src, 2);
+        src += 2;
+        dst += 2;
+    }
+    if (bytes & 1) {
+        *dst = *src;
     }
-    if (bytes &  8) { memcpy(dst, src, 8); src += 8; dst += 8; }
-    if (bytes &  4) { memcpy(dst, src, 4); src += 4; dst += 4; }
-    if (bytes &  2) { memcpy(dst, src, 2); src += 2; dst += 2; }
-    if (bytes &  1) { *dst = *src; }
 }
 
 static POLY1305_NOINLINE void
-poly1305_init_ext(poly1305_state_internal_t *st,
-                  const unsigned char key[32], unsigned long long bytes)
+poly1305_init_ext(poly1305_state_internal_t *st, const unsigned char key[32],
+                  unsigned long long bytes)
 {
-    uint32_t *R;
-    uint128_t d[3],m0;
-    uint64_t r0,r1,r2;
-    uint32_t rp0,rp1,rp2,rp3,rp4;
-    uint64_t rt0,rt1,rt2,st2,c;
-    uint64_t t0,t1;
+    uint32_t          *R;
+    uint128_t          d[3];
+    uint64_t           r0, r1, r2;
+    uint64_t           rt0, rt1, rt2, st2, c;
+    uint64_t           t0, t1;
     unsigned long long i;
 
-    if (!bytes) bytes = ~(unsigned long long)0;
-
+    if (!bytes) {
+        bytes = ~(unsigned long long) 0;
+    }
     /* H = 0 */
-    _mm_storeu_si128((xmmi *)(void *)&st->hh[0], _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)&st->hh[4], _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)&st->hh[8], _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) &st->H.hh[0], _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) &st->H.hh[4], _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) &st->H.hh[8], _mm_setzero_si128());
 
     /* clamp key */
     memcpy(&t0, key, 8);
     memcpy(&t1, key + 8, 8);
-    r0 = t0 & 0xffc0fffffff; t0 >>= 44; t0 |= t1 << 20;
-    r1 = t0 & 0xfffffc0ffff; t1 >>= 24;
+    r0 = t0 & 0xffc0fffffff;
+    t0 >>= 44;
+    t0 |= t1 << 20;
+    r1 = t0 & 0xfffffc0ffff;
+    t1 >>= 24;
     r2 = t1 & 0x00ffffffc0f;
 
     /* r^1 */
-    R = st->R;
-    R[0] = (uint32_t)( r0                      ) & 0x3ffffff;
-    R[1] = (uint32_t)(( r0 >> 26) | ( r1 << 18)) & 0x3ffffff;
-    R[2] = (uint32_t)(( r1 >>  8)              ) & 0x3ffffff;
-    R[3] = (uint32_t)(( r1 >> 34) | ( r2 << 10)) & 0x3ffffff;
-    R[4] = (uint32_t)(( r2 >> 16)              );
+    R    = st->R;
+    R[0] = (uint32_t)(r0) &0x3ffffff;
+    R[1] = (uint32_t)((r0 >> 26) | (r1 << 18)) & 0x3ffffff;
+    R[2] = (uint32_t)((r1 >> 8)) & 0x3ffffff;
+    R[3] = (uint32_t)((r1 >> 34) | (r2 << 10)) & 0x3ffffff;
+    R[4] = (uint32_t)((r2 >> 16));
 
     /* save pad */
     memcpy(&st->pad[0], key + 16, 8);
@@ -139,24 +158,37 @@ poly1305_init_ext(poly1305_state_internal_t *st,
             }
         }
         st2 = rt2 * (5 << 2);
-        d[0] = ((uint128_t)rt0 * rt0) + ((uint128_t)(rt1 * 2) * st2);
-        d[1] = ((uint128_t)rt2 * st2) + ((uint128_t)(rt0 * 2) * rt1);
-        d[2] = ((uint128_t)rt1 * rt1) + ((uint128_t)(rt2 * 2) * rt0);
-        rt0 = (uint64_t)d[0] & 0xfffffffffff; c = (uint64_t)(d[0] >> 44);
-        d[1] += c   ; rt1 = (uint64_t)d[1] & 0xfffffffffff; c = (uint64_t)(d[1] >> 44);
-        d[2] += c   ; rt2 = (uint64_t)d[2] & 0x3ffffffffff; c = (uint64_t)(d[2] >> 42);
-        rt0 += c * 5; c = (rt0 >> 44); rt0 = rt0 & 0xfffffffffff;
-        rt1 += c    ; c = (rt1 >> 44); rt1 = rt1 & 0xfffffffffff;
-        rt2 += c    ; /* even if rt2 overflows, it will still fit in rp4 safely, and is safe to multiply with */
-
-        R[0] = (uint32_t)( rt0                     ) & 0x3ffffff;
+
+        d[0] = ((uint128_t) rt0 * rt0) + ((uint128_t)(rt1 * 2) * st2);
+        d[1] = ((uint128_t) rt2 * st2) + ((uint128_t)(rt0 * 2) * rt1);
+        d[2] = ((uint128_t) rt1 * rt1) + ((uint128_t)(rt2 * 2) * rt0);
+
+        rt0 = (uint64_t) d[0] & 0xfffffffffff;
+        c   = (uint64_t)(d[0] >> 44);
+        d[1] += c;
+
+        rt1 = (uint64_t) d[1] & 0xfffffffffff;
+        c   = (uint64_t)(d[1] >> 44);
+        d[2] += c;
+
+        rt2 = (uint64_t) d[2] & 0x3ffffffffff;
+        c   = (uint64_t)(d[2] >> 42);
+        rt0 += c * 5;
+        c   = (rt0 >> 44);
+        rt0 = rt0 & 0xfffffffffff;
+        rt1 += c;
+        c   = (rt1 >> 44);
+        rt1 = rt1 & 0xfffffffffff;
+        rt2 += c; /* even if rt2 overflows, it will still fit in rp4 safely, and
+                     is safe to multiply with */
+
+        R[0] = (uint32_t)(rt0) &0x3ffffff;
         R[1] = (uint32_t)((rt0 >> 26) | (rt1 << 18)) & 0x3ffffff;
-        R[2] = (uint32_t)((rt1 >> 8)               ) & 0x3ffffff;
+        R[2] = (uint32_t)((rt1 >> 8)) & 0x3ffffff;
         R[3] = (uint32_t)((rt1 >> 34) | (rt2 << 10)) & 0x3ffffff;
-        R[4] = (uint32_t)((rt2 >> 16)              );
+        R[4] = (uint32_t)((rt2 >> 16));
     }
-
-    st->flags = 0;
+    st->flags    = 0;
     st->leftover = 0U;
 }
 
@@ -164,25 +196,35 @@ static POLY1305_NOINLINE void
 poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
                 unsigned long long bytes)
 {
-    CRYPTO_ALIGN(64) xmmi HIBIT = _mm_shuffle_epi32(_mm_cvtsi32_si128(1 << 24), _MM_SHUFFLE(1,0,1,0));
-    const xmmi MMASK = _mm_shuffle_epi32(_mm_cvtsi32_si128((1 << 26) - 1), _MM_SHUFFLE(1,0,1,0));
-    const xmmi FIVE = _mm_shuffle_epi32(_mm_cvtsi32_si128(5), _MM_SHUFFLE(1,0,1,0));
-    xmmi H0,H1,H2,H3,H4;
-    xmmi T0,T1,T2,T3,T4,T5,T6,T7,T8;
-    xmmi M0,M1,M2,M3,M4;
-    xmmi M5,M6,M7,M8,M9;
-    xmmi C1,C2;
-    xmmi R20,R21,R22,R23,R24,S21,S22,S23,S24;
-    xmmi R40,R41,R42,R43,R44,S41,S42,S43,S44;
-
-    if (st->flags & poly1305_final_shift8) HIBIT = _mm_srli_si128(HIBIT, 8);
-    if (st->flags & poly1305_final_shift16) HIBIT = _mm_setzero_si128();
-
+    CRYPTO_ALIGN(64)
+    xmmi HIBIT =
+        _mm_shuffle_epi32(_mm_cvtsi32_si128(1 << 24), _MM_SHUFFLE(1, 0, 1, 0));
+    const xmmi MMASK = _mm_shuffle_epi32(_mm_cvtsi32_si128((1 << 26) - 1),
+                                         _MM_SHUFFLE(1, 0, 1, 0));
+    const xmmi FIVE =
+        _mm_shuffle_epi32(_mm_cvtsi32_si128(5), _MM_SHUFFLE(1, 0, 1, 0));
+    xmmi H0, H1, H2, H3, H4;
+    xmmi T0, T1, T2, T3, T4, T5, T6, T7, T8;
+    xmmi M0, M1, M2, M3, M4;
+    xmmi M5, M6, M7, M8;
+    xmmi C1, C2;
+    xmmi R20, R21, R22, R23, R24, S21, S22, S23, S24;
+    xmmi R40, R41, R42, R43, R44, S41, S42, S43, S44;
+
+    if (st->flags & poly1305_final_shift8) {
+        HIBIT = _mm_srli_si128(HIBIT, 8);
+    }
+    if (st->flags & poly1305_final_shift16) {
+        HIBIT = _mm_setzero_si128();
+    }
     if (!(st->flags & poly1305_started)) {
         /* H = [Mx,My] */
-
-        T5 = _mm_unpacklo_epi64(_mm_loadl_epi64((const xmmi *)(const void *)(m + 0)), _mm_loadl_epi64((const xmmi *)(const void *)(m + 16)));
-        T6 = _mm_unpacklo_epi64(_mm_loadl_epi64((const xmmi *)(const void *)(m + 8)), _mm_loadl_epi64((const xmmi *)(const void *)(m + 24)));
+        T5 = _mm_unpacklo_epi64(
+            _mm_loadl_epi64((const xmmi *) (const void *) (m + 0)),
+            _mm_loadl_epi64((const xmmi *) (const void *) (m + 16)));
+        T6 = _mm_unpacklo_epi64(
+            _mm_loadl_epi64((const xmmi *) (const void *) (m + 8)),
+            _mm_loadl_epi64((const xmmi *) (const void *) (m + 24)));
         H0 = _mm_and_si128(MMASK, T5);
         H1 = _mm_and_si128(MMASK, _mm_srli_epi64(T5, 26));
         T5 = _mm_or_si128(_mm_srli_epi64(T5, 52), _mm_slli_epi64(T6, 12));
@@ -194,49 +236,47 @@ poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
         bytes -= 32;
         st->flags |= poly1305_started;
     } else {
-        T0 = _mm_loadu_si128((const xmmi *)(const void *)&st->hh[0]);
-        T1 = _mm_loadu_si128((const xmmi *)(const void *)&st->hh[4]);
-        T2 = _mm_loadu_si128((const xmmi *)(const void *)&st->hh[8]);
-        H0 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(1,1,0,0));
-        H1 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(3,3,2,2));
-        H2 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(1,1,0,0));
-        H3 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(3,3,2,2));
-        H4 = _mm_shuffle_epi32(T2, _MM_SHUFFLE(1,1,0,0));
+        T0 = _mm_loadu_si128((const xmmi *) (const void *) &st->H.hh[0]);
+        T1 = _mm_loadu_si128((const xmmi *) (const void *) &st->H.hh[4]);
+        T2 = _mm_loadu_si128((const xmmi *) (const void *) &st->H.hh[8]);
+        H0 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(1, 1, 0, 0));
+        H1 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(3, 3, 2, 2));
+        H2 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(1, 1, 0, 0));
+        H3 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(3, 3, 2, 2));
+        H4 = _mm_shuffle_epi32(T2, _MM_SHUFFLE(1, 1, 0, 0));
     }
-
-    if (st->flags & (poly1305_final_r2_r|poly1305_final_r_1)) {
+    if (st->flags & (poly1305_final_r2_r | poly1305_final_r_1)) {
         if (st->flags & poly1305_final_r2_r) {
             /* use [r^2, r] */
-            T2 = _mm_loadu_si128((const xmmi *)(const void *)&st->R[0]);
-            T3 = _mm_cvtsi32_si128(st->R[4]);
-            T0 = _mm_loadu_si128((const xmmi *)(const void *)&st->R2[0]);
-            T1 = _mm_cvtsi32_si128(st->R2[4]);
-            T4 = _mm_unpacklo_epi32(T0, T2);
-            T5 = _mm_unpackhi_epi32(T0, T2);
+            T2  = _mm_loadu_si128((const xmmi *) (const void *) &st->R[0]);
+            T3  = _mm_cvtsi32_si128(st->R[4]);
+            T0  = _mm_loadu_si128((const xmmi *) (const void *) &st->R2[0]);
+            T1  = _mm_cvtsi32_si128(st->R2[4]);
+            T4  = _mm_unpacklo_epi32(T0, T2);
+            T5  = _mm_unpackhi_epi32(T0, T2);
             R24 = _mm_unpacklo_epi64(T1, T3);
         } else {
             /* use [r^1, 1] */
-            T0 = _mm_loadu_si128((const xmmi *)(const void *)&st->R[0]);
-            T1 = _mm_cvtsi32_si128(st->R[4]);
-            T2 = _mm_cvtsi32_si128(1);
-            T4 = _mm_unpacklo_epi32(T0, T2);
-            T5 = _mm_unpackhi_epi32(T0, T2);
+            T0  = _mm_loadu_si128((const xmmi *) (const void *) &st->R[0]);
+            T1  = _mm_cvtsi32_si128(st->R[4]);
+            T2  = _mm_cvtsi32_si128(1);
+            T4  = _mm_unpacklo_epi32(T0, T2);
+            T5  = _mm_unpackhi_epi32(T0, T2);
             R24 = T1;
         }
-
-        R20 = _mm_shuffle_epi32(T4, _MM_SHUFFLE(1,1,0,0));
-        R21 = _mm_shuffle_epi32(T4, _MM_SHUFFLE(3,3,2,2));
-        R22 = _mm_shuffle_epi32(T5, _MM_SHUFFLE(1,1,0,0));
-        R23 = _mm_shuffle_epi32(T5, _MM_SHUFFLE(3,3,2,2));
+        R20 = _mm_shuffle_epi32(T4, _MM_SHUFFLE(1, 1, 0, 0));
+        R21 = _mm_shuffle_epi32(T4, _MM_SHUFFLE(3, 3, 2, 2));
+        R22 = _mm_shuffle_epi32(T5, _MM_SHUFFLE(1, 1, 0, 0));
+        R23 = _mm_shuffle_epi32(T5, _MM_SHUFFLE(3, 3, 2, 2));
     } else {
         /* use [r^2, r^2] */
-        T0 = _mm_loadu_si128((const xmmi *)(const void *)&st->R2[0]);
-        T1 = _mm_cvtsi32_si128(st->R2[4]);
-        R20 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(0,0,0,0));
-        R21 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(1,1,1,1));
-        R22 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(2,2,2,2));
-        R23 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(3,3,3,3));
-        R24 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(0,0,0,0));
+        T0  = _mm_loadu_si128((const xmmi *) (const void *) &st->R2[0]);
+        T1  = _mm_cvtsi32_si128(st->R2[4]);
+        R20 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(0, 0, 0, 0));
+        R21 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(1, 1, 1, 1));
+        R22 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(2, 2, 2, 2));
+        R23 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(3, 3, 3, 3));
+        R24 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(0, 0, 0, 0));
     }
     S21 = _mm_mul_epu32(R21, FIVE);
     S22 = _mm_mul_epu32(R22, FIVE);
@@ -244,74 +284,120 @@ poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
     S24 = _mm_mul_epu32(R24, FIVE);
 
     if (bytes >= 64) {
-        T0 = _mm_loadu_si128((const xmmi *)(const void *)&st->R4[0]);
-        T1 = _mm_cvtsi32_si128(st->R4[4]);
-        R40 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(0,0,0,0));
-        R41 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(1,1,1,1));
-        R42 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(2,2,2,2));
-        R43 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(3,3,3,3));
-        R44 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(0,0,0,0));
+        T0  = _mm_loadu_si128((const xmmi *) (const void *) &st->R4[0]);
+        T1  = _mm_cvtsi32_si128(st->R4[4]);
+        R40 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(0, 0, 0, 0));
+        R41 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(1, 1, 1, 1));
+        R42 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(2, 2, 2, 2));
+        R43 = _mm_shuffle_epi32(T0, _MM_SHUFFLE(3, 3, 3, 3));
+        R44 = _mm_shuffle_epi32(T1, _MM_SHUFFLE(0, 0, 0, 0));
         S41 = _mm_mul_epu32(R41, FIVE);
         S42 = _mm_mul_epu32(R42, FIVE);
         S43 = _mm_mul_epu32(R43, FIVE);
         S44 = _mm_mul_epu32(R44, FIVE);
 
         while (bytes >= 64) {
-            xmmi v00,v01,v02,v03,v04;
-            xmmi v10,v11,v12,v13,v14;
-            xmmi v20,v21,v22,v23,v24;
-            xmmi v30,v31,v32,v33,v34;
-            xmmi v40,v41,v42,v43,v44;
-            xmmi T14,T15;
+            xmmi v00, v01, v02, v03, v04;
+            xmmi v10, v11, v12, v13, v14;
+            xmmi v20, v21, v22, v23, v24;
+            xmmi v30, v31, v32, v33, v34;
+            xmmi v40, v41, v42, v43, v44;
+            xmmi T14, T15;
 
             /* H *= [r^4,r^4], preload [Mx,My] */
             T15 = S42;
-            T0  = H4; T0  = _mm_mul_epu32(T0, S41);
-            v01 = H3; v01 = _mm_mul_epu32(v01, T15);
+            T0  = H4;
+            T0  = _mm_mul_epu32(T0, S41);
+            v01 = H3;
+            v01 = _mm_mul_epu32(v01, T15);
             T14 = S43;
-            T1  = H4; T1  = _mm_mul_epu32(T1 , T15);
-            v11 = H3; v11 = _mm_mul_epu32(v11, T14);
-            T2  = H4; T2  = _mm_mul_epu32(T2 , T14); T0 = _mm_add_epi64(T0, v01);
+            T1  = H4;
+            T1  = _mm_mul_epu32(T1, T15);
+            v11 = H3;
+            v11 = _mm_mul_epu32(v11, T14);
+            T2  = H4;
+            T2  = _mm_mul_epu32(T2, T14);
+            T0  = _mm_add_epi64(T0, v01);
             T15 = S44;
-            v02 = H2; v02 = _mm_mul_epu32(v02, T14);
-            T3  = H4; T3  = _mm_mul_epu32(T3 , T15); T1 = _mm_add_epi64(T1, v11);
-            v03 = H1; v03 = _mm_mul_epu32(v03, T15);
-            v12 = H2; v12 = _mm_mul_epu32(v12, T15); T0 = _mm_add_epi64(T0, v02);
+            v02 = H2;
+            v02 = _mm_mul_epu32(v02, T14);
+            T3  = H4;
+            T3  = _mm_mul_epu32(T3, T15);
+            T1  = _mm_add_epi64(T1, v11);
+            v03 = H1;
+            v03 = _mm_mul_epu32(v03, T15);
+            v12 = H2;
+            v12 = _mm_mul_epu32(v12, T15);
+            T0  = _mm_add_epi64(T0, v02);
             T14 = R40;
-            v21 = H3; v21 = _mm_mul_epu32(v21, T15);
-            v31 = H3; v31 = _mm_mul_epu32(v31, T14); T0 = _mm_add_epi64(T0, v03);
-            T4  = H4; T4  = _mm_mul_epu32(T4 , T14); T1 = _mm_add_epi64(T1, v12);
-            v04 = H0; v04 = _mm_mul_epu32(v04, T14); T2 = _mm_add_epi64(T2, v21);
-            v13 = H1; v13 = _mm_mul_epu32(v13, T14); T3 = _mm_add_epi64(T3, v31);
+            v21 = H3;
+            v21 = _mm_mul_epu32(v21, T15);
+            v31 = H3;
+            v31 = _mm_mul_epu32(v31, T14);
+            T0  = _mm_add_epi64(T0, v03);
+            T4  = H4;
+            T4  = _mm_mul_epu32(T4, T14);
+            T1  = _mm_add_epi64(T1, v12);
+            v04 = H0;
+            v04 = _mm_mul_epu32(v04, T14);
+            T2  = _mm_add_epi64(T2, v21);
+            v13 = H1;
+            v13 = _mm_mul_epu32(v13, T14);
+            T3  = _mm_add_epi64(T3, v31);
             T15 = R41;
-            v22 = H2; v22 = _mm_mul_epu32(v22, T14);
-            v32 = H2; v32 = _mm_mul_epu32(v32, T15); T0 = _mm_add_epi64(T0, v04);
-            v41 = H3; v41 = _mm_mul_epu32(v41, T15); T1 = _mm_add_epi64(T1, v13);
-            v14 = H0; v14 = _mm_mul_epu32(v14, T15); T2 = _mm_add_epi64(T2, v22);
+            v22 = H2;
+            v22 = _mm_mul_epu32(v22, T14);
+            v32 = H2;
+            v32 = _mm_mul_epu32(v32, T15);
+            T0  = _mm_add_epi64(T0, v04);
+            v41 = H3;
+            v41 = _mm_mul_epu32(v41, T15);
+            T1  = _mm_add_epi64(T1, v13);
+            v14 = H0;
+            v14 = _mm_mul_epu32(v14, T15);
+            T2  = _mm_add_epi64(T2, v22);
             T14 = R42;
-            T5 = _mm_unpacklo_epi64(_mm_loadl_epi64((const xmmi *)(const void *)(m + 0)), _mm_loadl_epi64((const xmmi *)(const void *)(m + 16)));
-            v23 = H1; v23 = _mm_mul_epu32(v23, T15); T3 = _mm_add_epi64(T3, v32);
-            v33 = H1; v33 = _mm_mul_epu32(v33, T14); T4 = _mm_add_epi64(T4, v41);
-            v42 = H2; v42 = _mm_mul_epu32(v42, T14); T1 = _mm_add_epi64(T1, v14);
+            T5  = _mm_unpacklo_epi64(
+                _mm_loadl_epi64((const xmmi *) (const void *) (m + 0)),
+                _mm_loadl_epi64((const xmmi *) (const void *) (m + 16)));
+            v23 = H1;
+            v23 = _mm_mul_epu32(v23, T15);
+            T3  = _mm_add_epi64(T3, v32);
+            v33 = H1;
+            v33 = _mm_mul_epu32(v33, T14);
+            T4  = _mm_add_epi64(T4, v41);
+            v42 = H2;
+            v42 = _mm_mul_epu32(v42, T14);
+            T1  = _mm_add_epi64(T1, v14);
             T15 = R43;
-            T6 = _mm_unpacklo_epi64(_mm_loadl_epi64((const xmmi *)(const void *)(m + 8)), _mm_loadl_epi64((const xmmi *)(const void *)(m + 24)));
-            v24 = H0; v24 = _mm_mul_epu32(v24, T14); T2 = _mm_add_epi64(T2, v23);
-            v34 = H0; v34 = _mm_mul_epu32(v34, T15); T3 = _mm_add_epi64(T3, v33);
-            M0 = _mm_and_si128(MMASK, T5);
-            v43 = H1; v43 = _mm_mul_epu32(v43, T15); T4 = _mm_add_epi64(T4, v42);
-            M1 = _mm_and_si128(MMASK, _mm_srli_epi64(T5, 26));
-            v44 = H0; v44 = _mm_mul_epu32(v44, R44); T2 = _mm_add_epi64(T2, v24);
-            T5 = _mm_or_si128(_mm_srli_epi64(T5, 52), _mm_slli_epi64(T6, 12));
-            T3 = _mm_add_epi64(T3, v34);
-            M3 = _mm_and_si128(MMASK, _mm_srli_epi64(T6, 14));
-            T4 = _mm_add_epi64(T4, v43);
-            M2 = _mm_and_si128(MMASK, T5);
-            T4 = _mm_add_epi64(T4, v44);
-            M4 = _mm_or_si128(_mm_srli_epi64(T6, 40), HIBIT);
+            T6  = _mm_unpacklo_epi64(
+                _mm_loadl_epi64((const xmmi *) (const void *) (m + 8)),
+                _mm_loadl_epi64((const xmmi *) (const void *) (m + 24)));
+            v24 = H0;
+            v24 = _mm_mul_epu32(v24, T14);
+            T2  = _mm_add_epi64(T2, v23);
+            v34 = H0;
+            v34 = _mm_mul_epu32(v34, T15);
+            T3  = _mm_add_epi64(T3, v33);
+            M0  = _mm_and_si128(MMASK, T5);
+            v43 = H1;
+            v43 = _mm_mul_epu32(v43, T15);
+            T4  = _mm_add_epi64(T4, v42);
+            M1  = _mm_and_si128(MMASK, _mm_srli_epi64(T5, 26));
+            v44 = H0;
+            v44 = _mm_mul_epu32(v44, R44);
+            T2  = _mm_add_epi64(T2, v24);
+            T5  = _mm_or_si128(_mm_srli_epi64(T5, 52), _mm_slli_epi64(T6, 12));
+            T3  = _mm_add_epi64(T3, v34);
+            M3  = _mm_and_si128(MMASK, _mm_srli_epi64(T6, 14));
+            T4  = _mm_add_epi64(T4, v43);
+            M2  = _mm_and_si128(MMASK, T5);
+            T4  = _mm_add_epi64(T4, v44);
+            M4  = _mm_or_si128(_mm_srli_epi64(T6, 40), HIBIT);
 
             /* H += [Mx',My'] */
-            T5 = _mm_loadu_si128((const xmmi *)(const void *)(m + 32));
-            T6 = _mm_loadu_si128((const xmmi *)(const void *)(m + 48));
+            T5 = _mm_loadu_si128((const xmmi *) (const void *) (m + 32));
+            T6 = _mm_loadu_si128((const xmmi *) (const void *) (m + 48));
             T7 = _mm_unpacklo_epi32(T5, T6);
             T8 = _mm_unpackhi_epi32(T5, T6);
             M5 = _mm_unpacklo_epi32(T7, _mm_setzero_si128());
@@ -329,46 +415,110 @@ poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
 
             /* H += [Mx,My]*[r^2,r^2] */
             T15 = S22;
-            v00 = M4; v00 = _mm_mul_epu32(v00, S21);
-            v01 = M3; v01 = _mm_mul_epu32(v01, T15);
+            v00 = M4;
+            v00 = _mm_mul_epu32(v00, S21);
+            v01 = M3;
+            v01 = _mm_mul_epu32(v01, T15);
             T14 = S23;
-            v10 = M4; v10 = _mm_mul_epu32(v10, T15);
-            v11 = M3; v11 = _mm_mul_epu32(v11, T14); T0 = _mm_add_epi64(T0, v00);
-            v20 = M4; v20 = _mm_mul_epu32(v20, T14); T0 = _mm_add_epi64(T0, v01);
+            v10 = M4;
+            v10 = _mm_mul_epu32(v10, T15);
+            v11 = M3;
+            v11 = _mm_mul_epu32(v11, T14);
+            T0  = _mm_add_epi64(T0, v00);
+            v20 = M4;
+            v20 = _mm_mul_epu32(v20, T14);
+            T0  = _mm_add_epi64(T0, v01);
             T15 = S24;
-            v02 = M2; v02 = _mm_mul_epu32(v02, T14); T1 = _mm_add_epi64(T1, v10);
-            v30 = M4; v30 = _mm_mul_epu32(v30, T15); T1 = _mm_add_epi64(T1, v11);
-            v03 = M1; v03 = _mm_mul_epu32(v03, T15); T2 = _mm_add_epi64(T2, v20);
-            v12 = M2; v12 = _mm_mul_epu32(v12, T15); T0 = _mm_add_epi64(T0, v02);
+            v02 = M2;
+            v02 = _mm_mul_epu32(v02, T14);
+            T1  = _mm_add_epi64(T1, v10);
+            v30 = M4;
+            v30 = _mm_mul_epu32(v30, T15);
+            T1  = _mm_add_epi64(T1, v11);
+            v03 = M1;
+            v03 = _mm_mul_epu32(v03, T15);
+            T2  = _mm_add_epi64(T2, v20);
+            v12 = M2;
+            v12 = _mm_mul_epu32(v12, T15);
+            T0  = _mm_add_epi64(T0, v02);
             T14 = R20;
-            v21 = M3; v21 = _mm_mul_epu32(v21, T15); T3 = _mm_add_epi64(T3, v30);
-            v31 = M3; v31 = _mm_mul_epu32(v31, T14); T0 = _mm_add_epi64(T0, v03);
-            v40 = M4; v40 = _mm_mul_epu32(v40, T14); T1 = _mm_add_epi64(T1, v12);
-            v04 = M0; v04 = _mm_mul_epu32(v04, T14); T2 = _mm_add_epi64(T2, v21);
-            v13 = M1; v13 = _mm_mul_epu32(v13, T14); T3 = _mm_add_epi64(T3, v31);
+            v21 = M3;
+            v21 = _mm_mul_epu32(v21, T15);
+            T3  = _mm_add_epi64(T3, v30);
+            v31 = M3;
+            v31 = _mm_mul_epu32(v31, T14);
+            T0  = _mm_add_epi64(T0, v03);
+            v40 = M4;
+            v40 = _mm_mul_epu32(v40, T14);
+            T1  = _mm_add_epi64(T1, v12);
+            v04 = M0;
+            v04 = _mm_mul_epu32(v04, T14);
+            T2  = _mm_add_epi64(T2, v21);
+            v13 = M1;
+            v13 = _mm_mul_epu32(v13, T14);
+            T3  = _mm_add_epi64(T3, v31);
             T15 = R21;
-            v22 = M2; v22 = _mm_mul_epu32(v22, T14); T4 = _mm_add_epi64(T4, v40);
-            v32 = M2; v32 = _mm_mul_epu32(v32, T15); T0 = _mm_add_epi64(T0, v04);
-            v41 = M3; v41 = _mm_mul_epu32(v41, T15); T1 = _mm_add_epi64(T1, v13);
-            v14 = M0; v14 = _mm_mul_epu32(v14, T15); T2 = _mm_add_epi64(T2, v22);
+            v22 = M2;
+            v22 = _mm_mul_epu32(v22, T14);
+            T4  = _mm_add_epi64(T4, v40);
+            v32 = M2;
+            v32 = _mm_mul_epu32(v32, T15);
+            T0  = _mm_add_epi64(T0, v04);
+            v41 = M3;
+            v41 = _mm_mul_epu32(v41, T15);
+            T1  = _mm_add_epi64(T1, v13);
+            v14 = M0;
+            v14 = _mm_mul_epu32(v14, T15);
+            T2  = _mm_add_epi64(T2, v22);
             T14 = R22;
-            v23 = M1; v23 = _mm_mul_epu32(v23, T15); T3 = _mm_add_epi64(T3, v32);
-            v33 = M1; v33 = _mm_mul_epu32(v33, T14); T4 = _mm_add_epi64(T4, v41);
-            v42 = M2; v42 = _mm_mul_epu32(v42, T14); T1 = _mm_add_epi64(T1, v14);
+            v23 = M1;
+            v23 = _mm_mul_epu32(v23, T15);
+            T3  = _mm_add_epi64(T3, v32);
+            v33 = M1;
+            v33 = _mm_mul_epu32(v33, T14);
+            T4  = _mm_add_epi64(T4, v41);
+            v42 = M2;
+            v42 = _mm_mul_epu32(v42, T14);
+            T1  = _mm_add_epi64(T1, v14);
             T15 = R23;
-            v24 = M0; v24 = _mm_mul_epu32(v24, T14); T2 = _mm_add_epi64(T2, v23);
-            v34 = M0; v34 = _mm_mul_epu32(v34, T15); T3 = _mm_add_epi64(T3, v33);
-            v43 = M1; v43 = _mm_mul_epu32(v43, T15); T4 = _mm_add_epi64(T4, v42);
-            v44 = M0; v44 = _mm_mul_epu32(v44, R24); T2 = _mm_add_epi64(T2, v24);
-            T3 = _mm_add_epi64(T3, v34);
-            T4 = _mm_add_epi64(T4, v43);
-            T4 = _mm_add_epi64(T4, v44);
+            v24 = M0;
+            v24 = _mm_mul_epu32(v24, T14);
+            T2  = _mm_add_epi64(T2, v23);
+            v34 = M0;
+            v34 = _mm_mul_epu32(v34, T15);
+            T3  = _mm_add_epi64(T3, v33);
+            v43 = M1;
+            v43 = _mm_mul_epu32(v43, T15);
+            T4  = _mm_add_epi64(T4, v42);
+            v44 = M0;
+            v44 = _mm_mul_epu32(v44, R24);
+            T2  = _mm_add_epi64(T2, v24);
+            T3  = _mm_add_epi64(T3, v34);
+            T4  = _mm_add_epi64(T4, v43);
+            T4  = _mm_add_epi64(T4, v44);
 
             /* reduce */
-            C1 = _mm_srli_epi64(T0, 26); C2 = _mm_srli_epi64(T3, 26); T0 = _mm_and_si128(T0, MMASK); T3 = _mm_and_si128(T3, MMASK); T1 = _mm_add_epi64(T1, C1); T4 = _mm_add_epi64(T4, C2);
-            C1 = _mm_srli_epi64(T1, 26); C2 = _mm_srli_epi64(T4, 26); T1 = _mm_and_si128(T1, MMASK); T4 = _mm_and_si128(T4, MMASK); T2 = _mm_add_epi64(T2, C1); T0 = _mm_add_epi64(T0, _mm_mul_epu32(C2, FIVE));
-            C1 = _mm_srli_epi64(T2, 26); C2 = _mm_srli_epi64(T0, 26); T2 = _mm_and_si128(T2, MMASK); T0 = _mm_and_si128(T0, MMASK); T3 = _mm_add_epi64(T3, C1); T1 = _mm_add_epi64(T1, C2);
-            C1 = _mm_srli_epi64(T3, 26);                              T3 = _mm_and_si128(T3, MMASK);                                T4 = _mm_add_epi64(T4, C1);
+            C1 = _mm_srli_epi64(T0, 26);
+            C2 = _mm_srli_epi64(T3, 26);
+            T0 = _mm_and_si128(T0, MMASK);
+            T3 = _mm_and_si128(T3, MMASK);
+            T1 = _mm_add_epi64(T1, C1);
+            T4 = _mm_add_epi64(T4, C2);
+            C1 = _mm_srli_epi64(T1, 26);
+            C2 = _mm_srli_epi64(T4, 26);
+            T1 = _mm_and_si128(T1, MMASK);
+            T4 = _mm_and_si128(T4, MMASK);
+            T2 = _mm_add_epi64(T2, C1);
+            T0 = _mm_add_epi64(T0, _mm_mul_epu32(C2, FIVE));
+            C1 = _mm_srli_epi64(T2, 26);
+            C2 = _mm_srli_epi64(T0, 26);
+            T2 = _mm_and_si128(T2, MMASK);
+            T0 = _mm_and_si128(T0, MMASK);
+            T3 = _mm_add_epi64(T3, C1);
+            T1 = _mm_add_epi64(T1, C2);
+            C1 = _mm_srli_epi64(T3, 26);
+            T3 = _mm_and_si128(T3, MMASK);
+            T4 = _mm_add_epi64(T4, C1);
 
             /* Final: H = (H*[r^4,r^4] + [Mx,My]*[r^2,r^2] + [Mx',My']) */
             H0 = T0;
@@ -383,54 +533,96 @@ poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
     }
 
     if (bytes >= 32) {
-        xmmi v01,v02,v03,v04;
-        xmmi v11,v12,v13,v14;
-        xmmi v21,v22,v23,v24;
-        xmmi v31,v32,v33,v34;
-        xmmi v41,v42,v43,v44;
-        xmmi T14,T15;
+        xmmi v01, v02, v03, v04;
+        xmmi v11, v12, v13, v14;
+        xmmi v21, v22, v23, v24;
+        xmmi v31, v32, v33, v34;
+        xmmi v41, v42, v43, v44;
+        xmmi T14, T15;
 
         /* H *= [r^2,r^2] */
         T15 = S22;
-        T0  = H4; T0  = _mm_mul_epu32(T0, S21);
-        v01 = H3; v01 = _mm_mul_epu32(v01, T15);
+        T0  = H4;
+        T0  = _mm_mul_epu32(T0, S21);
+        v01 = H3;
+        v01 = _mm_mul_epu32(v01, T15);
         T14 = S23;
-        T1  = H4; T1  = _mm_mul_epu32(T1 , T15);
-        v11 = H3; v11 = _mm_mul_epu32(v11, T14);
-        T2  = H4; T2  = _mm_mul_epu32(T2 , T14); T0 = _mm_add_epi64(T0, v01);
+        T1  = H4;
+        T1  = _mm_mul_epu32(T1, T15);
+        v11 = H3;
+        v11 = _mm_mul_epu32(v11, T14);
+        T2  = H4;
+        T2  = _mm_mul_epu32(T2, T14);
+        T0  = _mm_add_epi64(T0, v01);
         T15 = S24;
-        v02 = H2; v02 = _mm_mul_epu32(v02, T14);
-        T3  = H4; T3  = _mm_mul_epu32(T3 , T15); T1 = _mm_add_epi64(T1, v11);
-        v03 = H1; v03 = _mm_mul_epu32(v03, T15);
-        v12 = H2; v12 = _mm_mul_epu32(v12, T15); T0 = _mm_add_epi64(T0, v02);
+        v02 = H2;
+        v02 = _mm_mul_epu32(v02, T14);
+        T3  = H4;
+        T3  = _mm_mul_epu32(T3, T15);
+        T1  = _mm_add_epi64(T1, v11);
+        v03 = H1;
+        v03 = _mm_mul_epu32(v03, T15);
+        v12 = H2;
+        v12 = _mm_mul_epu32(v12, T15);
+        T0  = _mm_add_epi64(T0, v02);
         T14 = R20;
-        v21 = H3; v21 = _mm_mul_epu32(v21, T15);
-        v31 = H3; v31 = _mm_mul_epu32(v31, T14); T0 = _mm_add_epi64(T0, v03);
-        T4  = H4; T4  = _mm_mul_epu32(T4 , T14); T1 = _mm_add_epi64(T1, v12);
-        v04 = H0; v04 = _mm_mul_epu32(v04, T14); T2 = _mm_add_epi64(T2, v21);
-        v13 = H1; v13 = _mm_mul_epu32(v13, T14); T3 = _mm_add_epi64(T3, v31);
+        v21 = H3;
+        v21 = _mm_mul_epu32(v21, T15);
+        v31 = H3;
+        v31 = _mm_mul_epu32(v31, T14);
+        T0  = _mm_add_epi64(T0, v03);
+        T4  = H4;
+        T4  = _mm_mul_epu32(T4, T14);
+        T1  = _mm_add_epi64(T1, v12);
+        v04 = H0;
+        v04 = _mm_mul_epu32(v04, T14);
+        T2  = _mm_add_epi64(T2, v21);
+        v13 = H1;
+        v13 = _mm_mul_epu32(v13, T14);
+        T3  = _mm_add_epi64(T3, v31);
         T15 = R21;
-        v22 = H2; v22 = _mm_mul_epu32(v22, T14);
-        v32 = H2; v32 = _mm_mul_epu32(v32, T15); T0 = _mm_add_epi64(T0, v04);
-        v41 = H3; v41 = _mm_mul_epu32(v41, T15); T1 = _mm_add_epi64(T1, v13);
-        v14 = H0; v14 = _mm_mul_epu32(v14, T15); T2 = _mm_add_epi64(T2, v22);
+        v22 = H2;
+        v22 = _mm_mul_epu32(v22, T14);
+        v32 = H2;
+        v32 = _mm_mul_epu32(v32, T15);
+        T0  = _mm_add_epi64(T0, v04);
+        v41 = H3;
+        v41 = _mm_mul_epu32(v41, T15);
+        T1  = _mm_add_epi64(T1, v13);
+        v14 = H0;
+        v14 = _mm_mul_epu32(v14, T15);
+        T2  = _mm_add_epi64(T2, v22);
         T14 = R22;
-        v23 = H1; v23 = _mm_mul_epu32(v23, T15); T3 = _mm_add_epi64(T3, v32);
-        v33 = H1; v33 = _mm_mul_epu32(v33, T14); T4 = _mm_add_epi64(T4, v41);
-        v42 = H2; v42 = _mm_mul_epu32(v42, T14); T1 = _mm_add_epi64(T1, v14);
+        v23 = H1;
+        v23 = _mm_mul_epu32(v23, T15);
+        T3  = _mm_add_epi64(T3, v32);
+        v33 = H1;
+        v33 = _mm_mul_epu32(v33, T14);
+        T4  = _mm_add_epi64(T4, v41);
+        v42 = H2;
+        v42 = _mm_mul_epu32(v42, T14);
+        T1  = _mm_add_epi64(T1, v14);
         T15 = R23;
-        v24 = H0; v24 = _mm_mul_epu32(v24, T14); T2 = _mm_add_epi64(T2, v23);
-        v34 = H0; v34 = _mm_mul_epu32(v34, T15); T3 = _mm_add_epi64(T3, v33);
-        v43 = H1; v43 = _mm_mul_epu32(v43, T15); T4 = _mm_add_epi64(T4, v42);
-        v44 = H0; v44 = _mm_mul_epu32(v44, R24); T2 = _mm_add_epi64(T2, v24);
-        T3 = _mm_add_epi64(T3, v34);
-        T4 = _mm_add_epi64(T4, v43);
-        T4 = _mm_add_epi64(T4, v44);
+        v24 = H0;
+        v24 = _mm_mul_epu32(v24, T14);
+        T2  = _mm_add_epi64(T2, v23);
+        v34 = H0;
+        v34 = _mm_mul_epu32(v34, T15);
+        T3  = _mm_add_epi64(T3, v33);
+        v43 = H1;
+        v43 = _mm_mul_epu32(v43, T15);
+        T4  = _mm_add_epi64(T4, v42);
+        v44 = H0;
+        v44 = _mm_mul_epu32(v44, R24);
+        T2  = _mm_add_epi64(T2, v24);
+        T3  = _mm_add_epi64(T3, v34);
+        T4  = _mm_add_epi64(T4, v43);
+        T4  = _mm_add_epi64(T4, v44);
 
         /* H += [Mx,My] */
         if (m) {
-            T5 = _mm_loadu_si128((const xmmi *)(const void *)(m + 0));
-            T6 = _mm_loadu_si128((const xmmi *)(const void *)(m + 16));
+            T5 = _mm_loadu_si128((const xmmi *) (const void *) (m + 0));
+            T6 = _mm_loadu_si128((const xmmi *) (const void *) (m + 16));
             T7 = _mm_unpacklo_epi32(T5, T6);
             T8 = _mm_unpackhi_epi32(T5, T6);
             M0 = _mm_unpacklo_epi32(T7, _mm_setzero_si128());
@@ -448,10 +640,27 @@ poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
         }
 
         /* reduce */
-        C1 = _mm_srli_epi64(T0, 26); C2 = _mm_srli_epi64(T3, 26); T0 = _mm_and_si128(T0, MMASK); T3 = _mm_and_si128(T3, MMASK); T1 = _mm_add_epi64(T1, C1); T4 = _mm_add_epi64(T4, C2);
-        C1 = _mm_srli_epi64(T1, 26); C2 = _mm_srli_epi64(T4, 26); T1 = _mm_and_si128(T1, MMASK); T4 = _mm_and_si128(T4, MMASK); T2 = _mm_add_epi64(T2, C1); T0 = _mm_add_epi64(T0, _mm_mul_epu32(C2, FIVE));
-        C1 = _mm_srli_epi64(T2, 26); C2 = _mm_srli_epi64(T0, 26); T2 = _mm_and_si128(T2, MMASK); T0 = _mm_and_si128(T0, MMASK); T3 = _mm_add_epi64(T3, C1); T1 = _mm_add_epi64(T1, C2);
-        C1 = _mm_srli_epi64(T3, 26);                              T3 = _mm_and_si128(T3, MMASK);                                T4 = _mm_add_epi64(T4, C1);
+        C1 = _mm_srli_epi64(T0, 26);
+        C2 = _mm_srli_epi64(T3, 26);
+        T0 = _mm_and_si128(T0, MMASK);
+        T3 = _mm_and_si128(T3, MMASK);
+        T1 = _mm_add_epi64(T1, C1);
+        T4 = _mm_add_epi64(T4, C2);
+        C1 = _mm_srli_epi64(T1, 26);
+        C2 = _mm_srli_epi64(T4, 26);
+        T1 = _mm_and_si128(T1, MMASK);
+        T4 = _mm_and_si128(T4, MMASK);
+        T2 = _mm_add_epi64(T2, C1);
+        T0 = _mm_add_epi64(T0, _mm_mul_epu32(C2, FIVE));
+        C1 = _mm_srli_epi64(T2, 26);
+        C2 = _mm_srli_epi64(T0, 26);
+        T2 = _mm_and_si128(T2, MMASK);
+        T0 = _mm_and_si128(T0, MMASK);
+        T3 = _mm_add_epi64(T3, C1);
+        T1 = _mm_add_epi64(T1, C2);
+        C1 = _mm_srli_epi64(T3, 26);
+        T3 = _mm_and_si128(T3, MMASK);
+        T4 = _mm_add_epi64(T4, C1);
 
         /* H = (H*[r^2,r^2] + [Mx,My]) */
         H0 = T0;
@@ -462,19 +671,19 @@ poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
     }
 
     if (m) {
-        T0 = _mm_shuffle_epi32(H0, _MM_SHUFFLE(0,0,2,0));
-        T1 = _mm_shuffle_epi32(H1, _MM_SHUFFLE(0,0,2,0));
-        T2 = _mm_shuffle_epi32(H2, _MM_SHUFFLE(0,0,2,0));
-        T3 = _mm_shuffle_epi32(H3, _MM_SHUFFLE(0,0,2,0));
-        T4 = _mm_shuffle_epi32(H4, _MM_SHUFFLE(0,0,2,0));
+        T0 = _mm_shuffle_epi32(H0, _MM_SHUFFLE(0, 0, 2, 0));
+        T1 = _mm_shuffle_epi32(H1, _MM_SHUFFLE(0, 0, 2, 0));
+        T2 = _mm_shuffle_epi32(H2, _MM_SHUFFLE(0, 0, 2, 0));
+        T3 = _mm_shuffle_epi32(H3, _MM_SHUFFLE(0, 0, 2, 0));
+        T4 = _mm_shuffle_epi32(H4, _MM_SHUFFLE(0, 0, 2, 0));
         T0 = _mm_unpacklo_epi64(T0, T1);
         T1 = _mm_unpacklo_epi64(T2, T3);
-        _mm_storeu_si128((xmmi *)(void *)&st->hh[0], T0);
-        _mm_storeu_si128((xmmi *)(void *)&st->hh[4], T1);
-        _mm_storel_epi64((xmmi *)(void *)&st->hh[8], T4);
+        _mm_storeu_si128((xmmi *) (void *) &st->H.hh[0], T0);
+        _mm_storeu_si128((xmmi *) (void *) &st->H.hh[4], T1);
+        _mm_storel_epi64((xmmi *) (void *) &st->H.hh[8], T4);
     } else {
-        uint32_t t0,t1,t2,t3,t4,b;
-        uint64_t h0,h1,h2,g0,g1,g2,c,nc;
+        uint32_t t0, t1, t2, t3, t4, b;
+        uint64_t h0, h1, h2, g0, g1, g2, c, nc;
 
         /* H = H[0]+H[1] */
         T0 = H0;
@@ -489,37 +698,60 @@ poly1305_blocks(poly1305_state_internal_t *st, const unsigned char *m,
         T3 = _mm_add_epi64(T3, _mm_srli_si128(T3, 8));
         T4 = _mm_add_epi64(T4, _mm_srli_si128(T4, 8));
 
-        t0 = _mm_cvtsi128_si32(T0)    ; b = (t0 >> 26); t0 &= 0x3ffffff;
-        t1 = _mm_cvtsi128_si32(T1) + b; b = (t1 >> 26); t1 &= 0x3ffffff;
-        t2 = _mm_cvtsi128_si32(T2) + b; b = (t2 >> 26); t2 &= 0x3ffffff;
-        t3 = _mm_cvtsi128_si32(T3) + b; b = (t3 >> 26); t3 &= 0x3ffffff;
+        t0 = _mm_cvtsi128_si32(T0);
+        b  = (t0 >> 26);
+        t0 &= 0x3ffffff;
+        t1 = _mm_cvtsi128_si32(T1) + b;
+        b  = (t1 >> 26);
+        t1 &= 0x3ffffff;
+        t2 = _mm_cvtsi128_si32(T2) + b;
+        b  = (t2 >> 26);
+        t2 &= 0x3ffffff;
+        t3 = _mm_cvtsi128_si32(T3) + b;
+        b  = (t3 >> 26);
+        t3 &= 0x3ffffff;
         t4 = _mm_cvtsi128_si32(T4) + b;
 
         /* everything except t4 is in range, so this is all safe */
-        h0 =  (((uint64_t)t0      ) | ((uint64_t)t1 << 26)                       ) & 0xfffffffffffull;
-        h1 =  (((uint64_t)t1 >> 18) | ((uint64_t)t2 <<  8) | ((uint64_t)t3 << 34)) & 0xfffffffffffull;
-        h2 =  (((uint64_t)t3 >> 10) | ((uint64_t)t4 << 16)                       );
-
-        c = (h2 >> 42); h2 &= 0x3ffffffffff;
-        h0 += c * 5; c = (h0 >> 44); h0 &= 0xfffffffffff;
-        h1 += c;     c = (h1 >> 44); h1 &= 0xfffffffffff;
-        h2 += c;     c = (h2 >> 42); h2 &= 0x3ffffffffff;
-        h0 += c * 5; c = (h0 >> 44); h0 &= 0xfffffffffff;
+        h0 = (((uint64_t) t0) | ((uint64_t) t1 << 26)) & 0xfffffffffffull;
+        h1 = (((uint64_t) t1 >> 18) | ((uint64_t) t2 << 8) |
+              ((uint64_t) t3 << 34)) &
+             0xfffffffffffull;
+        h2 = (((uint64_t) t3 >> 10) | ((uint64_t) t4 << 16));
+
+        c = (h2 >> 42);
+        h2 &= 0x3ffffffffff;
+        h0 += c * 5;
+        c = (h0 >> 44);
+        h0 &= 0xfffffffffff;
+        h1 += c;
+        c = (h1 >> 44);
+        h1 &= 0xfffffffffff;
+        h2 += c;
+        c = (h2 >> 42);
+        h2 &= 0x3ffffffffff;
+        h0 += c * 5;
+        c = (h0 >> 44);
+        h0 &= 0xfffffffffff;
         h1 += c;
 
-        g0 = h0 + 5; c = (g0 >> 44); g0 &= 0xfffffffffff;
-        g1 = h1 + c; c = (g1 >> 44); g1 &= 0xfffffffffff;
-        g2 = h2 + c - ((uint64_t)1 << 42);
+        g0 = h0 + 5;
+        c  = (g0 >> 44);
+        g0 &= 0xfffffffffff;
+        g1 = h1 + c;
+        c  = (g1 >> 44);
+        g1 &= 0xfffffffffff;
+        g2 = h2 + c - ((uint64_t) 1 << 42);
 
-        c = (g2 >> 63) - 1;
+        c  = (g2 >> 63) - 1;
         nc = ~c;
         h0 = (h0 & nc) | (g0 & c);
         h1 = (h1 & nc) | (g1 & c);
         h2 = (h2 & nc) | (g2 & c);
 
-        st->h[0] = h0;
-        st->h[1] = h1;
-        st->h[2] = h2;
+        st->H.h[0] = h0;
+        st->H.h[1] = h1;
+        st->H.h[2] = h2;
     }
 }
 
@@ -533,15 +765,18 @@ poly1305_update(poly1305_state_internal_t *st, const unsigned char *m,
     if (st->leftover) {
         unsigned long long want = (poly1305_block_size - st->leftover);
 
-        if (want > bytes)
+        if (want > bytes) {
             want = bytes;
-        for (i = 0; i < want; i++)
+        }
+        for (i = 0; i < want; i++) {
             st->buffer[st->leftover + i] = m[i];
+        }
         bytes -= want;
         m += want;
         st->leftover += want;
-        if (st->leftover < poly1305_block_size)
+        if (st->leftover < poly1305_block_size) {
             return;
+        }
         poly1305_blocks(st, st->buffer, poly1305_block_size);
         st->leftover = 0;
     }
@@ -568,14 +803,17 @@ static POLY1305_NOINLINE void
 poly1305_finish_ext(poly1305_state_internal_t *st, const unsigned char *m,
                     unsigned long long leftover, unsigned char mac[16])
 {
-    uint64_t h0,h1,h2;
-    uint64_t t0,t1,c;
+    uint64_t h0, h1, h2;
 
     if (leftover) {
-        CRYPTO_ALIGN(16) unsigned char final[32] = {0};
+        CRYPTO_ALIGN(16) unsigned char final[32] = { 0 };
+
         poly1305_block_copy31(final, m, leftover);
-        if (leftover != 16) final[leftover] = 1;
-        st->flags |= (leftover >= 16) ? poly1305_final_shift8 : poly1305_final_shift16;
+        if (leftover != 16) {
+            final[leftover] = 1;
+        }
+        st->flags |=
+            (leftover >= 16) ? poly1305_final_shift8 : poly1305_final_shift16;
         poly1305_blocks(st, final, 32);
     }
 
@@ -589,19 +827,20 @@ poly1305_finish_ext(poly1305_state_internal_t *st, const unsigned char *m,
         poly1305_blocks(st, NULL, 32);
     }
 
-    h0 = st->h[0];
-    h1 = st->h[1];
-    h2 = st->h[2];
+    h0 = st->H.h[0];
+    h1 = st->H.h[1];
+    h2 = st->H.h[2];
 
     /* pad */
-    h0 = ((h0      ) | (h1 << 44));
+    h0 = ((h0) | (h1 << 44));
     h1 = ((h1 >> 20) | (h2 << 24));
 #ifdef HAVE_AMD64_ASM
-    __asm__ __volatile__("addq %2, %0 ;\n"
-                         "adcq %3, %1 ;\n"
-                         : "+r"(h0), "+r"(h1)
-                         : "r"(st->pad[0]), "r"(st->pad[1])
-                         : "flags", "cc");
+    __asm__ __volatile__(
+        "addq %2, %0 ;\n"
+        "adcq %3, %1 ;\n"
+        : "+r"(h0), "+r"(h1)
+        : "r"(st->pad[0]), "r"(st->pad[1])
+        : "flags", "cc");
 #else
     {
         uint128_t h;
@@ -609,22 +848,22 @@ poly1305_finish_ext(poly1305_state_internal_t *st, const unsigned char *m,
         memcpy(&h, &st->pad[0], 16);
         h += ((uint128_t) h1 << 64) | h0;
         h0 = (uint64_t) h;
-        h1 = (uint64_t) (h >> 64);
+        h1 = (uint64_t)(h >> 64);
     }
 #endif
-    _mm_storeu_si128((xmmi *)(void *)st + 0, _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)st + 1, _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)st + 2, _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)st + 3, _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)st + 4, _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)st + 5, _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)st + 6, _mm_setzero_si128());
-    _mm_storeu_si128((xmmi *)(void *)st + 7, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 0, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 1, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 2, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 3, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 4, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 5, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 6, _mm_setzero_si128());
+    _mm_storeu_si128((xmmi *) (void *) st + 7, _mm_setzero_si128());
 
     memcpy(&mac[0], &h0, 8);
     memcpy(&mac[8], &h1, 8);
 
-    sodium_memzero((void *)st, sizeof *st);
+    sodium_memzero((void *) st, sizeof *st);
 }
 
 static void
@@ -637,19 +876,19 @@ static int
 crypto_onetimeauth_poly1305_sse2_init(crypto_onetimeauth_poly1305_state *state,
                                       const unsigned char *key)
 {
-    (void) sizeof(int[sizeof (crypto_onetimeauth_poly1305_state) >=
-                      sizeof (poly1305_state_internal_t) ? 1 : -1]);
-    poly1305_init_ext((poly1305_state_internal_t *)(void *) state, key, 0U);
+    COMPILER_ASSERT(sizeof(crypto_onetimeauth_poly1305_state) >=
+                    sizeof(poly1305_state_internal_t));
+    poly1305_init_ext((poly1305_state_internal_t *) (void *) state, key, 0U);
 
     return 0;
 }
 
 static int
-crypto_onetimeauth_poly1305_sse2_update(crypto_onetimeauth_poly1305_state *state,
-                                        const unsigned char *in,
-                                        unsigned long long inlen)
+crypto_onetimeauth_poly1305_sse2_update(
+    crypto_onetimeauth_poly1305_state *state, const unsigned char *in,
+    unsigned long long inlen)
 {
-    poly1305_update((poly1305_state_internal_t *)(void *) state, in, inlen);
+    poly1305_update((poly1305_state_internal_t *) (void *) state, in, inlen);
 
     return 0;
 }
@@ -658,18 +897,18 @@ static int
 crypto_onetimeauth_poly1305_sse2_final(crypto_onetimeauth_poly1305_state *state,
                                        unsigned char *out)
 {
-    poly1305_finish((poly1305_state_internal_t *)(void *) state, out);
+    poly1305_finish((poly1305_state_internal_t *) (void *) state, out);
 
     return 0;
 }
 
 static int
 crypto_onetimeauth_poly1305_sse2(unsigned char *out, const unsigned char *m,
-                                 unsigned long long inlen,
+                                 unsigned long long   inlen,
                                  const unsigned char *key)
 {
     CRYPTO_ALIGN(64) poly1305_state_internal_t st;
-    unsigned long long blocks;
+    unsigned long long                         blocks;
 
     poly1305_init_ext(&st, key, inlen);
     blocks = inlen & ~31;
@@ -686,23 +925,25 @@ crypto_onetimeauth_poly1305_sse2(unsigned char *out, const unsigned char *m,
 static int
 crypto_onetimeauth_poly1305_sse2_verify(const unsigned char *h,
                                         const unsigned char *in,
-                                        unsigned long long inlen,
+                                        unsigned long long   inlen,
                                         const unsigned char *k)
 {
     unsigned char correct[16];
 
-    crypto_onetimeauth_poly1305_sse2(correct,in,inlen,k);
+    crypto_onetimeauth_poly1305_sse2(correct, in, inlen, k);
 
-    return crypto_verify_16(h,correct);
+    return crypto_verify_16(h, correct);
 }
 
 struct crypto_onetimeauth_poly1305_implementation
-crypto_onetimeauth_poly1305_sse2_implementation = {
-    SODIUM_C99(.onetimeauth =) crypto_onetimeauth_poly1305_sse2,
-    SODIUM_C99(.onetimeauth_verify =) crypto_onetimeauth_poly1305_sse2_verify,
-    SODIUM_C99(.onetimeauth_init =) crypto_onetimeauth_poly1305_sse2_init,
-    SODIUM_C99(.onetimeauth_update =) crypto_onetimeauth_poly1305_sse2_update,
-    SODIUM_C99(.onetimeauth_final =) crypto_onetimeauth_poly1305_sse2_final
-};
+    crypto_onetimeauth_poly1305_sse2_implementation = {
+        SODIUM_C99(.onetimeauth =) crypto_onetimeauth_poly1305_sse2,
+        SODIUM_C99(.onetimeauth_verify =)
+            crypto_onetimeauth_poly1305_sse2_verify,
+        SODIUM_C99(.onetimeauth_init =) crypto_onetimeauth_poly1305_sse2_init,
+        SODIUM_C99(.onetimeauth_update =)
+            crypto_onetimeauth_poly1305_sse2_update,
+        SODIUM_C99(.onetimeauth_final =) crypto_onetimeauth_poly1305_sse2_final
+    };
 
 #endif
diff --git a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h
index 8029b00..9177cad 100644
--- a/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h
+++ b/libsodium/src/libsodium/crypto_onetimeauth/poly1305/sse2/poly1305_sse2.h
@@ -3,29 +3,10 @@
 
 #include <stddef.h>
 
+#include "../onetimeauth_poly1305.h"
 #include "crypto_onetimeauth_poly1305.h"
 
 extern struct crypto_onetimeauth_poly1305_implementation
     crypto_onetimeauth_poly1305_sse2_implementation;
 
-static int crypto_onetimeauth_poly1305_sse2(unsigned char *out,
-                                            const unsigned char *in,
-                                            unsigned long long inlen,
-                                            const unsigned char *k);
-
-static int crypto_onetimeauth_poly1305_sse2_verify(const unsigned char *h,
-                                                   const unsigned char *in,
-                                                   unsigned long long inlen,
-                                                   const unsigned char *k);
-
-static int crypto_onetimeauth_poly1305_sse2_init(crypto_onetimeauth_poly1305_state *state,
-                                                 const unsigned char *key);
-
-static int crypto_onetimeauth_poly1305_sse2_update(crypto_onetimeauth_poly1305_state *state,
-                                                   const unsigned char *in,
-                                                   unsigned long long inlen);
-
-static int crypto_onetimeauth_poly1305_sse2_final(crypto_onetimeauth_poly1305_state *state,
-                                                  unsigned char *out);
-
 #endif /* poly1305_sse2_H */
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
index 8e9acef..c4dd46a 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt-common.c
@@ -23,14 +23,15 @@
 
 #include "crypto_pwhash_scryptsalsa208sha256.h"
 #include "crypto_scrypt.h"
+#include "private/common.h"
 #include "runtime.h"
 #include "utils.h"
 
-static const char * const itoa64 =
+static const char *const itoa64 =
     "./0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
 
 static uint8_t *
-encode64_uint32(uint8_t * dst, size_t dstlen, uint32_t src, uint32_t srcbits)
+encode64_uint32(uint8_t *dst, size_t dstlen, uint32_t src, uint32_t srcbits)
 {
     uint32_t bit;
 
@@ -42,22 +43,23 @@ encode64_uint32(uint8_t * dst, size_t dstlen, uint32_t src, uint32_t srcbits)
         dstlen--;
         src >>= 6;
     }
-
     return dst;
 }
 
 static uint8_t *
-encode64(uint8_t * dst, size_t dstlen, const uint8_t * src, size_t srclen)
+encode64(uint8_t *dst, size_t dstlen, const uint8_t *src, size_t srclen)
 {
     size_t i;
 
-    for (i = 0; i < srclen; ) {
-        uint8_t * dnext;
+    for (i = 0; i < srclen;) {
+        uint8_t *dnext;
         uint32_t value = 0, bits = 0;
+
         do {
-            value |= (uint32_t)src[i++] << bits;
+            value |= (uint32_t) src[i++] << bits;
             bits += 8;
         } while (bits < 24 && i < srclen);
+
         dnext = encode64_uint32(dst, dstlen, value, bits);
         if (!dnext) {
             return NULL; /* LCOV_EXCL_LINE */
@@ -65,25 +67,25 @@ encode64(uint8_t * dst, size_t dstlen, const uint8_t * src, size_t srclen)
         dstlen -= dnext - dst;
         dst = dnext;
     }
-
     return dst;
 }
 
 static int
-decode64_one(uint32_t * dst, uint8_t src)
+decode64_one(uint32_t *dst, uint8_t src)
 {
     const char *ptr = strchr(itoa64, src);
 
     if (ptr) {
-        *dst = (uint32_t) (ptr - itoa64);
+        *dst = (uint32_t)(ptr - itoa64);
         return 0;
     }
     *dst = 0;
+
     return -1;
 }
 
 static const uint8_t *
-decode64_uint32(uint32_t * dst, uint32_t dstbits, const uint8_t * src)
+decode64_uint32(uint32_t *dst, uint32_t dstbits, const uint8_t *src)
 {
     uint32_t bit;
     uint32_t value;
@@ -98,73 +100,85 @@ decode64_uint32(uint32_t * dst, uint32_t dstbits, const uint8_t * src)
         src++;
         value |= one << bit;
     }
-
     *dst = value;
+
     return src;
 }
 
-uint8_t *
-escrypt_r(escrypt_local_t * local, const uint8_t * passwd, size_t passwdlen,
-          const uint8_t * setting, uint8_t * buf, size_t buflen)
+const uint8_t *
+escrypt_parse_setting(const uint8_t *setting,
+                      uint32_t *N_log2_p, uint32_t *r_p, uint32_t *p_p)
 {
-    uint8_t        hash[crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES];
-    escrypt_kdf_t  escrypt_kdf;
     const uint8_t *src;
-    const uint8_t *salt;
-    uint8_t       *dst;
-    size_t         prefixlen;
-    size_t         saltlen;
-    size_t         need;
-    uint64_t       N;
-    uint32_t       N_log2;
-    uint32_t       r;
-    uint32_t       p;
 
     if (setting[0] != '$' || setting[1] != '7' || setting[2] != '$') {
         return NULL;
     }
     src = setting + 3;
 
-    if (decode64_one(&N_log2, *src)) {
+    if (decode64_one(N_log2_p, *src)) {
         return NULL;
     }
     src++;
-    N = (uint64_t)1 << N_log2;
 
-    src = decode64_uint32(&r, 30, src);
+    src = decode64_uint32(r_p, 30, src);
     if (!src) {
         return NULL;
     }
-    src = decode64_uint32(&p, 30, src);
+
+    src = decode64_uint32(p_p, 30, src);
     if (!src) {
         return NULL;
     }
+    return src;
+}
+
+uint8_t *
+escrypt_r(escrypt_local_t *local, const uint8_t *passwd, size_t passwdlen,
+          const uint8_t *setting, uint8_t *buf, size_t buflen)
+{
+    uint8_t        hash[crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES];
+    escrypt_kdf_t  escrypt_kdf;
+    const uint8_t *src;
+    const uint8_t *salt;
+    uint8_t       *dst;
+    size_t         prefixlen;
+    size_t         saltlen;
+    size_t         need;
+    uint64_t       N;
+    uint32_t       N_log2;
+    uint32_t       r;
+    uint32_t       p;
+
+    src = escrypt_parse_setting(setting, &N_log2, &r, &p);
+    if (!src) {
+        return NULL;
+    }
+    N = (uint64_t) 1 << N_log2;
     prefixlen = src - setting;
 
     salt = src;
-    src = (uint8_t *) strrchr((char *)salt, '$');
+    src  = (const uint8_t *) strrchr((const char *) salt, '$');
     if (src) {
         saltlen = src - salt;
     } else {
-        saltlen = strlen((char *)salt);
+        saltlen = strlen((const char *) salt);
     }
     need = prefixlen + saltlen + 1 +
-        crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES_ENCODED + 1;
+           crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES_ENCODED + 1;
     if (need > buflen || need < saltlen) {
         return NULL;
     }
-#if defined(HAVE_EMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
+#ifdef HAVE_EMMINTRIN_H
     escrypt_kdf =
         sodium_runtime_has_sse2() ? escrypt_kdf_sse : escrypt_kdf_nosse;
 #else
     escrypt_kdf = escrypt_kdf_nosse;
 #endif
-    if (escrypt_kdf(local, passwd, passwdlen, salt, saltlen,
-                    N, r, p, hash, sizeof(hash))) {
+    if (escrypt_kdf(local, passwd, passwdlen, salt, saltlen, N, r, p, hash,
+                    sizeof(hash))) {
         return NULL;
     }
-
     dst = buf;
     memcpy(dst, setting, prefixlen + saltlen);
     dst += prefixlen + saltlen;
@@ -181,24 +195,23 @@ escrypt_r(escrypt_local_t * local, const uint8_t * passwd, size_t passwdlen,
 }
 
 uint8_t *
-escrypt_gensalt_r(uint32_t N_log2, uint32_t r, uint32_t p,
-                  const uint8_t * src, size_t srclen,
-                  uint8_t * buf, size_t buflen)
+escrypt_gensalt_r(uint32_t N_log2, uint32_t r, uint32_t p, const uint8_t *src,
+                  size_t srclen, uint8_t *buf, size_t buflen)
 {
     uint8_t *dst;
     size_t   prefixlen =
         (sizeof "$7$" - 1U) + (1U /* N_log2 */) + (5U /* r */) + (5U /* p */);
-    size_t   saltlen = BYTES2CHARS(srclen);
-    size_t   need;
+    size_t saltlen = BYTES2CHARS(srclen);
+    size_t need;
 
     need = prefixlen + saltlen + 1;
     if (need > buflen || need < saltlen || saltlen < srclen) {
         return NULL; /* LCOV_EXCL_LINE */
     }
-    if (N_log2 > 63 || ((uint64_t)r * (uint64_t)p >= (1U << 30))) {
-        return NULL;
+    if (N_log2 > 63 || ((uint64_t) r * (uint64_t) p >= (1U << 30))) {
+        return NULL; /* LCOV_EXCL_LINE */
     }
-    dst = buf;
+    dst    = buf;
     *dst++ = '$';
     *dst++ = '7';
     *dst++ = '$';
@@ -223,10 +236,10 @@ escrypt_gensalt_r(uint32_t N_log2, uint32_t r, uint32_t p,
 }
 
 int
-crypto_pwhash_scryptsalsa208sha256_ll(const uint8_t * passwd, size_t passwdlen,
-                                      const uint8_t * salt, size_t saltlen,
+crypto_pwhash_scryptsalsa208sha256_ll(const uint8_t *passwd, size_t passwdlen,
+                                      const uint8_t *salt, size_t saltlen,
                                       uint64_t N, uint32_t r, uint32_t p,
-                                      uint8_t * buf, size_t buflen)
+                                      uint8_t *buf, size_t buflen)
 {
     escrypt_kdf_t   escrypt_kdf;
     escrypt_local_t local;
@@ -235,16 +248,14 @@ crypto_pwhash_scryptsalsa208sha256_ll(const uint8_t * passwd, size_t passwdlen,
     if (escrypt_init_local(&local)) {
         return -1; /* LCOV_EXCL_LINE */
     }
-#if defined(HAVE_EMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
+#if defined(HAVE_EMMINTRIN_H)
     escrypt_kdf =
         sodium_runtime_has_sse2() ? escrypt_kdf_sse : escrypt_kdf_nosse;
 #else
     escrypt_kdf = escrypt_kdf_nosse;
 #endif
-    retval = escrypt_kdf(&local,
-                         passwd, passwdlen, salt, saltlen,
-                         N, r, p, buf, buflen);
+    retval = escrypt_kdf(&local, passwd, passwdlen, salt, saltlen, N, r, p, buf,
+                         buflen);
     if (escrypt_free_local(&local)) {
         return -1; /* LCOV_EXCL_LINE */
     }
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h
index a0b92cf..8310196 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/crypto_scrypt.h
@@ -31,13 +31,13 @@
 #define crypto_scrypt_H
 
 #include <limits.h>
-#include <stdint.h>
 #include <stddef.h>
+#include <stdint.h>
 
 #if SIZE_MAX > 0xffffffffULL
-# define ARCH_BITS 64
+#define ARCH_BITS 64
 #else
-# define ARCH_BITS 32
+#define ARCH_BITS 32
 #endif
 
 #define crypto_pwhash_scryptsalsa208sha256_STRPREFIXBYTES 14
@@ -47,53 +47,52 @@
 #define crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES 32
 #define crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES_ENCODED 43
 
-#define BYTES2CHARS(bytes) ((((bytes) * 8) + 5) / 6)
+#define BYTES2CHARS(bytes) ((((bytes) *8) + 5) / 6)
 
 typedef struct {
-	void * base, * aligned;
-	size_t size;
+    void * base, *aligned;
+    size_t size;
 } escrypt_region_t;
 
 typedef union {
-	uint64_t d[8];
-	uint32_t w[16];
+    uint64_t d[8];
+    uint32_t w[16];
 } escrypt_block_t;
 
 typedef escrypt_region_t escrypt_local_t;
 
-extern int escrypt_init_local(escrypt_local_t * __local);
+extern int escrypt_init_local(escrypt_local_t *__local);
+
+extern int escrypt_free_local(escrypt_local_t *__local);
 
-extern int escrypt_free_local(escrypt_local_t * __local);
+extern void *alloc_region(escrypt_region_t *region, size_t size);
+extern int free_region(escrypt_region_t *region);
 
-extern void *alloc_region(escrypt_region_t * region, size_t size);
-extern int free_region(escrypt_region_t * region);
+typedef int (*escrypt_kdf_t)(escrypt_local_t *__local, const uint8_t *__passwd,
+                             size_t __passwdlen, const uint8_t *__salt,
+                             size_t __saltlen, uint64_t __N, uint32_t __r,
+                             uint32_t __p, uint8_t *__buf, size_t __buflen);
 
-typedef int (*escrypt_kdf_t)(escrypt_local_t * __local,
-                             const uint8_t * __passwd, size_t __passwdlen,
-                             const uint8_t * __salt, size_t __saltlen,
-                             uint64_t __N, uint32_t __r, uint32_t __p,
-                             uint8_t * __buf, size_t __buflen);
+extern int escrypt_kdf_nosse(escrypt_local_t *__local, const uint8_t *__passwd,
+                             size_t __passwdlen, const uint8_t *__salt,
+                             size_t __saltlen, uint64_t __N, uint32_t __r,
+                             uint32_t __p, uint8_t *__buf, size_t __buflen);
 
-extern int escrypt_kdf_nosse(escrypt_local_t * __local,
-    const uint8_t * __passwd, size_t __passwdlen,
-    const uint8_t * __salt, size_t __saltlen,
-    uint64_t __N, uint32_t __r, uint32_t __p,
-    uint8_t * __buf, size_t __buflen);
+extern int escrypt_kdf_sse(escrypt_local_t *__local, const uint8_t *__passwd,
+                           size_t __passwdlen, const uint8_t *__salt,
+                           size_t __saltlen, uint64_t __N, uint32_t __r,
+                           uint32_t __p, uint8_t *__buf, size_t __buflen);
 
-extern int escrypt_kdf_sse(escrypt_local_t * __local,
-    const uint8_t * __passwd, size_t __passwdlen,
-    const uint8_t * __salt, size_t __saltlen,
-    uint64_t __N, uint32_t __r, uint32_t __p,
-    uint8_t * __buf, size_t __buflen);
+extern uint8_t *escrypt_r(escrypt_local_t *__local, const uint8_t *__passwd,
+                          size_t __passwdlen, const uint8_t *__setting,
+                          uint8_t *__buf, size_t __buflen);
 
-extern uint8_t * escrypt_r(escrypt_local_t * __local,
-    const uint8_t * __passwd, size_t __passwdlen,
-    const uint8_t * __setting,
-    uint8_t * __buf, size_t __buflen);
+extern uint8_t *escrypt_gensalt_r(uint32_t __N_log2, uint32_t __r, uint32_t __p,
+                                  const uint8_t *__src, size_t __srclen,
+                                  uint8_t *__buf, size_t __buflen);
 
-extern uint8_t * escrypt_gensalt_r(
-    uint32_t __N_log2, uint32_t __r, uint32_t __p,
-    const uint8_t * __src, size_t __srclen,
-    uint8_t * __buf, size_t __buflen);
+extern const uint8_t *escrypt_parse_setting(const uint8_t *setting,
+                                            uint32_t *N_log2_p, uint32_t *r_p,
+                                            uint32_t *p_p);
 
 #endif /* !_CRYPTO_SCRYPT_H_ */
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
index 4786e5b..5bf0d70 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/nosse/pwhash_scryptsalsa208sha256_nosse.c
@@ -34,65 +34,75 @@
 #include <stdlib.h>
 #include <string.h>
 
-#include "../pbkdf2-sha256.h"
-#include "../sysendian.h"
 #include "../crypto_scrypt.h"
+#include "../pbkdf2-sha256.h"
+#include "private/common.h"
 
 static inline void
 blkcpy_64(escrypt_block_t *dest, const escrypt_block_t *src)
 {
-	int i;
+    int i;
 
-#if (ARCH_BITS==32)
-	for (i = 0; i < 16; ++i)
-		dest->w[i] = src->w[i];
+#if (ARCH_BITS == 32)
+    for (i = 0; i < 16; ++i) {
+        dest->w[i] = src->w[i];
+    }
 #else
-	for (i = 0; i < 8; ++i)
-		dest->d[i] = src->d[i];
+    for (i = 0; i < 8; ++i) {
+        dest->d[i] = src->d[i];
+    }
 #endif
 }
 
 static inline void
 blkxor_64(escrypt_block_t *dest, const escrypt_block_t *src)
 {
-	int i;
+    int i;
 
-#if (ARCH_BITS==32)
-	for (i = 0; i < 16; ++i)
-		dest->w[i] ^= src->w[i];
+#if (ARCH_BITS == 32)
+    for (i = 0; i < 16; ++i) {
+        dest->w[i] ^= src->w[i];
+    }
 #else
-	for (i = 0; i < 8; ++i)
-		dest->d[i] ^= src->d[i];
+    for (i = 0; i < 8; ++i) {
+        dest->d[i] ^= src->d[i];
+    }
 #endif
 }
 
 static inline void
 blkcpy(escrypt_block_t *dest, const escrypt_block_t *src, size_t len)
 {
-	size_t i, L;
-#if (ARCH_BITS==32)
-	L = (len>>2);
-	for (i = 0; i < L; ++i)
-		dest->w[i] = src->w[i];
+    size_t i, L;
+
+#if (ARCH_BITS == 32)
+    L = (len >> 2);
+    for (i = 0; i < L; ++i) {
+        dest->w[i] = src->w[i];
+    }
 #else
-	L = (len>>3);
-	for (i = 0; i < L; ++i)
-		dest->d[i] = src->d[i];
+    L = (len >> 3);
+    for (i = 0; i < L; ++i) {
+        dest->d[i] = src->d[i];
+    }
 #endif
 }
 
 static inline void
 blkxor(escrypt_block_t *dest, const escrypt_block_t *src, size_t len)
 {
-	size_t i, L;
-#if (ARCH_BITS==32)
-	L = (len>>2);
-	for (i = 0; i < L; ++i)
-		dest->w[i] ^= src->w[i];
+    size_t i, L;
+
+#if (ARCH_BITS == 32)
+    L = (len >> 2);
+    for (i = 0; i < L; ++i) {
+        dest->w[i] ^= src->w[i];
+    }
 #else
-	L = (len>>3);
-	for (i = 0; i < L; ++i)
-		dest->d[i] ^= src->d[i];
+    L = (len >> 3);
+    for (i = 0; i < L; ++i) {
+        dest->d[i] ^= src->d[i];
+    }
 #endif
 }
 
@@ -103,42 +113,59 @@ blkxor(escrypt_block_t *dest, const escrypt_block_t *src, size_t len)
 static void
 salsa20_8(uint32_t B[16])
 {
-	escrypt_block_t X;
-	uint32_t *x = X.w;
-	size_t i;
-
-	blkcpy_64(&X, (escrypt_block_t*)B);
-	for (i = 0; i < 8; i += 2) {
-#define R(a,b) (((a) << (b)) | ((a) >> (32 - (b))))
-		/* Operate on columns. */
-		x[ 4] ^= R(x[ 0]+x[12], 7);  x[ 8] ^= R(x[ 4]+x[ 0], 9);
-		x[12] ^= R(x[ 8]+x[ 4],13);  x[ 0] ^= R(x[12]+x[ 8],18);
-
-		x[ 9] ^= R(x[ 5]+x[ 1], 7);  x[13] ^= R(x[ 9]+x[ 5], 9);
-		x[ 1] ^= R(x[13]+x[ 9],13);  x[ 5] ^= R(x[ 1]+x[13],18);
-
-		x[14] ^= R(x[10]+x[ 6], 7);  x[ 2] ^= R(x[14]+x[10], 9);
-		x[ 6] ^= R(x[ 2]+x[14],13);  x[10] ^= R(x[ 6]+x[ 2],18);
-
-		x[ 3] ^= R(x[15]+x[11], 7);  x[ 7] ^= R(x[ 3]+x[15], 9);
-		x[11] ^= R(x[ 7]+x[ 3],13);  x[15] ^= R(x[11]+x[ 7],18);
-
-		/* Operate on rows. */
-		x[ 1] ^= R(x[ 0]+x[ 3], 7);  x[ 2] ^= R(x[ 1]+x[ 0], 9);
-		x[ 3] ^= R(x[ 2]+x[ 1],13);  x[ 0] ^= R(x[ 3]+x[ 2],18);
-
-		x[ 6] ^= R(x[ 5]+x[ 4], 7);  x[ 7] ^= R(x[ 6]+x[ 5], 9);
-		x[ 4] ^= R(x[ 7]+x[ 6],13);  x[ 5] ^= R(x[ 4]+x[ 7],18);
-
-		x[11] ^= R(x[10]+x[ 9], 7);  x[ 8] ^= R(x[11]+x[10], 9);
-		x[ 9] ^= R(x[ 8]+x[11],13);  x[10] ^= R(x[ 9]+x[ 8],18);
-
-		x[12] ^= R(x[15]+x[14], 7);  x[13] ^= R(x[12]+x[15], 9);
-		x[14] ^= R(x[13]+x[12],13);  x[15] ^= R(x[14]+x[13],18);
+    escrypt_block_t  X;
+    uint32_t        *x = X.w;
+    size_t           i;
+
+    blkcpy_64(&X, (escrypt_block_t *) B);
+    for (i = 0; i < 8; i += 2) {
+#define R(a, b) (((a) << (b)) | ((a) >> (32 - (b))))
+        /* Operate on columns. */
+        x[4] ^= R(x[0] + x[12], 7);
+        x[8] ^= R(x[4] + x[0], 9);
+        x[12] ^= R(x[8] + x[4], 13);
+        x[0] ^= R(x[12] + x[8], 18);
+
+        x[9] ^= R(x[5] + x[1], 7);
+        x[13] ^= R(x[9] + x[5], 9);
+        x[1] ^= R(x[13] + x[9], 13);
+        x[5] ^= R(x[1] + x[13], 18);
+
+        x[14] ^= R(x[10] + x[6], 7);
+        x[2] ^= R(x[14] + x[10], 9);
+        x[6] ^= R(x[2] + x[14], 13);
+        x[10] ^= R(x[6] + x[2], 18);
+
+        x[3] ^= R(x[15] + x[11], 7);
+        x[7] ^= R(x[3] + x[15], 9);
+        x[11] ^= R(x[7] + x[3], 13);
+        x[15] ^= R(x[11] + x[7], 18);
+
+        /* Operate on rows. */
+        x[1] ^= R(x[0] + x[3], 7);
+        x[2] ^= R(x[1] + x[0], 9);
+        x[3] ^= R(x[2] + x[1], 13);
+        x[0] ^= R(x[3] + x[2], 18);
+
+        x[6] ^= R(x[5] + x[4], 7);
+        x[7] ^= R(x[6] + x[5], 9);
+        x[4] ^= R(x[7] + x[6], 13);
+        x[5] ^= R(x[4] + x[7], 18);
+
+        x[11] ^= R(x[10] + x[9], 7);
+        x[8] ^= R(x[11] + x[10], 9);
+        x[9] ^= R(x[8] + x[11], 13);
+        x[10] ^= R(x[9] + x[8], 18);
+
+        x[12] ^= R(x[15] + x[14], 7);
+        x[13] ^= R(x[12] + x[15], 9);
+        x[14] ^= R(x[13] + x[12], 13);
+        x[15] ^= R(x[14] + x[13], 18);
 #undef R
-	}
-	for (i = 0; i < 16; i++)
-		B[i] += x[i];
+    }
+    for (i = 0; i < 16; i++) {
+        B[i] += x[i];
+    }
 }
 
 /**
@@ -148,31 +175,36 @@ salsa20_8(uint32_t B[16])
  * temporary space X must be 64 bytes.
  */
 static void
-blockmix_salsa8(const uint32_t * Bin, uint32_t * Bout, uint32_t * X, size_t r)
+blockmix_salsa8(const uint32_t *Bin, uint32_t *Bout, uint32_t *X, size_t r)
 {
-	size_t i;
-
-	/* 1: X <-- B_{2r - 1} */
-	blkcpy_64((escrypt_block_t*)X, (escrypt_block_t*)&Bin[(2 * r - 1) * 16]);
-
-	/* 2: for i = 0 to 2r - 1 do */
-	for (i = 0; i < 2 * r; i += 2) {
-		/* 3: X <-- H(X \xor B_i) */
-		blkxor_64((escrypt_block_t*)X, (escrypt_block_t*)&Bin[i * 16]);
-		salsa20_8(X);
-
-		/* 4: Y_i <-- X */
-		/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-		blkcpy_64((escrypt_block_t*)&Bout[i * 8], (escrypt_block_t*)X);
-
-		/* 3: X <-- H(X \xor B_i) */
-		blkxor_64((escrypt_block_t*)X, (escrypt_block_t*)&Bin[i * 16 + 16]);
-		salsa20_8(X);
-
-		/* 4: Y_i <-- X */
-		/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-		blkcpy_64((escrypt_block_t*)&Bout[i * 8 + r * 16], (escrypt_block_t*)X);
-	}
+    size_t i;
+
+    /* 1: X <-- B_{2r - 1} */
+    blkcpy_64((escrypt_block_t *) X,
+              (const escrypt_block_t *) &Bin[(2 * r - 1) * 16]);
+
+    /* 2: for i = 0 to 2r - 1 do */
+    for (i = 0; i < 2 * r; i += 2) {
+        /* 3: X <-- H(X \xor B_i) */
+        blkxor_64((escrypt_block_t *) X,
+                  (const escrypt_block_t *) &Bin[i * 16]);
+        salsa20_8(X);
+
+        /* 4: Y_i <-- X */
+        /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+        blkcpy_64((escrypt_block_t *) &Bout[i * 8],
+                  (const escrypt_block_t *) X);
+
+        /* 3: X <-- H(X \xor B_i) */
+        blkxor_64((escrypt_block_t *) X,
+                  (const escrypt_block_t *) &Bin[i * 16 + 16]);
+        salsa20_8(X);
+
+        /* 4: Y_i <-- X */
+        /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+        blkcpy_64((escrypt_block_t *) &Bout[i * 8 + r * 16],
+                  (escrypt_block_t *) X);
+    }
 }
 
 /**
@@ -180,11 +212,11 @@ blockmix_salsa8(const uint32_t * Bin, uint32_t * Bout, uint32_t * X, size_t r)
  * Return the result of parsing B_{2r-1} as a little-endian integer.
  */
 static inline uint64_t
-integerify(const void * B, size_t r)
+integerify(const void *B, size_t r)
 {
-	const uint32_t * X = (const uint32_t *)((uintptr_t)(B) + (2 * r - 1) * 64);
+    const uint32_t *X = (const uint32_t *) ((uintptr_t)(B) + (2 * r - 1) * 64);
 
-	return (((uint64_t)(X[1]) << 32) + X[0]);
+    return (((uint64_t)(X[1]) << 32) + X[0]);
 }
 
 /**
@@ -196,53 +228,58 @@ integerify(const void * B, size_t r)
  * multiple of 64 bytes.
  */
 static void
-smix(uint8_t * B, size_t r, uint64_t N, uint32_t * V, uint32_t * XY)
+smix(uint8_t *B, size_t r, uint64_t N, uint32_t *V, uint32_t *XY)
 {
-	uint32_t * X = XY;
-	uint32_t * Y = &XY[32 * r];
-	uint32_t * Z = &XY[64 * r];
-	uint64_t i;
-	uint64_t j;
-	size_t k;
-
-	/* 1: X <-- B */
-	for (k = 0; k < 32 * r; k++)
-		X[k] = le32dec(&B[4 * k]);
-
-	/* 2: for i = 0 to N - 1 do */
-	for (i = 0; i < N; i += 2) {
-		/* 3: V_i <-- X */
-		blkcpy((escrypt_block_t*)&V[i * (32 * r)], (escrypt_block_t*)X, 128 * r);
-
-		/* 4: X <-- H(X) */
-		blockmix_salsa8(X, Y, Z, r);
-
-		/* 3: V_i <-- X */
-		blkcpy((escrypt_block_t*)&V[(i + 1) * (32 * r)], (escrypt_block_t*)Y, 128 * r);
-
-		/* 4: X <-- H(X) */
-		blockmix_salsa8(Y, X, Z, r);
-	}
-
-	/* 6: for i = 0 to N - 1 do */
-	for (i = 0; i < N; i += 2) {
-		/* 7: j <-- Integerify(X) mod N */
-		j = integerify(X, r) & (N - 1);
-
-		/* 8: X <-- H(X \xor V_j) */
-		blkxor((escrypt_block_t*)X, (escrypt_block_t*)&V[j * (32 * r)], 128 * r);
-		blockmix_salsa8(X, Y, Z, r);
-
-		/* 7: j <-- Integerify(X) mod N */
-		j = integerify(Y, r) & (N - 1);
-
-		/* 8: X <-- H(X \xor V_j) */
-		blkxor((escrypt_block_t*)Y, (escrypt_block_t*)&V[j * (32 * r)], 128 * r);
-		blockmix_salsa8(Y, X, Z, r);
-	}
-	/* 10: B' <-- X */
-	for (k = 0; k < 32 * r; k++)
-		le32enc(&B[4 * k], X[k]);
+    uint32_t *X = XY;
+    uint32_t *Y = &XY[32 * r];
+    uint32_t *Z = &XY[64 * r];
+    uint64_t  i;
+    uint64_t  j;
+    size_t    k;
+
+    /* 1: X <-- B */
+    for (k = 0; k < 32 * r; k++) {
+        X[k] = LOAD32_LE(&B[4 * k]);
+    }
+    /* 2: for i = 0 to N - 1 do */
+    for (i = 0; i < N; i += 2) {
+        /* 3: V_i <-- X */
+        blkcpy((escrypt_block_t *) &V[i * (32 * r)], (escrypt_block_t *) X,
+               128 * r);
+
+        /* 4: X <-- H(X) */
+        blockmix_salsa8(X, Y, Z, r);
+
+        /* 3: V_i <-- X */
+        blkcpy((escrypt_block_t *) &V[(i + 1) * (32 * r)],
+               (escrypt_block_t *) Y, 128 * r);
+
+        /* 4: X <-- H(X) */
+        blockmix_salsa8(Y, X, Z, r);
+    }
+
+    /* 6: for i = 0 to N - 1 do */
+    for (i = 0; i < N; i += 2) {
+        /* 7: j <-- Integerify(X) mod N */
+        j = integerify(X, r) & (N - 1);
+
+        /* 8: X <-- H(X \xor V_j) */
+        blkxor((escrypt_block_t *) X, (escrypt_block_t *) &V[j * (32 * r)],
+               128 * r);
+        blockmix_salsa8(X, Y, Z, r);
+
+        /* 7: j <-- Integerify(X) mod N */
+        j = integerify(Y, r) & (N - 1);
+
+        /* 8: X <-- H(X \xor V_j) */
+        blkxor((escrypt_block_t *) Y, (escrypt_block_t *) &V[j * (32 * r)],
+               128 * r);
+        blockmix_salsa8(Y, X, Z, r);
+    }
+    /* 10: B' <-- X */
+    for (k = 0; k < 32 * r; k++) {
+        STORE32_LE(&B[4 * k], X[k]);
+    }
 }
 
 /**
@@ -256,86 +293,91 @@ smix(uint8_t * B, size_t r, uint64_t N, uint32_t * V, uint32_t * XY)
  * Return 0 on success; or -1 on error.
  */
 int
-escrypt_kdf_nosse(escrypt_local_t * local,
-    const uint8_t * passwd, size_t passwdlen,
-    const uint8_t * salt, size_t saltlen,
-    uint64_t N, uint32_t _r, uint32_t _p,
-    uint8_t * buf, size_t buflen)
+escrypt_kdf_nosse(escrypt_local_t *local, const uint8_t *passwd,
+                  size_t passwdlen, const uint8_t *salt, size_t saltlen,
+                  uint64_t N, uint32_t _r, uint32_t _p, uint8_t *buf,
+                  size_t buflen)
 {
-	size_t B_size, V_size, XY_size, need;
-	uint8_t * B;
-	uint32_t * V, * XY;
-    size_t r = _r, p = _p;
-	uint32_t i;
-
-	/* Sanity-check parameters. */
+    size_t    B_size, V_size, XY_size, need;
+    uint8_t * B;
+    uint32_t *V, *XY;
+    size_t    r = _r, p = _p;
+    uint32_t  i;
+
+/* Sanity-check parameters. */
+    if (r == 0 || p == 0) {
+        errno = EINVAL;
+        return -1;
+    }
 #if SIZE_MAX > UINT32_MAX
-	if (buflen > (((uint64_t)(1) << 32) - 1) * 32) {
-		errno = EFBIG;
-		return -1;
-	}
+    if (buflen > (((uint64_t)(1) << 32) - 1) * 32) {
+        errno = EFBIG;
+        return -1;
+    }
 #endif
-	if ((uint64_t)(r) * (uint64_t)(p) >= (1 << 30)) {
-		errno = EFBIG;
-		return -1;
-	}
-	if (N > UINT32_MAX) {
-		errno = EFBIG;
-		return -1;
-	}
-	if (((N & (N - 1)) != 0) || (N < 2)) {
-		errno = EINVAL;
-		return -1;
-	}
-	if (r == 0 || p == 0) {
-		errno = EINVAL;
-		return -1;
-	}
-	if ((r > SIZE_MAX / 128 / p) ||
+    if ((uint64_t)(r) * (uint64_t)(p) >= ((uint64_t) 1 << 30)) {
+        errno = EFBIG;
+        return -1;
+    }
+    if (N > UINT32_MAX) {
+        errno = EFBIG;
+        return -1;
+    }
+    if (((N & (N - 1)) != 0) || (N < 2)) {
+        errno = EINVAL;
+        return -1;
+    }
+    if (r == 0 || p == 0) {
+        errno = EINVAL;
+        return -1;
+    }
+    if ((r > SIZE_MAX / 128 / p) ||
 #if SIZE_MAX / 256 <= UINT32_MAX
-	    (r > SIZE_MAX / 256) ||
+        (r > SIZE_MAX / 256) ||
 #endif
-	    (N > SIZE_MAX / 128 / r)) {
-		errno = ENOMEM;
-		return -1;
-	}
-
-	/* Allocate memory. */
-	B_size = (size_t)128 * r * p;
-	V_size = (size_t)128 * r * N;
-	need = B_size + V_size;
-	if (need < V_size) {
-		errno = ENOMEM;
-		return -1;
-	}
-	XY_size = (size_t)256 * r + 64;
-	need += XY_size;
-	if (need < XY_size) {
-		errno = ENOMEM;
-		return -1;
-	}
-	if (local->size < need) {
-		if (free_region(local))
-			return -1;
-		if (!alloc_region(local, need))
-			return -1;
-	}
-	B = (uint8_t *)local->aligned;
-	V = (uint32_t *)((uint8_t *)B + B_size);
-	XY = (uint32_t *)((uint8_t *)V + V_size);
-
-	/* 1: (B_0 ... B_{p-1}) <-- PBKDF2(P, S, 1, p * MFLen) */
-	PBKDF2_SHA256(passwd, passwdlen, salt, saltlen, 1, B, B_size);
-
-	/* 2: for i = 0 to p - 1 do */
-	for (i = 0; i < p; i++) {
-		/* 3: B_i <-- MF(B_i, N) */
-		smix(&B[(size_t)128 * i * r], r, N, V, XY);
-	}
-
-	/* 5: DK <-- PBKDF2(P, B, 1, dkLen) */
-	PBKDF2_SHA256(passwd, passwdlen, B, B_size, 1, buf, buflen);
-
-	/* Success! */
-	return 0;
+        (N > SIZE_MAX / 128 / r)) {
+        errno = ENOMEM;
+        return -1;
+    }
+
+    /* Allocate memory. */
+    B_size = (size_t) 128 * r * p;
+    V_size = (size_t) 128 * r * (size_t) N;
+    need   = B_size + V_size;
+    if (need < V_size) {
+        errno = ENOMEM;
+        return -1;
+    }
+    XY_size = (size_t) 256 * r + 64;
+    need += XY_size;
+    if (need < XY_size) {
+        errno = ENOMEM;
+        return -1;
+    }
+    if (local->size < need) {
+        if (free_region(local)) {
+            return -1;
+        }
+        if (!alloc_region(local, need)) {
+            return -1;
+        }
+    }
+    B  = (uint8_t *) local->aligned;
+    V  = (uint32_t *) ((uint8_t *) B + B_size);
+    XY = (uint32_t *) ((uint8_t *) V + V_size);
+
+    /* 1: (B_0 ... B_{p-1}) <-- PBKDF2(P, S, 1, p * MFLen) */
+    PBKDF2_SHA256(passwd, passwdlen, salt, saltlen, 1, B, B_size);
+
+    /* 2: for i = 0 to p - 1 do */
+    for (i = 0; i < p; i++) {
+        /* 3: B_i <-- MF(B_i, N) */
+        smix(&B[(size_t) 128 * i * r], r, N, V, XY);
+    }
+
+    /* 5: DK <-- PBKDF2(P, B, 1, dkLen) */
+    PBKDF2_SHA256(passwd, passwdlen, B, B_size, 1, buf, buflen);
+
+    /* Success! */
+    return 0;
 }
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
index ff6ba57..42cab61 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.c
@@ -24,15 +24,18 @@
  * SUCH DAMAGE.
  */
 
-#include <stdlib.h>
-#include <sys/types.h>
-
+#include <limits.h>
 #include <stdint.h>
+#include <stdlib.h>
 #include <string.h>
 
+#include <sys/types.h>
+
+#include "core.h"
 #include "crypto_auth_hmacsha256.h"
+#include "crypto_pwhash_scryptsalsa208sha256.h"
 #include "pbkdf2-sha256.h"
-#include "sysendian.h"
+#include "private/common.h"
 #include "utils.h"
 
 /**
@@ -41,26 +44,30 @@
  * write the output to buf.  The value dkLen must be at most 32 * (2^32 - 1).
  */
 void
-PBKDF2_SHA256(const uint8_t * passwd, size_t passwdlen, const uint8_t * salt,
-              size_t saltlen, uint64_t c, uint8_t * buf, size_t dkLen)
+PBKDF2_SHA256(const uint8_t *passwd, size_t passwdlen, const uint8_t *salt,
+              size_t saltlen, uint64_t c, uint8_t *buf, size_t dkLen)
 {
     crypto_auth_hmacsha256_state PShctx, hctx;
-    size_t          i;
-    uint8_t         ivec[4];
-    uint8_t         U[32];
-    uint8_t         T[32];
-    uint64_t        j;
-    int             k;
-    size_t          clen;
+    size_t                       i;
+    uint8_t                      ivec[4];
+    uint8_t                      U[32];
+    uint8_t                      T[32];
+    uint64_t                     j;
+    int                          k;
+    size_t                       clen;
 
+#if SIZE_MAX > 0x1fffffffe0ULL
+    COMPILER_ASSERT(crypto_pwhash_scryptsalsa208sha256_BYTES_MAX
+                    <= 0x1fffffffe0ULL);
     if (dkLen > 0x1fffffffe0ULL) {
-        abort();
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
+#endif
     crypto_auth_hmacsha256_init(&PShctx, passwd, passwdlen);
     crypto_auth_hmacsha256_update(&PShctx, salt, saltlen);
 
     for (i = 0; i * 32 < dkLen; i++) {
-        be32enc(ivec, (uint32_t)(i + 1));
+        STORE32_BE(ivec, (uint32_t)(i + 1));
         memcpy(&hctx, &PShctx, sizeof(crypto_auth_hmacsha256_state));
         crypto_auth_hmacsha256_update(&hctx, ivec, 4);
         crypto_auth_hmacsha256_final(&hctx, U);
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h
index dbe1875..f9598c8 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pbkdf2-sha256.h
@@ -28,10 +28,10 @@
 #ifndef pbkdf2_sha256_H
 #define pbkdf2_sha256_H
 
-#include <sys/types.h>
-
 #include <stdint.h>
 
+#include <sys/types.h>
+
 #include "crypto_auth_hmacsha256.h"
 
 /**
@@ -39,7 +39,7 @@
  * Compute PBKDF2(passwd, salt, c, dkLen) using HMAC-SHA256 as the PRF, and
  * write the output to buf.  The value dkLen must be at most 32 * (2^32 - 1).
  */
-void PBKDF2_SHA256(const uint8_t *, size_t, const uint8_t *, size_t,
-                   uint64_t, uint8_t *, size_t);
+void PBKDF2_SHA256(const uint8_t *, size_t, const uint8_t *, size_t, uint64_t,
+                   uint8_t *, size_t);
 
 #endif /* !_SHA256_H_ */
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
index 94eb7d9..b77588f 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/pwhash_scryptsalsa208sha256.c
@@ -7,16 +7,17 @@
 
 #include "crypto_pwhash_scryptsalsa208sha256.h"
 #include "crypto_scrypt.h"
+#include "private/common.h"
 #include "randombytes.h"
 #include "utils.h"
 
-#define SETTING_SIZE(saltbytes) \
-    (sizeof "$7$" - 1U) + \
-    (1U /* N_log2 */) + (5U /* r */) + (5U /* p */) + BYTES2CHARS(saltbytes)
+#define SETTING_SIZE(saltbytes)                                              \
+    ((sizeof "$7$" - 1U) + (1U /* N_log2 */) + (5U /* r */) + (5U /* p */) + \
+     BYTES2CHARS(saltbytes))
 
 static int
 pickparams(unsigned long long opslimit, const size_t memlimit,
-           uint32_t * const N_log2, uint32_t * const p, uint32_t * const r)
+           uint32_t *const N_log2, uint32_t *const p, uint32_t *const r)
 {
     unsigned long long maxN;
     unsigned long long maxrp;
@@ -36,21 +37,56 @@ pickparams(unsigned long long opslimit, const size_t memlimit,
     } else {
         maxN = memlimit / ((size_t) *r * 128);
         for (*N_log2 = 1; *N_log2 < 63; *N_log2 += 1) {
-            if ((uint64_t) (1) << *N_log2 > maxN / 2) {
+            if ((uint64_t)(1) << *N_log2 > maxN / 2) {
                 break;
             }
         }
-        maxrp = (opslimit / 4) / ((uint64_t) (1) << *N_log2);
+        maxrp = (opslimit / 4) / ((uint64_t)(1) << *N_log2);
         /* LCOV_EXCL_START */
         if (maxrp > 0x3fffffff) {
             maxrp = 0x3fffffff;
         }
         /* LCOV_EXCL_STOP */
-        *p = (uint32_t) (maxrp) / *r;
+        *p = (uint32_t)(maxrp) / *r;
     }
     return 0;
 }
 
+static size_t
+sodium_strnlen(const char *str, size_t maxlen)
+{
+    size_t i = 0U;
+
+    while (i < maxlen && str[i] != 0) {
+        i++;
+    }
+    return i;
+}
+
+size_t
+crypto_pwhash_scryptsalsa208sha256_bytes_min(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_BYTES_MIN;
+}
+
+size_t
+crypto_pwhash_scryptsalsa208sha256_bytes_max(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_BYTES_MAX;
+}
+
+size_t
+crypto_pwhash_scryptsalsa208sha256_passwd_min(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN;
+}
+
+size_t
+crypto_pwhash_scryptsalsa208sha256_passwd_max(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX;
+}
+
 size_t
 crypto_pwhash_scryptsalsa208sha256_saltbytes(void)
 {
@@ -69,6 +105,30 @@ crypto_pwhash_scryptsalsa208sha256_strprefix(void)
     return crypto_pwhash_scryptsalsa208sha256_STRPREFIX;
 }
 
+size_t
+crypto_pwhash_scryptsalsa208sha256_opslimit_min(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN;
+}
+
+size_t
+crypto_pwhash_scryptsalsa208sha256_opslimit_max(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX;
+}
+
+size_t
+crypto_pwhash_scryptsalsa208sha256_memlimit_min(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN;
+}
+
+size_t
+crypto_pwhash_scryptsalsa208sha256_memlimit_max(void)
+{
+    return crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX;
+}
+
 size_t
 crypto_pwhash_scryptsalsa208sha256_opslimit_interactive(void)
 {
@@ -94,63 +154,62 @@ crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive(void)
 }
 
 int
-crypto_pwhash_scryptsalsa208sha256(unsigned char * const out,
-                                   unsigned long long outlen,
-                                   const char * const passwd,
-                                   unsigned long long passwdlen,
-                                   const unsigned char * const salt,
-                                   unsigned long long opslimit,
-                                   size_t memlimit)
+crypto_pwhash_scryptsalsa208sha256(unsigned char *const       out,
+                                   unsigned long long         outlen,
+                                   const char *const          passwd,
+                                   unsigned long long         passwdlen,
+                                   const unsigned char *const salt,
+                                   unsigned long long opslimit, size_t memlimit)
 {
     uint32_t N_log2;
     uint32_t p;
     uint32_t r;
 
     memset(out, 0, outlen);
-    if (passwdlen > SIZE_MAX || outlen > SIZE_MAX) {
+    if (passwdlen > crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX ||
+        outlen > crypto_pwhash_scryptsalsa208sha256_BYTES_MAX) {
         errno = EFBIG; /* LCOV_EXCL_LINE */
-        return -1; /* LCOV_EXCL_LINE */
+        return -1;     /* LCOV_EXCL_LINE */
     }
-    if (pickparams(opslimit, memlimit, &N_log2, &p, &r) != 0) {
+    if (outlen < crypto_pwhash_scryptsalsa208sha256_BYTES_MIN ||
+        pickparams(opslimit, memlimit, &N_log2, &p, &r) != 0) {
         errno = EINVAL; /* LCOV_EXCL_LINE */
-        return -1; /* LCOV_EXCL_LINE */
+        return -1;      /* LCOV_EXCL_LINE */
     }
-    return crypto_pwhash_scryptsalsa208sha256_ll((const uint8_t *) passwd,
-                                                 (size_t) passwdlen,
-                                                 (const uint8_t *) salt,
-                                                 crypto_pwhash_scryptsalsa208sha256_SALTBYTES,
-                                                 (uint64_t) (1) << N_log2, r, p,
-                                                 out, (size_t) outlen);
+    return crypto_pwhash_scryptsalsa208sha256_ll(
+        (const uint8_t *) passwd, (size_t) passwdlen, (const uint8_t *) salt,
+        crypto_pwhash_scryptsalsa208sha256_SALTBYTES, (uint64_t)(1) << N_log2,
+        r, p, out, (size_t) outlen);
 }
 
 int
-crypto_pwhash_scryptsalsa208sha256_str(char out[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
-                                       const char * const passwd,
-                                       unsigned long long passwdlen,
-                                       unsigned long long opslimit,
-                                       size_t memlimit)
-{
-    uint8_t         salt[crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES];
-    char            setting[crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES + 1U];
+crypto_pwhash_scryptsalsa208sha256_str(
+    char              out[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
+    const char *const passwd, unsigned long long passwdlen,
+    unsigned long long opslimit, size_t memlimit)
+{
+    uint8_t salt[crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES];
+    char    setting[crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES + 1U];
     escrypt_local_t escrypt_local;
     uint32_t        N_log2;
     uint32_t        p;
     uint32_t        r;
 
     memset(out, 0, crypto_pwhash_scryptsalsa208sha256_STRBYTES);
-    if (passwdlen > SIZE_MAX) {
+    if (passwdlen > crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX) {
         errno = EFBIG; /* LCOV_EXCL_LINE */
-        return -1; /* LCOV_EXCL_LINE */
+        return -1;     /* LCOV_EXCL_LINE */
     }
-    if (pickparams(opslimit, memlimit, &N_log2, &p, &r) != 0) {
+    if (passwdlen < crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN ||
+        pickparams(opslimit, memlimit, &N_log2, &p, &r) != 0) {
         errno = EINVAL; /* LCOV_EXCL_LINE */
-        return -1; /* LCOV_EXCL_LINE */
+        return -1;      /* LCOV_EXCL_LINE */
     }
     randombytes_buf(salt, sizeof salt);
-    if (escrypt_gensalt_r(N_log2, r, p, salt, sizeof salt,
-                          (uint8_t *) setting, sizeof setting) == NULL) {
+    if (escrypt_gensalt_r(N_log2, r, p, salt, sizeof salt, (uint8_t *) setting,
+                          sizeof setting) == NULL) {
         errno = EINVAL; /* LCOV_EXCL_LINE */
-        return -1; /* LCOV_EXCL_LINE */
+        return -1;      /* LCOV_EXCL_LINE */
     }
     if (escrypt_init_local(&escrypt_local) != 0) {
         return -1; /* LCOV_EXCL_LINE */
@@ -166,33 +225,34 @@ crypto_pwhash_scryptsalsa208sha256_str(char out[crypto_pwhash_scryptsalsa208sha2
     }
     escrypt_free_local(&escrypt_local);
 
-    (void) sizeof
-        (int[SETTING_SIZE(crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES)
-            == crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES ? 1 : -1]);
-    (void) sizeof
-        (int[crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES + 1U +
-             crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES_ENCODED + 1U
-             == crypto_pwhash_scryptsalsa208sha256_STRBYTES ? 1 : -1]);
+    COMPILER_ASSERT(
+        SETTING_SIZE(crypto_pwhash_scryptsalsa208sha256_STRSALTBYTES) ==
+        crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES);
+    COMPILER_ASSERT(
+        crypto_pwhash_scryptsalsa208sha256_STRSETTINGBYTES + 1U +
+            crypto_pwhash_scryptsalsa208sha256_STRHASHBYTES_ENCODED + 1U ==
+        crypto_pwhash_scryptsalsa208sha256_STRBYTES);
 
     return 0;
 }
 
 int
-crypto_pwhash_scryptsalsa208sha256_str_verify(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
-                                              const char * const passwd,
-                                              unsigned long long passwdlen)
+crypto_pwhash_scryptsalsa208sha256_str_verify(
+    const char        str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
+    const char *const passwd, unsigned long long passwdlen)
 {
     char            wanted[crypto_pwhash_scryptsalsa208sha256_STRBYTES];
     escrypt_local_t escrypt_local;
     int             ret = -1;
 
-    if (memchr(str, 0, crypto_pwhash_scryptsalsa208sha256_STRBYTES) !=
-        &str[crypto_pwhash_scryptsalsa208sha256_STRBYTES - 1U]) {
+    if (sodium_strnlen(str, crypto_pwhash_scryptsalsa208sha256_STRBYTES) !=
+        crypto_pwhash_scryptsalsa208sha256_STRBYTES - 1U) {
         return -1;
     }
     if (escrypt_init_local(&escrypt_local) != 0) {
         return -1; /* LCOV_EXCL_LINE */
     }
+    memset(wanted, 0, sizeof wanted);
     if (escrypt_r(&escrypt_local, (const uint8_t *) passwd, (size_t) passwdlen,
                   (const uint8_t *) str, (uint8_t *) wanted,
                   sizeof wanted) == NULL) {
@@ -205,3 +265,32 @@ crypto_pwhash_scryptsalsa208sha256_str_verify(const char str[crypto_pwhash_scryp
 
     return ret;
 }
+
+int
+crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(
+    const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
+    unsigned long long opslimit, size_t memlimit)
+{
+    uint32_t N_log2, N_log2_;
+    uint32_t p, p_;
+    uint32_t r, r_;
+
+    if (pickparams(opslimit, memlimit, &N_log2, &p, &r) != 0) {
+        errno = EINVAL;
+        return -1;
+    }
+    if (sodium_strnlen(str, crypto_pwhash_scryptsalsa208sha256_STRBYTES) !=
+        crypto_pwhash_scryptsalsa208sha256_STRBYTES - 1U) {
+        errno = EINVAL;
+        return -1;
+    }
+    if (escrypt_parse_setting((const uint8_t *) str,
+                              &N_log2_, &r_, &p_) == NULL) {
+        errno = EINVAL;
+        return -1;
+    }
+    if (N_log2 != N_log2_ || r != r_ || p != p_) {
+        return 1;
+    }
+    return 0;
+}
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
index 85d4267..cbd68aa 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/scrypt_platform.c
@@ -19,7 +19,7 @@
  */
 
 #ifdef HAVE_SYS_MMAN_H
-# include <sys/mman.h>
+#include <sys/mman.h>
 #endif
 #include <errno.h>
 #include <stdlib.h>
@@ -30,71 +30,79 @@
 #if !defined(MAP_ANON) && defined(MAP_ANONYMOUS)
 # define MAP_ANON MAP_ANONYMOUS
 #endif
+#ifndef MAP_NOCORE
+# define MAP_NOCORE 0
+#endif
+#ifndef MAP_POPULATE
+# define MAP_POPULATE 0
+#endif
 
 void *
-alloc_region(escrypt_region_t * region, size_t size)
+alloc_region(escrypt_region_t *region, size_t size)
 {
-	uint8_t * base, * aligned;
+    uint8_t *base, *aligned;
 #if defined(MAP_ANON) && defined(HAVE_MMAP)
-	if ((base = (uint8_t *) mmap(NULL, size, PROT_READ | PROT_WRITE,
-#ifdef MAP_NOCORE
-	    MAP_ANON | MAP_PRIVATE | MAP_NOCORE,
-#else
-	    MAP_ANON | MAP_PRIVATE,
-#endif
-	    -1, 0)) == MAP_FAILED)
-		base = NULL; /* LCOV_EXCL_LINE */
-	aligned = base;
+    if ((base = (uint8_t *) mmap(NULL, size, PROT_READ | PROT_WRITE,
+                                 MAP_ANON | MAP_PRIVATE | MAP_NOCORE | MAP_POPULATE,
+                                 -1, 0)) == MAP_FAILED) {
+        base = NULL; /* LCOV_EXCL_LINE */
+    }                /* LCOV_EXCL_LINE */
+    aligned  = base;
 #elif defined(HAVE_POSIX_MEMALIGN)
-	if ((errno = posix_memalign((void **) &base, 64, size)) != 0)
-		base = NULL;
-	aligned = base;
+    if ((errno = posix_memalign((void **) &base, 64, size)) != 0) {
+        base = NULL;
+    }
+    aligned = base;
 #else
-	base = aligned = NULL;
-	if (size + 63 < size)
-		errno = ENOMEM;
-	else if ((base = (uint8_t *) malloc(size + 63)) != NULL) {
-		aligned = base + 63;
-		aligned -= (uintptr_t)aligned & 63;
-	}
+    base = aligned = NULL;
+    if (size + 63 < size) {
+        errno = ENOMEM;
+    } else if ((base = (uint8_t *) malloc(size + 63)) != NULL) {
+        aligned = base + 63;
+        aligned -= (uintptr_t) aligned & 63;
+    }
 #endif
-	region->base = base;
-	region->aligned = aligned;
-	region->size = base ? size : 0;
-	return aligned;
+    region->base    = base;
+    region->aligned = aligned;
+    region->size    = base ? size : 0;
+
+    return aligned;
 }
 
 static inline void
-init_region(escrypt_region_t * region)
+init_region(escrypt_region_t *region)
 {
-	region->base = region->aligned = NULL;
-	region->size = 0;
+    region->base = region->aligned = NULL;
+    region->size                   = 0;
 }
 
 int
-free_region(escrypt_region_t * region)
+free_region(escrypt_region_t *region)
 {
-	if (region->base) {
+    if (region->base) {
 #if defined(MAP_ANON) && defined(HAVE_MMAP)
-		if (munmap(region->base, region->size))
-			return -1; /* LCOV_EXCL_LINE */
+        if (munmap(region->base, region->size)) {
+            return -1; /* LCOV_EXCL_LINE */
+        }
 #else
-		free(region->base);
+        free(region->base);
 #endif
-	}
-	init_region(region);
-	return 0;
+    }
+    init_region(region);
+
+    return 0;
 }
 
 int
-escrypt_init_local(escrypt_local_t * local)
+escrypt_init_local(escrypt_local_t *local)
 {
-	init_region(local);
-	return 0;
+    init_region(local);
+
+    return 0;
 }
 
 int
-escrypt_free_local(escrypt_local_t * local)
+escrypt_free_local(escrypt_local_t *local)
 {
-	return free_region(local);
+    return free_region(local);
 }
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
index faba9f1..688f2d3 100644
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
+++ b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sse/pwhash_scryptsalsa208sha256_sse.c
@@ -28,79 +28,80 @@
  * online backup system.
  */
 
-#if defined(HAVE_EMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-#if __GNUC__
-# pragma GCC target("sse2")
-#endif
-#include <emmintrin.h>
-#if defined(__XOP__) && defined(DISABLED)
-# include <x86intrin.h>
-#endif
-
 #include <errno.h>
 #include <limits.h>
 #include <stdint.h>
 #include <stdlib.h>
 #include <string.h>
 
-#include "../pbkdf2-sha256.h"
-#include "../sysendian.h"
-#include "../crypto_scrypt.h"
-
-#if defined(__XOP__) && defined(DISABLED)
-#define ARX(out, in1, in2, s) \
-	out = _mm_xor_si128(out, _mm_roti_epi32(_mm_add_epi32(in1, in2), s));
-#else
-#define ARX(out, in1, in2, s) \
-	{ \
-		__m128i T = _mm_add_epi32(in1, in2); \
-		out = _mm_xor_si128(out, _mm_slli_epi32(T, s)); \
-		out = _mm_xor_si128(out, _mm_srli_epi32(T, 32-s)); \
-	}
-#endif
-
-#define SALSA20_2ROUNDS \
-	/* Operate on "columns". */ \
-	ARX(X1, X0, X3, 7) \
-	ARX(X2, X1, X0, 9) \
-	ARX(X3, X2, X1, 13) \
-	ARX(X0, X3, X2, 18) \
-\
-	/* Rearrange data. */ \
-	X1 = _mm_shuffle_epi32(X1, 0x93); \
-	X2 = _mm_shuffle_epi32(X2, 0x4E); \
-	X3 = _mm_shuffle_epi32(X3, 0x39); \
-\
-	/* Operate on "rows". */ \
-	ARX(X3, X0, X1, 7) \
-	ARX(X2, X3, X0, 9) \
-	ARX(X1, X2, X3, 13) \
-	ARX(X0, X1, X2, 18) \
-\
-	/* Rearrange data. */ \
-	X1 = _mm_shuffle_epi32(X1, 0x39); \
-	X2 = _mm_shuffle_epi32(X2, 0x4E); \
-	X3 = _mm_shuffle_epi32(X3, 0x93);
+#include "private/common.h"
+#include "private/sse2_64_32.h"
+
+#ifdef HAVE_EMMINTRIN_H
+
+# ifdef __GNUC__
+#  pragma GCC target("sse2")
+# endif
+# include <emmintrin.h>
+# if defined(__XOP__) && defined(DISABLED)
+#  include <x86intrin.h>
+# endif
+
+# include "../crypto_scrypt.h"
+# include "../pbkdf2-sha256.h"
+
+# if defined(__XOP__) && defined(DISABLED)
+#  define ARX(out, in1, in2, s) \
+    out = _mm_xor_si128(out, _mm_roti_epi32(_mm_add_epi32(in1, in2), s));
+# else
+#  define ARX(out, in1, in2, s)                                    \
+    {                                                              \
+        __m128i T = _mm_add_epi32(in1, in2);                       \
+        out       = _mm_xor_si128(out, _mm_slli_epi32(T, s));      \
+        out       = _mm_xor_si128(out, _mm_srli_epi32(T, 32 - s)); \
+    }
+# endif
+
+# define SALSA20_2ROUNDS              \
+    /* Operate on "columns". */       \
+    ARX(X1, X0, X3, 7)                \
+    ARX(X2, X1, X0, 9)                \
+    ARX(X3, X2, X1, 13)               \
+    ARX(X0, X3, X2, 18)               \
+                                      \
+    /* Rearrange data. */             \
+    X1 = _mm_shuffle_epi32(X1, 0x93); \
+    X2 = _mm_shuffle_epi32(X2, 0x4E); \
+    X3 = _mm_shuffle_epi32(X3, 0x39); \
+                                      \
+    /* Operate on "rows". */          \
+    ARX(X3, X0, X1, 7)                \
+    ARX(X2, X3, X0, 9)                \
+    ARX(X1, X2, X3, 13)               \
+    ARX(X0, X1, X2, 18)               \
+                                      \
+    /* Rearrange data. */             \
+    X1 = _mm_shuffle_epi32(X1, 0x39); \
+    X2 = _mm_shuffle_epi32(X2, 0x4E); \
+    X3 = _mm_shuffle_epi32(X3, 0x93);
 
 /**
  * Apply the salsa20/8 core to the block provided in (X0 ... X3) ^ (Z0 ... Z3).
  */
-#define SALSA20_8_XOR(in, out) \
-	{ \
-		__m128i Y0 = X0 = _mm_xor_si128(X0, (in)[0]); \
-		__m128i Y1 = X1 = _mm_xor_si128(X1, (in)[1]); \
-		__m128i Y2 = X2 = _mm_xor_si128(X2, (in)[2]); \
-		__m128i Y3 = X3 = _mm_xor_si128(X3, (in)[3]); \
-		SALSA20_2ROUNDS \
-		SALSA20_2ROUNDS \
-		SALSA20_2ROUNDS \
-		SALSA20_2ROUNDS \
-		(out)[0] = X0 = _mm_add_epi32(X0, Y0); \
-		(out)[1] = X1 = _mm_add_epi32(X1, Y1); \
-		(out)[2] = X2 = _mm_add_epi32(X2, Y2); \
-		(out)[3] = X3 = _mm_add_epi32(X3, Y3); \
-	}
+# define SALSA20_8_XOR(in, out)                               \
+    {                                                         \
+        __m128i Y0 = X0 = _mm_xor_si128(X0, (in)[0]);         \
+        __m128i Y1 = X1 = _mm_xor_si128(X1, (in)[1]);         \
+        __m128i Y2 = X2 = _mm_xor_si128(X2, (in)[2]);         \
+        __m128i Y3 = X3 = _mm_xor_si128(X3, (in)[3]);         \
+        SALSA20_2ROUNDS                                       \
+        SALSA20_2ROUNDS                                       \
+        SALSA20_2ROUNDS                                       \
+        SALSA20_2ROUNDS(out)[0] = X0 = _mm_add_epi32(X0, Y0); \
+        (out)[1] = X1 = _mm_add_epi32(X1, Y1);                \
+        (out)[2] = X2 = _mm_add_epi32(X2, Y2);                \
+        (out)[3] = X3 = _mm_add_epi32(X3, Y3);                \
+    }
 
 /**
  * blockmix_salsa8(Bin, Bout, r):
@@ -108,113 +109,114 @@
  * bytes in length; the output Bout must also be the same size.
  */
 static inline void
-blockmix_salsa8(const __m128i * Bin, __m128i * Bout, size_t r)
+blockmix_salsa8(const __m128i *Bin, __m128i *Bout, size_t r)
 {
-	__m128i X0, X1, X2, X3;
-	size_t i;
-
-	/* 1: X <-- B_{2r - 1} */
-	X0 = Bin[8 * r - 4];
-	X1 = Bin[8 * r - 3];
-	X2 = Bin[8 * r - 2];
-	X3 = Bin[8 * r - 1];
-
-	/* 3: X <-- H(X \xor B_i) */
-	/* 4: Y_i <-- X */
-	/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-	SALSA20_8_XOR(Bin, Bout)
-
-	/* 2: for i = 0 to 2r - 1 do */
-	r--;
-	for (i = 0; i < r;) {
-		/* 3: X <-- H(X \xor B_i) */
-		/* 4: Y_i <-- X */
-		/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-		SALSA20_8_XOR(&Bin[i * 8 + 4], &Bout[(r + i) * 4 + 4])
-
-		i++;
-
-		/* 3: X <-- H(X \xor B_i) */
-		/* 4: Y_i <-- X */
-		/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-		SALSA20_8_XOR(&Bin[i * 8], &Bout[i * 4])
-	}
-
-	/* 3: X <-- H(X \xor B_i) */
-	/* 4: Y_i <-- X */
-	/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-	SALSA20_8_XOR(&Bin[i * 8 + 4], &Bout[(r + i) * 4 + 4])
+    __m128i X0, X1, X2, X3;
+    size_t  i;
+
+    /* 1: X <-- B_{2r - 1} */
+    X0 = Bin[8 * r - 4];
+    X1 = Bin[8 * r - 3];
+    X2 = Bin[8 * r - 2];
+    X3 = Bin[8 * r - 1];
+
+    /* 3: X <-- H(X \xor B_i) */
+    /* 4: Y_i <-- X */
+    /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+    SALSA20_8_XOR(Bin, Bout)
+
+    /* 2: for i = 0 to 2r - 1 do */
+    r--;
+    for (i = 0; i < r;) {
+        /* 3: X <-- H(X \xor B_i) */
+        /* 4: Y_i <-- X */
+        /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+        SALSA20_8_XOR(&Bin[i * 8 + 4], &Bout[(r + i) * 4 + 4])
+
+        i++;
+
+        /* 3: X <-- H(X \xor B_i) */
+        /* 4: Y_i <-- X */
+        /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+        SALSA20_8_XOR(&Bin[i * 8], &Bout[i * 4])
+    }
+
+    /* 3: X <-- H(X \xor B_i) */
+    /* 4: Y_i <-- X */
+    /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+    SALSA20_8_XOR(&Bin[i * 8 + 4], &Bout[(r + i) * 4 + 4])
 }
 
-#define XOR4(in) \
-	X0 = _mm_xor_si128(X0, (in)[0]); \
-	X1 = _mm_xor_si128(X1, (in)[1]); \
-	X2 = _mm_xor_si128(X2, (in)[2]); \
-	X3 = _mm_xor_si128(X3, (in)[3]);
+# define XOR4(in)                    \
+    X0 = _mm_xor_si128(X0, (in)[0]); \
+    X1 = _mm_xor_si128(X1, (in)[1]); \
+    X2 = _mm_xor_si128(X2, (in)[2]); \
+    X3 = _mm_xor_si128(X3, (in)[3]);
 
-#define XOR4_2(in1, in2) \
-	X0 = _mm_xor_si128((in1)[0], (in2)[0]); \
-	X1 = _mm_xor_si128((in1)[1], (in2)[1]); \
-	X2 = _mm_xor_si128((in1)[2], (in2)[2]); \
-	X3 = _mm_xor_si128((in1)[3], (in2)[3]);
+# define XOR4_2(in1, in2)                   \
+    X0 = _mm_xor_si128((in1)[0], (in2)[0]); \
+    X1 = _mm_xor_si128((in1)[1], (in2)[1]); \
+    X2 = _mm_xor_si128((in1)[2], (in2)[2]); \
+    X3 = _mm_xor_si128((in1)[3], (in2)[3]);
 
 static inline uint32_t
-blockmix_salsa8_xor(const __m128i * Bin1, const __m128i * Bin2, __m128i * Bout,
-    size_t r)
+blockmix_salsa8_xor(const __m128i *Bin1, const __m128i *Bin2, __m128i *Bout,
+                    size_t r)
 {
-	__m128i X0, X1, X2, X3;
-	size_t i;
-
-	/* 1: X <-- B_{2r - 1} */
-	XOR4_2(&Bin1[8 * r - 4], &Bin2[8 * r - 4])
-
-	/* 3: X <-- H(X \xor B_i) */
-	/* 4: Y_i <-- X */
-	/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-	XOR4(Bin1)
-	SALSA20_8_XOR(Bin2, Bout)
-
-	/* 2: for i = 0 to 2r - 1 do */
-	r--;
-	for (i = 0; i < r;) {
-		/* 3: X <-- H(X \xor B_i) */
-		/* 4: Y_i <-- X */
-		/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-		XOR4(&Bin1[i * 8 + 4])
-		SALSA20_8_XOR(&Bin2[i * 8 + 4], &Bout[(r + i) * 4 + 4])
-
-		i++;
-
-		/* 3: X <-- H(X \xor B_i) */
-		/* 4: Y_i <-- X */
-		/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-		XOR4(&Bin1[i * 8])
-		SALSA20_8_XOR(&Bin2[i * 8], &Bout[i * 4])
-	}
-
-	/* 3: X <-- H(X \xor B_i) */
-	/* 4: Y_i <-- X */
-	/* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
-	XOR4(&Bin1[i * 8 + 4])
-	SALSA20_8_XOR(&Bin2[i * 8 + 4], &Bout[(r + i) * 4 + 4])
-
-	return _mm_cvtsi128_si32(X0);
+    __m128i X0, X1, X2, X3;
+    size_t  i;
+
+    /* 1: X <-- B_{2r - 1} */
+    XOR4_2(&Bin1[8 * r - 4], &Bin2[8 * r - 4])
+
+    /* 3: X <-- H(X \xor B_i) */
+    /* 4: Y_i <-- X */
+    /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+    XOR4(Bin1)
+    SALSA20_8_XOR(Bin2, Bout)
+
+    /* 2: for i = 0 to 2r - 1 do */
+    r--;
+    for (i = 0; i < r;) {
+        /* 3: X <-- H(X \xor B_i) */
+        /* 4: Y_i <-- X */
+        /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+        XOR4(&Bin1[i * 8 + 4])
+        SALSA20_8_XOR(&Bin2[i * 8 + 4], &Bout[(r + i) * 4 + 4])
+
+        i++;
+
+        /* 3: X <-- H(X \xor B_i) */
+        /* 4: Y_i <-- X */
+        /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+        XOR4(&Bin1[i * 8])
+        SALSA20_8_XOR(&Bin2[i * 8], &Bout[i * 4])
+    }
+
+    /* 3: X <-- H(X \xor B_i) */
+    /* 4: Y_i <-- X */
+    /* 6: B' <-- (Y_0, Y_2 ... Y_{2r-2}, Y_1, Y_3 ... Y_{2r-1}) */
+    XOR4(&Bin1[i * 8 + 4])
+    SALSA20_8_XOR(&Bin2[i * 8 + 4], &Bout[(r + i) * 4 + 4])
+
+    return _mm_cvtsi128_si32(X0);
 }
 
-#undef ARX
-#undef SALSA20_2ROUNDS
-#undef SALSA20_8_XOR
-#undef XOR4
-#undef XOR4_2
+# undef ARX
+# undef SALSA20_2ROUNDS
+# undef SALSA20_8_XOR
+# undef XOR4
+# undef XOR4_2
 
 /**
  * integerify(B, r):
  * Return the result of parsing B_{2r-1} as a little-endian integer.
+ * Note that B's layout is permuted compared to the generic implementation.
  */
 static inline uint32_t
-integerify(const void * B, size_t r)
+integerify(const void *B, size_t r)
 {
-	return *(const uint32_t *)((uintptr_t)(B) + (2 * r - 1) * 64);
+    return *(const uint32_t *) ((uintptr_t)(B) + (2 * r - 1) * 64);
 }
 
 /**
@@ -226,73 +228,71 @@ integerify(const void * B, size_t r)
  * multiple of 64 bytes.
  */
 static void
-smix(uint8_t * B, size_t r, uint32_t N, void * V, void * XY)
+smix(uint8_t *B, size_t r, uint32_t N, void *V, void *XY)
 {
-	size_t s = 128 * r;
-	__m128i * X = (__m128i *) V, * Y;
-	uint32_t * X32 = (uint32_t *) V;
-	uint32_t i, j;
-	size_t k;
-
-	/* 1: X <-- B */
-	/* 3: V_i <-- X */
-	for (k = 0; k < 2 * r; k++) {
-		for (i = 0; i < 16; i++) {
-			X32[k * 16 + i] =
-			    le32dec(&B[(k * 16 + (i * 5 % 16)) * 4]);
-		}
-	}
-
-	/* 2: for i = 0 to N - 1 do */
-	for (i = 1; i < N - 1; i += 2) {
-		/* 4: X <-- H(X) */
-		/* 3: V_i <-- X */
-		Y = (__m128i *)((uintptr_t)(V) + i * s);
-		blockmix_salsa8(X, Y, r);
-
-		/* 4: X <-- H(X) */
-		/* 3: V_i <-- X */
-		X = (__m128i *)((uintptr_t)(V) + (i + 1) * s);
-		blockmix_salsa8(Y, X, r);
-	}
-
-	/* 4: X <-- H(X) */
-	/* 3: V_i <-- X */
-	Y = (__m128i *)((uintptr_t)(V) + i * s);
-	blockmix_salsa8(X, Y, r);
-
-	/* 4: X <-- H(X) */
-	/* 3: V_i <-- X */
-	X = (__m128i *) XY;
-	blockmix_salsa8(Y, X, r);
-
-	X32 = (uint32_t *) XY;
-	Y = (__m128i *)((uintptr_t)(XY) + s);
-
-	/* 7: j <-- Integerify(X) mod N */
-	j = integerify(X, r) & (N - 1);
-
-	/* 6: for i = 0 to N - 1 do */
-	for (i = 0; i < N; i += 2) {
-		__m128i * V_j = (__m128i *)((uintptr_t)(V) + j * s);
-
-		/* 8: X <-- H(X \xor V_j) */
-		/* 7: j <-- Integerify(X) mod N */
-		j = blockmix_salsa8_xor(X, V_j, Y, r) & (N - 1);
-		V_j = (__m128i *)((uintptr_t)(V) + j * s);
-
-		/* 8: X <-- H(X \xor V_j) */
-		/* 7: j <-- Integerify(X) mod N */
-		j = blockmix_salsa8_xor(Y, V_j, X, r) & (N - 1);
-	}
-
-	/* 10: B' <-- X */
-	for (k = 0; k < 2 * r; k++) {
-		for (i = 0; i < 16; i++) {
-			le32enc(&B[(k * 16 + (i * 5 % 16)) * 4],
-			    X32[k * 16 + i]);
-		}
-	}
+    size_t    s   = 128 * r;
+    __m128i * X   = (__m128i *) V, *Y;
+    uint32_t *X32 = (uint32_t *) V;
+    uint32_t  i, j;
+    size_t    k;
+
+    /* 1: X <-- B */
+    /* 3: V_i <-- X */
+    for (k = 0; k < 2 * r; k++) {
+        for (i = 0; i < 16; i++) {
+            X32[k * 16 + i] = LOAD32_LE(&B[(k * 16 + (i * 5 % 16)) * 4]);
+        }
+    }
+
+    /* 2: for i = 0 to N - 1 do */
+    for (i = 1; i < N - 1; i += 2) {
+        /* 4: X <-- H(X) */
+        /* 3: V_i <-- X */
+        Y = (__m128i *) ((uintptr_t)(V) + i * s);
+        blockmix_salsa8(X, Y, r);
+
+        /* 4: X <-- H(X) */
+        /* 3: V_i <-- X */
+        X = (__m128i *) ((uintptr_t)(V) + (i + 1) * s);
+        blockmix_salsa8(Y, X, r);
+    }
+
+    /* 4: X <-- H(X) */
+    /* 3: V_i <-- X */
+    Y = (__m128i *) ((uintptr_t)(V) + i * s);
+    blockmix_salsa8(X, Y, r);
+
+    /* 4: X <-- H(X) */
+    /* 3: V_i <-- X */
+    X = (__m128i *) XY;
+    blockmix_salsa8(Y, X, r);
+
+    X32 = (uint32_t *) XY;
+    Y   = (__m128i *) ((uintptr_t)(XY) + s);
+
+    /* 7: j <-- Integerify(X) mod N */
+    j = integerify(X, r) & (N - 1);
+
+    /* 6: for i = 0 to N - 1 do */
+    for (i = 0; i < N; i += 2) {
+        __m128i *V_j = (__m128i *) ((uintptr_t)(V) + j * s);
+
+        /* 8: X <-- H(X \xor V_j) */
+        /* 7: j <-- Integerify(X) mod N */
+        j   = blockmix_salsa8_xor(X, V_j, Y, r) & (N - 1);
+        V_j = (__m128i *) ((uintptr_t)(V) + j * s);
+
+        /* 8: X <-- H(X \xor V_j) */
+        /* 7: j <-- Integerify(X) mod N */
+        j = blockmix_salsa8_xor(Y, V_j, X, r) & (N - 1);
+    }
+
+    /* 10: B' <-- X */
+    for (k = 0; k < 2 * r; k++) {
+        for (i = 0; i < 16; i++) {
+            STORE32_LE(&B[(k * 16 + (i * 5 % 16)) * 4], X32[k * 16 + i]);
+        }
+    }
 }
 
 /**
@@ -306,87 +306,99 @@ smix(uint8_t * B, size_t r, uint32_t N, void * V, void * XY)
  * Return 0 on success; or -1 on error.
  */
 int
-escrypt_kdf_sse(escrypt_local_t * local,
-    const uint8_t * passwd, size_t passwdlen,
-    const uint8_t * salt, size_t saltlen,
-    uint64_t N, uint32_t _r, uint32_t _p,
-    uint8_t * buf, size_t buflen)
+escrypt_kdf_sse(escrypt_local_t *local, const uint8_t *passwd, size_t passwdlen,
+                const uint8_t *salt, size_t saltlen, uint64_t N, uint32_t _r,
+                uint32_t _p, uint8_t *buf, size_t buflen)
 {
-	size_t B_size, V_size, XY_size, need;
-	uint8_t * B;
-	uint32_t * V, * XY;
-    size_t r = _r, p = _p;
-	uint32_t i;
-
-	/* Sanity-check parameters. */
-#if SIZE_MAX > UINT32_MAX
-	if (buflen > (((uint64_t)(1) << 32) - 1) * 32) {
-		errno = EFBIG;
-		return -1;
-	}
-#endif
-	if ((uint64_t)(r) * (uint64_t)(p) >= (1 << 30)) {
-		errno = EFBIG;
-		return -1;
-	}
-	if (N > UINT32_MAX) {
-		errno = EFBIG;
-		return -1;
-	}
-	if (((N & (N - 1)) != 0) || (N < 2)) {
-		errno = EINVAL;
-		return -1;
-	}
-	if (r == 0 || p == 0) {
-		errno = EINVAL;
-		return -1;
-	}
-	if ((r > SIZE_MAX / 128 / p) ||
-#if SIZE_MAX / 256 <= UINT32_MAX
-	    (r > SIZE_MAX / 256) ||
-#endif
-	    (N > SIZE_MAX / 128 / r)) {
-		errno = ENOMEM;
-		return -1;
-	}
-
-	/* Allocate memory. */
-	B_size = (size_t)128 * r * p;
-	V_size = (size_t)128 * r * N;
-	need = B_size + V_size;
-	if (need < V_size) {
-		errno = ENOMEM;
-		return -1;
-	}
-	XY_size = (size_t)256 * r + 64;
-	need += XY_size;
-	if (need < XY_size) {
-		errno = ENOMEM;
-		return -1;
-	}
-	if (local->size < need) {
-		if (free_region(local))
-			return -1; /* LCOV_EXCL_LINE */
-		if (!alloc_region(local, need))
-			return -1; /* LCOV_EXCL_LINE */
-	}
-	B = (uint8_t *)local->aligned;
-	V = (uint32_t *)((uint8_t *)B + B_size);
-	XY = (uint32_t *)((uint8_t *)V + V_size);
-
-	/* 1: (B_0 ... B_{p-1}) <-- PBKDF2(P, S, 1, p * MFLen) */
-	PBKDF2_SHA256(passwd, passwdlen, salt, saltlen, 1, B, B_size);
-
-	/* 2: for i = 0 to p - 1 do */
-	for (i = 0; i < p; i++) {
-		/* 3: B_i <-- MF(B_i, N) */
-		smix(&B[(size_t)128 * i * r], r, (uint32_t) N, V, XY);
-	}
-
-	/* 5: DK <-- PBKDF2(P, B, 1, dkLen) */
-	PBKDF2_SHA256(passwd, passwdlen, B, B_size, 1, buf, buflen);
-
-	/* Success! */
-	return 0;
+    size_t    B_size, V_size, XY_size, need;
+    uint8_t * B;
+    uint32_t *V, *XY;
+    size_t    r = _r, p = _p;
+    uint32_t  i;
+
+/* Sanity-check parameters. */
+    if (r == 0 || p == 0) {
+        errno = EINVAL;
+        return -1;
+    }
+# if SIZE_MAX > UINT32_MAX
+/* LCOV_EXCL_START */
+    if (buflen > (((uint64_t)(1) << 32) - 1) * 32) {
+        errno = EFBIG;
+        return -1;
+    }
+/* LCOV_EXCL_END */
+# endif
+    if ((uint64_t)(r) * (uint64_t)(p) >= ((uint64_t) 1 << 30)) {
+        errno = EFBIG;
+        return -1;
+    }
+    if (N > UINT32_MAX) {
+        errno = EFBIG;
+        return -1;
+    }
+    if (((N & (N - 1)) != 0) || (N < 2)) {
+        errno = EINVAL;
+        return -1;
+    }
+    if (r == 0 || p == 0) {
+        errno = EINVAL;
+        return -1;
+    }
+/* LCOV_EXCL_START */
+    if ((r > SIZE_MAX / 128 / p) ||
+# if SIZE_MAX / 256 <= UINT32_MAX
+        (r > SIZE_MAX / 256) ||
+# endif
+        (N > SIZE_MAX / 128 / r)) {
+        errno = ENOMEM;
+        return -1;
+    }
+/* LCOV_EXCL_END */
+
+    /* Allocate memory. */
+    B_size = (size_t) 128 * r * p;
+    V_size = (size_t) 128 * r * N;
+    need   = B_size + V_size;
+/* LCOV_EXCL_START */
+    if (need < V_size) {
+        errno = ENOMEM;
+        return -1;
+    }
+/* LCOV_EXCL_END */
+    XY_size = (size_t) 256 * r + 64;
+    need += XY_size;
+/* LCOV_EXCL_START */
+    if (need < XY_size) {
+        errno = ENOMEM;
+        return -1;
+    }
+/* LCOV_EXCL_END */
+    if (local->size < need) {
+        if (free_region(local)) {
+            return -1; /* LCOV_EXCL_LINE */
+        }
+        if (!alloc_region(local, need)) {
+            return -1; /* LCOV_EXCL_LINE */
+        }
+    }
+    B  = (uint8_t *) local->aligned;
+    V  = (uint32_t *) ((uint8_t *) B + B_size);
+    XY = (uint32_t *) ((uint8_t *) V + V_size);
+
+    /* 1: (B_0 ... B_{p-1}) <-- PBKDF2(P, S, 1, p * MFLen) */
+    PBKDF2_SHA256(passwd, passwdlen, salt, saltlen, 1, B, B_size);
+
+    /* 2: for i = 0 to p - 1 do */
+    for (i = 0; i < p; i++) {
+        /* 3: B_i <-- MF(B_i, N) */
+        smix(&B[(size_t) 128 * i * r], r, (uint32_t) N, V, XY);
+    }
+
+    /* 5: DK <-- PBKDF2(P, B, 1, dkLen) */
+    PBKDF2_SHA256(passwd, passwdlen, B, B_size, 1, buf, buflen);
+
+    /* Success! */
+    return 0;
 }
 #endif
diff --git a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sysendian.h b/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sysendian.h
deleted file mode 100644
index 080aae8..0000000
--- a/libsodium/src/libsodium/crypto_pwhash/scryptsalsa208sha256/sysendian.h
+++ /dev/null
@@ -1,146 +0,0 @@
-#ifndef sysendian_H
-#define sysendian_H
-
-#include <stdint.h>
-
-/* Avoid namespace collisions with BSD <sys/endian.h>. */
-#define be16dec scrypt_be16dec
-#define be16enc scrypt_be16enc
-#define be32dec scrypt_be32dec
-#define be32enc scrypt_be32enc
-#define be64dec scrypt_be64dec
-#define be64enc scrypt_be64enc
-#define le16dec scrypt_le16dec
-#define le16enc scrypt_le16enc
-#define le32dec scrypt_le32dec
-#define le32enc scrypt_le32enc
-#define le64dec scrypt_le64dec
-#define le64enc scrypt_le64enc
-
-static inline uint16_t
-be16dec(const void *pp)
-{
-	const uint8_t *p = (uint8_t const *)pp;
-
-	return ((uint16_t)(p[1]) + ((uint16_t)(p[0]) << 8));
-}
-
-static inline void
-be16enc(void *pp, uint16_t x)
-{
-	uint8_t * p = (uint8_t *)pp;
-
-	p[1] = x & 0xff;
-	p[0] = (x >> 8) & 0xff;
-}
-
-static inline uint32_t
-be32dec(const void *pp)
-{
-	const uint8_t *p = (uint8_t const *)pp;
-
-	return ((uint32_t)(p[3]) + ((uint32_t)(p[2]) << 8) +
-	    ((uint32_t)(p[1]) << 16) + ((uint32_t)(p[0]) << 24));
-}
-
-static inline void
-be32enc(void *pp, uint32_t x)
-{
-	uint8_t * p = (uint8_t *)pp;
-
-	p[3] = x & 0xff;
-	p[2] = (x >> 8) & 0xff;
-	p[1] = (x >> 16) & 0xff;
-	p[0] = (x >> 24) & 0xff;
-}
-
-static inline uint64_t
-be64dec(const void *pp)
-{
-	const uint8_t *p = (uint8_t const *)pp;
-
-	return ((uint64_t)(p[7]) + ((uint64_t)(p[6]) << 8) +
-	    ((uint64_t)(p[5]) << 16) + ((uint64_t)(p[4]) << 24) +
-	    ((uint64_t)(p[3]) << 32) + ((uint64_t)(p[2]) << 40) +
-	    ((uint64_t)(p[1]) << 48) + ((uint64_t)(p[0]) << 56));
-}
-
-static inline void
-be64enc(void *pp, uint64_t x)
-{
-	uint8_t * p = (uint8_t *)pp;
-
-	p[7] = x & 0xff;
-	p[6] = (x >> 8) & 0xff;
-	p[5] = (x >> 16) & 0xff;
-	p[4] = (x >> 24) & 0xff;
-	p[3] = (x >> 32) & 0xff;
-	p[2] = (x >> 40) & 0xff;
-	p[1] = (x >> 48) & 0xff;
-	p[0] = (x >> 56) & 0xff;
-}
-
-static inline uint16_t
-le16dec(const void *pp)
-{
-	const uint8_t *p = (uint8_t const *)pp;
-
-	return ((uint16_t)(p[0]) + ((uint16_t)(p[1]) << 8));
-}
-
-static inline void
-le16enc(void *pp, uint16_t x)
-{
-	uint8_t * p = (uint8_t *)pp;
-
-	p[0] = x & 0xff;
-	p[1] = (x >> 8) & 0xff;
-}
-
-static inline uint32_t
-le32dec(const void *pp)
-{
-	const uint8_t *p = (uint8_t const *)pp;
-
-	return ((uint32_t)(p[0]) + ((uint32_t)(p[1]) << 8) +
-	    ((uint32_t)(p[2]) << 16) + ((uint32_t)(p[3]) << 24));
-}
-
-static inline void
-le32enc(void *pp, uint32_t x)
-{
-	uint8_t * p = (uint8_t *)pp;
-
-	p[0] = x & 0xff;
-	p[1] = (x >> 8) & 0xff;
-	p[2] = (x >> 16) & 0xff;
-	p[3] = (x >> 24) & 0xff;
-}
-
-static inline uint64_t
-le64dec(const void *pp)
-{
-	const uint8_t *p = (uint8_t const *)pp;
-
-	return ((uint64_t)(p[0]) + ((uint64_t)(p[1]) << 8) +
-	    ((uint64_t)(p[2]) << 16) + ((uint64_t)(p[3]) << 24) +
-	    ((uint64_t)(p[4]) << 32) + ((uint64_t)(p[5]) << 40) +
-	    ((uint64_t)(p[6]) << 48) + ((uint64_t)(p[7]) << 56));
-}
-
-static inline void
-le64enc(void *pp, uint64_t x)
-{
-	uint8_t * p = (uint8_t *)pp;
-
-	p[0] = x & 0xff;
-	p[1] = (x >> 8) & 0xff;
-	p[2] = (x >> 16) & 0xff;
-	p[3] = (x >> 24) & 0xff;
-	p[4] = (x >> 32) & 0xff;
-	p[5] = (x >> 40) & 0xff;
-	p[6] = (x >> 48) & 0xff;
-	p[7] = (x >> 56) & 0xff;
-}
-
-#endif /* !_SYSENDIAN_H_ */
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c
deleted file mode 100644
index 66c4575..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.c
+++ /dev/null
@@ -1,481 +0,0 @@
-/* Copyright 2008, Google Inc.
- * All rights reserved.
- *
- * Code released into the public domain.
- *
- * curve25519-donna: Curve25519 elliptic curve, public key function
- *
- * http://code.google.com/p/curve25519-donna/
- *
- * Adam Langley <agl@imperialviolet.org>
- * Parts optimised by floodyberry
- * Derived from public domain C code by Daniel J. Bernstein <djb@cr.yp.to>
- *
- * More information about curve25519 can be found here
- *   http://cr.yp.to/ecdh.html
- *
- * djb's sample implementation of curve25519 is written in a special assembly
- * language called qhasm and uses the floating point registers.
- *
- * This is, almost, a clean room reimplementation from the curve25519 paper. It
- * uses many of the tricks described therein. Only the crecip function is taken
- * from the sample implementation.
- */
-
-#include <string.h>
-#include <stdint.h>
-
-#ifdef HAVE_TI_MODE
-
-#include "utils.h"
-#include "curve25519_donna_c64.h"
-#include "../scalarmult_curve25519.h"
-
-typedef uint8_t u8;
-typedef uint64_t limb;
-typedef limb felem[5];
-// This is a special gcc mode for 128-bit integers. It's implemented on 64-bit
-// platforms only as far as I know.
-typedef unsigned uint128_t __attribute__((mode(TI)));
-
-/* Sum two numbers: output += in */
-static inline void
-fsum(limb *output, const limb *in) {
-  output[0] += in[0];
-  output[1] += in[1];
-  output[2] += in[2];
-  output[3] += in[3];
-  output[4] += in[4];
-}
-
-/* Find the difference of two numbers: output = in - output
- * (note the order of the arguments!)
- *
- * Assumes that out[i] < 2**52
- * On return, out[i] < 2**55
- */
-static inline void
-fdifference_backwards(felem out, const felem in) {
-  /* 152 is 19 << 3 */
-  static const limb two54m152 = (((limb)1) << 54) - 152;
-  static const limb two54m8 = (((limb)1) << 54) - 8;
-
-  out[0] = in[0] + two54m152 - out[0];
-  out[1] = in[1] + two54m8 - out[1];
-  out[2] = in[2] + two54m8 - out[2];
-  out[3] = in[3] + two54m8 - out[3];
-  out[4] = in[4] + two54m8 - out[4];
-}
-
-/* Multiply a number by a scalar: output = in * scalar */
-static inline void
-fscalar_product(felem output, const felem in, const limb scalar) {
-  uint128_t a;
-
-  a = ((uint128_t) in[0]) * scalar;
-  output[0] = ((limb)a) & 0x7ffffffffffff;
-
-  a = ((uint128_t) in[1]) * scalar + ((limb) (a >> 51));
-  output[1] = ((limb)a) & 0x7ffffffffffff;
-
-  a = ((uint128_t) in[2]) * scalar + ((limb) (a >> 51));
-  output[2] = ((limb)a) & 0x7ffffffffffff;
-
-  a = ((uint128_t) in[3]) * scalar + ((limb) (a >> 51));
-  output[3] = ((limb)a) & 0x7ffffffffffff;
-
-  a = ((uint128_t) in[4]) * scalar + ((limb) (a >> 51));
-  output[4] = ((limb)a) & 0x7ffffffffffff;
-
-  output[0] += (a >> 51) * 19;
-}
-
-/* Multiply two numbers: output = in2 * in
- *
- * output must be distinct to both inputs. The inputs are reduced coefficient
- * form, the output is not.
- *
- * Assumes that in[i] < 2**55 and likewise for in2.
- * On return, output[i] < 2**52
- */
-static inline void
-fmul(felem output, const felem in2, const felem in) {
-  uint128_t t[5];
-  limb r0,r1,r2,r3,r4,s0,s1,s2,s3,s4,c;
-
-  r0 = in[0];
-  r1 = in[1];
-  r2 = in[2];
-  r3 = in[3];
-  r4 = in[4];
-
-  s0 = in2[0];
-  s1 = in2[1];
-  s2 = in2[2];
-  s3 = in2[3];
-  s4 = in2[4];
-
-  t[0]  =  ((uint128_t) r0) * s0;
-  t[1]  =  ((uint128_t) r0) * s1 + ((uint128_t) r1) * s0;
-  t[2]  =  ((uint128_t) r0) * s2 + ((uint128_t) r2) * s0 + ((uint128_t) r1) * s1;
-  t[3]  =  ((uint128_t) r0) * s3 + ((uint128_t) r3) * s0 + ((uint128_t) r1) * s2 + ((uint128_t) r2) * s1;
-  t[4]  =  ((uint128_t) r0) * s4 + ((uint128_t) r4) * s0 + ((uint128_t) r3) * s1 + ((uint128_t) r1) * s3 + ((uint128_t) r2) * s2;
-
-  r4 *= 19;
-  r1 *= 19;
-  r2 *= 19;
-  r3 *= 19;
-
-  t[0] += ((uint128_t) r4) * s1 + ((uint128_t) r1) * s4 + ((uint128_t) r2) * s3 + ((uint128_t) r3) * s2;
-  t[1] += ((uint128_t) r4) * s2 + ((uint128_t) r2) * s4 + ((uint128_t) r3) * s3;
-  t[2] += ((uint128_t) r4) * s3 + ((uint128_t) r3) * s4;
-  t[3] += ((uint128_t) r4) * s4;
-
-                  r0 = (limb)t[0] & 0x7ffffffffffff; c = (limb)(t[0] >> 51);
-  t[1] += c;      r1 = (limb)t[1] & 0x7ffffffffffff; c = (limb)(t[1] >> 51);
-  t[2] += c;      r2 = (limb)t[2] & 0x7ffffffffffff; c = (limb)(t[2] >> 51);
-  t[3] += c;      r3 = (limb)t[3] & 0x7ffffffffffff; c = (limb)(t[3] >> 51);
-  t[4] += c;      r4 = (limb)t[4] & 0x7ffffffffffff; c = (limb)(t[4] >> 51);
-  r0 +=   c * 19; c = r0 >> 51; r0 = r0 & 0x7ffffffffffff;
-  r1 +=   c;      c = r1 >> 51; r1 = r1 & 0x7ffffffffffff;
-  r2 +=   c;
-
-  output[0] = r0;
-  output[1] = r1;
-  output[2] = r2;
-  output[3] = r3;
-  output[4] = r4;
-}
-
-static inline void
-fsquare_times(felem output, const felem in, limb count) {
-  uint128_t t[5];
-  limb r0,r1,r2,r3,r4,c;
-  limb d0,d1,d2,d4,d419;
-
-  r0 = in[0];
-  r1 = in[1];
-  r2 = in[2];
-  r3 = in[3];
-  r4 = in[4];
-
-  do {
-    d0 = r0 * 2;
-    d1 = r1 * 2;
-    d2 = r2 * 2 * 19;
-    d419 = r4 * 19;
-    d4 = d419 * 2;
-
-    t[0] = ((uint128_t) r0) * r0 + ((uint128_t) d4) * r1 + (((uint128_t) d2) * (r3     ));
-    t[1] = ((uint128_t) d0) * r1 + ((uint128_t) d4) * r2 + (((uint128_t) r3) * (r3 * 19));
-    t[2] = ((uint128_t) d0) * r2 + ((uint128_t) r1) * r1 + (((uint128_t) d4) * (r3     ));
-    t[3] = ((uint128_t) d0) * r3 + ((uint128_t) d1) * r2 + (((uint128_t) r4) * (d419   ));
-    t[4] = ((uint128_t) d0) * r4 + ((uint128_t) d1) * r3 + (((uint128_t) r2) * (r2     ));
-
-                    r0 = (limb)t[0] & 0x7ffffffffffff; c = (limb)(t[0] >> 51);
-    t[1] += c;      r1 = (limb)t[1] & 0x7ffffffffffff; c = (limb)(t[1] >> 51);
-    t[2] += c;      r2 = (limb)t[2] & 0x7ffffffffffff; c = (limb)(t[2] >> 51);
-    t[3] += c;      r3 = (limb)t[3] & 0x7ffffffffffff; c = (limb)(t[3] >> 51);
-    t[4] += c;      r4 = (limb)t[4] & 0x7ffffffffffff; c = (limb)(t[4] >> 51);
-    r0 +=   c * 19; c = r0 >> 51; r0 = r0 & 0x7ffffffffffff;
-    r1 +=   c;      c = r1 >> 51; r1 = r1 & 0x7ffffffffffff;
-    r2 +=   c;
-  } while(--count);
-
-  output[0] = r0;
-  output[1] = r1;
-  output[2] = r2;
-  output[3] = r3;
-  output[4] = r4;
-}
-
-#ifdef NATIVE_LITTLE_ENDIAN
-static inline limb
-load_limb(const u8 *in) {
-    limb out;
-    memcpy(&out, in, sizeof (limb));
-    return out;
-}
-static inline void
-store_limb(u8 *out, limb in) {
-    memcpy(out, &in, sizeof (limb));
-}
-#else
-static inline limb
-load_limb(const u8 *in) {
-  return
-    ((limb)in[0]) |
-    (((limb)in[1]) << 8) |
-    (((limb)in[2]) << 16) |
-    (((limb)in[3]) << 24) |
-    (((limb)in[4]) << 32) |
-    (((limb)in[5]) << 40) |
-    (((limb)in[6]) << 48) |
-    (((limb)in[7]) << 56);
-}
-
-static inline void
-store_limb(u8 *out, limb in) {
-  out[0] = in & 0xff;
-  out[1] = (in >> 8) & 0xff;
-  out[2] = (in >> 16) & 0xff;
-  out[3] = (in >> 24) & 0xff;
-  out[4] = (in >> 32) & 0xff;
-  out[5] = (in >> 40) & 0xff;
-  out[6] = (in >> 48) & 0xff;
-  out[7] = (in >> 56) & 0xff;
-}
-#endif
-
-/* Take a little-endian, 32-byte number and expand it into polynomial form */
-static void
-fexpand(limb *output, const u8 *in) {
-  output[0] = load_limb(in) & 0x7ffffffffffff;
-  output[1] = (load_limb(in+6) >> 3) & 0x7ffffffffffff;
-  output[2] = (load_limb(in+12) >> 6) & 0x7ffffffffffff;
-  output[3] = (load_limb(in+19) >> 1) & 0x7ffffffffffff;
-  output[4] = (load_limb(in+24) >> 12) & 0x7ffffffffffff;
-}
-
-/* Take a fully reduced polynomial form number and contract it into a
- * little-endian, 32-byte array
- */
-static void
-fcontract(u8 *output, const felem input) {
-  uint128_t t[5];
-
-  t[0] = input[0];
-  t[1] = input[1];
-  t[2] = input[2];
-  t[3] = input[3];
-  t[4] = input[4];
-
-  t[1] += t[0] >> 51; t[0] &= 0x7ffffffffffff;
-  t[2] += t[1] >> 51; t[1] &= 0x7ffffffffffff;
-  t[3] += t[2] >> 51; t[2] &= 0x7ffffffffffff;
-  t[4] += t[3] >> 51; t[3] &= 0x7ffffffffffff;
-  t[0] += 19 * (t[4] >> 51); t[4] &= 0x7ffffffffffff;
-
-  t[1] += t[0] >> 51; t[0] &= 0x7ffffffffffff;
-  t[2] += t[1] >> 51; t[1] &= 0x7ffffffffffff;
-  t[3] += t[2] >> 51; t[2] &= 0x7ffffffffffff;
-  t[4] += t[3] >> 51; t[3] &= 0x7ffffffffffff;
-  t[0] += 19 * (t[4] >> 51); t[4] &= 0x7ffffffffffff;
-
-  /* now t is between 0 and 2^255-1, properly carried. */
-  /* case 1: between 0 and 2^255-20. case 2: between 2^255-19 and 2^255-1. */
-
-  t[0] += 19;
-
-  t[1] += t[0] >> 51; t[0] &= 0x7ffffffffffff;
-  t[2] += t[1] >> 51; t[1] &= 0x7ffffffffffff;
-  t[3] += t[2] >> 51; t[2] &= 0x7ffffffffffff;
-  t[4] += t[3] >> 51; t[3] &= 0x7ffffffffffff;
-  t[0] += 19 * (t[4] >> 51); t[4] &= 0x7ffffffffffff;
-
-  /* now between 19 and 2^255-1 in both cases, and offset by 19. */
-
-  t[0] += 0x8000000000000 - 19;
-  t[1] += 0x8000000000000 - 1;
-  t[2] += 0x8000000000000 - 1;
-  t[3] += 0x8000000000000 - 1;
-  t[4] += 0x8000000000000 - 1;
-
-  /* now between 2^255 and 2^256-20, and offset by 2^255. */
-
-  t[1] += t[0] >> 51; t[0] &= 0x7ffffffffffff;
-  t[2] += t[1] >> 51; t[1] &= 0x7ffffffffffff;
-  t[3] += t[2] >> 51; t[2] &= 0x7ffffffffffff;
-  t[4] += t[3] >> 51; t[3] &= 0x7ffffffffffff;
-  t[4] &= 0x7ffffffffffff;
-
-  store_limb(output, t[0] | (t[1] << 51));
-  store_limb(output + 8, (t[1] >> 13) | (t[2] << 38));
-  store_limb(output + 16, (t[2] >> 26) | (t[3] << 25));
-  store_limb(output + 24, (t[3] >> 39) | (t[4] << 12));
-}
-
-/* Input: Q, Q', Q-Q'
- * Output: 2Q, Q+Q'
- *
- *   x2 z3: long form
- *   x3 z3: long form
- *   x z: short form, destroyed
- *   xprime zprime: short form, destroyed
- *   qmqp: short form, preserved
- */
-static void
-fmonty(limb *x2, limb *z2, /* output 2Q */
-       limb *x3, limb *z3, /* output Q + Q' */
-       limb *x, limb *z,   /* input Q */
-       limb *xprime, limb *zprime, /* input Q' */
-       const limb *qmqp /* input Q - Q' */) {
-  limb origx[5], origxprime[5], zzz[5], xx[5], zz[5], xxprime[5],
-        zzprime[5], zzzprime[5];
-
-  memcpy(origx, x, 5 * sizeof(limb));
-  fsum(x, z);
-  fdifference_backwards(z, origx);  // does x - z
-
-  memcpy(origxprime, xprime, sizeof(limb) * 5);
-  fsum(xprime, zprime);
-  fdifference_backwards(zprime, origxprime);
-  fmul(xxprime, xprime, z);
-  fmul(zzprime, x, zprime);
-  memcpy(origxprime, xxprime, sizeof(limb) * 5);
-  fsum(xxprime, zzprime);
-  fdifference_backwards(zzprime, origxprime);
-  fsquare_times(x3, xxprime, 1);
-  fsquare_times(zzzprime, zzprime, 1);
-  fmul(z3, zzzprime, qmqp);
-
-  fsquare_times(xx, x, 1);
-  fsquare_times(zz, z, 1);
-  fmul(x2, xx, zz);
-  fdifference_backwards(zz, xx);  // does zz = xx - zz
-  fscalar_product(zzz, zz, 121665);
-  fsum(zzz, xx);
-  fmul(z2, zz, zzz);
-}
-
-// -----------------------------------------------------------------------------
-// Maybe swap the contents of two limb arrays (@a and @b), each @len elements
-// long. Perform the swap iff @swap is non-zero.
-//
-// This function performs the swap without leaking any side-channel
-// information.
-// -----------------------------------------------------------------------------
-static void
-swap_conditional(limb a[5], limb b[5], limb iswap) {
-  unsigned i;
-  const limb swap = -iswap;
-
-  for (i = 0; i < 5; ++i) {
-    const limb x = swap & (a[i] ^ b[i]);
-    a[i] ^= x;
-    b[i] ^= x;
-  }
-}
-
-/* Calculates nQ where Q is the x-coordinate of a point on the curve
- *
- *   resultx/resultz: the x coordinate of the resulting curve point (short form)
- *   n: a little endian, 32-byte number
- *   q: a point of the curve (short form)
- */
-static void
-cmult(limb *resultx, limb *resultz, const u8 *n, const limb *q) {
-  limb a[5] = {0}, b[5] = {1}, c[5] = {1}, d[5] = {0};
-  limb *nqpqx = a, *nqpqz = b, *nqx = c, *nqz = d, *t;
-  limb e[5] = {0}, f[5] = {1}, g[5] = {0}, h[5] = {1};
-  limb *nqpqx2 = e, *nqpqz2 = f, *nqx2 = g, *nqz2 = h;
-
-  unsigned i, j;
-
-  memcpy(nqpqx, q, sizeof(limb) * 5);
-
-  for (i = 0; i < 32; ++i) {
-    u8 byte = n[31 - i];
-    for (j = 0; j < 8; ++j) {
-      const limb bit = byte >> 7;
-
-      swap_conditional(nqx, nqpqx, bit);
-      swap_conditional(nqz, nqpqz, bit);
-      fmonty(nqx2, nqz2,
-             nqpqx2, nqpqz2,
-             nqx, nqz,
-             nqpqx, nqpqz,
-             q);
-      swap_conditional(nqx2, nqpqx2, bit);
-      swap_conditional(nqz2, nqpqz2, bit);
-
-      t = nqx;
-      nqx = nqx2;
-      nqx2 = t;
-      t = nqz;
-      nqz = nqz2;
-      nqz2 = t;
-      t = nqpqx;
-      nqpqx = nqpqx2;
-      nqpqx2 = t;
-      t = nqpqz;
-      nqpqz = nqpqz2;
-      nqpqz2 = t;
-
-      byte <<= 1;
-    }
-  }
-
-  memcpy(resultx, nqx, sizeof(limb) * 5);
-  memcpy(resultz, nqz, sizeof(limb) * 5);
-}
-
-
-// -----------------------------------------------------------------------------
-// Shamelessly copied from djb's code, tightened a little
-// -----------------------------------------------------------------------------
-static void
-crecip(felem out, const felem z) {
-  felem a,t0,b,c;
-
-  /* 2 */ fsquare_times(a, z, 1); // a = 2
-  /* 8 */ fsquare_times(t0, a, 2);
-  /* 9 */ fmul(b, t0, z); // b = 9
-  /* 11 */ fmul(a, b, a); // a = 11
-  /* 22 */ fsquare_times(t0, a, 1);
-  /* 2^5 - 2^0 = 31 */ fmul(b, t0, b);
-  /* 2^10 - 2^5 */ fsquare_times(t0, b, 5);
-  /* 2^10 - 2^0 */ fmul(b, t0, b);
-  /* 2^20 - 2^10 */ fsquare_times(t0, b, 10);
-  /* 2^20 - 2^0 */ fmul(c, t0, b);
-  /* 2^40 - 2^20 */ fsquare_times(t0, c, 20);
-  /* 2^40 - 2^0 */ fmul(t0, t0, c);
-  /* 2^50 - 2^10 */ fsquare_times(t0, t0, 10);
-  /* 2^50 - 2^0 */ fmul(b, t0, b);
-  /* 2^100 - 2^50 */ fsquare_times(t0, b, 50);
-  /* 2^100 - 2^0 */ fmul(c, t0, b);
-  /* 2^200 - 2^100 */ fsquare_times(t0, c, 100);
-  /* 2^200 - 2^0 */ fmul(t0, t0, c);
-  /* 2^250 - 2^50 */ fsquare_times(t0, t0, 50);
-  /* 2^250 - 2^0 */ fmul(t0, t0, b);
-  /* 2^255 - 2^5 */ fsquare_times(t0, t0, 5);
-  /* 2^255 - 21 */ fmul(out, t0, a);
-}
-
-static const unsigned char basepoint[32] = {9};
-
-static int
-crypto_scalarmult_curve25519_donna_c64(unsigned char *mypublic,
-                                       const unsigned char *secret,
-                                       const unsigned char *basepoint) {
-  limb bp[5], x[5], z[5], zmone[5];
-  uint8_t e[32];
-  int i;
-
-  for (i = 0;i < 32;++i) e[i] = secret[i];
-  e[0] &= 248;
-  e[31] &= 127;
-  e[31] |= 64;
-
-  fexpand(bp, basepoint);
-  cmult(x, z, e, bp);
-  crecip(zmone, z);
-  fmul(z, x, zmone);
-  fcontract(mypublic, z);
-  return 0;
-}
-
-static int
-crypto_scalarmult_curve25519_donna_c64_base(unsigned char *q,
-                                            const unsigned char *n)
-{
-  return crypto_scalarmult_curve25519_donna_c64(q, n, basepoint);
-}
-
-struct crypto_scalarmult_curve25519_implementation
-crypto_scalarmult_curve25519_donna_c64_implementation = {
-    SODIUM_C99(.mult = ) crypto_scalarmult_curve25519_donna_c64,
-    SODIUM_C99(.mult_base = ) crypto_scalarmult_curve25519_donna_c64_base
-};
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h
deleted file mode 100644
index c3e8d47..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/donna_c64/curve25519_donna_c64.h
+++ /dev/null
@@ -1,9 +0,0 @@
-#ifndef curve25519_donna_c64_H
-#define curve25519_donna_c64_H
-
-#include "crypto_scalarmult_curve25519.h"
-
-extern struct crypto_scalarmult_curve25519_implementation
-    crypto_scalarmult_curve25519_donna_c64_implementation;
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/curve25519_ref10.c
deleted file mode 100644
index 8a5246b..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/curve25519_ref10.c
+++ /dev/null
@@ -1,73 +0,0 @@
-
-#include <stddef.h>
-
-#ifndef HAVE_TI_MODE
-
-#include "utils.h"
-#include "curve25519_ref10.h"
-#include "../scalarmult_curve25519.h"
-#include "fe.h"
-
-static const unsigned char basepoint[32] = {9};
-
-static int
-crypto_scalarmult_curve25519_ref10(unsigned char *q,
-                                   const unsigned char *n,
-                                   const unsigned char *p)
-{
-  unsigned char e[32];
-  unsigned int i;
-  fe x1;
-  fe x2;
-  fe z2;
-  fe x3;
-  fe z3;
-  fe tmp0;
-  fe tmp1;
-  int pos;
-  unsigned int swap;
-  unsigned int b;
-
-  for (i = 0;i < 32;++i) e[i] = n[i];
-  e[0] &= 248;
-  e[31] &= 127;
-  e[31] |= 64;
-  fe_frombytes(x1,p);
-  fe_1(x2);
-  fe_0(z2);
-  fe_copy(x3,x1);
-  fe_1(z3);
-
-  swap = 0;
-  for (pos = 254;pos >= 0;--pos) {
-    b = e[pos / 8] >> (pos & 7);
-    b &= 1;
-    swap ^= b;
-    fe_cswap(x2,x3,swap);
-    fe_cswap(z2,z3,swap);
-    swap = b;
-#include "montgomery.h"
-  }
-  fe_cswap(x2,x3,swap);
-  fe_cswap(z2,z3,swap);
-
-  fe_invert(z2,z2);
-  fe_mul(x2,x2,z2);
-  fe_tobytes(q,x2);
-  return 0;
-}
-
-static int
-crypto_scalarmult_curve25519_ref10_base(unsigned char *q,
-                                        const unsigned char *n)
-{
-  return crypto_scalarmult_curve25519_ref10(q,n,basepoint);
-}
-
-struct crypto_scalarmult_curve25519_implementation
-crypto_scalarmult_curve25519_ref10_implementation = {
-        SODIUM_C99(.mult = ) crypto_scalarmult_curve25519_ref10,
-        SODIUM_C99(.mult_base = ) crypto_scalarmult_curve25519_ref10_base
-};
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/curve25519_ref10.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/curve25519_ref10.h
deleted file mode 100644
index 6ce9b76..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/curve25519_ref10.h
+++ /dev/null
@@ -1,9 +0,0 @@
-#ifndef curve25519_ref10_H
-#define curve25519_ref10_H
-
-#include "crypto_scalarmult_curve25519.h"
-
-extern struct crypto_scalarmult_curve25519_implementation
-        crypto_scalarmult_curve25519_ref10_implementation;
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe.h
deleted file mode 100644
index 0567120..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe.h
+++ /dev/null
@@ -1,44 +0,0 @@
-#ifndef FE_H
-#define FE_H
-
-#include "crypto_int32.h"
-
-typedef crypto_int32 fe[10];
-
-/*
-fe means field element.
-Here the field is \Z/(2^255-19).
-An element t, entries t[0]...t[9], represents the integer
-t[0]+2^26 t[1]+2^51 t[2]+2^77 t[3]+2^102 t[4]+...+2^230 t[9].
-Bounds on each t[i] vary depending on context.
-*/
-
-#define fe_frombytes crypto_scalarmult_curve25519_ref10_fe_frombytes
-#define fe_tobytes crypto_scalarmult_curve25519_ref10_fe_tobytes
-#define fe_copy crypto_scalarmult_curve25519_ref10_fe_copy
-#define fe_0 crypto_scalarmult_curve25519_ref10_fe_0
-#define fe_1 crypto_scalarmult_curve25519_ref10_fe_1
-#define fe_cswap crypto_scalarmult_curve25519_ref10_fe_cswap
-#define fe_add crypto_scalarmult_curve25519_ref10_fe_add
-#define fe_sub crypto_scalarmult_curve25519_ref10_fe_sub
-#define fe_mul crypto_scalarmult_curve25519_ref10_fe_mul
-#define fe_sq crypto_scalarmult_curve25519_ref10_fe_sq
-#define fe_mul121666 crypto_scalarmult_curve25519_ref10_fe_mul121666
-#define fe_invert crypto_scalarmult_curve25519_ref10_fe_invert
-
-extern void fe_frombytes(fe,const unsigned char *);
-extern void fe_tobytes(unsigned char *,fe);
-
-extern void fe_copy(fe,fe);
-extern void fe_0(fe);
-extern void fe_1(fe);
-extern void fe_cswap(fe,fe,unsigned int);
-
-extern void fe_add(fe,fe,fe);
-extern void fe_sub(fe,fe,fe);
-extern void fe_mul(fe,fe,fe);
-extern void fe_sq(fe,fe);
-extern void fe_mul121666(fe,fe);
-extern void fe_invert(fe,fe);
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
deleted file mode 100644
index f351eea..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_0_curve25519_ref10.c
+++ /dev/null
@@ -1,23 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = 0
-*/
-
-void fe_0(fe h)
-{
-  h[0] = 0;
-  h[1] = 0;
-  h[2] = 0;
-  h[3] = 0;
-  h[4] = 0;
-  h[5] = 0;
-  h[6] = 0;
-  h[7] = 0;
-  h[8] = 0;
-  h[9] = 0;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
deleted file mode 100644
index 3ef13aa..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_1_curve25519_ref10.c
+++ /dev/null
@@ -1,23 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = 1
-*/
-
-void fe_1(fe h)
-{
-  h[0] = 1;
-  h[1] = 0;
-  h[2] = 0;
-  h[3] = 0;
-  h[4] = 0;
-  h[5] = 0;
-  h[6] = 0;
-  h[7] = 0;
-  h[8] = 0;
-  h[9] = 0;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
deleted file mode 100644
index 488805b..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_add_curve25519_ref10.c
+++ /dev/null
@@ -1,61 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = f + g
-Can overlap h with f or g.
-
-Preconditions:
-   |f| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-   |g| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-*/
-
-void fe_add(fe h,fe f,fe g)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 h0 = f0 + g0;
-  crypto_int32 h1 = f1 + g1;
-  crypto_int32 h2 = f2 + g2;
-  crypto_int32 h3 = f3 + g3;
-  crypto_int32 h4 = f4 + g4;
-  crypto_int32 h5 = f5 + g5;
-  crypto_int32 h6 = f6 + g6;
-  crypto_int32 h7 = f7 + g7;
-  crypto_int32 h8 = f8 + g8;
-  crypto_int32 h9 = f9 + g9;
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
deleted file mode 100644
index 2f6a5f5..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_copy_curve25519_ref10.c
+++ /dev/null
@@ -1,33 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = f
-*/
-
-void fe_copy(fe h,fe f)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  h[0] = f0;
-  h[1] = f1;
-  h[2] = f2;
-  h[3] = f3;
-  h[4] = f4;
-  h[5] = f5;
-  h[6] = f6;
-  h[7] = f7;
-  h[8] = f8;
-  h[9] = f9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
deleted file mode 100644
index 6bc2660..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_cswap_curve25519_ref10.c
+++ /dev/null
@@ -1,77 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-Replace (f,g) with (g,f) if b == 1;
-replace (f,g) with (f,g) if b == 0.
-
-Preconditions: b in {0,1}.
-*/
-
-void fe_cswap(fe f,fe g,unsigned int b)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 x0 = f0 ^ g0;
-  crypto_int32 x1 = f1 ^ g1;
-  crypto_int32 x2 = f2 ^ g2;
-  crypto_int32 x3 = f3 ^ g3;
-  crypto_int32 x4 = f4 ^ g4;
-  crypto_int32 x5 = f5 ^ g5;
-  crypto_int32 x6 = f6 ^ g6;
-  crypto_int32 x7 = f7 ^ g7;
-  crypto_int32 x8 = f8 ^ g8;
-  crypto_int32 x9 = f9 ^ g9;
-  b = (unsigned int) (- (int) b);
-  x0 &= b;
-  x1 &= b;
-  x2 &= b;
-  x3 &= b;
-  x4 &= b;
-  x5 &= b;
-  x6 &= b;
-  x7 &= b;
-  x8 &= b;
-  x9 &= b;
-  f[0] = f0 ^ x0;
-  f[1] = f1 ^ x1;
-  f[2] = f2 ^ x2;
-  f[3] = f3 ^ x3;
-  f[4] = f4 ^ x4;
-  f[5] = f5 ^ x5;
-  f[6] = f6 ^ x6;
-  f[7] = f7 ^ x7;
-  f[8] = f8 ^ x8;
-  f[9] = f9 ^ x9;
-  g[0] = g0 ^ x0;
-  g[1] = g1 ^ x1;
-  g[2] = g2 ^ x2;
-  g[3] = g3 ^ x3;
-  g[4] = g4 ^ x4;
-  g[5] = g5 ^ x5;
-  g[6] = g6 ^ x6;
-  g[7] = g7 ^ x7;
-  g[8] = g8 ^ x8;
-  g[9] = g9 ^ x9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
deleted file mode 100644
index f9d7ed7..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_frombytes_curve25519_ref10.c
+++ /dev/null
@@ -1,74 +0,0 @@
-#include "fe.h"
-#include "crypto_int32.h"
-#include "crypto_int64.h"
-#include "crypto_uint64.h"
-
-#ifndef HAVE_TI_MODE
-
-static crypto_uint64 load_3(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  return result;
-}
-
-static crypto_uint64 load_4(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  result |= ((crypto_uint64) in[3]) << 24;
-  return result;
-}
-
-void fe_frombytes(fe h,const unsigned char *s)
-{
-  crypto_int64 h0 = load_4(s);
-  crypto_int64 h1 = load_3(s + 4) << 6;
-  crypto_int64 h2 = load_3(s + 7) << 5;
-  crypto_int64 h3 = load_3(s + 10) << 3;
-  crypto_int64 h4 = load_3(s + 13) << 2;
-  crypto_int64 h5 = load_4(s + 16);
-  crypto_int64 h6 = load_3(s + 20) << 7;
-  crypto_int64 h7 = load_3(s + 23) << 5;
-  crypto_int64 h8 = load_3(s + 26) << 4;
-  crypto_int64 h9 = (load_3(s + 29) & 8388607) << 2;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  carry9 = (h9 + (crypto_int64) (1<<24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-  carry1 = (h1 + (crypto_int64) (1<<24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry3 = (h3 + (crypto_int64) (1<<24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry5 = (h5 + (crypto_int64) (1<<24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-  carry7 = (h7 + (crypto_int64) (1<<24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-
-  carry0 = (h0 + (crypto_int64) (1<<25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry2 = (h2 + (crypto_int64) (1<<25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry4 = (h4 + (crypto_int64) (1<<25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry6 = (h6 + (crypto_int64) (1<<25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-  carry8 = (h8 + (crypto_int64) (1<<25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-
-  h[0] = (crypto_int32) h0;
-  h[1] = (crypto_int32) h1;
-  h[2] = (crypto_int32) h2;
-  h[3] = (crypto_int32) h3;
-  h[4] = (crypto_int32) h4;
-  h[5] = (crypto_int32) h5;
-  h[6] = (crypto_int32) h6;
-  h[7] = (crypto_int32) h7;
-  h[8] = (crypto_int32) h8;
-  h[9] = (crypto_int32) h9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
deleted file mode 100644
index 764bf69..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_invert_curve25519_ref10.c
+++ /dev/null
@@ -1,18 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-void fe_invert(fe out,fe z)
-{
-  fe t0;
-  fe t1;
-  fe t2;
-  fe t3;
-  int i;
-
-#include "pow225521.h"
-
-  return;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
deleted file mode 100644
index 7b222e1..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul121666_curve25519_ref10.c
+++ /dev/null
@@ -1,74 +0,0 @@
-#include "fe.h"
-#include "crypto_int64.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = f * 121666
-Can overlap h with f.
-
-Preconditions:
-   |f| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-*/
-
-void fe_mul121666(fe h,fe f)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int64 h0 = f0 * (crypto_int64) 121666;
-  crypto_int64 h1 = f1 * (crypto_int64) 121666;
-  crypto_int64 h2 = f2 * (crypto_int64) 121666;
-  crypto_int64 h3 = f3 * (crypto_int64) 121666;
-  crypto_int64 h4 = f4 * (crypto_int64) 121666;
-  crypto_int64 h5 = f5 * (crypto_int64) 121666;
-  crypto_int64 h6 = f6 * (crypto_int64) 121666;
-  crypto_int64 h7 = f7 * (crypto_int64) 121666;
-  crypto_int64 h8 = f8 * (crypto_int64) 121666;
-  crypto_int64 h9 = f9 * (crypto_int64) 121666;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  carry9 = (h9 + (crypto_int64) (1<<24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-  carry1 = (h1 + (crypto_int64) (1<<24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry3 = (h3 + (crypto_int64) (1<<24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry5 = (h5 + (crypto_int64) (1<<24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-  carry7 = (h7 + (crypto_int64) (1<<24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-
-  carry0 = (h0 + (crypto_int64) (1<<25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry2 = (h2 + (crypto_int64) (1<<25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry4 = (h4 + (crypto_int64) (1<<25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry6 = (h6 + (crypto_int64) (1<<25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-  carry8 = (h8 + (crypto_int64) (1<<25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
deleted file mode 100644
index 96772b9..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_mul_curve25519_ref10.c
+++ /dev/null
@@ -1,257 +0,0 @@
-#include "fe.h"
-#include "crypto_int64.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = f * g
-Can overlap h with f or g.
-
-Preconditions:
-   |f| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-   |g| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-*/
-
-/*
-Notes on implementation strategy:
-
-Using schoolbook multiplication.
-Karatsuba would save a little in some cost models.
-
-Most multiplications by 2 and 19 are 32-bit precomputations;
-cheaper than 64-bit postcomputations.
-
-There is one remaining multiplication by 19 in the carry chain;
-one *19 precomputation can be merged into this,
-but the resulting data flow is considerably less clean.
-
-There are 12 carries below.
-10 of them are 2-way parallelizable and vectorizable.
-Can get away with 11 carries, but then data flow is much deeper.
-
-With tighter constraints on inputs can squeeze carries into int32.
-*/
-
-void fe_mul(fe h,fe f,fe g)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 g1_19 = 19 * g1; /* 1.4*2^29 */
-  crypto_int32 g2_19 = 19 * g2; /* 1.4*2^30; still ok */
-  crypto_int32 g3_19 = 19 * g3;
-  crypto_int32 g4_19 = 19 * g4;
-  crypto_int32 g5_19 = 19 * g5;
-  crypto_int32 g6_19 = 19 * g6;
-  crypto_int32 g7_19 = 19 * g7;
-  crypto_int32 g8_19 = 19 * g8;
-  crypto_int32 g9_19 = 19 * g9;
-  crypto_int32 f1_2 = 2 * f1;
-  crypto_int32 f3_2 = 2 * f3;
-  crypto_int32 f5_2 = 2 * f5;
-  crypto_int32 f7_2 = 2 * f7;
-  crypto_int32 f9_2 = 2 * f9;
-  crypto_int64 f0g0    = f0   * (crypto_int64) g0;
-  crypto_int64 f0g1    = f0   * (crypto_int64) g1;
-  crypto_int64 f0g2    = f0   * (crypto_int64) g2;
-  crypto_int64 f0g3    = f0   * (crypto_int64) g3;
-  crypto_int64 f0g4    = f0   * (crypto_int64) g4;
-  crypto_int64 f0g5    = f0   * (crypto_int64) g5;
-  crypto_int64 f0g6    = f0   * (crypto_int64) g6;
-  crypto_int64 f0g7    = f0   * (crypto_int64) g7;
-  crypto_int64 f0g8    = f0   * (crypto_int64) g8;
-  crypto_int64 f0g9    = f0   * (crypto_int64) g9;
-  crypto_int64 f1g0    = f1   * (crypto_int64) g0;
-  crypto_int64 f1g1_2  = f1_2 * (crypto_int64) g1;
-  crypto_int64 f1g2    = f1   * (crypto_int64) g2;
-  crypto_int64 f1g3_2  = f1_2 * (crypto_int64) g3;
-  crypto_int64 f1g4    = f1   * (crypto_int64) g4;
-  crypto_int64 f1g5_2  = f1_2 * (crypto_int64) g5;
-  crypto_int64 f1g6    = f1   * (crypto_int64) g6;
-  crypto_int64 f1g7_2  = f1_2 * (crypto_int64) g7;
-  crypto_int64 f1g8    = f1   * (crypto_int64) g8;
-  crypto_int64 f1g9_38 = f1_2 * (crypto_int64) g9_19;
-  crypto_int64 f2g0    = f2   * (crypto_int64) g0;
-  crypto_int64 f2g1    = f2   * (crypto_int64) g1;
-  crypto_int64 f2g2    = f2   * (crypto_int64) g2;
-  crypto_int64 f2g3    = f2   * (crypto_int64) g3;
-  crypto_int64 f2g4    = f2   * (crypto_int64) g4;
-  crypto_int64 f2g5    = f2   * (crypto_int64) g5;
-  crypto_int64 f2g6    = f2   * (crypto_int64) g6;
-  crypto_int64 f2g7    = f2   * (crypto_int64) g7;
-  crypto_int64 f2g8_19 = f2   * (crypto_int64) g8_19;
-  crypto_int64 f2g9_19 = f2   * (crypto_int64) g9_19;
-  crypto_int64 f3g0    = f3   * (crypto_int64) g0;
-  crypto_int64 f3g1_2  = f3_2 * (crypto_int64) g1;
-  crypto_int64 f3g2    = f3   * (crypto_int64) g2;
-  crypto_int64 f3g3_2  = f3_2 * (crypto_int64) g3;
-  crypto_int64 f3g4    = f3   * (crypto_int64) g4;
-  crypto_int64 f3g5_2  = f3_2 * (crypto_int64) g5;
-  crypto_int64 f3g6    = f3   * (crypto_int64) g6;
-  crypto_int64 f3g7_38 = f3_2 * (crypto_int64) g7_19;
-  crypto_int64 f3g8_19 = f3   * (crypto_int64) g8_19;
-  crypto_int64 f3g9_38 = f3_2 * (crypto_int64) g9_19;
-  crypto_int64 f4g0    = f4   * (crypto_int64) g0;
-  crypto_int64 f4g1    = f4   * (crypto_int64) g1;
-  crypto_int64 f4g2    = f4   * (crypto_int64) g2;
-  crypto_int64 f4g3    = f4   * (crypto_int64) g3;
-  crypto_int64 f4g4    = f4   * (crypto_int64) g4;
-  crypto_int64 f4g5    = f4   * (crypto_int64) g5;
-  crypto_int64 f4g6_19 = f4   * (crypto_int64) g6_19;
-  crypto_int64 f4g7_19 = f4   * (crypto_int64) g7_19;
-  crypto_int64 f4g8_19 = f4   * (crypto_int64) g8_19;
-  crypto_int64 f4g9_19 = f4   * (crypto_int64) g9_19;
-  crypto_int64 f5g0    = f5   * (crypto_int64) g0;
-  crypto_int64 f5g1_2  = f5_2 * (crypto_int64) g1;
-  crypto_int64 f5g2    = f5   * (crypto_int64) g2;
-  crypto_int64 f5g3_2  = f5_2 * (crypto_int64) g3;
-  crypto_int64 f5g4    = f5   * (crypto_int64) g4;
-  crypto_int64 f5g5_38 = f5_2 * (crypto_int64) g5_19;
-  crypto_int64 f5g6_19 = f5   * (crypto_int64) g6_19;
-  crypto_int64 f5g7_38 = f5_2 * (crypto_int64) g7_19;
-  crypto_int64 f5g8_19 = f5   * (crypto_int64) g8_19;
-  crypto_int64 f5g9_38 = f5_2 * (crypto_int64) g9_19;
-  crypto_int64 f6g0    = f6   * (crypto_int64) g0;
-  crypto_int64 f6g1    = f6   * (crypto_int64) g1;
-  crypto_int64 f6g2    = f6   * (crypto_int64) g2;
-  crypto_int64 f6g3    = f6   * (crypto_int64) g3;
-  crypto_int64 f6g4_19 = f6   * (crypto_int64) g4_19;
-  crypto_int64 f6g5_19 = f6   * (crypto_int64) g5_19;
-  crypto_int64 f6g6_19 = f6   * (crypto_int64) g6_19;
-  crypto_int64 f6g7_19 = f6   * (crypto_int64) g7_19;
-  crypto_int64 f6g8_19 = f6   * (crypto_int64) g8_19;
-  crypto_int64 f6g9_19 = f6   * (crypto_int64) g9_19;
-  crypto_int64 f7g0    = f7   * (crypto_int64) g0;
-  crypto_int64 f7g1_2  = f7_2 * (crypto_int64) g1;
-  crypto_int64 f7g2    = f7   * (crypto_int64) g2;
-  crypto_int64 f7g3_38 = f7_2 * (crypto_int64) g3_19;
-  crypto_int64 f7g4_19 = f7   * (crypto_int64) g4_19;
-  crypto_int64 f7g5_38 = f7_2 * (crypto_int64) g5_19;
-  crypto_int64 f7g6_19 = f7   * (crypto_int64) g6_19;
-  crypto_int64 f7g7_38 = f7_2 * (crypto_int64) g7_19;
-  crypto_int64 f7g8_19 = f7   * (crypto_int64) g8_19;
-  crypto_int64 f7g9_38 = f7_2 * (crypto_int64) g9_19;
-  crypto_int64 f8g0    = f8   * (crypto_int64) g0;
-  crypto_int64 f8g1    = f8   * (crypto_int64) g1;
-  crypto_int64 f8g2_19 = f8   * (crypto_int64) g2_19;
-  crypto_int64 f8g3_19 = f8   * (crypto_int64) g3_19;
-  crypto_int64 f8g4_19 = f8   * (crypto_int64) g4_19;
-  crypto_int64 f8g5_19 = f8   * (crypto_int64) g5_19;
-  crypto_int64 f8g6_19 = f8   * (crypto_int64) g6_19;
-  crypto_int64 f8g7_19 = f8   * (crypto_int64) g7_19;
-  crypto_int64 f8g8_19 = f8   * (crypto_int64) g8_19;
-  crypto_int64 f8g9_19 = f8   * (crypto_int64) g9_19;
-  crypto_int64 f9g0    = f9   * (crypto_int64) g0;
-  crypto_int64 f9g1_38 = f9_2 * (crypto_int64) g1_19;
-  crypto_int64 f9g2_19 = f9   * (crypto_int64) g2_19;
-  crypto_int64 f9g3_38 = f9_2 * (crypto_int64) g3_19;
-  crypto_int64 f9g4_19 = f9   * (crypto_int64) g4_19;
-  crypto_int64 f9g5_38 = f9_2 * (crypto_int64) g5_19;
-  crypto_int64 f9g6_19 = f9   * (crypto_int64) g6_19;
-  crypto_int64 f9g7_38 = f9_2 * (crypto_int64) g7_19;
-  crypto_int64 f9g8_19 = f9   * (crypto_int64) g8_19;
-  crypto_int64 f9g9_38 = f9_2 * (crypto_int64) g9_19;
-  crypto_int64 h0 = f0g0+f1g9_38+f2g8_19+f3g7_38+f4g6_19+f5g5_38+f6g4_19+f7g3_38+f8g2_19+f9g1_38;
-  crypto_int64 h1 = f0g1+f1g0   +f2g9_19+f3g8_19+f4g7_19+f5g6_19+f6g5_19+f7g4_19+f8g3_19+f9g2_19;
-  crypto_int64 h2 = f0g2+f1g1_2 +f2g0   +f3g9_38+f4g8_19+f5g7_38+f6g6_19+f7g5_38+f8g4_19+f9g3_38;
-  crypto_int64 h3 = f0g3+f1g2   +f2g1   +f3g0   +f4g9_19+f5g8_19+f6g7_19+f7g6_19+f8g5_19+f9g4_19;
-  crypto_int64 h4 = f0g4+f1g3_2 +f2g2   +f3g1_2 +f4g0   +f5g9_38+f6g8_19+f7g7_38+f8g6_19+f9g5_38;
-  crypto_int64 h5 = f0g5+f1g4   +f2g3   +f3g2   +f4g1   +f5g0   +f6g9_19+f7g8_19+f8g7_19+f9g6_19;
-  crypto_int64 h6 = f0g6+f1g5_2 +f2g4   +f3g3_2 +f4g2   +f5g1_2 +f6g0   +f7g9_38+f8g8_19+f9g7_38;
-  crypto_int64 h7 = f0g7+f1g6   +f2g5   +f3g4   +f4g3   +f5g2   +f6g1   +f7g0   +f8g9_19+f9g8_19;
-  crypto_int64 h8 = f0g8+f1g7_2 +f2g6   +f3g5_2 +f4g4   +f5g3_2 +f6g2   +f7g1_2 +f8g0   +f9g9_38;
-  crypto_int64 h9 = f0g9+f1g8   +f2g7   +f3g6   +f4g5   +f5g4   +f6g3   +f7g2   +f8g1   +f9g0   ;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  /*
-  |h0| <= (1.1*1.1*2^52*(1+19+19+19+19)+1.1*1.1*2^50*(38+38+38+38+38))
-    i.e. |h0| <= 1.2*2^59; narrower ranges for h2, h4, h6, h8
-  |h1| <= (1.1*1.1*2^51*(1+1+19+19+19+19+19+19+19+19))
-    i.e. |h1| <= 1.5*2^58; narrower ranges for h3, h5, h7, h9
-  */
-
-  carry0 = (h0 + (crypto_int64) (1<<25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry4 = (h4 + (crypto_int64) (1<<25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  /* |h0| <= 2^25 */
-  /* |h4| <= 2^25 */
-  /* |h1| <= 1.51*2^58 */
-  /* |h5| <= 1.51*2^58 */
-
-  carry1 = (h1 + (crypto_int64) (1<<24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry5 = (h5 + (crypto_int64) (1<<24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-  /* |h1| <= 2^24; from now on fits into int32 */
-  /* |h5| <= 2^24; from now on fits into int32 */
-  /* |h2| <= 1.21*2^59 */
-  /* |h6| <= 1.21*2^59 */
-
-  carry2 = (h2 + (crypto_int64) (1<<25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry6 = (h6 + (crypto_int64) (1<<25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-  /* |h2| <= 2^25; from now on fits into int32 unchanged */
-  /* |h6| <= 2^25; from now on fits into int32 unchanged */
-  /* |h3| <= 1.51*2^58 */
-  /* |h7| <= 1.51*2^58 */
-
-  carry3 = (h3 + (crypto_int64) (1<<24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry7 = (h7 + (crypto_int64) (1<<24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-  /* |h3| <= 2^24; from now on fits into int32 unchanged */
-  /* |h7| <= 2^24; from now on fits into int32 unchanged */
-  /* |h4| <= 1.52*2^33 */
-  /* |h8| <= 1.52*2^33 */
-
-  carry4 = (h4 + (crypto_int64) (1<<25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry8 = (h8 + (crypto_int64) (1<<25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-  /* |h4| <= 2^25; from now on fits into int32 unchanged */
-  /* |h8| <= 2^25; from now on fits into int32 unchanged */
-  /* |h5| <= 1.01*2^24 */
-  /* |h9| <= 1.51*2^58 */
-
-  carry9 = (h9 + (crypto_int64) (1<<24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-  /* |h9| <= 2^24; from now on fits into int32 unchanged */
-  /* |h0| <= 1.8*2^37 */
-
-  carry0 = (h0 + (crypto_int64) (1<<25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  /* |h0| <= 2^25; from now on fits into int32 unchanged */
-  /* |h1| <= 1.01*2^24 */
-
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
deleted file mode 100644
index b5a6211..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sq_curve25519_ref10.c
+++ /dev/null
@@ -1,153 +0,0 @@
-#include "fe.h"
-#include "crypto_int64.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = f * f
-Can overlap h with f.
-
-Preconditions:
-   |f| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-*/
-
-/*
-See fe_mul.c for discussion of implementation strategy.
-*/
-
-void fe_sq(fe h,fe f)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 f0_2 = 2 * f0;
-  crypto_int32 f1_2 = 2 * f1;
-  crypto_int32 f2_2 = 2 * f2;
-  crypto_int32 f3_2 = 2 * f3;
-  crypto_int32 f4_2 = 2 * f4;
-  crypto_int32 f5_2 = 2 * f5;
-  crypto_int32 f6_2 = 2 * f6;
-  crypto_int32 f7_2 = 2 * f7;
-  crypto_int32 f5_38 = 38 * f5; /* 1.31*2^30 */
-  crypto_int32 f6_19 = 19 * f6; /* 1.31*2^30 */
-  crypto_int32 f7_38 = 38 * f7; /* 1.31*2^30 */
-  crypto_int32 f8_19 = 19 * f8; /* 1.31*2^30 */
-  crypto_int32 f9_38 = 38 * f9; /* 1.31*2^30 */
-  crypto_int64 f0f0    = f0   * (crypto_int64) f0;
-  crypto_int64 f0f1_2  = f0_2 * (crypto_int64) f1;
-  crypto_int64 f0f2_2  = f0_2 * (crypto_int64) f2;
-  crypto_int64 f0f3_2  = f0_2 * (crypto_int64) f3;
-  crypto_int64 f0f4_2  = f0_2 * (crypto_int64) f4;
-  crypto_int64 f0f5_2  = f0_2 * (crypto_int64) f5;
-  crypto_int64 f0f6_2  = f0_2 * (crypto_int64) f6;
-  crypto_int64 f0f7_2  = f0_2 * (crypto_int64) f7;
-  crypto_int64 f0f8_2  = f0_2 * (crypto_int64) f8;
-  crypto_int64 f0f9_2  = f0_2 * (crypto_int64) f9;
-  crypto_int64 f1f1_2  = f1_2 * (crypto_int64) f1;
-  crypto_int64 f1f2_2  = f1_2 * (crypto_int64) f2;
-  crypto_int64 f1f3_4  = f1_2 * (crypto_int64) f3_2;
-  crypto_int64 f1f4_2  = f1_2 * (crypto_int64) f4;
-  crypto_int64 f1f5_4  = f1_2 * (crypto_int64) f5_2;
-  crypto_int64 f1f6_2  = f1_2 * (crypto_int64) f6;
-  crypto_int64 f1f7_4  = f1_2 * (crypto_int64) f7_2;
-  crypto_int64 f1f8_2  = f1_2 * (crypto_int64) f8;
-  crypto_int64 f1f9_76 = f1_2 * (crypto_int64) f9_38;
-  crypto_int64 f2f2    = f2   * (crypto_int64) f2;
-  crypto_int64 f2f3_2  = f2_2 * (crypto_int64) f3;
-  crypto_int64 f2f4_2  = f2_2 * (crypto_int64) f4;
-  crypto_int64 f2f5_2  = f2_2 * (crypto_int64) f5;
-  crypto_int64 f2f6_2  = f2_2 * (crypto_int64) f6;
-  crypto_int64 f2f7_2  = f2_2 * (crypto_int64) f7;
-  crypto_int64 f2f8_38 = f2_2 * (crypto_int64) f8_19;
-  crypto_int64 f2f9_38 = f2   * (crypto_int64) f9_38;
-  crypto_int64 f3f3_2  = f3_2 * (crypto_int64) f3;
-  crypto_int64 f3f4_2  = f3_2 * (crypto_int64) f4;
-  crypto_int64 f3f5_4  = f3_2 * (crypto_int64) f5_2;
-  crypto_int64 f3f6_2  = f3_2 * (crypto_int64) f6;
-  crypto_int64 f3f7_76 = f3_2 * (crypto_int64) f7_38;
-  crypto_int64 f3f8_38 = f3_2 * (crypto_int64) f8_19;
-  crypto_int64 f3f9_76 = f3_2 * (crypto_int64) f9_38;
-  crypto_int64 f4f4    = f4   * (crypto_int64) f4;
-  crypto_int64 f4f5_2  = f4_2 * (crypto_int64) f5;
-  crypto_int64 f4f6_38 = f4_2 * (crypto_int64) f6_19;
-  crypto_int64 f4f7_38 = f4   * (crypto_int64) f7_38;
-  crypto_int64 f4f8_38 = f4_2 * (crypto_int64) f8_19;
-  crypto_int64 f4f9_38 = f4   * (crypto_int64) f9_38;
-  crypto_int64 f5f5_38 = f5   * (crypto_int64) f5_38;
-  crypto_int64 f5f6_38 = f5_2 * (crypto_int64) f6_19;
-  crypto_int64 f5f7_76 = f5_2 * (crypto_int64) f7_38;
-  crypto_int64 f5f8_38 = f5_2 * (crypto_int64) f8_19;
-  crypto_int64 f5f9_76 = f5_2 * (crypto_int64) f9_38;
-  crypto_int64 f6f6_19 = f6   * (crypto_int64) f6_19;
-  crypto_int64 f6f7_38 = f6   * (crypto_int64) f7_38;
-  crypto_int64 f6f8_38 = f6_2 * (crypto_int64) f8_19;
-  crypto_int64 f6f9_38 = f6   * (crypto_int64) f9_38;
-  crypto_int64 f7f7_38 = f7   * (crypto_int64) f7_38;
-  crypto_int64 f7f8_38 = f7_2 * (crypto_int64) f8_19;
-  crypto_int64 f7f9_76 = f7_2 * (crypto_int64) f9_38;
-  crypto_int64 f8f8_19 = f8   * (crypto_int64) f8_19;
-  crypto_int64 f8f9_38 = f8   * (crypto_int64) f9_38;
-  crypto_int64 f9f9_38 = f9   * (crypto_int64) f9_38;
-  crypto_int64 h0 = f0f0  +f1f9_76+f2f8_38+f3f7_76+f4f6_38+f5f5_38;
-  crypto_int64 h1 = f0f1_2+f2f9_38+f3f8_38+f4f7_38+f5f6_38;
-  crypto_int64 h2 = f0f2_2+f1f1_2 +f3f9_76+f4f8_38+f5f7_76+f6f6_19;
-  crypto_int64 h3 = f0f3_2+f1f2_2 +f4f9_38+f5f8_38+f6f7_38;
-  crypto_int64 h4 = f0f4_2+f1f3_4 +f2f2   +f5f9_76+f6f8_38+f7f7_38;
-  crypto_int64 h5 = f0f5_2+f1f4_2 +f2f3_2 +f6f9_38+f7f8_38;
-  crypto_int64 h6 = f0f6_2+f1f5_4 +f2f4_2 +f3f3_2 +f7f9_76+f8f8_19;
-  crypto_int64 h7 = f0f7_2+f1f6_2 +f2f5_2 +f3f4_2 +f8f9_38;
-  crypto_int64 h8 = f0f8_2+f1f7_4 +f2f6_2 +f3f5_4 +f4f4   +f9f9_38;
-  crypto_int64 h9 = f0f9_2+f1f8_2 +f2f7_2 +f3f6_2 +f4f5_2;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  carry0 = (h0 + (crypto_int64) (1<<25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry4 = (h4 + (crypto_int64) (1<<25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-
-  carry1 = (h1 + (crypto_int64) (1<<24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry5 = (h5 + (crypto_int64) (1<<24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-
-  carry2 = (h2 + (crypto_int64) (1<<25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry6 = (h6 + (crypto_int64) (1<<25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-
-  carry3 = (h3 + (crypto_int64) (1<<24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry7 = (h7 + (crypto_int64) (1<<24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-
-  carry4 = (h4 + (crypto_int64) (1<<25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry8 = (h8 + (crypto_int64) (1<<25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-
-  carry9 = (h9 + (crypto_int64) (1<<24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-
-  carry0 = (h0 + (crypto_int64) (1<<25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
deleted file mode 100644
index 0fa4932..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_sub_curve25519_ref10.c
+++ /dev/null
@@ -1,61 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-h = f - g
-Can overlap h with f or g.
-
-Preconditions:
-   |f| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-   |g| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-*/
-
-void fe_sub(fe h,fe f,fe g)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 h0 = f0 - g0;
-  crypto_int32 h1 = f1 - g1;
-  crypto_int32 h2 = f2 - g2;
-  crypto_int32 h3 = f3 - g3;
-  crypto_int32 h4 = f4 - g4;
-  crypto_int32 h5 = f5 - g5;
-  crypto_int32 h6 = f6 - g6;
-  crypto_int32 h7 = f7 - g7;
-  crypto_int32 h8 = f8 - g8;
-  crypto_int32 h9 = f9 - g9;
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
deleted file mode 100644
index 4e033fb..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/fe_tobytes_curve25519_ref10.c
+++ /dev/null
@@ -1,123 +0,0 @@
-#include "fe.h"
-
-#ifndef HAVE_TI_MODE
-
-/*
-Preconditions:
-  |h| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-
-Write p=2^255-19; q=floor(h/p).
-Basic claim: q = floor(2^(-255)(h + 19 2^(-25)h9 + 2^(-1))).
-
-Proof:
-  Have |h|<=p so |q|<=1 so |19^2 2^(-255) q|<1/4.
-  Also have |h-2^230 h9|<2^230 so |19 2^(-255)(h-2^230 h9)|<1/4.
-
-  Write y=2^(-1)-19^2 2^(-255)q-19 2^(-255)(h-2^230 h9).
-  Then 0<y<1.
-
-  Write r=h-pq.
-  Have 0<=r<=p-1=2^255-20.
-  Thus 0<=r+19(2^-255)r<r+19(2^-255)2^255<=2^255-1.
-
-  Write x=r+19(2^-255)r+y.
-  Then 0<x<2^255 so floor(2^(-255)x) = 0 so floor(q+2^(-255)x) = q.
-
-  Have q+2^(-255)x = 2^(-255)(h + 19 2^(-25) h9 + 2^(-1))
-  so floor(2^(-255)(h + 19 2^(-25) h9 + 2^(-1))) = q.
-*/
-
-void fe_tobytes(unsigned char *s,fe h)
-{
-  crypto_int32 h0 = h[0];
-  crypto_int32 h1 = h[1];
-  crypto_int32 h2 = h[2];
-  crypto_int32 h3 = h[3];
-  crypto_int32 h4 = h[4];
-  crypto_int32 h5 = h[5];
-  crypto_int32 h6 = h[6];
-  crypto_int32 h7 = h[7];
-  crypto_int32 h8 = h[8];
-  crypto_int32 h9 = h[9];
-  crypto_int32 q;
-  crypto_int32 carry0;
-  crypto_int32 carry1;
-  crypto_int32 carry2;
-  crypto_int32 carry3;
-  crypto_int32 carry4;
-  crypto_int32 carry5;
-  crypto_int32 carry6;
-  crypto_int32 carry7;
-  crypto_int32 carry8;
-  crypto_int32 carry9;
-
-  q = (19 * h9 + (((crypto_int32) 1) << 24)) >> 25;
-  q = (h0 + q) >> 26;
-  q = (h1 + q) >> 25;
-  q = (h2 + q) >> 26;
-  q = (h3 + q) >> 25;
-  q = (h4 + q) >> 26;
-  q = (h5 + q) >> 25;
-  q = (h6 + q) >> 26;
-  q = (h7 + q) >> 25;
-  q = (h8 + q) >> 26;
-  q = (h9 + q) >> 25;
-
-  /* Goal: Output h-(2^255-19)q, which is between 0 and 2^255-20. */
-  h0 += 19 * q;
-  /* Goal: Output h-2^255 q, which is between 0 and 2^255-20. */
-
-  carry0 = h0 >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry1 = h1 >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry2 = h2 >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry3 = h3 >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry4 = h4 >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry5 = h5 >> 25; h6 += carry5; h5 -= carry5 << 25;
-  carry6 = h6 >> 26; h7 += carry6; h6 -= carry6 << 26;
-  carry7 = h7 >> 25; h8 += carry7; h7 -= carry7 << 25;
-  carry8 = h8 >> 26; h9 += carry8; h8 -= carry8 << 26;
-  carry9 = h9 >> 25;               h9 -= carry9 << 25;
-                  /* h10 = carry9 */
-
-  /*
-  Goal: Output h0+...+2^255 h10-2^255 q, which is between 0 and 2^255-20.
-  Have h0+...+2^230 h9 between 0 and 2^255-1;
-  evidently 2^255 h10-2^255 q = 0.
-  Goal: Output h0+...+2^230 h9.
-  */
-
-  s[0] = h0 >> 0;
-  s[1] = h0 >> 8;
-  s[2] = h0 >> 16;
-  s[3] = (h0 >> 24) | (h1 << 2);
-  s[4] = h1 >> 6;
-  s[5] = h1 >> 14;
-  s[6] = (h1 >> 22) | (h2 << 3);
-  s[7] = h2 >> 5;
-  s[8] = h2 >> 13;
-  s[9] = (h2 >> 21) | (h3 << 5);
-  s[10] = h3 >> 3;
-  s[11] = h3 >> 11;
-  s[12] = (h3 >> 19) | (h4 << 6);
-  s[13] = h4 >> 2;
-  s[14] = h4 >> 10;
-  s[15] = h4 >> 18;
-  s[16] = h5 >> 0;
-  s[17] = h5 >> 8;
-  s[18] = h5 >> 16;
-  s[19] = (h5 >> 24) | (h6 << 1);
-  s[20] = h6 >> 7;
-  s[21] = h6 >> 15;
-  s[22] = (h6 >> 23) | (h7 << 3);
-  s[23] = h7 >> 5;
-  s[24] = h7 >> 13;
-  s[25] = (h7 >> 21) | (h8 << 4);
-  s[26] = h8 >> 4;
-  s[27] = h8 >> 12;
-  s[28] = (h8 >> 20) | (h9 << 6);
-  s[29] = h9 >> 2;
-  s[30] = h9 >> 10;
-  s[31] = h9 >> 18;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/montgomery.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/montgomery.h
deleted file mode 100644
index 91e28c0..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/montgomery.h
+++ /dev/null
@@ -1,140 +0,0 @@
-
-/* qhasm: fe X2 */
-
-/* qhasm: fe Z2 */
-
-/* qhasm: fe X3 */
-
-/* qhasm: fe Z3 */
-
-/* qhasm: fe X4 */
-
-/* qhasm: fe Z4 */
-
-/* qhasm: fe X5 */
-
-/* qhasm: fe Z5 */
-
-/* qhasm: fe A */
-
-/* qhasm: fe B */
-
-/* qhasm: fe C */
-
-/* qhasm: fe D */
-
-/* qhasm: fe E */
-
-/* qhasm: fe AA */
-
-/* qhasm: fe BB */
-
-/* qhasm: fe DA */
-
-/* qhasm: fe CB */
-
-/* qhasm: fe t0 */
-
-/* qhasm: fe t1 */
-
-/* qhasm: fe t2 */
-
-/* qhasm: fe t3 */
-
-/* qhasm: fe t4 */
-
-/* qhasm: enter ladder */
-
-/* qhasm: D = X3-Z3 */
-/* asm 1: fe_sub(>D=fe#5,<X3=fe#3,<Z3=fe#4); */
-/* asm 2: fe_sub(>D=tmp0,<X3=x3,<Z3=z3); */
-fe_sub(tmp0,x3,z3);
-
-/* qhasm: B = X2-Z2 */
-/* asm 1: fe_sub(>B=fe#6,<X2=fe#1,<Z2=fe#2); */
-/* asm 2: fe_sub(>B=tmp1,<X2=x2,<Z2=z2); */
-fe_sub(tmp1,x2,z2);
-
-/* qhasm: A = X2+Z2 */
-/* asm 1: fe_add(>A=fe#1,<X2=fe#1,<Z2=fe#2); */
-/* asm 2: fe_add(>A=x2,<X2=x2,<Z2=z2); */
-fe_add(x2,x2,z2);
-
-/* qhasm: C = X3+Z3 */
-/* asm 1: fe_add(>C=fe#2,<X3=fe#3,<Z3=fe#4); */
-/* asm 2: fe_add(>C=z2,<X3=x3,<Z3=z3); */
-fe_add(z2,x3,z3);
-
-/* qhasm: DA = D*A */
-/* asm 1: fe_mul(>DA=fe#4,<D=fe#5,<A=fe#1); */
-/* asm 2: fe_mul(>DA=z3,<D=tmp0,<A=x2); */
-fe_mul(z3,tmp0,x2);
-
-/* qhasm: CB = C*B */
-/* asm 1: fe_mul(>CB=fe#2,<C=fe#2,<B=fe#6); */
-/* asm 2: fe_mul(>CB=z2,<C=z2,<B=tmp1); */
-fe_mul(z2,z2,tmp1);
-
-/* qhasm: BB = B^2 */
-/* asm 1: fe_sq(>BB=fe#5,<B=fe#6); */
-/* asm 2: fe_sq(>BB=tmp0,<B=tmp1); */
-fe_sq(tmp0,tmp1);
-
-/* qhasm: AA = A^2 */
-/* asm 1: fe_sq(>AA=fe#6,<A=fe#1); */
-/* asm 2: fe_sq(>AA=tmp1,<A=x2); */
-fe_sq(tmp1,x2);
-
-/* qhasm: t0 = DA+CB */
-/* asm 1: fe_add(>t0=fe#3,<DA=fe#4,<CB=fe#2); */
-/* asm 2: fe_add(>t0=x3,<DA=z3,<CB=z2); */
-fe_add(x3,z3,z2);
-
-/* qhasm: assign x3 to t0 */
-
-/* qhasm: t1 = DA-CB */
-/* asm 1: fe_sub(>t1=fe#2,<DA=fe#4,<CB=fe#2); */
-/* asm 2: fe_sub(>t1=z2,<DA=z3,<CB=z2); */
-fe_sub(z2,z3,z2);
-
-/* qhasm: X4 = AA*BB */
-/* asm 1: fe_mul(>X4=fe#1,<AA=fe#6,<BB=fe#5); */
-/* asm 2: fe_mul(>X4=x2,<AA=tmp1,<BB=tmp0); */
-fe_mul(x2,tmp1,tmp0);
-
-/* qhasm: E = AA-BB */
-/* asm 1: fe_sub(>E=fe#6,<AA=fe#6,<BB=fe#5); */
-/* asm 2: fe_sub(>E=tmp1,<AA=tmp1,<BB=tmp0); */
-fe_sub(tmp1,tmp1,tmp0);
-
-/* qhasm: t2 = t1^2 */
-/* asm 1: fe_sq(>t2=fe#2,<t1=fe#2); */
-/* asm 2: fe_sq(>t2=z2,<t1=z2); */
-fe_sq(z2,z2);
-
-/* qhasm: t3 = a24*E */
-/* asm 1: fe_mul121666(>t3=fe#4,<E=fe#6); */
-/* asm 2: fe_mul121666(>t3=z3,<E=tmp1); */
-fe_mul121666(z3,tmp1);
-
-/* qhasm: X5 = t0^2 */
-/* asm 1: fe_sq(>X5=fe#3,<t0=fe#3); */
-/* asm 2: fe_sq(>X5=x3,<t0=x3); */
-fe_sq(x3,x3);
-
-/* qhasm: t4 = BB+t3 */
-/* asm 1: fe_add(>t4=fe#5,<BB=fe#5,<t3=fe#4); */
-/* asm 2: fe_add(>t4=tmp0,<BB=tmp0,<t3=z3); */
-fe_add(tmp0,tmp0,z3);
-
-/* qhasm: Z5 = X1*t2 */
-/* asm 1: fe_mul(>Z5=fe#4,x1,<t2=fe#2); */
-/* asm 2: fe_mul(>Z5=z3,x1,<t2=z2); */
-fe_mul(z3,x1,z2);
-
-/* qhasm: Z4 = E*t4 */
-/* asm 1: fe_mul(>Z4=fe#2,<E=fe#6,<t4=fe#5); */
-/* asm 2: fe_mul(>Z4=z2,<E=tmp1,<t4=tmp0); */
-fe_mul(z2,tmp1,tmp0);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/pow225521.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/pow225521.h
deleted file mode 100644
index 8397222..0000000
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/ref10/pow225521.h
+++ /dev/null
@@ -1,160 +0,0 @@
-
-/* qhasm: fe z1 */
-
-/* qhasm: fe z2 */
-
-/* qhasm: fe z8 */
-
-/* qhasm: fe z9 */
-
-/* qhasm: fe z11 */
-
-/* qhasm: fe z22 */
-
-/* qhasm: fe z_5_0 */
-
-/* qhasm: fe z_10_5 */
-
-/* qhasm: fe z_10_0 */
-
-/* qhasm: fe z_20_10 */
-
-/* qhasm: fe z_20_0 */
-
-/* qhasm: fe z_40_20 */
-
-/* qhasm: fe z_40_0 */
-
-/* qhasm: fe z_50_10 */
-
-/* qhasm: fe z_50_0 */
-
-/* qhasm: fe z_100_50 */
-
-/* qhasm: fe z_100_0 */
-
-/* qhasm: fe z_200_100 */
-
-/* qhasm: fe z_200_0 */
-
-/* qhasm: fe z_250_50 */
-
-/* qhasm: fe z_250_0 */
-
-/* qhasm: fe z_255_5 */
-
-/* qhasm: fe z_255_21 */
-
-/* qhasm: enter pow225521 */
-
-/* qhasm: z2 = z1^2^1 */
-/* asm 1: fe_sq(>z2=fe#1,<z1=fe#11); for (i = 1;i < 1;++i) fe_sq(>z2=fe#1,>z2=fe#1); */
-/* asm 2: fe_sq(>z2=t0,<z1=z); for (i = 1;i < 1;++i) fe_sq(>z2=t0,>z2=t0); */
-fe_sq(t0,z); /* for (i = 1;i < 1;++i) fe_sq(t0,t0); */
-
-/* qhasm: z8 = z2^2^2 */
-/* asm 1: fe_sq(>z8=fe#2,<z2=fe#1); for (i = 1;i < 2;++i) fe_sq(>z8=fe#2,>z8=fe#2); */
-/* asm 2: fe_sq(>z8=t1,<z2=t0); for (i = 1;i < 2;++i) fe_sq(>z8=t1,>z8=t1); */
-fe_sq(t1,t0); for (i = 1;i < 2;++i) fe_sq(t1,t1);
-
-/* qhasm: z9 = z1*z8 */
-/* asm 1: fe_mul(>z9=fe#2,<z1=fe#11,<z8=fe#2); */
-/* asm 2: fe_mul(>z9=t1,<z1=z,<z8=t1); */
-fe_mul(t1,z,t1);
-
-/* qhasm: z11 = z2*z9 */
-/* asm 1: fe_mul(>z11=fe#1,<z2=fe#1,<z9=fe#2); */
-/* asm 2: fe_mul(>z11=t0,<z2=t0,<z9=t1); */
-fe_mul(t0,t0,t1);
-
-/* qhasm: z22 = z11^2^1 */
-/* asm 1: fe_sq(>z22=fe#3,<z11=fe#1); for (i = 1;i < 1;++i) fe_sq(>z22=fe#3,>z22=fe#3); */
-/* asm 2: fe_sq(>z22=t2,<z11=t0); for (i = 1;i < 1;++i) fe_sq(>z22=t2,>z22=t2); */
-fe_sq(t2,t0); /* for (i = 1;i < 1;++i) fe_sq(t2,t2); */
-
-/* qhasm: z_5_0 = z9*z22 */
-/* asm 1: fe_mul(>z_5_0=fe#2,<z9=fe#2,<z22=fe#3); */
-/* asm 2: fe_mul(>z_5_0=t1,<z9=t1,<z22=t2); */
-fe_mul(t1,t1,t2);
-
-/* qhasm: z_10_5 = z_5_0^2^5 */
-/* asm 1: fe_sq(>z_10_5=fe#3,<z_5_0=fe#2); for (i = 1;i < 5;++i) fe_sq(>z_10_5=fe#3,>z_10_5=fe#3); */
-/* asm 2: fe_sq(>z_10_5=t2,<z_5_0=t1); for (i = 1;i < 5;++i) fe_sq(>z_10_5=t2,>z_10_5=t2); */
-fe_sq(t2,t1); for (i = 1;i < 5;++i) fe_sq(t2,t2);
-
-/* qhasm: z_10_0 = z_10_5*z_5_0 */
-/* asm 1: fe_mul(>z_10_0=fe#2,<z_10_5=fe#3,<z_5_0=fe#2); */
-/* asm 2: fe_mul(>z_10_0=t1,<z_10_5=t2,<z_5_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_20_10 = z_10_0^2^10 */
-/* asm 1: fe_sq(>z_20_10=fe#3,<z_10_0=fe#2); for (i = 1;i < 10;++i) fe_sq(>z_20_10=fe#3,>z_20_10=fe#3); */
-/* asm 2: fe_sq(>z_20_10=t2,<z_10_0=t1); for (i = 1;i < 10;++i) fe_sq(>z_20_10=t2,>z_20_10=t2); */
-fe_sq(t2,t1); for (i = 1;i < 10;++i) fe_sq(t2,t2);
-
-/* qhasm: z_20_0 = z_20_10*z_10_0 */
-/* asm 1: fe_mul(>z_20_0=fe#3,<z_20_10=fe#3,<z_10_0=fe#2); */
-/* asm 2: fe_mul(>z_20_0=t2,<z_20_10=t2,<z_10_0=t1); */
-fe_mul(t2,t2,t1);
-
-/* qhasm: z_40_20 = z_20_0^2^20 */
-/* asm 1: fe_sq(>z_40_20=fe#4,<z_20_0=fe#3); for (i = 1;i < 20;++i) fe_sq(>z_40_20=fe#4,>z_40_20=fe#4); */
-/* asm 2: fe_sq(>z_40_20=t3,<z_20_0=t2); for (i = 1;i < 20;++i) fe_sq(>z_40_20=t3,>z_40_20=t3); */
-fe_sq(t3,t2); for (i = 1;i < 20;++i) fe_sq(t3,t3);
-
-/* qhasm: z_40_0 = z_40_20*z_20_0 */
-/* asm 1: fe_mul(>z_40_0=fe#3,<z_40_20=fe#4,<z_20_0=fe#3); */
-/* asm 2: fe_mul(>z_40_0=t2,<z_40_20=t3,<z_20_0=t2); */
-fe_mul(t2,t3,t2);
-
-/* qhasm: z_50_10 = z_40_0^2^10 */
-/* asm 1: fe_sq(>z_50_10=fe#3,<z_40_0=fe#3); for (i = 1;i < 10;++i) fe_sq(>z_50_10=fe#3,>z_50_10=fe#3); */
-/* asm 2: fe_sq(>z_50_10=t2,<z_40_0=t2); for (i = 1;i < 10;++i) fe_sq(>z_50_10=t2,>z_50_10=t2); */
-fe_sq(t2,t2); for (i = 1;i < 10;++i) fe_sq(t2,t2);
-
-/* qhasm: z_50_0 = z_50_10*z_10_0 */
-/* asm 1: fe_mul(>z_50_0=fe#2,<z_50_10=fe#3,<z_10_0=fe#2); */
-/* asm 2: fe_mul(>z_50_0=t1,<z_50_10=t2,<z_10_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_100_50 = z_50_0^2^50 */
-/* asm 1: fe_sq(>z_100_50=fe#3,<z_50_0=fe#2); for (i = 1;i < 50;++i) fe_sq(>z_100_50=fe#3,>z_100_50=fe#3); */
-/* asm 2: fe_sq(>z_100_50=t2,<z_50_0=t1); for (i = 1;i < 50;++i) fe_sq(>z_100_50=t2,>z_100_50=t2); */
-fe_sq(t2,t1); for (i = 1;i < 50;++i) fe_sq(t2,t2);
-
-/* qhasm: z_100_0 = z_100_50*z_50_0 */
-/* asm 1: fe_mul(>z_100_0=fe#3,<z_100_50=fe#3,<z_50_0=fe#2); */
-/* asm 2: fe_mul(>z_100_0=t2,<z_100_50=t2,<z_50_0=t1); */
-fe_mul(t2,t2,t1);
-
-/* qhasm: z_200_100 = z_100_0^2^100 */
-/* asm 1: fe_sq(>z_200_100=fe#4,<z_100_0=fe#3); for (i = 1;i < 100;++i) fe_sq(>z_200_100=fe#4,>z_200_100=fe#4); */
-/* asm 2: fe_sq(>z_200_100=t3,<z_100_0=t2); for (i = 1;i < 100;++i) fe_sq(>z_200_100=t3,>z_200_100=t3); */
-fe_sq(t3,t2); for (i = 1;i < 100;++i) fe_sq(t3,t3);
-
-/* qhasm: z_200_0 = z_200_100*z_100_0 */
-/* asm 1: fe_mul(>z_200_0=fe#3,<z_200_100=fe#4,<z_100_0=fe#3); */
-/* asm 2: fe_mul(>z_200_0=t2,<z_200_100=t3,<z_100_0=t2); */
-fe_mul(t2,t3,t2);
-
-/* qhasm: z_250_50 = z_200_0^2^50 */
-/* asm 1: fe_sq(>z_250_50=fe#3,<z_200_0=fe#3); for (i = 1;i < 50;++i) fe_sq(>z_250_50=fe#3,>z_250_50=fe#3); */
-/* asm 2: fe_sq(>z_250_50=t2,<z_200_0=t2); for (i = 1;i < 50;++i) fe_sq(>z_250_50=t2,>z_250_50=t2); */
-fe_sq(t2,t2); for (i = 1;i < 50;++i) fe_sq(t2,t2);
-
-/* qhasm: z_250_0 = z_250_50*z_50_0 */
-/* asm 1: fe_mul(>z_250_0=fe#2,<z_250_50=fe#3,<z_50_0=fe#2); */
-/* asm 2: fe_mul(>z_250_0=t1,<z_250_50=t2,<z_50_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_255_5 = z_250_0^2^5 */
-/* asm 1: fe_sq(>z_255_5=fe#2,<z_250_0=fe#2); for (i = 1;i < 5;++i) fe_sq(>z_255_5=fe#2,>z_255_5=fe#2); */
-/* asm 2: fe_sq(>z_255_5=t1,<z_250_0=t1); for (i = 1;i < 5;++i) fe_sq(>z_255_5=t1,>z_255_5=t1); */
-fe_sq(t1,t1); for (i = 1;i < 5;++i) fe_sq(t1,t1);
-
-/* qhasm: z_255_21 = z_255_5*z11 */
-/* asm 1: fe_mul(>z_255_21=fe#12,<z_255_5=fe#2,<z11=fe#1); */
-/* asm 2: fe_mul(>z_255_21=out,<z_255_5=t1,<z11=t0); */
-fe_mul(out,t1,t0);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h
index c9f3efe..9f81fa6 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/consts_namespace.h
@@ -16,5 +16,5 @@
 #define subc2 crypto_scalarmult_curve25519_sandy2x_subc2
 #define REDMASK51 crypto_scalarmult_curve25519_sandy2x_REDMASK51
 
-#endif //ifndef consts_namespace_H
+#endif /* ifndef consts_namespace_H */
 
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c
index 3d126a0..98b7cf7 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/curve25519_sandy2x.c
@@ -25,22 +25,22 @@ static int
 crypto_scalarmult_curve25519_sandy2x(unsigned char *q, const unsigned char *n,
                                      const unsigned char *p)
 {
-  unsigned char e[32];
-  unsigned int i;
-
-  fe var[3];
-
-  fe51 x_51;
-  fe51 z_51;
-
-  for (i = 0;i < 32;++i) e[i] = n[i];
-  e[0] &= 248;
-  e[31] &= 127;
-  e[31] |= 64;
+  unsigned char *t = q;
+  fe             var[3];
+  fe51           x_51;
+  fe51           z_51;
+  unsigned int   i;
+
+  for (i = 0; i < 32; i++) {
+      t[i] = n[i];
+  }
+  t[0] &= 248;
+  t[31] &= 127;
+  t[31] |= 64;
 
   fe_frombytes(x1, p);
 
-  ladder(var, e);
+  ladder(var, t);
 
   z_51.v[0] = (z2[1] << 26) + z2[0];
   z_51.v[1] = (z2[3] << 26) + z2[2];
@@ -71,20 +71,20 @@ static int
 crypto_scalarmult_curve25519_sandy2x_base(unsigned char *q,
                                           const unsigned char *n)
 {
-  unsigned char e[32];
-  unsigned int i;
-
-  fe var[3];
-
-  fe51 x_51;
-  fe51 z_51;
-
-  for (i = 0;i < 32;++i) e[i] = n[i];
-  e[0] &= 248;
-  e[31] &= 127;
-  e[31] |= 64;
-
-  ladder_base(var, e);
+  unsigned char *t = q;
+  fe             var[3];
+  fe51           x_51;
+  fe51           z_51;
+  unsigned int   i;
+
+  for (i = 0;i < 32; i++) {
+      t[i] = n[i];
+  }
+  t[0] &= 248;
+  t[31] &= 127;
+  t[31] |= 64;
+
+  ladder_base(var, t);
 
   z_51.v[0] = (z2[1] << 26) + z2[0];
   z_51.v[1] = (z2[3] << 26) + z2[2];
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h
index a9a50e6..b1115f8 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe.h
@@ -6,9 +6,10 @@
 #ifndef fe_H
 #define fe_H
 
-#include "crypto_uint64.h"
+#include <stdint.h>
+#include <stdlib.h>
 
-typedef crypto_uint64 fe[10];
+typedef uint64_t fe[10];
 
 /*
 fe means field element.
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h
index 7e88ef9..8e3f199 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51.h
@@ -12,12 +12,14 @@
 extern "C" {
 #endif
 
-#include "crypto_uint64.h"
+#include <stdint.h>
+#include <stdlib.h>
+
 #include "fe51_namespace.h"
 
-typedef struct 
+typedef struct
 {
-  crypto_uint64 v[5]; 
+    uint64_t v[5];
 }
 fe51;
 
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c
index a9d0be7..ec9bb1a 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_invert.c
@@ -9,49 +9,50 @@
 
 #define fe51_square(x, y) fe51_nsquare(x, y, 1)
 
-void fe51_invert(fe51 *r, const fe51 *x)
+void
+fe51_invert(fe51 *r, const fe51 *x)
 {
-	fe51 z2;
-	fe51 z9;
-	fe51 z11;
-	fe51 z2_5_0;
-	fe51 z2_10_0;
-	fe51 z2_20_0;
-	fe51 z2_50_0;
-	fe51 z2_100_0;
-	fe51 t;
-	
-	/* 2 */ fe51_square(&z2,x);
-	/* 4 */ fe51_square(&t,&z2);
-	/* 8 */ fe51_square(&t,&t);
-	/* 9 */ fe51_mul(&z9,&t,x);
-	/* 11 */ fe51_mul(&z11,&z9,&z2);
-	/* 22 */ fe51_square(&t,&z11);
-	/* 2^5 - 2^0 = 31 */ fe51_mul(&z2_5_0,&t,&z9);
-
-	/* 2^10 - 2^5 */ fe51_nsquare(&t,&z2_5_0, 5); 
-	/* 2^10 - 2^0 */ fe51_mul(&z2_10_0,&t,&z2_5_0);
-
-	/* 2^20 - 2^10 */ fe51_nsquare(&t,&z2_10_0, 10); 
-	/* 2^20 - 2^0 */ fe51_mul(&z2_20_0,&t,&z2_10_0);
-
-	/* 2^40 - 2^20 */ fe51_nsquare(&t,&z2_20_0, 20); 
-	/* 2^40 - 2^0 */ fe51_mul(&t,&t,&z2_20_0);
-
-	/* 2^50 - 2^10 */ fe51_nsquare(&t,&t,10);
-	/* 2^50 - 2^0 */ fe51_mul(&z2_50_0,&t,&z2_10_0);
-
-	/* 2^100 - 2^50 */ fe51_nsquare(&t,&z2_50_0, 50); 
-	/* 2^100 - 2^0 */ fe51_mul(&z2_100_0,&t,&z2_50_0);
-
-	/* 2^200 - 2^100 */ fe51_nsquare(&t,&z2_100_0, 100); 
-	/* 2^200 - 2^0 */ fe51_mul(&t,&t,&z2_100_0);
-
-	/* 2^250 - 2^50 */ fe51_nsquare(&t,&t, 50);
-	/* 2^250 - 2^0 */ fe51_mul(&t,&t,&z2_50_0);
-
-	/* 2^255 - 2^5 */ fe51_nsquare(&t,&t,5);
-	/* 2^255 - 21 */ fe51_mul(r,&t,&z11);
+    fe51 z2;
+    fe51 z9;
+    fe51 z11;
+    fe51 z2_5_0;
+    fe51 z2_10_0;
+    fe51 z2_20_0;
+    fe51 z2_50_0;
+    fe51 z2_100_0;
+    fe51 t;
+
+    /* 2 */ fe51_square(&z2,x);
+    /* 4 */ fe51_square(&t,&z2);
+    /* 8 */ fe51_square(&t,&t);
+    /* 9 */ fe51_mul(&z9,&t,x);
+    /* 11 */ fe51_mul(&z11,&z9,&z2);
+    /* 22 */ fe51_square(&t,&z11);
+    /* 2^5 - 2^0 = 31 */ fe51_mul(&z2_5_0,&t,&z9);
+
+    /* 2^10 - 2^5 */ fe51_nsquare(&t,&z2_5_0, 5);
+    /* 2^10 - 2^0 */ fe51_mul(&z2_10_0,&t,&z2_5_0);
+
+    /* 2^20 - 2^10 */ fe51_nsquare(&t,&z2_10_0, 10);
+    /* 2^20 - 2^0 */ fe51_mul(&z2_20_0,&t,&z2_10_0);
+
+    /* 2^40 - 2^20 */ fe51_nsquare(&t,&z2_20_0, 20);
+    /* 2^40 - 2^0 */ fe51_mul(&t,&t,&z2_20_0);
+
+    /* 2^50 - 2^10 */ fe51_nsquare(&t,&t,10);
+    /* 2^50 - 2^0 */ fe51_mul(&z2_50_0,&t,&z2_10_0);
+
+    /* 2^100 - 2^50 */ fe51_nsquare(&t,&z2_50_0, 50);
+    /* 2^100 - 2^0 */ fe51_mul(&z2_100_0,&t,&z2_50_0);
+
+    /* 2^200 - 2^100 */ fe51_nsquare(&t,&z2_100_0, 100);
+    /* 2^200 - 2^0 */ fe51_mul(&t,&t,&z2_100_0);
+
+    /* 2^250 - 2^50 */ fe51_nsquare(&t,&t, 50);
+    /* 2^250 - 2^0 */ fe51_mul(&t,&t,&z2_50_0);
+
+    /* 2^255 - 2^5 */ fe51_nsquare(&t,&t,5);
+    /* 2^255 - 21 */ fe51_mul(r,&t,&z11);
 }
 
 #endif
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S
index 3b76378..83501b0 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_mul.S
@@ -7,10 +7,18 @@
 #include "consts_namespace.h"
 .text
 .p2align 5
-.globl _fe51_mul
+#ifdef ASM_HIDE_SYMBOL
+ASM_HIDE_SYMBOL fe51_mul
+ASM_HIDE_SYMBOL _fe51_mul
+#endif
 .globl fe51_mul
-_fe51_mul:
+.globl _fe51_mul
+#ifdef __ELF__
+.type fe51_mul, @function
+.type _fe51_mul, @function
+#endif
 fe51_mul:
+_fe51_mul:
 mov %rsp,%r11
 and $31,%r11
 add $96,%r11
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h
index 9d8f942..057f242 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_namespace.h
@@ -12,5 +12,5 @@
 
 #define  fe51_invert       crypto_scalarmult_curve25519_sandy2x_fe51_invert
 
-#endif //ifndef fe51_namespace_H
+#endif /* ifndef fe51_namespace_H */
 
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S
index 9b74ee3..41c3054 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_nsquare.S
@@ -8,6 +8,10 @@
 #include "consts_namespace.h"
 .p2align 5
 
+#ifdef ASM_HIDE_SYMBOL
+ASM_HIDE_SYMBOL fe51_nsquare
+ASM_HIDE_SYMBOL _fe51_nsquare
+#endif
 .globl fe51_nsquare
 .globl _fe51_nsquare
 #ifdef __ELF__
@@ -37,6 +41,8 @@ movq   %r9,16(%rdi)
 movq   %rax,24(%rdi)
 movq   %rsi,32(%rdi)
 mov  %rdx,%rsi
+
+.p2align 4
 ._loop:
 sub  $1,%rsi
 mov  %rcx,%rax
@@ -150,6 +156,7 @@ and  %rdx,%r10
 movq   %r10,32(%rdi)
 cmp  $0,%rsi
 jne ._loop
+
 movq   %rcx,0(%rdi)
 movq   %r8,8(%rdi)
 movq 0(%rsp),%r11
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S
index c8cf405..500c858 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe51_pack.S
@@ -8,6 +8,10 @@
 #include "consts_namespace.h"
 .p2align 5
 
+#ifdef ASM_HIDE_SYMBOL
+ASM_HIDE_SYMBOL fe51_pack
+ASM_HIDE_SYMBOL _fe51_pack
+#endif
 .globl fe51_pack
 .globl _fe51_pack
 #ifdef __ELF__
@@ -31,6 +35,8 @@ movq   32(%rsi),%rsi
 movq REDMASK51(%rip),%rax
 lea  -18(%rax),%r10
 mov  $3,%r11
+
+.p2align 4
 ._reduceloop:
 mov  %rdx,%r12
 shr  $51,%r12
@@ -55,6 +61,7 @@ imulq  $19, %r12,%r12
 add  %r12,%rdx
 sub  $1,%r11
 ja ._reduceloop
+
 mov  $1,%r12
 cmp  %r10,%rdx
 cmovl %r11,%r12
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c
index 0de060c..2fe081e 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/fe_frombytes_sandy2x.c
@@ -3,51 +3,53 @@
 */
 
 #include "fe.h"
-#include "crypto_uint64.h"
 
 #ifdef HAVE_AVX_ASM
 
-static crypto_uint64 load_3(const unsigned char *in)
+static uint64_t
+load_3(const unsigned char *in)
 {
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
+  uint64_t result;
+  result = (uint64_t) in[0];
+  result |= ((uint64_t) in[1]) << 8;
+  result |= ((uint64_t) in[2]) << 16;
   return result;
 }
 
-static crypto_uint64 load_4(const unsigned char *in)
+static uint64_t
+load_4(const unsigned char *in)
 {
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  result |= ((crypto_uint64) in[3]) << 24;
+  uint64_t result;
+  result = (uint64_t) in[0];
+  result |= ((uint64_t) in[1]) << 8;
+  result |= ((uint64_t) in[2]) << 16;
+  result |= ((uint64_t) in[3]) << 24;
   return result;
 }
 
-void fe_frombytes(fe h,const unsigned char *s)
+void
+fe_frombytes(fe h, const unsigned char *s)
 {
-  crypto_uint64 h0 = load_4(s);
-  crypto_uint64 h1 = load_3(s + 4) << 6;
-  crypto_uint64 h2 = load_3(s + 7) << 5;
-  crypto_uint64 h3 = load_3(s + 10) << 3;
-  crypto_uint64 h4 = load_3(s + 13) << 2;
-  crypto_uint64 h5 = load_4(s + 16);
-  crypto_uint64 h6 = load_3(s + 20) << 7;
-  crypto_uint64 h7 = load_3(s + 23) << 5;
-  crypto_uint64 h8 = load_3(s + 26) << 4;
-  crypto_uint64 h9 = (load_3(s + 29) & 8388607) << 2;
-  crypto_uint64 carry0;
-  crypto_uint64 carry1;
-  crypto_uint64 carry2;
-  crypto_uint64 carry3;
-  crypto_uint64 carry4;
-  crypto_uint64 carry5;
-  crypto_uint64 carry6;
-  crypto_uint64 carry7;
-  crypto_uint64 carry8;
-  crypto_uint64 carry9;
+  uint64_t h0 = load_4(s);
+  uint64_t h1 = load_3(s + 4) << 6;
+  uint64_t h2 = load_3(s + 7) << 5;
+  uint64_t h3 = load_3(s + 10) << 3;
+  uint64_t h4 = load_3(s + 13) << 2;
+  uint64_t h5 = load_4(s + 16);
+  uint64_t h6 = load_3(s + 20) << 7;
+  uint64_t h7 = load_3(s + 23) << 5;
+  uint64_t h8 = load_3(s + 26) << 4;
+  uint64_t h9 = (load_3(s + 29) & 8388607) << 2;
+  uint64_t carry0;
+  uint64_t carry1;
+  uint64_t carry2;
+  uint64_t carry3;
+  uint64_t carry4;
+  uint64_t carry5;
+  uint64_t carry6;
+  uint64_t carry7;
+  uint64_t carry8;
+  uint64_t carry9;
 
   carry9 = h9 >> 25; h0 += carry9 * 19; h9 &= 0x1FFFFFF;
   carry1 = h1 >> 25; h2 += carry1; h1 &= 0x1FFFFFF;
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S
index 0adc44a..c5c0602 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.S
@@ -4,6 +4,10 @@
 #include "consts_namespace.h"
 .p2align 5
 
+#ifdef ASM_HIDE_SYMBOL
+ASM_HIDE_SYMBOL ladder
+ASM_HIDE_SYMBOL _ladder
+#endif
 .globl ladder
 .globl _ladder
 #ifdef __ELF__
@@ -21,77 +25,77 @@ movq %r11,1824(%rsp)
 movq %r12,1832(%rsp)
 movq %r13,1840(%rsp)
 movq %r14,1848(%rsp)
-movdqa v0_0(%rip),%xmm0
-movdqa v1_0(%rip),%xmm1
-movdqu   0(%rdi),%xmm2
-movdqa %xmm2,0(%rsp)
-movdqu   16(%rdi),%xmm2
-movdqa %xmm2,16(%rsp)
-movdqu   32(%rdi),%xmm2
-movdqa %xmm2,32(%rsp)
-movdqu   48(%rdi),%xmm2
-movdqa %xmm2,48(%rsp)
-movdqu   64(%rdi),%xmm2
-movdqa %xmm2,64(%rsp)
-movdqa %xmm1,80(%rsp)
-movdqa %xmm0,96(%rsp)
-movdqa %xmm0,112(%rsp)
-movdqa %xmm0,128(%rsp)
-movdqa %xmm0,144(%rsp)
-movdqa %xmm1,%xmm0
-pxor %xmm1,%xmm1
-pxor %xmm2,%xmm2
-pxor %xmm3,%xmm3
-pxor %xmm4,%xmm4
-pxor %xmm5,%xmm5
-pxor %xmm6,%xmm6
-pxor %xmm7,%xmm7
-pxor %xmm8,%xmm8
-pxor %xmm9,%xmm9
-movdqu   0(%rdi),%xmm10
-movdqa %xmm10,160(%rsp)
-movdqu   16(%rdi),%xmm10
-movdqa %xmm10,176(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,192(%rsp)
-movdqu   32(%rdi),%xmm10
-movdqa %xmm10,208(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,224(%rsp)
-movdqu   48(%rdi),%xmm10
-movdqa %xmm10,240(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,256(%rsp)
-movdqu   64(%rdi),%xmm10
-movdqa %xmm10,272(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,288(%rsp)
-movdqu   8(%rdi),%xmm10
-pmuludq v2_1(%rip),%xmm10
-movdqa %xmm10,304(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,320(%rsp)
-movdqu   24(%rdi),%xmm10
-pmuludq v2_1(%rip),%xmm10
-movdqa %xmm10,336(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,352(%rsp)
-movdqu   40(%rdi),%xmm10
-pmuludq v2_1(%rip),%xmm10
-movdqa %xmm10,368(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,384(%rsp)
-movdqu   56(%rdi),%xmm10
-pmuludq v2_1(%rip),%xmm10
-movdqa %xmm10,400(%rsp)
-pmuludq v19_19(%rip),%xmm10
-movdqa %xmm10,416(%rsp)
-movdqu   0(%rdi),%xmm10
-movdqu   64(%rdi),%xmm11
-blendps $12, %xmm11, %xmm10
-pshufd $2,%xmm10,%xmm10
-pmuludq v38_1(%rip),%xmm10
-movdqa %xmm10,432(%rsp)
+vmovdqa v0_0(%rip),%xmm0
+vmovdqa v1_0(%rip),%xmm1
+vmovdqu 0(%rdi),%xmm2
+vmovdqa %xmm2,0(%rsp)
+vmovdqu 16(%rdi),%xmm2
+vmovdqa %xmm2,16(%rsp)
+vmovdqu 32(%rdi),%xmm2
+vmovdqa %xmm2,32(%rsp)
+vmovdqu 48(%rdi),%xmm2
+vmovdqa %xmm2,48(%rsp)
+vmovdqu 64(%rdi),%xmm2
+vmovdqa %xmm2,64(%rsp)
+vmovdqa %xmm1,80(%rsp)
+vmovdqa %xmm0,96(%rsp)
+vmovdqa %xmm0,112(%rsp)
+vmovdqa %xmm0,128(%rsp)
+vmovdqa %xmm0,144(%rsp)
+vmovdqa %xmm1,%xmm0
+vpxor %xmm1,%xmm1,%xmm1
+vpxor %xmm2,%xmm2,%xmm2
+vpxor %xmm3,%xmm3,%xmm3
+vpxor %xmm4,%xmm4,%xmm4
+vpxor %xmm5,%xmm5,%xmm5
+vpxor %xmm6,%xmm6,%xmm6
+vpxor %xmm7,%xmm7,%xmm7
+vpxor %xmm8,%xmm8,%xmm8
+vpxor %xmm9,%xmm9,%xmm9
+vmovdqu 0(%rdi),%xmm10
+vmovdqa %xmm10,160(%rsp)
+vmovdqu 16(%rdi),%xmm10
+vmovdqa %xmm10,176(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,192(%rsp)
+vmovdqu 32(%rdi),%xmm10
+vmovdqa %xmm10,208(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,224(%rsp)
+vmovdqu 48(%rdi),%xmm10
+vmovdqa %xmm10,240(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,256(%rsp)
+vmovdqu 64(%rdi),%xmm10
+vmovdqa %xmm10,272(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,288(%rsp)
+vmovdqu 8(%rdi),%xmm10
+vpmuludq v2_1(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,304(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,320(%rsp)
+vmovdqu 24(%rdi),%xmm10
+vpmuludq v2_1(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,336(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,352(%rsp)
+vmovdqu 40(%rdi),%xmm10
+vpmuludq v2_1(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,368(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,384(%rsp)
+vmovdqu 56(%rdi),%xmm10
+vpmuludq v2_1(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,400(%rsp)
+vpmuludq v19_19(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,416(%rsp)
+vmovdqu 0(%rdi),%xmm10
+vmovdqu 64(%rdi),%xmm11
+vblendps $12, %xmm11, %xmm10, %xmm10
+vpshufd $2,%xmm10,%xmm10
+vpmuludq v38_1(%rip),%xmm10,%xmm10
+vmovdqa %xmm10,432(%rsp)
 movq   0(%rsi),%rdx
 movq   8(%rsi),%rcx
 movq   16(%rsi),%r8
@@ -106,6 +110,8 @@ xorq 16(%rsi),%r8
 xorq 24(%rsi),%r9
 leaq 800(%rsp),%rsi
 mov  $64,%rax
+
+.p2align 4
 ._ladder_small_loop:
 mov  %rdx,%r10
 mov  %rcx,%r11
@@ -132,1274 +138,1276 @@ sub  $1,%rax
 jne ._ladder_small_loop
 mov  $255,%rdx
 add  $760,%rsi
+
+.p2align 4
 ._ladder_loop:
 sub  $1,%rdx
 vbroadcastss 0(%rsi),%xmm10
 sub  $4,%rsi
-movdqa 0(%rsp),%xmm11
-movdqa 80(%rsp),%xmm12
+vmovdqa 0(%rsp),%xmm11
+vmovdqa 80(%rsp),%xmm12
 vpxor %xmm11,%xmm0,%xmm13
-pand %xmm10,%xmm13
-pxor %xmm13,%xmm0
-pxor %xmm13,%xmm11
+vpand %xmm10,%xmm13,%xmm13
+vpxor %xmm13,%xmm0,%xmm0
+vpxor %xmm13,%xmm11,%xmm11
 vpxor %xmm12,%xmm1,%xmm13
-pand %xmm10,%xmm13
-pxor %xmm13,%xmm1
-pxor %xmm13,%xmm12
-movdqa 16(%rsp),%xmm13
-movdqa 96(%rsp),%xmm14
+vpand %xmm10,%xmm13,%xmm13
+vpxor %xmm13,%xmm1,%xmm1
+vpxor %xmm13,%xmm12,%xmm12
+vmovdqa 16(%rsp),%xmm13
+vmovdqa 96(%rsp),%xmm14
 vpxor %xmm13,%xmm2,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm2
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm2,%xmm2
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm3,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm3
-pxor %xmm15,%xmm14
-movdqa %xmm13,0(%rsp)
-movdqa %xmm14,16(%rsp)
-movdqa 32(%rsp),%xmm13
-movdqa 112(%rsp),%xmm14
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm3,%xmm3
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,0(%rsp)
+vmovdqa %xmm14,16(%rsp)
+vmovdqa 32(%rsp),%xmm13
+vmovdqa 112(%rsp),%xmm14
 vpxor %xmm13,%xmm4,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm4
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm4,%xmm4
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm5,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm5
-pxor %xmm15,%xmm14
-movdqa %xmm13,32(%rsp)
-movdqa %xmm14,80(%rsp)
-movdqa 48(%rsp),%xmm13
-movdqa 128(%rsp),%xmm14
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm5,%xmm5
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,32(%rsp)
+vmovdqa %xmm14,80(%rsp)
+vmovdqa 48(%rsp),%xmm13
+vmovdqa 128(%rsp),%xmm14
 vpxor %xmm13,%xmm6,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm6
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm6,%xmm6
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm7,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm7
-pxor %xmm15,%xmm14
-movdqa %xmm13,48(%rsp)
-movdqa %xmm14,96(%rsp)
-movdqa 64(%rsp),%xmm13
-movdqa 144(%rsp),%xmm14
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm7,%xmm7
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,48(%rsp)
+vmovdqa %xmm14,96(%rsp)
+vmovdqa 64(%rsp),%xmm13
+vmovdqa 144(%rsp),%xmm14
 vpxor %xmm13,%xmm8,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm8
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm8,%xmm8
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm9,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm9
-pxor %xmm15,%xmm14
-movdqa %xmm13,64(%rsp)
-movdqa %xmm14,112(%rsp)
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm9,%xmm9
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,64(%rsp)
+vmovdqa %xmm14,112(%rsp)
 vpaddq subc0(%rip),%xmm11,%xmm10
-psubq %xmm12,%xmm10
-paddq %xmm12,%xmm11
+vpsubq %xmm12,%xmm10,%xmm10
+vpaddq %xmm12,%xmm11,%xmm11
 vpunpckhqdq %xmm10,%xmm11,%xmm12
 vpunpcklqdq %xmm10,%xmm11,%xmm10
 vpaddq %xmm1,%xmm0,%xmm11
-paddq subc0(%rip),%xmm0
-psubq %xmm1,%xmm0
+vpaddq subc0(%rip),%xmm0,%xmm0
+vpsubq %xmm1,%xmm0,%xmm0
 vpunpckhqdq %xmm11,%xmm0,%xmm1
 vpunpcklqdq %xmm11,%xmm0,%xmm0
 vpmuludq %xmm0,%xmm10,%xmm11
 vpmuludq %xmm1,%xmm10,%xmm13
-movdqa %xmm1,128(%rsp)
-paddq %xmm1,%xmm1
+vmovdqa %xmm1,128(%rsp)
+vpaddq %xmm1,%xmm1,%xmm1
 vpmuludq %xmm0,%xmm12,%xmm14
-movdqa %xmm0,144(%rsp)
-paddq %xmm14,%xmm13
+vmovdqa %xmm0,144(%rsp)
+vpaddq %xmm14,%xmm13,%xmm13
 vpmuludq %xmm1,%xmm12,%xmm0
-movdqa %xmm1,448(%rsp)
+vmovdqa %xmm1,448(%rsp)
 vpaddq %xmm3,%xmm2,%xmm1
-paddq subc2(%rip),%xmm2
-psubq %xmm3,%xmm2
+vpaddq subc2(%rip),%xmm2,%xmm2
+vpsubq %xmm3,%xmm2,%xmm2
 vpunpckhqdq %xmm1,%xmm2,%xmm3
 vpunpcklqdq %xmm1,%xmm2,%xmm1
 vpmuludq %xmm1,%xmm10,%xmm2
-paddq %xmm2,%xmm0
+vpaddq %xmm2,%xmm0,%xmm0
 vpmuludq %xmm3,%xmm10,%xmm2
-movdqa %xmm3,464(%rsp)
-paddq %xmm3,%xmm3
+vmovdqa %xmm3,464(%rsp)
+vpaddq %xmm3,%xmm3,%xmm3
 vpmuludq %xmm1,%xmm12,%xmm14
-movdqa %xmm1,480(%rsp)
-paddq %xmm14,%xmm2
+vmovdqa %xmm1,480(%rsp)
+vpaddq %xmm14,%xmm2,%xmm2
 vpmuludq %xmm3,%xmm12,%xmm1
-movdqa %xmm3,496(%rsp)
+vmovdqa %xmm3,496(%rsp)
 vpaddq %xmm5,%xmm4,%xmm3
-paddq subc2(%rip),%xmm4
-psubq %xmm5,%xmm4
+vpaddq subc2(%rip),%xmm4,%xmm4
+vpsubq %xmm5,%xmm4,%xmm4
 vpunpckhqdq %xmm3,%xmm4,%xmm5
 vpunpcklqdq %xmm3,%xmm4,%xmm3
 vpmuludq %xmm3,%xmm10,%xmm4
-paddq %xmm4,%xmm1
+vpaddq %xmm4,%xmm1,%xmm1
 vpmuludq %xmm5,%xmm10,%xmm4
-movdqa %xmm5,512(%rsp)
-paddq %xmm5,%xmm5
+vmovdqa %xmm5,512(%rsp)
+vpaddq %xmm5,%xmm5,%xmm5
 vpmuludq %xmm3,%xmm12,%xmm14
-movdqa %xmm3,528(%rsp)
-paddq %xmm14,%xmm4
+vmovdqa %xmm3,528(%rsp)
+vpaddq %xmm14,%xmm4,%xmm4
 vpaddq %xmm7,%xmm6,%xmm3
-paddq subc2(%rip),%xmm6
-psubq %xmm7,%xmm6
+vpaddq subc2(%rip),%xmm6,%xmm6
+vpsubq %xmm7,%xmm6,%xmm6
 vpunpckhqdq %xmm3,%xmm6,%xmm7
 vpunpcklqdq %xmm3,%xmm6,%xmm3
 vpmuludq %xmm3,%xmm10,%xmm6
 vpmuludq %xmm5,%xmm12,%xmm14
-movdqa %xmm5,544(%rsp)
-pmuludq v19_19(%rip),%xmm5
-movdqa %xmm5,560(%rsp)
-paddq %xmm14,%xmm6
+vmovdqa %xmm5,544(%rsp)
+vpmuludq v19_19(%rip),%xmm5,%xmm5
+vmovdqa %xmm5,560(%rsp)
+vpaddq %xmm14,%xmm6,%xmm6
 vpmuludq %xmm7,%xmm10,%xmm5
-movdqa %xmm7,576(%rsp)
-paddq %xmm7,%xmm7
+vmovdqa %xmm7,576(%rsp)
+vpaddq %xmm7,%xmm7,%xmm7
 vpmuludq %xmm3,%xmm12,%xmm14
-movdqa %xmm3,592(%rsp)
-paddq %xmm14,%xmm5
-pmuludq v19_19(%rip),%xmm3
-movdqa %xmm3,608(%rsp)
+vmovdqa %xmm3,592(%rsp)
+vpaddq %xmm14,%xmm5,%xmm5
+vpmuludq v19_19(%rip),%xmm3,%xmm3
+vmovdqa %xmm3,608(%rsp)
 vpaddq %xmm9,%xmm8,%xmm3
-paddq subc2(%rip),%xmm8
-psubq %xmm9,%xmm8
+vpaddq subc2(%rip),%xmm8,%xmm8
+vpsubq %xmm9,%xmm8,%xmm8
 vpunpckhqdq %xmm3,%xmm8,%xmm9
 vpunpcklqdq %xmm3,%xmm8,%xmm3
-movdqa %xmm3,624(%rsp)
+vmovdqa %xmm3,624(%rsp)
 vpmuludq %xmm7,%xmm12,%xmm8
-movdqa %xmm7,640(%rsp)
-pmuludq v19_19(%rip),%xmm7
-movdqa %xmm7,656(%rsp)
+vmovdqa %xmm7,640(%rsp)
+vpmuludq v19_19(%rip),%xmm7,%xmm7
+vmovdqa %xmm7,656(%rsp)
 vpmuludq %xmm3,%xmm10,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq %xmm9,%xmm10,%xmm7
-movdqa %xmm9,672(%rsp)
-paddq %xmm9,%xmm9
+vmovdqa %xmm9,672(%rsp)
+vpaddq %xmm9,%xmm9,%xmm9
 vpmuludq %xmm3,%xmm12,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
-movdqa %xmm3,688(%rsp)
-pmuludq v19_19(%rip),%xmm12
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
+vmovdqa %xmm3,688(%rsp)
+vpmuludq v19_19(%rip),%xmm12,%xmm12
 vpmuludq %xmm9,%xmm12,%xmm3
-movdqa %xmm9,704(%rsp)
-paddq %xmm3,%xmm11
-movdqa 0(%rsp),%xmm3
-movdqa 16(%rsp),%xmm9
+vmovdqa %xmm9,704(%rsp)
+vpaddq %xmm3,%xmm11,%xmm11
+vmovdqa 0(%rsp),%xmm3
+vmovdqa 16(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
+vpaddq %xmm10,%xmm0,%xmm0
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm2
+vpaddq %xmm10,%xmm2,%xmm2
 vpmuludq 480(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
+vpaddq %xmm10,%xmm1,%xmm1
 vpmuludq 464(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm4
+vpaddq %xmm10,%xmm4,%xmm4
 vpmuludq 528(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
+vpaddq %xmm10,%xmm6,%xmm6
 vpmuludq 512(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm5
+vpaddq %xmm10,%xmm5,%xmm5
 vpmuludq 592(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 576(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 624(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
-pmuludq 672(%rsp),%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm10,%xmm11,%xmm11
+vpmuludq 672(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 448(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm1
+vpaddq %xmm3,%xmm1,%xmm1
 vpmuludq 480(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 496(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 528(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 544(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 592(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 640(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 624(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
-pmuludq 704(%rsp),%xmm9
-paddq %xmm9,%xmm0
-movdqa 32(%rsp),%xmm3
-movdqa 80(%rsp),%xmm9
+vpaddq %xmm3,%xmm13,%xmm13
+vpmuludq 704(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm0,%xmm0
+vmovdqa 32(%rsp),%xmm3
+vmovdqa 80(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
+vpaddq %xmm10,%xmm1,%xmm1
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm4
+vpaddq %xmm10,%xmm4,%xmm4
 vpmuludq 480(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
+vpaddq %xmm10,%xmm6,%xmm6
 vpmuludq 464(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm5
+vpaddq %xmm10,%xmm5,%xmm5
 vpmuludq 528(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 512(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 592(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
+vpaddq %xmm10,%xmm11,%xmm11
 vpmuludq 576(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm13
+vpaddq %xmm10,%xmm13,%xmm13
 vpmuludq 624(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
-pmuludq 672(%rsp),%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm10,%xmm0,%xmm0
+vpmuludq 672(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 448(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 480(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 496(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 528(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 544(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 592(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 640(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm0
+vpaddq %xmm3,%xmm0,%xmm0
 vpmuludq 624(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
-pmuludq 704(%rsp),%xmm9
-paddq %xmm9,%xmm1
-movdqa 48(%rsp),%xmm3
-movdqa 96(%rsp),%xmm9
+vpaddq %xmm3,%xmm2,%xmm2
+vpmuludq 704(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm1,%xmm1
+vmovdqa 48(%rsp),%xmm3
+vmovdqa 96(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
+vpaddq %xmm10,%xmm6,%xmm6
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm5
+vpaddq %xmm10,%xmm5,%xmm5
 vpmuludq 480(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 464(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 528(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
+vpaddq %xmm10,%xmm11,%xmm11
 vpmuludq 512(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm13
+vpaddq %xmm10,%xmm13,%xmm13
 vpmuludq 592(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
+vpaddq %xmm10,%xmm0,%xmm0
 vpmuludq 576(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm2
+vpaddq %xmm10,%xmm2,%xmm2
 vpmuludq 624(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
-pmuludq 672(%rsp),%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm10,%xmm1,%xmm1
+vpmuludq 672(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 448(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 480(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 496(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 528(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 544(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm0
+vpaddq %xmm3,%xmm0,%xmm0
 vpmuludq 592(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 640(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm1
+vpaddq %xmm3,%xmm1,%xmm1
 vpmuludq 624(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
-pmuludq 704(%rsp),%xmm9
-paddq %xmm9,%xmm6
-movdqa 64(%rsp),%xmm3
-movdqa 112(%rsp),%xmm9
+vpaddq %xmm3,%xmm4,%xmm4
+vpmuludq 704(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm6,%xmm6
+vmovdqa 64(%rsp),%xmm3
+vmovdqa 112(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 480(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
+vpaddq %xmm10,%xmm11,%xmm11
 vpmuludq 464(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm13
+vpaddq %xmm10,%xmm13,%xmm13
 vpmuludq 528(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
+vpaddq %xmm10,%xmm0,%xmm0
 vpmuludq 512(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm2
+vpaddq %xmm10,%xmm2,%xmm2
 vpmuludq 592(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
+vpaddq %xmm10,%xmm1,%xmm1
 vpmuludq 576(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm4
+vpaddq %xmm10,%xmm4,%xmm4
 vpmuludq 624(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
-pmuludq 672(%rsp),%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm10,%xmm6,%xmm6
+vpmuludq 672(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 448(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 480(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 496(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm0
+vpaddq %xmm3,%xmm0,%xmm0
 vpmuludq 528(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 544(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm1
+vpaddq %xmm3,%xmm1,%xmm1
 vpmuludq 592(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 640(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 624(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
-pmuludq 704(%rsp),%xmm9
-paddq %xmm9,%xmm8
+vpaddq %xmm3,%xmm5,%xmm5
+vpmuludq 704(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm8,%xmm8
 vpsrlq $25,%xmm4,%xmm3
-paddq %xmm3,%xmm6
-pand m25(%rip),%xmm4
+vpaddq %xmm3,%xmm6,%xmm6
+vpand m25(%rip),%xmm4,%xmm4
 vpsrlq $26,%xmm11,%xmm3
-paddq %xmm3,%xmm13
-pand m26(%rip),%xmm11
+vpaddq %xmm3,%xmm13,%xmm13
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm6,%xmm3
-paddq %xmm3,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm3,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpsrlq $25,%xmm13,%xmm3
-paddq %xmm3,%xmm0
-pand m25(%rip),%xmm13
+vpaddq %xmm3,%xmm0,%xmm0
+vpand m25(%rip),%xmm13,%xmm13
 vpsrlq $25,%xmm5,%xmm3
-paddq %xmm3,%xmm8
-pand m25(%rip),%xmm5
+vpaddq %xmm3,%xmm8,%xmm8
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm0,%xmm3
-paddq %xmm3,%xmm2
-pand m26(%rip),%xmm0
+vpaddq %xmm3,%xmm2,%xmm2
+vpand m26(%rip),%xmm0,%xmm0
 vpsrlq $26,%xmm8,%xmm3
-paddq %xmm3,%xmm7
-pand m26(%rip),%xmm8
+vpaddq %xmm3,%xmm7,%xmm7
+vpand m26(%rip),%xmm8,%xmm8
 vpsrlq $25,%xmm2,%xmm3
-paddq %xmm3,%xmm1
-pand m25(%rip),%xmm2
+vpaddq %xmm3,%xmm1,%xmm1
+vpand m25(%rip),%xmm2,%xmm2
 vpsrlq $25,%xmm7,%xmm3
 vpsllq $4,%xmm3,%xmm9
-paddq %xmm3,%xmm11
-psllq $1,%xmm3
-paddq %xmm3,%xmm9
-paddq %xmm9,%xmm11
-pand m25(%rip),%xmm7
+vpaddq %xmm3,%xmm11,%xmm11
+vpsllq $1,%xmm3,%xmm3
+vpaddq %xmm3,%xmm9,%xmm9
+vpaddq %xmm9,%xmm11,%xmm11
+vpand m25(%rip),%xmm7,%xmm7
 vpsrlq $26,%xmm1,%xmm3
-paddq %xmm3,%xmm4
-pand m26(%rip),%xmm1
+vpaddq %xmm3,%xmm4,%xmm4
+vpand m26(%rip),%xmm1,%xmm1
 vpsrlq $26,%xmm11,%xmm3
-paddq %xmm3,%xmm13
-pand m26(%rip),%xmm11
+vpaddq %xmm3,%xmm13,%xmm13
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $25,%xmm4,%xmm3
-paddq %xmm3,%xmm6
-pand m25(%rip),%xmm4
+vpaddq %xmm3,%xmm6,%xmm6
+vpand m25(%rip),%xmm4,%xmm4
 vpunpcklqdq %xmm13,%xmm11,%xmm3
 vpunpckhqdq %xmm13,%xmm11,%xmm9
 vpaddq subc0(%rip),%xmm9,%xmm10
-psubq %xmm3,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm3,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm3,%xmm10,%xmm9
-punpcklqdq %xmm3,%xmm10
+vpunpcklqdq %xmm3,%xmm10,%xmm10
 vpmuludq %xmm10,%xmm10,%xmm3
-paddq %xmm10,%xmm10
+vpaddq %xmm10,%xmm10,%xmm10
 vpmuludq %xmm9,%xmm10,%xmm11
 vpunpcklqdq %xmm2,%xmm0,%xmm12
 vpunpckhqdq %xmm2,%xmm0,%xmm0
 vpaddq subc2(%rip),%xmm0,%xmm2
-psubq %xmm12,%xmm2
-paddq %xmm0,%xmm12
+vpsubq %xmm12,%xmm2,%xmm2
+vpaddq %xmm0,%xmm12,%xmm12
 vpunpckhqdq %xmm12,%xmm2,%xmm0
-punpcklqdq %xmm12,%xmm2
+vpunpcklqdq %xmm12,%xmm2,%xmm2
 vpmuludq %xmm2,%xmm10,%xmm12
 vpaddq %xmm9,%xmm9,%xmm13
 vpmuludq %xmm13,%xmm9,%xmm9
-paddq %xmm9,%xmm12
+vpaddq %xmm9,%xmm12,%xmm12
 vpmuludq %xmm0,%xmm10,%xmm9
 vpmuludq %xmm2,%xmm13,%xmm14
-paddq %xmm14,%xmm9
+vpaddq %xmm14,%xmm9,%xmm9
 vpunpcklqdq %xmm4,%xmm1,%xmm14
 vpunpckhqdq %xmm4,%xmm1,%xmm1
 vpaddq subc2(%rip),%xmm1,%xmm4
-psubq %xmm14,%xmm4
-paddq %xmm1,%xmm14
+vpsubq %xmm14,%xmm4,%xmm4
+vpaddq %xmm1,%xmm14,%xmm14
 vpunpckhqdq %xmm14,%xmm4,%xmm1
-punpcklqdq %xmm14,%xmm4
-movdqa %xmm1,0(%rsp)
-paddq %xmm1,%xmm1
-movdqa %xmm1,16(%rsp)
-pmuludq v19_19(%rip),%xmm1
-movdqa %xmm1,32(%rsp)
+vpunpcklqdq %xmm14,%xmm4,%xmm4
+vmovdqa %xmm1,0(%rsp)
+vpaddq %xmm1,%xmm1,%xmm1
+vmovdqa %xmm1,16(%rsp)
+vpmuludq v19_19(%rip),%xmm1,%xmm1
+vmovdqa %xmm1,32(%rsp)
 vpmuludq %xmm4,%xmm10,%xmm1
 vpmuludq %xmm2,%xmm2,%xmm14
-paddq %xmm14,%xmm1
+vpaddq %xmm14,%xmm1,%xmm1
 vpmuludq 0(%rsp),%xmm10,%xmm14
 vpmuludq %xmm4,%xmm13,%xmm15
-paddq %xmm15,%xmm14
+vpaddq %xmm15,%xmm14,%xmm14
 vpunpcklqdq %xmm5,%xmm6,%xmm15
 vpunpckhqdq %xmm5,%xmm6,%xmm5
 vpaddq subc2(%rip),%xmm5,%xmm6
-psubq %xmm15,%xmm6
-paddq %xmm5,%xmm15
+vpsubq %xmm15,%xmm6,%xmm6
+vpaddq %xmm5,%xmm15,%xmm15
 vpunpckhqdq %xmm15,%xmm6,%xmm5
-punpcklqdq %xmm15,%xmm6
-movdqa %xmm6,48(%rsp)
-pmuludq v19_19(%rip),%xmm6
-movdqa %xmm6,64(%rsp)
-movdqa %xmm5,80(%rsp)
-pmuludq v38_38(%rip),%xmm5
-movdqa %xmm5,96(%rsp)
+vpunpcklqdq %xmm15,%xmm6,%xmm6
+vmovdqa %xmm6,48(%rsp)
+vpmuludq v19_19(%rip),%xmm6,%xmm6
+vmovdqa %xmm6,64(%rsp)
+vmovdqa %xmm5,80(%rsp)
+vpmuludq v38_38(%rip),%xmm5,%xmm5
+vmovdqa %xmm5,96(%rsp)
 vpmuludq 48(%rsp),%xmm10,%xmm5
 vpaddq %xmm0,%xmm0,%xmm6
 vpmuludq %xmm6,%xmm0,%xmm0
-paddq %xmm0,%xmm5
+vpaddq %xmm0,%xmm5,%xmm5
 vpmuludq 80(%rsp),%xmm10,%xmm0
 vpmuludq %xmm4,%xmm6,%xmm15
-paddq %xmm15,%xmm0
+vpaddq %xmm15,%xmm0,%xmm0
 vpmuludq %xmm6,%xmm13,%xmm15
-paddq %xmm15,%xmm1
+vpaddq %xmm15,%xmm1,%xmm1
 vpmuludq %xmm6,%xmm2,%xmm15
-paddq %xmm15,%xmm14
+vpaddq %xmm15,%xmm14,%xmm14
 vpunpcklqdq %xmm7,%xmm8,%xmm15
 vpunpckhqdq %xmm7,%xmm8,%xmm7
 vpaddq subc2(%rip),%xmm7,%xmm8
-psubq %xmm15,%xmm8
-paddq %xmm7,%xmm15
+vpsubq %xmm15,%xmm8,%xmm8
+vpaddq %xmm7,%xmm15,%xmm15
 vpunpckhqdq %xmm15,%xmm8,%xmm7
-punpcklqdq %xmm15,%xmm8
-movdqa %xmm8,112(%rsp)
-pmuludq v19_19(%rip),%xmm8
-movdqa %xmm8,448(%rsp)
+vpunpcklqdq %xmm15,%xmm8,%xmm8
+vmovdqa %xmm8,112(%rsp)
+vpmuludq v19_19(%rip),%xmm8,%xmm8
+vmovdqa %xmm8,448(%rsp)
 vpmuludq 112(%rsp),%xmm10,%xmm8
 vpmuludq %xmm7,%xmm10,%xmm10
 vpmuludq v38_38(%rip),%xmm7,%xmm15
 vpmuludq %xmm15,%xmm7,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq %xmm15,%xmm13,%xmm7
-paddq %xmm7,%xmm3
+vpaddq %xmm7,%xmm3,%xmm3
 vpmuludq %xmm15,%xmm2,%xmm7
-paddq %xmm7,%xmm11
+vpaddq %xmm7,%xmm11,%xmm11
 vpmuludq 80(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm7,%xmm7
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq 16(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm5
+vpaddq %xmm7,%xmm5,%xmm5
 vpmuludq 48(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm0
+vpaddq %xmm7,%xmm0,%xmm0
 vpmuludq 112(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm10
+vpaddq %xmm7,%xmm10,%xmm10
 vpmuludq %xmm15,%xmm6,%xmm7
-paddq %xmm7,%xmm12
+vpaddq %xmm7,%xmm12,%xmm12
 vpmuludq %xmm15,%xmm4,%xmm7
-paddq %xmm7,%xmm9
+vpaddq %xmm7,%xmm9,%xmm9
 vpaddq %xmm2,%xmm2,%xmm2
 vpmuludq %xmm4,%xmm2,%xmm7
-paddq %xmm7,%xmm5
+vpaddq %xmm7,%xmm5,%xmm5
 vpmuludq 448(%rsp),%xmm2,%xmm7
-paddq %xmm7,%xmm3
+vpaddq %xmm7,%xmm3,%xmm3
 vpmuludq 448(%rsp),%xmm6,%xmm7
-paddq %xmm7,%xmm11
+vpaddq %xmm7,%xmm11,%xmm11
 vpmuludq 0(%rsp),%xmm2,%xmm7
-paddq %xmm7,%xmm0
+vpaddq %xmm7,%xmm0,%xmm0
 vpmuludq 48(%rsp),%xmm2,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq 80(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 96(%rsp),%xmm4,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq %xmm4,%xmm4,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpaddq %xmm4,%xmm4,%xmm2
 vpmuludq 448(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm12
+vpaddq %xmm4,%xmm12,%xmm12
 vpmuludq 16(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm1
+vpaddq %xmm4,%xmm1,%xmm1
 vpmuludq 48(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm14
+vpaddq %xmm4,%xmm14,%xmm14
 vpmuludq 96(%rsp),%xmm6,%xmm4
-paddq %xmm4,%xmm3
-movdqa 16(%rsp),%xmm4
-pmuludq 448(%rsp),%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm3,%xmm3
+vmovdqa 16(%rsp),%xmm4
+vpmuludq 448(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 16(%rsp),%xmm6,%xmm4
-paddq %xmm4,%xmm8
+vpaddq %xmm4,%xmm8,%xmm8
 vpmuludq 48(%rsp),%xmm6,%xmm4
-paddq %xmm4,%xmm10
+vpaddq %xmm4,%xmm10,%xmm10
 vpmuludq 80(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm4
-paddq %xmm4,%xmm5
+vpaddq %xmm4,%xmm4,%xmm4
+vpaddq %xmm4,%xmm5,%xmm5
 vpmuludq 112(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm0
-movdqa 48(%rsp),%xmm4
-paddq %xmm4,%xmm4
-pmuludq 448(%rsp),%xmm4
-paddq %xmm4,%xmm1
-movdqa 80(%rsp),%xmm4
-paddq %xmm4,%xmm4
-pmuludq 448(%rsp),%xmm4
-paddq %xmm4,%xmm14
+vpaddq %xmm4,%xmm0,%xmm0
+vmovdqa 48(%rsp),%xmm4
+vpaddq %xmm4,%xmm4,%xmm4
+vpmuludq 448(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm1,%xmm1
+vmovdqa 80(%rsp),%xmm4
+vpaddq %xmm4,%xmm4,%xmm4
+vpmuludq 448(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm14,%xmm14
 vpmuludq 64(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm3
-movdqa 16(%rsp),%xmm4
-pmuludq 64(%rsp),%xmm4
-paddq %xmm4,%xmm11
-movdqa 16(%rsp),%xmm4
-pmuludq 96(%rsp),%xmm4
-paddq %xmm4,%xmm12
-movdqa 48(%rsp),%xmm4
-pmuludq 96(%rsp),%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm3,%xmm3
+vmovdqa 16(%rsp),%xmm4
+vpmuludq 64(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm11,%xmm11
+vmovdqa 16(%rsp),%xmm4
+vpmuludq 96(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm12,%xmm12
+vmovdqa 48(%rsp),%xmm4
+vpmuludq 96(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 0(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm10
-movdqa 32(%rsp),%xmm2
-pmuludq 0(%rsp),%xmm2
-paddq %xmm2,%xmm3
-movdqa 64(%rsp),%xmm2
-pmuludq 48(%rsp),%xmm2
-paddq %xmm2,%xmm12
-movdqa 96(%rsp),%xmm2
-pmuludq 80(%rsp),%xmm2
-paddq %xmm2,%xmm1
-movdqa 448(%rsp),%xmm2
-pmuludq 112(%rsp),%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm10,%xmm10
+vmovdqa 32(%rsp),%xmm2
+vpmuludq 0(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm3,%xmm3
+vmovdqa 64(%rsp),%xmm2
+vpmuludq 48(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm12,%xmm12
+vmovdqa 96(%rsp),%xmm2
+vpmuludq 80(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm1,%xmm1
+vmovdqa 448(%rsp),%xmm2
+vpmuludq 112(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm5,%xmm5
 vpsrlq $26,%xmm3,%xmm2
-paddq %xmm2,%xmm11
-pand m26(%rip),%xmm3
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m26(%rip),%xmm3,%xmm3
 vpsrlq $25,%xmm14,%xmm2
-paddq %xmm2,%xmm5
-pand m25(%rip),%xmm14
+vpaddq %xmm2,%xmm5,%xmm5
+vpand m25(%rip),%xmm14,%xmm14
 vpsrlq $25,%xmm11,%xmm2
-paddq %xmm2,%xmm12
-pand m25(%rip),%xmm11
+vpaddq %xmm2,%xmm12,%xmm12
+vpand m25(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm5,%xmm2
-paddq %xmm2,%xmm0
-pand m26(%rip),%xmm5
+vpaddq %xmm2,%xmm0,%xmm0
+vpand m26(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm12,%xmm2
-paddq %xmm2,%xmm9
-pand m26(%rip),%xmm12
+vpaddq %xmm2,%xmm9,%xmm9
+vpand m26(%rip),%xmm12,%xmm12
 vpsrlq $25,%xmm0,%xmm2
-paddq %xmm2,%xmm8
-pand m25(%rip),%xmm0
+vpaddq %xmm2,%xmm8,%xmm8
+vpand m25(%rip),%xmm0,%xmm0
 vpsrlq $25,%xmm9,%xmm2
-paddq %xmm2,%xmm1
-pand m25(%rip),%xmm9
+vpaddq %xmm2,%xmm1,%xmm1
+vpand m25(%rip),%xmm9,%xmm9
 vpsrlq $26,%xmm8,%xmm2
-paddq %xmm2,%xmm10
-pand m26(%rip),%xmm8
+vpaddq %xmm2,%xmm10,%xmm10
+vpand m26(%rip),%xmm8,%xmm8
 vpsrlq $26,%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pand m26(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpand m26(%rip),%xmm1,%xmm1
 vpsrlq $25,%xmm10,%xmm2
 vpsllq $4,%xmm2,%xmm4
-paddq %xmm2,%xmm3
-psllq $1,%xmm2
-paddq %xmm2,%xmm4
-paddq %xmm4,%xmm3
-pand m25(%rip),%xmm10
+vpaddq %xmm2,%xmm3,%xmm3
+vpsllq $1,%xmm2,%xmm2
+vpaddq %xmm2,%xmm4,%xmm4
+vpaddq %xmm4,%xmm3,%xmm3
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $25,%xmm14,%xmm2
-paddq %xmm2,%xmm5
-pand m25(%rip),%xmm14
+vpaddq %xmm2,%xmm5,%xmm5
+vpand m25(%rip),%xmm14,%xmm14
 vpsrlq $26,%xmm3,%xmm2
-paddq %xmm2,%xmm11
-pand m26(%rip),%xmm3
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m26(%rip),%xmm3,%xmm3
 vpunpckhqdq %xmm11,%xmm3,%xmm2
-movdqa %xmm2,0(%rsp)
-pshufd $0,%xmm3,%xmm2
-pshufd $0,%xmm11,%xmm3
+vmovdqa %xmm2,0(%rsp)
+vpshufd $0,%xmm3,%xmm2
+vpshufd $0,%xmm11,%xmm3
 vpmuludq 160(%rsp),%xmm2,%xmm4
 vpmuludq 432(%rsp),%xmm3,%xmm6
-paddq %xmm6,%xmm4
+vpaddq %xmm6,%xmm4,%xmm4
 vpmuludq 176(%rsp),%xmm2,%xmm6
 vpmuludq 304(%rsp),%xmm3,%xmm7
-paddq %xmm7,%xmm6
+vpaddq %xmm7,%xmm6,%xmm6
 vpmuludq 208(%rsp),%xmm2,%xmm7
 vpmuludq 336(%rsp),%xmm3,%xmm11
-paddq %xmm11,%xmm7
+vpaddq %xmm11,%xmm7,%xmm7
 vpmuludq 240(%rsp),%xmm2,%xmm11
 vpmuludq 368(%rsp),%xmm3,%xmm13
-paddq %xmm13,%xmm11
+vpaddq %xmm13,%xmm11,%xmm11
 vpmuludq 272(%rsp),%xmm2,%xmm2
 vpmuludq 400(%rsp),%xmm3,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpunpckhqdq %xmm9,%xmm12,%xmm3
-movdqa %xmm3,16(%rsp)
-pshufd $0,%xmm12,%xmm3
-pshufd $0,%xmm9,%xmm9
+vmovdqa %xmm3,16(%rsp)
+vpshufd $0,%xmm12,%xmm3
+vpshufd $0,%xmm9,%xmm9
 vpmuludq 288(%rsp),%xmm3,%xmm12
-paddq %xmm12,%xmm4
+vpaddq %xmm12,%xmm4,%xmm4
 vpmuludq 416(%rsp),%xmm9,%xmm12
-paddq %xmm12,%xmm4
+vpaddq %xmm12,%xmm4,%xmm4
 vpmuludq 160(%rsp),%xmm3,%xmm12
-paddq %xmm12,%xmm6
+vpaddq %xmm12,%xmm6,%xmm6
 vpmuludq 432(%rsp),%xmm9,%xmm12
-paddq %xmm12,%xmm6
+vpaddq %xmm12,%xmm6,%xmm6
 vpmuludq 176(%rsp),%xmm3,%xmm12
-paddq %xmm12,%xmm7
+vpaddq %xmm12,%xmm7,%xmm7
 vpmuludq 304(%rsp),%xmm9,%xmm12
-paddq %xmm12,%xmm7
+vpaddq %xmm12,%xmm7,%xmm7
 vpmuludq 208(%rsp),%xmm3,%xmm12
-paddq %xmm12,%xmm11
+vpaddq %xmm12,%xmm11,%xmm11
 vpmuludq 336(%rsp),%xmm9,%xmm12
-paddq %xmm12,%xmm11
+vpaddq %xmm12,%xmm11,%xmm11
 vpmuludq 240(%rsp),%xmm3,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 368(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpunpckhqdq %xmm14,%xmm1,%xmm3
-movdqa %xmm3,32(%rsp)
-pshufd $0,%xmm1,%xmm1
-pshufd $0,%xmm14,%xmm3
+vmovdqa %xmm3,32(%rsp)
+vpshufd $0,%xmm1,%xmm1
+vpshufd $0,%xmm14,%xmm3
 vpmuludq 256(%rsp),%xmm1,%xmm9
-paddq %xmm9,%xmm4
+vpaddq %xmm9,%xmm4,%xmm4
 vpmuludq 384(%rsp),%xmm3,%xmm9
-paddq %xmm9,%xmm4
+vpaddq %xmm9,%xmm4,%xmm4
 vpmuludq 288(%rsp),%xmm1,%xmm9
-paddq %xmm9,%xmm6
+vpaddq %xmm9,%xmm6,%xmm6
 vpmuludq 416(%rsp),%xmm3,%xmm9
-paddq %xmm9,%xmm6
+vpaddq %xmm9,%xmm6,%xmm6
 vpmuludq 160(%rsp),%xmm1,%xmm9
-paddq %xmm9,%xmm7
+vpaddq %xmm9,%xmm7,%xmm7
 vpmuludq 432(%rsp),%xmm3,%xmm9
-paddq %xmm9,%xmm7
+vpaddq %xmm9,%xmm7,%xmm7
 vpmuludq 176(%rsp),%xmm1,%xmm9
-paddq %xmm9,%xmm11
+vpaddq %xmm9,%xmm11,%xmm11
 vpmuludq 304(%rsp),%xmm3,%xmm9
-paddq %xmm9,%xmm11
+vpaddq %xmm9,%xmm11,%xmm11
 vpmuludq 208(%rsp),%xmm1,%xmm1
-paddq %xmm1,%xmm2
+vpaddq %xmm1,%xmm2,%xmm2
 vpmuludq 336(%rsp),%xmm3,%xmm1
-paddq %xmm1,%xmm2
+vpaddq %xmm1,%xmm2,%xmm2
 vpunpckhqdq %xmm0,%xmm5,%xmm1
-movdqa %xmm1,48(%rsp)
-pshufd $0,%xmm5,%xmm1
-pshufd $0,%xmm0,%xmm0
+vmovdqa %xmm1,48(%rsp)
+vpshufd $0,%xmm5,%xmm1
+vpshufd $0,%xmm0,%xmm0
 vpmuludq 224(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 352(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 256(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 384(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 288(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm7
+vpaddq %xmm3,%xmm7,%xmm7
 vpmuludq 416(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm7
+vpaddq %xmm3,%xmm7,%xmm7
 vpmuludq 160(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 432(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 176(%rsp),%xmm1,%xmm1
-paddq %xmm1,%xmm2
+vpaddq %xmm1,%xmm2,%xmm2
 vpmuludq 304(%rsp),%xmm0,%xmm0
-paddq %xmm0,%xmm2
+vpaddq %xmm0,%xmm2,%xmm2
 vpunpckhqdq %xmm10,%xmm8,%xmm0
-movdqa %xmm0,64(%rsp)
-pshufd $0,%xmm8,%xmm0
-pshufd $0,%xmm10,%xmm1
+vmovdqa %xmm0,64(%rsp)
+vpshufd $0,%xmm8,%xmm0
+vpshufd $0,%xmm10,%xmm1
 vpmuludq 192(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 320(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 224(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 352(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 256(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm7
+vpaddq %xmm3,%xmm7,%xmm7
 vpmuludq 384(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm7
+vpaddq %xmm3,%xmm7,%xmm7
 vpmuludq 288(%rsp),%xmm0,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 416(%rsp),%xmm1,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 160(%rsp),%xmm0,%xmm0
-paddq %xmm0,%xmm2
+vpaddq %xmm0,%xmm2,%xmm2
 vpmuludq 432(%rsp),%xmm1,%xmm0
-paddq %xmm0,%xmm2
-movdqa %xmm4,80(%rsp)
-movdqa %xmm6,96(%rsp)
-movdqa %xmm7,112(%rsp)
-movdqa %xmm11,448(%rsp)
-movdqa %xmm2,496(%rsp)
-movdqa 144(%rsp),%xmm0
+vpaddq %xmm0,%xmm2,%xmm2
+vmovdqa %xmm4,80(%rsp)
+vmovdqa %xmm6,96(%rsp)
+vmovdqa %xmm7,112(%rsp)
+vmovdqa %xmm11,448(%rsp)
+vmovdqa %xmm2,496(%rsp)
+vmovdqa 144(%rsp),%xmm0
 vpmuludq %xmm0,%xmm0,%xmm1
-paddq %xmm0,%xmm0
-movdqa 128(%rsp),%xmm2
+vpaddq %xmm0,%xmm0,%xmm0
+vmovdqa 128(%rsp),%xmm2
 vpmuludq %xmm2,%xmm0,%xmm3
-movdqa 480(%rsp),%xmm4
+vmovdqa 480(%rsp),%xmm4
 vpmuludq %xmm4,%xmm0,%xmm5
-movdqa 464(%rsp),%xmm6
+vmovdqa 464(%rsp),%xmm6
 vpmuludq %xmm6,%xmm0,%xmm7
-movdqa 528(%rsp),%xmm8
+vmovdqa 528(%rsp),%xmm8
 vpmuludq %xmm8,%xmm0,%xmm9
 vpmuludq 512(%rsp),%xmm0,%xmm10
 vpmuludq 592(%rsp),%xmm0,%xmm11
 vpmuludq 576(%rsp),%xmm0,%xmm12
 vpmuludq 624(%rsp),%xmm0,%xmm13
-movdqa 672(%rsp),%xmm14
+vmovdqa 672(%rsp),%xmm14
 vpmuludq %xmm14,%xmm0,%xmm0
 vpmuludq v38_38(%rip),%xmm14,%xmm15
 vpmuludq %xmm15,%xmm14,%xmm14
-paddq %xmm14,%xmm13
+vpaddq %xmm14,%xmm13,%xmm13
 vpaddq %xmm6,%xmm6,%xmm14
 vpmuludq %xmm14,%xmm6,%xmm6
-paddq %xmm6,%xmm11
+vpaddq %xmm6,%xmm11,%xmm11
 vpaddq %xmm2,%xmm2,%xmm6
 vpmuludq %xmm6,%xmm2,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq %xmm15,%xmm6,%xmm2
-paddq %xmm2,%xmm1
+vpaddq %xmm2,%xmm1,%xmm1
 vpmuludq %xmm15,%xmm4,%xmm2
-paddq %xmm2,%xmm3
+vpaddq %xmm2,%xmm3,%xmm3
 vpmuludq 544(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 592(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 640(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 624(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm0
+vpaddq %xmm2,%xmm0,%xmm0
 vpmuludq %xmm4,%xmm6,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq %xmm14,%xmm6,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq %xmm8,%xmm6,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq %xmm15,%xmm14,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq %xmm15,%xmm8,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq %xmm4,%xmm4,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq %xmm14,%xmm4,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpaddq %xmm4,%xmm4,%xmm2
 vpmuludq %xmm8,%xmm2,%xmm4
-paddq %xmm4,%xmm11
+vpaddq %xmm4,%xmm11,%xmm11
 vpmuludq 688(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm1
+vpaddq %xmm4,%xmm1,%xmm1
 vpmuludq 688(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm3
+vpaddq %xmm4,%xmm3,%xmm3
 vpmuludq 512(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm12
+vpaddq %xmm4,%xmm12,%xmm12
 vpmuludq 592(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm13
+vpaddq %xmm4,%xmm13,%xmm13
 vpmuludq 576(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm0
+vpaddq %xmm2,%xmm0,%xmm0
 vpmuludq 656(%rsp),%xmm8,%xmm2
-paddq %xmm2,%xmm3
+vpaddq %xmm2,%xmm3,%xmm3
 vpmuludq %xmm8,%xmm14,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq %xmm8,%xmm8,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpaddq %xmm8,%xmm8,%xmm2
 vpmuludq 688(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm5
+vpaddq %xmm4,%xmm5,%xmm5
 vpmuludq 544(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 592(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm10
+vpaddq %xmm4,%xmm10,%xmm10
 vpmuludq 656(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm1
-movdqa 544(%rsp),%xmm4
-pmuludq 688(%rsp),%xmm4
-paddq %xmm4,%xmm7
+vpaddq %xmm4,%xmm1,%xmm1
+vmovdqa 544(%rsp),%xmm4
+vpmuludq 688(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm7,%xmm7
 vpmuludq 544(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm13
+vpaddq %xmm4,%xmm13,%xmm13
 vpmuludq 592(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm0
+vpaddq %xmm4,%xmm0,%xmm0
 vpmuludq 640(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm11
+vpaddq %xmm4,%xmm11,%xmm11
 vpmuludq 624(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm12
-movdqa 592(%rsp),%xmm4
-paddq %xmm4,%xmm4
-pmuludq 688(%rsp),%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm12,%xmm12
+vmovdqa 592(%rsp),%xmm4
+vpaddq %xmm4,%xmm4,%xmm4
+vpmuludq 688(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 608(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm1
-movdqa 544(%rsp),%xmm4
-pmuludq 608(%rsp),%xmm4
-paddq %xmm4,%xmm3
-movdqa 544(%rsp),%xmm4
-pmuludq 656(%rsp),%xmm4
-paddq %xmm4,%xmm5
-movdqa 592(%rsp),%xmm4
-pmuludq 656(%rsp),%xmm4
-paddq %xmm4,%xmm7
-movdqa 640(%rsp),%xmm4
-pmuludq 688(%rsp),%xmm4
-paddq %xmm4,%xmm10
+vpaddq %xmm4,%xmm1,%xmm1
+vmovdqa 544(%rsp),%xmm4
+vpmuludq 608(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm3,%xmm3
+vmovdqa 544(%rsp),%xmm4
+vpmuludq 656(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm5,%xmm5
+vmovdqa 592(%rsp),%xmm4
+vpmuludq 656(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm7,%xmm7
+vmovdqa 640(%rsp),%xmm4
+vpmuludq 688(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm10,%xmm10
 vpmuludq 512(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm0
-movdqa 560(%rsp),%xmm2
-pmuludq 512(%rsp),%xmm2
-paddq %xmm2,%xmm1
-movdqa 608(%rsp),%xmm2
-pmuludq 592(%rsp),%xmm2
-paddq %xmm2,%xmm5
-movdqa 656(%rsp),%xmm2
-pmuludq 576(%rsp),%xmm2
-paddq %xmm2,%xmm9
-movdqa 688(%rsp),%xmm2
-pmuludq 624(%rsp),%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm0,%xmm0
+vmovdqa 560(%rsp),%xmm2
+vpmuludq 512(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm1,%xmm1
+vmovdqa 608(%rsp),%xmm2
+vpmuludq 592(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm5,%xmm5
+vmovdqa 656(%rsp),%xmm2
+vpmuludq 576(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm9,%xmm9
+vmovdqa 688(%rsp),%xmm2
+vpmuludq 624(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm11,%xmm11
 vpsrlq $26,%xmm1,%xmm2
-paddq %xmm2,%xmm3
-pand m26(%rip),%xmm1
+vpaddq %xmm2,%xmm3,%xmm3
+vpand m26(%rip),%xmm1,%xmm1
 vpsrlq $25,%xmm10,%xmm2
-paddq %xmm2,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $25,%xmm3,%xmm2
-paddq %xmm2,%xmm5
-pand m25(%rip),%xmm3
+vpaddq %xmm2,%xmm5,%xmm5
+vpand m25(%rip),%xmm3,%xmm3
 vpsrlq $26,%xmm11,%xmm2
-paddq %xmm2,%xmm12
-pand m26(%rip),%xmm11
+vpaddq %xmm2,%xmm12,%xmm12
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm5,%xmm2
-paddq %xmm2,%xmm7
-pand m26(%rip),%xmm5
+vpaddq %xmm2,%xmm7,%xmm7
+vpand m26(%rip),%xmm5,%xmm5
 vpsrlq $25,%xmm12,%xmm2
-paddq %xmm2,%xmm13
-pand m25(%rip),%xmm12
+vpaddq %xmm2,%xmm13,%xmm13
+vpand m25(%rip),%xmm12,%xmm12
 vpsrlq $25,%xmm7,%xmm2
-paddq %xmm2,%xmm9
-pand m25(%rip),%xmm7
+vpaddq %xmm2,%xmm9,%xmm9
+vpand m25(%rip),%xmm7,%xmm7
 vpsrlq $26,%xmm13,%xmm2
-paddq %xmm2,%xmm0
-pand m26(%rip),%xmm13
+vpaddq %xmm2,%xmm0,%xmm0
+vpand m26(%rip),%xmm13,%xmm13
 vpsrlq $26,%xmm9,%xmm2
-paddq %xmm2,%xmm10
-pand m26(%rip),%xmm9
+vpaddq %xmm2,%xmm10,%xmm10
+vpand m26(%rip),%xmm9,%xmm9
 vpsrlq $25,%xmm0,%xmm2
 vpsllq $4,%xmm2,%xmm4
-paddq %xmm2,%xmm1
-psllq $1,%xmm2
-paddq %xmm2,%xmm4
-paddq %xmm4,%xmm1
-pand m25(%rip),%xmm0
+vpaddq %xmm2,%xmm1,%xmm1
+vpsllq $1,%xmm2,%xmm2
+vpaddq %xmm2,%xmm4,%xmm4
+vpaddq %xmm4,%xmm1,%xmm1
+vpand m25(%rip),%xmm0,%xmm0
 vpsrlq $25,%xmm10,%xmm2
-paddq %xmm2,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $26,%xmm1,%xmm2
-paddq %xmm2,%xmm3
-pand m26(%rip),%xmm1
+vpaddq %xmm2,%xmm3,%xmm3
+vpand m26(%rip),%xmm1,%xmm1
 vpunpckhqdq %xmm3,%xmm1,%xmm2
 vpunpcklqdq %xmm3,%xmm1,%xmm1
-movdqa %xmm1,464(%rsp)
+vmovdqa %xmm1,464(%rsp)
 vpaddq subc0(%rip),%xmm2,%xmm3
-psubq %xmm1,%xmm3
+vpsubq %xmm1,%xmm3,%xmm3
 vpunpckhqdq %xmm3,%xmm2,%xmm1
 vpunpcklqdq %xmm3,%xmm2,%xmm2
-movdqa %xmm2,480(%rsp)
-movdqa %xmm1,512(%rsp)
-psllq $1,%xmm1
-movdqa %xmm1,528(%rsp)
-pmuludq v121666_121666(%rip),%xmm3
-movdqa 80(%rsp),%xmm1
+vmovdqa %xmm2,480(%rsp)
+vmovdqa %xmm1,512(%rsp)
+vpsllq $1,%xmm1,%xmm1
+vmovdqa %xmm1,528(%rsp)
+vpmuludq v121666_121666(%rip),%xmm3,%xmm3
+vmovdqa 80(%rsp),%xmm1
 vpunpcklqdq %xmm1,%xmm3,%xmm2
 vpunpckhqdq %xmm1,%xmm3,%xmm1
 vpunpckhqdq %xmm7,%xmm5,%xmm3
 vpunpcklqdq %xmm7,%xmm5,%xmm4
-movdqa %xmm4,544(%rsp)
+vmovdqa %xmm4,544(%rsp)
 vpaddq subc2(%rip),%xmm3,%xmm5
-psubq %xmm4,%xmm5
+vpsubq %xmm4,%xmm5,%xmm5
 vpunpckhqdq %xmm5,%xmm3,%xmm4
 vpunpcklqdq %xmm5,%xmm3,%xmm3
-movdqa %xmm3,560(%rsp)
-movdqa %xmm4,576(%rsp)
-psllq $1,%xmm4
-movdqa %xmm4,592(%rsp)
-pmuludq v121666_121666(%rip),%xmm5
-movdqa 96(%rsp),%xmm3
+vmovdqa %xmm3,560(%rsp)
+vmovdqa %xmm4,576(%rsp)
+vpsllq $1,%xmm4,%xmm4
+vmovdqa %xmm4,592(%rsp)
+vpmuludq v121666_121666(%rip),%xmm5,%xmm5
+vmovdqa 96(%rsp),%xmm3
 vpunpcklqdq %xmm3,%xmm5,%xmm4
 vpunpckhqdq %xmm3,%xmm5,%xmm3
 vpunpckhqdq %xmm10,%xmm9,%xmm5
 vpunpcklqdq %xmm10,%xmm9,%xmm6
-movdqa %xmm6,608(%rsp)
+vmovdqa %xmm6,608(%rsp)
 vpaddq subc2(%rip),%xmm5,%xmm7
-psubq %xmm6,%xmm7
+vpsubq %xmm6,%xmm7,%xmm7
 vpunpckhqdq %xmm7,%xmm5,%xmm6
 vpunpcklqdq %xmm7,%xmm5,%xmm5
-movdqa %xmm5,624(%rsp)
-movdqa %xmm6,640(%rsp)
-psllq $1,%xmm6
-movdqa %xmm6,656(%rsp)
-pmuludq v121666_121666(%rip),%xmm7
-movdqa 112(%rsp),%xmm5
+vmovdqa %xmm5,624(%rsp)
+vmovdqa %xmm6,640(%rsp)
+vpsllq $1,%xmm6,%xmm6
+vmovdqa %xmm6,656(%rsp)
+vpmuludq v121666_121666(%rip),%xmm7,%xmm7
+vmovdqa 112(%rsp),%xmm5
 vpunpcklqdq %xmm5,%xmm7,%xmm6
 vpunpckhqdq %xmm5,%xmm7,%xmm5
 vpunpckhqdq %xmm12,%xmm11,%xmm7
 vpunpcklqdq %xmm12,%xmm11,%xmm8
-movdqa %xmm8,672(%rsp)
+vmovdqa %xmm8,672(%rsp)
 vpaddq subc2(%rip),%xmm7,%xmm9
-psubq %xmm8,%xmm9
+vpsubq %xmm8,%xmm9,%xmm9
 vpunpckhqdq %xmm9,%xmm7,%xmm8
 vpunpcklqdq %xmm9,%xmm7,%xmm7
-movdqa %xmm7,688(%rsp)
-movdqa %xmm8,704(%rsp)
-psllq $1,%xmm8
-movdqa %xmm8,720(%rsp)
-pmuludq v121666_121666(%rip),%xmm9
-movdqa 448(%rsp),%xmm7
+vmovdqa %xmm7,688(%rsp)
+vmovdqa %xmm8,704(%rsp)
+vpsllq $1,%xmm8,%xmm8
+vmovdqa %xmm8,720(%rsp)
+vpmuludq v121666_121666(%rip),%xmm9,%xmm9
+vmovdqa 448(%rsp),%xmm7
 vpunpcklqdq %xmm7,%xmm9,%xmm8
 vpunpckhqdq %xmm7,%xmm9,%xmm7
 vpunpckhqdq %xmm0,%xmm13,%xmm9
 vpunpcklqdq %xmm0,%xmm13,%xmm0
-movdqa %xmm0,448(%rsp)
+vmovdqa %xmm0,448(%rsp)
 vpaddq subc2(%rip),%xmm9,%xmm10
-psubq %xmm0,%xmm10
+vpsubq %xmm0,%xmm10,%xmm10
 vpunpckhqdq %xmm10,%xmm9,%xmm0
 vpunpcklqdq %xmm10,%xmm9,%xmm9
-movdqa %xmm9,736(%rsp)
-movdqa %xmm0,752(%rsp)
-psllq $1,%xmm0
-movdqa %xmm0,768(%rsp)
-pmuludq v121666_121666(%rip),%xmm10
-movdqa 496(%rsp),%xmm0
+vmovdqa %xmm9,736(%rsp)
+vmovdqa %xmm0,752(%rsp)
+vpsllq $1,%xmm0,%xmm0
+vmovdqa %xmm0,768(%rsp)
+vpmuludq v121666_121666(%rip),%xmm10,%xmm10
+vmovdqa 496(%rsp),%xmm0
 vpunpcklqdq %xmm0,%xmm10,%xmm9
 vpunpckhqdq %xmm0,%xmm10,%xmm0
 vpsrlq $26,%xmm2,%xmm10
-paddq %xmm10,%xmm1
-pand m26(%rip),%xmm2
+vpaddq %xmm10,%xmm1,%xmm1
+vpand m26(%rip),%xmm2,%xmm2
 vpsrlq $25,%xmm5,%xmm10
-paddq %xmm10,%xmm8
-pand m25(%rip),%xmm5
+vpaddq %xmm10,%xmm8,%xmm8
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $25,%xmm1,%xmm10
-paddq %xmm10,%xmm4
-pand m25(%rip),%xmm1
+vpaddq %xmm10,%xmm4,%xmm4
+vpand m25(%rip),%xmm1,%xmm1
 vpsrlq $26,%xmm8,%xmm10
-paddq %xmm10,%xmm7
-pand m26(%rip),%xmm8
+vpaddq %xmm10,%xmm7,%xmm7
+vpand m26(%rip),%xmm8,%xmm8
 vpsrlq $26,%xmm4,%xmm10
-paddq %xmm10,%xmm3
-pand m26(%rip),%xmm4
+vpaddq %xmm10,%xmm3,%xmm3
+vpand m26(%rip),%xmm4,%xmm4
 vpsrlq $25,%xmm7,%xmm10
-paddq %xmm10,%xmm9
-pand m25(%rip),%xmm7
+vpaddq %xmm10,%xmm9,%xmm9
+vpand m25(%rip),%xmm7,%xmm7
 vpsrlq $25,%xmm3,%xmm10
-paddq %xmm10,%xmm6
-pand m25(%rip),%xmm3
+vpaddq %xmm10,%xmm6,%xmm6
+vpand m25(%rip),%xmm3,%xmm3
 vpsrlq $26,%xmm9,%xmm10
-paddq %xmm10,%xmm0
-pand m26(%rip),%xmm9
+vpaddq %xmm10,%xmm0,%xmm0
+vpand m26(%rip),%xmm9,%xmm9
 vpsrlq $26,%xmm6,%xmm10
-paddq %xmm10,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm10,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpsrlq $25,%xmm0,%xmm10
 vpsllq $4,%xmm10,%xmm11
-paddq %xmm10,%xmm2
-psllq $1,%xmm10
-paddq %xmm10,%xmm11
-paddq %xmm11,%xmm2
-pand m25(%rip),%xmm0
+vpaddq %xmm10,%xmm2,%xmm2
+vpsllq $1,%xmm10,%xmm10
+vpaddq %xmm10,%xmm11,%xmm11
+vpaddq %xmm11,%xmm2,%xmm2
+vpand m25(%rip),%xmm0,%xmm0
 vpsrlq $25,%xmm5,%xmm10
-paddq %xmm10,%xmm8
-pand m25(%rip),%xmm5
+vpaddq %xmm10,%xmm8,%xmm8
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm2,%xmm10
-paddq %xmm10,%xmm1
-pand m26(%rip),%xmm2
+vpaddq %xmm10,%xmm1,%xmm1
+vpand m26(%rip),%xmm2,%xmm2
 vpunpckhqdq %xmm1,%xmm2,%xmm10
-movdqa %xmm10,80(%rsp)
+vmovdqa %xmm10,80(%rsp)
 vpunpcklqdq %xmm1,%xmm2,%xmm1
 vpunpckhqdq %xmm3,%xmm4,%xmm2
-movdqa %xmm2,96(%rsp)
+vmovdqa %xmm2,96(%rsp)
 vpunpcklqdq %xmm3,%xmm4,%xmm2
 vpunpckhqdq %xmm5,%xmm6,%xmm3
-movdqa %xmm3,112(%rsp)
+vmovdqa %xmm3,112(%rsp)
 vpunpcklqdq %xmm5,%xmm6,%xmm3
 vpunpckhqdq %xmm7,%xmm8,%xmm4
-movdqa %xmm4,128(%rsp)
+vmovdqa %xmm4,128(%rsp)
 vpunpcklqdq %xmm7,%xmm8,%xmm4
 vpunpckhqdq %xmm0,%xmm9,%xmm5
-movdqa %xmm5,144(%rsp)
+vmovdqa %xmm5,144(%rsp)
 vpunpcklqdq %xmm0,%xmm9,%xmm0
-movdqa 464(%rsp),%xmm5
-paddq %xmm5,%xmm1
+vmovdqa 464(%rsp),%xmm5
+vpaddq %xmm5,%xmm1,%xmm1
 vpunpcklqdq %xmm1,%xmm5,%xmm6
 vpunpckhqdq %xmm1,%xmm5,%xmm1
 vpmuludq 512(%rsp),%xmm6,%xmm5
 vpmuludq 480(%rsp),%xmm1,%xmm7
-paddq %xmm7,%xmm5
+vpaddq %xmm7,%xmm5,%xmm5
 vpmuludq 560(%rsp),%xmm6,%xmm7
 vpmuludq 528(%rsp),%xmm1,%xmm8
-paddq %xmm8,%xmm7
+vpaddq %xmm8,%xmm7,%xmm7
 vpmuludq 576(%rsp),%xmm6,%xmm8
 vpmuludq 560(%rsp),%xmm1,%xmm9
-paddq %xmm9,%xmm8
+vpaddq %xmm9,%xmm8,%xmm8
 vpmuludq 624(%rsp),%xmm6,%xmm9
 vpmuludq 592(%rsp),%xmm1,%xmm10
-paddq %xmm10,%xmm9
+vpaddq %xmm10,%xmm9,%xmm9
 vpmuludq 640(%rsp),%xmm6,%xmm10
 vpmuludq 624(%rsp),%xmm1,%xmm11
-paddq %xmm11,%xmm10
+vpaddq %xmm11,%xmm10,%xmm10
 vpmuludq 688(%rsp),%xmm6,%xmm11
 vpmuludq 656(%rsp),%xmm1,%xmm12
-paddq %xmm12,%xmm11
+vpaddq %xmm12,%xmm11,%xmm11
 vpmuludq 704(%rsp),%xmm6,%xmm12
 vpmuludq 688(%rsp),%xmm1,%xmm13
-paddq %xmm13,%xmm12
+vpaddq %xmm13,%xmm12,%xmm12
 vpmuludq 736(%rsp),%xmm6,%xmm13
 vpmuludq 720(%rsp),%xmm1,%xmm14
-paddq %xmm14,%xmm13
+vpaddq %xmm14,%xmm13,%xmm13
 vpmuludq 752(%rsp),%xmm6,%xmm14
 vpmuludq 736(%rsp),%xmm1,%xmm15
-paddq %xmm15,%xmm14
+vpaddq %xmm15,%xmm14,%xmm14
 vpmuludq 480(%rsp),%xmm6,%xmm6
-pmuludq v19_19(%rip),%xmm1
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 768(%rsp),%xmm1,%xmm1
-paddq %xmm1,%xmm6
-movdqa 544(%rsp),%xmm1
-paddq %xmm1,%xmm2
+vpaddq %xmm1,%xmm6,%xmm6
+vmovdqa 544(%rsp),%xmm1
+vpaddq %xmm1,%xmm2,%xmm2
 vpunpcklqdq %xmm2,%xmm1,%xmm15
 vpunpckhqdq %xmm2,%xmm1,%xmm1
 vpmuludq 480(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq 512(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 560(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq 576(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 624(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 640(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 688(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 704(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm15
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm15,%xmm15
 vpmuludq 736(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm6
-pmuludq 752(%rsp),%xmm15
-paddq %xmm15,%xmm5
+vpaddq %xmm2,%xmm6,%xmm6
+vpmuludq 752(%rsp),%xmm15,%xmm15
+vpaddq %xmm15,%xmm5,%xmm5
 vpmuludq 480(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 528(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq 560(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 592(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 624(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 656(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 688(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 720(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm6
+vpaddq %xmm2,%xmm6,%xmm6
 vpmuludq 736(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm5
-pmuludq 768(%rsp),%xmm1
-paddq %xmm1,%xmm7
-movdqa 608(%rsp),%xmm1
-paddq %xmm1,%xmm3
+vpaddq %xmm2,%xmm5,%xmm5
+vpmuludq 768(%rsp),%xmm1,%xmm1
+vpaddq %xmm1,%xmm7,%xmm7
+vmovdqa 608(%rsp),%xmm1
+vpaddq %xmm1,%xmm3,%xmm3
 vpunpcklqdq %xmm3,%xmm1,%xmm2
 vpunpckhqdq %xmm3,%xmm1,%xmm1
 vpmuludq 480(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm9
+vpaddq %xmm3,%xmm9,%xmm9
 vpmuludq 512(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm10
+vpaddq %xmm3,%xmm10,%xmm10
 vpmuludq 560(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 576(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm12
+vpaddq %xmm3,%xmm12,%xmm12
 vpmuludq 624(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 640(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm14
-pmuludq v19_19(%rip),%xmm2
+vpaddq %xmm3,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm2,%xmm2
 vpmuludq 688(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 704(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 736(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm7
-pmuludq 752(%rsp),%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq 752(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 480(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 528(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 560(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 592(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 624(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 656(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm6
+vpaddq %xmm2,%xmm6,%xmm6
 vpmuludq 688(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq 720(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq 736(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm8
-pmuludq 768(%rsp),%xmm1
-paddq %xmm1,%xmm9
-movdqa 672(%rsp),%xmm1
-paddq %xmm1,%xmm4
+vpaddq %xmm2,%xmm8,%xmm8
+vpmuludq 768(%rsp),%xmm1,%xmm1
+vpaddq %xmm1,%xmm9,%xmm9
+vmovdqa 672(%rsp),%xmm1
+vpaddq %xmm1,%xmm4,%xmm4
 vpunpcklqdq %xmm4,%xmm1,%xmm2
 vpunpckhqdq %xmm4,%xmm1,%xmm1
 vpmuludq 480(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 512(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm12
+vpaddq %xmm3,%xmm12,%xmm12
 vpmuludq 560(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 576(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm14
-pmuludq v19_19(%rip),%xmm2
+vpaddq %xmm3,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm2,%xmm2
 vpmuludq 624(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 640(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 688(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm7
+vpaddq %xmm3,%xmm7,%xmm7
 vpmuludq 704(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 736(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm9
-pmuludq 752(%rsp),%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm3,%xmm9,%xmm9
+vpmuludq 752(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 480(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 528(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 560(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 592(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm6
+vpaddq %xmm2,%xmm6,%xmm6
 vpmuludq 624(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq 656(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq 688(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 720(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq 736(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm10
-pmuludq 768(%rsp),%xmm1
-paddq %xmm1,%xmm11
-movdqa 448(%rsp),%xmm1
-paddq %xmm1,%xmm0
+vpaddq %xmm2,%xmm10,%xmm10
+vpmuludq 768(%rsp),%xmm1,%xmm1
+vpaddq %xmm1,%xmm11,%xmm11
+vmovdqa 448(%rsp),%xmm1
+vpaddq %xmm1,%xmm0,%xmm0
 vpunpcklqdq %xmm0,%xmm1,%xmm2
 vpunpckhqdq %xmm0,%xmm1,%xmm0
 vpmuludq 480(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm13
+vpaddq %xmm1,%xmm13,%xmm13
 vpmuludq 512(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm14
-pmuludq v19_19(%rip),%xmm2
+vpaddq %xmm1,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm2,%xmm2
 vpmuludq 560(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm6
+vpaddq %xmm1,%xmm6,%xmm6
 vpmuludq 576(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm5
+vpaddq %xmm1,%xmm5,%xmm5
 vpmuludq 624(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm7
+vpaddq %xmm1,%xmm7,%xmm7
 vpmuludq 640(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm8
+vpaddq %xmm1,%xmm8,%xmm8
 vpmuludq 688(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm9
+vpaddq %xmm1,%xmm9,%xmm9
 vpmuludq 704(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm10
+vpaddq %xmm1,%xmm10,%xmm10
 vpmuludq 736(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm11
-pmuludq 752(%rsp),%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm1,%xmm11,%xmm11
+vpmuludq 752(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 480(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm14
-pmuludq v19_19(%rip),%xmm0
+vpaddq %xmm1,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm0,%xmm0
 vpmuludq 528(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm6
+vpaddq %xmm1,%xmm6,%xmm6
 vpmuludq 560(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm5
+vpaddq %xmm1,%xmm5,%xmm5
 vpmuludq 592(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm7
+vpaddq %xmm1,%xmm7,%xmm7
 vpmuludq 624(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm8
+vpaddq %xmm1,%xmm8,%xmm8
 vpmuludq 656(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm9
+vpaddq %xmm1,%xmm9,%xmm9
 vpmuludq 688(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm10
+vpaddq %xmm1,%xmm10,%xmm10
 vpmuludq 720(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm11
+vpaddq %xmm1,%xmm11,%xmm11
 vpmuludq 736(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm12
-pmuludq 768(%rsp),%xmm0
-paddq %xmm0,%xmm13
+vpaddq %xmm1,%xmm12,%xmm12
+vpmuludq 768(%rsp),%xmm0,%xmm0
+vpaddq %xmm0,%xmm13,%xmm13
 vpsrlq $26,%xmm6,%xmm0
-paddq %xmm0,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm0,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpsrlq $25,%xmm10,%xmm0
-paddq %xmm0,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm0,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $25,%xmm5,%xmm0
-paddq %xmm0,%xmm7
-pand m25(%rip),%xmm5
+vpaddq %xmm0,%xmm7,%xmm7
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm11,%xmm0
-paddq %xmm0,%xmm12
-pand m26(%rip),%xmm11
+vpaddq %xmm0,%xmm12,%xmm12
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm7,%xmm0
-paddq %xmm0,%xmm8
-pand m26(%rip),%xmm7
+vpaddq %xmm0,%xmm8,%xmm8
+vpand m26(%rip),%xmm7,%xmm7
 vpsrlq $25,%xmm12,%xmm0
-paddq %xmm0,%xmm13
-pand m25(%rip),%xmm12
+vpaddq %xmm0,%xmm13,%xmm13
+vpand m25(%rip),%xmm12,%xmm12
 vpsrlq $25,%xmm8,%xmm0
-paddq %xmm0,%xmm9
-pand m25(%rip),%xmm8
+vpaddq %xmm0,%xmm9,%xmm9
+vpand m25(%rip),%xmm8,%xmm8
 vpsrlq $26,%xmm13,%xmm0
-paddq %xmm0,%xmm14
-pand m26(%rip),%xmm13
+vpaddq %xmm0,%xmm14,%xmm14
+vpand m26(%rip),%xmm13,%xmm13
 vpsrlq $26,%xmm9,%xmm0
-paddq %xmm0,%xmm10
-pand m26(%rip),%xmm9
+vpaddq %xmm0,%xmm10,%xmm10
+vpand m26(%rip),%xmm9,%xmm9
 vpsrlq $25,%xmm14,%xmm0
 vpsllq $4,%xmm0,%xmm1
-paddq %xmm0,%xmm6
-psllq $1,%xmm0
-paddq %xmm0,%xmm1
-paddq %xmm1,%xmm6
-pand m25(%rip),%xmm14
+vpaddq %xmm0,%xmm6,%xmm6
+vpsllq $1,%xmm0,%xmm0
+vpaddq %xmm0,%xmm1,%xmm1
+vpaddq %xmm1,%xmm6,%xmm6
+vpand m25(%rip),%xmm14,%xmm14
 vpsrlq $25,%xmm10,%xmm0
-paddq %xmm0,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm0,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $26,%xmm6,%xmm0
-paddq %xmm0,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm0,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpunpckhqdq %xmm5,%xmm6,%xmm1
 vpunpcklqdq %xmm5,%xmm6,%xmm0
 vpunpckhqdq %xmm8,%xmm7,%xmm3
@@ -1412,16 +1420,16 @@ vpunpckhqdq %xmm14,%xmm13,%xmm9
 vpunpcklqdq %xmm14,%xmm13,%xmm8
 cmp  $0,%rdx
 jne ._ladder_loop
-movdqu   %xmm1,160(%rdi)
-movdqu   %xmm0,80(%rdi)
-movdqu   %xmm3,176(%rdi)
-movdqu   %xmm2,96(%rdi)
-movdqu   %xmm5,192(%rdi)
-movdqu   %xmm4,112(%rdi)
-movdqu   %xmm7,208(%rdi)
-movdqu   %xmm6,128(%rdi)
-movdqu   %xmm9,224(%rdi)
-movdqu   %xmm8,144(%rdi)
+vmovdqu %xmm1,160(%rdi)
+vmovdqu %xmm0,80(%rdi)
+vmovdqu %xmm3,176(%rdi)
+vmovdqu %xmm2,96(%rdi)
+vmovdqu %xmm5,192(%rdi)
+vmovdqu %xmm4,112(%rdi)
+vmovdqu %xmm7,208(%rdi)
+vmovdqu %xmm6,128(%rdi)
+vmovdqu %xmm9,224(%rdi)
+vmovdqu %xmm8,144(%rdi)
 movq 1824(%rsp),%r11
 movq 1832(%rsp),%r12
 movq 1840(%rsp),%r13
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h
index 1912500..ccf4eca 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder.h
@@ -14,5 +14,5 @@ extern void ladder(fe *, const unsigned char *);
 }
 #endif
 
-#endif //ifndef ladder_H
+#endif /* ifndef ladder_H */
 
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S
index 536ac10..f290d25 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.S
@@ -4,6 +4,10 @@
 #include "consts_namespace.h"
 .p2align 5
 
+#ifdef ASM_HIDE_SYMBOL
+ASM_HIDE_SYMBOL ladder_base
+ASM_HIDE_SYMBOL _ladder_base
+#endif
 .globl ladder_base
 .globl _ladder_base
 #ifdef __ELF__
@@ -20,29 +24,29 @@ sub %r11,%rsp
 movq %r11,1536(%rsp)
 movq %r12,1544(%rsp)
 movq %r13,1552(%rsp)
-movdqa v0_0(%rip),%xmm0
-movdqa v1_0(%rip),%xmm1
-movdqa v9_0(%rip),%xmm2
-movdqa %xmm2,0(%rsp)
-movdqa %xmm0,16(%rsp)
-movdqa %xmm0,32(%rsp)
-movdqa %xmm0,48(%rsp)
-movdqa %xmm0,64(%rsp)
-movdqa %xmm1,80(%rsp)
-movdqa %xmm0,96(%rsp)
-movdqa %xmm0,112(%rsp)
-movdqa %xmm0,128(%rsp)
-movdqa %xmm0,144(%rsp)
-movdqa %xmm1,%xmm0
-pxor %xmm1,%xmm1
-pxor %xmm2,%xmm2
-pxor %xmm3,%xmm3
-pxor %xmm4,%xmm4
-pxor %xmm5,%xmm5
-pxor %xmm6,%xmm6
-pxor %xmm7,%xmm7
-pxor %xmm8,%xmm8
-pxor %xmm9,%xmm9
+vmovdqa v0_0(%rip),%xmm0
+vmovdqa v1_0(%rip),%xmm1
+vmovdqa v9_0(%rip),%xmm2
+vmovdqa %xmm2,0(%rsp)
+vmovdqa %xmm0,16(%rsp)
+vmovdqa %xmm0,32(%rsp)
+vmovdqa %xmm0,48(%rsp)
+vmovdqa %xmm0,64(%rsp)
+vmovdqa %xmm1,80(%rsp)
+vmovdqa %xmm0,96(%rsp)
+vmovdqa %xmm0,112(%rsp)
+vmovdqa %xmm0,128(%rsp)
+vmovdqa %xmm0,144(%rsp)
+vmovdqa %xmm1,%xmm0
+vpxor %xmm1,%xmm1,%xmm1
+vpxor %xmm2,%xmm2,%xmm2
+vpxor %xmm3,%xmm3,%xmm3
+vpxor %xmm4,%xmm4,%xmm4
+vpxor %xmm5,%xmm5,%xmm5
+vpxor %xmm6,%xmm6,%xmm6
+vpxor %xmm7,%xmm7,%xmm7
+vpxor %xmm8,%xmm8,%xmm8
+vpxor %xmm9,%xmm9,%xmm9
 movq   0(%rsi),%rdx
 movq   8(%rsi),%rcx
 movq   16(%rsi),%r8
@@ -57,6 +61,8 @@ xorq 16(%rsi),%r8
 xorq 24(%rsi),%r9
 leaq 512(%rsp),%rsi
 mov  $64,%rax
+
+.p2align 4
 ._ladder_base_small_loop:
 mov  %rdx,%r10
 mov  %rcx,%r11
@@ -83,1179 +89,1181 @@ sub  $1,%rax
 jne ._ladder_base_small_loop
 mov  $255,%rdx
 add  $760,%rsi
+
+.p2align 4
 ._ladder_base_loop:
 sub  $1,%rdx
 vbroadcastss 0(%rsi),%xmm10
 sub  $4,%rsi
-movdqa 0(%rsp),%xmm11
-movdqa 80(%rsp),%xmm12
+vmovdqa 0(%rsp),%xmm11
+vmovdqa 80(%rsp),%xmm12
 vpxor %xmm11,%xmm0,%xmm13
-pand %xmm10,%xmm13
-pxor %xmm13,%xmm0
-pxor %xmm13,%xmm11
+vpand %xmm10,%xmm13,%xmm13
+vpxor %xmm13,%xmm0,%xmm0
+vpxor %xmm13,%xmm11,%xmm11
 vpxor %xmm12,%xmm1,%xmm13
-pand %xmm10,%xmm13
-pxor %xmm13,%xmm1
-pxor %xmm13,%xmm12
-movdqa 16(%rsp),%xmm13
-movdqa 96(%rsp),%xmm14
+vpand %xmm10,%xmm13,%xmm13
+vpxor %xmm13,%xmm1,%xmm1
+vpxor %xmm13,%xmm12,%xmm12
+vmovdqa 16(%rsp),%xmm13
+vmovdqa 96(%rsp),%xmm14
 vpxor %xmm13,%xmm2,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm2
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm2,%xmm2
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm3,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm3
-pxor %xmm15,%xmm14
-movdqa %xmm13,0(%rsp)
-movdqa %xmm14,16(%rsp)
-movdqa 32(%rsp),%xmm13
-movdqa 112(%rsp),%xmm14
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm3,%xmm3
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,0(%rsp)
+vmovdqa %xmm14,16(%rsp)
+vmovdqa 32(%rsp),%xmm13
+vmovdqa 112(%rsp),%xmm14
 vpxor %xmm13,%xmm4,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm4
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm4,%xmm4
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm5,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm5
-pxor %xmm15,%xmm14
-movdqa %xmm13,32(%rsp)
-movdqa %xmm14,80(%rsp)
-movdqa 48(%rsp),%xmm13
-movdqa 128(%rsp),%xmm14
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm5,%xmm5
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,32(%rsp)
+vmovdqa %xmm14,80(%rsp)
+vmovdqa 48(%rsp),%xmm13
+vmovdqa 128(%rsp),%xmm14
 vpxor %xmm13,%xmm6,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm6
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm6,%xmm6
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm7,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm7
-pxor %xmm15,%xmm14
-movdqa %xmm13,48(%rsp)
-movdqa %xmm14,96(%rsp)
-movdqa 64(%rsp),%xmm13
-movdqa 144(%rsp),%xmm14
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm7,%xmm7
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,48(%rsp)
+vmovdqa %xmm14,96(%rsp)
+vmovdqa 64(%rsp),%xmm13
+vmovdqa 144(%rsp),%xmm14
 vpxor %xmm13,%xmm8,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm8
-pxor %xmm15,%xmm13
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm8,%xmm8
+vpxor %xmm15,%xmm13,%xmm13
 vpxor %xmm14,%xmm9,%xmm15
-pand %xmm10,%xmm15
-pxor %xmm15,%xmm9
-pxor %xmm15,%xmm14
-movdqa %xmm13,64(%rsp)
-movdqa %xmm14,112(%rsp)
+vpand %xmm10,%xmm15,%xmm15
+vpxor %xmm15,%xmm9,%xmm9
+vpxor %xmm15,%xmm14,%xmm14
+vmovdqa %xmm13,64(%rsp)
+vmovdqa %xmm14,112(%rsp)
 vpaddq subc0(%rip),%xmm11,%xmm10
-psubq %xmm12,%xmm10
-paddq %xmm12,%xmm11
+vpsubq %xmm12,%xmm10,%xmm10
+vpaddq %xmm12,%xmm11,%xmm11
 vpunpckhqdq %xmm10,%xmm11,%xmm12
 vpunpcklqdq %xmm10,%xmm11,%xmm10
 vpaddq %xmm1,%xmm0,%xmm11
-paddq subc0(%rip),%xmm0
-psubq %xmm1,%xmm0
+vpaddq subc0(%rip),%xmm0,%xmm0
+vpsubq %xmm1,%xmm0,%xmm0
 vpunpckhqdq %xmm11,%xmm0,%xmm1
 vpunpcklqdq %xmm11,%xmm0,%xmm0
 vpmuludq %xmm0,%xmm10,%xmm11
 vpmuludq %xmm1,%xmm10,%xmm13
-movdqa %xmm1,128(%rsp)
-paddq %xmm1,%xmm1
+vmovdqa %xmm1,128(%rsp)
+vpaddq %xmm1,%xmm1,%xmm1
 vpmuludq %xmm0,%xmm12,%xmm14
-movdqa %xmm0,144(%rsp)
-paddq %xmm14,%xmm13
+vmovdqa %xmm0,144(%rsp)
+vpaddq %xmm14,%xmm13,%xmm13
 vpmuludq %xmm1,%xmm12,%xmm0
-movdqa %xmm1,160(%rsp)
+vmovdqa %xmm1,160(%rsp)
 vpaddq %xmm3,%xmm2,%xmm1
-paddq subc2(%rip),%xmm2
-psubq %xmm3,%xmm2
+vpaddq subc2(%rip),%xmm2,%xmm2
+vpsubq %xmm3,%xmm2,%xmm2
 vpunpckhqdq %xmm1,%xmm2,%xmm3
 vpunpcklqdq %xmm1,%xmm2,%xmm1
 vpmuludq %xmm1,%xmm10,%xmm2
-paddq %xmm2,%xmm0
+vpaddq %xmm2,%xmm0,%xmm0
 vpmuludq %xmm3,%xmm10,%xmm2
-movdqa %xmm3,176(%rsp)
-paddq %xmm3,%xmm3
+vmovdqa %xmm3,176(%rsp)
+vpaddq %xmm3,%xmm3,%xmm3
 vpmuludq %xmm1,%xmm12,%xmm14
-movdqa %xmm1,192(%rsp)
-paddq %xmm14,%xmm2
+vmovdqa %xmm1,192(%rsp)
+vpaddq %xmm14,%xmm2,%xmm2
 vpmuludq %xmm3,%xmm12,%xmm1
-movdqa %xmm3,208(%rsp)
+vmovdqa %xmm3,208(%rsp)
 vpaddq %xmm5,%xmm4,%xmm3
-paddq subc2(%rip),%xmm4
-psubq %xmm5,%xmm4
+vpaddq subc2(%rip),%xmm4,%xmm4
+vpsubq %xmm5,%xmm4,%xmm4
 vpunpckhqdq %xmm3,%xmm4,%xmm5
 vpunpcklqdq %xmm3,%xmm4,%xmm3
 vpmuludq %xmm3,%xmm10,%xmm4
-paddq %xmm4,%xmm1
+vpaddq %xmm4,%xmm1,%xmm1
 vpmuludq %xmm5,%xmm10,%xmm4
-movdqa %xmm5,224(%rsp)
-paddq %xmm5,%xmm5
+vmovdqa %xmm5,224(%rsp)
+vpaddq %xmm5,%xmm5,%xmm5
 vpmuludq %xmm3,%xmm12,%xmm14
-movdqa %xmm3,240(%rsp)
-paddq %xmm14,%xmm4
+vmovdqa %xmm3,240(%rsp)
+vpaddq %xmm14,%xmm4,%xmm4
 vpaddq %xmm7,%xmm6,%xmm3
-paddq subc2(%rip),%xmm6
-psubq %xmm7,%xmm6
+vpaddq subc2(%rip),%xmm6,%xmm6
+vpsubq %xmm7,%xmm6,%xmm6
 vpunpckhqdq %xmm3,%xmm6,%xmm7
 vpunpcklqdq %xmm3,%xmm6,%xmm3
 vpmuludq %xmm3,%xmm10,%xmm6
 vpmuludq %xmm5,%xmm12,%xmm14
-movdqa %xmm5,256(%rsp)
-pmuludq v19_19(%rip),%xmm5
-movdqa %xmm5,272(%rsp)
-paddq %xmm14,%xmm6
+vmovdqa %xmm5,256(%rsp)
+vpmuludq v19_19(%rip),%xmm5,%xmm5
+vmovdqa %xmm5,272(%rsp)
+vpaddq %xmm14,%xmm6,%xmm6
 vpmuludq %xmm7,%xmm10,%xmm5
-movdqa %xmm7,288(%rsp)
-paddq %xmm7,%xmm7
+vmovdqa %xmm7,288(%rsp)
+vpaddq %xmm7,%xmm7,%xmm7
 vpmuludq %xmm3,%xmm12,%xmm14
-movdqa %xmm3,304(%rsp)
-paddq %xmm14,%xmm5
-pmuludq v19_19(%rip),%xmm3
-movdqa %xmm3,320(%rsp)
+vmovdqa %xmm3,304(%rsp)
+vpaddq %xmm14,%xmm5,%xmm5
+vpmuludq v19_19(%rip),%xmm3,%xmm3
+vmovdqa %xmm3,320(%rsp)
 vpaddq %xmm9,%xmm8,%xmm3
-paddq subc2(%rip),%xmm8
-psubq %xmm9,%xmm8
+vpaddq subc2(%rip),%xmm8,%xmm8
+vpsubq %xmm9,%xmm8,%xmm8
 vpunpckhqdq %xmm3,%xmm8,%xmm9
 vpunpcklqdq %xmm3,%xmm8,%xmm3
-movdqa %xmm3,336(%rsp)
+vmovdqa %xmm3,336(%rsp)
 vpmuludq %xmm7,%xmm12,%xmm8
-movdqa %xmm7,352(%rsp)
-pmuludq v19_19(%rip),%xmm7
-movdqa %xmm7,368(%rsp)
+vmovdqa %xmm7,352(%rsp)
+vpmuludq v19_19(%rip),%xmm7,%xmm7
+vmovdqa %xmm7,368(%rsp)
 vpmuludq %xmm3,%xmm10,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq %xmm9,%xmm10,%xmm7
-movdqa %xmm9,384(%rsp)
-paddq %xmm9,%xmm9
+vmovdqa %xmm9,384(%rsp)
+vpaddq %xmm9,%xmm9,%xmm9
 vpmuludq %xmm3,%xmm12,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
-movdqa %xmm3,400(%rsp)
-pmuludq v19_19(%rip),%xmm12
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
+vmovdqa %xmm3,400(%rsp)
+vpmuludq v19_19(%rip),%xmm12,%xmm12
 vpmuludq %xmm9,%xmm12,%xmm3
-movdqa %xmm9,416(%rsp)
-paddq %xmm3,%xmm11
-movdqa 0(%rsp),%xmm3
-movdqa 16(%rsp),%xmm9
+vmovdqa %xmm9,416(%rsp)
+vpaddq %xmm3,%xmm11,%xmm11
+vmovdqa 0(%rsp),%xmm3
+vmovdqa 16(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
+vpaddq %xmm10,%xmm0,%xmm0
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm2
+vpaddq %xmm10,%xmm2,%xmm2
 vpmuludq 192(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
+vpaddq %xmm10,%xmm1,%xmm1
 vpmuludq 176(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm4
+vpaddq %xmm10,%xmm4,%xmm4
 vpmuludq 240(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
+vpaddq %xmm10,%xmm6,%xmm6
 vpmuludq 224(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm5
+vpaddq %xmm10,%xmm5,%xmm5
 vpmuludq 304(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 288(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 336(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
-pmuludq 384(%rsp),%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm10,%xmm11,%xmm11
+vpmuludq 384(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 160(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm1
+vpaddq %xmm3,%xmm1,%xmm1
 vpmuludq 192(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 208(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 240(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 256(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 304(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 352(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 336(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
-pmuludq 416(%rsp),%xmm9
-paddq %xmm9,%xmm0
-movdqa 32(%rsp),%xmm3
-movdqa 80(%rsp),%xmm9
+vpaddq %xmm3,%xmm13,%xmm13
+vpmuludq 416(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm0,%xmm0
+vmovdqa 32(%rsp),%xmm3
+vmovdqa 80(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
+vpaddq %xmm10,%xmm1,%xmm1
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm4
+vpaddq %xmm10,%xmm4,%xmm4
 vpmuludq 192(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
+vpaddq %xmm10,%xmm6,%xmm6
 vpmuludq 176(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm5
+vpaddq %xmm10,%xmm5,%xmm5
 vpmuludq 240(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 224(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 304(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
+vpaddq %xmm10,%xmm11,%xmm11
 vpmuludq 288(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm13
+vpaddq %xmm10,%xmm13,%xmm13
 vpmuludq 336(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
-pmuludq 384(%rsp),%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm10,%xmm0,%xmm0
+vpmuludq 384(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 160(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 192(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 208(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 240(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 256(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 304(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 352(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm0
+vpaddq %xmm3,%xmm0,%xmm0
 vpmuludq 336(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
-pmuludq 416(%rsp),%xmm9
-paddq %xmm9,%xmm1
-movdqa 48(%rsp),%xmm3
-movdqa 96(%rsp),%xmm9
+vpaddq %xmm3,%xmm2,%xmm2
+vpmuludq 416(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm1,%xmm1
+vmovdqa 48(%rsp),%xmm3
+vmovdqa 96(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
+vpaddq %xmm10,%xmm6,%xmm6
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm5
+vpaddq %xmm10,%xmm5,%xmm5
 vpmuludq 192(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 176(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 240(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
+vpaddq %xmm10,%xmm11,%xmm11
 vpmuludq 224(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm13
+vpaddq %xmm10,%xmm13,%xmm13
 vpmuludq 304(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
+vpaddq %xmm10,%xmm0,%xmm0
 vpmuludq 288(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm2
+vpaddq %xmm10,%xmm2,%xmm2
 vpmuludq 336(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
-pmuludq 384(%rsp),%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm10,%xmm1,%xmm1
+vpmuludq 384(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 160(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 192(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 208(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 240(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 256(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm0
+vpaddq %xmm3,%xmm0,%xmm0
 vpmuludq 304(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 352(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm1
+vpaddq %xmm3,%xmm1,%xmm1
 vpmuludq 336(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
-pmuludq 416(%rsp),%xmm9
-paddq %xmm9,%xmm6
-movdqa 64(%rsp),%xmm3
-movdqa 112(%rsp),%xmm9
+vpaddq %xmm3,%xmm4,%xmm4
+vpmuludq 416(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm6,%xmm6
+vmovdqa 64(%rsp),%xmm3
+vmovdqa 112(%rsp),%xmm9
 vpaddq subc2(%rip),%xmm3,%xmm10
-psubq %xmm9,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm9,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm10,%xmm3,%xmm9
 vpunpcklqdq %xmm10,%xmm3,%xmm3
 vpmuludq 144(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm8
+vpaddq %xmm10,%xmm8,%xmm8
 vpmuludq 128(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm7
-pmuludq v19_19(%rip),%xmm3
+vpaddq %xmm10,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm3,%xmm3
 vpmuludq 192(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm11
+vpaddq %xmm10,%xmm11,%xmm11
 vpmuludq 176(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm13
+vpaddq %xmm10,%xmm13,%xmm13
 vpmuludq 240(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm0
+vpaddq %xmm10,%xmm0,%xmm0
 vpmuludq 224(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm2
+vpaddq %xmm10,%xmm2,%xmm2
 vpmuludq 304(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm1
+vpaddq %xmm10,%xmm1,%xmm1
 vpmuludq 288(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm4
+vpaddq %xmm10,%xmm4,%xmm4
 vpmuludq 336(%rsp),%xmm3,%xmm10
-paddq %xmm10,%xmm6
-pmuludq 384(%rsp),%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm10,%xmm6,%xmm6
+vpmuludq 384(%rsp),%xmm3,%xmm3
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 144(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm7
-pmuludq v19_19(%rip),%xmm9
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq v19_19(%rip),%xmm9,%xmm9
 vpmuludq 160(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 192(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 208(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm0
+vpaddq %xmm3,%xmm0,%xmm0
 vpmuludq 240(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm2
+vpaddq %xmm3,%xmm2,%xmm2
 vpmuludq 256(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm1
+vpaddq %xmm3,%xmm1,%xmm1
 vpmuludq 304(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm4
+vpaddq %xmm3,%xmm4,%xmm4
 vpmuludq 352(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 336(%rsp),%xmm9,%xmm3
-paddq %xmm3,%xmm5
-pmuludq 416(%rsp),%xmm9
-paddq %xmm9,%xmm8
+vpaddq %xmm3,%xmm5,%xmm5
+vpmuludq 416(%rsp),%xmm9,%xmm9
+vpaddq %xmm9,%xmm8,%xmm8
 vpsrlq $25,%xmm4,%xmm3
-paddq %xmm3,%xmm6
-pand m25(%rip),%xmm4
+vpaddq %xmm3,%xmm6,%xmm6
+vpand m25(%rip),%xmm4,%xmm4
 vpsrlq $26,%xmm11,%xmm3
-paddq %xmm3,%xmm13
-pand m26(%rip),%xmm11
+vpaddq %xmm3,%xmm13,%xmm13
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm6,%xmm3
-paddq %xmm3,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm3,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpsrlq $25,%xmm13,%xmm3
-paddq %xmm3,%xmm0
-pand m25(%rip),%xmm13
+vpaddq %xmm3,%xmm0,%xmm0
+vpand m25(%rip),%xmm13,%xmm13
 vpsrlq $25,%xmm5,%xmm3
-paddq %xmm3,%xmm8
-pand m25(%rip),%xmm5
+vpaddq %xmm3,%xmm8,%xmm8
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm0,%xmm3
-paddq %xmm3,%xmm2
-pand m26(%rip),%xmm0
+vpaddq %xmm3,%xmm2,%xmm2
+vpand m26(%rip),%xmm0,%xmm0
 vpsrlq $26,%xmm8,%xmm3
-paddq %xmm3,%xmm7
-pand m26(%rip),%xmm8
+vpaddq %xmm3,%xmm7,%xmm7
+vpand m26(%rip),%xmm8,%xmm8
 vpsrlq $25,%xmm2,%xmm3
-paddq %xmm3,%xmm1
-pand m25(%rip),%xmm2
+vpaddq %xmm3,%xmm1,%xmm1
+vpand m25(%rip),%xmm2,%xmm2
 vpsrlq $25,%xmm7,%xmm3
 vpsllq $4,%xmm3,%xmm9
-paddq %xmm3,%xmm11
-psllq $1,%xmm3
-paddq %xmm3,%xmm9
-paddq %xmm9,%xmm11
-pand m25(%rip),%xmm7
+vpaddq %xmm3,%xmm11,%xmm11
+vpsllq $1,%xmm3,%xmm3
+vpaddq %xmm3,%xmm9,%xmm9
+vpaddq %xmm9,%xmm11,%xmm11
+vpand m25(%rip),%xmm7,%xmm7
 vpsrlq $26,%xmm1,%xmm3
-paddq %xmm3,%xmm4
-pand m26(%rip),%xmm1
+vpaddq %xmm3,%xmm4,%xmm4
+vpand m26(%rip),%xmm1,%xmm1
 vpsrlq $26,%xmm11,%xmm3
-paddq %xmm3,%xmm13
-pand m26(%rip),%xmm11
+vpaddq %xmm3,%xmm13,%xmm13
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $25,%xmm4,%xmm3
-paddq %xmm3,%xmm6
-pand m25(%rip),%xmm4
+vpaddq %xmm3,%xmm6,%xmm6
+vpand m25(%rip),%xmm4,%xmm4
 vpunpcklqdq %xmm13,%xmm11,%xmm3
 vpunpckhqdq %xmm13,%xmm11,%xmm9
 vpaddq subc0(%rip),%xmm9,%xmm10
-psubq %xmm3,%xmm10
-paddq %xmm9,%xmm3
+vpsubq %xmm3,%xmm10,%xmm10
+vpaddq %xmm9,%xmm3,%xmm3
 vpunpckhqdq %xmm3,%xmm10,%xmm9
-punpcklqdq %xmm3,%xmm10
+vpunpcklqdq %xmm3,%xmm10,%xmm10
 vpmuludq %xmm10,%xmm10,%xmm3
-paddq %xmm10,%xmm10
+vpaddq %xmm10,%xmm10,%xmm10
 vpmuludq %xmm9,%xmm10,%xmm11
 vpunpcklqdq %xmm2,%xmm0,%xmm12
 vpunpckhqdq %xmm2,%xmm0,%xmm0
 vpaddq subc2(%rip),%xmm0,%xmm2
-psubq %xmm12,%xmm2
-paddq %xmm0,%xmm12
+vpsubq %xmm12,%xmm2,%xmm2
+vpaddq %xmm0,%xmm12,%xmm12
 vpunpckhqdq %xmm12,%xmm2,%xmm0
-punpcklqdq %xmm12,%xmm2
+vpunpcklqdq %xmm12,%xmm2,%xmm2
 vpmuludq %xmm2,%xmm10,%xmm12
 vpaddq %xmm9,%xmm9,%xmm13
 vpmuludq %xmm13,%xmm9,%xmm9
-paddq %xmm9,%xmm12
+vpaddq %xmm9,%xmm12,%xmm12
 vpmuludq %xmm0,%xmm10,%xmm9
 vpmuludq %xmm2,%xmm13,%xmm14
-paddq %xmm14,%xmm9
+vpaddq %xmm14,%xmm9,%xmm9
 vpunpcklqdq %xmm4,%xmm1,%xmm14
 vpunpckhqdq %xmm4,%xmm1,%xmm1
 vpaddq subc2(%rip),%xmm1,%xmm4
-psubq %xmm14,%xmm4
-paddq %xmm1,%xmm14
+vpsubq %xmm14,%xmm4,%xmm4
+vpaddq %xmm1,%xmm14,%xmm14
 vpunpckhqdq %xmm14,%xmm4,%xmm1
-punpcklqdq %xmm14,%xmm4
-movdqa %xmm1,0(%rsp)
-paddq %xmm1,%xmm1
-movdqa %xmm1,16(%rsp)
-pmuludq v19_19(%rip),%xmm1
-movdqa %xmm1,32(%rsp)
+vpunpcklqdq %xmm14,%xmm4,%xmm4
+vmovdqa %xmm1,0(%rsp)
+vpaddq %xmm1,%xmm1,%xmm1
+vmovdqa %xmm1,16(%rsp)
+vpmuludq v19_19(%rip),%xmm1,%xmm1
+vmovdqa %xmm1,32(%rsp)
 vpmuludq %xmm4,%xmm10,%xmm1
 vpmuludq %xmm2,%xmm2,%xmm14
-paddq %xmm14,%xmm1
+vpaddq %xmm14,%xmm1,%xmm1
 vpmuludq 0(%rsp),%xmm10,%xmm14
 vpmuludq %xmm4,%xmm13,%xmm15
-paddq %xmm15,%xmm14
+vpaddq %xmm15,%xmm14,%xmm14
 vpunpcklqdq %xmm5,%xmm6,%xmm15
 vpunpckhqdq %xmm5,%xmm6,%xmm5
 vpaddq subc2(%rip),%xmm5,%xmm6
-psubq %xmm15,%xmm6
-paddq %xmm5,%xmm15
+vpsubq %xmm15,%xmm6,%xmm6
+vpaddq %xmm5,%xmm15,%xmm15
 vpunpckhqdq %xmm15,%xmm6,%xmm5
-punpcklqdq %xmm15,%xmm6
-movdqa %xmm6,48(%rsp)
-pmuludq v19_19(%rip),%xmm6
-movdqa %xmm6,64(%rsp)
-movdqa %xmm5,80(%rsp)
-pmuludq v38_38(%rip),%xmm5
-movdqa %xmm5,96(%rsp)
+vpunpcklqdq %xmm15,%xmm6,%xmm6
+vmovdqa %xmm6,48(%rsp)
+vpmuludq v19_19(%rip),%xmm6,%xmm6
+vmovdqa %xmm6,64(%rsp)
+vmovdqa %xmm5,80(%rsp)
+vpmuludq v38_38(%rip),%xmm5,%xmm5
+vmovdqa %xmm5,96(%rsp)
 vpmuludq 48(%rsp),%xmm10,%xmm5
 vpaddq %xmm0,%xmm0,%xmm6
 vpmuludq %xmm6,%xmm0,%xmm0
-paddq %xmm0,%xmm5
+vpaddq %xmm0,%xmm5,%xmm5
 vpmuludq 80(%rsp),%xmm10,%xmm0
 vpmuludq %xmm4,%xmm6,%xmm15
-paddq %xmm15,%xmm0
+vpaddq %xmm15,%xmm0,%xmm0
 vpmuludq %xmm6,%xmm13,%xmm15
-paddq %xmm15,%xmm1
+vpaddq %xmm15,%xmm1,%xmm1
 vpmuludq %xmm6,%xmm2,%xmm15
-paddq %xmm15,%xmm14
+vpaddq %xmm15,%xmm14,%xmm14
 vpunpcklqdq %xmm7,%xmm8,%xmm15
 vpunpckhqdq %xmm7,%xmm8,%xmm7
 vpaddq subc2(%rip),%xmm7,%xmm8
-psubq %xmm15,%xmm8
-paddq %xmm7,%xmm15
+vpsubq %xmm15,%xmm8,%xmm8
+vpaddq %xmm7,%xmm15,%xmm15
 vpunpckhqdq %xmm15,%xmm8,%xmm7
-punpcklqdq %xmm15,%xmm8
-movdqa %xmm8,112(%rsp)
-pmuludq v19_19(%rip),%xmm8
-movdqa %xmm8,160(%rsp)
+vpunpcklqdq %xmm15,%xmm8,%xmm8
+vmovdqa %xmm8,112(%rsp)
+vpmuludq v19_19(%rip),%xmm8,%xmm8
+vmovdqa %xmm8,160(%rsp)
 vpmuludq 112(%rsp),%xmm10,%xmm8
 vpmuludq %xmm7,%xmm10,%xmm10
 vpmuludq v38_38(%rip),%xmm7,%xmm15
 vpmuludq %xmm15,%xmm7,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq %xmm15,%xmm13,%xmm7
-paddq %xmm7,%xmm3
+vpaddq %xmm7,%xmm3,%xmm3
 vpmuludq %xmm15,%xmm2,%xmm7
-paddq %xmm7,%xmm11
+vpaddq %xmm7,%xmm11,%xmm11
 vpmuludq 80(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm7,%xmm7
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq 16(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm5
+vpaddq %xmm7,%xmm5,%xmm5
 vpmuludq 48(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm0
+vpaddq %xmm7,%xmm0,%xmm0
 vpmuludq 112(%rsp),%xmm13,%xmm7
-paddq %xmm7,%xmm10
+vpaddq %xmm7,%xmm10,%xmm10
 vpmuludq %xmm15,%xmm6,%xmm7
-paddq %xmm7,%xmm12
+vpaddq %xmm7,%xmm12,%xmm12
 vpmuludq %xmm15,%xmm4,%xmm7
-paddq %xmm7,%xmm9
+vpaddq %xmm7,%xmm9,%xmm9
 vpaddq %xmm2,%xmm2,%xmm2
 vpmuludq %xmm4,%xmm2,%xmm7
-paddq %xmm7,%xmm5
+vpaddq %xmm7,%xmm5,%xmm5
 vpmuludq 160(%rsp),%xmm2,%xmm7
-paddq %xmm7,%xmm3
+vpaddq %xmm7,%xmm3,%xmm3
 vpmuludq 160(%rsp),%xmm6,%xmm7
-paddq %xmm7,%xmm11
+vpaddq %xmm7,%xmm11,%xmm11
 vpmuludq 0(%rsp),%xmm2,%xmm7
-paddq %xmm7,%xmm0
+vpaddq %xmm7,%xmm0,%xmm0
 vpmuludq 48(%rsp),%xmm2,%xmm7
-paddq %xmm7,%xmm8
+vpaddq %xmm7,%xmm8,%xmm8
 vpmuludq 80(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 96(%rsp),%xmm4,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq %xmm4,%xmm4,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpaddq %xmm4,%xmm4,%xmm2
 vpmuludq 160(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm12
+vpaddq %xmm4,%xmm12,%xmm12
 vpmuludq 16(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm1
+vpaddq %xmm4,%xmm1,%xmm1
 vpmuludq 48(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm14
+vpaddq %xmm4,%xmm14,%xmm14
 vpmuludq 96(%rsp),%xmm6,%xmm4
-paddq %xmm4,%xmm3
-movdqa 16(%rsp),%xmm4
-pmuludq 160(%rsp),%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm3,%xmm3
+vmovdqa 16(%rsp),%xmm4
+vpmuludq 160(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 16(%rsp),%xmm6,%xmm4
-paddq %xmm4,%xmm8
+vpaddq %xmm4,%xmm8,%xmm8
 vpmuludq 48(%rsp),%xmm6,%xmm4
-paddq %xmm4,%xmm10
+vpaddq %xmm4,%xmm10,%xmm10
 vpmuludq 80(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm4
-paddq %xmm4,%xmm5
+vpaddq %xmm4,%xmm4,%xmm4
+vpaddq %xmm4,%xmm5,%xmm5
 vpmuludq 112(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm0
-movdqa 48(%rsp),%xmm4
-paddq %xmm4,%xmm4
-pmuludq 160(%rsp),%xmm4
-paddq %xmm4,%xmm1
-movdqa 80(%rsp),%xmm4
-paddq %xmm4,%xmm4
-pmuludq 160(%rsp),%xmm4
-paddq %xmm4,%xmm14
+vpaddq %xmm4,%xmm0,%xmm0
+vmovdqa 48(%rsp),%xmm4
+vpaddq %xmm4,%xmm4,%xmm4
+vpmuludq 160(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm1,%xmm1
+vmovdqa 80(%rsp),%xmm4
+vpaddq %xmm4,%xmm4,%xmm4
+vpmuludq 160(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm14,%xmm14
 vpmuludq 64(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm3
-movdqa 16(%rsp),%xmm4
-pmuludq 64(%rsp),%xmm4
-paddq %xmm4,%xmm11
-movdqa 16(%rsp),%xmm4
-pmuludq 96(%rsp),%xmm4
-paddq %xmm4,%xmm12
-movdqa 48(%rsp),%xmm4
-pmuludq 96(%rsp),%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm3,%xmm3
+vmovdqa 16(%rsp),%xmm4
+vpmuludq 64(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm11,%xmm11
+vmovdqa 16(%rsp),%xmm4
+vpmuludq 96(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm12,%xmm12
+vmovdqa 48(%rsp),%xmm4
+vpmuludq 96(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 0(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm10
-movdqa 32(%rsp),%xmm2
-pmuludq 0(%rsp),%xmm2
-paddq %xmm2,%xmm3
-movdqa 64(%rsp),%xmm2
-pmuludq 48(%rsp),%xmm2
-paddq %xmm2,%xmm12
-movdqa 96(%rsp),%xmm2
-pmuludq 80(%rsp),%xmm2
-paddq %xmm2,%xmm1
-movdqa 160(%rsp),%xmm2
-pmuludq 112(%rsp),%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm10,%xmm10
+vmovdqa 32(%rsp),%xmm2
+vpmuludq 0(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm3,%xmm3
+vmovdqa 64(%rsp),%xmm2
+vpmuludq 48(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm12,%xmm12
+vmovdqa 96(%rsp),%xmm2
+vpmuludq 80(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm1,%xmm1
+vmovdqa 160(%rsp),%xmm2
+vpmuludq 112(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm5,%xmm5
 vpsrlq $26,%xmm3,%xmm2
-paddq %xmm2,%xmm11
-pand m26(%rip),%xmm3
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m26(%rip),%xmm3,%xmm3
 vpsrlq $25,%xmm14,%xmm2
-paddq %xmm2,%xmm5
-pand m25(%rip),%xmm14
+vpaddq %xmm2,%xmm5,%xmm5
+vpand m25(%rip),%xmm14,%xmm14
 vpsrlq $25,%xmm11,%xmm2
-paddq %xmm2,%xmm12
-pand m25(%rip),%xmm11
+vpaddq %xmm2,%xmm12,%xmm12
+vpand m25(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm5,%xmm2
-paddq %xmm2,%xmm0
-pand m26(%rip),%xmm5
+vpaddq %xmm2,%xmm0,%xmm0
+vpand m26(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm12,%xmm2
-paddq %xmm2,%xmm9
-pand m26(%rip),%xmm12
+vpaddq %xmm2,%xmm9,%xmm9
+vpand m26(%rip),%xmm12,%xmm12
 vpsrlq $25,%xmm0,%xmm2
-paddq %xmm2,%xmm8
-pand m25(%rip),%xmm0
+vpaddq %xmm2,%xmm8,%xmm8
+vpand m25(%rip),%xmm0,%xmm0
 vpsrlq $25,%xmm9,%xmm2
-paddq %xmm2,%xmm1
-pand m25(%rip),%xmm9
+vpaddq %xmm2,%xmm1,%xmm1
+vpand m25(%rip),%xmm9,%xmm9
 vpsrlq $26,%xmm8,%xmm2
-paddq %xmm2,%xmm10
-pand m26(%rip),%xmm8
+vpaddq %xmm2,%xmm10,%xmm10
+vpand m26(%rip),%xmm8,%xmm8
 vpsrlq $26,%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pand m26(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpand m26(%rip),%xmm1,%xmm1
 vpsrlq $25,%xmm10,%xmm2
 vpsllq $4,%xmm2,%xmm4
-paddq %xmm2,%xmm3
-psllq $1,%xmm2
-paddq %xmm2,%xmm4
-paddq %xmm4,%xmm3
-pand m25(%rip),%xmm10
+vpaddq %xmm2,%xmm3,%xmm3
+vpsllq $1,%xmm2,%xmm2
+vpaddq %xmm2,%xmm4,%xmm4
+vpaddq %xmm4,%xmm3,%xmm3
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $25,%xmm14,%xmm2
-paddq %xmm2,%xmm5
-pand m25(%rip),%xmm14
+vpaddq %xmm2,%xmm5,%xmm5
+vpand m25(%rip),%xmm14,%xmm14
 vpsrlq $26,%xmm3,%xmm2
-paddq %xmm2,%xmm11
-pand m26(%rip),%xmm3
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m26(%rip),%xmm3,%xmm3
 vpunpckhqdq %xmm11,%xmm3,%xmm2
-movdqa %xmm2,0(%rsp)
+vmovdqa %xmm2,0(%rsp)
 vpunpcklqdq %xmm11,%xmm3,%xmm2
-pmuludq v9_9(%rip),%xmm2
-movdqa %xmm2,80(%rsp)
+vpmuludq v9_9(%rip),%xmm2,%xmm2
+vmovdqa %xmm2,80(%rsp)
 vpunpckhqdq %xmm9,%xmm12,%xmm2
-movdqa %xmm2,16(%rsp)
+vmovdqa %xmm2,16(%rsp)
 vpunpcklqdq %xmm9,%xmm12,%xmm2
-pmuludq v9_9(%rip),%xmm2
-movdqa %xmm2,96(%rsp)
+vpmuludq v9_9(%rip),%xmm2,%xmm2
+vmovdqa %xmm2,96(%rsp)
 vpunpckhqdq %xmm14,%xmm1,%xmm2
-movdqa %xmm2,32(%rsp)
+vmovdqa %xmm2,32(%rsp)
 vpunpcklqdq %xmm14,%xmm1,%xmm1
-pmuludq v9_9(%rip),%xmm1
-movdqa %xmm1,112(%rsp)
+vpmuludq v9_9(%rip),%xmm1,%xmm1
+vmovdqa %xmm1,112(%rsp)
 vpunpckhqdq %xmm0,%xmm5,%xmm1
-movdqa %xmm1,48(%rsp)
+vmovdqa %xmm1,48(%rsp)
 vpunpcklqdq %xmm0,%xmm5,%xmm0
-pmuludq v9_9(%rip),%xmm0
-movdqa %xmm0,160(%rsp)
+vpmuludq v9_9(%rip),%xmm0,%xmm0
+vmovdqa %xmm0,160(%rsp)
 vpunpckhqdq %xmm10,%xmm8,%xmm0
-movdqa %xmm0,64(%rsp)
+vmovdqa %xmm0,64(%rsp)
 vpunpcklqdq %xmm10,%xmm8,%xmm0
-pmuludq v9_9(%rip),%xmm0
-movdqa %xmm0,208(%rsp)
-movdqa 144(%rsp),%xmm0
+vpmuludq v9_9(%rip),%xmm0,%xmm0
+vmovdqa %xmm0,208(%rsp)
+vmovdqa 144(%rsp),%xmm0
 vpmuludq %xmm0,%xmm0,%xmm1
-paddq %xmm0,%xmm0
-movdqa 128(%rsp),%xmm2
+vpaddq %xmm0,%xmm0,%xmm0
+vmovdqa 128(%rsp),%xmm2
 vpmuludq %xmm2,%xmm0,%xmm3
-movdqa 192(%rsp),%xmm4
+vmovdqa 192(%rsp),%xmm4
 vpmuludq %xmm4,%xmm0,%xmm5
-movdqa 176(%rsp),%xmm6
+vmovdqa 176(%rsp),%xmm6
 vpmuludq %xmm6,%xmm0,%xmm7
-movdqa 240(%rsp),%xmm8
+vmovdqa 240(%rsp),%xmm8
 vpmuludq %xmm8,%xmm0,%xmm9
 vpmuludq 224(%rsp),%xmm0,%xmm10
 vpmuludq 304(%rsp),%xmm0,%xmm11
 vpmuludq 288(%rsp),%xmm0,%xmm12
 vpmuludq 336(%rsp),%xmm0,%xmm13
-movdqa 384(%rsp),%xmm14
+vmovdqa 384(%rsp),%xmm14
 vpmuludq %xmm14,%xmm0,%xmm0
 vpmuludq v38_38(%rip),%xmm14,%xmm15
 vpmuludq %xmm15,%xmm14,%xmm14
-paddq %xmm14,%xmm13
+vpaddq %xmm14,%xmm13,%xmm13
 vpaddq %xmm6,%xmm6,%xmm14
 vpmuludq %xmm14,%xmm6,%xmm6
-paddq %xmm6,%xmm11
+vpaddq %xmm6,%xmm11,%xmm11
 vpaddq %xmm2,%xmm2,%xmm6
 vpmuludq %xmm6,%xmm2,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq %xmm15,%xmm6,%xmm2
-paddq %xmm2,%xmm1
+vpaddq %xmm2,%xmm1,%xmm1
 vpmuludq %xmm15,%xmm4,%xmm2
-paddq %xmm2,%xmm3
+vpaddq %xmm2,%xmm3,%xmm3
 vpmuludq 256(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 304(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 352(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 336(%rsp),%xmm6,%xmm2
-paddq %xmm2,%xmm0
+vpaddq %xmm2,%xmm0,%xmm0
 vpmuludq %xmm4,%xmm6,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq %xmm14,%xmm6,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq %xmm8,%xmm6,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq %xmm15,%xmm14,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq %xmm15,%xmm8,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq %xmm4,%xmm4,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq %xmm14,%xmm4,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpaddq %xmm4,%xmm4,%xmm2
 vpmuludq %xmm8,%xmm2,%xmm4
-paddq %xmm4,%xmm11
+vpaddq %xmm4,%xmm11,%xmm11
 vpmuludq 400(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm1
+vpaddq %xmm4,%xmm1,%xmm1
 vpmuludq 400(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm3
+vpaddq %xmm4,%xmm3,%xmm3
 vpmuludq 224(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm12
+vpaddq %xmm4,%xmm12,%xmm12
 vpmuludq 304(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm13
+vpaddq %xmm4,%xmm13,%xmm13
 vpmuludq 288(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm0
+vpaddq %xmm2,%xmm0,%xmm0
 vpmuludq 368(%rsp),%xmm8,%xmm2
-paddq %xmm2,%xmm3
+vpaddq %xmm2,%xmm3,%xmm3
 vpmuludq %xmm8,%xmm14,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq %xmm8,%xmm8,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpaddq %xmm8,%xmm8,%xmm2
 vpmuludq 400(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm5
+vpaddq %xmm4,%xmm5,%xmm5
 vpmuludq 256(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 304(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm10
+vpaddq %xmm4,%xmm10,%xmm10
 vpmuludq 368(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm1
-movdqa 256(%rsp),%xmm4
-pmuludq 400(%rsp),%xmm4
-paddq %xmm4,%xmm7
+vpaddq %xmm4,%xmm1,%xmm1
+vmovdqa 256(%rsp),%xmm4
+vpmuludq 400(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm7,%xmm7
 vpmuludq 256(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm13
+vpaddq %xmm4,%xmm13,%xmm13
 vpmuludq 304(%rsp),%xmm14,%xmm4
-paddq %xmm4,%xmm0
+vpaddq %xmm4,%xmm0,%xmm0
 vpmuludq 352(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm11
+vpaddq %xmm4,%xmm11,%xmm11
 vpmuludq 336(%rsp),%xmm15,%xmm4
-paddq %xmm4,%xmm12
-movdqa 304(%rsp),%xmm4
-paddq %xmm4,%xmm4
-pmuludq 400(%rsp),%xmm4
-paddq %xmm4,%xmm9
+vpaddq %xmm4,%xmm12,%xmm12
+vmovdqa 304(%rsp),%xmm4
+vpaddq %xmm4,%xmm4,%xmm4
+vpmuludq 400(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm9,%xmm9
 vpmuludq 320(%rsp),%xmm2,%xmm4
-paddq %xmm4,%xmm1
-movdqa 256(%rsp),%xmm4
-pmuludq 320(%rsp),%xmm4
-paddq %xmm4,%xmm3
-movdqa 256(%rsp),%xmm4
-pmuludq 368(%rsp),%xmm4
-paddq %xmm4,%xmm5
-movdqa 304(%rsp),%xmm4
-pmuludq 368(%rsp),%xmm4
-paddq %xmm4,%xmm7
-movdqa 352(%rsp),%xmm4
-pmuludq 400(%rsp),%xmm4
-paddq %xmm4,%xmm10
+vpaddq %xmm4,%xmm1,%xmm1
+vmovdqa 256(%rsp),%xmm4
+vpmuludq 320(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm3,%xmm3
+vmovdqa 256(%rsp),%xmm4
+vpmuludq 368(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm5,%xmm5
+vmovdqa 304(%rsp),%xmm4
+vpmuludq 368(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm7,%xmm7
+vmovdqa 352(%rsp),%xmm4
+vpmuludq 400(%rsp),%xmm4,%xmm4
+vpaddq %xmm4,%xmm10,%xmm10
 vpmuludq 224(%rsp),%xmm2,%xmm2
-paddq %xmm2,%xmm0
-movdqa 272(%rsp),%xmm2
-pmuludq 224(%rsp),%xmm2
-paddq %xmm2,%xmm1
-movdqa 320(%rsp),%xmm2
-pmuludq 304(%rsp),%xmm2
-paddq %xmm2,%xmm5
-movdqa 368(%rsp),%xmm2
-pmuludq 288(%rsp),%xmm2
-paddq %xmm2,%xmm9
-movdqa 400(%rsp),%xmm2
-pmuludq 336(%rsp),%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm0,%xmm0
+vmovdqa 272(%rsp),%xmm2
+vpmuludq 224(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm1,%xmm1
+vmovdqa 320(%rsp),%xmm2
+vpmuludq 304(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm5,%xmm5
+vmovdqa 368(%rsp),%xmm2
+vpmuludq 288(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm9,%xmm9
+vmovdqa 400(%rsp),%xmm2
+vpmuludq 336(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm11,%xmm11
 vpsrlq $26,%xmm1,%xmm2
-paddq %xmm2,%xmm3
-pand m26(%rip),%xmm1
+vpaddq %xmm2,%xmm3,%xmm3
+vpand m26(%rip),%xmm1,%xmm1
 vpsrlq $25,%xmm10,%xmm2
-paddq %xmm2,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $25,%xmm3,%xmm2
-paddq %xmm2,%xmm5
-pand m25(%rip),%xmm3
+vpaddq %xmm2,%xmm5,%xmm5
+vpand m25(%rip),%xmm3,%xmm3
 vpsrlq $26,%xmm11,%xmm2
-paddq %xmm2,%xmm12
-pand m26(%rip),%xmm11
+vpaddq %xmm2,%xmm12,%xmm12
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm5,%xmm2
-paddq %xmm2,%xmm7
-pand m26(%rip),%xmm5
+vpaddq %xmm2,%xmm7,%xmm7
+vpand m26(%rip),%xmm5,%xmm5
 vpsrlq $25,%xmm12,%xmm2
-paddq %xmm2,%xmm13
-pand m25(%rip),%xmm12
+vpaddq %xmm2,%xmm13,%xmm13
+vpand m25(%rip),%xmm12,%xmm12
 vpsrlq $25,%xmm7,%xmm2
-paddq %xmm2,%xmm9
-pand m25(%rip),%xmm7
+vpaddq %xmm2,%xmm9,%xmm9
+vpand m25(%rip),%xmm7,%xmm7
 vpsrlq $26,%xmm13,%xmm2
-paddq %xmm2,%xmm0
-pand m26(%rip),%xmm13
+vpaddq %xmm2,%xmm0,%xmm0
+vpand m26(%rip),%xmm13,%xmm13
 vpsrlq $26,%xmm9,%xmm2
-paddq %xmm2,%xmm10
-pand m26(%rip),%xmm9
+vpaddq %xmm2,%xmm10,%xmm10
+vpand m26(%rip),%xmm9,%xmm9
 vpsrlq $25,%xmm0,%xmm2
 vpsllq $4,%xmm2,%xmm4
-paddq %xmm2,%xmm1
-psllq $1,%xmm2
-paddq %xmm2,%xmm4
-paddq %xmm4,%xmm1
-pand m25(%rip),%xmm0
+vpaddq %xmm2,%xmm1,%xmm1
+vpsllq $1,%xmm2,%xmm2
+vpaddq %xmm2,%xmm4,%xmm4
+vpaddq %xmm4,%xmm1,%xmm1
+vpand m25(%rip),%xmm0,%xmm0
 vpsrlq $25,%xmm10,%xmm2
-paddq %xmm2,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm2,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $26,%xmm1,%xmm2
-paddq %xmm2,%xmm3
-pand m26(%rip),%xmm1
+vpaddq %xmm2,%xmm3,%xmm3
+vpand m26(%rip),%xmm1,%xmm1
 vpunpckhqdq %xmm3,%xmm1,%xmm2
 vpunpcklqdq %xmm3,%xmm1,%xmm1
-movdqa %xmm1,176(%rsp)
+vmovdqa %xmm1,176(%rsp)
 vpaddq subc0(%rip),%xmm2,%xmm3
-psubq %xmm1,%xmm3
+vpsubq %xmm1,%xmm3,%xmm3
 vpunpckhqdq %xmm3,%xmm2,%xmm1
 vpunpcklqdq %xmm3,%xmm2,%xmm2
-movdqa %xmm2,192(%rsp)
-movdqa %xmm1,224(%rsp)
-psllq $1,%xmm1
-movdqa %xmm1,240(%rsp)
-pmuludq v121666_121666(%rip),%xmm3
-movdqa 80(%rsp),%xmm1
+vmovdqa %xmm2,192(%rsp)
+vmovdqa %xmm1,224(%rsp)
+vpsllq $1,%xmm1,%xmm1
+vmovdqa %xmm1,240(%rsp)
+vpmuludq v121666_121666(%rip),%xmm3,%xmm3
+vmovdqa 80(%rsp),%xmm1
 vpunpcklqdq %xmm1,%xmm3,%xmm2
 vpunpckhqdq %xmm1,%xmm3,%xmm1
 vpunpckhqdq %xmm7,%xmm5,%xmm3
 vpunpcklqdq %xmm7,%xmm5,%xmm4
-movdqa %xmm4,256(%rsp)
+vmovdqa %xmm4,256(%rsp)
 vpaddq subc2(%rip),%xmm3,%xmm5
-psubq %xmm4,%xmm5
+vpsubq %xmm4,%xmm5,%xmm5
 vpunpckhqdq %xmm5,%xmm3,%xmm4
 vpunpcklqdq %xmm5,%xmm3,%xmm3
-movdqa %xmm3,272(%rsp)
-movdqa %xmm4,288(%rsp)
-psllq $1,%xmm4
-movdqa %xmm4,304(%rsp)
-pmuludq v121666_121666(%rip),%xmm5
-movdqa 96(%rsp),%xmm3
+vmovdqa %xmm3,272(%rsp)
+vmovdqa %xmm4,288(%rsp)
+vpsllq $1,%xmm4,%xmm4
+vmovdqa %xmm4,304(%rsp)
+vpmuludq v121666_121666(%rip),%xmm5,%xmm5
+vmovdqa 96(%rsp),%xmm3
 vpunpcklqdq %xmm3,%xmm5,%xmm4
 vpunpckhqdq %xmm3,%xmm5,%xmm3
 vpunpckhqdq %xmm10,%xmm9,%xmm5
 vpunpcklqdq %xmm10,%xmm9,%xmm6
-movdqa %xmm6,320(%rsp)
+vmovdqa %xmm6,320(%rsp)
 vpaddq subc2(%rip),%xmm5,%xmm7
-psubq %xmm6,%xmm7
+vpsubq %xmm6,%xmm7,%xmm7
 vpunpckhqdq %xmm7,%xmm5,%xmm6
 vpunpcklqdq %xmm7,%xmm5,%xmm5
-movdqa %xmm5,336(%rsp)
-movdqa %xmm6,352(%rsp)
-psllq $1,%xmm6
-movdqa %xmm6,368(%rsp)
-pmuludq v121666_121666(%rip),%xmm7
-movdqa 112(%rsp),%xmm5
+vmovdqa %xmm5,336(%rsp)
+vmovdqa %xmm6,352(%rsp)
+vpsllq $1,%xmm6,%xmm6
+vmovdqa %xmm6,368(%rsp)
+vpmuludq v121666_121666(%rip),%xmm7,%xmm7
+vmovdqa 112(%rsp),%xmm5
 vpunpcklqdq %xmm5,%xmm7,%xmm6
 vpunpckhqdq %xmm5,%xmm7,%xmm5
 vpunpckhqdq %xmm12,%xmm11,%xmm7
 vpunpcklqdq %xmm12,%xmm11,%xmm8
-movdqa %xmm8,384(%rsp)
+vmovdqa %xmm8,384(%rsp)
 vpaddq subc2(%rip),%xmm7,%xmm9
-psubq %xmm8,%xmm9
+vpsubq %xmm8,%xmm9,%xmm9
 vpunpckhqdq %xmm9,%xmm7,%xmm8
 vpunpcklqdq %xmm9,%xmm7,%xmm7
-movdqa %xmm7,400(%rsp)
-movdqa %xmm8,416(%rsp)
-psllq $1,%xmm8
-movdqa %xmm8,432(%rsp)
-pmuludq v121666_121666(%rip),%xmm9
-movdqa 160(%rsp),%xmm7
+vmovdqa %xmm7,400(%rsp)
+vmovdqa %xmm8,416(%rsp)
+vpsllq $1,%xmm8,%xmm8
+vmovdqa %xmm8,432(%rsp)
+vpmuludq v121666_121666(%rip),%xmm9,%xmm9
+vmovdqa 160(%rsp),%xmm7
 vpunpcklqdq %xmm7,%xmm9,%xmm8
 vpunpckhqdq %xmm7,%xmm9,%xmm7
 vpunpckhqdq %xmm0,%xmm13,%xmm9
 vpunpcklqdq %xmm0,%xmm13,%xmm0
-movdqa %xmm0,160(%rsp)
+vmovdqa %xmm0,160(%rsp)
 vpaddq subc2(%rip),%xmm9,%xmm10
-psubq %xmm0,%xmm10
+vpsubq %xmm0,%xmm10,%xmm10
 vpunpckhqdq %xmm10,%xmm9,%xmm0
 vpunpcklqdq %xmm10,%xmm9,%xmm9
-movdqa %xmm9,448(%rsp)
-movdqa %xmm0,464(%rsp)
-psllq $1,%xmm0
-movdqa %xmm0,480(%rsp)
-pmuludq v121666_121666(%rip),%xmm10
-movdqa 208(%rsp),%xmm0
+vmovdqa %xmm9,448(%rsp)
+vmovdqa %xmm0,464(%rsp)
+vpsllq $1,%xmm0,%xmm0
+vmovdqa %xmm0,480(%rsp)
+vpmuludq v121666_121666(%rip),%xmm10,%xmm10
+vmovdqa 208(%rsp),%xmm0
 vpunpcklqdq %xmm0,%xmm10,%xmm9
 vpunpckhqdq %xmm0,%xmm10,%xmm0
 vpsrlq $26,%xmm2,%xmm10
-paddq %xmm10,%xmm1
-pand m26(%rip),%xmm2
+vpaddq %xmm10,%xmm1,%xmm1
+vpand m26(%rip),%xmm2,%xmm2
 vpsrlq $25,%xmm5,%xmm10
-paddq %xmm10,%xmm8
-pand m25(%rip),%xmm5
+vpaddq %xmm10,%xmm8,%xmm8
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $25,%xmm1,%xmm10
-paddq %xmm10,%xmm4
-pand m25(%rip),%xmm1
+vpaddq %xmm10,%xmm4,%xmm4
+vpand m25(%rip),%xmm1,%xmm1
 vpsrlq $26,%xmm8,%xmm10
-paddq %xmm10,%xmm7
-pand m26(%rip),%xmm8
+vpaddq %xmm10,%xmm7,%xmm7
+vpand m26(%rip),%xmm8,%xmm8
 vpsrlq $26,%xmm4,%xmm10
-paddq %xmm10,%xmm3
-pand m26(%rip),%xmm4
+vpaddq %xmm10,%xmm3,%xmm3
+vpand m26(%rip),%xmm4,%xmm4
 vpsrlq $25,%xmm7,%xmm10
-paddq %xmm10,%xmm9
-pand m25(%rip),%xmm7
+vpaddq %xmm10,%xmm9,%xmm9
+vpand m25(%rip),%xmm7,%xmm7
 vpsrlq $25,%xmm3,%xmm10
-paddq %xmm10,%xmm6
-pand m25(%rip),%xmm3
+vpaddq %xmm10,%xmm6,%xmm6
+vpand m25(%rip),%xmm3,%xmm3
 vpsrlq $26,%xmm9,%xmm10
-paddq %xmm10,%xmm0
-pand m26(%rip),%xmm9
+vpaddq %xmm10,%xmm0,%xmm0
+vpand m26(%rip),%xmm9,%xmm9
 vpsrlq $26,%xmm6,%xmm10
-paddq %xmm10,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm10,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpsrlq $25,%xmm0,%xmm10
 vpsllq $4,%xmm10,%xmm11
-paddq %xmm10,%xmm2
-psllq $1,%xmm10
-paddq %xmm10,%xmm11
-paddq %xmm11,%xmm2
-pand m25(%rip),%xmm0
+vpaddq %xmm10,%xmm2,%xmm2
+vpsllq $1,%xmm10,%xmm10
+vpaddq %xmm10,%xmm11,%xmm11
+vpaddq %xmm11,%xmm2,%xmm2
+vpand m25(%rip),%xmm0,%xmm0
 vpsrlq $25,%xmm5,%xmm10
-paddq %xmm10,%xmm8
-pand m25(%rip),%xmm5
+vpaddq %xmm10,%xmm8,%xmm8
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm2,%xmm10
-paddq %xmm10,%xmm1
-pand m26(%rip),%xmm2
+vpaddq %xmm10,%xmm1,%xmm1
+vpand m26(%rip),%xmm2,%xmm2
 vpunpckhqdq %xmm1,%xmm2,%xmm10
-movdqa %xmm10,80(%rsp)
+vmovdqa %xmm10,80(%rsp)
 vpunpcklqdq %xmm1,%xmm2,%xmm1
 vpunpckhqdq %xmm3,%xmm4,%xmm2
-movdqa %xmm2,96(%rsp)
+vmovdqa %xmm2,96(%rsp)
 vpunpcklqdq %xmm3,%xmm4,%xmm2
 vpunpckhqdq %xmm5,%xmm6,%xmm3
-movdqa %xmm3,112(%rsp)
+vmovdqa %xmm3,112(%rsp)
 vpunpcklqdq %xmm5,%xmm6,%xmm3
 vpunpckhqdq %xmm7,%xmm8,%xmm4
-movdqa %xmm4,128(%rsp)
+vmovdqa %xmm4,128(%rsp)
 vpunpcklqdq %xmm7,%xmm8,%xmm4
 vpunpckhqdq %xmm0,%xmm9,%xmm5
-movdqa %xmm5,144(%rsp)
+vmovdqa %xmm5,144(%rsp)
 vpunpcklqdq %xmm0,%xmm9,%xmm0
-movdqa 176(%rsp),%xmm5
-paddq %xmm5,%xmm1
+vmovdqa 176(%rsp),%xmm5
+vpaddq %xmm5,%xmm1,%xmm1
 vpunpcklqdq %xmm1,%xmm5,%xmm6
 vpunpckhqdq %xmm1,%xmm5,%xmm1
 vpmuludq 224(%rsp),%xmm6,%xmm5
 vpmuludq 192(%rsp),%xmm1,%xmm7
-paddq %xmm7,%xmm5
+vpaddq %xmm7,%xmm5,%xmm5
 vpmuludq 272(%rsp),%xmm6,%xmm7
 vpmuludq 240(%rsp),%xmm1,%xmm8
-paddq %xmm8,%xmm7
+vpaddq %xmm8,%xmm7,%xmm7
 vpmuludq 288(%rsp),%xmm6,%xmm8
 vpmuludq 272(%rsp),%xmm1,%xmm9
-paddq %xmm9,%xmm8
+vpaddq %xmm9,%xmm8,%xmm8
 vpmuludq 336(%rsp),%xmm6,%xmm9
 vpmuludq 304(%rsp),%xmm1,%xmm10
-paddq %xmm10,%xmm9
+vpaddq %xmm10,%xmm9,%xmm9
 vpmuludq 352(%rsp),%xmm6,%xmm10
 vpmuludq 336(%rsp),%xmm1,%xmm11
-paddq %xmm11,%xmm10
+vpaddq %xmm11,%xmm10,%xmm10
 vpmuludq 400(%rsp),%xmm6,%xmm11
 vpmuludq 368(%rsp),%xmm1,%xmm12
-paddq %xmm12,%xmm11
+vpaddq %xmm12,%xmm11,%xmm11
 vpmuludq 416(%rsp),%xmm6,%xmm12
 vpmuludq 400(%rsp),%xmm1,%xmm13
-paddq %xmm13,%xmm12
+vpaddq %xmm13,%xmm12,%xmm12
 vpmuludq 448(%rsp),%xmm6,%xmm13
 vpmuludq 432(%rsp),%xmm1,%xmm14
-paddq %xmm14,%xmm13
+vpaddq %xmm14,%xmm13,%xmm13
 vpmuludq 464(%rsp),%xmm6,%xmm14
 vpmuludq 448(%rsp),%xmm1,%xmm15
-paddq %xmm15,%xmm14
+vpaddq %xmm15,%xmm14,%xmm14
 vpmuludq 192(%rsp),%xmm6,%xmm6
-pmuludq v19_19(%rip),%xmm1
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 480(%rsp),%xmm1,%xmm1
-paddq %xmm1,%xmm6
-movdqa 256(%rsp),%xmm1
-paddq %xmm1,%xmm2
+vpaddq %xmm1,%xmm6,%xmm6
+vmovdqa 256(%rsp),%xmm1
+vpaddq %xmm1,%xmm2,%xmm2
 vpunpcklqdq %xmm2,%xmm1,%xmm15
 vpunpckhqdq %xmm2,%xmm1,%xmm1
 vpmuludq 192(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq 224(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 272(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq 288(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 336(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 352(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 400(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 416(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm15
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm15,%xmm15
 vpmuludq 448(%rsp),%xmm15,%xmm2
-paddq %xmm2,%xmm6
-pmuludq 464(%rsp),%xmm15
-paddq %xmm15,%xmm5
+vpaddq %xmm2,%xmm6,%xmm6
+vpmuludq 464(%rsp),%xmm15,%xmm15
+vpaddq %xmm15,%xmm5,%xmm5
 vpmuludq 192(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 240(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq 272(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 304(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 336(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 368(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 400(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 432(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm6
+vpaddq %xmm2,%xmm6,%xmm6
 vpmuludq 448(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm5
-pmuludq 480(%rsp),%xmm1
-paddq %xmm1,%xmm7
-movdqa 320(%rsp),%xmm1
-paddq %xmm1,%xmm3
+vpaddq %xmm2,%xmm5,%xmm5
+vpmuludq 480(%rsp),%xmm1,%xmm1
+vpaddq %xmm1,%xmm7,%xmm7
+vmovdqa 320(%rsp),%xmm1
+vpaddq %xmm1,%xmm3,%xmm3
 vpunpcklqdq %xmm3,%xmm1,%xmm2
 vpunpckhqdq %xmm3,%xmm1,%xmm1
 vpmuludq 192(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm9
+vpaddq %xmm3,%xmm9,%xmm9
 vpmuludq 224(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm10
+vpaddq %xmm3,%xmm10,%xmm10
 vpmuludq 272(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 288(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm12
+vpaddq %xmm3,%xmm12,%xmm12
 vpmuludq 336(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 352(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm14
-pmuludq v19_19(%rip),%xmm2
+vpaddq %xmm3,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm2,%xmm2
 vpmuludq 400(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 416(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 448(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm7
-pmuludq 464(%rsp),%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm3,%xmm7,%xmm7
+vpmuludq 464(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 192(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 240(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm11
+vpaddq %xmm2,%xmm11,%xmm11
 vpmuludq 272(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 304(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 336(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 368(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm6
+vpaddq %xmm2,%xmm6,%xmm6
 vpmuludq 400(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq 432(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq 448(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm8
-pmuludq 480(%rsp),%xmm1
-paddq %xmm1,%xmm9
-movdqa 384(%rsp),%xmm1
-paddq %xmm1,%xmm4
+vpaddq %xmm2,%xmm8,%xmm8
+vpmuludq 480(%rsp),%xmm1,%xmm1
+vpaddq %xmm1,%xmm9,%xmm9
+vmovdqa 384(%rsp),%xmm1
+vpaddq %xmm1,%xmm4,%xmm4
 vpunpcklqdq %xmm4,%xmm1,%xmm2
 vpunpckhqdq %xmm4,%xmm1,%xmm1
 vpmuludq 192(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm11
+vpaddq %xmm3,%xmm11,%xmm11
 vpmuludq 224(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm12
+vpaddq %xmm3,%xmm12,%xmm12
 vpmuludq 272(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm13
+vpaddq %xmm3,%xmm13,%xmm13
 vpmuludq 288(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm14
-pmuludq v19_19(%rip),%xmm2
+vpaddq %xmm3,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm2,%xmm2
 vpmuludq 336(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm6
+vpaddq %xmm3,%xmm6,%xmm6
 vpmuludq 352(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm5
+vpaddq %xmm3,%xmm5,%xmm5
 vpmuludq 400(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm7
+vpaddq %xmm3,%xmm7,%xmm7
 vpmuludq 416(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm8
+vpaddq %xmm3,%xmm8,%xmm8
 vpmuludq 448(%rsp),%xmm2,%xmm3
-paddq %xmm3,%xmm9
-pmuludq 464(%rsp),%xmm2
-paddq %xmm2,%xmm10
+vpaddq %xmm3,%xmm9,%xmm9
+vpmuludq 464(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm10,%xmm10
 vpmuludq 192(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 240(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm13
+vpaddq %xmm2,%xmm13,%xmm13
 vpmuludq 272(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm14
-pmuludq v19_19(%rip),%xmm1
+vpaddq %xmm2,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm1,%xmm1
 vpmuludq 304(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm6
+vpaddq %xmm2,%xmm6,%xmm6
 vpmuludq 336(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm5
+vpaddq %xmm2,%xmm5,%xmm5
 vpmuludq 368(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm7
+vpaddq %xmm2,%xmm7,%xmm7
 vpmuludq 400(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm8
+vpaddq %xmm2,%xmm8,%xmm8
 vpmuludq 432(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm9
+vpaddq %xmm2,%xmm9,%xmm9
 vpmuludq 448(%rsp),%xmm1,%xmm2
-paddq %xmm2,%xmm10
-pmuludq 480(%rsp),%xmm1
-paddq %xmm1,%xmm11
-movdqa 160(%rsp),%xmm1
-paddq %xmm1,%xmm0
+vpaddq %xmm2,%xmm10,%xmm10
+vpmuludq 480(%rsp),%xmm1,%xmm1
+vpaddq %xmm1,%xmm11,%xmm11
+vmovdqa 160(%rsp),%xmm1
+vpaddq %xmm1,%xmm0,%xmm0
 vpunpcklqdq %xmm0,%xmm1,%xmm2
 vpunpckhqdq %xmm0,%xmm1,%xmm0
 vpmuludq 192(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm13
+vpaddq %xmm1,%xmm13,%xmm13
 vpmuludq 224(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm14
-pmuludq v19_19(%rip),%xmm2
+vpaddq %xmm1,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm2,%xmm2
 vpmuludq 272(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm6
+vpaddq %xmm1,%xmm6,%xmm6
 vpmuludq 288(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm5
+vpaddq %xmm1,%xmm5,%xmm5
 vpmuludq 336(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm7
+vpaddq %xmm1,%xmm7,%xmm7
 vpmuludq 352(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm8
+vpaddq %xmm1,%xmm8,%xmm8
 vpmuludq 400(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm9
+vpaddq %xmm1,%xmm9,%xmm9
 vpmuludq 416(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm10
+vpaddq %xmm1,%xmm10,%xmm10
 vpmuludq 448(%rsp),%xmm2,%xmm1
-paddq %xmm1,%xmm11
-pmuludq 464(%rsp),%xmm2
-paddq %xmm2,%xmm12
+vpaddq %xmm1,%xmm11,%xmm11
+vpmuludq 464(%rsp),%xmm2,%xmm2
+vpaddq %xmm2,%xmm12,%xmm12
 vpmuludq 192(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm14
-pmuludq v19_19(%rip),%xmm0
+vpaddq %xmm1,%xmm14,%xmm14
+vpmuludq v19_19(%rip),%xmm0,%xmm0
 vpmuludq 240(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm6
+vpaddq %xmm1,%xmm6,%xmm6
 vpmuludq 272(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm5
+vpaddq %xmm1,%xmm5,%xmm5
 vpmuludq 304(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm7
+vpaddq %xmm1,%xmm7,%xmm7
 vpmuludq 336(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm8
+vpaddq %xmm1,%xmm8,%xmm8
 vpmuludq 368(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm9
+vpaddq %xmm1,%xmm9,%xmm9
 vpmuludq 400(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm10
+vpaddq %xmm1,%xmm10,%xmm10
 vpmuludq 432(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm11
+vpaddq %xmm1,%xmm11,%xmm11
 vpmuludq 448(%rsp),%xmm0,%xmm1
-paddq %xmm1,%xmm12
-pmuludq 480(%rsp),%xmm0
-paddq %xmm0,%xmm13
+vpaddq %xmm1,%xmm12,%xmm12
+vpmuludq 480(%rsp),%xmm0,%xmm0
+vpaddq %xmm0,%xmm13,%xmm13
 vpsrlq $26,%xmm6,%xmm0
-paddq %xmm0,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm0,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpsrlq $25,%xmm10,%xmm0
-paddq %xmm0,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm0,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $25,%xmm5,%xmm0
-paddq %xmm0,%xmm7
-pand m25(%rip),%xmm5
+vpaddq %xmm0,%xmm7,%xmm7
+vpand m25(%rip),%xmm5,%xmm5
 vpsrlq $26,%xmm11,%xmm0
-paddq %xmm0,%xmm12
-pand m26(%rip),%xmm11
+vpaddq %xmm0,%xmm12,%xmm12
+vpand m26(%rip),%xmm11,%xmm11
 vpsrlq $26,%xmm7,%xmm0
-paddq %xmm0,%xmm8
-pand m26(%rip),%xmm7
+vpaddq %xmm0,%xmm8,%xmm8
+vpand m26(%rip),%xmm7,%xmm7
 vpsrlq $25,%xmm12,%xmm0
-paddq %xmm0,%xmm13
-pand m25(%rip),%xmm12
+vpaddq %xmm0,%xmm13,%xmm13
+vpand m25(%rip),%xmm12,%xmm12
 vpsrlq $25,%xmm8,%xmm0
-paddq %xmm0,%xmm9
-pand m25(%rip),%xmm8
+vpaddq %xmm0,%xmm9,%xmm9
+vpand m25(%rip),%xmm8,%xmm8
 vpsrlq $26,%xmm13,%xmm0
-paddq %xmm0,%xmm14
-pand m26(%rip),%xmm13
+vpaddq %xmm0,%xmm14,%xmm14
+vpand m26(%rip),%xmm13,%xmm13
 vpsrlq $26,%xmm9,%xmm0
-paddq %xmm0,%xmm10
-pand m26(%rip),%xmm9
+vpaddq %xmm0,%xmm10,%xmm10
+vpand m26(%rip),%xmm9,%xmm9
 vpsrlq $25,%xmm14,%xmm0
 vpsllq $4,%xmm0,%xmm1
-paddq %xmm0,%xmm6
-psllq $1,%xmm0
-paddq %xmm0,%xmm1
-paddq %xmm1,%xmm6
-pand m25(%rip),%xmm14
+vpaddq %xmm0,%xmm6,%xmm6
+vpsllq $1,%xmm0,%xmm0
+vpaddq %xmm0,%xmm1,%xmm1
+vpaddq %xmm1,%xmm6,%xmm6
+vpand m25(%rip),%xmm14,%xmm14
 vpsrlq $25,%xmm10,%xmm0
-paddq %xmm0,%xmm11
-pand m25(%rip),%xmm10
+vpaddq %xmm0,%xmm11,%xmm11
+vpand m25(%rip),%xmm10,%xmm10
 vpsrlq $26,%xmm6,%xmm0
-paddq %xmm0,%xmm5
-pand m26(%rip),%xmm6
+vpaddq %xmm0,%xmm5,%xmm5
+vpand m26(%rip),%xmm6,%xmm6
 vpunpckhqdq %xmm5,%xmm6,%xmm1
 vpunpcklqdq %xmm5,%xmm6,%xmm0
 vpunpckhqdq %xmm8,%xmm7,%xmm3
@@ -1268,16 +1276,16 @@ vpunpckhqdq %xmm14,%xmm13,%xmm9
 vpunpcklqdq %xmm14,%xmm13,%xmm8
 cmp  $0,%rdx
 jne ._ladder_base_loop
-movdqu   %xmm1,80(%rdi)
-movdqu   %xmm0,0(%rdi)
-movdqu   %xmm3,96(%rdi)
-movdqu   %xmm2,16(%rdi)
-movdqu   %xmm5,112(%rdi)
-movdqu   %xmm4,32(%rdi)
-movdqu   %xmm7,128(%rdi)
-movdqu   %xmm6,48(%rdi)
-movdqu   %xmm9,144(%rdi)
-movdqu   %xmm8,64(%rdi)
+vmovdqu %xmm1,80(%rdi)
+vmovdqu %xmm0,0(%rdi)
+vmovdqu %xmm3,96(%rdi)
+vmovdqu %xmm2,16(%rdi)
+vmovdqu %xmm5,112(%rdi)
+vmovdqu %xmm4,32(%rdi)
+vmovdqu %xmm7,128(%rdi)
+vmovdqu %xmm6,48(%rdi)
+vmovdqu %xmm9,144(%rdi)
+vmovdqu %xmm8,64(%rdi)
 movq 1536(%rsp),%r11
 movq 1544(%rsp),%r12
 movq 1552(%rsp),%r13
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h
index 09b5fe7..a69be13 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base.h
@@ -14,5 +14,5 @@ extern void ladder_base(fe *, const unsigned char *);
 }
 #endif
 
-#endif //ifndef ladder_base_H
+#endif /* ifndef ladder_base_H */
 
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h
index af5fa56..304546a 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_base_namespace.h
@@ -4,5 +4,5 @@
 #define  ladder_base  crypto_scalarmult_curve25519_sandy2x_ladder_base
 #define _ladder_base _crypto_scalarmult_curve25519_sandy2x_ladder_base
 
-#endif //ifndef ladder_base_namespace_H
+#endif /* ifndef ladder_base_namespace_H */
 
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h
index 8481ff4..6637074 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/sandy2x/ladder_namespace.h
@@ -4,5 +4,5 @@
 #define  ladder  crypto_scalarmult_curve25519_sandy2x_ladder
 #define _ladder _crypto_scalarmult_curve25519_sandy2x_ladder
 
-#endif //ifndef ladder_namespace_H
+#endif /* ifndef ladder_namespace_H */
 
diff --git a/libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c b/libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c
index e9a44a9..2d3ffc0 100644
--- a/libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c
+++ b/libsodium/src/libsodium/crypto_scalarmult/curve25519/scalarmult_curve25519.c
@@ -1,30 +1,25 @@
 
 #include "crypto_scalarmult_curve25519.h"
+#include "private/implementations.h"
 #include "scalarmult_curve25519.h"
 #include "runtime.h"
 
 #ifdef HAVE_AVX_ASM
 # include "sandy2x/curve25519_sandy2x.h"
 #endif
-#ifdef HAVE_TI_MODE
-# include "donna_c64/curve25519_donna_c64.h"
-static const crypto_scalarmult_curve25519_implementation *implementation =
-    &crypto_scalarmult_curve25519_donna_c64_implementation;
-#else
-# include "ref10/curve25519_ref10.h"
+#include "ref10/x25519_ref10.h"
 static const crypto_scalarmult_curve25519_implementation *implementation =
     &crypto_scalarmult_curve25519_ref10_implementation;
-#endif
 
 int
 crypto_scalarmult_curve25519(unsigned char *q, const unsigned char *n,
                              const unsigned char *p)
 {
-    size_t        i;
-    unsigned char d = 0;
+    size_t                 i;
+    volatile unsigned char d = 0;
 
     if (implementation->mult(q, n, p) != 0) {
-        return -1;
+        return -1; /* LCOV_EXCL_LINE */
     }
     for (i = 0; i < crypto_scalarmult_curve25519_BYTES; i++) {
         d |= q[i];
@@ -53,11 +48,8 @@ crypto_scalarmult_curve25519_scalarbytes(void)
 int
 _crypto_scalarmult_curve25519_pick_best_implementation(void)
 {
-#ifdef HAVE_TI_MODE
-    implementation = &crypto_scalarmult_curve25519_donna_c64_implementation;
-#else
     implementation = &crypto_scalarmult_curve25519_ref10_implementation;
-#endif
+
 #ifdef HAVE_AVX_ASM
     if (sodium_runtime_has_avx()) {
         implementation = &crypto_scalarmult_curve25519_sandy2x_implementation;
diff --git a/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c b/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c
index 456f9f0..45f678e 100644
--- a/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c
+++ b/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox.c
@@ -1,5 +1,6 @@
 
 #include "crypto_secretbox.h"
+#include "randombytes.h"
 
 size_t
 crypto_secretbox_keybytes(void)
@@ -31,6 +32,12 @@ crypto_secretbox_macbytes(void)
     return crypto_secretbox_MACBYTES;
 }
 
+size_t
+crypto_secretbox_messagebytes_max(void)
+{
+    return crypto_secretbox_MESSAGEBYTES_MAX;
+}
+
 const char *
 crypto_secretbox_primitive(void)
 {
@@ -52,3 +59,9 @@ crypto_secretbox_open(unsigned char *m, const unsigned char *c,
 {
     return crypto_secretbox_xsalsa20poly1305_open(m, c, clen, n, k);
 }
+
+void
+crypto_secretbox_keygen(unsigned char k[crypto_secretbox_KEYBYTES])
+{
+    randombytes_buf(k, crypto_secretbox_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c b/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c
index 7802b00..b120384 100644
--- a/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c
+++ b/libsodium/src/libsodium/crypto_secretbox/crypto_secretbox_easy.c
@@ -5,16 +5,14 @@
 #include <stdlib.h>
 #include <string.h>
 
+#include "core.h"
 #include "crypto_core_hsalsa20.h"
 #include "crypto_onetimeauth_poly1305.h"
 #include "crypto_secretbox.h"
 #include "crypto_stream_salsa20.h"
+#include "private/common.h"
 #include "utils.h"
 
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
 int
 crypto_secretbox_detached(unsigned char *c, unsigned char *mac,
                           const unsigned char *m,
@@ -27,17 +25,17 @@ crypto_secretbox_detached(unsigned char *c, unsigned char *mac,
     unsigned long long                i;
     unsigned long long                mlen0;
 
-    crypto_core_hsalsa20(subkey, n, k, sigma);
+    crypto_core_hsalsa20(subkey, n, k, NULL);
 
-    if (((uintptr_t) c >= (uintptr_t) m &&
+    if (((uintptr_t) c > (uintptr_t) m &&
          (uintptr_t) c - (uintptr_t) m < mlen) ||
-        ((uintptr_t) m >= (uintptr_t) c &&
-         (uintptr_t) m - (uintptr_t) c < mlen)) {
+        ((uintptr_t) m > (uintptr_t) c &&
+         (uintptr_t) m - (uintptr_t) c < mlen)) { /* LCOV_EXCL_LINE */
         memmove(c, m, mlen);
         m = c;
     }
     memset(block0, 0U, crypto_secretbox_ZEROBYTES);
-    (void) sizeof(int[64U >= crypto_secretbox_ZEROBYTES ? 1 : -1]);
+    COMPILER_ASSERT(64U >= crypto_secretbox_ZEROBYTES);
     mlen0 = mlen;
     if (mlen0 > 64U - crypto_secretbox_ZEROBYTES) {
         mlen0 = 64U - crypto_secretbox_ZEROBYTES;
@@ -48,8 +46,8 @@ crypto_secretbox_detached(unsigned char *c, unsigned char *mac,
     crypto_stream_salsa20_xor(block0, block0,
                               mlen0 + crypto_secretbox_ZEROBYTES,
                               n + 16, subkey);
-    (void) sizeof(int[crypto_secretbox_ZEROBYTES >=
-                      crypto_onetimeauth_poly1305_KEYBYTES ? 1 : -1]);
+    COMPILER_ASSERT(crypto_secretbox_ZEROBYTES >=
+                    crypto_onetimeauth_poly1305_KEYBYTES);
     crypto_onetimeauth_poly1305_init(&state, block0);
 
     for (i = 0U; i < mlen0; i++) {
@@ -74,8 +72,8 @@ crypto_secretbox_easy(unsigned char *c, const unsigned char *m,
                       unsigned long long mlen, const unsigned char *n,
                       const unsigned char *k)
 {
-    if (mlen > SIZE_MAX - crypto_secretbox_MACBYTES) {
-        return -1;
+    if (mlen > crypto_secretbox_MESSAGEBYTES_MAX) {
+        sodium_misuse();
     }
     return crypto_secretbox_detached(c + crypto_secretbox_MACBYTES,
                                      c, m, mlen, n, k);
@@ -93,17 +91,20 @@ crypto_secretbox_open_detached(unsigned char *m, const unsigned char *c,
     unsigned long long i;
     unsigned long long mlen0;
 
-    crypto_core_hsalsa20(subkey, n, k, sigma);
+    crypto_core_hsalsa20(subkey, n, k, NULL);
     crypto_stream_salsa20(block0, crypto_stream_salsa20_KEYBYTES,
                           n + 16, subkey);
     if (crypto_onetimeauth_poly1305_verify(mac, c, clen, block0) != 0) {
         sodium_memzero(subkey, sizeof subkey);
         return -1;
     }
+    if (m == NULL) {
+        return 0;
+    }
     if (((uintptr_t) c >= (uintptr_t) m &&
          (uintptr_t) c - (uintptr_t) m < clen) ||
         ((uintptr_t) m >= (uintptr_t) c &&
-         (uintptr_t) m - (uintptr_t) c < clen)) {
+         (uintptr_t) m - (uintptr_t) c < clen)) { /* LCOV_EXCL_LINE */
         memmove(m, c, clen);
         c = m;
     }
diff --git a/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c b/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
deleted file mode 100644
index 123b90b..0000000
--- a/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/ref/box_xsalsa20poly1305.c
+++ /dev/null
@@ -1,35 +0,0 @@
-#include "crypto_onetimeauth_poly1305.h"
-#include "crypto_secretbox_xsalsa20poly1305.h"
-#include "crypto_stream_xsalsa20.h"
-
-int crypto_secretbox_xsalsa20poly1305(
-  unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  int i;
-  if (mlen < 32) return -1;
-  crypto_stream_xsalsa20_xor(c,m,mlen,n,k);
-  crypto_onetimeauth_poly1305(c + 16,c + 32,mlen - 32,c);
-  for (i = 0;i < 16;++i) c[i] = 0;
-  return 0;
-}
-
-int crypto_secretbox_xsalsa20poly1305_open(
-  unsigned char *m,
-  const unsigned char *c,unsigned long long clen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  int i;
-  unsigned char subkey[32];
-  if (clen < 32) return -1;
-  crypto_stream_xsalsa20(subkey,32,n,k);
-  if (crypto_onetimeauth_poly1305_verify(c + 16,c + 32,clen - 32,subkey) != 0) return -1;
-  crypto_stream_xsalsa20_xor(m,c,clen,n,k);
-  for (i = 0;i < 32;++i) m[i] = 0;
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c b/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
deleted file mode 100644
index 3ab68b1..0000000
--- a/libsodium/src/libsodium/crypto_secretbox/xsalsa20poly1305/secretbox_xsalsa20poly1305_api.c
+++ /dev/null
@@ -1,26 +0,0 @@
-#include "crypto_secretbox_xsalsa20poly1305.h"
-
-size_t
-crypto_secretbox_xsalsa20poly1305_keybytes(void) {
-    return crypto_secretbox_xsalsa20poly1305_KEYBYTES;
-}
-
-size_t
-crypto_secretbox_xsalsa20poly1305_noncebytes(void) {
-    return crypto_secretbox_xsalsa20poly1305_NONCEBYTES;
-}
-
-size_t
-crypto_secretbox_xsalsa20poly1305_zerobytes(void) {
-    return crypto_secretbox_xsalsa20poly1305_ZEROBYTES;
-}
-
-size_t
-crypto_secretbox_xsalsa20poly1305_boxzerobytes(void) {
-    return crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES;
-}
-
-size_t
-crypto_secretbox_xsalsa20poly1305_macbytes(void) {
-    return crypto_secretbox_xsalsa20poly1305_MACBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c b/libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c
index b68b58a..95f52f8 100644
--- a/libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c
+++ b/libsodium/src/libsodium/crypto_shorthash/crypto_shorthash.c
@@ -1,5 +1,6 @@
 
 #include "crypto_shorthash.h"
+#include "randombytes.h"
 
 size_t
 crypto_shorthash_bytes(void)
@@ -25,3 +26,9 @@ crypto_shorthash(unsigned char *out, const unsigned char *in,
 {
     return crypto_shorthash_siphash24(out, in, inlen, k);
 }
+
+void
+crypto_shorthash_keygen(unsigned char k[crypto_shorthash_KEYBYTES])
+{
+    randombytes_buf(k, crypto_shorthash_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c b/libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c
deleted file mode 100644
index d77f419..0000000
--- a/libsodium/src/libsodium/crypto_shorthash/siphash24/ref/shorthash_siphash24.c
+++ /dev/null
@@ -1,92 +0,0 @@
-#include "crypto_shorthash_siphash24.h"
-#include "crypto_uint64.h"
-#include "crypto_uint32.h"
-#include "crypto_uint8.h"
-
-typedef crypto_uint64 u64;
-typedef crypto_uint32 u32;
-typedef crypto_uint8   u8;
-
-#define ROTL(x,b) (u64)( ((x) << (b)) | ( (x) >> (64 - (b))) )
-
-#define U32TO8_LE(p, v)         \
-    (p)[0] = (u8)((v)      ); (p)[1] = (u8)((v) >>  8); \
-    (p)[2] = (u8)((v) >> 16); (p)[3] = (u8)((v) >> 24);
-
-#define U64TO8_LE(p, v)         \
-  U32TO8_LE((p),     (u32)((v)      ));   \
-  U32TO8_LE((p) + 4, (u32)((v) >> 32));
-
-#define U8TO64_LE(p) \
-  (((u64)((p)[0])      ) | \
-   ((u64)((p)[1]) <<  8) | \
-   ((u64)((p)[2]) << 16) | \
-   ((u64)((p)[3]) << 24) | \
-   ((u64)((p)[4]) << 32) | \
-   ((u64)((p)[5]) << 40) | \
-   ((u64)((p)[6]) << 48) | \
-   ((u64)((p)[7]) << 56))
-
-#define SIPROUND            \
-  do {              \
-    v0 += v1; v1=ROTL(v1,13); v1 ^= v0; v0=ROTL(v0,32); \
-    v2 += v3; v3=ROTL(v3,16); v3 ^= v2;     \
-    v0 += v3; v3=ROTL(v3,21); v3 ^= v0;     \
-    v2 += v1; v1=ROTL(v1,17); v1 ^= v2; v2=ROTL(v2,32); \
-  } while(0)
-
-int crypto_shorthash_siphash24(unsigned char *out, const unsigned char *in,
-                               unsigned long long inlen, const unsigned char *k)
-{
-  /* "somepseudorandomlygeneratedbytes" */
-  u64 v0 = 0x736f6d6570736575ULL;
-  u64 v1 = 0x646f72616e646f6dULL;
-  u64 v2 = 0x6c7967656e657261ULL;
-  u64 v3 = 0x7465646279746573ULL;
-  u64 b;
-  u64 k0 = U8TO64_LE( k );
-  u64 k1 = U8TO64_LE( k + 8 );
-  u64 m;
-  const u8 *end = in + inlen - ( inlen % sizeof( u64 ) );
-  const int left = inlen & 7;
-  b = ( ( u64 )inlen ) << 56;
-  v3 ^= k1;
-  v2 ^= k0;
-  v1 ^= k1;
-  v0 ^= k0;
-
-  for ( ; in != end; in += 8 )
-  {
-    m = U8TO64_LE( in );
-    v3 ^= m;
-    SIPROUND;
-    SIPROUND;
-    v0 ^= m;
-  }
-
-  switch( left )
-  {
-  case 7: b |= ( ( u64 )in[ 6] )  << 48;
-  case 6: b |= ( ( u64 )in[ 5] )  << 40;
-  case 5: b |= ( ( u64 )in[ 4] )  << 32;
-  case 4: b |= ( ( u64 )in[ 3] )  << 24;
-  case 3: b |= ( ( u64 )in[ 2] )  << 16;
-  case 2: b |= ( ( u64 )in[ 1] )  <<  8;
-  case 1: b |= ( ( u64 )in[ 0] ); break;
-  case 0: break;
-  }
-
-  v3 ^= b;
-  SIPROUND;
-  SIPROUND;
-  v0 ^= b;
-  v2 ^= 0xff;
-  SIPROUND;
-  SIPROUND;
-  SIPROUND;
-  SIPROUND;
-  b = v0 ^ v1 ^ v2  ^ v3;
-  U64TO8_LE( out, b );
-  return 0;
-}
-
diff --git a/libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24_api.c b/libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24_api.c
deleted file mode 100644
index e2cea77..0000000
--- a/libsodium/src/libsodium/crypto_shorthash/siphash24/shorthash_siphash24_api.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "crypto_shorthash_siphash24.h"
-
-size_t
-crypto_shorthash_siphash24_bytes(void) {
-    return crypto_shorthash_siphash24_BYTES;
-}
-
-size_t
-crypto_shorthash_siphash24_keybytes(void) {
-    return crypto_shorthash_siphash24_KEYBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/crypto_sign.c b/libsodium/src/libsodium/crypto_sign/crypto_sign.c
index b5508fb..d723ff8 100644
--- a/libsodium/src/libsodium/crypto_sign/crypto_sign.c
+++ b/libsodium/src/libsodium/crypto_sign/crypto_sign.c
@@ -1,6 +1,12 @@
 
 #include "crypto_sign.h"
 
+size_t
+crypto_sign_statebytes(void)
+{
+    return sizeof(crypto_sign_state);
+}
+
 size_t
 crypto_sign_bytes(void)
 {
@@ -25,6 +31,12 @@ crypto_sign_secretkeybytes(void)
     return crypto_sign_SECRETKEYBYTES;
 }
 
+size_t
+crypto_sign_messagebytes_max(void)
+{
+    return crypto_sign_MESSAGEBYTES_MAX;
+}
+
 const char *
 crypto_sign_primitive(void)
 {
@@ -74,3 +86,30 @@ crypto_sign_verify_detached(const unsigned char *sig, const unsigned char *m,
 {
     return crypto_sign_ed25519_verify_detached(sig, m, mlen, pk);
 }
+
+int
+crypto_sign_init(crypto_sign_state *state)
+{
+    return crypto_sign_ed25519ph_init(state);
+}
+
+int
+crypto_sign_update(crypto_sign_state *state, const unsigned char *m,
+                   unsigned long long mlen)
+{
+    return crypto_sign_ed25519ph_update(state, m, mlen);
+}
+
+int
+crypto_sign_final_create(crypto_sign_state *state, unsigned char *sig,
+                         unsigned long long *siglen_p, const unsigned char *sk)
+{
+    return crypto_sign_ed25519ph_final_create(state, sig, siglen_p, sk);
+}
+
+int
+crypto_sign_final_verify(crypto_sign_state *state, const unsigned char *sig,
+                         const unsigned char *pk)
+{
+    return crypto_sign_ed25519ph_final_verify(state, sig, pk);
+}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/description b/libsodium/src/libsodium/crypto_sign/ed25519/description
deleted file mode 100644
index 0dba8c4..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/description
+++ /dev/null
@@ -1 +0,0 @@
-EdDSA signatures using Curve25519
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/base.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/base.h
deleted file mode 100644
index 573bd8a..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/base.h
+++ /dev/null
@@ -1,1344 +0,0 @@
-{
- {
-  { 25967493,-14356035,29566456,3660896,-12694345,4014787,27544626,-11754271,-6079156,2047605 },
-  { -12545711,934262,-2722910,3049990,-727428,9406986,12720692,5043384,19500929,-15469378 },
-  { -8738181,4489570,9688441,-14785194,10184609,-12363380,29287919,11864899,-24514362,-4438546 },
- },
- {
-  { -12815894,-12976347,-21581243,11784320,-25355658,-2750717,-11717903,-3814571,-358445,-10211303 },
-  { -21703237,6903825,27185491,6451973,-29577724,-9554005,-15616551,11189268,-26829678,-5319081 },
-  { 26966642,11152617,32442495,15396054,14353839,-12752335,-3128826,-9541118,-15472047,-4166697 },
- },
- {
-  { 15636291,-9688557,24204773,-7912398,616977,-16685262,27787600,-14772189,28944400,-1550024 },
-  { 16568933,4717097,-11556148,-1102322,15682896,-11807043,16354577,-11775962,7689662,11199574 },
-  { 30464156,-5976125,-11779434,-15670865,23220365,15915852,7512774,10017326,-17749093,-9920357 },
- },
- {
-  { -17036878,13921892,10945806,-6033431,27105052,-16084379,-28926210,15006023,3284568,-6276540 },
-  { 23599295,-8306047,-11193664,-7687416,13236774,10506355,7464579,9656445,13059162,10374397 },
-  { 7798556,16710257,3033922,2874086,28997861,2835604,32406664,-3839045,-641708,-101325 },
- },
- {
-  { 10861363,11473154,27284546,1981175,-30064349,12577861,32867885,14515107,-15438304,10819380 },
-  { 4708026,6336745,20377586,9066809,-11272109,6594696,-25653668,12483688,-12668491,5581306 },
-  { 19563160,16186464,-29386857,4097519,10237984,-4348115,28542350,13850243,-23678021,-15815942 },
- },
- {
-  { -15371964,-12862754,32573250,4720197,-26436522,5875511,-19188627,-15224819,-9818940,-12085777 },
-  { -8549212,109983,15149363,2178705,22900618,4543417,3044240,-15689887,1762328,14866737 },
-  { -18199695,-15951423,-10473290,1707278,-17185920,3916101,-28236412,3959421,27914454,4383652 },
- },
- {
-  { 5153746,9909285,1723747,-2777874,30523605,5516873,19480852,5230134,-23952439,-15175766 },
-  { -30269007,-3463509,7665486,10083793,28475525,1649722,20654025,16520125,30598449,7715701 },
-  { 28881845,14381568,9657904,3680757,-20181635,7843316,-31400660,1370708,29794553,-1409300 },
- },
- {
-  { 14499471,-2729599,-33191113,-4254652,28494862,14271267,30290735,10876454,-33154098,2381726 },
-  { -7195431,-2655363,-14730155,462251,-27724326,3941372,-6236617,3696005,-32300832,15351955 },
-  { 27431194,8222322,16448760,-3907995,-18707002,11938355,-32961401,-2970515,29551813,10109425 },
- },
-},
-{
- {
-  { -13657040,-13155431,-31283750,11777098,21447386,6519384,-2378284,-1627556,10092783,-4764171 },
-  { 27939166,14210322,4677035,16277044,-22964462,-12398139,-32508754,12005538,-17810127,12803510 },
-  { 17228999,-15661624,-1233527,300140,-1224870,-11714777,30364213,-9038194,18016357,4397660 },
- },
- {
-  { -10958843,-7690207,4776341,-14954238,27850028,-15602212,-26619106,14544525,-17477504,982639 },
-  { 29253598,15796703,-2863982,-9908884,10057023,3163536,7332899,-4120128,-21047696,9934963 },
-  { 5793303,16271923,-24131614,-10116404,29188560,1206517,-14747930,4559895,-30123922,-10897950 },
- },
- {
-  { -27643952,-11493006,16282657,-11036493,28414021,-15012264,24191034,4541697,-13338309,5500568 },
-  { 12650548,-1497113,9052871,11355358,-17680037,-8400164,-17430592,12264343,10874051,13524335 },
-  { 25556948,-3045990,714651,2510400,23394682,-10415330,33119038,5080568,-22528059,5376628 },
- },
- {
-  { -26088264,-4011052,-17013699,-3537628,-6726793,1920897,-22321305,-9447443,4535768,1569007 },
-  { -2255422,14606630,-21692440,-8039818,28430649,8775819,-30494562,3044290,31848280,12543772 },
-  { -22028579,2943893,-31857513,6777306,13784462,-4292203,-27377195,-2062731,7718482,14474653 },
- },
- {
-  { 2385315,2454213,-22631320,46603,-4437935,-15680415,656965,-7236665,24316168,-5253567 },
-  { 13741529,10911568,-33233417,-8603737,-20177830,-1033297,33040651,-13424532,-20729456,8321686 },
-  { 21060490,-2212744,15712757,-4336099,1639040,10656336,23845965,-11874838,-9984458,608372 },
- },
- {
-  { -13672732,-15087586,-10889693,-7557059,-6036909,11305547,1123968,-6780577,27229399,23887 },
-  { -23244140,-294205,-11744728,14712571,-29465699,-2029617,12797024,-6440308,-1633405,16678954 },
-  { -29500620,4770662,-16054387,14001338,7830047,9564805,-1508144,-4795045,-17169265,4904953 },
- },
- {
-  { 24059557,14617003,19037157,-15039908,19766093,-14906429,5169211,16191880,2128236,-4326833 },
-  { -16981152,4124966,-8540610,-10653797,30336522,-14105247,-29806336,916033,-6882542,-2986532 },
-  { -22630907,12419372,-7134229,-7473371,-16478904,16739175,285431,2763829,15736322,4143876 },
- },
- {
-  { 2379352,11839345,-4110402,-5988665,11274298,794957,212801,-14594663,23527084,-16458268 },
-  { 33431127,-11130478,-17838966,-15626900,8909499,8376530,-32625340,4087881,-15188911,-14416214 },
-  { 1767683,7197987,-13205226,-2022635,-13091350,448826,5799055,4357868,-4774191,-16323038 },
- },
-},
-{
- {
-  { 6721966,13833823,-23523388,-1551314,26354293,-11863321,23365147,-3949732,7390890,2759800 },
-  { 4409041,2052381,23373853,10530217,7676779,-12885954,21302353,-4264057,1244380,-12919645 },
-  { -4421239,7169619,4982368,-2957590,30256825,-2777540,14086413,9208236,15886429,16489664 },
- },
- {
-  { 1996075,10375649,14346367,13311202,-6874135,-16438411,-13693198,398369,-30606455,-712933 },
-  { -25307465,9795880,-2777414,14878809,-33531835,14780363,13348553,12076947,-30836462,5113182 },
-  { -17770784,11797796,31950843,13929123,-25888302,12288344,-30341101,-7336386,13847711,5387222 },
- },
- {
-  { -18582163,-3416217,17824843,-2340966,22744343,-10442611,8763061,3617786,-19600662,10370991 },
-  { 20246567,-14369378,22358229,-543712,18507283,-10413996,14554437,-8746092,32232924,16763880 },
-  { 9648505,10094563,26416693,14745928,-30374318,-6472621,11094161,15689506,3140038,-16510092 },
- },
- {
-  { -16160072,5472695,31895588,4744994,8823515,10365685,-27224800,9448613,-28774454,366295 },
-  { 19153450,11523972,-11096490,-6503142,-24647631,5420647,28344573,8041113,719605,11671788 },
-  { 8678025,2694440,-6808014,2517372,4964326,11152271,-15432916,-15266516,27000813,-10195553 },
- },
- {
-  { -15157904,7134312,8639287,-2814877,-7235688,10421742,564065,5336097,6750977,-14521026 },
-  { 11836410,-3979488,26297894,16080799,23455045,15735944,1695823,-8819122,8169720,16220347 },
-  { -18115838,8653647,17578566,-6092619,-8025777,-16012763,-11144307,-2627664,-5990708,-14166033 },
- },
- {
-  { -23308498,-10968312,15213228,-10081214,-30853605,-11050004,27884329,2847284,2655861,1738395 },
-  { -27537433,-14253021,-25336301,-8002780,-9370762,8129821,21651608,-3239336,-19087449,-11005278 },
-  { 1533110,3437855,23735889,459276,29970501,11335377,26030092,5821408,10478196,8544890 },
- },
- {
-  { 32173121,-16129311,24896207,3921497,22579056,-3410854,19270449,12217473,17789017,-3395995 },
-  { -30552961,-2228401,-15578829,-10147201,13243889,517024,15479401,-3853233,30460520,1052596 },
-  { -11614875,13323618,32618793,8175907,-15230173,12596687,27491595,-4612359,3179268,-9478891 },
- },
- {
-  { 31947069,-14366651,-4640583,-15339921,-15125977,-6039709,-14756777,-16411740,19072640,-9511060 },
-  { 11685058,11822410,3158003,-13952594,33402194,-4165066,5977896,-5215017,473099,5040608 },
-  { -20290863,8198642,-27410132,11602123,1290375,-2799760,28326862,1721092,-19558642,-3131606 },
- },
-},
-{
- {
-  { 7881532,10687937,7578723,7738378,-18951012,-2553952,21820786,8076149,-27868496,11538389 },
-  { -19935666,3899861,18283497,-6801568,-15728660,-11249211,8754525,7446702,-5676054,5797016 },
-  { -11295600,-3793569,-15782110,-7964573,12708869,-8456199,2014099,-9050574,-2369172,-5877341 },
- },
- {
-  { -22472376,-11568741,-27682020,1146375,18956691,16640559,1192730,-3714199,15123619,10811505 },
-  { 14352098,-3419715,-18942044,10822655,32750596,4699007,-70363,15776356,-28886779,-11974553 },
-  { -28241164,-8072475,-4978962,-5315317,29416931,1847569,-20654173,-16484855,4714547,-9600655 },
- },
- {
-  { 15200332,8368572,19679101,15970074,-31872674,1959451,24611599,-4543832,-11745876,12340220 },
-  { 12876937,-10480056,33134381,6590940,-6307776,14872440,9613953,8241152,15370987,9608631 },
-  { -4143277,-12014408,8446281,-391603,4407738,13629032,-7724868,15866074,-28210621,-8814099 },
- },
- {
-  { 26660628,-15677655,8393734,358047,-7401291,992988,-23904233,858697,20571223,8420556 },
-  { 14620715,13067227,-15447274,8264467,14106269,15080814,33531827,12516406,-21574435,-12476749 },
-  { 236881,10476226,57258,-14677024,6472998,2466984,17258519,7256740,8791136,15069930 },
- },
- {
-  { 1276410,-9371918,22949635,-16322807,-23493039,-5702186,14711875,4874229,-30663140,-2331391 },
-  { 5855666,4990204,-13711848,7294284,-7804282,1924647,-1423175,-7912378,-33069337,9234253 },
-  { 20590503,-9018988,31529744,-7352666,-2706834,10650548,31559055,-11609587,18979186,13396066 },
- },
- {
-  { 24474287,4968103,22267082,4407354,24063882,-8325180,-18816887,13594782,33514650,7021958 },
-  { -11566906,-6565505,-21365085,15928892,-26158305,4315421,-25948728,-3916677,-21480480,12868082 },
-  { -28635013,13504661,19988037,-2132761,21078225,6443208,-21446107,2244500,-12455797,-8089383 },
- },
- {
-  { -30595528,13793479,-5852820,319136,-25723172,-6263899,33086546,8957937,-15233648,5540521 },
-  { -11630176,-11503902,-8119500,-7643073,2620056,1022908,-23710744,-1568984,-16128528,-14962807 },
-  { 23152971,775386,27395463,14006635,-9701118,4649512,1689819,892185,-11513277,-15205948 },
- },
- {
-  { 9770129,9586738,26496094,4324120,1556511,-3550024,27453819,4763127,-19179614,5867134 },
-  { -32765025,1927590,31726409,-4753295,23962434,-16019500,27846559,5931263,-29749703,-16108455 },
-  { 27461885,-2977536,22380810,1815854,-23033753,-3031938,7283490,-15148073,-19526700,7734629 },
- },
-},
-{
- {
-  { -8010264,-9590817,-11120403,6196038,29344158,-13430885,7585295,-3176626,18549497,15302069 },
-  { -32658337,-6171222,-7672793,-11051681,6258878,13504381,10458790,-6418461,-8872242,8424746 },
-  { 24687205,8613276,-30667046,-3233545,1863892,-1830544,19206234,7134917,-11284482,-828919 },
- },
- {
-  { 11334899,-9218022,8025293,12707519,17523892,-10476071,10243738,-14685461,-5066034,16498837 },
-  { 8911542,6887158,-9584260,-6958590,11145641,-9543680,17303925,-14124238,6536641,10543906 },
-  { -28946384,15479763,-17466835,568876,-1497683,11223454,-2669190,-16625574,-27235709,8876771 },
- },
- {
-  { -25742899,-12566864,-15649966,-846607,-33026686,-796288,-33481822,15824474,-604426,-9039817 },
-  { 10330056,70051,7957388,-9002667,9764902,15609756,27698697,-4890037,1657394,3084098 },
-  { 10477963,-7470260,12119566,-13250805,29016247,-5365589,31280319,14396151,-30233575,15272409 },
- },
- {
-  { -12288309,3169463,28813183,16658753,25116432,-5630466,-25173957,-12636138,-25014757,1950504 },
-  { -26180358,9489187,11053416,-14746161,-31053720,5825630,-8384306,-8767532,15341279,8373727 },
-  { 28685821,7759505,-14378516,-12002860,-31971820,4079242,298136,-10232602,-2878207,15190420 },
- },
- {
-  { -32932876,13806336,-14337485,-15794431,-24004620,10940928,8669718,2742393,-26033313,-6875003 },
-  { -1580388,-11729417,-25979658,-11445023,-17411874,-10912854,9291594,-16247779,-12154742,6048605 },
-  { -30305315,14843444,1539301,11864366,20201677,1900163,13934231,5128323,11213262,9168384 },
- },
- {
-  { -26280513,11007847,19408960,-940758,-18592965,-4328580,-5088060,-11105150,20470157,-16398701 },
-  { -23136053,9282192,14855179,-15390078,-7362815,-14408560,-22783952,14461608,14042978,5230683 },
-  { 29969567,-2741594,-16711867,-8552442,9175486,-2468974,21556951,3506042,-5933891,-12449708 },
- },
- {
-  { -3144746,8744661,19704003,4581278,-20430686,6830683,-21284170,8971513,-28539189,15326563 },
-  { -19464629,10110288,-17262528,-3503892,-23500387,1355669,-15523050,15300988,-20514118,9168260 },
-  { -5353335,4488613,-23803248,16314347,7780487,-15638939,-28948358,9601605,33087103,-9011387 },
- },
- {
-  { -19443170,-15512900,-20797467,-12445323,-29824447,10229461,-27444329,-15000531,-5996870,15664672 },
-  { 23294591,-16632613,-22650781,-8470978,27844204,11461195,13099750,-2460356,18151676,13417686 },
-  { -24722913,-4176517,-31150679,5988919,-26858785,6685065,1661597,-12551441,15271676,-15452665 },
- },
-},
-{
- {
-  { 11433042,-13228665,8239631,-5279517,-1985436,-725718,-18698764,2167544,-6921301,-13440182 },
-  { -31436171,15575146,30436815,12192228,-22463353,9395379,-9917708,-8638997,12215110,12028277 },
-  { 14098400,6555944,23007258,5757252,-15427832,-12950502,30123440,4617780,-16900089,-655628 },
- },
- {
-  { -4026201,-15240835,11893168,13718664,-14809462,1847385,-15819999,10154009,23973261,-12684474 },
-  { -26531820,-3695990,-1908898,2534301,-31870557,-16550355,18341390,-11419951,32013174,-10103539 },
-  { -25479301,10876443,-11771086,-14625140,-12369567,1838104,21911214,6354752,4425632,-837822 },
- },
- {
-  { -10433389,-14612966,22229858,-3091047,-13191166,776729,-17415375,-12020462,4725005,14044970 },
-  { 19268650,-7304421,1555349,8692754,-21474059,-9910664,6347390,-1411784,-19522291,-16109756 },
-  { -24864089,12986008,-10898878,-5558584,-11312371,-148526,19541418,8180106,9282262,10282508 },
- },
- {
-  { -26205082,4428547,-8661196,-13194263,4098402,-14165257,15522535,8372215,5542595,-10702683 },
-  { -10562541,14895633,26814552,-16673850,-17480754,-2489360,-2781891,6993761,-18093885,10114655 },
-  { -20107055,-929418,31422704,10427861,-7110749,6150669,-29091755,-11529146,25953725,-106158 },
- },
- {
-  { -4234397,-8039292,-9119125,3046000,2101609,-12607294,19390020,6094296,-3315279,12831125 },
-  { -15998678,7578152,5310217,14408357,-33548620,-224739,31575954,6326196,7381791,-2421839 },
-  { -20902779,3296811,24736065,-16328389,18374254,7318640,6295303,8082724,-15362489,12339664 },
- },
- {
-  { 27724736,2291157,6088201,-14184798,1792727,5857634,13848414,15768922,25091167,14856294 },
-  { -18866652,8331043,24373479,8541013,-701998,-9269457,12927300,-12695493,-22182473,-9012899 },
-  { -11423429,-5421590,11632845,3405020,30536730,-11674039,-27260765,13866390,30146206,9142070 },
- },
- {
-  { 3924129,-15307516,-13817122,-10054960,12291820,-668366,-27702774,9326384,-8237858,4171294 },
-  { -15921940,16037937,6713787,16606682,-21612135,2790944,26396185,3731949,345228,-5462949 },
-  { -21327538,13448259,25284571,1143661,20614966,-8849387,2031539,-12391231,-16253183,-13582083 },
- },
- {
-  { 31016211,-16722429,26371392,-14451233,-5027349,14854137,17477601,3842657,28012650,-16405420 },
-  { -5075835,9368966,-8562079,-4600902,-15249953,6970560,-9189873,16292057,-8867157,3507940 },
-  { 29439664,3537914,23333589,6997794,-17555561,-11018068,-15209202,-15051267,-9164929,6580396 },
- },
-},
-{
- {
-  { -12185861,-7679788,16438269,10826160,-8696817,-6235611,17860444,-9273846,-2095802,9304567 },
-  { 20714564,-4336911,29088195,7406487,11426967,-5095705,14792667,-14608617,5289421,-477127 },
-  { -16665533,-10650790,-6160345,-13305760,9192020,-1802462,17271490,12349094,26939669,-3752294 },
- },
- {
-  { -12889898,9373458,31595848,16374215,21471720,13221525,-27283495,-12348559,-3698806,117887 },
-  { 22263325,-6560050,3984570,-11174646,-15114008,-566785,28311253,5358056,-23319780,541964 },
-  { 16259219,3261970,2309254,-15534474,-16885711,-4581916,24134070,-16705829,-13337066,-13552195 },
- },
- {
-  { 9378160,-13140186,-22845982,-12745264,28198281,-7244098,-2399684,-717351,690426,14876244 },
-  { 24977353,-314384,-8223969,-13465086,28432343,-1176353,-13068804,-12297348,-22380984,6618999 },
-  { -1538174,11685646,12944378,13682314,-24389511,-14413193,8044829,-13817328,32239829,-5652762 },
- },
- {
-  { -18603066,4762990,-926250,8885304,-28412480,-3187315,9781647,-10350059,32779359,5095274 },
-  { -33008130,-5214506,-32264887,-3685216,9460461,-9327423,-24601656,14506724,21639561,-2630236 },
-  { -16400943,-13112215,25239338,15531969,3987758,-4499318,-1289502,-6863535,17874574,558605 },
- },
- {
-  { -13600129,10240081,9171883,16131053,-20869254,9599700,33499487,5080151,2085892,5119761 },
-  { -22205145,-2519528,-16381601,414691,-25019550,2170430,30634760,-8363614,-31999993,-5759884 },
-  { -6845704,15791202,8550074,-1312654,29928809,-12092256,27534430,-7192145,-22351378,12961482 },
- },
- {
-  { -24492060,-9570771,10368194,11582341,-23397293,-2245287,16533930,8206996,-30194652,-5159638 },
-  { -11121496,-3382234,2307366,6362031,-135455,8868177,-16835630,7031275,7589640,8945490 },
-  { -32152748,8917967,6661220,-11677616,-1192060,-15793393,7251489,-11182180,24099109,-14456170 },
- },
- {
-  { 5019558,-7907470,4244127,-14714356,-26933272,6453165,-19118182,-13289025,-6231896,-10280736 },
-  { 10853594,10721687,26480089,5861829,-22995819,1972175,-1866647,-10557898,-3363451,-6441124 },
-  { -17002408,5906790,221599,-6563147,7828208,-13248918,24362661,-2008168,-13866408,7421392 },
- },
- {
-  { 8139927,-6546497,32257646,-5890546,30375719,1886181,-21175108,15441252,28826358,-4123029 },
-  { 6267086,9695052,7709135,-16603597,-32869068,-1886135,14795160,-7840124,13746021,-1742048 },
-  { 28584902,7787108,-6732942,-15050729,22846041,-7571236,-3181936,-363524,4771362,-8419958 },
- },
-},
-{
- {
-  { 24949256,6376279,-27466481,-8174608,-18646154,-9930606,33543569,-12141695,3569627,11342593 },
-  { 26514989,4740088,27912651,3697550,19331575,-11472339,6809886,4608608,7325975,-14801071 },
-  { -11618399,-14554430,-24321212,7655128,-1369274,5214312,-27400540,10258390,-17646694,-8186692 },
- },
- {
-  { 11431204,15823007,26570245,14329124,18029990,4796082,-31446179,15580664,9280358,-3973687 },
-  { -160783,-10326257,-22855316,-4304997,-20861367,-13621002,-32810901,-11181622,-15545091,4387441 },
-  { -20799378,12194512,3937617,-5805892,-27154820,9340370,-24513992,8548137,20617071,-7482001 },
- },
- {
-  { -938825,-3930586,-8714311,16124718,24603125,-6225393,-13775352,-11875822,24345683,10325460 },
-  { -19855277,-1568885,-22202708,8714034,14007766,6928528,16318175,-1010689,4766743,3552007 },
-  { -21751364,-16730916,1351763,-803421,-4009670,3950935,3217514,14481909,10988822,-3994762 },
- },
- {
-  { 15564307,-14311570,3101243,5684148,30446780,-8051356,12677127,-6505343,-8295852,13296005 },
-  { -9442290,6624296,-30298964,-11913677,-4670981,-2057379,31521204,9614054,-30000824,12074674 },
-  { 4771191,-135239,14290749,-13089852,27992298,14998318,-1413936,-1556716,29832613,-16391035 },
- },
- {
-  { 7064884,-7541174,-19161962,-5067537,-18891269,-2912736,25825242,5293297,-27122660,13101590 },
-  { -2298563,2439670,-7466610,1719965,-27267541,-16328445,32512469,-5317593,-30356070,-4190957 },
-  { -30006540,10162316,-33180176,3981723,-16482138,-13070044,14413974,9515896,19568978,9628812 },
- },
- {
-  { 33053803,199357,15894591,1583059,27380243,-4580435,-17838894,-6106839,-6291786,3437740 },
-  { -18978877,3884493,19469877,12726490,15913552,13614290,-22961733,70104,7463304,4176122 },
-  { -27124001,10659917,11482427,-16070381,12771467,-6635117,-32719404,-5322751,24216882,5944158 },
- },
- {
-  { 8894125,7450974,-2664149,-9765752,-28080517,-12389115,19345746,14680796,11632993,5847885 },
-  { 26942781,-2315317,9129564,-4906607,26024105,11769399,-11518837,6367194,-9727230,4782140 },
-  { 19916461,-4828410,-22910704,-11414391,25606324,-5972441,33253853,8220911,6358847,-1873857 },
- },
- {
-  { 801428,-2081702,16569428,11065167,29875704,96627,7908388,-4480480,-13538503,1387155 },
-  { 19646058,5720633,-11416706,12814209,11607948,12749789,14147075,15156355,-21866831,11835260 },
-  { 19299512,1155910,28703737,14890794,2925026,7269399,26121523,15467869,-26560550,5052483 },
- },
-},
-{
- {
-  { -3017432,10058206,1980837,3964243,22160966,12322533,-6431123,-12618185,12228557,-7003677 },
-  { 32944382,14922211,-22844894,5188528,21913450,-8719943,4001465,13238564,-6114803,8653815 },
-  { 22865569,-4652735,27603668,-12545395,14348958,8234005,24808405,5719875,28483275,2841751 },
- },
- {
-  { -16420968,-1113305,-327719,-12107856,21886282,-15552774,-1887966,-315658,19932058,-12739203 },
-  { -11656086,10087521,-8864888,-5536143,-19278573,-3055912,3999228,13239134,-4777469,-13910208 },
-  { 1382174,-11694719,17266790,9194690,-13324356,9720081,20403944,11284705,-14013818,3093230 },
- },
- {
-  { 16650921,-11037932,-1064178,1570629,-8329746,7352753,-302424,16271225,-24049421,-6691850 },
-  { -21911077,-5927941,-4611316,-5560156,-31744103,-10785293,24123614,15193618,-21652117,-16739389 },
-  { -9935934,-4289447,-25279823,4372842,2087473,10399484,31870908,14690798,17361620,11864968 },
- },
- {
-  { -11307610,6210372,13206574,5806320,-29017692,-13967200,-12331205,-7486601,-25578460,-16240689 },
-  { 14668462,-12270235,26039039,15305210,25515617,4542480,10453892,6577524,9145645,-6443880 },
-  { 5974874,3053895,-9433049,-10385191,-31865124,3225009,-7972642,3936128,-5652273,-3050304 },
- },
- {
-  { 30625386,-4729400,-25555961,-12792866,-20484575,7695099,17097188,-16303496,-27999779,1803632 },
-  { -3553091,9865099,-5228566,4272701,-5673832,-16689700,14911344,12196514,-21405489,7047412 },
-  { 20093277,9920966,-11138194,-5343857,13161587,12044805,-32856851,4124601,-32343828,-10257566 },
- },
- {
-  { -20788824,14084654,-13531713,7842147,19119038,-13822605,4752377,-8714640,-21679658,2288038 },
-  { -26819236,-3283715,29965059,3039786,-14473765,2540457,29457502,14625692,-24819617,12570232 },
-  { -1063558,-11551823,16920318,12494842,1278292,-5869109,-21159943,-3498680,-11974704,4724943 },
- },
- {
-  { 17960970,-11775534,-4140968,-9702530,-8876562,-1410617,-12907383,-8659932,-29576300,1903856 },
-  { 23134274,-14279132,-10681997,-1611936,20684485,15770816,-12989750,3190296,26955097,14109738 },
-  { 15308788,5320727,-30113809,-14318877,22902008,7767164,29425325,-11277562,31960942,11934971 },
- },
- {
-  { -27395711,8435796,4109644,12222639,-24627868,14818669,20638173,4875028,10491392,1379718 },
-  { -13159415,9197841,3875503,-8936108,-1383712,-5879801,33518459,16176658,21432314,12180697 },
-  { -11787308,11500838,13787581,-13832590,-22430679,10140205,1465425,12689540,-10301319,-13872883 },
- },
-},
-{
- {
-  { 5414091,-15386041,-21007664,9643570,12834970,1186149,-2622916,-1342231,26128231,6032912 },
-  { -26337395,-13766162,32496025,-13653919,17847801,-12669156,3604025,8316894,-25875034,-10437358 },
-  { 3296484,6223048,24680646,-12246460,-23052020,5903205,-8862297,-4639164,12376617,3188849 },
- },
- {
-  { 29190488,-14659046,27549113,-1183516,3520066,-10697301,32049515,-7309113,-16109234,-9852307 },
-  { -14744486,-9309156,735818,-598978,-20407687,-5057904,25246078,-15795669,18640741,-960977 },
-  { -6928835,-16430795,10361374,5642961,4910474,12345252,-31638386,-494430,10530747,1053335 },
- },
- {
-  { -29265967,-14186805,-13538216,-12117373,-19457059,-10655384,-31462369,-2948985,24018831,15026644 },
-  { -22592535,-3145277,-2289276,5953843,-13440189,9425631,25310643,13003497,-2314791,-15145616 },
-  { -27419985,-603321,-8043984,-1669117,-26092265,13987819,-27297622,187899,-23166419,-2531735 },
- },
- {
-  { -21744398,-13810475,1844840,5021428,-10434399,-15911473,9716667,16266922,-5070217,726099 },
-  { 29370922,-6053998,7334071,-15342259,9385287,2247707,-13661962,-4839461,30007388,-15823341 },
-  { -936379,16086691,23751945,-543318,-1167538,-5189036,9137109,730663,9835848,4555336 },
- },
- {
-  { -23376435,1410446,-22253753,-12899614,30867635,15826977,17693930,544696,-11985298,12422646 },
-  { 31117226,-12215734,-13502838,6561947,-9876867,-12757670,-5118685,-4096706,29120153,13924425 },
-  { -17400879,-14233209,19675799,-2734756,-11006962,-5858820,-9383939,-11317700,7240931,-237388 },
- },
- {
-  { -31361739,-11346780,-15007447,-5856218,-22453340,-12152771,1222336,4389483,3293637,-15551743 },
-  { -16684801,-14444245,11038544,11054958,-13801175,-3338533,-24319580,7733547,12796905,-6335822 },
-  { -8759414,-10817836,-25418864,10783769,-30615557,-9746811,-28253339,3647836,3222231,-11160462 },
- },
- {
-  { 18606113,1693100,-25448386,-15170272,4112353,10045021,23603893,-2048234,-7550776,2484985 },
-  { 9255317,-3131197,-12156162,-1004256,13098013,-9214866,16377220,-2102812,-19802075,-3034702 },
-  { -22729289,7496160,-5742199,11329249,19991973,-3347502,-31718148,9936966,-30097688,-10618797 },
- },
- {
-  { 21878590,-5001297,4338336,13643897,-3036865,13160960,19708896,5415497,-7360503,-4109293 },
-  { 27736861,10103576,12500508,8502413,-3413016,-9633558,10436918,-1550276,-23659143,-8132100 },
-  { 19492550,-12104365,-29681976,-852630,-3208171,12403437,30066266,8367329,13243957,8709688 },
- },
-},
-{
- {
-  { 12015105,2801261,28198131,10151021,24818120,-4743133,-11194191,-5645734,5150968,7274186 },
-  { 2831366,-12492146,1478975,6122054,23825128,-12733586,31097299,6083058,31021603,-9793610 },
-  { -2529932,-2229646,445613,10720828,-13849527,-11505937,-23507731,16354465,15067285,-14147707 },
- },
- {
-  { 7840942,14037873,-33364863,15934016,-728213,-3642706,21403988,1057586,-19379462,-12403220 },
-  { 915865,-16469274,15608285,-8789130,-24357026,6060030,-17371319,8410997,-7220461,16527025 },
-  { 32922597,-556987,20336074,-16184568,10903705,-5384487,16957574,52992,23834301,6588044 },
- },
- {
-  { 32752030,11232950,3381995,-8714866,22652988,-10744103,17159699,16689107,-20314580,-1305992 },
-  { -4689649,9166776,-25710296,-10847306,11576752,12733943,7924251,-2752281,1976123,-7249027 },
-  { 21251222,16309901,-2983015,-6783122,30810597,12967303,156041,-3371252,12331345,-8237197 },
- },
- {
-  { 8651614,-4477032,-16085636,-4996994,13002507,2950805,29054427,-5106970,10008136,-4667901 },
-  { 31486080,15114593,-14261250,12951354,14369431,-7387845,16347321,-13662089,8684155,-10532952 },
-  { 19443825,11385320,24468943,-9659068,-23919258,2187569,-26263207,-6086921,31316348,14219878 },
- },
- {
-  { -28594490,1193785,32245219,11392485,31092169,15722801,27146014,6992409,29126555,9207390 },
-  { 32382935,1110093,18477781,11028262,-27411763,-7548111,-4980517,10843782,-7957600,-14435730 },
-  { 2814918,7836403,27519878,-7868156,-20894015,-11553689,-21494559,8550130,28346258,1994730 },
- },
- {
-  { -19578299,8085545,-14000519,-3948622,2785838,-16231307,-19516951,7174894,22628102,8115180 },
-  { -30405132,955511,-11133838,-15078069,-32447087,-13278079,-25651578,3317160,-9943017,930272 },
-  { -15303681,-6833769,28856490,1357446,23421993,1057177,24091212,-1388970,-22765376,-10650715 },
- },
- {
-  { -22751231,-5303997,-12907607,-12768866,-15811511,-7797053,-14839018,-16554220,-1867018,8398970 },
-  { -31969310,2106403,-4736360,1362501,12813763,16200670,22981545,-6291273,18009408,-15772772 },
-  { -17220923,-9545221,-27784654,14166835,29815394,7444469,29551787,-3727419,19288549,1325865 },
- },
- {
-  { 15100157,-15835752,-23923978,-1005098,-26450192,15509408,12376730,-3479146,33166107,-8042750 },
-  { 20909231,13023121,-9209752,16251778,-5778415,-8094914,12412151,10018715,2213263,-13878373 },
-  { 32529814,-11074689,30361439,-16689753,-9135940,1513226,22922121,6382134,-5766928,8371348 },
- },
-},
-{
- {
-  { 9923462,11271500,12616794,3544722,-29998368,-1721626,12891687,-8193132,-26442943,10486144 },
-  { -22597207,-7012665,8587003,-8257861,4084309,-12970062,361726,2610596,-23921530,-11455195 },
-  { 5408411,-1136691,-4969122,10561668,24145918,14240566,31319731,-4235541,19985175,-3436086 },
- },
- {
-  { -13994457,16616821,14549246,3341099,32155958,13648976,-17577068,8849297,65030,8370684 },
-  { -8320926,-12049626,31204563,5839400,-20627288,-1057277,-19442942,6922164,12743482,-9800518 },
-  { -2361371,12678785,28815050,4759974,-23893047,4884717,23783145,11038569,18800704,255233 },
- },
- {
-  { -5269658,-1773886,13957886,7990715,23132995,728773,13393847,9066957,19258688,-14753793 },
-  { -2936654,-10827535,-10432089,14516793,-3640786,4372541,-31934921,2209390,-1524053,2055794 },
-  { 580882,16705327,5468415,-2683018,-30926419,-14696000,-7203346,-8994389,-30021019,7394435 },
- },
- {
-  { 23838809,1822728,-15738443,15242727,8318092,-3733104,-21672180,-3492205,-4821741,14799921 },
-  { 13345610,9759151,3371034,-16137791,16353039,8577942,31129804,13496856,-9056018,7402518 },
-  { 2286874,-4435931,-20042458,-2008336,-13696227,5038122,11006906,-15760352,8205061,1607563 },
- },
- {
-  { 14414086,-8002132,3331830,-3208217,22249151,-5594188,18364661,-2906958,30019587,-9029278 },
-  { -27688051,1585953,-10775053,931069,-29120221,-11002319,-14410829,12029093,9944378,8024 },
-  { 4368715,-3709630,29874200,-15022983,-20230386,-11410704,-16114594,-999085,-8142388,5640030 },
- },
- {
-  { 10299610,13746483,11661824,16234854,7630238,5998374,9809887,-16694564,15219798,-14327783 },
-  { 27425505,-5719081,3055006,10660664,23458024,595578,-15398605,-1173195,-18342183,9742717 },
-  { 6744077,2427284,26042789,2720740,-847906,1118974,32324614,7406442,12420155,1994844 },
- },
- {
-  { 14012521,-5024720,-18384453,-9578469,-26485342,-3936439,-13033478,-10909803,24319929,-6446333 },
-  { 16412690,-4507367,10772641,15929391,-17068788,-4658621,10555945,-10484049,-30102368,-4739048 },
-  { 22397382,-7767684,-9293161,-12792868,17166287,-9755136,-27333065,6199366,21880021,-12250760 },
- },
- {
-  { -4283307,5368523,-31117018,8163389,-30323063,3209128,16557151,8890729,8840445,4957760 },
-  { -15447727,709327,-6919446,-10870178,-29777922,6522332,-21720181,12130072,-14796503,5005757 },
-  { -2114751,-14308128,23019042,15765735,-25269683,6002752,10183197,-13239326,-16395286,-2176112 },
- },
-},
-{
- {
-  { -19025756,1632005,13466291,-7995100,-23640451,16573537,-32013908,-3057104,22208662,2000468 },
-  { 3065073,-1412761,-25598674,-361432,-17683065,-5703415,-8164212,11248527,-3691214,-7414184 },
-  { 10379208,-6045554,8877319,1473647,-29291284,-12507580,16690915,2553332,-3132688,16400289 },
- },
- {
-  { 15716668,1254266,-18472690,7446274,-8448918,6344164,-22097271,-7285580,26894937,9132066 },
-  { 24158887,12938817,11085297,-8177598,-28063478,-4457083,-30576463,64452,-6817084,-2692882 },
-  { 13488534,7794716,22236231,5989356,25426474,-12578208,2350710,-3418511,-4688006,2364226 },
- },
- {
-  { 16335052,9132434,25640582,6678888,1725628,8517937,-11807024,-11697457,15445875,-7798101 },
-  { 29004207,-7867081,28661402,-640412,-12794003,-7943086,31863255,-4135540,-278050,-15759279 },
-  { -6122061,-14866665,-28614905,14569919,-10857999,-3591829,10343412,-6976290,-29828287,-10815811 },
- },
- {
-  { 27081650,3463984,14099042,-4517604,1616303,-6205604,29542636,15372179,17293797,960709 },
-  { 20263915,11434237,-5765435,11236810,13505955,-10857102,-16111345,6493122,-19384511,7639714 },
-  { -2830798,-14839232,25403038,-8215196,-8317012,-16173699,18006287,-16043750,29994677,-15808121 },
- },
- {
-  { 9769828,5202651,-24157398,-13631392,-28051003,-11561624,-24613141,-13860782,-31184575,709464 },
-  { 12286395,13076066,-21775189,-1176622,-25003198,4057652,-32018128,-8890874,16102007,13205847 },
-  { 13733362,5599946,10557076,3195751,-5557991,8536970,-25540170,8525972,10151379,10394400 },
- },
- {
-  { 4024660,-16137551,22436262,12276534,-9099015,-2686099,19698229,11743039,-33302334,8934414 },
-  { -15879800,-4525240,-8580747,-2934061,14634845,-698278,-9449077,3137094,-11536886,11721158 },
-  { 17555939,-5013938,8268606,2331751,-22738815,9761013,9319229,8835153,-9205489,-1280045 },
- },
- {
-  { -461409,-7830014,20614118,16688288,-7514766,-4807119,22300304,505429,6108462,-6183415 },
-  { -5070281,12367917,-30663534,3234473,32617080,-8422642,29880583,-13483331,-26898490,-7867459 },
-  { -31975283,5726539,26934134,10237677,-3173717,-605053,24199304,3795095,7592688,-14992079 },
- },
- {
-  { 21594432,-14964228,17466408,-4077222,32537084,2739898,6407723,12018833,-28256052,4298412 },
-  { -20650503,-11961496,-27236275,570498,3767144,-1717540,13891942,-1569194,13717174,10805743 },
-  { -14676630,-15644296,15287174,11927123,24177847,-8175568,-796431,14860609,-26938930,-5863836 },
- },
-},
-{
- {
-  { 12962541,5311799,-10060768,11658280,18855286,-7954201,13286263,-12808704,-4381056,9882022 },
-  { 18512079,11319350,-20123124,15090309,18818594,5271736,-22727904,3666879,-23967430,-3299429 },
-  { -6789020,-3146043,16192429,13241070,15898607,-14206114,-10084880,-6661110,-2403099,5276065 },
- },
- {
-  { 30169808,-5317648,26306206,-11750859,27814964,7069267,7152851,3684982,1449224,13082861 },
-  { 10342826,3098505,2119311,193222,25702612,12233820,23697382,15056736,-21016438,-8202000 },
-  { -33150110,3261608,22745853,7948688,19370557,-15177665,-26171976,6482814,-10300080,-11060101 },
- },
- {
-  { 32869458,-5408545,25609743,15678670,-10687769,-15471071,26112421,2521008,-22664288,6904815 },
-  { 29506923,4457497,3377935,-9796444,-30510046,12935080,1561737,3841096,-29003639,-6657642 },
-  { 10340844,-6630377,-18656632,-2278430,12621151,-13339055,30878497,-11824370,-25584551,5181966 },
- },
- {
-  { 25940115,-12658025,17324188,-10307374,-8671468,15029094,24396252,-16450922,-2322852,-12388574 },
-  { -21765684,9916823,-1300409,4079498,-1028346,11909559,1782390,12641087,20603771,-6561742 },
-  { -18882287,-11673380,24849422,11501709,13161720,-4768874,1925523,11914390,4662781,7820689 },
- },
- {
-  { 12241050,-425982,8132691,9393934,32846760,-1599620,29749456,12172924,16136752,15264020 },
-  { -10349955,-14680563,-8211979,2330220,-17662549,-14545780,10658213,6671822,19012087,3772772 },
-  { 3753511,-3421066,10617074,2028709,14841030,-6721664,28718732,-15762884,20527771,12988982 },
- },
- {
-  { -14822485,-5797269,-3707987,12689773,-898983,-10914866,-24183046,-10564943,3299665,-12424953 },
-  { -16777703,-15253301,-9642417,4978983,3308785,8755439,6943197,6461331,-25583147,8991218 },
-  { -17226263,1816362,-1673288,-6086439,31783888,-8175991,-32948145,7417950,-30242287,1507265 },
- },
- {
-  { 29692663,6829891,-10498800,4334896,20945975,-11906496,-28887608,8209391,14606362,-10647073 },
-  { -3481570,8707081,32188102,5672294,22096700,1711240,-33020695,9761487,4170404,-2085325 },
-  { -11587470,14855945,-4127778,-1531857,-26649089,15084046,22186522,16002000,-14276837,-8400798 },
- },
- {
-  { -4811456,13761029,-31703877,-2483919,-3312471,7869047,-7113572,-9620092,13240845,10965870 },
-  { -7742563,-8256762,-14768334,-13656260,-23232383,12387166,4498947,14147411,29514390,4302863 },
-  { -13413405,-12407859,20757302,-13801832,14785143,8976368,-5061276,-2144373,17846988,-13971927 },
- },
-},
-{
- {
-  { -2244452,-754728,-4597030,-1066309,-6247172,1455299,-21647728,-9214789,-5222701,12650267 },
-  { -9906797,-16070310,21134160,12198166,-27064575,708126,387813,13770293,-19134326,10958663 },
-  { 22470984,12369526,23446014,-5441109,-21520802,-9698723,-11772496,-11574455,-25083830,4271862 },
- },
- {
-  { -25169565,-10053642,-19909332,15361595,-5984358,2159192,75375,-4278529,-32526221,8469673 },
-  { 15854970,4148314,-8893890,7259002,11666551,13824734,-30531198,2697372,24154791,-9460943 },
-  { 15446137,-15806644,29759747,14019369,30811221,-9610191,-31582008,12840104,24913809,9815020 },
- },
- {
-  { -4709286,-5614269,-31841498,-12288893,-14443537,10799414,-9103676,13438769,18735128,9466238 },
-  { 11933045,9281483,5081055,-5183824,-2628162,-4905629,-7727821,-10896103,-22728655,16199064 },
-  { 14576810,379472,-26786533,-8317236,-29426508,-10812974,-102766,1876699,30801119,2164795 },
- },
- {
-  { 15995086,3199873,13672555,13712240,-19378835,-4647646,-13081610,-15496269,-13492807,1268052 },
-  { -10290614,-3659039,-3286592,10948818,23037027,3794475,-3470338,-12600221,-17055369,3565904 },
-  { 29210088,-9419337,-5919792,-4952785,10834811,-13327726,-16512102,-10820713,-27162222,-14030531 },
- },
- {
-  { -13161890,15508588,16663704,-8156150,-28349942,9019123,-29183421,-3769423,2244111,-14001979 },
-  { -5152875,-3800936,-9306475,-6071583,16243069,14684434,-25673088,-16180800,13491506,4641841 },
-  { 10813417,643330,-19188515,-728916,30292062,-16600078,27548447,-7721242,14476989,-12767431 },
- },
- {
-  { 10292079,9984945,6481436,8279905,-7251514,7032743,27282937,-1644259,-27912810,12651324 },
-  { -31185513,-813383,22271204,11835308,10201545,15351028,17099662,3988035,21721536,-3148940 },
-  { 10202177,-6545839,-31373232,-9574638,-32150642,-8119683,-12906320,3852694,13216206,14842320 },
- },
- {
-  { -15815640,-10601066,-6538952,-7258995,-6984659,-6581778,-31500847,13765824,-27434397,9900184 },
-  { 14465505,-13833331,-32133984,-14738873,-27443187,12990492,33046193,15796406,-7051866,-8040114 },
-  { 30924417,-8279620,6359016,-12816335,16508377,9071735,-25488601,15413635,9524356,-7018878 },
- },
- {
-  { 12274201,-13175547,32627641,-1785326,6736625,13267305,5237659,-5109483,15663516,4035784 },
-  { -2951309,8903985,17349946,601635,-16432815,-4612556,-13732739,-15889334,-22258478,4659091 },
-  { -16916263,-4952973,-30393711,-15158821,20774812,15897498,5736189,15026997,-2178256,-13455585 },
- },
-},
-{
- {
-  { -8858980,-2219056,28571666,-10155518,-474467,-10105698,-3801496,278095,23440562,-290208 },
-  { 10226241,-5928702,15139956,120818,-14867693,5218603,32937275,11551483,-16571960,-7442864 },
-  { 17932739,-12437276,-24039557,10749060,11316803,7535897,22503767,5561594,-3646624,3898661 },
- },
- {
-  { 7749907,-969567,-16339731,-16464,-25018111,15122143,-1573531,7152530,21831162,1245233 },
-  { 26958459,-14658026,4314586,8346991,-5677764,11960072,-32589295,-620035,-30402091,-16716212 },
-  { -12165896,9166947,33491384,13673479,29787085,13096535,6280834,14587357,-22338025,13987525 },
- },
- {
-  { -24349909,7778775,21116000,15572597,-4833266,-5357778,-4300898,-5124639,-7469781,-2858068 },
-  { 9681908,-6737123,-31951644,13591838,-6883821,386950,31622781,6439245,-14581012,4091397 },
-  { -8426427,1470727,-28109679,-1596990,3978627,-5123623,-19622683,12092163,29077877,-14741988 },
- },
- {
-  { 5269168,-6859726,-13230211,-8020715,25932563,1763552,-5606110,-5505881,-20017847,2357889 },
-  { 32264008,-15407652,-5387735,-1160093,-2091322,-3946900,23104804,-12869908,5727338,189038 },
-  { 14609123,-8954470,-6000566,-16622781,-14577387,-7743898,-26745169,10942115,-25888931,-14884697 },
- },
- {
-  { 20513500,5557931,-15604613,7829531,26413943,-2019404,-21378968,7471781,13913677,-5137875 },
-  { -25574376,11967826,29233242,12948236,-6754465,4713227,-8940970,14059180,12878652,8511905 },
-  { -25656801,3393631,-2955415,-7075526,-2250709,9366908,-30223418,6812974,5568676,-3127656 },
- },
- {
-  { 11630004,12144454,2116339,13606037,27378885,15676917,-17408753,-13504373,-14395196,8070818 },
-  { 27117696,-10007378,-31282771,-5570088,1127282,12772488,-29845906,10483306,-11552749,-1028714 },
-  { 10637467,-5688064,5674781,1072708,-26343588,-6982302,-1683975,9177853,-27493162,15431203 },
- },
- {
-  { 20525145,10892566,-12742472,12779443,-29493034,16150075,-28240519,14943142,-15056790,-7935931 },
-  { -30024462,5626926,-551567,-9981087,753598,11981191,25244767,-3239766,-3356550,9594024 },
-  { -23752644,2636870,-5163910,-10103818,585134,7877383,11345683,-6492290,13352335,-10977084 },
- },
- {
-  { -1931799,-5407458,3304649,-12884869,17015806,-4877091,-29783850,-7752482,-13215537,-319204 },
-  { 20239939,6607058,6203985,3483793,-18386976,-779229,-20723742,15077870,-22750759,14523817 },
-  { 27406042,-6041657,27423596,-4497394,4996214,10002360,-28842031,-4545494,-30172742,-4805667 },
- },
-},
-{
- {
-  { 11374242,12660715,17861383,-12540833,10935568,1099227,-13886076,-9091740,-27727044,11358504 },
-  { -12730809,10311867,1510375,10778093,-2119455,-9145702,32676003,11149336,-26123651,4985768 },
-  { -19096303,341147,-6197485,-239033,15756973,-8796662,-983043,13794114,-19414307,-15621255 },
- },
- {
-  { 6490081,11940286,25495923,-7726360,8668373,-8751316,3367603,6970005,-1691065,-9004790 },
-  { 1656497,13457317,15370807,6364910,13605745,8362338,-19174622,-5475723,-16796596,-5031438 },
-  { -22273315,-13524424,-64685,-4334223,-18605636,-10921968,-20571065,-7007978,-99853,-10237333 },
- },
- {
-  { 17747465,10039260,19368299,-4050591,-20630635,-16041286,31992683,-15857976,-29260363,-5511971 },
-  { 31932027,-4986141,-19612382,16366580,22023614,88450,11371999,-3744247,4882242,-10626905 },
-  { 29796507,37186,19818052,10115756,-11829032,3352736,18551198,3272828,-5190932,-4162409 },
- },
- {
-  { 12501286,4044383,-8612957,-13392385,-32430052,5136599,-19230378,-3529697,330070,-3659409 },
-  { 6384877,2899513,17807477,7663917,-2358888,12363165,25366522,-8573892,-271295,12071499 },
-  { -8365515,-4042521,25133448,-4517355,-6211027,2265927,-32769618,1936675,-5159697,3829363 },
- },
- {
-  { 28425966,-5835433,-577090,-4697198,-14217555,6870930,7921550,-6567787,26333140,14267664 },
-  { -11067219,11871231,27385719,-10559544,-4585914,-11189312,10004786,-8709488,-21761224,8930324 },
-  { -21197785,-16396035,25654216,-1725397,12282012,11008919,1541940,4757911,-26491501,-16408940 },
- },
- {
-  { 13537262,-7759490,-20604840,10961927,-5922820,-13218065,-13156584,6217254,-15943699,13814990 },
-  { -17422573,15157790,18705543,29619,24409717,-260476,27361681,9257833,-1956526,-1776914 },
-  { -25045300,-10191966,15366585,15166509,-13105086,8423556,-29171540,12361135,-18685978,4578290 },
- },
- {
-  { 24579768,3711570,1342322,-11180126,-27005135,14124956,-22544529,14074919,21964432,8235257 },
-  { -6528613,-2411497,9442966,-5925588,12025640,-1487420,-2981514,-1669206,13006806,2355433 },
-  { -16304899,-13605259,-6632427,-5142349,16974359,-10911083,27202044,1719366,1141648,-12796236 },
- },
- {
-  { -12863944,-13219986,-8318266,-11018091,-6810145,-4843894,13475066,-3133972,32674895,13715045 },
-  { 11423335,-5468059,32344216,8962751,24989809,9241752,-13265253,16086212,-28740881,-15642093 },
-  { -1409668,12530728,-6368726,10847387,19531186,-14132160,-11709148,7791794,-27245943,4383347 },
- },
-},
-{
- {
-  { -28970898,5271447,-1266009,-9736989,-12455236,16732599,-4862407,-4906449,27193557,6245191 },
-  { -15193956,5362278,-1783893,2695834,4960227,12840725,23061898,3260492,22510453,8577507 },
-  { -12632451,11257346,-32692994,13548177,-721004,10879011,31168030,13952092,-29571492,-3635906 },
- },
- {
-  { 3877321,-9572739,32416692,5405324,-11004407,-13656635,3759769,11935320,5611860,8164018 },
-  { -16275802,14667797,15906460,12155291,-22111149,-9039718,32003002,-8832289,5773085,-8422109 },
-  { -23788118,-8254300,1950875,8937633,18686727,16459170,-905725,12376320,31632953,190926 },
- },
- {
-  { -24593607,-16138885,-8423991,13378746,14162407,6901328,-8288749,4508564,-25341555,-3627528 },
-  { 8884438,-5884009,6023974,10104341,-6881569,-4941533,18722941,-14786005,-1672488,827625 },
-  { -32720583,-16289296,-32503547,7101210,13354605,2659080,-1800575,-14108036,-24878478,1541286 },
- },
- {
-  { 2901347,-1117687,3880376,-10059388,-17620940,-3612781,-21802117,-3567481,20456845,-1885033 },
-  { 27019610,12299467,-13658288,-1603234,-12861660,-4861471,-19540150,-5016058,29439641,15138866 },
-  { 21536104,-6626420,-32447818,-10690208,-22408077,5175814,-5420040,-16361163,7779328,109896 },
- },
- {
-  { 30279744,14648750,-8044871,6425558,13639621,-743509,28698390,12180118,23177719,-554075 },
-  { 26572847,3405927,-31701700,12890905,-19265668,5335866,-6493768,2378492,4439158,-13279347 },
-  { -22716706,3489070,-9225266,-332753,18875722,-1140095,14819434,-12731527,-17717757,-5461437 },
- },
- {
-  { -5056483,16566551,15953661,3767752,-10436499,15627060,-820954,2177225,8550082,-15114165 },
-  { -18473302,16596775,-381660,15663611,22860960,15585581,-27844109,-3582739,-23260460,-8428588 },
-  { -32480551,15707275,-8205912,-5652081,29464558,2713815,-22725137,15860482,-21902570,1494193 },
- },
- {
-  { -19562091,-14087393,-25583872,-9299552,13127842,759709,21923482,16529112,8742704,12967017 },
-  { -28464899,1553205,32536856,-10473729,-24691605,-406174,-8914625,-2933896,-29903758,15553883 },
-  { 21877909,3230008,9881174,10539357,-4797115,2841332,11543572,14513274,19375923,-12647961 },
- },
- {
-  { 8832269,-14495485,13253511,5137575,5037871,4078777,24880818,-6222716,2862653,9455043 },
-  { 29306751,5123106,20245049,-14149889,9592566,8447059,-2077124,-2990080,15511449,4789663 },
-  { -20679756,7004547,8824831,-9434977,-4045704,-3750736,-5754762,108893,23513200,16652362 },
- },
-},
-{
- {
-  { -33256173,4144782,-4476029,-6579123,10770039,-7155542,-6650416,-12936300,-18319198,10212860 },
-  { 2756081,8598110,7383731,-6859892,22312759,-1105012,21179801,2600940,-9988298,-12506466 },
-  { -24645692,13317462,-30449259,-15653928,21365574,-10869657,11344424,864440,-2499677,-16710063 },
- },
- {
-  { -26432803,6148329,-17184412,-14474154,18782929,-275997,-22561534,211300,2719757,4940997 },
-  { -1323882,3911313,-6948744,14759765,-30027150,7851207,21690126,8518463,26699843,5276295 },
-  { -13149873,-6429067,9396249,365013,24703301,-10488939,1321586,149635,-15452774,7159369 },
- },
- {
-  { 9987780,-3404759,17507962,9505530,9731535,-2165514,22356009,8312176,22477218,-8403385 },
-  { 18155857,-16504990,19744716,9006923,15154154,-10538976,24256460,-4864995,-22548173,9334109 },
-  { 2986088,-4911893,10776628,-3473844,10620590,-7083203,-21413845,14253545,-22587149,536906 },
- },
- {
-  { 4377756,8115836,24567078,15495314,11625074,13064599,7390551,10589625,10838060,-15420424 },
-  { -19342404,867880,9277171,-3218459,-14431572,-1986443,19295826,-15796950,6378260,699185 },
-  { 7895026,4057113,-7081772,-13077756,-17886831,-323126,-716039,15693155,-5045064,-13373962 },
- },
- {
-  { -7737563,-5869402,-14566319,-7406919,11385654,13201616,31730678,-10962840,-3918636,-9669325 },
-  { 10188286,-15770834,-7336361,13427543,22223443,14896287,30743455,7116568,-21786507,5427593 },
-  { 696102,13206899,27047647,-10632082,15285305,-9853179,10798490,-4578720,19236243,12477404 },
- },
- {
-  { -11229439,11243796,-17054270,-8040865,-788228,-8167967,-3897669,11180504,-23169516,7733644 },
-  { 17800790,-14036179,-27000429,-11766671,23887827,3149671,23466177,-10538171,10322027,15313801 },
-  { 26246234,11968874,32263343,-5468728,6830755,-13323031,-15794704,-101982,-24449242,10890804 },
- },
- {
-  { -31365647,10271363,-12660625,-6267268,16690207,-13062544,-14982212,16484931,25180797,-5334884 },
-  { -586574,10376444,-32586414,-11286356,19801893,10997610,2276632,9482883,316878,13820577 },
-  { -9882808,-4510367,-2115506,16457136,-11100081,11674996,30756178,-7515054,30696930,-3712849 },
- },
- {
-  { 32988917,-9603412,12499366,7910787,-10617257,-11931514,-7342816,-9985397,-32349517,7392473 },
-  { -8855661,15927861,9866406,-3649411,-2396914,-16655781,-30409476,-9134995,25112947,-2926644 },
-  { -2504044,-436966,25621774,-5678772,15085042,-5479877,-24884878,-13526194,5537438,-13914319 },
- },
-},
-{
- {
-  { -11225584,2320285,-9584280,10149187,-33444663,5808648,-14876251,-1729667,31234590,6090599 },
-  { -9633316,116426,26083934,2897444,-6364437,-2688086,609721,15878753,-6970405,-9034768 },
-  { -27757857,247744,-15194774,-9002551,23288161,-10011936,-23869595,6503646,20650474,1804084 },
- },
- {
-  { -27589786,15456424,8972517,8469608,15640622,4439847,3121995,-10329713,27842616,-202328 },
-  { -15306973,2839644,22530074,10026331,4602058,5048462,28248656,5031932,-11375082,12714369 },
-  { 20807691,-7270825,29286141,11421711,-27876523,-13868230,-21227475,1035546,-19733229,12796920 },
- },
- {
-  { 12076899,-14301286,-8785001,-11848922,-25012791,16400684,-17591495,-12899438,3480665,-15182815 },
-  { -32361549,5457597,28548107,7833186,7303070,-11953545,-24363064,-15921875,-33374054,2771025 },
-  { -21389266,421932,26597266,6860826,22486084,-6737172,-17137485,-4210226,-24552282,15673397 },
- },
- {
-  { -20184622,2338216,19788685,-9620956,-4001265,-8740893,-20271184,4733254,3727144,-12934448 },
-  { 6120119,814863,-11794402,-622716,6812205,-15747771,2019594,7975683,31123697,-10958981 },
-  { 30069250,-11435332,30434654,2958439,18399564,-976289,12296869,9204260,-16432438,9648165 },
- },
- {
-  { 32705432,-1550977,30705658,7451065,-11805606,9631813,3305266,5248604,-26008332,-11377501 },
-  { 17219865,2375039,-31570947,-5575615,-19459679,9219903,294711,15298639,2662509,-16297073 },
-  { -1172927,-7558695,-4366770,-4287744,-21346413,-8434326,32087529,-1222777,32247248,-14389861 },
- },
- {
-  { 14312628,1221556,17395390,-8700143,-4945741,-8684635,-28197744,-9637817,-16027623,-13378845 },
-  { -1428825,-9678990,-9235681,6549687,-7383069,-468664,23046502,9803137,17597934,2346211 },
-  { 18510800,15337574,26171504,981392,-22241552,7827556,-23491134,-11323352,3059833,-11782870 },
- },
- {
-  { 10141598,6082907,17829293,-1947643,9830092,13613136,-25556636,-5544586,-33502212,3592096 },
-  { 33114168,-15889352,-26525686,-13343397,33076705,8716171,1151462,1521897,-982665,-6837803 },
-  { -32939165,-4255815,23947181,-324178,-33072974,-12305637,-16637686,3891704,26353178,693168 },
- },
- {
-  { 30374239,1595580,-16884039,13186931,4600344,406904,9585294,-400668,31375464,14369965 },
-  { -14370654,-7772529,1510301,6434173,-18784789,-6262728,32732230,-13108839,17901441,16011505 },
-  { 18171223,-11934626,-12500402,15197122,-11038147,-15230035,-19172240,-16046376,8764035,12309598 },
- },
-},
-{
- {
-  { 5975908,-5243188,-19459362,-9681747,-11541277,14015782,-23665757,1228319,17544096,-10593782 },
-  { 5811932,-1715293,3442887,-2269310,-18367348,-8359541,-18044043,-15410127,-5565381,12348900 },
-  { -31399660,11407555,25755363,6891399,-3256938,14872274,-24849353,8141295,-10632534,-585479 },
- },
- {
-  { -12675304,694026,-5076145,13300344,14015258,-14451394,-9698672,-11329050,30944593,1130208 },
-  { 8247766,-6710942,-26562381,-7709309,-14401939,-14648910,4652152,2488540,23550156,-271232 },
-  { 17294316,-3788438,7026748,15626851,22990044,113481,2267737,-5908146,-408818,-137719 },
- },
- {
-  { 16091085,-16253926,18599252,7340678,2137637,-1221657,-3364161,14550936,3260525,-7166271 },
-  { -4910104,-13332887,18550887,10864893,-16459325,-7291596,-23028869,-13204905,-12748722,2701326 },
-  { -8574695,16099415,4629974,-16340524,-20786213,-6005432,-10018363,9276971,11329923,1862132 },
- },
- {
-  { 14763076,-15903608,-30918270,3689867,3511892,10313526,-21951088,12219231,-9037963,-940300 },
-  { 8894987,-3446094,6150753,3013931,301220,15693451,-31981216,-2909717,-15438168,11595570 },
-  { 15214962,3537601,-26238722,-14058872,4418657,-15230761,13947276,10730794,-13489462,-4363670 },
- },
- {
-  { -2538306,7682793,32759013,263109,-29984731,-7955452,-22332124,-10188635,977108,699994 },
-  { -12466472,4195084,-9211532,550904,-15565337,12917920,19118110,-439841,-30534533,-14337913 },
-  { 31788461,-14507657,4799989,7372237,8808585,-14747943,9408237,-10051775,12493932,-5409317 },
- },
- {
-  { -25680606,5260744,-19235809,-6284470,-3695942,16566087,27218280,2607121,29375955,6024730 },
-  { 842132,-2794693,-4763381,-8722815,26332018,-12405641,11831880,6985184,-9940361,2854096 },
-  { -4847262,-7969331,2516242,-5847713,9695691,-7221186,16512645,960770,12121869,16648078 },
- },
- {
-  { -15218652,14667096,-13336229,2013717,30598287,-464137,-31504922,-7882064,20237806,2838411 },
-  { -19288047,4453152,15298546,-16178388,22115043,-15972604,12544294,-13470457,1068881,-12499905 },
-  { -9558883,-16518835,33238498,13506958,30505848,-1114596,-8486907,-2630053,12521378,4845654 },
- },
- {
-  { -28198521,10744108,-2958380,10199664,7759311,-13088600,3409348,-873400,-6482306,-12885870 },
-  { -23561822,6230156,-20382013,10655314,-24040585,-11621172,10477734,-1240216,-3113227,13974498 },
-  { 12966261,15550616,-32038948,-1615346,21025980,-629444,5642325,7188737,18895762,12629579 },
- },
-},
-{
- {
-  { 14741879,-14946887,22177208,-11721237,1279741,8058600,11758140,789443,32195181,3895677 },
-  { 10758205,15755439,-4509950,9243698,-4879422,6879879,-2204575,-3566119,-8982069,4429647 },
-  { -2453894,15725973,-20436342,-10410672,-5803908,-11040220,-7135870,-11642895,18047436,-15281743 },
- },
- {
-  { -25173001,-11307165,29759956,11776784,-22262383,-15820455,10993114,-12850837,-17620701,-9408468 },
-  { 21987233,700364,-24505048,14972008,-7774265,-5718395,32155026,2581431,-29958985,8773375 },
-  { -25568350,454463,-13211935,16126715,25240068,8594567,20656846,12017935,-7874389,-13920155 },
- },
- {
-  { 6028182,6263078,-31011806,-11301710,-818919,2461772,-31841174,-5468042,-1721788,-2776725 },
-  { -12278994,16624277,987579,-5922598,32908203,1248608,7719845,-4166698,28408820,6816612 },
-  { -10358094,-8237829,19549651,-12169222,22082623,16147817,20613181,13982702,-10339570,5067943 },
- },
- {
-  { -30505967,-3821767,12074681,13582412,-19877972,2443951,-19719286,12746132,5331210,-10105944 },
-  { 30528811,3601899,-1957090,4619785,-27361822,-15436388,24180793,-12570394,27679908,-1648928 },
-  { 9402404,-13957065,32834043,10838634,-26580150,-13237195,26653274,-8685565,22611444,-12715406 },
- },
- {
-  { 22190590,1118029,22736441,15130463,-30460692,-5991321,19189625,-4648942,4854859,6622139 },
-  { -8310738,-2953450,-8262579,-3388049,-10401731,-271929,13424426,-3567227,26404409,13001963 },
-  { -31241838,-15415700,-2994250,8939346,11562230,-12840670,-26064365,-11621720,-15405155,11020693 },
- },
- {
-  { 1866042,-7949489,-7898649,-10301010,12483315,13477547,3175636,-12424163,28761762,1406734 },
-  { -448555,-1777666,13018551,3194501,-9580420,-11161737,24760585,-4347088,25577411,-13378680 },
-  { -24290378,4759345,-690653,-1852816,2066747,10693769,-29595790,9884936,-9368926,4745410 },
- },
- {
-  { -9141284,6049714,-19531061,-4341411,-31260798,9944276,-15462008,-11311852,10931924,-11931931 },
-  { -16561513,14112680,-8012645,4817318,-8040464,-11414606,-22853429,10856641,-20470770,13434654 },
-  { 22759489,-10073434,-16766264,-1871422,13637442,-10168091,1765144,-12654326,28445307,-5364710 },
- },
- {
-  { 29875063,12493613,2795536,-3786330,1710620,15181182,-10195717,-8788675,9074234,1167180 },
-  { -26205683,11014233,-9842651,-2635485,-26908120,7532294,-18716888,-9535498,3843903,9367684 },
-  { -10969595,-6403711,9591134,9582310,11349256,108879,16235123,8601684,-139197,4242895 },
- },
-},
-{
- {
-  { 22092954,-13191123,-2042793,-11968512,32186753,-11517388,-6574341,2470660,-27417366,16625501 },
-  { -11057722,3042016,13770083,-9257922,584236,-544855,-7770857,2602725,-27351616,14247413 },
-  { 6314175,-10264892,-32772502,15957557,-10157730,168750,-8618807,14290061,27108877,-1180880 },
- },
- {
-  { -8586597,-7170966,13241782,10960156,-32991015,-13794596,33547976,-11058889,-27148451,981874 },
-  { 22833440,9293594,-32649448,-13618667,-9136966,14756819,-22928859,-13970780,-10479804,-16197962 },
-  { -7768587,3326786,-28111797,10783824,19178761,14905060,22680049,13906969,-15933690,3797899 },
- },
- {
-  { 21721356,-4212746,-12206123,9310182,-3882239,-13653110,23740224,-2709232,20491983,-8042152 },
-  { 9209270,-15135055,-13256557,-6167798,-731016,15289673,25947805,15286587,30997318,-6703063 },
-  { 7392032,16618386,23946583,-8039892,-13265164,-1533858,-14197445,-2321576,17649998,-250080 },
- },
- {
-  { -9301088,-14193827,30609526,-3049543,-25175069,-1283752,-15241566,-9525724,-2233253,7662146 },
-  { -17558673,1763594,-33114336,15908610,-30040870,-12174295,7335080,-8472199,-3174674,3440183 },
-  { -19889700,-5977008,-24111293,-9688870,10799743,-16571957,40450,-4431835,4862400,1133 },
- },
- {
-  { -32856209,-7873957,-5422389,14860950,-16319031,7956142,7258061,311861,-30594991,-7379421 },
-  { -3773428,-1565936,28985340,7499440,24445838,9325937,29727763,16527196,18278453,15405622 },
-  { -4381906,8508652,-19898366,-3674424,-5984453,15149970,-13313598,843523,-21875062,13626197 },
- },
- {
-  { 2281448,-13487055,-10915418,-2609910,1879358,16164207,-10783882,3953792,13340839,15928663 },
-  { 31727126,-7179855,-18437503,-8283652,2875793,-16390330,-25269894,-7014826,-23452306,5964753 },
-  { 4100420,-5959452,-17179337,6017714,-18705837,12227141,-26684835,11344144,2538215,-7570755 },
- },
- {
-  { -9433605,6123113,11159803,-2156608,30016280,14966241,-20474983,1485421,-629256,-15958862 },
-  { -26804558,4260919,11851389,9658551,-32017107,16367492,-20205425,-13191288,11659922,-11115118 },
-  { 26180396,10015009,-30844224,-8581293,5418197,9480663,2231568,-10170080,33100372,-1306171 },
- },
- {
-  { 15121113,-5201871,-10389905,15427821,-27509937,-15992507,21670947,4486675,-5931810,-14466380 },
-  { 16166486,-9483733,-11104130,6023908,-31926798,-1364923,2340060,-16254968,-10735770,-10039824 },
-  { 28042865,-3557089,-12126526,12259706,-3717498,-6945899,6766453,-8689599,18036436,5803270 },
- },
-},
-{
- {
-  { -817581,6763912,11803561,1585585,10958447,-2671165,23855391,4598332,-6159431,-14117438 },
-  { -31031306,-14256194,17332029,-2383520,31312682,-5967183,696309,50292,-20095739,11763584 },
-  { -594563,-2514283,-32234153,12643980,12650761,14811489,665117,-12613632,-19773211,-10713562 },
- },
- {
-  { 30464590,-11262872,-4127476,-12734478,19835327,-7105613,-24396175,2075773,-17020157,992471 },
-  { 18357185,-6994433,7766382,16342475,-29324918,411174,14578841,8080033,-11574335,-10601610 },
-  { 19598397,10334610,12555054,2555664,18821899,-10339780,21873263,16014234,26224780,16452269 },
- },
- {
-  { -30223925,5145196,5944548,16385966,3976735,2009897,-11377804,-7618186,-20533829,3698650 },
-  { 14187449,3448569,-10636236,-10810935,-22663880,-3433596,7268410,-10890444,27394301,12015369 },
-  { 19695761,16087646,28032085,12999827,6817792,11427614,20244189,-1312777,-13259127,-3402461 },
- },
- {
-  { 30860103,12735208,-1888245,-4699734,-16974906,2256940,-8166013,12298312,-8550524,-10393462 },
-  { -5719826,-11245325,-1910649,15569035,26642876,-7587760,-5789354,-15118654,-4976164,12651793 },
-  { -2848395,9953421,11531313,-5282879,26895123,-12697089,-13118820,-16517902,9768698,-2533218 },
- },
- {
-  { -24719459,1894651,-287698,-4704085,15348719,-8156530,32767513,12765450,4940095,10678226 },
-  { 18860224,15980149,-18987240,-1562570,-26233012,-11071856,-7843882,13944024,-24372348,16582019 },
-  { -15504260,4970268,-29893044,4175593,-20993212,-2199756,-11704054,15444560,-11003761,7989037 },
- },
- {
-  { 31490452,5568061,-2412803,2182383,-32336847,4531686,-32078269,6200206,-19686113,-14800171 },
-  { -17308668,-15879940,-31522777,-2831,-32887382,16375549,8680158,-16371713,28550068,-6857132 },
-  { -28126887,-5688091,16837845,-1820458,-6850681,12700016,-30039981,4364038,1155602,5988841 },
- },
- {
-  { 21890435,-13272907,-12624011,12154349,-7831873,15300496,23148983,-4470481,24618407,8283181 },
-  { -33136107,-10512751,9975416,6841041,-31559793,16356536,3070187,-7025928,1466169,10740210 },
-  { -1509399,-15488185,-13503385,-10655916,32799044,909394,-13938903,-5779719,-32164649,-15327040 },
- },
- {
-  { 3960823,-14267803,-28026090,-15918051,-19404858,13146868,15567327,951507,-3260321,-573935 },
-  { 24740841,5052253,-30094131,8961361,25877428,6165135,-24368180,14397372,-7380369,-6144105 },
-  { -28888365,3510803,-28103278,-1158478,-11238128,-10631454,-15441463,-14453128,-1625486,-6494814 },
- },
-},
-{
- {
-  { 793299,-9230478,8836302,-6235707,-27360908,-2369593,33152843,-4885251,-9906200,-621852 },
-  { 5666233,525582,20782575,-8038419,-24538499,14657740,16099374,1468826,-6171428,-15186581 },
-  { -4859255,-3779343,-2917758,-6748019,7778750,11688288,-30404353,-9871238,-1558923,-9863646 },
- },
- {
-  { 10896332,-7719704,824275,472601,-19460308,3009587,25248958,14783338,-30581476,-15757844 },
-  { 10566929,12612572,-31944212,11118703,-12633376,12362879,21752402,8822496,24003793,14264025 },
-  { 27713862,-7355973,-11008240,9227530,27050101,2504721,23886875,-13117525,13958495,-5732453 },
- },
- {
-  { -23481610,4867226,-27247128,3900521,29838369,-8212291,-31889399,-10041781,7340521,-15410068 },
-  { 4646514,-8011124,-22766023,-11532654,23184553,8566613,31366726,-1381061,-15066784,-10375192 },
-  { -17270517,12723032,-16993061,14878794,21619651,-6197576,27584817,3093888,-8843694,3849921 },
- },
- {
-  { -9064912,2103172,25561640,-15125738,-5239824,9582958,32477045,-9017955,5002294,-15550259 },
-  { -12057553,-11177906,21115585,-13365155,8808712,-12030708,16489530,13378448,-25845716,12741426 },
-  { -5946367,10645103,-30911586,15390284,-3286982,-7118677,24306472,15852464,28834118,-7646072 },
- },
- {
-  { -17335748,-9107057,-24531279,9434953,-8472084,-583362,-13090771,455841,20461858,5491305 },
-  { 13669248,-16095482,-12481974,-10203039,-14569770,-11893198,-24995986,11293807,-28588204,-9421832 },
-  { 28497928,6272777,-33022994,14470570,8906179,-1225630,18504674,-14165166,29867745,-8795943 },
- },
- {
-  { -16207023,13517196,-27799630,-13697798,24009064,-6373891,-6367600,-13175392,22853429,-4012011 },
-  { 24191378,16712145,-13931797,15217831,14542237,1646131,18603514,-11037887,12876623,-2112447 },
-  { 17902668,4518229,-411702,-2829247,26878217,5258055,-12860753,608397,16031844,3723494 },
- },
- {
-  { -28632773,12763728,-20446446,7577504,33001348,-13017745,17558842,-7872890,23896954,-4314245 },
-  { -20005381,-12011952,31520464,605201,2543521,5991821,-2945064,7229064,-9919646,-8826859 },
-  { 28816045,298879,-28165016,-15920938,19000928,-1665890,-12680833,-2949325,-18051778,-2082915 },
- },
- {
-  { 16000882,-344896,3493092,-11447198,-29504595,-13159789,12577740,16041268,-19715240,7847707 },
-  { 10151868,10572098,27312476,7922682,14825339,4723128,-32855931,-6519018,-10020567,3852848 },
-  { -11430470,15697596,-21121557,-4420647,5386314,15063598,16514493,-15932110,29330899,-15076224 },
- },
-},
-{
- {
-  { -25499735,-4378794,-15222908,-6901211,16615731,2051784,3303702,15490,-27548796,12314391 },
-  { 15683520,-6003043,18109120,-9980648,15337968,-5997823,-16717435,15921866,16103996,-3731215 },
-  { -23169824,-10781249,13588192,-1628807,-3798557,-1074929,-19273607,5402699,-29815713,-9841101 },
- },
- {
-  { 23190676,2384583,-32714340,3462154,-29903655,-1529132,-11266856,8911517,-25205859,2739713 },
-  { 21374101,-3554250,-33524649,9874411,15377179,11831242,-33529904,6134907,4931255,11987849 },
-  { -7732,-2978858,-16223486,7277597,105524,-322051,-31480539,13861388,-30076310,10117930 },
- },
- {
-  { -29501170,-10744872,-26163768,13051539,-25625564,5089643,-6325503,6704079,12890019,15728940 },
-  { -21972360,-11771379,-951059,-4418840,14704840,2695116,903376,-10428139,12885167,8311031 },
-  { -17516482,5352194,10384213,-13811658,7506451,13453191,26423267,4384730,1888765,-5435404 },
- },
- {
-  { -25817338,-3107312,-13494599,-3182506,30896459,-13921729,-32251644,-12707869,-19464434,-3340243 },
-  { -23607977,-2665774,-526091,4651136,5765089,4618330,6092245,14845197,17151279,-9854116 },
-  { -24830458,-12733720,-15165978,10367250,-29530908,-265356,22825805,-7087279,-16866484,16176525 },
- },
- {
-  { -23583256,6564961,20063689,3798228,-4740178,7359225,2006182,-10363426,-28746253,-10197509 },
-  { -10626600,-4486402,-13320562,-5125317,3432136,-6393229,23632037,-1940610,32808310,1099883 },
-  { 15030977,5768825,-27451236,-2887299,-6427378,-15361371,-15277896,-6809350,2051441,-15225865 },
- },
- {
-  { -3362323,-7239372,7517890,9824992,23555850,295369,5148398,-14154188,-22686354,16633660 },
-  { 4577086,-16752288,13249841,-15304328,19958763,-14537274,18559670,-10759549,8402478,-9864273 },
-  { -28406330,-1051581,-26790155,-907698,-17212414,-11030789,9453451,-14980072,17983010,9967138 },
- },
- {
-  { -25762494,6524722,26585488,9969270,24709298,1220360,-1677990,7806337,17507396,3651560 },
-  { -10420457,-4118111,14584639,15971087,-15768321,8861010,26556809,-5574557,-18553322,-11357135 },
-  { 2839101,14284142,4029895,3472686,14402957,12689363,-26642121,8459447,-5605463,-7621941 },
- },
- {
-  { -4839289,-3535444,9744961,2871048,25113978,3187018,-25110813,-849066,17258084,-7977739 },
-  { 18164541,-10595176,-17154882,-1542417,19237078,-9745295,23357533,-15217008,26908270,12150756 },
-  { -30264870,-7647865,5112249,-7036672,-1499807,-6974257,43168,-5537701,-32302074,16215819 },
- },
-},
-{
- {
-  { -6898905,9824394,-12304779,-4401089,-31397141,-6276835,32574489,12532905,-7503072,-8675347 },
-  { -27343522,-16515468,-27151524,-10722951,946346,16291093,254968,7168080,21676107,-1943028 },
-  { 21260961,-8424752,-16831886,-11920822,-23677961,3968121,-3651949,-6215466,-3556191,-7913075 },
- },
- {
-  { 16544754,13250366,-16804428,15546242,-4583003,12757258,-2462308,-8680336,-18907032,-9662799 },
-  { -2415239,-15577728,18312303,4964443,-15272530,-12653564,26820651,16690659,25459437,-4564609 },
-  { -25144690,11425020,28423002,-11020557,-6144921,-15826224,9142795,-2391602,-6432418,-1644817 },
- },
- {
-  { -23104652,6253476,16964147,-3768872,-25113972,-12296437,-27457225,-16344658,6335692,7249989 },
-  { -30333227,13979675,7503222,-12368314,-11956721,-4621693,-30272269,2682242,25993170,-12478523 },
-  { 4364628,5930691,32304656,-10044554,-8054781,15091131,22857016,-10598955,31820368,15075278 },
- },
- {
-  { 31879134,-8918693,17258761,90626,-8041836,-4917709,24162788,-9650886,-17970238,12833045 },
-  { 19073683,14851414,-24403169,-11860168,7625278,11091125,-19619190,2074449,-9413939,14905377 },
-  { 24483667,-11935567,-2518866,-11547418,-1553130,15355506,-25282080,9253129,27628530,-7555480 },
- },
- {
-  { 17597607,8340603,19355617,552187,26198470,-3176583,4593324,-9157582,-14110875,15297016 },
-  { 510886,14337390,-31785257,16638632,6328095,2713355,-20217417,-11864220,8683221,2921426 },
-  { 18606791,11874196,27155355,-5281482,-24031742,6265446,-25178240,-1278924,4674690,13890525 },
- },
- {
-  { 13609624,13069022,-27372361,-13055908,24360586,9592974,14977157,9835105,4389687,288396 },
-  { 9922506,-519394,13613107,5883594,-18758345,-434263,-12304062,8317628,23388070,16052080 },
-  { 12720016,11937594,-31970060,-5028689,26900120,8561328,-20155687,-11632979,-14754271,-10812892 },
- },
- {
-  { 15961858,14150409,26716931,-665832,-22794328,13603569,11829573,7467844,-28822128,929275 },
-  { 11038231,-11582396,-27310482,-7316562,-10498527,-16307831,-23479533,-9371869,-21393143,2465074 },
-  { 20017163,-4323226,27915242,1529148,12396362,15675764,13817261,-9658066,2463391,-4622140 },
- },
- {
-  { -16358878,-12663911,-12065183,4996454,-1256422,1073572,9583558,12851107,4003896,12673717 },
-  { -1731589,-15155870,-3262930,16143082,19294135,13385325,14741514,-9103726,7903886,2348101 },
-  { 24536016,-16515207,12715592,-3862155,1511293,10047386,-3842346,-7129159,-28377538,10048127 },
- },
-},
-{
- {
-  { -12622226,-6204820,30718825,2591312,-10617028,12192840,18873298,-7297090,-32297756,15221632 },
-  { -26478122,-11103864,11546244,-1852483,9180880,7656409,-21343950,2095755,29769758,6593415 },
-  { -31994208,-2907461,4176912,3264766,12538965,-868111,26312345,-6118678,30958054,8292160 },
- },
- {
-  { 31429822,-13959116,29173532,15632448,12174511,-2760094,32808831,3977186,26143136,-3148876 },
-  { 22648901,1402143,-22799984,13746059,7936347,365344,-8668633,-1674433,-3758243,-2304625 },
-  { -15491917,8012313,-2514730,-12702462,-23965846,-10254029,-1612713,-1535569,-16664475,8194478 },
- },
- {
-  { 27338066,-7507420,-7414224,10140405,-19026427,-6589889,27277191,8855376,28572286,3005164 },
-  { 26287124,4821776,25476601,-4145903,-3764513,-15788984,-18008582,1182479,-26094821,-13079595 },
-  { -7171154,3178080,23970071,6201893,-17195577,-4489192,-21876275,-13982627,32208683,-1198248 },
- },
- {
-  { -16657702,2817643,-10286362,14811298,6024667,13349505,-27315504,-10497842,-27672585,-11539858 },
-  { 15941029,-9405932,-21367050,8062055,31876073,-238629,-15278393,-1444429,15397331,-4130193 },
-  { 8934485,-13485467,-23286397,-13423241,-32446090,14047986,31170398,-1441021,-27505566,15087184 },
- },
- {
-  { -18357243,-2156491,24524913,-16677868,15520427,-6360776,-15502406,11461896,16788528,-5868942 },
-  { -1947386,16013773,21750665,3714552,-17401782,-16055433,-3770287,-10323320,31322514,-11615635 },
-  { 21426655,-5650218,-13648287,-5347537,-28812189,-4920970,-18275391,-14621414,13040862,-12112948 },
- },
- {
-  { 11293895,12478086,-27136401,15083750,-29307421,14748872,14555558,-13417103,1613711,4896935 },
-  { -25894883,15323294,-8489791,-8057900,25967126,-13425460,2825960,-4897045,-23971776,-11267415 },
-  { -15924766,-5229880,-17443532,6410664,3622847,10243618,20615400,12405433,-23753030,-8436416 },
- },
- {
-  { -7091295,12556208,-20191352,9025187,-17072479,4333801,4378436,2432030,23097949,-566018 },
-  { 4565804,-16025654,20084412,-7842817,1724999,189254,24767264,10103221,-18512313,2424778 },
-  { 366633,-11976806,8173090,-6890119,30788634,5745705,-7168678,1344109,-3642553,12412659 },
- },
- {
-  { -24001791,7690286,14929416,-168257,-32210835,-13412986,24162697,-15326504,-3141501,11179385 },
-  { 18289522,-14724954,8056945,16430056,-21729724,7842514,-6001441,-1486897,-18684645,-11443503 },
-  { 476239,6601091,-6152790,-9723375,17503545,-4863900,27672959,13403813,11052904,5219329 },
- },
-},
-{
- {
-  { 20678546,-8375738,-32671898,8849123,-5009758,14574752,31186971,-3973730,9014762,-8579056 },
-  { -13644050,-10350239,-15962508,5075808,-1514661,-11534600,-33102500,9160280,8473550,-3256838 },
-  { 24900749,14435722,17209120,-15292541,-22592275,9878983,-7689309,-16335821,-24568481,11788948 },
- },
- {
-  { -3118155,-11395194,-13802089,14797441,9652448,-6845904,-20037437,10410733,-24568470,-1458691 },
-  { -15659161,16736706,-22467150,10215878,-9097177,7563911,11871841,-12505194,-18513325,8464118 },
-  { -23400612,8348507,-14585951,-861714,-3950205,-6373419,14325289,8628612,33313881,-8370517 },
- },
- {
-  { -20186973,-4967935,22367356,5271547,-1097117,-4788838,-24805667,-10236854,-8940735,-5818269 },
-  { -6948785,-1795212,-32625683,-16021179,32635414,-7374245,15989197,-12838188,28358192,-4253904 },
-  { -23561781,-2799059,-32351682,-1661963,-9147719,10429267,-16637684,4072016,-5351664,5596589 },
- },
- {
-  { -28236598,-3390048,12312896,6213178,3117142,16078565,29266239,2557221,1768301,15373193 },
-  { -7243358,-3246960,-4593467,-7553353,-127927,-912245,-1090902,-4504991,-24660491,3442910 },
-  { -30210571,5124043,14181784,8197961,18964734,-11939093,22597931,7176455,-18585478,13365930 },
- },
- {
-  { -7877390,-1499958,8324673,4690079,6261860,890446,24538107,-8570186,-9689599,-3031667 },
-  { 25008904,-10771599,-4305031,-9638010,16265036,15721635,683793,-11823784,15723479,-15163481 },
-  { -9660625,12374379,-27006999,-7026148,-7724114,-12314514,11879682,5400171,519526,-1235876 },
- },
- {
-  { 22258397,-16332233,-7869817,14613016,-22520255,-2950923,-20353881,7315967,16648397,7605640 },
-  { -8081308,-8464597,-8223311,9719710,19259459,-15348212,23994942,-5281555,-9468848,4763278 },
-  { -21699244,9220969,-15730624,1084137,-25476107,-2852390,31088447,-7764523,-11356529,728112 },
- },
- {
-  { 26047220,-11751471,-6900323,-16521798,24092068,9158119,-4273545,-12555558,-29365436,-5498272 },
-  { 17510331,-322857,5854289,8403524,17133918,-3112612,-28111007,12327945,10750447,10014012 },
-  { -10312768,3936952,9156313,-8897683,16498692,-994647,-27481051,-666732,3424691,7540221 },
- },
- {
-  { 30322361,-6964110,11361005,-4143317,7433304,4989748,-7071422,-16317219,-9244265,15258046 },
-  { 13054562,-2779497,19155474,469045,-12482797,4566042,5631406,2711395,1062915,-5136345 },
-  { -19240248,-11254599,-29509029,-7499965,-5835763,13005411,-6066489,12194497,32960380,1459310 },
- },
-},
-{
- {
-  { 19852034,7027924,23669353,10020366,8586503,-6657907,394197,-6101885,18638003,-11174937 },
-  { 31395534,15098109,26581030,8030562,-16527914,-5007134,9012486,-7584354,-6643087,-5442636 },
-  { -9192165,-2347377,-1997099,4529534,25766844,607986,-13222,9677543,-32294889,-6456008 },
- },
- {
-  { -2444496,-149937,29348902,8186665,1873760,12489863,-30934579,-7839692,-7852844,-8138429 },
-  { -15236356,-15433509,7766470,746860,26346930,-10221762,-27333451,10754588,-9431476,5203576 },
-  { 31834314,14135496,-770007,5159118,20917671,-16768096,-7467973,-7337524,31809243,7347066 },
- },
- {
-  { -9606723,-11874240,20414459,13033986,13716524,-11691881,19797970,-12211255,15192876,-2087490 },
-  { -12663563,-2181719,1168162,-3804809,26747877,-14138091,10609330,12694420,33473243,-13382104 },
-  { 33184999,11180355,15832085,-11385430,-1633671,225884,15089336,-11023903,-6135662,14480053 },
- },
- {
-  { 31308717,-5619998,31030840,-1897099,15674547,-6582883,5496208,13685227,27595050,8737275 },
-  { -20318852,-15150239,10933843,-16178022,8335352,-7546022,-31008351,-12610604,26498114,66511 },
-  { 22644454,-8761729,-16671776,4884562,-3105614,-13559366,30540766,-4286747,-13327787,-7515095 },
- },
- {
-  { -28017847,9834845,18617207,-2681312,-3401956,-13307506,8205540,13585437,-17127465,15115439 },
-  { 23711543,-672915,31206561,-8362711,6164647,-9709987,-33535882,-1426096,8236921,16492939 },
-  { -23910559,-13515526,-26299483,-4503841,25005590,-7687270,19574902,10071562,6708380,-6222424 },
- },
- {
-  { 2101391,-4930054,19702731,2367575,-15427167,1047675,5301017,9328700,29955601,-11678310 },
-  { 3096359,9271816,-21620864,-15521844,-14847996,-7592937,-25892142,-12635595,-9917575,6216608 },
-  { -32615849,338663,-25195611,2510422,-29213566,-13820213,24822830,-6146567,-26767480,7525079 },
- },
- {
-  { -23066649,-13985623,16133487,-7896178,-3389565,778788,-910336,-2782495,-19386633,11994101 },
-  { 21691500,-13624626,-641331,-14367021,3285881,-3483596,-25064666,9718258,-7477437,13381418 },
-  { 18445390,-4202236,14979846,11622458,-1727110,-3582980,23111648,-6375247,28535282,15779576 },
- },
- {
-  { 30098053,3089662,-9234387,16662135,-21306940,11308411,-14068454,12021730,9955285,-16303356 },
-  { 9734894,-14576830,-7473633,-9138735,2060392,11313496,-18426029,9924399,20194861,13380996 },
-  { -26378102,-7965207,-22167821,15789297,-18055342,-6168792,-1984914,15707771,26342023,10146099 },
- },
-},
-{
- {
-  { -26016874,-219943,21339191,-41388,19745256,-2878700,-29637280,2227040,21612326,-545728 },
-  { -13077387,1184228,23562814,-5970442,-20351244,-6348714,25764461,12243797,-20856566,11649658 },
-  { -10031494,11262626,27384172,2271902,26947504,-15997771,39944,6114064,33514190,2333242 },
- },
- {
-  { -21433588,-12421821,8119782,7219913,-21830522,-9016134,-6679750,-12670638,24350578,-13450001 },
-  { -4116307,-11271533,-23886186,4843615,-30088339,690623,-31536088,-10406836,8317860,12352766 },
-  { 18200138,-14475911,-33087759,-2696619,-23702521,-9102511,-23552096,-2287550,20712163,6719373 },
- },
- {
-  { 26656208,6075253,-7858556,1886072,-28344043,4262326,11117530,-3763210,26224235,-3297458 },
-  { -17168938,-14854097,-3395676,-16369877,-19954045,14050420,21728352,9493610,18620611,-16428628 },
-  { -13323321,13325349,11432106,5964811,18609221,6062965,-5269471,-9725556,-30701573,-16479657 },
- },
- {
-  { -23860538,-11233159,26961357,1640861,-32413112,-16737940,12248509,-5240639,13735342,1934062 },
-  { 25089769,6742589,17081145,-13406266,21909293,-16067981,-15136294,-3765346,-21277997,5473616 },
-  { 31883677,-7961101,1083432,-11572403,22828471,13290673,-7125085,12469656,29111212,-5451014 },
- },
- {
-  { 24244947,-15050407,-26262976,2791540,-14997599,16666678,24367466,6388839,-10295587,452383 },
-  { -25640782,-3417841,5217916,16224624,19987036,-4082269,-24236251,-5915248,15766062,8407814 },
-  { -20406999,13990231,15495425,16395525,5377168,15166495,-8917023,-4388953,-8067909,2276718 },
- },
- {
-  { 30157918,12924066,-17712050,9245753,19895028,3368142,-23827587,5096219,22740376,-7303417 },
-  { 2041139,-14256350,7783687,13876377,-25946985,-13352459,24051124,13742383,-15637599,13295222 },
-  { 33338237,-8505733,12532113,7977527,9106186,-1715251,-17720195,-4612972,-4451357,-14669444 },
- },
- {
-  { -20045281,5454097,-14346548,6447146,28862071,1883651,-2469266,-4141880,7770569,9620597 },
-  { 23208068,7979712,33071466,8149229,1758231,-10834995,30945528,-1694323,-33502340,-14767970 },
-  { 1439958,-16270480,-1079989,-793782,4625402,10647766,-5043801,1220118,30494170,-11440799 },
- },
- {
-  { -5037580,-13028295,-2970559,-3061767,15640974,-6701666,-26739026,926050,-1684339,-13333647 },
-  { 13908495,-3549272,30919928,-6273825,-21521863,7989039,9021034,9078865,3353509,4033511 },
-  { -29663431,-15113610,32259991,-344482,24295849,-12912123,23161163,8839127,27485041,7356032 },
- },
-},
-{
- {
-  { 9661027,705443,11980065,-5370154,-1628543,14661173,-6346142,2625015,28431036,-16771834 },
-  { -23839233,-8311415,-25945511,7480958,-17681669,-8354183,-22545972,14150565,15970762,4099461 },
-  { 29262576,16756590,26350592,-8793563,8529671,-11208050,13617293,-9937143,11465739,8317062 },
- },
- {
-  { -25493081,-6962928,32500200,-9419051,-23038724,-2302222,14898637,3848455,20969334,-5157516 },
-  { -20384450,-14347713,-18336405,13884722,-33039454,2842114,-21610826,-3649888,11177095,14989547 },
-  { -24496721,-11716016,16959896,2278463,12066309,10137771,13515641,2581286,-28487508,9930240 },
- },
- {
-  { -17751622,-2097826,16544300,-13009300,-15914807,-14949081,18345767,-13403753,16291481,-5314038 },
-  { -33229194,2553288,32678213,9875984,8534129,6889387,-9676774,6957617,4368891,9788741 },
-  { 16660756,7281060,-10830758,12911820,20108584,-8101676,-21722536,-8613148,16250552,-11111103 },
- },
- {
-  { -19765507,2390526,-16551031,14161980,1905286,6414907,4689584,10604807,-30190403,4782747 },
-  { -1354539,14736941,-7367442,-13292886,7710542,-14155590,-9981571,4383045,22546403,437323 },
-  { 31665577,-12180464,-16186830,1491339,-18368625,3294682,27343084,2786261,-30633590,-14097016 },
- },
- {
-  { -14467279,-683715,-33374107,7448552,19294360,14334329,-19690631,2355319,-19284671,-6114373 },
-  { 15121312,-15796162,6377020,-6031361,-10798111,-12957845,18952177,15496498,-29380133,11754228 },
-  { -2637277,-13483075,8488727,-14303896,12728761,-1622493,7141596,11724556,22761615,-10134141 },
- },
- {
-  { 16918416,11729663,-18083579,3022987,-31015732,-13339659,-28741185,-12227393,32851222,11717399 },
-  { 11166634,7338049,-6722523,4531520,-29468672,-7302055,31474879,3483633,-1193175,-4030831 },
-  { -185635,9921305,31456609,-13536438,-12013818,13348923,33142652,6546660,-19985279,-3948376 },
- },
- {
-  { -32460596,11266712,-11197107,-7899103,31703694,3855903,-8537131,-12833048,-30772034,-15486313 },
-  { -18006477,12709068,3991746,-6479188,-21491523,-10550425,-31135347,-16049879,10928917,3011958 },
-  { -6957757,-15594337,31696059,334240,29576716,14796075,-30831056,-12805180,18008031,10258577 },
- },
- {
-  { -22448644,15655569,7018479,-4410003,-30314266,-1201591,-1853465,1367120,25127874,6671743 },
-  { 29701166,-14373934,-10878120,9279288,-17568,13127210,21382910,11042292,25838796,4642684 },
-  { -20430234,14955537,-24126347,8124619,-5369288,-5990470,30468147,-13900640,18423289,4177476 },
- },
-},
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/base2.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/base2.h
deleted file mode 100644
index 8c53844..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/base2.h
+++ /dev/null
@@ -1,40 +0,0 @@
- {
-  { 25967493,-14356035,29566456,3660896,-12694345,4014787,27544626,-11754271,-6079156,2047605 },
-  { -12545711,934262,-2722910,3049990,-727428,9406986,12720692,5043384,19500929,-15469378 },
-  { -8738181,4489570,9688441,-14785194,10184609,-12363380,29287919,11864899,-24514362,-4438546 },
- },
- {
-  { 15636291,-9688557,24204773,-7912398,616977,-16685262,27787600,-14772189,28944400,-1550024 },
-  { 16568933,4717097,-11556148,-1102322,15682896,-11807043,16354577,-11775962,7689662,11199574 },
-  { 30464156,-5976125,-11779434,-15670865,23220365,15915852,7512774,10017326,-17749093,-9920357 },
- },
- {
-  { 10861363,11473154,27284546,1981175,-30064349,12577861,32867885,14515107,-15438304,10819380 },
-  { 4708026,6336745,20377586,9066809,-11272109,6594696,-25653668,12483688,-12668491,5581306 },
-  { 19563160,16186464,-29386857,4097519,10237984,-4348115,28542350,13850243,-23678021,-15815942 },
- },
- {
-  { 5153746,9909285,1723747,-2777874,30523605,5516873,19480852,5230134,-23952439,-15175766 },
-  { -30269007,-3463509,7665486,10083793,28475525,1649722,20654025,16520125,30598449,7715701 },
-  { 28881845,14381568,9657904,3680757,-20181635,7843316,-31400660,1370708,29794553,-1409300 },
- },
- {
-  { -22518993,-6692182,14201702,-8745502,-23510406,8844726,18474211,-1361450,-13062696,13821877 },
-  { -6455177,-7839871,3374702,-4740862,-27098617,-10571707,31655028,-7212327,18853322,-14220951 },
-  { 4566830,-12963868,-28974889,-12240689,-7602672,-2830569,-8514358,-10431137,2207753,-3209784 },
- },
- {
-  { -25154831,-4185821,29681144,7868801,-6854661,-9423865,-12437364,-663000,-31111463,-16132436 },
-  { 25576264,-2703214,7349804,-11814844,16472782,9300885,3844789,15725684,171356,6466918 },
-  { 23103977,13316479,9739013,-16149481,817875,-15038942,8965339,-14088058,-30714912,16193877 },
- },
- {
-  { -33521811,3180713,-2394130,14003687,-16903474,-16270840,17238398,4729455,-18074513,9256800 },
-  { -25182317,-4174131,32336398,5036987,-21236817,11360617,22616405,9761698,-19827198,630305 },
-  { -13720693,2639453,-24237460,-7406481,9494427,-5774029,-6554551,-15960994,-2449256,-14291300 },
- },
- {
-  { -3151181,-5046075,9282714,6866145,-31907062,-863023,-18940575,15033784,25105118,-7894876 },
-  { -24326370,15950226,-31801215,-14592823,-11662737,-5090925,1573892,-2625887,2198790,-15804619 },
-  { -3099351,10324967,-2241613,7453183,-5446979,-2735503,-13812022,-16236442,-32461234,-12290683 },
- },
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/d.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/d.h
deleted file mode 100644
index e25f578..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/d.h
+++ /dev/null
@@ -1 +0,0 @@
--10913610,13857413,-15372611,6949391,114729,-8787816,-6275908,-3247719,-18696448,-12055116
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/d2.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/d2.h
deleted file mode 100644
index 01aaec7..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/d2.h
+++ /dev/null
@@ -1 +0,0 @@
--21827239,-5839606,-30745221,13898782,229458,15978800,-12551817,-6495438,29715968,9444199
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe.h
deleted file mode 100644
index 60c308b..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe.h
+++ /dev/null
@@ -1,56 +0,0 @@
-#ifndef FE_H
-#define FE_H
-
-#include "crypto_int32.h"
-
-typedef crypto_int32 fe[10];
-
-/*
-fe means field element.
-Here the field is \Z/(2^255-19).
-An element t, entries t[0]...t[9], represents the integer
-t[0]+2^26 t[1]+2^51 t[2]+2^77 t[3]+2^102 t[4]+...+2^230 t[9].
-Bounds on each t[i] vary depending on context.
-*/
-
-#define fe_frombytes crypto_sign_ed25519_ref10_fe_frombytes
-#define fe_tobytes crypto_sign_ed25519_ref10_fe_tobytes
-#define fe_copy crypto_sign_ed25519_ref10_fe_copy
-#define fe_isnonzero crypto_sign_ed25519_ref10_fe_isnonzero
-#define fe_isnegative crypto_sign_ed25519_ref10_fe_isnegative
-#define fe_0 crypto_sign_ed25519_ref10_fe_0
-#define fe_1 crypto_sign_ed25519_ref10_fe_1
-#define fe_cswap crypto_sign_ed25519_ref10_fe_cswap
-#define fe_cmov crypto_sign_ed25519_ref10_fe_cmov
-#define fe_add crypto_sign_ed25519_ref10_fe_add
-#define fe_sub crypto_sign_ed25519_ref10_fe_sub
-#define fe_neg crypto_sign_ed25519_ref10_fe_neg
-#define fe_mul crypto_sign_ed25519_ref10_fe_mul
-#define fe_sq crypto_sign_ed25519_ref10_fe_sq
-#define fe_sq2 crypto_sign_ed25519_ref10_fe_sq2
-#define fe_mul121666 crypto_sign_ed25519_ref10_fe_mul121666
-#define fe_invert crypto_sign_ed25519_ref10_fe_invert
-#define fe_pow22523 crypto_sign_ed25519_ref10_fe_pow22523
-
-extern void fe_frombytes(fe,const unsigned char *);
-extern void fe_tobytes(unsigned char *,const fe);
-
-extern void fe_copy(fe,const fe);
-extern int fe_isnonzero(const fe);
-extern int fe_isnegative(const fe);
-extern void fe_0(fe);
-extern void fe_1(fe);
-extern void fe_cswap(fe,fe,unsigned int);
-extern void fe_cmov(fe,const fe,unsigned int);
-
-extern void fe_add(fe,const fe,const fe);
-extern void fe_sub(fe,const fe,const fe);
-extern void fe_neg(fe,const fe);
-extern void fe_mul(fe,const fe,const fe);
-extern void fe_sq(fe,const fe);
-extern void fe_sq2(fe,const fe);
-extern void fe_mul121666(fe,const fe);
-extern void fe_invert(fe,const fe);
-extern void fe_pow22523(fe,const fe);
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_0.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_0.c
deleted file mode 100644
index ec879d7..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_0.c
+++ /dev/null
@@ -1,19 +0,0 @@
-#include "fe.h"
-
-/*
-h = 0
-*/
-
-void fe_0(fe h)
-{
-  h[0] = 0;
-  h[1] = 0;
-  h[2] = 0;
-  h[3] = 0;
-  h[4] = 0;
-  h[5] = 0;
-  h[6] = 0;
-  h[7] = 0;
-  h[8] = 0;
-  h[9] = 0;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_1.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_1.c
deleted file mode 100644
index 8cf7784..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_1.c
+++ /dev/null
@@ -1,19 +0,0 @@
-#include "fe.h"
-
-/*
-h = 1
-*/
-
-void fe_1(fe h)
-{
-  h[0] = 1;
-  h[1] = 0;
-  h[2] = 0;
-  h[3] = 0;
-  h[4] = 0;
-  h[5] = 0;
-  h[6] = 0;
-  h[7] = 0;
-  h[8] = 0;
-  h[9] = 0;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_add.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_add.c
deleted file mode 100644
index e6a81da..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_add.c
+++ /dev/null
@@ -1,57 +0,0 @@
-#include "fe.h"
-
-/*
-h = f + g
-Can overlap h with f or g.
-
-Preconditions:
-   |f| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-   |g| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-*/
-
-void fe_add(fe h,const fe f,const fe g)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 h0 = f0 + g0;
-  crypto_int32 h1 = f1 + g1;
-  crypto_int32 h2 = f2 + g2;
-  crypto_int32 h3 = f3 + g3;
-  crypto_int32 h4 = f4 + g4;
-  crypto_int32 h5 = f5 + g5;
-  crypto_int32 h6 = f6 + g6;
-  crypto_int32 h7 = f7 + g7;
-  crypto_int32 h8 = f8 + g8;
-  crypto_int32 h9 = f9 + g9;
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_cmov.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_cmov.c
deleted file mode 100644
index 252adb9..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_cmov.c
+++ /dev/null
@@ -1,63 +0,0 @@
-#include "fe.h"
-
-/*
-Replace (f,g) with (g,g) if b == 1;
-replace (f,g) with (f,g) if b == 0.
-
-Preconditions: b in {0,1}.
-*/
-
-void fe_cmov(fe f,const fe g,unsigned int b)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 x0 = f0 ^ g0;
-  crypto_int32 x1 = f1 ^ g1;
-  crypto_int32 x2 = f2 ^ g2;
-  crypto_int32 x3 = f3 ^ g3;
-  crypto_int32 x4 = f4 ^ g4;
-  crypto_int32 x5 = f5 ^ g5;
-  crypto_int32 x6 = f6 ^ g6;
-  crypto_int32 x7 = f7 ^ g7;
-  crypto_int32 x8 = f8 ^ g8;
-  crypto_int32 x9 = f9 ^ g9;
-  b = (unsigned int) (- (int) b);
-  x0 &= b;
-  x1 &= b;
-  x2 &= b;
-  x3 &= b;
-  x4 &= b;
-  x5 &= b;
-  x6 &= b;
-  x7 &= b;
-  x8 &= b;
-  x9 &= b;
-  f[0] = f0 ^ x0;
-  f[1] = f1 ^ x1;
-  f[2] = f2 ^ x2;
-  f[3] = f3 ^ x3;
-  f[4] = f4 ^ x4;
-  f[5] = f5 ^ x5;
-  f[6] = f6 ^ x6;
-  f[7] = f7 ^ x7;
-  f[8] = f8 ^ x8;
-  f[9] = f9 ^ x9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_copy.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_copy.c
deleted file mode 100644
index 9c5bf86..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_copy.c
+++ /dev/null
@@ -1,29 +0,0 @@
-#include "fe.h"
-
-/*
-h = f
-*/
-
-void fe_copy(fe h,const fe f)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  h[0] = f0;
-  h[1] = f1;
-  h[2] = f2;
-  h[3] = f3;
-  h[4] = f4;
-  h[5] = f5;
-  h[6] = f6;
-  h[7] = f7;
-  h[8] = f8;
-  h[9] = f9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_frombytes.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_frombytes.c
deleted file mode 100644
index 233f0dc..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_frombytes.c
+++ /dev/null
@@ -1,73 +0,0 @@
-#include "fe.h"
-#include "crypto_int64.h"
-#include "crypto_uint64.h"
-
-static crypto_uint64 load_3(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  return result;
-}
-
-static crypto_uint64 load_4(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  result |= ((crypto_uint64) in[3]) << 24;
-  return result;
-}
-
-/*
-Ignores top bit of h.
-*/
-
-void fe_frombytes(fe h,const unsigned char *s)
-{
-  crypto_int64 h0 = load_4(s);
-  crypto_int64 h1 = load_3(s + 4) << 6;
-  crypto_int64 h2 = load_3(s + 7) << 5;
-  crypto_int64 h3 = load_3(s + 10) << 3;
-  crypto_int64 h4 = load_3(s + 13) << 2;
-  crypto_int64 h5 = load_4(s + 16);
-  crypto_int64 h6 = load_3(s + 20) << 7;
-  crypto_int64 h7 = load_3(s + 23) << 5;
-  crypto_int64 h8 = load_3(s + 26) << 4;
-  crypto_int64 h9 = (load_3(s + 29) & 8388607) << 2;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  carry9 = (h9 + (crypto_int64) (1L << 24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-  carry1 = (h1 + (crypto_int64) (1L << 24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry3 = (h3 + (crypto_int64) (1L << 24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry5 = (h5 + (crypto_int64) (1L << 24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-  carry7 = (h7 + (crypto_int64) (1L << 24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-
-  carry0 = (h0 + (crypto_int64) (1L << 25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry2 = (h2 + (crypto_int64) (1L << 25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry4 = (h4 + (crypto_int64) (1L << 25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry6 = (h6 + (crypto_int64) (1L << 25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-  carry8 = (h8 + (crypto_int64) (1L << 25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-
-  h[0] = (crypto_int32) h0;
-  h[1] = (crypto_int32) h1;
-  h[2] = (crypto_int32) h2;
-  h[3] = (crypto_int32) h3;
-  h[4] = (crypto_int32) h4;
-  h[5] = (crypto_int32) h5;
-  h[6] = (crypto_int32) h6;
-  h[7] = (crypto_int32) h7;
-  h[8] = (crypto_int32) h8;
-  h[9] = (crypto_int32) h9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_invert.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_invert.c
deleted file mode 100644
index bcfdb8f..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_invert.c
+++ /dev/null
@@ -1,14 +0,0 @@
-#include "fe.h"
-
-void fe_invert(fe out,const fe z)
-{
-  fe t0;
-  fe t1;
-  fe t2;
-  fe t3;
-  int i;
-
-#include "pow225521.h"
-
-  return;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_isnegative.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_isnegative.c
deleted file mode 100644
index 3b2c8b8..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_isnegative.c
+++ /dev/null
@@ -1,16 +0,0 @@
-#include "fe.h"
-
-/*
-return 1 if f is in {1,3,5,...,q-2}
-return 0 if f is in {0,2,4,...,q-1}
-
-Preconditions:
-   |f| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-*/
-
-int fe_isnegative(const fe f)
-{
-  unsigned char s[32];
-  fe_tobytes(s,f);
-  return s[0] & 1;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_isnonzero.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_isnonzero.c
deleted file mode 100644
index db29c25..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_isnonzero.c
+++ /dev/null
@@ -1,19 +0,0 @@
-#include "fe.h"
-#include "crypto_verify_32.h"
-
-/*
-return 1 if f == 0
-return 0 if f != 0
-
-Preconditions:
-   |f| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-*/
-
-static unsigned char zero[32];
-
-int fe_isnonzero(const fe f)
-{
-  unsigned char s[32];
-  fe_tobytes(s,f);
-  return crypto_verify_32(s,zero);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_mul.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_mul.c
deleted file mode 100644
index e2a604b..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_mul.c
+++ /dev/null
@@ -1,253 +0,0 @@
-#include "fe.h"
-#include "crypto_int64.h"
-
-/*
-h = f * g
-Can overlap h with f or g.
-
-Preconditions:
-   |f| bounded by 1.65*2^26,1.65*2^25,1.65*2^26,1.65*2^25,etc.
-   |g| bounded by 1.65*2^26,1.65*2^25,1.65*2^26,1.65*2^25,etc.
-
-Postconditions:
-   |h| bounded by 1.01*2^25,1.01*2^24,1.01*2^25,1.01*2^24,etc.
-*/
-
-/*
-Notes on implementation strategy:
-
-Using schoolbook multiplication.
-Karatsuba would save a little in some cost models.
-
-Most multiplications by 2 and 19 are 32-bit precomputations;
-cheaper than 64-bit postcomputations.
-
-There is one remaining multiplication by 19 in the carry chain;
-one *19 precomputation can be merged into this,
-but the resulting data flow is considerably less clean.
-
-There are 12 carries below.
-10 of them are 2-way parallelizable and vectorizable.
-Can get away with 11 carries, but then data flow is much deeper.
-
-With tighter constraints on inputs can squeeze carries into int32.
-*/
-
-void fe_mul(fe h,const fe f,const fe g)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 g1_19 = 19 * g1; /* 1.959375*2^29 */
-  crypto_int32 g2_19 = 19 * g2; /* 1.959375*2^30; still ok */
-  crypto_int32 g3_19 = 19 * g3;
-  crypto_int32 g4_19 = 19 * g4;
-  crypto_int32 g5_19 = 19 * g5;
-  crypto_int32 g6_19 = 19 * g6;
-  crypto_int32 g7_19 = 19 * g7;
-  crypto_int32 g8_19 = 19 * g8;
-  crypto_int32 g9_19 = 19 * g9;
-  crypto_int32 f1_2 = 2 * f1;
-  crypto_int32 f3_2 = 2 * f3;
-  crypto_int32 f5_2 = 2 * f5;
-  crypto_int32 f7_2 = 2 * f7;
-  crypto_int32 f9_2 = 2 * f9;
-  crypto_int64 f0g0    = f0   * (crypto_int64) g0;
-  crypto_int64 f0g1    = f0   * (crypto_int64) g1;
-  crypto_int64 f0g2    = f0   * (crypto_int64) g2;
-  crypto_int64 f0g3    = f0   * (crypto_int64) g3;
-  crypto_int64 f0g4    = f0   * (crypto_int64) g4;
-  crypto_int64 f0g5    = f0   * (crypto_int64) g5;
-  crypto_int64 f0g6    = f0   * (crypto_int64) g6;
-  crypto_int64 f0g7    = f0   * (crypto_int64) g7;
-  crypto_int64 f0g8    = f0   * (crypto_int64) g8;
-  crypto_int64 f0g9    = f0   * (crypto_int64) g9;
-  crypto_int64 f1g0    = f1   * (crypto_int64) g0;
-  crypto_int64 f1g1_2  = f1_2 * (crypto_int64) g1;
-  crypto_int64 f1g2    = f1   * (crypto_int64) g2;
-  crypto_int64 f1g3_2  = f1_2 * (crypto_int64) g3;
-  crypto_int64 f1g4    = f1   * (crypto_int64) g4;
-  crypto_int64 f1g5_2  = f1_2 * (crypto_int64) g5;
-  crypto_int64 f1g6    = f1   * (crypto_int64) g6;
-  crypto_int64 f1g7_2  = f1_2 * (crypto_int64) g7;
-  crypto_int64 f1g8    = f1   * (crypto_int64) g8;
-  crypto_int64 f1g9_38 = f1_2 * (crypto_int64) g9_19;
-  crypto_int64 f2g0    = f2   * (crypto_int64) g0;
-  crypto_int64 f2g1    = f2   * (crypto_int64) g1;
-  crypto_int64 f2g2    = f2   * (crypto_int64) g2;
-  crypto_int64 f2g3    = f2   * (crypto_int64) g3;
-  crypto_int64 f2g4    = f2   * (crypto_int64) g4;
-  crypto_int64 f2g5    = f2   * (crypto_int64) g5;
-  crypto_int64 f2g6    = f2   * (crypto_int64) g6;
-  crypto_int64 f2g7    = f2   * (crypto_int64) g7;
-  crypto_int64 f2g8_19 = f2   * (crypto_int64) g8_19;
-  crypto_int64 f2g9_19 = f2   * (crypto_int64) g9_19;
-  crypto_int64 f3g0    = f3   * (crypto_int64) g0;
-  crypto_int64 f3g1_2  = f3_2 * (crypto_int64) g1;
-  crypto_int64 f3g2    = f3   * (crypto_int64) g2;
-  crypto_int64 f3g3_2  = f3_2 * (crypto_int64) g3;
-  crypto_int64 f3g4    = f3   * (crypto_int64) g4;
-  crypto_int64 f3g5_2  = f3_2 * (crypto_int64) g5;
-  crypto_int64 f3g6    = f3   * (crypto_int64) g6;
-  crypto_int64 f3g7_38 = f3_2 * (crypto_int64) g7_19;
-  crypto_int64 f3g8_19 = f3   * (crypto_int64) g8_19;
-  crypto_int64 f3g9_38 = f3_2 * (crypto_int64) g9_19;
-  crypto_int64 f4g0    = f4   * (crypto_int64) g0;
-  crypto_int64 f4g1    = f4   * (crypto_int64) g1;
-  crypto_int64 f4g2    = f4   * (crypto_int64) g2;
-  crypto_int64 f4g3    = f4   * (crypto_int64) g3;
-  crypto_int64 f4g4    = f4   * (crypto_int64) g4;
-  crypto_int64 f4g5    = f4   * (crypto_int64) g5;
-  crypto_int64 f4g6_19 = f4   * (crypto_int64) g6_19;
-  crypto_int64 f4g7_19 = f4   * (crypto_int64) g7_19;
-  crypto_int64 f4g8_19 = f4   * (crypto_int64) g8_19;
-  crypto_int64 f4g9_19 = f4   * (crypto_int64) g9_19;
-  crypto_int64 f5g0    = f5   * (crypto_int64) g0;
-  crypto_int64 f5g1_2  = f5_2 * (crypto_int64) g1;
-  crypto_int64 f5g2    = f5   * (crypto_int64) g2;
-  crypto_int64 f5g3_2  = f5_2 * (crypto_int64) g3;
-  crypto_int64 f5g4    = f5   * (crypto_int64) g4;
-  crypto_int64 f5g5_38 = f5_2 * (crypto_int64) g5_19;
-  crypto_int64 f5g6_19 = f5   * (crypto_int64) g6_19;
-  crypto_int64 f5g7_38 = f5_2 * (crypto_int64) g7_19;
-  crypto_int64 f5g8_19 = f5   * (crypto_int64) g8_19;
-  crypto_int64 f5g9_38 = f5_2 * (crypto_int64) g9_19;
-  crypto_int64 f6g0    = f6   * (crypto_int64) g0;
-  crypto_int64 f6g1    = f6   * (crypto_int64) g1;
-  crypto_int64 f6g2    = f6   * (crypto_int64) g2;
-  crypto_int64 f6g3    = f6   * (crypto_int64) g3;
-  crypto_int64 f6g4_19 = f6   * (crypto_int64) g4_19;
-  crypto_int64 f6g5_19 = f6   * (crypto_int64) g5_19;
-  crypto_int64 f6g6_19 = f6   * (crypto_int64) g6_19;
-  crypto_int64 f6g7_19 = f6   * (crypto_int64) g7_19;
-  crypto_int64 f6g8_19 = f6   * (crypto_int64) g8_19;
-  crypto_int64 f6g9_19 = f6   * (crypto_int64) g9_19;
-  crypto_int64 f7g0    = f7   * (crypto_int64) g0;
-  crypto_int64 f7g1_2  = f7_2 * (crypto_int64) g1;
-  crypto_int64 f7g2    = f7   * (crypto_int64) g2;
-  crypto_int64 f7g3_38 = f7_2 * (crypto_int64) g3_19;
-  crypto_int64 f7g4_19 = f7   * (crypto_int64) g4_19;
-  crypto_int64 f7g5_38 = f7_2 * (crypto_int64) g5_19;
-  crypto_int64 f7g6_19 = f7   * (crypto_int64) g6_19;
-  crypto_int64 f7g7_38 = f7_2 * (crypto_int64) g7_19;
-  crypto_int64 f7g8_19 = f7   * (crypto_int64) g8_19;
-  crypto_int64 f7g9_38 = f7_2 * (crypto_int64) g9_19;
-  crypto_int64 f8g0    = f8   * (crypto_int64) g0;
-  crypto_int64 f8g1    = f8   * (crypto_int64) g1;
-  crypto_int64 f8g2_19 = f8   * (crypto_int64) g2_19;
-  crypto_int64 f8g3_19 = f8   * (crypto_int64) g3_19;
-  crypto_int64 f8g4_19 = f8   * (crypto_int64) g4_19;
-  crypto_int64 f8g5_19 = f8   * (crypto_int64) g5_19;
-  crypto_int64 f8g6_19 = f8   * (crypto_int64) g6_19;
-  crypto_int64 f8g7_19 = f8   * (crypto_int64) g7_19;
-  crypto_int64 f8g8_19 = f8   * (crypto_int64) g8_19;
-  crypto_int64 f8g9_19 = f8   * (crypto_int64) g9_19;
-  crypto_int64 f9g0    = f9   * (crypto_int64) g0;
-  crypto_int64 f9g1_38 = f9_2 * (crypto_int64) g1_19;
-  crypto_int64 f9g2_19 = f9   * (crypto_int64) g2_19;
-  crypto_int64 f9g3_38 = f9_2 * (crypto_int64) g3_19;
-  crypto_int64 f9g4_19 = f9   * (crypto_int64) g4_19;
-  crypto_int64 f9g5_38 = f9_2 * (crypto_int64) g5_19;
-  crypto_int64 f9g6_19 = f9   * (crypto_int64) g6_19;
-  crypto_int64 f9g7_38 = f9_2 * (crypto_int64) g7_19;
-  crypto_int64 f9g8_19 = f9   * (crypto_int64) g8_19;
-  crypto_int64 f9g9_38 = f9_2 * (crypto_int64) g9_19;
-  crypto_int64 h0 = f0g0+f1g9_38+f2g8_19+f3g7_38+f4g6_19+f5g5_38+f6g4_19+f7g3_38+f8g2_19+f9g1_38;
-  crypto_int64 h1 = f0g1+f1g0   +f2g9_19+f3g8_19+f4g7_19+f5g6_19+f6g5_19+f7g4_19+f8g3_19+f9g2_19;
-  crypto_int64 h2 = f0g2+f1g1_2 +f2g0   +f3g9_38+f4g8_19+f5g7_38+f6g6_19+f7g5_38+f8g4_19+f9g3_38;
-  crypto_int64 h3 = f0g3+f1g2   +f2g1   +f3g0   +f4g9_19+f5g8_19+f6g7_19+f7g6_19+f8g5_19+f9g4_19;
-  crypto_int64 h4 = f0g4+f1g3_2 +f2g2   +f3g1_2 +f4g0   +f5g9_38+f6g8_19+f7g7_38+f8g6_19+f9g5_38;
-  crypto_int64 h5 = f0g5+f1g4   +f2g3   +f3g2   +f4g1   +f5g0   +f6g9_19+f7g8_19+f8g7_19+f9g6_19;
-  crypto_int64 h6 = f0g6+f1g5_2 +f2g4   +f3g3_2 +f4g2   +f5g1_2 +f6g0   +f7g9_38+f8g8_19+f9g7_38;
-  crypto_int64 h7 = f0g7+f1g6   +f2g5   +f3g4   +f4g3   +f5g2   +f6g1   +f7g0   +f8g9_19+f9g8_19;
-  crypto_int64 h8 = f0g8+f1g7_2 +f2g6   +f3g5_2 +f4g4   +f5g3_2 +f6g2   +f7g1_2 +f8g0   +f9g9_38;
-  crypto_int64 h9 = f0g9+f1g8   +f2g7   +f3g6   +f4g5   +f5g4   +f6g3   +f7g2   +f8g1   +f9g0   ;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  /*
-  |h0| <= (1.65*1.65*2^52*(1+19+19+19+19)+1.65*1.65*2^50*(38+38+38+38+38))
-    i.e. |h0| <= 1.4*2^60; narrower ranges for h2, h4, h6, h8
-  |h1| <= (1.65*1.65*2^51*(1+1+19+19+19+19+19+19+19+19))
-    i.e. |h1| <= 1.7*2^59; narrower ranges for h3, h5, h7, h9
-  */
-
-  carry0 = (h0 + (crypto_int64) (1L << 25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry4 = (h4 + (crypto_int64) (1L << 25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  /* |h0| <= 2^25 */
-  /* |h4| <= 2^25 */
-  /* |h1| <= 1.71*2^59 */
-  /* |h5| <= 1.71*2^59 */
-
-  carry1 = (h1 + (crypto_int64) (1L << 24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry5 = (h5 + (crypto_int64) (1L << 24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-  /* |h1| <= 2^24; from now on fits into int32 */
-  /* |h5| <= 2^24; from now on fits into int32 */
-  /* |h2| <= 1.41*2^60 */
-  /* |h6| <= 1.41*2^60 */
-
-  carry2 = (h2 + (crypto_int64) (1L << 25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry6 = (h6 + (crypto_int64) (1L << 25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-  /* |h2| <= 2^25; from now on fits into int32 unchanged */
-  /* |h6| <= 2^25; from now on fits into int32 unchanged */
-  /* |h3| <= 1.71*2^59 */
-  /* |h7| <= 1.71*2^59 */
-
-  carry3 = (h3 + (crypto_int64) (1L << 24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry7 = (h7 + (crypto_int64) (1L << 24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-  /* |h3| <= 2^24; from now on fits into int32 unchanged */
-  /* |h7| <= 2^24; from now on fits into int32 unchanged */
-  /* |h4| <= 1.72*2^34 */
-  /* |h8| <= 1.41*2^60 */
-
-  carry4 = (h4 + (crypto_int64) (1L << 25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry8 = (h8 + (crypto_int64) (1L << 25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-  /* |h4| <= 2^25; from now on fits into int32 unchanged */
-  /* |h8| <= 2^25; from now on fits into int32 unchanged */
-  /* |h5| <= 1.01*2^24 */
-  /* |h9| <= 1.71*2^59 */
-
-  carry9 = (h9 + (crypto_int64) (1L << 24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-  /* |h9| <= 2^24; from now on fits into int32 unchanged */
-  /* |h0| <= 1.1*2^39 */
-
-  carry0 = (h0 + (crypto_int64) (1L << 25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  /* |h0| <= 2^25; from now on fits into int32 unchanged */
-  /* |h1| <= 1.01*2^24 */
-
-  h[0] = (crypto_int32) h0;
-  h[1] = (crypto_int32) h1;
-  h[2] = (crypto_int32) h2;
-  h[3] = (crypto_int32) h3;
-  h[4] = (crypto_int32) h4;
-  h[5] = (crypto_int32) h5;
-  h[6] = (crypto_int32) h6;
-  h[7] = (crypto_int32) h7;
-  h[8] = (crypto_int32) h8;
-  h[9] = (crypto_int32) h9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_neg.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_neg.c
deleted file mode 100644
index 2078ce5..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_neg.c
+++ /dev/null
@@ -1,45 +0,0 @@
-#include "fe.h"
-
-/*
-h = -f
-
-Preconditions:
-   |f| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-*/
-
-void fe_neg(fe h,const fe f)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 h0 = -f0;
-  crypto_int32 h1 = -f1;
-  crypto_int32 h2 = -f2;
-  crypto_int32 h3 = -f3;
-  crypto_int32 h4 = -f4;
-  crypto_int32 h5 = -f5;
-  crypto_int32 h6 = -f6;
-  crypto_int32 h7 = -f7;
-  crypto_int32 h8 = -f8;
-  crypto_int32 h9 = -f9;
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_pow22523.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_pow22523.c
deleted file mode 100644
index 56675a5..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_pow22523.c
+++ /dev/null
@@ -1,13 +0,0 @@
-#include "fe.h"
-
-void fe_pow22523(fe out,const fe z)
-{
-  fe t0;
-  fe t1;
-  fe t2;
-  int i;
-
-#include "pow22523.h"
-
-  return;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sq.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sq.c
deleted file mode 100644
index 5c5760c..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sq.c
+++ /dev/null
@@ -1,149 +0,0 @@
-#include "fe.h"
-#include "crypto_int64.h"
-
-/*
-h = f * f
-Can overlap h with f.
-
-Preconditions:
-   |f| bounded by 1.65*2^26,1.65*2^25,1.65*2^26,1.65*2^25,etc.
-
-Postconditions:
-   |h| bounded by 1.01*2^25,1.01*2^24,1.01*2^25,1.01*2^24,etc.
-*/
-
-/*
-See fe_mul.c for discussion of implementation strategy.
-*/
-
-void fe_sq(fe h,const fe f)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 f0_2 = 2 * f0;
-  crypto_int32 f1_2 = 2 * f1;
-  crypto_int32 f2_2 = 2 * f2;
-  crypto_int32 f3_2 = 2 * f3;
-  crypto_int32 f4_2 = 2 * f4;
-  crypto_int32 f5_2 = 2 * f5;
-  crypto_int32 f6_2 = 2 * f6;
-  crypto_int32 f7_2 = 2 * f7;
-  crypto_int32 f5_38 = 38 * f5; /* 1.959375*2^30 */
-  crypto_int32 f6_19 = 19 * f6; /* 1.959375*2^30 */
-  crypto_int32 f7_38 = 38 * f7; /* 1.959375*2^30 */
-  crypto_int32 f8_19 = 19 * f8; /* 1.959375*2^30 */
-  crypto_int32 f9_38 = 38 * f9; /* 1.959375*2^30 */
-  crypto_int64 f0f0    = f0   * (crypto_int64) f0;
-  crypto_int64 f0f1_2  = f0_2 * (crypto_int64) f1;
-  crypto_int64 f0f2_2  = f0_2 * (crypto_int64) f2;
-  crypto_int64 f0f3_2  = f0_2 * (crypto_int64) f3;
-  crypto_int64 f0f4_2  = f0_2 * (crypto_int64) f4;
-  crypto_int64 f0f5_2  = f0_2 * (crypto_int64) f5;
-  crypto_int64 f0f6_2  = f0_2 * (crypto_int64) f6;
-  crypto_int64 f0f7_2  = f0_2 * (crypto_int64) f7;
-  crypto_int64 f0f8_2  = f0_2 * (crypto_int64) f8;
-  crypto_int64 f0f9_2  = f0_2 * (crypto_int64) f9;
-  crypto_int64 f1f1_2  = f1_2 * (crypto_int64) f1;
-  crypto_int64 f1f2_2  = f1_2 * (crypto_int64) f2;
-  crypto_int64 f1f3_4  = f1_2 * (crypto_int64) f3_2;
-  crypto_int64 f1f4_2  = f1_2 * (crypto_int64) f4;
-  crypto_int64 f1f5_4  = f1_2 * (crypto_int64) f5_2;
-  crypto_int64 f1f6_2  = f1_2 * (crypto_int64) f6;
-  crypto_int64 f1f7_4  = f1_2 * (crypto_int64) f7_2;
-  crypto_int64 f1f8_2  = f1_2 * (crypto_int64) f8;
-  crypto_int64 f1f9_76 = f1_2 * (crypto_int64) f9_38;
-  crypto_int64 f2f2    = f2   * (crypto_int64) f2;
-  crypto_int64 f2f3_2  = f2_2 * (crypto_int64) f3;
-  crypto_int64 f2f4_2  = f2_2 * (crypto_int64) f4;
-  crypto_int64 f2f5_2  = f2_2 * (crypto_int64) f5;
-  crypto_int64 f2f6_2  = f2_2 * (crypto_int64) f6;
-  crypto_int64 f2f7_2  = f2_2 * (crypto_int64) f7;
-  crypto_int64 f2f8_38 = f2_2 * (crypto_int64) f8_19;
-  crypto_int64 f2f9_38 = f2   * (crypto_int64) f9_38;
-  crypto_int64 f3f3_2  = f3_2 * (crypto_int64) f3;
-  crypto_int64 f3f4_2  = f3_2 * (crypto_int64) f4;
-  crypto_int64 f3f5_4  = f3_2 * (crypto_int64) f5_2;
-  crypto_int64 f3f6_2  = f3_2 * (crypto_int64) f6;
-  crypto_int64 f3f7_76 = f3_2 * (crypto_int64) f7_38;
-  crypto_int64 f3f8_38 = f3_2 * (crypto_int64) f8_19;
-  crypto_int64 f3f9_76 = f3_2 * (crypto_int64) f9_38;
-  crypto_int64 f4f4    = f4   * (crypto_int64) f4;
-  crypto_int64 f4f5_2  = f4_2 * (crypto_int64) f5;
-  crypto_int64 f4f6_38 = f4_2 * (crypto_int64) f6_19;
-  crypto_int64 f4f7_38 = f4   * (crypto_int64) f7_38;
-  crypto_int64 f4f8_38 = f4_2 * (crypto_int64) f8_19;
-  crypto_int64 f4f9_38 = f4   * (crypto_int64) f9_38;
-  crypto_int64 f5f5_38 = f5   * (crypto_int64) f5_38;
-  crypto_int64 f5f6_38 = f5_2 * (crypto_int64) f6_19;
-  crypto_int64 f5f7_76 = f5_2 * (crypto_int64) f7_38;
-  crypto_int64 f5f8_38 = f5_2 * (crypto_int64) f8_19;
-  crypto_int64 f5f9_76 = f5_2 * (crypto_int64) f9_38;
-  crypto_int64 f6f6_19 = f6   * (crypto_int64) f6_19;
-  crypto_int64 f6f7_38 = f6   * (crypto_int64) f7_38;
-  crypto_int64 f6f8_38 = f6_2 * (crypto_int64) f8_19;
-  crypto_int64 f6f9_38 = f6   * (crypto_int64) f9_38;
-  crypto_int64 f7f7_38 = f7   * (crypto_int64) f7_38;
-  crypto_int64 f7f8_38 = f7_2 * (crypto_int64) f8_19;
-  crypto_int64 f7f9_76 = f7_2 * (crypto_int64) f9_38;
-  crypto_int64 f8f8_19 = f8   * (crypto_int64) f8_19;
-  crypto_int64 f8f9_38 = f8   * (crypto_int64) f9_38;
-  crypto_int64 f9f9_38 = f9   * (crypto_int64) f9_38;
-  crypto_int64 h0 = f0f0  +f1f9_76+f2f8_38+f3f7_76+f4f6_38+f5f5_38;
-  crypto_int64 h1 = f0f1_2+f2f9_38+f3f8_38+f4f7_38+f5f6_38;
-  crypto_int64 h2 = f0f2_2+f1f1_2 +f3f9_76+f4f8_38+f5f7_76+f6f6_19;
-  crypto_int64 h3 = f0f3_2+f1f2_2 +f4f9_38+f5f8_38+f6f7_38;
-  crypto_int64 h4 = f0f4_2+f1f3_4 +f2f2   +f5f9_76+f6f8_38+f7f7_38;
-  crypto_int64 h5 = f0f5_2+f1f4_2 +f2f3_2 +f6f9_38+f7f8_38;
-  crypto_int64 h6 = f0f6_2+f1f5_4 +f2f4_2 +f3f3_2 +f7f9_76+f8f8_19;
-  crypto_int64 h7 = f0f7_2+f1f6_2 +f2f5_2 +f3f4_2 +f8f9_38;
-  crypto_int64 h8 = f0f8_2+f1f7_4 +f2f6_2 +f3f5_4 +f4f4   +f9f9_38;
-  crypto_int64 h9 = f0f9_2+f1f8_2 +f2f7_2 +f3f6_2 +f4f5_2;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  carry0 = (h0 + (crypto_int64) (1L << 25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry4 = (h4 + (crypto_int64) (1L << 25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-
-  carry1 = (h1 + (crypto_int64) (1L << 24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry5 = (h5 + (crypto_int64) (1L << 24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-
-  carry2 = (h2 + (crypto_int64) (1L << 25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry6 = (h6 + (crypto_int64) (1L << 25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-
-  carry3 = (h3 + (crypto_int64) (1L << 24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry7 = (h7 + (crypto_int64) (1L << 24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-
-  carry4 = (h4 + (crypto_int64) (1L << 25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry8 = (h8 + (crypto_int64) (1L << 25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-
-  carry9 = (h9 + (crypto_int64) (1L << 24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-
-  carry0 = (h0 + (crypto_int64) (1L << 25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-
-  h[0] = (crypto_int32) h0;
-  h[1] = (crypto_int32) h1;
-  h[2] = (crypto_int32) h2;
-  h[3] = (crypto_int32) h3;
-  h[4] = (crypto_int32) h4;
-  h[5] = (crypto_int32) h5;
-  h[6] = (crypto_int32) h6;
-  h[7] = (crypto_int32) h7;
-  h[8] = (crypto_int32) h8;
-  h[9] = (crypto_int32) h9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sq2.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sq2.c
deleted file mode 100644
index 2b0dc3b..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sq2.c
+++ /dev/null
@@ -1,160 +0,0 @@
-#include "fe.h"
-#include "crypto_int64.h"
-
-/*
-h = 2 * f * f
-Can overlap h with f.
-
-Preconditions:
-   |f| bounded by 1.65*2^26,1.65*2^25,1.65*2^26,1.65*2^25,etc.
-
-Postconditions:
-   |h| bounded by 1.01*2^25,1.01*2^24,1.01*2^25,1.01*2^24,etc.
-*/
-
-/*
-See fe_mul.c for discussion of implementation strategy.
-*/
-
-void fe_sq2(fe h,const fe f)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 f0_2 = 2 * f0;
-  crypto_int32 f1_2 = 2 * f1;
-  crypto_int32 f2_2 = 2 * f2;
-  crypto_int32 f3_2 = 2 * f3;
-  crypto_int32 f4_2 = 2 * f4;
-  crypto_int32 f5_2 = 2 * f5;
-  crypto_int32 f6_2 = 2 * f6;
-  crypto_int32 f7_2 = 2 * f7;
-  crypto_int32 f5_38 = 38 * f5; /* 1.959375*2^30 */
-  crypto_int32 f6_19 = 19 * f6; /* 1.959375*2^30 */
-  crypto_int32 f7_38 = 38 * f7; /* 1.959375*2^30 */
-  crypto_int32 f8_19 = 19 * f8; /* 1.959375*2^30 */
-  crypto_int32 f9_38 = 38 * f9; /* 1.959375*2^30 */
-  crypto_int64 f0f0    = f0   * (crypto_int64) f0;
-  crypto_int64 f0f1_2  = f0_2 * (crypto_int64) f1;
-  crypto_int64 f0f2_2  = f0_2 * (crypto_int64) f2;
-  crypto_int64 f0f3_2  = f0_2 * (crypto_int64) f3;
-  crypto_int64 f0f4_2  = f0_2 * (crypto_int64) f4;
-  crypto_int64 f0f5_2  = f0_2 * (crypto_int64) f5;
-  crypto_int64 f0f6_2  = f0_2 * (crypto_int64) f6;
-  crypto_int64 f0f7_2  = f0_2 * (crypto_int64) f7;
-  crypto_int64 f0f8_2  = f0_2 * (crypto_int64) f8;
-  crypto_int64 f0f9_2  = f0_2 * (crypto_int64) f9;
-  crypto_int64 f1f1_2  = f1_2 * (crypto_int64) f1;
-  crypto_int64 f1f2_2  = f1_2 * (crypto_int64) f2;
-  crypto_int64 f1f3_4  = f1_2 * (crypto_int64) f3_2;
-  crypto_int64 f1f4_2  = f1_2 * (crypto_int64) f4;
-  crypto_int64 f1f5_4  = f1_2 * (crypto_int64) f5_2;
-  crypto_int64 f1f6_2  = f1_2 * (crypto_int64) f6;
-  crypto_int64 f1f7_4  = f1_2 * (crypto_int64) f7_2;
-  crypto_int64 f1f8_2  = f1_2 * (crypto_int64) f8;
-  crypto_int64 f1f9_76 = f1_2 * (crypto_int64) f9_38;
-  crypto_int64 f2f2    = f2   * (crypto_int64) f2;
-  crypto_int64 f2f3_2  = f2_2 * (crypto_int64) f3;
-  crypto_int64 f2f4_2  = f2_2 * (crypto_int64) f4;
-  crypto_int64 f2f5_2  = f2_2 * (crypto_int64) f5;
-  crypto_int64 f2f6_2  = f2_2 * (crypto_int64) f6;
-  crypto_int64 f2f7_2  = f2_2 * (crypto_int64) f7;
-  crypto_int64 f2f8_38 = f2_2 * (crypto_int64) f8_19;
-  crypto_int64 f2f9_38 = f2   * (crypto_int64) f9_38;
-  crypto_int64 f3f3_2  = f3_2 * (crypto_int64) f3;
-  crypto_int64 f3f4_2  = f3_2 * (crypto_int64) f4;
-  crypto_int64 f3f5_4  = f3_2 * (crypto_int64) f5_2;
-  crypto_int64 f3f6_2  = f3_2 * (crypto_int64) f6;
-  crypto_int64 f3f7_76 = f3_2 * (crypto_int64) f7_38;
-  crypto_int64 f3f8_38 = f3_2 * (crypto_int64) f8_19;
-  crypto_int64 f3f9_76 = f3_2 * (crypto_int64) f9_38;
-  crypto_int64 f4f4    = f4   * (crypto_int64) f4;
-  crypto_int64 f4f5_2  = f4_2 * (crypto_int64) f5;
-  crypto_int64 f4f6_38 = f4_2 * (crypto_int64) f6_19;
-  crypto_int64 f4f7_38 = f4   * (crypto_int64) f7_38;
-  crypto_int64 f4f8_38 = f4_2 * (crypto_int64) f8_19;
-  crypto_int64 f4f9_38 = f4   * (crypto_int64) f9_38;
-  crypto_int64 f5f5_38 = f5   * (crypto_int64) f5_38;
-  crypto_int64 f5f6_38 = f5_2 * (crypto_int64) f6_19;
-  crypto_int64 f5f7_76 = f5_2 * (crypto_int64) f7_38;
-  crypto_int64 f5f8_38 = f5_2 * (crypto_int64) f8_19;
-  crypto_int64 f5f9_76 = f5_2 * (crypto_int64) f9_38;
-  crypto_int64 f6f6_19 = f6   * (crypto_int64) f6_19;
-  crypto_int64 f6f7_38 = f6   * (crypto_int64) f7_38;
-  crypto_int64 f6f8_38 = f6_2 * (crypto_int64) f8_19;
-  crypto_int64 f6f9_38 = f6   * (crypto_int64) f9_38;
-  crypto_int64 f7f7_38 = f7   * (crypto_int64) f7_38;
-  crypto_int64 f7f8_38 = f7_2 * (crypto_int64) f8_19;
-  crypto_int64 f7f9_76 = f7_2 * (crypto_int64) f9_38;
-  crypto_int64 f8f8_19 = f8   * (crypto_int64) f8_19;
-  crypto_int64 f8f9_38 = f8   * (crypto_int64) f9_38;
-  crypto_int64 f9f9_38 = f9   * (crypto_int64) f9_38;
-  crypto_int64 h0 = f0f0  +f1f9_76+f2f8_38+f3f7_76+f4f6_38+f5f5_38;
-  crypto_int64 h1 = f0f1_2+f2f9_38+f3f8_38+f4f7_38+f5f6_38;
-  crypto_int64 h2 = f0f2_2+f1f1_2 +f3f9_76+f4f8_38+f5f7_76+f6f6_19;
-  crypto_int64 h3 = f0f3_2+f1f2_2 +f4f9_38+f5f8_38+f6f7_38;
-  crypto_int64 h4 = f0f4_2+f1f3_4 +f2f2   +f5f9_76+f6f8_38+f7f7_38;
-  crypto_int64 h5 = f0f5_2+f1f4_2 +f2f3_2 +f6f9_38+f7f8_38;
-  crypto_int64 h6 = f0f6_2+f1f5_4 +f2f4_2 +f3f3_2 +f7f9_76+f8f8_19;
-  crypto_int64 h7 = f0f7_2+f1f6_2 +f2f5_2 +f3f4_2 +f8f9_38;
-  crypto_int64 h8 = f0f8_2+f1f7_4 +f2f6_2 +f3f5_4 +f4f4   +f9f9_38;
-  crypto_int64 h9 = f0f9_2+f1f8_2 +f2f7_2 +f3f6_2 +f4f5_2;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-
-  h0 += h0;
-  h1 += h1;
-  h2 += h2;
-  h3 += h3;
-  h4 += h4;
-  h5 += h5;
-  h6 += h6;
-  h7 += h7;
-  h8 += h8;
-  h9 += h9;
-
-  carry0 = (h0 + (crypto_int64) (1L << 25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry4 = (h4 + (crypto_int64) (1L << 25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-
-  carry1 = (h1 + (crypto_int64) (1L << 24)) >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry5 = (h5 + (crypto_int64) (1L << 24)) >> 25; h6 += carry5; h5 -= carry5 << 25;
-
-  carry2 = (h2 + (crypto_int64) (1L << 25)) >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry6 = (h6 + (crypto_int64) (1L << 25)) >> 26; h7 += carry6; h6 -= carry6 << 26;
-
-  carry3 = (h3 + (crypto_int64) (1L << 24)) >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry7 = (h7 + (crypto_int64) (1L << 24)) >> 25; h8 += carry7; h7 -= carry7 << 25;
-
-  carry4 = (h4 + (crypto_int64) (1L << 25)) >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry8 = (h8 + (crypto_int64) (1L << 25)) >> 26; h9 += carry8; h8 -= carry8 << 26;
-
-  carry9 = (h9 + (crypto_int64) (1L << 24)) >> 25; h0 += carry9 * 19; h9 -= carry9 << 25;
-
-  carry0 = (h0 + (crypto_int64) (1L << 25)) >> 26; h1 += carry0; h0 -= carry0 << 26;
-
-  h[0] = (crypto_int32) h0;
-  h[1] = (crypto_int32) h1;
-  h[2] = (crypto_int32) h2;
-  h[3] = (crypto_int32) h3;
-  h[4] = (crypto_int32) h4;
-  h[5] = (crypto_int32) h5;
-  h[6] = (crypto_int32) h6;
-  h[7] = (crypto_int32) h7;
-  h[8] = (crypto_int32) h8;
-  h[9] = (crypto_int32) h9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sub.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sub.c
deleted file mode 100644
index 6e26b7d..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_sub.c
+++ /dev/null
@@ -1,57 +0,0 @@
-#include "fe.h"
-
-/*
-h = f - g
-Can overlap h with f or g.
-
-Preconditions:
-   |f| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-   |g| bounded by 1.1*2^25,1.1*2^24,1.1*2^25,1.1*2^24,etc.
-
-Postconditions:
-   |h| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-*/
-
-void fe_sub(fe h,const fe f,const fe g)
-{
-  crypto_int32 f0 = f[0];
-  crypto_int32 f1 = f[1];
-  crypto_int32 f2 = f[2];
-  crypto_int32 f3 = f[3];
-  crypto_int32 f4 = f[4];
-  crypto_int32 f5 = f[5];
-  crypto_int32 f6 = f[6];
-  crypto_int32 f7 = f[7];
-  crypto_int32 f8 = f[8];
-  crypto_int32 f9 = f[9];
-  crypto_int32 g0 = g[0];
-  crypto_int32 g1 = g[1];
-  crypto_int32 g2 = g[2];
-  crypto_int32 g3 = g[3];
-  crypto_int32 g4 = g[4];
-  crypto_int32 g5 = g[5];
-  crypto_int32 g6 = g[6];
-  crypto_int32 g7 = g[7];
-  crypto_int32 g8 = g[8];
-  crypto_int32 g9 = g[9];
-  crypto_int32 h0 = f0 - g0;
-  crypto_int32 h1 = f1 - g1;
-  crypto_int32 h2 = f2 - g2;
-  crypto_int32 h3 = f3 - g3;
-  crypto_int32 h4 = f4 - g4;
-  crypto_int32 h5 = f5 - g5;
-  crypto_int32 h6 = f6 - g6;
-  crypto_int32 h7 = f7 - g7;
-  crypto_int32 h8 = f8 - g8;
-  crypto_int32 h9 = f9 - g9;
-  h[0] = h0;
-  h[1] = h1;
-  h[2] = h2;
-  h[3] = h3;
-  h[4] = h4;
-  h[5] = h5;
-  h[6] = h6;
-  h[7] = h7;
-  h[8] = h8;
-  h[9] = h9;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_tobytes.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_tobytes.c
deleted file mode 100644
index 0a63baf..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/fe_tobytes.c
+++ /dev/null
@@ -1,119 +0,0 @@
-#include "fe.h"
-
-/*
-Preconditions:
-  |h| bounded by 1.1*2^26,1.1*2^25,1.1*2^26,1.1*2^25,etc.
-
-Write p=2^255-19; q=floor(h/p).
-Basic claim: q = floor(2^(-255)(h + 19 2^(-25)h9 + 2^(-1))).
-
-Proof:
-  Have |h|<=p so |q|<=1 so |19^2 2^(-255) q|<1/4.
-  Also have |h-2^230 h9|<2^231 so |19 2^(-255)(h-2^230 h9)|<1/4.
-
-  Write y=2^(-1)-19^2 2^(-255)q-19 2^(-255)(h-2^230 h9).
-  Then 0<y<1.
-
-  Write r=h-pq.
-  Have 0<=r<=p-1=2^255-20.
-  Thus 0<=r+19(2^-255)r<r+19(2^-255)2^255<=2^255-1.
-
-  Write x=r+19(2^-255)r+y.
-  Then 0<x<2^255 so floor(2^(-255)x) = 0 so floor(q+2^(-255)x) = q.
-
-  Have q+2^(-255)x = 2^(-255)(h + 19 2^(-25) h9 + 2^(-1))
-  so floor(2^(-255)(h + 19 2^(-25) h9 + 2^(-1))) = q.
-*/
-
-void fe_tobytes(unsigned char *s,const fe h)
-{
-  crypto_int32 h0 = h[0];
-  crypto_int32 h1 = h[1];
-  crypto_int32 h2 = h[2];
-  crypto_int32 h3 = h[3];
-  crypto_int32 h4 = h[4];
-  crypto_int32 h5 = h[5];
-  crypto_int32 h6 = h[6];
-  crypto_int32 h7 = h[7];
-  crypto_int32 h8 = h[8];
-  crypto_int32 h9 = h[9];
-  crypto_int32 q;
-  crypto_int32 carry0;
-  crypto_int32 carry1;
-  crypto_int32 carry2;
-  crypto_int32 carry3;
-  crypto_int32 carry4;
-  crypto_int32 carry5;
-  crypto_int32 carry6;
-  crypto_int32 carry7;
-  crypto_int32 carry8;
-  crypto_int32 carry9;
-
-  q = (19 * h9 + (((crypto_int32) 1) << 24)) >> 25;
-  q = (h0 + q) >> 26;
-  q = (h1 + q) >> 25;
-  q = (h2 + q) >> 26;
-  q = (h3 + q) >> 25;
-  q = (h4 + q) >> 26;
-  q = (h5 + q) >> 25;
-  q = (h6 + q) >> 26;
-  q = (h7 + q) >> 25;
-  q = (h8 + q) >> 26;
-  q = (h9 + q) >> 25;
-
-  /* Goal: Output h-(2^255-19)q, which is between 0 and 2^255-20. */
-  h0 += 19 * q;
-  /* Goal: Output h-2^255 q, which is between 0 and 2^255-20. */
-
-  carry0 = h0 >> 26; h1 += carry0; h0 -= carry0 << 26;
-  carry1 = h1 >> 25; h2 += carry1; h1 -= carry1 << 25;
-  carry2 = h2 >> 26; h3 += carry2; h2 -= carry2 << 26;
-  carry3 = h3 >> 25; h4 += carry3; h3 -= carry3 << 25;
-  carry4 = h4 >> 26; h5 += carry4; h4 -= carry4 << 26;
-  carry5 = h5 >> 25; h6 += carry5; h5 -= carry5 << 25;
-  carry6 = h6 >> 26; h7 += carry6; h6 -= carry6 << 26;
-  carry7 = h7 >> 25; h8 += carry7; h7 -= carry7 << 25;
-  carry8 = h8 >> 26; h9 += carry8; h8 -= carry8 << 26;
-  carry9 = h9 >> 25;               h9 -= carry9 << 25;
-                  /* h10 = carry9 */
-
-  /*
-  Goal: Output h0+...+2^255 h10-2^255 q, which is between 0 and 2^255-20.
-  Have h0+...+2^230 h9 between 0 and 2^255-1;
-  evidently 2^255 h10-2^255 q = 0.
-  Goal: Output h0+...+2^230 h9.
-  */
-
-  s[0] = h0 >> 0;
-  s[1] = h0 >> 8;
-  s[2] = h0 >> 16;
-  s[3] = (h0 >> 24) | (h1 << 2);
-  s[4] = h1 >> 6;
-  s[5] = h1 >> 14;
-  s[6] = (h1 >> 22) | (h2 << 3);
-  s[7] = h2 >> 5;
-  s[8] = h2 >> 13;
-  s[9] = (h2 >> 21) | (h3 << 5);
-  s[10] = h3 >> 3;
-  s[11] = h3 >> 11;
-  s[12] = (h3 >> 19) | (h4 << 6);
-  s[13] = h4 >> 2;
-  s[14] = h4 >> 10;
-  s[15] = h4 >> 18;
-  s[16] = h5 >> 0;
-  s[17] = h5 >> 8;
-  s[18] = h5 >> 16;
-  s[19] = (h5 >> 24) | (h6 << 1);
-  s[20] = h6 >> 7;
-  s[21] = h6 >> 15;
-  s[22] = (h6 >> 23) | (h7 << 3);
-  s[23] = h7 >> 5;
-  s[24] = h7 >> 13;
-  s[25] = (h7 >> 21) | (h8 << 4);
-  s[26] = h8 >> 4;
-  s[27] = h8 >> 12;
-  s[28] = (h8 >> 20) | (h9 << 6);
-  s[29] = h9 >> 2;
-  s[30] = h9 >> 10;
-  s[31] = h9 >> 18;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge.h
deleted file mode 100644
index 7aaff3d..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge.h
+++ /dev/null
@@ -1,97 +0,0 @@
-#ifndef GE_H
-#define GE_H
-
-/*
-ge means group element.
-
-Here the group is the set of pairs (x,y) of field elements (see fe.h)
-satisfying -x^2 + y^2 = 1 + d x^2y^2
-where d = -121665/121666.
-
-Representations:
-  ge_p2 (projective): (X:Y:Z) satisfying x=X/Z, y=Y/Z
-  ge_p3 (extended): (X:Y:Z:T) satisfying x=X/Z, y=Y/Z, XY=ZT
-  ge_p1p1 (completed): ((X:Z),(Y:T)) satisfying x=X/Z, y=Y/T
-  ge_precomp (Duif): (y+x,y-x,2dxy)
-*/
-
-#include "fe.h"
-
-typedef struct {
-  fe X;
-  fe Y;
-  fe Z;
-} ge_p2;
-
-typedef struct {
-  fe X;
-  fe Y;
-  fe Z;
-  fe T;
-} ge_p3;
-
-typedef struct {
-  fe X;
-  fe Y;
-  fe Z;
-  fe T;
-} ge_p1p1;
-
-typedef struct {
-  fe yplusx;
-  fe yminusx;
-  fe xy2d;
-} ge_precomp;
-
-typedef struct {
-  fe YplusX;
-  fe YminusX;
-  fe Z;
-  fe T2d;
-} ge_cached;
-
-#define ge_frombytes_negate_vartime crypto_sign_ed25519_ref10_ge_frombytes_negate_vartime
-#define ge_tobytes crypto_sign_ed25519_ref10_ge_tobytes
-#define ge_p3_tobytes crypto_sign_ed25519_ref10_ge_p3_tobytes
-
-#define ge_p2_0 crypto_sign_ed25519_ref10_ge_p2_0
-#define ge_p3_0 crypto_sign_ed25519_ref10_ge_p3_0
-#define ge_precomp_0 crypto_sign_ed25519_ref10_ge_precomp_0
-#define ge_p3_to_p2 crypto_sign_ed25519_ref10_ge_p3_to_p2
-#define ge_p3_to_cached crypto_sign_ed25519_ref10_ge_p3_to_cached
-#define ge_p1p1_to_p2 crypto_sign_ed25519_ref10_ge_p1p1_to_p2
-#define ge_p1p1_to_p3 crypto_sign_ed25519_ref10_ge_p1p1_to_p3
-#define ge_p2_dbl crypto_sign_ed25519_ref10_ge_p2_dbl
-#define ge_p3_dbl crypto_sign_ed25519_ref10_ge_p3_dbl
-
-#define ge_madd crypto_sign_ed25519_ref10_ge_madd
-#define ge_msub crypto_sign_ed25519_ref10_ge_msub
-#define ge_add crypto_sign_ed25519_ref10_ge_add
-#define ge_sub crypto_sign_ed25519_ref10_ge_sub
-#define ge_scalarmult_base crypto_sign_ed25519_ref10_ge_scalarmult_base
-#define ge_double_scalarmult_vartime crypto_sign_ed25519_ref10_ge_double_scalarmult_vartime
-#define ge_scalarmult_vartime crypto_sign_ed25519_ref10_ge_scalarmult_vartime
-
-extern void ge_tobytes(unsigned char *,const ge_p2 *);
-extern void ge_p3_tobytes(unsigned char *,const ge_p3 *);
-extern int ge_frombytes_negate_vartime(ge_p3 *,const unsigned char *);
-
-extern void ge_p2_0(ge_p2 *);
-extern void ge_p3_0(ge_p3 *);
-extern void ge_precomp_0(ge_precomp *);
-extern void ge_p3_to_p2(ge_p2 *,const ge_p3 *);
-extern void ge_p3_to_cached(ge_cached *,const ge_p3 *);
-extern void ge_p1p1_to_p2(ge_p2 *,const ge_p1p1 *);
-extern void ge_p1p1_to_p3(ge_p3 *,const ge_p1p1 *);
-extern void ge_p2_dbl(ge_p1p1 *,const ge_p2 *);
-extern void ge_p3_dbl(ge_p1p1 *,const ge_p3 *);
-
-extern void ge_madd(ge_p1p1 *,const ge_p3 *,const ge_precomp *);
-extern void ge_msub(ge_p1p1 *,const ge_p3 *,const ge_precomp *);
-extern void ge_add(ge_p1p1 *,const ge_p3 *,const ge_cached *);
-extern void ge_sub(ge_p1p1 *,const ge_p3 *,const ge_cached *);
-extern void ge_scalarmult_base(ge_p3 *,const unsigned char *);
-extern void ge_double_scalarmult_vartime(ge_p2 *,const unsigned char *,const ge_p3 *,const unsigned char *);
-extern void ge_scalarmult_vartime(ge_p3 *,const unsigned char *,const ge_p3 *);
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_add.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_add.c
deleted file mode 100644
index da7ff5d..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_add.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "ge.h"
-
-/*
-r = p + q
-*/
-
-void ge_add(ge_p1p1 *r,const ge_p3 *p,const ge_cached *q)
-{
-  fe t0;
-#include "ge_add.h"
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_add.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_add.h
deleted file mode 100644
index 7481f8f..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_add.h
+++ /dev/null
@@ -1,97 +0,0 @@
-
-/* qhasm: enter ge_add */
-
-/* qhasm: fe X1 */
-
-/* qhasm: fe Y1 */
-
-/* qhasm: fe Z1 */
-
-/* qhasm: fe Z2 */
-
-/* qhasm: fe T1 */
-
-/* qhasm: fe ZZ */
-
-/* qhasm: fe YpX2 */
-
-/* qhasm: fe YmX2 */
-
-/* qhasm: fe T2d2 */
-
-/* qhasm: fe X3 */
-
-/* qhasm: fe Y3 */
-
-/* qhasm: fe Z3 */
-
-/* qhasm: fe T3 */
-
-/* qhasm: fe YpX1 */
-
-/* qhasm: fe YmX1 */
-
-/* qhasm: fe A */
-
-/* qhasm: fe B */
-
-/* qhasm: fe C */
-
-/* qhasm: fe D */
-
-/* qhasm: YpX1 = Y1+X1 */
-/* asm 1: fe_add(>YpX1=fe#1,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_add(>YpX1=r->X,<Y1=p->Y,<X1=p->X); */
-fe_add(r->X,p->Y,p->X);
-
-/* qhasm: YmX1 = Y1-X1 */
-/* asm 1: fe_sub(>YmX1=fe#2,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_sub(>YmX1=r->Y,<Y1=p->Y,<X1=p->X); */
-fe_sub(r->Y,p->Y,p->X);
-
-/* qhasm: A = YpX1*YpX2 */
-/* asm 1: fe_mul(>A=fe#3,<YpX1=fe#1,<YpX2=fe#15); */
-/* asm 2: fe_mul(>A=r->Z,<YpX1=r->X,<YpX2=q->YplusX); */
-fe_mul(r->Z,r->X,q->YplusX);
-
-/* qhasm: B = YmX1*YmX2 */
-/* asm 1: fe_mul(>B=fe#2,<YmX1=fe#2,<YmX2=fe#16); */
-/* asm 2: fe_mul(>B=r->Y,<YmX1=r->Y,<YmX2=q->YminusX); */
-fe_mul(r->Y,r->Y,q->YminusX);
-
-/* qhasm: C = T2d2*T1 */
-/* asm 1: fe_mul(>C=fe#4,<T2d2=fe#18,<T1=fe#14); */
-/* asm 2: fe_mul(>C=r->T,<T2d2=q->T2d,<T1=p->T); */
-fe_mul(r->T,q->T2d,p->T);
-
-/* qhasm: ZZ = Z1*Z2 */
-/* asm 1: fe_mul(>ZZ=fe#1,<Z1=fe#13,<Z2=fe#17); */
-/* asm 2: fe_mul(>ZZ=r->X,<Z1=p->Z,<Z2=q->Z); */
-fe_mul(r->X,p->Z,q->Z);
-
-/* qhasm: D = 2*ZZ */
-/* asm 1: fe_add(>D=fe#5,<ZZ=fe#1,<ZZ=fe#1); */
-/* asm 2: fe_add(>D=t0,<ZZ=r->X,<ZZ=r->X); */
-fe_add(t0,r->X,r->X);
-
-/* qhasm: X3 = A-B */
-/* asm 1: fe_sub(>X3=fe#1,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_sub(>X3=r->X,<A=r->Z,<B=r->Y); */
-fe_sub(r->X,r->Z,r->Y);
-
-/* qhasm: Y3 = A+B */
-/* asm 1: fe_add(>Y3=fe#2,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_add(>Y3=r->Y,<A=r->Z,<B=r->Y); */
-fe_add(r->Y,r->Z,r->Y);
-
-/* qhasm: Z3 = D+C */
-/* asm 1: fe_add(>Z3=fe#3,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_add(>Z3=r->Z,<D=t0,<C=r->T); */
-fe_add(r->Z,t0,r->T);
-
-/* qhasm: T3 = D-C */
-/* asm 1: fe_sub(>T3=fe#4,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_sub(>T3=r->T,<D=t0,<C=r->T); */
-fe_sub(r->T,t0,r->T);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_double_scalarmult.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_double_scalarmult.c
deleted file mode 100644
index d4f132e..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_double_scalarmult.c
+++ /dev/null
@@ -1,138 +0,0 @@
-#include "ge.h"
-
-static void slide(signed char *r,const unsigned char *a)
-{
-  int i;
-  int b;
-  int k;
-
-  for (i = 0;i < 256;++i)
-    r[i] = 1 & (a[i >> 3] >> (i & 7));
-
-  for (i = 0;i < 256;++i)
-    if (r[i]) {
-      for (b = 1;b <= 6 && i + b < 256;++b) {
-        if (r[i + b]) {
-          if (r[i] + (r[i + b] << b) <= 15) {
-            r[i] += r[i + b] << b; r[i + b] = 0;
-          } else if (r[i] - (r[i + b] << b) >= -15) {
-            r[i] -= r[i + b] << b;
-            for (k = i + b;k < 256;++k) {
-              if (!r[k]) {
-                r[k] = 1;
-                break;
-              }
-              r[k] = 0;
-            }
-          } else
-            break;
-        }
-      }
-    }
-
-}
-
-static ge_precomp Bi[8] = {
-#include "base2.h"
-} ;
-
-/*
-r = a * A + b * B
-where a = a[0]+256*a[1]+...+256^31 a[31].
-and b = b[0]+256*b[1]+...+256^31 b[31].
-B is the Ed25519 base point (x,4/5) with x positive.
-*/
-
-void ge_double_scalarmult_vartime(ge_p2 *r,const unsigned char *a,const ge_p3 *A,const unsigned char *b)
-{
-  signed char aslide[256];
-  signed char bslide[256];
-  ge_cached Ai[8]; /* A,3A,5A,7A,9A,11A,13A,15A */
-  ge_p1p1 t;
-  ge_p3 u;
-  ge_p3 A2;
-  int i;
-
-  slide(aslide,a);
-  slide(bslide,b);
-
-  ge_p3_to_cached(&Ai[0],A);
-  ge_p3_dbl(&t,A); ge_p1p1_to_p3(&A2,&t);
-  ge_add(&t,&A2,&Ai[0]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[1],&u);
-  ge_add(&t,&A2,&Ai[1]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[2],&u);
-  ge_add(&t,&A2,&Ai[2]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[3],&u);
-  ge_add(&t,&A2,&Ai[3]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[4],&u);
-  ge_add(&t,&A2,&Ai[4]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[5],&u);
-  ge_add(&t,&A2,&Ai[5]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[6],&u);
-  ge_add(&t,&A2,&Ai[6]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[7],&u);
-
-  ge_p2_0(r);
-
-  for (i = 255;i >= 0;--i) {
-    if (aslide[i] || bslide[i]) break;
-  }
-
-  for (;i >= 0;--i) {
-    ge_p2_dbl(&t,r);
-
-    if (aslide[i] > 0) {
-      ge_p1p1_to_p3(&u,&t);
-      ge_add(&t,&u,&Ai[aslide[i]/2]);
-    } else if (aslide[i] < 0) {
-      ge_p1p1_to_p3(&u,&t);
-      ge_sub(&t,&u,&Ai[(-aslide[i])/2]);
-    }
-
-    if (bslide[i] > 0) {
-      ge_p1p1_to_p3(&u,&t);
-      ge_madd(&t,&u,&Bi[bslide[i]/2]);
-    } else if (bslide[i] < 0) {
-      ge_p1p1_to_p3(&u,&t);
-      ge_msub(&t,&u,&Bi[(-bslide[i])/2]);
-    }
-
-    ge_p1p1_to_p2(r,&t);
-  }
-}
-
-void ge_scalarmult_vartime(ge_p3 *r,const unsigned char *a,const ge_p3 *A)
-{
-  signed char aslide[256];
-  ge_cached Ai[8];
-  ge_p1p1 t;
-  ge_p3 u;
-  ge_p3 A2;
-  int i;
-
-  slide(aslide,a);
-
-  ge_p3_to_cached(&Ai[0],A);
-  ge_p3_dbl(&t,A); ge_p1p1_to_p3(&A2,&t);
-  ge_add(&t,&A2,&Ai[0]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[1],&u);
-  ge_add(&t,&A2,&Ai[1]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[2],&u);
-  ge_add(&t,&A2,&Ai[2]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[3],&u);
-  ge_add(&t,&A2,&Ai[3]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[4],&u);
-  ge_add(&t,&A2,&Ai[4]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[5],&u);
-  ge_add(&t,&A2,&Ai[5]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[6],&u);
-  ge_add(&t,&A2,&Ai[6]); ge_p1p1_to_p3(&u,&t); ge_p3_to_cached(&Ai[7],&u);
-
-  ge_p3_0(r);
-
-  for (i = 255;i >= 0;--i) {
-    if (aslide[i]) break;
-  }
-
-  for (;i >= 0;--i) {
-    ge_p3_dbl(&t,r);
-
-    if (aslide[i] > 0) {
-      ge_p1p1_to_p3(&u,&t);
-      ge_add(&t,&u,&Ai[aslide[i]/2]);
-    } else if (aslide[i] < 0) {
-      ge_p1p1_to_p3(&u,&t);
-      ge_sub(&t,&u,&Ai[(-aslide[i])/2]);
-    }
-
-   ge_p1p1_to_p3(r,&t);
-  }
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_frombytes.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_frombytes.c
deleted file mode 100644
index 1a059ee..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_frombytes.c
+++ /dev/null
@@ -1,50 +0,0 @@
-#include "ge.h"
-
-static const fe d = {
-#include "d.h"
-} ;
-
-static const fe sqrtm1 = {
-#include "sqrtm1.h"
-} ;
-
-int ge_frombytes_negate_vartime(ge_p3 *h,const unsigned char *s)
-{
-  fe u;
-  fe v;
-  fe v3;
-  fe vxx;
-  fe check;
-
-  fe_frombytes(h->Y,s);
-  fe_1(h->Z);
-  fe_sq(u,h->Y);
-  fe_mul(v,u,d);
-  fe_sub(u,u,h->Z);       /* u = y^2-1 */
-  fe_add(v,v,h->Z);       /* v = dy^2+1 */
-
-  fe_sq(v3,v);
-  fe_mul(v3,v3,v);        /* v3 = v^3 */
-  fe_sq(h->X,v3);
-  fe_mul(h->X,h->X,v);
-  fe_mul(h->X,h->X,u);    /* x = uv^7 */
-
-  fe_pow22523(h->X,h->X); /* x = (uv^7)^((q-5)/8) */
-  fe_mul(h->X,h->X,v3);
-  fe_mul(h->X,h->X,u);    /* x = uv^3(uv^7)^((q-5)/8) */
-
-  fe_sq(vxx,h->X);
-  fe_mul(vxx,vxx,v);
-  fe_sub(check,vxx,u);    /* vx^2-u */
-  if (fe_isnonzero(check)) {
-    fe_add(check,vxx,u);  /* vx^2+u */
-    if (fe_isnonzero(check)) return -1;
-    fe_mul(h->X,h->X,sqrtm1);
-  }
-
-  if (fe_isnegative(h->X) == (s[31] >> 7))
-    fe_neg(h->X,h->X);
-
-  fe_mul(h->T,h->X,h->Y);
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_madd.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_madd.c
deleted file mode 100644
index 6225717..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_madd.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "ge.h"
-
-/*
-r = p + q
-*/
-
-void ge_madd(ge_p1p1 *r,const ge_p3 *p,const ge_precomp *q)
-{
-  fe t0;
-#include "ge_madd.h"
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_madd.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_madd.h
deleted file mode 100644
index ecae849..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_madd.h
+++ /dev/null
@@ -1,88 +0,0 @@
-
-/* qhasm: enter ge_madd */
-
-/* qhasm: fe X1 */
-
-/* qhasm: fe Y1 */
-
-/* qhasm: fe Z1 */
-
-/* qhasm: fe T1 */
-
-/* qhasm: fe ypx2 */
-
-/* qhasm: fe ymx2 */
-
-/* qhasm: fe xy2d2 */
-
-/* qhasm: fe X3 */
-
-/* qhasm: fe Y3 */
-
-/* qhasm: fe Z3 */
-
-/* qhasm: fe T3 */
-
-/* qhasm: fe YpX1 */
-
-/* qhasm: fe YmX1 */
-
-/* qhasm: fe A */
-
-/* qhasm: fe B */
-
-/* qhasm: fe C */
-
-/* qhasm: fe D */
-
-/* qhasm: YpX1 = Y1+X1 */
-/* asm 1: fe_add(>YpX1=fe#1,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_add(>YpX1=r->X,<Y1=p->Y,<X1=p->X); */
-fe_add(r->X,p->Y,p->X);
-
-/* qhasm: YmX1 = Y1-X1 */
-/* asm 1: fe_sub(>YmX1=fe#2,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_sub(>YmX1=r->Y,<Y1=p->Y,<X1=p->X); */
-fe_sub(r->Y,p->Y,p->X);
-
-/* qhasm: A = YpX1*ypx2 */
-/* asm 1: fe_mul(>A=fe#3,<YpX1=fe#1,<ypx2=fe#15); */
-/* asm 2: fe_mul(>A=r->Z,<YpX1=r->X,<ypx2=q->yplusx); */
-fe_mul(r->Z,r->X,q->yplusx);
-
-/* qhasm: B = YmX1*ymx2 */
-/* asm 1: fe_mul(>B=fe#2,<YmX1=fe#2,<ymx2=fe#16); */
-/* asm 2: fe_mul(>B=r->Y,<YmX1=r->Y,<ymx2=q->yminusx); */
-fe_mul(r->Y,r->Y,q->yminusx);
-
-/* qhasm: C = xy2d2*T1 */
-/* asm 1: fe_mul(>C=fe#4,<xy2d2=fe#17,<T1=fe#14); */
-/* asm 2: fe_mul(>C=r->T,<xy2d2=q->xy2d,<T1=p->T); */
-fe_mul(r->T,q->xy2d,p->T);
-
-/* qhasm: D = 2*Z1 */
-/* asm 1: fe_add(>D=fe#5,<Z1=fe#13,<Z1=fe#13); */
-/* asm 2: fe_add(>D=t0,<Z1=p->Z,<Z1=p->Z); */
-fe_add(t0,p->Z,p->Z);
-
-/* qhasm: X3 = A-B */
-/* asm 1: fe_sub(>X3=fe#1,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_sub(>X3=r->X,<A=r->Z,<B=r->Y); */
-fe_sub(r->X,r->Z,r->Y);
-
-/* qhasm: Y3 = A+B */
-/* asm 1: fe_add(>Y3=fe#2,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_add(>Y3=r->Y,<A=r->Z,<B=r->Y); */
-fe_add(r->Y,r->Z,r->Y);
-
-/* qhasm: Z3 = D+C */
-/* asm 1: fe_add(>Z3=fe#3,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_add(>Z3=r->Z,<D=t0,<C=r->T); */
-fe_add(r->Z,t0,r->T);
-
-/* qhasm: T3 = D-C */
-/* asm 1: fe_sub(>T3=fe#4,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_sub(>T3=r->T,<D=t0,<C=r->T); */
-fe_sub(r->T,t0,r->T);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_msub.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_msub.c
deleted file mode 100644
index 741ecbf..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_msub.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "ge.h"
-
-/*
-r = p - q
-*/
-
-void ge_msub(ge_p1p1 *r,const ge_p3 *p,const ge_precomp *q)
-{
-  fe t0;
-#include "ge_msub.h"
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_msub.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_msub.h
deleted file mode 100644
index 500f986..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_msub.h
+++ /dev/null
@@ -1,88 +0,0 @@
-
-/* qhasm: enter ge_msub */
-
-/* qhasm: fe X1 */
-
-/* qhasm: fe Y1 */
-
-/* qhasm: fe Z1 */
-
-/* qhasm: fe T1 */
-
-/* qhasm: fe ypx2 */
-
-/* qhasm: fe ymx2 */
-
-/* qhasm: fe xy2d2 */
-
-/* qhasm: fe X3 */
-
-/* qhasm: fe Y3 */
-
-/* qhasm: fe Z3 */
-
-/* qhasm: fe T3 */
-
-/* qhasm: fe YpX1 */
-
-/* qhasm: fe YmX1 */
-
-/* qhasm: fe A */
-
-/* qhasm: fe B */
-
-/* qhasm: fe C */
-
-/* qhasm: fe D */
-
-/* qhasm: YpX1 = Y1+X1 */
-/* asm 1: fe_add(>YpX1=fe#1,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_add(>YpX1=r->X,<Y1=p->Y,<X1=p->X); */
-fe_add(r->X,p->Y,p->X);
-
-/* qhasm: YmX1 = Y1-X1 */
-/* asm 1: fe_sub(>YmX1=fe#2,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_sub(>YmX1=r->Y,<Y1=p->Y,<X1=p->X); */
-fe_sub(r->Y,p->Y,p->X);
-
-/* qhasm: A = YpX1*ymx2 */
-/* asm 1: fe_mul(>A=fe#3,<YpX1=fe#1,<ymx2=fe#16); */
-/* asm 2: fe_mul(>A=r->Z,<YpX1=r->X,<ymx2=q->yminusx); */
-fe_mul(r->Z,r->X,q->yminusx);
-
-/* qhasm: B = YmX1*ypx2 */
-/* asm 1: fe_mul(>B=fe#2,<YmX1=fe#2,<ypx2=fe#15); */
-/* asm 2: fe_mul(>B=r->Y,<YmX1=r->Y,<ypx2=q->yplusx); */
-fe_mul(r->Y,r->Y,q->yplusx);
-
-/* qhasm: C = xy2d2*T1 */
-/* asm 1: fe_mul(>C=fe#4,<xy2d2=fe#17,<T1=fe#14); */
-/* asm 2: fe_mul(>C=r->T,<xy2d2=q->xy2d,<T1=p->T); */
-fe_mul(r->T,q->xy2d,p->T);
-
-/* qhasm: D = 2*Z1 */
-/* asm 1: fe_add(>D=fe#5,<Z1=fe#13,<Z1=fe#13); */
-/* asm 2: fe_add(>D=t0,<Z1=p->Z,<Z1=p->Z); */
-fe_add(t0,p->Z,p->Z);
-
-/* qhasm: X3 = A-B */
-/* asm 1: fe_sub(>X3=fe#1,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_sub(>X3=r->X,<A=r->Z,<B=r->Y); */
-fe_sub(r->X,r->Z,r->Y);
-
-/* qhasm: Y3 = A+B */
-/* asm 1: fe_add(>Y3=fe#2,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_add(>Y3=r->Y,<A=r->Z,<B=r->Y); */
-fe_add(r->Y,r->Z,r->Y);
-
-/* qhasm: Z3 = D-C */
-/* asm 1: fe_sub(>Z3=fe#3,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_sub(>Z3=r->Z,<D=t0,<C=r->T); */
-fe_sub(r->Z,t0,r->T);
-
-/* qhasm: T3 = D+C */
-/* asm 1: fe_add(>T3=fe#4,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_add(>T3=r->T,<D=t0,<C=r->T); */
-fe_add(r->T,t0,r->T);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
deleted file mode 100644
index 9bb5013..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p2.c
+++ /dev/null
@@ -1,12 +0,0 @@
-#include "ge.h"
-
-/*
-r = p
-*/
-
-extern void ge_p1p1_to_p2(ge_p2 *r,const ge_p1p1 *p)
-{
-  fe_mul(r->X,p->X,p->T);
-  fe_mul(r->Y,p->Y,p->Z);
-  fe_mul(r->Z,p->Z,p->T);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
deleted file mode 100644
index 2f57b10..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p1p1_to_p3.c
+++ /dev/null
@@ -1,13 +0,0 @@
-#include "ge.h"
-
-/*
-r = p
-*/
-
-extern void ge_p1p1_to_p3(ge_p3 *r,const ge_p1p1 *p)
-{
-  fe_mul(r->X,p->X,p->T);
-  fe_mul(r->Y,p->Y,p->Z);
-  fe_mul(r->Z,p->Z,p->T);
-  fe_mul(r->T,p->X,p->Y);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_0.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_0.c
deleted file mode 100644
index 6191d1e..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_0.c
+++ /dev/null
@@ -1,8 +0,0 @@
-#include "ge.h"
-
-void ge_p2_0(ge_p2 *h)
-{
-  fe_0(h->X);
-  fe_1(h->Y);
-  fe_1(h->Z);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.c
deleted file mode 100644
index 2e332b5..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "ge.h"
-
-/*
-r = 2 * p
-*/
-
-void ge_p2_dbl(ge_p1p1 *r,const ge_p2 *p)
-{
-  fe t0;
-#include "ge_p2_dbl.h"
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.h
deleted file mode 100644
index 128efed..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p2_dbl.h
+++ /dev/null
@@ -1,73 +0,0 @@
-
-/* qhasm: enter ge_p2_dbl */
-
-/* qhasm: fe X1 */
-
-/* qhasm: fe Y1 */
-
-/* qhasm: fe Z1 */
-
-/* qhasm: fe A */
-
-/* qhasm: fe AA */
-
-/* qhasm: fe XX */
-
-/* qhasm: fe YY */
-
-/* qhasm: fe B */
-
-/* qhasm: fe X3 */
-
-/* qhasm: fe Y3 */
-
-/* qhasm: fe Z3 */
-
-/* qhasm: fe T3 */
-
-/* qhasm: XX=X1^2 */
-/* asm 1: fe_sq(>XX=fe#1,<X1=fe#11); */
-/* asm 2: fe_sq(>XX=r->X,<X1=p->X); */
-fe_sq(r->X,p->X);
-
-/* qhasm: YY=Y1^2 */
-/* asm 1: fe_sq(>YY=fe#3,<Y1=fe#12); */
-/* asm 2: fe_sq(>YY=r->Z,<Y1=p->Y); */
-fe_sq(r->Z,p->Y);
-
-/* qhasm: B=2*Z1^2 */
-/* asm 1: fe_sq2(>B=fe#4,<Z1=fe#13); */
-/* asm 2: fe_sq2(>B=r->T,<Z1=p->Z); */
-fe_sq2(r->T,p->Z);
-
-/* qhasm: A=X1+Y1 */
-/* asm 1: fe_add(>A=fe#2,<X1=fe#11,<Y1=fe#12); */
-/* asm 2: fe_add(>A=r->Y,<X1=p->X,<Y1=p->Y); */
-fe_add(r->Y,p->X,p->Y);
-
-/* qhasm: AA=A^2 */
-/* asm 1: fe_sq(>AA=fe#5,<A=fe#2); */
-/* asm 2: fe_sq(>AA=t0,<A=r->Y); */
-fe_sq(t0,r->Y);
-
-/* qhasm: Y3=YY+XX */
-/* asm 1: fe_add(>Y3=fe#2,<YY=fe#3,<XX=fe#1); */
-/* asm 2: fe_add(>Y3=r->Y,<YY=r->Z,<XX=r->X); */
-fe_add(r->Y,r->Z,r->X);
-
-/* qhasm: Z3=YY-XX */
-/* asm 1: fe_sub(>Z3=fe#3,<YY=fe#3,<XX=fe#1); */
-/* asm 2: fe_sub(>Z3=r->Z,<YY=r->Z,<XX=r->X); */
-fe_sub(r->Z,r->Z,r->X);
-
-/* qhasm: X3=AA-Y3 */
-/* asm 1: fe_sub(>X3=fe#1,<AA=fe#5,<Y3=fe#2); */
-/* asm 2: fe_sub(>X3=r->X,<AA=t0,<Y3=r->Y); */
-fe_sub(r->X,t0,r->Y);
-
-/* qhasm: T3=B-Z3 */
-/* asm 1: fe_sub(>T3=fe#4,<B=fe#4,<Z3=fe#3); */
-/* asm 2: fe_sub(>T3=r->T,<B=r->T,<Z3=r->Z); */
-fe_sub(r->T,r->T,r->Z);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_0.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_0.c
deleted file mode 100644
index 401b293..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_0.c
+++ /dev/null
@@ -1,9 +0,0 @@
-#include "ge.h"
-
-void ge_p3_0(ge_p3 *h)
-{
-  fe_0(h->X);
-  fe_1(h->Y);
-  fe_1(h->Z);
-  fe_0(h->T);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_dbl.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_dbl.c
deleted file mode 100644
index 0d8a059..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_dbl.c
+++ /dev/null
@@ -1,12 +0,0 @@
-#include "ge.h"
-
-/*
-r = 2 * p
-*/
-
-void ge_p3_dbl(ge_p1p1 *r,const ge_p3 *p)
-{
-  ge_p2 q;
-  ge_p3_to_p2(&q,p);
-  ge_p2_dbl(r,&q);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_cached.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_cached.c
deleted file mode 100644
index bde6422..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_cached.c
+++ /dev/null
@@ -1,17 +0,0 @@
-#include "ge.h"
-
-/*
-r = p
-*/
-
-static const fe d2 = {
-#include "d2.h"
-} ;
-
-extern void ge_p3_to_cached(ge_cached *r,const ge_p3 *p)
-{
-  fe_add(r->YplusX,p->Y,p->X);
-  fe_sub(r->YminusX,p->Y,p->X);
-  fe_copy(r->Z,p->Z);
-  fe_mul(r->T2d,p->T,d2);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_p2.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_p2.c
deleted file mode 100644
index e532a9e..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_to_p2.c
+++ /dev/null
@@ -1,12 +0,0 @@
-#include "ge.h"
-
-/*
-r = p
-*/
-
-extern void ge_p3_to_p2(ge_p2 *r,const ge_p3 *p)
-{
-  fe_copy(r->X,p->X);
-  fe_copy(r->Y,p->Y);
-  fe_copy(r->Z,p->Z);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_tobytes.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_tobytes.c
deleted file mode 100644
index 21cb2fc..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_p3_tobytes.c
+++ /dev/null
@@ -1,14 +0,0 @@
-#include "ge.h"
-
-void ge_p3_tobytes(unsigned char *s,const ge_p3 *h)
-{
-  fe recip;
-  fe x;
-  fe y;
-
-  fe_invert(recip,h->Z);
-  fe_mul(x,h->X,recip);
-  fe_mul(y,h->Y,recip);
-  fe_tobytes(s,y);
-  s[31] ^= fe_isnegative(x) << 7;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_precomp_0.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_precomp_0.c
deleted file mode 100644
index 2e21886..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_precomp_0.c
+++ /dev/null
@@ -1,8 +0,0 @@
-#include "ge.h"
-
-void ge_precomp_0(ge_precomp *h)
-{
-  fe_1(h->yplusx);
-  fe_1(h->yminusx);
-  fe_0(h->xy2d);
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_scalarmult_base.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_scalarmult_base.c
deleted file mode 100644
index f3490a9..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_scalarmult_base.c
+++ /dev/null
@@ -1,111 +0,0 @@
-#include "ge.h"
-#include "crypto_uint32.h"
-
-#ifdef __cplusplus
-# if __GNUC__
-#  pragma GCC diagnostic ignored "-Wlong-long"
-# endif
-#endif
-
-static unsigned char equal(signed char b,signed char c)
-{
-  unsigned char ub = b;
-  unsigned char uc = c;
-  unsigned char x = ub ^ uc; /* 0: yes; 1..255: no */
-  crypto_uint32 y = x; /* 0: yes; 1..255: no */
-  y -= 1; /* 4294967295: yes; 0..254: no */
-  y >>= 31; /* 1: yes; 0: no */
-  return y;
-}
-
-static unsigned char negative(signed char b)
-{
-  unsigned long long x = b; /* 18446744073709551361..18446744073709551615: yes; 0..255: no */
-  x >>= 63; /* 1: yes; 0: no */
-  return x;
-}
-
-static void cmov(ge_precomp *t,ge_precomp *u,unsigned char b)
-{
-  fe_cmov(t->yplusx,u->yplusx,b);
-  fe_cmov(t->yminusx,u->yminusx,b);
-  fe_cmov(t->xy2d,u->xy2d,b);
-}
-
-/* base[i][j] = (j+1)*256^i*B */
-static ge_precomp base[32][8] = {
-#include "base.h"
-} ;
-
-static void ge_select(ge_precomp *t,int pos,signed char b)
-{
-  ge_precomp minust;
-  unsigned char bnegative = negative(b);
-  unsigned char babs = b - (((-bnegative) & b) << 1);
-
-  ge_precomp_0(t);
-  cmov(t,&base[pos][0],equal(babs,1));
-  cmov(t,&base[pos][1],equal(babs,2));
-  cmov(t,&base[pos][2],equal(babs,3));
-  cmov(t,&base[pos][3],equal(babs,4));
-  cmov(t,&base[pos][4],equal(babs,5));
-  cmov(t,&base[pos][5],equal(babs,6));
-  cmov(t,&base[pos][6],equal(babs,7));
-  cmov(t,&base[pos][7],equal(babs,8));
-  fe_copy(minust.yplusx,t->yminusx);
-  fe_copy(minust.yminusx,t->yplusx);
-  fe_neg(minust.xy2d,t->xy2d);
-  cmov(t,&minust,bnegative);
-}
-
-/*
-h = a * B
-where a = a[0]+256*a[1]+...+256^31 a[31]
-B is the Ed25519 base point (x,4/5) with x positive.
-
-Preconditions:
-  a[31] <= 127
-*/
-
-void ge_scalarmult_base(ge_p3 *h,const unsigned char *a)
-{
-  signed char e[64];
-  signed char carry;
-  ge_p1p1 r;
-  ge_p2 s;
-  ge_precomp t;
-  int i;
-
-  for (i = 0;i < 32;++i) {
-    e[2 * i + 0] = (a[i] >> 0) & 15;
-    e[2 * i + 1] = (a[i] >> 4) & 15;
-  }
-  /* each e[i] is between 0 and 15 */
-  /* e[63] is between 0 and 7 */
-
-  carry = 0;
-  for (i = 0;i < 63;++i) {
-    e[i] += carry;
-    carry = e[i] + 8;
-    carry >>= 4;
-    e[i] -= carry << 4;
-  }
-  e[63] += carry;
-  /* each e[i] is between -8 and 8 */
-
-  ge_p3_0(h);
-  for (i = 1;i < 64;i += 2) {
-    ge_select(&t,i / 2,e[i]);
-    ge_madd(&r,h,&t); ge_p1p1_to_p3(h,&r);
-  }
-
-  ge_p3_dbl(&r,h);  ge_p1p1_to_p2(&s,&r);
-  ge_p2_dbl(&r,&s); ge_p1p1_to_p2(&s,&r);
-  ge_p2_dbl(&r,&s); ge_p1p1_to_p2(&s,&r);
-  ge_p2_dbl(&r,&s); ge_p1p1_to_p3(h,&r);
-
-  for (i = 0;i < 64;i += 2) {
-    ge_select(&t,i / 2,e[i]);
-    ge_madd(&r,h,&t); ge_p1p1_to_p3(h,&r);
-  }
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_sub.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_sub.c
deleted file mode 100644
index 69f3d54..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_sub.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "ge.h"
-
-/*
-r = p - q
-*/
-
-void ge_sub(ge_p1p1 *r,const ge_p3 *p,const ge_cached *q)
-{
-  fe t0;
-#include "ge_sub.h"
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_sub.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_sub.h
deleted file mode 100644
index b4ef1f5..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_sub.h
+++ /dev/null
@@ -1,97 +0,0 @@
-
-/* qhasm: enter ge_sub */
-
-/* qhasm: fe X1 */
-
-/* qhasm: fe Y1 */
-
-/* qhasm: fe Z1 */
-
-/* qhasm: fe Z2 */
-
-/* qhasm: fe T1 */
-
-/* qhasm: fe ZZ */
-
-/* qhasm: fe YpX2 */
-
-/* qhasm: fe YmX2 */
-
-/* qhasm: fe T2d2 */
-
-/* qhasm: fe X3 */
-
-/* qhasm: fe Y3 */
-
-/* qhasm: fe Z3 */
-
-/* qhasm: fe T3 */
-
-/* qhasm: fe YpX1 */
-
-/* qhasm: fe YmX1 */
-
-/* qhasm: fe A */
-
-/* qhasm: fe B */
-
-/* qhasm: fe C */
-
-/* qhasm: fe D */
-
-/* qhasm: YpX1 = Y1+X1 */
-/* asm 1: fe_add(>YpX1=fe#1,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_add(>YpX1=r->X,<Y1=p->Y,<X1=p->X); */
-fe_add(r->X,p->Y,p->X);
-
-/* qhasm: YmX1 = Y1-X1 */
-/* asm 1: fe_sub(>YmX1=fe#2,<Y1=fe#12,<X1=fe#11); */
-/* asm 2: fe_sub(>YmX1=r->Y,<Y1=p->Y,<X1=p->X); */
-fe_sub(r->Y,p->Y,p->X);
-
-/* qhasm: A = YpX1*YmX2 */
-/* asm 1: fe_mul(>A=fe#3,<YpX1=fe#1,<YmX2=fe#16); */
-/* asm 2: fe_mul(>A=r->Z,<YpX1=r->X,<YmX2=q->YminusX); */
-fe_mul(r->Z,r->X,q->YminusX);
-
-/* qhasm: B = YmX1*YpX2 */
-/* asm 1: fe_mul(>B=fe#2,<YmX1=fe#2,<YpX2=fe#15); */
-/* asm 2: fe_mul(>B=r->Y,<YmX1=r->Y,<YpX2=q->YplusX); */
-fe_mul(r->Y,r->Y,q->YplusX);
-
-/* qhasm: C = T2d2*T1 */
-/* asm 1: fe_mul(>C=fe#4,<T2d2=fe#18,<T1=fe#14); */
-/* asm 2: fe_mul(>C=r->T,<T2d2=q->T2d,<T1=p->T); */
-fe_mul(r->T,q->T2d,p->T);
-
-/* qhasm: ZZ = Z1*Z2 */
-/* asm 1: fe_mul(>ZZ=fe#1,<Z1=fe#13,<Z2=fe#17); */
-/* asm 2: fe_mul(>ZZ=r->X,<Z1=p->Z,<Z2=q->Z); */
-fe_mul(r->X,p->Z,q->Z);
-
-/* qhasm: D = 2*ZZ */
-/* asm 1: fe_add(>D=fe#5,<ZZ=fe#1,<ZZ=fe#1); */
-/* asm 2: fe_add(>D=t0,<ZZ=r->X,<ZZ=r->X); */
-fe_add(t0,r->X,r->X);
-
-/* qhasm: X3 = A-B */
-/* asm 1: fe_sub(>X3=fe#1,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_sub(>X3=r->X,<A=r->Z,<B=r->Y); */
-fe_sub(r->X,r->Z,r->Y);
-
-/* qhasm: Y3 = A+B */
-/* asm 1: fe_add(>Y3=fe#2,<A=fe#3,<B=fe#2); */
-/* asm 2: fe_add(>Y3=r->Y,<A=r->Z,<B=r->Y); */
-fe_add(r->Y,r->Z,r->Y);
-
-/* qhasm: Z3 = D-C */
-/* asm 1: fe_sub(>Z3=fe#3,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_sub(>Z3=r->Z,<D=t0,<C=r->T); */
-fe_sub(r->Z,t0,r->T);
-
-/* qhasm: T3 = D+C */
-/* asm 1: fe_add(>T3=fe#4,<D=fe#5,<C=fe#4); */
-/* asm 2: fe_add(>T3=r->T,<D=t0,<C=r->T); */
-fe_add(r->T,t0,r->T);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_tobytes.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_tobytes.c
deleted file mode 100644
index 31b3d33..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/ge_tobytes.c
+++ /dev/null
@@ -1,14 +0,0 @@
-#include "ge.h"
-
-void ge_tobytes(unsigned char *s,const ge_p2 *h)
-{
-  fe recip;
-  fe x;
-  fe y;
-
-  fe_invert(recip,h->Z);
-  fe_mul(x,h->X,recip);
-  fe_mul(y,h->Y,recip);
-  fe_tobytes(s,y);
-  s[31] ^= fe_isnegative(x) << 7;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c
index 8beb1d6..e8e4015 100644
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c
+++ b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/keypair.c
@@ -1,33 +1,36 @@
 
 #include <string.h>
 
-#include "crypto_sign_ed25519.h"
 #include "crypto_hash_sha512.h"
 #include "crypto_scalarmult_curve25519.h"
-#include "fe.h"
-#include "ge.h"
+#include "crypto_sign_ed25519.h"
+#include "sign_ed25519_ref10.h"
+#include "private/ed25519_ref10.h"
 #include "randombytes.h"
 #include "utils.h"
 
-int crypto_sign_ed25519_seed_keypair(unsigned char *pk, unsigned char *sk,
-                                     const unsigned char *seed)
+int
+crypto_sign_ed25519_seed_keypair(unsigned char *pk, unsigned char *sk,
+                                 const unsigned char *seed)
 {
-    ge_p3 A;
+    ge25519_p3 A;
 
-    crypto_hash_sha512(sk,seed,32);
+    crypto_hash_sha512(sk, seed, 32);
     sk[0] &= 248;
-    sk[31] &= 63;
+    sk[31] &= 127;
     sk[31] |= 64;
 
-    ge_scalarmult_base(&A,sk);
-    ge_p3_tobytes(pk,&A);
+    ge25519_scalarmult_base(&A, sk);
+    ge25519_p3_tobytes(pk, &A);
 
     memmove(sk, seed, 32);
     memmove(sk + 32, pk, 32);
+
     return 0;
 }
 
-int crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk)
+int
+crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk)
 {
     unsigned char seed[32];
     int           ret;
@@ -39,35 +42,37 @@ int crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk)
     return ret;
 }
 
-int crypto_sign_ed25519_pk_to_curve25519(unsigned char *curve25519_pk,
-                                         const unsigned char *ed25519_pk)
+int
+crypto_sign_ed25519_pk_to_curve25519(unsigned char *curve25519_pk,
+                                     const unsigned char *ed25519_pk)
 {
-    ge_p3 A;
-    fe    x;
-    fe    one_minus_y;
+    ge25519_p3 A;
+    fe25519    x;
+    fe25519    one_minus_y;
 
-    if (ge_frombytes_negate_vartime(&A, ed25519_pk) != 0) {
+    if (ge25519_has_small_order(ed25519_pk) != 0 ||
+        ge25519_frombytes_negate_vartime(&A, ed25519_pk) != 0 ||
+        ge25519_is_on_main_subgroup(&A) == 0) {
         return -1;
     }
-    fe_1(one_minus_y);
-    fe_sub(one_minus_y, one_minus_y, A.Y);
-    fe_invert(one_minus_y, one_minus_y);
-    fe_1(x);
-    fe_add(x, x, A.Y);
-    fe_mul(x, x, one_minus_y);
-    fe_tobytes(curve25519_pk, x);
+    fe25519_1(one_minus_y);
+    fe25519_sub(one_minus_y, one_minus_y, A.Y);
+    fe25519_1(x);
+    fe25519_add(x, x, A.Y);
+    fe25519_invert(one_minus_y, one_minus_y);
+    fe25519_mul(x, x, one_minus_y);
+    fe25519_tobytes(curve25519_pk, x);
 
     return 0;
 }
 
-int crypto_sign_ed25519_sk_to_curve25519(unsigned char *curve25519_sk,
-                                         const unsigned char *ed25519_sk)
+int
+crypto_sign_ed25519_sk_to_curve25519(unsigned char *curve25519_sk,
+                                     const unsigned char *ed25519_sk)
 {
     unsigned char h[crypto_hash_sha512_BYTES];
 
-    crypto_hash_sha512(h, ed25519_sk,
-                       crypto_sign_ed25519_SECRETKEYBYTES -
-                       crypto_sign_ed25519_PUBLICKEYBYTES);
+    crypto_hash_sha512(h, ed25519_sk, 32);
     h[0] &= 248;
     h[31] &= 127;
     h[31] |= 64;
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c
index 98b37b7..64ded79 100644
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c
+++ b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/obsolete.c
@@ -6,56 +6,57 @@
 #include "crypto_hash_sha512.h"
 #include "crypto_sign_edwards25519sha512batch.h"
 #include "crypto_verify_32.h"
-#include "fe.h"
-#include "ge.h"
+#include "private/ed25519_ref10.h"
 #include "randombytes.h"
-#include "sc.h"
 #include "utils.h"
 
-int crypto_sign_edwards25519sha512batch_keypair(unsigned char *pk,
-                                                unsigned char *sk)
+/* LCOV_EXCL_START */
+int
+crypto_sign_edwards25519sha512batch_keypair(unsigned char *pk,
+                                            unsigned char *sk)
 {
-    ge_p3 A;
+    ge25519_p3 A;
 
     randombytes_buf(sk, 32);
     crypto_hash_sha512(sk, sk, 32);
     sk[0] &= 248;
-    sk[31] &= 63;
+    sk[31] &= 127;
     sk[31] |= 64;
-    ge_scalarmult_base(&A, sk);
-    ge_p3_tobytes(pk, &A);
+    ge25519_scalarmult_base(&A, sk);
+    ge25519_p3_tobytes(pk, &A);
 
     return 0;
 }
 
-int crypto_sign_edwards25519sha512batch(unsigned char *sm,
-                                        unsigned long long *smlen_p,
-                                        const unsigned char *m,
-                                        unsigned long long mlen,
-                                        const unsigned char *sk)
+int
+crypto_sign_edwards25519sha512batch(unsigned char       *sm,
+                                    unsigned long long  *smlen_p,
+                                    const unsigned char *m,
+                                    unsigned long long   mlen,
+                                    const unsigned char *sk)
 {
     crypto_hash_sha512_state hs;
-    unsigned char nonce[64];
-    unsigned char hram[64];
-    unsigned char sig[64];
-    ge_p3 A;
-    ge_p3 R;
+    unsigned char            nonce[64];
+    unsigned char            hram[64];
+    unsigned char            sig[64];
+    ge25519_p3               A;
+    ge25519_p3               R;
 
     crypto_hash_sha512_init(&hs);
     crypto_hash_sha512_update(&hs, sk + 32, 32);
     crypto_hash_sha512_update(&hs, m, mlen);
     crypto_hash_sha512_final(&hs, nonce);
-    ge_scalarmult_base(&A, sk);
-    ge_p3_tobytes(sig + 32, &A);
-    sc_reduce(nonce);
-    ge_scalarmult_base(&R, nonce);
-    ge_p3_tobytes(sig, &R);
+    ge25519_scalarmult_base(&A, sk);
+    ge25519_p3_tobytes(sig + 32, &A);
+    sc25519_reduce(nonce);
+    ge25519_scalarmult_base(&R, nonce);
+    ge25519_p3_tobytes(sig, &R);
     crypto_hash_sha512_init(&hs);
     crypto_hash_sha512_update(&hs, sig, 32);
     crypto_hash_sha512_update(&hs, m, mlen);
     crypto_hash_sha512_final(&hs, hram);
-    sc_reduce(hram);
-    sc_muladd(sig + 32, hram, nonce, sk);
+    sc25519_reduce(hram);
+    sc25519_muladd(sig + 32, hram, nonce, sk);
     sodium_memzero(hram, sizeof hram);
     memmove(sm + 32, m, (size_t) mlen);
     memcpy(sm, sig, 32);
@@ -65,49 +66,53 @@ int crypto_sign_edwards25519sha512batch(unsigned char *sm,
     return 0;
 }
 
-int crypto_sign_edwards25519sha512batch_open(unsigned char *m,
-                                             unsigned long long *mlen_p,
-                                             const unsigned char *sm,
-                                             unsigned long long smlen,
-                                             const unsigned char *pk)
+int
+crypto_sign_edwards25519sha512batch_open(unsigned char       *m,
+                                         unsigned long long  *mlen_p,
+                                         const unsigned char *sm,
+                                         unsigned long long   smlen,
+                                         const unsigned char *pk)
 {
-    unsigned char h[64];
-    unsigned char t1[32], t2[32];
+    unsigned char      h[64];
+    unsigned char      t1[32], t2[32];
     unsigned long long mlen;
-    ge_cached Ai;
-    ge_p1p1 csa;
-    ge_p2 cs;
-    ge_p3 A;
-    ge_p3 R;
-    ge_p3 cs3;
+    ge25519_cached     Ai;
+    ge25519_p1p1       csa;
+    ge25519_p2         cs;
+    ge25519_p3         A;
+    ge25519_p3         R;
+    ge25519_p3         cs3;
 
     *mlen_p = 0;
-    if (smlen < 64 || smlen > SIZE_MAX) {
+    if (smlen < 64 || smlen - 64 > crypto_sign_edwards25519sha512batch_MESSAGEBYTES_MAX) {
         return -1;
     }
     mlen = smlen - 64;
     if (sm[smlen - 1] & 224) {
         return -1;
     }
-    if (ge_frombytes_negate_vartime(&A, pk) != 0 ||
-        ge_frombytes_negate_vartime(&R, sm) != 0) {
+    if (ge25519_has_small_order(pk) != 0 ||
+        ge25519_frombytes_negate_vartime(&A, pk) != 0 ||
+        ge25519_has_small_order(sm) != 0 ||
+        ge25519_frombytes_negate_vartime(&R, sm) != 0) {
         return -1;
     }
-    ge_p3_to_cached(&Ai, &A);
+    ge25519_p3_to_cached(&Ai, &A);
     crypto_hash_sha512(h, sm, mlen + 32);
-    sc_reduce(h);
-    ge_scalarmult_vartime(&cs3, h, &R);
-    ge_add(&csa, &cs3, &Ai);
-    ge_p1p1_to_p2(&cs, &csa);
-    ge_tobytes(t1, &cs);
+    sc25519_reduce(h);
+    ge25519_scalarmult(&cs3, h, &R);
+    ge25519_add(&csa, &cs3, &Ai);
+    ge25519_p1p1_to_p2(&cs, &csa);
+    ge25519_tobytes(t1, &cs);
     t1[31] ^= 1 << 7;
-    ge_scalarmult_base(&R, sm + 32 + mlen);
-    ge_p3_tobytes(t2, &R);
+    ge25519_scalarmult_base(&R, sm + 32 + mlen);
+    ge25519_p3_tobytes(t2, &R);
     if (crypto_verify_32(t1, t2) != 0) {
         return -1;
     }
     *mlen_p = mlen;
-    memmove(m, sm + 64, mlen);
+    memmove(m, sm + 32, mlen);
 
     return 0;
 }
+/* LCOV_EXCL_END */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c
index 2ee48ba..26476b3 100644
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c
+++ b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/open.c
@@ -6,50 +6,63 @@
 #include "crypto_hash_sha512.h"
 #include "crypto_sign_ed25519.h"
 #include "crypto_verify_32.h"
-#include "ge.h"
-#include "sc.h"
+#include "sign_ed25519_ref10.h"
+#include "private/ed25519_ref10.h"
 #include "utils.h"
 
 int
-crypto_sign_ed25519_verify_detached(const unsigned char *sig,
-                                    const unsigned char *m,
-                                    unsigned long long mlen,
-                                    const unsigned char *pk)
+_crypto_sign_ed25519_verify_detached(const unsigned char *sig,
+                                     const unsigned char *m,
+                                     unsigned long long   mlen,
+                                     const unsigned char *pk,
+                                     int prehashed)
 {
     crypto_hash_sha512_state hs;
-    unsigned char h[64];
-    unsigned char rcheck[32];
-    unsigned int  i;
-    unsigned char d = 0;
-    ge_p3 A;
-    ge_p2 R;
+    unsigned char            h[64];
+    unsigned char            rcheck[32];
+    ge25519_p3               A;
+    ge25519_p2               R;
 
+#ifdef ED25519_COMPAT
     if (sig[63] & 224) {
         return -1;
     }
-    if (ge_frombytes_negate_vartime(&A, pk) != 0) {
+#else
+    if (sc25519_is_canonical(sig + 32) == 0 ||
+        ge25519_has_small_order(sig) != 0) {
         return -1;
     }
-    for (i = 0; i < 32; ++i) {
-        d |= pk[i];
+    if (ge25519_is_canonical(pk) == 0 ||
+        ge25519_has_small_order(pk) != 0) {
+        return -1;
     }
-    if (d == 0) {
+#endif
+    if (ge25519_frombytes_negate_vartime(&A, pk) != 0) {
         return -1;
     }
-    crypto_hash_sha512_init(&hs);
+    _crypto_sign_ed25519_ref10_hinit(&hs, prehashed);
     crypto_hash_sha512_update(&hs, sig, 32);
     crypto_hash_sha512_update(&hs, pk, 32);
     crypto_hash_sha512_update(&hs, m, mlen);
     crypto_hash_sha512_final(&hs, h);
-    sc_reduce(h);
+    sc25519_reduce(h);
 
-    ge_double_scalarmult_vartime(&R, h, &A, sig + 32);
-    ge_tobytes(rcheck, &R);
+    ge25519_double_scalarmult_vartime(&R, h, &A, sig + 32);
+    ge25519_tobytes(rcheck, &R);
 
     return crypto_verify_32(rcheck, sig) | (-(rcheck == sig)) |
            sodium_memcmp(sig, rcheck, 32);
 }
 
+int
+crypto_sign_ed25519_verify_detached(const unsigned char *sig,
+                                    const unsigned char *m,
+                                    unsigned long long   mlen,
+                                    const unsigned char *pk)
+{
+    return _crypto_sign_ed25519_verify_detached(sig, m, mlen, pk, 0);
+}
+
 int
 crypto_sign_ed25519_open(unsigned char *m, unsigned long long *mlen_p,
                          const unsigned char *sm, unsigned long long smlen,
@@ -57,19 +70,22 @@ crypto_sign_ed25519_open(unsigned char *m, unsigned long long *mlen_p,
 {
     unsigned long long mlen;
 
-    if (smlen < 64 || smlen > SIZE_MAX) {
+    if (smlen < 64 || smlen - 64 > crypto_sign_ed25519_MESSAGEBYTES_MAX) {
         goto badsig;
     }
     mlen = smlen - 64;
     if (crypto_sign_ed25519_verify_detached(sm, sm + 64, mlen, pk) != 0) {
-        memset(m, 0, mlen);
+        if (m != NULL) {
+            memset(m, 0, mlen);
+        }
         goto badsig;
     }
     if (mlen_p != NULL) {
         *mlen_p = mlen;
     }
-    memmove(m, sm + 64, mlen);
-
+    if (m != NULL) {
+        memmove(m, sm + 64, mlen);
+    }
     return 0;
 
 badsig:
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/pow22523.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/pow22523.h
deleted file mode 100644
index 9bd45f1..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/pow22523.h
+++ /dev/null
@@ -1,160 +0,0 @@
-
-/* qhasm: fe z1 */
-
-/* qhasm: fe z2 */
-
-/* qhasm: fe z8 */
-
-/* qhasm: fe z9 */
-
-/* qhasm: fe z11 */
-
-/* qhasm: fe z22 */
-
-/* qhasm: fe z_5_0 */
-
-/* qhasm: fe z_10_5 */
-
-/* qhasm: fe z_10_0 */
-
-/* qhasm: fe z_20_10 */
-
-/* qhasm: fe z_20_0 */
-
-/* qhasm: fe z_40_20 */
-
-/* qhasm: fe z_40_0 */
-
-/* qhasm: fe z_50_10 */
-
-/* qhasm: fe z_50_0 */
-
-/* qhasm: fe z_100_50 */
-
-/* qhasm: fe z_100_0 */
-
-/* qhasm: fe z_200_100 */
-
-/* qhasm: fe z_200_0 */
-
-/* qhasm: fe z_250_50 */
-
-/* qhasm: fe z_250_0 */
-
-/* qhasm: fe z_252_2 */
-
-/* qhasm: fe z_252_3 */
-
-/* qhasm: enter pow22523 */
-
-/* qhasm: z2 = z1^2^1 */
-/* asm 1: fe_sq(>z2=fe#1,<z1=fe#11); for (i = 1;i < 1;++i) fe_sq(>z2=fe#1,>z2=fe#1); */
-/* asm 2: fe_sq(>z2=t0,<z1=z); for (i = 1;i < 1;++i) fe_sq(>z2=t0,>z2=t0); */
-fe_sq(t0,z); /* for (i = 1;i < 1;++i) fe_sq(t0,t0); */
-
-/* qhasm: z8 = z2^2^2 */
-/* asm 1: fe_sq(>z8=fe#2,<z2=fe#1); for (i = 1;i < 2;++i) fe_sq(>z8=fe#2,>z8=fe#2); */
-/* asm 2: fe_sq(>z8=t1,<z2=t0); for (i = 1;i < 2;++i) fe_sq(>z8=t1,>z8=t1); */
-fe_sq(t1,t0); for (i = 1;i < 2;++i) fe_sq(t1,t1);
-
-/* qhasm: z9 = z1*z8 */
-/* asm 1: fe_mul(>z9=fe#2,<z1=fe#11,<z8=fe#2); */
-/* asm 2: fe_mul(>z9=t1,<z1=z,<z8=t1); */
-fe_mul(t1,z,t1);
-
-/* qhasm: z11 = z2*z9 */
-/* asm 1: fe_mul(>z11=fe#1,<z2=fe#1,<z9=fe#2); */
-/* asm 2: fe_mul(>z11=t0,<z2=t0,<z9=t1); */
-fe_mul(t0,t0,t1);
-
-/* qhasm: z22 = z11^2^1 */
-/* asm 1: fe_sq(>z22=fe#1,<z11=fe#1); for (i = 1;i < 1;++i) fe_sq(>z22=fe#1,>z22=fe#1); */
-/* asm 2: fe_sq(>z22=t0,<z11=t0); for (i = 1;i < 1;++i) fe_sq(>z22=t0,>z22=t0); */
-fe_sq(t0,t0); /* for (i = 1;i < 1;++i) fe_sq(t0,t0); */
-
-/* qhasm: z_5_0 = z9*z22 */
-/* asm 1: fe_mul(>z_5_0=fe#1,<z9=fe#2,<z22=fe#1); */
-/* asm 2: fe_mul(>z_5_0=t0,<z9=t1,<z22=t0); */
-fe_mul(t0,t1,t0);
-
-/* qhasm: z_10_5 = z_5_0^2^5 */
-/* asm 1: fe_sq(>z_10_5=fe#2,<z_5_0=fe#1); for (i = 1;i < 5;++i) fe_sq(>z_10_5=fe#2,>z_10_5=fe#2); */
-/* asm 2: fe_sq(>z_10_5=t1,<z_5_0=t0); for (i = 1;i < 5;++i) fe_sq(>z_10_5=t1,>z_10_5=t1); */
-fe_sq(t1,t0); for (i = 1;i < 5;++i) fe_sq(t1,t1);
-
-/* qhasm: z_10_0 = z_10_5*z_5_0 */
-/* asm 1: fe_mul(>z_10_0=fe#1,<z_10_5=fe#2,<z_5_0=fe#1); */
-/* asm 2: fe_mul(>z_10_0=t0,<z_10_5=t1,<z_5_0=t0); */
-fe_mul(t0,t1,t0);
-
-/* qhasm: z_20_10 = z_10_0^2^10 */
-/* asm 1: fe_sq(>z_20_10=fe#2,<z_10_0=fe#1); for (i = 1;i < 10;++i) fe_sq(>z_20_10=fe#2,>z_20_10=fe#2); */
-/* asm 2: fe_sq(>z_20_10=t1,<z_10_0=t0); for (i = 1;i < 10;++i) fe_sq(>z_20_10=t1,>z_20_10=t1); */
-fe_sq(t1,t0); for (i = 1;i < 10;++i) fe_sq(t1,t1);
-
-/* qhasm: z_20_0 = z_20_10*z_10_0 */
-/* asm 1: fe_mul(>z_20_0=fe#2,<z_20_10=fe#2,<z_10_0=fe#1); */
-/* asm 2: fe_mul(>z_20_0=t1,<z_20_10=t1,<z_10_0=t0); */
-fe_mul(t1,t1,t0);
-
-/* qhasm: z_40_20 = z_20_0^2^20 */
-/* asm 1: fe_sq(>z_40_20=fe#3,<z_20_0=fe#2); for (i = 1;i < 20;++i) fe_sq(>z_40_20=fe#3,>z_40_20=fe#3); */
-/* asm 2: fe_sq(>z_40_20=t2,<z_20_0=t1); for (i = 1;i < 20;++i) fe_sq(>z_40_20=t2,>z_40_20=t2); */
-fe_sq(t2,t1); for (i = 1;i < 20;++i) fe_sq(t2,t2);
-
-/* qhasm: z_40_0 = z_40_20*z_20_0 */
-/* asm 1: fe_mul(>z_40_0=fe#2,<z_40_20=fe#3,<z_20_0=fe#2); */
-/* asm 2: fe_mul(>z_40_0=t1,<z_40_20=t2,<z_20_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_50_10 = z_40_0^2^10 */
-/* asm 1: fe_sq(>z_50_10=fe#2,<z_40_0=fe#2); for (i = 1;i < 10;++i) fe_sq(>z_50_10=fe#2,>z_50_10=fe#2); */
-/* asm 2: fe_sq(>z_50_10=t1,<z_40_0=t1); for (i = 1;i < 10;++i) fe_sq(>z_50_10=t1,>z_50_10=t1); */
-fe_sq(t1,t1); for (i = 1;i < 10;++i) fe_sq(t1,t1);
-
-/* qhasm: z_50_0 = z_50_10*z_10_0 */
-/* asm 1: fe_mul(>z_50_0=fe#1,<z_50_10=fe#2,<z_10_0=fe#1); */
-/* asm 2: fe_mul(>z_50_0=t0,<z_50_10=t1,<z_10_0=t0); */
-fe_mul(t0,t1,t0);
-
-/* qhasm: z_100_50 = z_50_0^2^50 */
-/* asm 1: fe_sq(>z_100_50=fe#2,<z_50_0=fe#1); for (i = 1;i < 50;++i) fe_sq(>z_100_50=fe#2,>z_100_50=fe#2); */
-/* asm 2: fe_sq(>z_100_50=t1,<z_50_0=t0); for (i = 1;i < 50;++i) fe_sq(>z_100_50=t1,>z_100_50=t1); */
-fe_sq(t1,t0); for (i = 1;i < 50;++i) fe_sq(t1,t1);
-
-/* qhasm: z_100_0 = z_100_50*z_50_0 */
-/* asm 1: fe_mul(>z_100_0=fe#2,<z_100_50=fe#2,<z_50_0=fe#1); */
-/* asm 2: fe_mul(>z_100_0=t1,<z_100_50=t1,<z_50_0=t0); */
-fe_mul(t1,t1,t0);
-
-/* qhasm: z_200_100 = z_100_0^2^100 */
-/* asm 1: fe_sq(>z_200_100=fe#3,<z_100_0=fe#2); for (i = 1;i < 100;++i) fe_sq(>z_200_100=fe#3,>z_200_100=fe#3); */
-/* asm 2: fe_sq(>z_200_100=t2,<z_100_0=t1); for (i = 1;i < 100;++i) fe_sq(>z_200_100=t2,>z_200_100=t2); */
-fe_sq(t2,t1); for (i = 1;i < 100;++i) fe_sq(t2,t2);
-
-/* qhasm: z_200_0 = z_200_100*z_100_0 */
-/* asm 1: fe_mul(>z_200_0=fe#2,<z_200_100=fe#3,<z_100_0=fe#2); */
-/* asm 2: fe_mul(>z_200_0=t1,<z_200_100=t2,<z_100_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_250_50 = z_200_0^2^50 */
-/* asm 1: fe_sq(>z_250_50=fe#2,<z_200_0=fe#2); for (i = 1;i < 50;++i) fe_sq(>z_250_50=fe#2,>z_250_50=fe#2); */
-/* asm 2: fe_sq(>z_250_50=t1,<z_200_0=t1); for (i = 1;i < 50;++i) fe_sq(>z_250_50=t1,>z_250_50=t1); */
-fe_sq(t1,t1); for (i = 1;i < 50;++i) fe_sq(t1,t1);
-
-/* qhasm: z_250_0 = z_250_50*z_50_0 */
-/* asm 1: fe_mul(>z_250_0=fe#1,<z_250_50=fe#2,<z_50_0=fe#1); */
-/* asm 2: fe_mul(>z_250_0=t0,<z_250_50=t1,<z_50_0=t0); */
-fe_mul(t0,t1,t0);
-
-/* qhasm: z_252_2 = z_250_0^2^2 */
-/* asm 1: fe_sq(>z_252_2=fe#1,<z_250_0=fe#1); for (i = 1;i < 2;++i) fe_sq(>z_252_2=fe#1,>z_252_2=fe#1); */
-/* asm 2: fe_sq(>z_252_2=t0,<z_250_0=t0); for (i = 1;i < 2;++i) fe_sq(>z_252_2=t0,>z_252_2=t0); */
-fe_sq(t0,t0); for (i = 1;i < 2;++i) fe_sq(t0,t0);
-
-/* qhasm: z_252_3 = z_252_2*z1 */
-/* asm 1: fe_mul(>z_252_3=fe#12,<z_252_2=fe#1,<z1=fe#11); */
-/* asm 2: fe_mul(>z_252_3=out,<z_252_2=t0,<z1=z); */
-fe_mul(out,t0,z);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/pow225521.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/pow225521.h
deleted file mode 100644
index 8397222..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/pow225521.h
+++ /dev/null
@@ -1,160 +0,0 @@
-
-/* qhasm: fe z1 */
-
-/* qhasm: fe z2 */
-
-/* qhasm: fe z8 */
-
-/* qhasm: fe z9 */
-
-/* qhasm: fe z11 */
-
-/* qhasm: fe z22 */
-
-/* qhasm: fe z_5_0 */
-
-/* qhasm: fe z_10_5 */
-
-/* qhasm: fe z_10_0 */
-
-/* qhasm: fe z_20_10 */
-
-/* qhasm: fe z_20_0 */
-
-/* qhasm: fe z_40_20 */
-
-/* qhasm: fe z_40_0 */
-
-/* qhasm: fe z_50_10 */
-
-/* qhasm: fe z_50_0 */
-
-/* qhasm: fe z_100_50 */
-
-/* qhasm: fe z_100_0 */
-
-/* qhasm: fe z_200_100 */
-
-/* qhasm: fe z_200_0 */
-
-/* qhasm: fe z_250_50 */
-
-/* qhasm: fe z_250_0 */
-
-/* qhasm: fe z_255_5 */
-
-/* qhasm: fe z_255_21 */
-
-/* qhasm: enter pow225521 */
-
-/* qhasm: z2 = z1^2^1 */
-/* asm 1: fe_sq(>z2=fe#1,<z1=fe#11); for (i = 1;i < 1;++i) fe_sq(>z2=fe#1,>z2=fe#1); */
-/* asm 2: fe_sq(>z2=t0,<z1=z); for (i = 1;i < 1;++i) fe_sq(>z2=t0,>z2=t0); */
-fe_sq(t0,z); /* for (i = 1;i < 1;++i) fe_sq(t0,t0); */
-
-/* qhasm: z8 = z2^2^2 */
-/* asm 1: fe_sq(>z8=fe#2,<z2=fe#1); for (i = 1;i < 2;++i) fe_sq(>z8=fe#2,>z8=fe#2); */
-/* asm 2: fe_sq(>z8=t1,<z2=t0); for (i = 1;i < 2;++i) fe_sq(>z8=t1,>z8=t1); */
-fe_sq(t1,t0); for (i = 1;i < 2;++i) fe_sq(t1,t1);
-
-/* qhasm: z9 = z1*z8 */
-/* asm 1: fe_mul(>z9=fe#2,<z1=fe#11,<z8=fe#2); */
-/* asm 2: fe_mul(>z9=t1,<z1=z,<z8=t1); */
-fe_mul(t1,z,t1);
-
-/* qhasm: z11 = z2*z9 */
-/* asm 1: fe_mul(>z11=fe#1,<z2=fe#1,<z9=fe#2); */
-/* asm 2: fe_mul(>z11=t0,<z2=t0,<z9=t1); */
-fe_mul(t0,t0,t1);
-
-/* qhasm: z22 = z11^2^1 */
-/* asm 1: fe_sq(>z22=fe#3,<z11=fe#1); for (i = 1;i < 1;++i) fe_sq(>z22=fe#3,>z22=fe#3); */
-/* asm 2: fe_sq(>z22=t2,<z11=t0); for (i = 1;i < 1;++i) fe_sq(>z22=t2,>z22=t2); */
-fe_sq(t2,t0); /* for (i = 1;i < 1;++i) fe_sq(t2,t2); */
-
-/* qhasm: z_5_0 = z9*z22 */
-/* asm 1: fe_mul(>z_5_0=fe#2,<z9=fe#2,<z22=fe#3); */
-/* asm 2: fe_mul(>z_5_0=t1,<z9=t1,<z22=t2); */
-fe_mul(t1,t1,t2);
-
-/* qhasm: z_10_5 = z_5_0^2^5 */
-/* asm 1: fe_sq(>z_10_5=fe#3,<z_5_0=fe#2); for (i = 1;i < 5;++i) fe_sq(>z_10_5=fe#3,>z_10_5=fe#3); */
-/* asm 2: fe_sq(>z_10_5=t2,<z_5_0=t1); for (i = 1;i < 5;++i) fe_sq(>z_10_5=t2,>z_10_5=t2); */
-fe_sq(t2,t1); for (i = 1;i < 5;++i) fe_sq(t2,t2);
-
-/* qhasm: z_10_0 = z_10_5*z_5_0 */
-/* asm 1: fe_mul(>z_10_0=fe#2,<z_10_5=fe#3,<z_5_0=fe#2); */
-/* asm 2: fe_mul(>z_10_0=t1,<z_10_5=t2,<z_5_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_20_10 = z_10_0^2^10 */
-/* asm 1: fe_sq(>z_20_10=fe#3,<z_10_0=fe#2); for (i = 1;i < 10;++i) fe_sq(>z_20_10=fe#3,>z_20_10=fe#3); */
-/* asm 2: fe_sq(>z_20_10=t2,<z_10_0=t1); for (i = 1;i < 10;++i) fe_sq(>z_20_10=t2,>z_20_10=t2); */
-fe_sq(t2,t1); for (i = 1;i < 10;++i) fe_sq(t2,t2);
-
-/* qhasm: z_20_0 = z_20_10*z_10_0 */
-/* asm 1: fe_mul(>z_20_0=fe#3,<z_20_10=fe#3,<z_10_0=fe#2); */
-/* asm 2: fe_mul(>z_20_0=t2,<z_20_10=t2,<z_10_0=t1); */
-fe_mul(t2,t2,t1);
-
-/* qhasm: z_40_20 = z_20_0^2^20 */
-/* asm 1: fe_sq(>z_40_20=fe#4,<z_20_0=fe#3); for (i = 1;i < 20;++i) fe_sq(>z_40_20=fe#4,>z_40_20=fe#4); */
-/* asm 2: fe_sq(>z_40_20=t3,<z_20_0=t2); for (i = 1;i < 20;++i) fe_sq(>z_40_20=t3,>z_40_20=t3); */
-fe_sq(t3,t2); for (i = 1;i < 20;++i) fe_sq(t3,t3);
-
-/* qhasm: z_40_0 = z_40_20*z_20_0 */
-/* asm 1: fe_mul(>z_40_0=fe#3,<z_40_20=fe#4,<z_20_0=fe#3); */
-/* asm 2: fe_mul(>z_40_0=t2,<z_40_20=t3,<z_20_0=t2); */
-fe_mul(t2,t3,t2);
-
-/* qhasm: z_50_10 = z_40_0^2^10 */
-/* asm 1: fe_sq(>z_50_10=fe#3,<z_40_0=fe#3); for (i = 1;i < 10;++i) fe_sq(>z_50_10=fe#3,>z_50_10=fe#3); */
-/* asm 2: fe_sq(>z_50_10=t2,<z_40_0=t2); for (i = 1;i < 10;++i) fe_sq(>z_50_10=t2,>z_50_10=t2); */
-fe_sq(t2,t2); for (i = 1;i < 10;++i) fe_sq(t2,t2);
-
-/* qhasm: z_50_0 = z_50_10*z_10_0 */
-/* asm 1: fe_mul(>z_50_0=fe#2,<z_50_10=fe#3,<z_10_0=fe#2); */
-/* asm 2: fe_mul(>z_50_0=t1,<z_50_10=t2,<z_10_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_100_50 = z_50_0^2^50 */
-/* asm 1: fe_sq(>z_100_50=fe#3,<z_50_0=fe#2); for (i = 1;i < 50;++i) fe_sq(>z_100_50=fe#3,>z_100_50=fe#3); */
-/* asm 2: fe_sq(>z_100_50=t2,<z_50_0=t1); for (i = 1;i < 50;++i) fe_sq(>z_100_50=t2,>z_100_50=t2); */
-fe_sq(t2,t1); for (i = 1;i < 50;++i) fe_sq(t2,t2);
-
-/* qhasm: z_100_0 = z_100_50*z_50_0 */
-/* asm 1: fe_mul(>z_100_0=fe#3,<z_100_50=fe#3,<z_50_0=fe#2); */
-/* asm 2: fe_mul(>z_100_0=t2,<z_100_50=t2,<z_50_0=t1); */
-fe_mul(t2,t2,t1);
-
-/* qhasm: z_200_100 = z_100_0^2^100 */
-/* asm 1: fe_sq(>z_200_100=fe#4,<z_100_0=fe#3); for (i = 1;i < 100;++i) fe_sq(>z_200_100=fe#4,>z_200_100=fe#4); */
-/* asm 2: fe_sq(>z_200_100=t3,<z_100_0=t2); for (i = 1;i < 100;++i) fe_sq(>z_200_100=t3,>z_200_100=t3); */
-fe_sq(t3,t2); for (i = 1;i < 100;++i) fe_sq(t3,t3);
-
-/* qhasm: z_200_0 = z_200_100*z_100_0 */
-/* asm 1: fe_mul(>z_200_0=fe#3,<z_200_100=fe#4,<z_100_0=fe#3); */
-/* asm 2: fe_mul(>z_200_0=t2,<z_200_100=t3,<z_100_0=t2); */
-fe_mul(t2,t3,t2);
-
-/* qhasm: z_250_50 = z_200_0^2^50 */
-/* asm 1: fe_sq(>z_250_50=fe#3,<z_200_0=fe#3); for (i = 1;i < 50;++i) fe_sq(>z_250_50=fe#3,>z_250_50=fe#3); */
-/* asm 2: fe_sq(>z_250_50=t2,<z_200_0=t2); for (i = 1;i < 50;++i) fe_sq(>z_250_50=t2,>z_250_50=t2); */
-fe_sq(t2,t2); for (i = 1;i < 50;++i) fe_sq(t2,t2);
-
-/* qhasm: z_250_0 = z_250_50*z_50_0 */
-/* asm 1: fe_mul(>z_250_0=fe#2,<z_250_50=fe#3,<z_50_0=fe#2); */
-/* asm 2: fe_mul(>z_250_0=t1,<z_250_50=t2,<z_50_0=t1); */
-fe_mul(t1,t2,t1);
-
-/* qhasm: z_255_5 = z_250_0^2^5 */
-/* asm 1: fe_sq(>z_255_5=fe#2,<z_250_0=fe#2); for (i = 1;i < 5;++i) fe_sq(>z_255_5=fe#2,>z_255_5=fe#2); */
-/* asm 2: fe_sq(>z_255_5=t1,<z_250_0=t1); for (i = 1;i < 5;++i) fe_sq(>z_255_5=t1,>z_255_5=t1); */
-fe_sq(t1,t1); for (i = 1;i < 5;++i) fe_sq(t1,t1);
-
-/* qhasm: z_255_21 = z_255_5*z11 */
-/* asm 1: fe_mul(>z_255_21=fe#12,<z_255_5=fe#2,<z11=fe#1); */
-/* asm 2: fe_mul(>z_255_21=out,<z_255_5=t1,<z11=t0); */
-fe_mul(out,t1,t0);
-
-/* qhasm: return */
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc.h
deleted file mode 100644
index d32ed2e..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc.h
+++ /dev/null
@@ -1,15 +0,0 @@
-#ifndef SC_H
-#define SC_H
-
-/*
-The set of scalars is \Z/l
-where l = 2^252 + 27742317777372353535851937790883648493.
-*/
-
-#define sc_reduce crypto_sign_ed25519_ref10_sc_reduce
-#define sc_muladd crypto_sign_ed25519_ref10_sc_muladd
-
-extern void sc_reduce(unsigned char *);
-extern void sc_muladd(unsigned char *,const unsigned char *,const unsigned char *,const unsigned char *);
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc_muladd.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc_muladd.c
deleted file mode 100644
index 3a11dbe..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc_muladd.c
+++ /dev/null
@@ -1,368 +0,0 @@
-#include "sc.h"
-#include "crypto_int64.h"
-#include "crypto_uint32.h"
-#include "crypto_uint64.h"
-
-static crypto_uint64 load_3(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  return result;
-}
-
-static crypto_uint64 load_4(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  result |= ((crypto_uint64) in[3]) << 24;
-  return result;
-}
-
-/*
-Input:
-  a[0]+256*a[1]+...+256^31*a[31] = a
-  b[0]+256*b[1]+...+256^31*b[31] = b
-  c[0]+256*c[1]+...+256^31*c[31] = c
-
-Output:
-  s[0]+256*s[1]+...+256^31*s[31] = (ab+c) mod l
-  where l = 2^252 + 27742317777372353535851937790883648493.
-*/
-
-void sc_muladd(unsigned char *s,const unsigned char *a,const unsigned char *b,const unsigned char *c)
-{
-  crypto_int64 a0 = 2097151 & load_3(a);
-  crypto_int64 a1 = 2097151 & (load_4(a + 2) >> 5);
-  crypto_int64 a2 = 2097151 & (load_3(a + 5) >> 2);
-  crypto_int64 a3 = 2097151 & (load_4(a + 7) >> 7);
-  crypto_int64 a4 = 2097151 & (load_4(a + 10) >> 4);
-  crypto_int64 a5 = 2097151 & (load_3(a + 13) >> 1);
-  crypto_int64 a6 = 2097151 & (load_4(a + 15) >> 6);
-  crypto_int64 a7 = 2097151 & (load_3(a + 18) >> 3);
-  crypto_int64 a8 = 2097151 & load_3(a + 21);
-  crypto_int64 a9 = 2097151 & (load_4(a + 23) >> 5);
-  crypto_int64 a10 = 2097151 & (load_3(a + 26) >> 2);
-  crypto_int64 a11 = (load_4(a + 28) >> 7);
-  crypto_int64 b0 = 2097151 & load_3(b);
-  crypto_int64 b1 = 2097151 & (load_4(b + 2) >> 5);
-  crypto_int64 b2 = 2097151 & (load_3(b + 5) >> 2);
-  crypto_int64 b3 = 2097151 & (load_4(b + 7) >> 7);
-  crypto_int64 b4 = 2097151 & (load_4(b + 10) >> 4);
-  crypto_int64 b5 = 2097151 & (load_3(b + 13) >> 1);
-  crypto_int64 b6 = 2097151 & (load_4(b + 15) >> 6);
-  crypto_int64 b7 = 2097151 & (load_3(b + 18) >> 3);
-  crypto_int64 b8 = 2097151 & load_3(b + 21);
-  crypto_int64 b9 = 2097151 & (load_4(b + 23) >> 5);
-  crypto_int64 b10 = 2097151 & (load_3(b + 26) >> 2);
-  crypto_int64 b11 = (load_4(b + 28) >> 7);
-  crypto_int64 c0 = 2097151 & load_3(c);
-  crypto_int64 c1 = 2097151 & (load_4(c + 2) >> 5);
-  crypto_int64 c2 = 2097151 & (load_3(c + 5) >> 2);
-  crypto_int64 c3 = 2097151 & (load_4(c + 7) >> 7);
-  crypto_int64 c4 = 2097151 & (load_4(c + 10) >> 4);
-  crypto_int64 c5 = 2097151 & (load_3(c + 13) >> 1);
-  crypto_int64 c6 = 2097151 & (load_4(c + 15) >> 6);
-  crypto_int64 c7 = 2097151 & (load_3(c + 18) >> 3);
-  crypto_int64 c8 = 2097151 & load_3(c + 21);
-  crypto_int64 c9 = 2097151 & (load_4(c + 23) >> 5);
-  crypto_int64 c10 = 2097151 & (load_3(c + 26) >> 2);
-  crypto_int64 c11 = (load_4(c + 28) >> 7);
-  crypto_int64 s0;
-  crypto_int64 s1;
-  crypto_int64 s2;
-  crypto_int64 s3;
-  crypto_int64 s4;
-  crypto_int64 s5;
-  crypto_int64 s6;
-  crypto_int64 s7;
-  crypto_int64 s8;
-  crypto_int64 s9;
-  crypto_int64 s10;
-  crypto_int64 s11;
-  crypto_int64 s12;
-  crypto_int64 s13;
-  crypto_int64 s14;
-  crypto_int64 s15;
-  crypto_int64 s16;
-  crypto_int64 s17;
-  crypto_int64 s18;
-  crypto_int64 s19;
-  crypto_int64 s20;
-  crypto_int64 s21;
-  crypto_int64 s22;
-  crypto_int64 s23;
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-  crypto_int64 carry10;
-  crypto_int64 carry11;
-  crypto_int64 carry12;
-  crypto_int64 carry13;
-  crypto_int64 carry14;
-  crypto_int64 carry15;
-  crypto_int64 carry16;
-  crypto_int64 carry17;
-  crypto_int64 carry18;
-  crypto_int64 carry19;
-  crypto_int64 carry20;
-  crypto_int64 carry21;
-  crypto_int64 carry22;
-
-  s0 = c0 + a0*b0;
-  s1 = c1 + a0*b1 + a1*b0;
-  s2 = c2 + a0*b2 + a1*b1 + a2*b0;
-  s3 = c3 + a0*b3 + a1*b2 + a2*b1 + a3*b0;
-  s4 = c4 + a0*b4 + a1*b3 + a2*b2 + a3*b1 + a4*b0;
-  s5 = c5 + a0*b5 + a1*b4 + a2*b3 + a3*b2 + a4*b1 + a5*b0;
-  s6 = c6 + a0*b6 + a1*b5 + a2*b4 + a3*b3 + a4*b2 + a5*b1 + a6*b0;
-  s7 = c7 + a0*b7 + a1*b6 + a2*b5 + a3*b4 + a4*b3 + a5*b2 + a6*b1 + a7*b0;
-  s8 = c8 + a0*b8 + a1*b7 + a2*b6 + a3*b5 + a4*b4 + a5*b3 + a6*b2 + a7*b1 + a8*b0;
-  s9 = c9 + a0*b9 + a1*b8 + a2*b7 + a3*b6 + a4*b5 + a5*b4 + a6*b3 + a7*b2 + a8*b1 + a9*b0;
-  s10 = c10 + a0*b10 + a1*b9 + a2*b8 + a3*b7 + a4*b6 + a5*b5 + a6*b4 + a7*b3 + a8*b2 + a9*b1 + a10*b0;
-  s11 = c11 + a0*b11 + a1*b10 + a2*b9 + a3*b8 + a4*b7 + a5*b6 + a6*b5 + a7*b4 + a8*b3 + a9*b2 + a10*b1 + a11*b0;
-  s12 = a1*b11 + a2*b10 + a3*b9 + a4*b8 + a5*b7 + a6*b6 + a7*b5 + a8*b4 + a9*b3 + a10*b2 + a11*b1;
-  s13 = a2*b11 + a3*b10 + a4*b9 + a5*b8 + a6*b7 + a7*b6 + a8*b5 + a9*b4 + a10*b3 + a11*b2;
-  s14 = a3*b11 + a4*b10 + a5*b9 + a6*b8 + a7*b7 + a8*b6 + a9*b5 + a10*b4 + a11*b3;
-  s15 = a4*b11 + a5*b10 + a6*b9 + a7*b8 + a8*b7 + a9*b6 + a10*b5 + a11*b4;
-  s16 = a5*b11 + a6*b10 + a7*b9 + a8*b8 + a9*b7 + a10*b6 + a11*b5;
-  s17 = a6*b11 + a7*b10 + a8*b9 + a9*b8 + a10*b7 + a11*b6;
-  s18 = a7*b11 + a8*b10 + a9*b9 + a10*b8 + a11*b7;
-  s19 = a8*b11 + a9*b10 + a10*b9 + a11*b8;
-  s20 = a9*b11 + a10*b10 + a11*b9;
-  s21 = a10*b11 + a11*b10;
-  s22 = a11*b11;
-  s23 = 0;
-
-  carry0 = (s0 + (1L << 20)) >> 21; s1 += carry0; s0 -= carry0 * (1L << 21);
-  carry2 = (s2 + (1L << 20)) >> 21; s3 += carry2; s2 -= carry2 * (1L << 21);
-  carry4 = (s4 + (1L << 20)) >> 21; s5 += carry4; s4 -= carry4 * (1L << 21);
-  carry6 = (s6 + (1L << 20)) >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry8 = (s8 + (1L << 20)) >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry10 = (s10 + (1L << 20)) >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-  carry12 = (s12 + (1L << 20)) >> 21; s13 += carry12; s12 -= carry12 * (1L << 21);
-  carry14 = (s14 + (1L << 20)) >> 21; s15 += carry14; s14 -= carry14 * (1L << 21);
-  carry16 = (s16 + (1L << 20)) >> 21; s17 += carry16; s16 -= carry16 * (1L << 21);
-  carry18 = (s18 + (1L << 20)) >> 21; s19 += carry18; s18 -= carry18 * (1L << 21);
-  carry20 = (s20 + (1L << 20)) >> 21; s21 += carry20; s20 -= carry20 * (1L << 21);
-  carry22 = (s22 + (1L << 20)) >> 21; s23 += carry22; s22 -= carry22 * (1L << 21);
-
-  carry1 = (s1 + (1L << 20)) >> 21; s2 += carry1; s1 -= carry1 * (1L << 21);
-  carry3 = (s3 + (1L << 20)) >> 21; s4 += carry3; s3 -= carry3 * (1L << 21);
-  carry5 = (s5 + (1L << 20)) >> 21; s6 += carry5; s5 -= carry5 * (1L << 21);
-  carry7 = (s7 + (1L << 20)) >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry9 = (s9 + (1L << 20)) >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry11 = (s11 + (1L << 20)) >> 21; s12 += carry11; s11 -= carry11 * (1L << 21);
-  carry13 = (s13 + (1L << 20)) >> 21; s14 += carry13; s13 -= carry13 * (1L << 21);
-  carry15 = (s15 + (1L << 20)) >> 21; s16 += carry15; s15 -= carry15 * (1L << 21);
-  carry17 = (s17 + (1L << 20)) >> 21; s18 += carry17; s17 -= carry17 * (1L << 21);
-  carry19 = (s19 + (1L << 20)) >> 21; s20 += carry19; s19 -= carry19 * (1L << 21);
-  carry21 = (s21 + (1L << 20)) >> 21; s22 += carry21; s21 -= carry21 * (1L << 21);
-
-  s11 += s23 * 666643;
-  s12 += s23 * 470296;
-  s13 += s23 * 654183;
-  s14 -= s23 * 997805;
-  s15 += s23 * 136657;
-  s16 -= s23 * 683901;
-
-
-  s10 += s22 * 666643;
-  s11 += s22 * 470296;
-  s12 += s22 * 654183;
-  s13 -= s22 * 997805;
-  s14 += s22 * 136657;
-  s15 -= s22 * 683901;
-
-
-  s9 += s21 * 666643;
-  s10 += s21 * 470296;
-  s11 += s21 * 654183;
-  s12 -= s21 * 997805;
-  s13 += s21 * 136657;
-  s14 -= s21 * 683901;
-
-
-  s8 += s20 * 666643;
-  s9 += s20 * 470296;
-  s10 += s20 * 654183;
-  s11 -= s20 * 997805;
-  s12 += s20 * 136657;
-  s13 -= s20 * 683901;
-
-
-  s7 += s19 * 666643;
-  s8 += s19 * 470296;
-  s9 += s19 * 654183;
-  s10 -= s19 * 997805;
-  s11 += s19 * 136657;
-  s12 -= s19 * 683901;
-
-
-  s6 += s18 * 666643;
-  s7 += s18 * 470296;
-  s8 += s18 * 654183;
-  s9 -= s18 * 997805;
-  s10 += s18 * 136657;
-  s11 -= s18 * 683901;
-
-
-  carry6 = (s6 + (1L << 20)) >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry8 = (s8 + (1L << 20)) >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry10 = (s10 + (1L << 20)) >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-  carry12 = (s12 + (1L << 20)) >> 21; s13 += carry12; s12 -= carry12 * (1L << 21);
-  carry14 = (s14 + (1L << 20)) >> 21; s15 += carry14; s14 -= carry14 * (1L << 21);
-  carry16 = (s16 + (1L << 20)) >> 21; s17 += carry16; s16 -= carry16 * (1L << 21);
-
-  carry7 = (s7 + (1L << 20)) >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry9 = (s9 + (1L << 20)) >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry11 = (s11 + (1L << 20)) >> 21; s12 += carry11; s11 -= carry11 * (1L << 21);
-  carry13 = (s13 + (1L << 20)) >> 21; s14 += carry13; s13 -= carry13 * (1L << 21);
-  carry15 = (s15 + (1L << 20)) >> 21; s16 += carry15; s15 -= carry15 * (1L << 21);
-
-  s5 += s17 * 666643;
-  s6 += s17 * 470296;
-  s7 += s17 * 654183;
-  s8 -= s17 * 997805;
-  s9 += s17 * 136657;
-  s10 -= s17 * 683901;
-
-
-  s4 += s16 * 666643;
-  s5 += s16 * 470296;
-  s6 += s16 * 654183;
-  s7 -= s16 * 997805;
-  s8 += s16 * 136657;
-  s9 -= s16 * 683901;
-
-
-  s3 += s15 * 666643;
-  s4 += s15 * 470296;
-  s5 += s15 * 654183;
-  s6 -= s15 * 997805;
-  s7 += s15 * 136657;
-  s8 -= s15 * 683901;
-
-
-  s2 += s14 * 666643;
-  s3 += s14 * 470296;
-  s4 += s14 * 654183;
-  s5 -= s14 * 997805;
-  s6 += s14 * 136657;
-  s7 -= s14 * 683901;
-
-
-  s1 += s13 * 666643;
-  s2 += s13 * 470296;
-  s3 += s13 * 654183;
-  s4 -= s13 * 997805;
-  s5 += s13 * 136657;
-  s6 -= s13 * 683901;
-
-
-  s0 += s12 * 666643;
-  s1 += s12 * 470296;
-  s2 += s12 * 654183;
-  s3 -= s12 * 997805;
-  s4 += s12 * 136657;
-  s5 -= s12 * 683901;
-  s12 = 0;
-
-  carry0 = (s0 + (1L << 20)) >> 21; s1 += carry0; s0 -= carry0 * (1L << 21);
-  carry2 = (s2 + (1L << 20)) >> 21; s3 += carry2; s2 -= carry2 * (1L << 21);
-  carry4 = (s4 + (1L << 20)) >> 21; s5 += carry4; s4 -= carry4 * (1L << 21);
-  carry6 = (s6 + (1L << 20)) >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry8 = (s8 + (1L << 20)) >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry10 = (s10 + (1L << 20)) >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-
-  carry1 = (s1 + (1L << 20)) >> 21; s2 += carry1; s1 -= carry1 * (1L << 21);
-  carry3 = (s3 + (1L << 20)) >> 21; s4 += carry3; s3 -= carry3 * (1L << 21);
-  carry5 = (s5 + (1L << 20)) >> 21; s6 += carry5; s5 -= carry5 * (1L << 21);
-  carry7 = (s7 + (1L << 20)) >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry9 = (s9 + (1L << 20)) >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry11 = (s11 + (1L << 20)) >> 21; s12 += carry11; s11 -= carry11 * (1L << 21);
-
-  s0 += s12 * 666643;
-  s1 += s12 * 470296;
-  s2 += s12 * 654183;
-  s3 -= s12 * 997805;
-  s4 += s12 * 136657;
-  s5 -= s12 * 683901;
-  s12 = 0;
-
-  carry0 = s0 >> 21; s1 += carry0; s0 -= carry0 * (1L << 21);
-  carry1 = s1 >> 21; s2 += carry1; s1 -= carry1 * (1L << 21);
-  carry2 = s2 >> 21; s3 += carry2; s2 -= carry2 * (1L << 21);
-  carry3 = s3 >> 21; s4 += carry3; s3 -= carry3 * (1L << 21);
-  carry4 = s4 >> 21; s5 += carry4; s4 -= carry4 * (1L << 21);
-  carry5 = s5 >> 21; s6 += carry5; s5 -= carry5 * (1L << 21);
-  carry6 = s6 >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry7 = s7 >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry8 = s8 >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry9 = s9 >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry10 = s10 >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-  carry11 = s11 >> 21; s12 += carry11; s11 -= carry11 * (1L << 21);
-
-  s0 += s12 * 666643;
-  s1 += s12 * 470296;
-  s2 += s12 * 654183;
-  s3 -= s12 * 997805;
-  s4 += s12 * 136657;
-  s5 -= s12 * 683901;
-
-
-  carry0 = s0 >> 21; s1 += carry0; s0 -= carry0 * (1L << 21);
-  carry1 = s1 >> 21; s2 += carry1; s1 -= carry1 * (1L << 21);
-  carry2 = s2 >> 21; s3 += carry2; s2 -= carry2 * (1L << 21);
-  carry3 = s3 >> 21; s4 += carry3; s3 -= carry3 * (1L << 21);
-  carry4 = s4 >> 21; s5 += carry4; s4 -= carry4 * (1L << 21);
-  carry5 = s5 >> 21; s6 += carry5; s5 -= carry5 * (1L << 21);
-  carry6 = s6 >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry7 = s7 >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry8 = s8 >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry9 = s9 >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry10 = s10 >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-
-  s[0] = s0 >> 0;
-  s[1] = s0 >> 8;
-  s[2] = (s0 >> 16) | (s1 << 5);
-  s[3] = s1 >> 3;
-  s[4] = s1 >> 11;
-  s[5] = (s1 >> 19) | (s2 << 2);
-  s[6] = s2 >> 6;
-  s[7] = (s2 >> 14) | (s3 << 7);
-  s[8] = s3 >> 1;
-  s[9] = s3 >> 9;
-  s[10] = (s3 >> 17) | (s4 << 4);
-  s[11] = s4 >> 4;
-  s[12] = s4 >> 12;
-  s[13] = (s4 >> 20) | (s5 << 1);
-  s[14] = s5 >> 7;
-  s[15] = (s5 >> 15) | (s6 << 6);
-  s[16] = s6 >> 2;
-  s[17] = s6 >> 10;
-  s[18] = (s6 >> 18) | (s7 << 3);
-  s[19] = s7 >> 5;
-  s[20] = s7 >> 13;
-  s[21] = s8 >> 0;
-  s[22] = s8 >> 8;
-  s[23] = (s8 >> 16) | (s9 << 5);
-  s[24] = s9 >> 3;
-  s[25] = s9 >> 11;
-  s[26] = (s9 >> 19) | (s10 << 2);
-  s[27] = s10 >> 6;
-  s[28] = (s10 >> 14) | (s11 << 7);
-  s[29] = s11 >> 1;
-  s[30] = s11 >> 9;
-  s[31] = s11 >> 17;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc_reduce.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc_reduce.c
deleted file mode 100644
index 6d6bbf7..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sc_reduce.c
+++ /dev/null
@@ -1,275 +0,0 @@
-#include "sc.h"
-#include "crypto_int64.h"
-#include "crypto_uint32.h"
-#include "crypto_uint64.h"
-
-static crypto_uint64 load_3(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  return result;
-}
-
-static crypto_uint64 load_4(const unsigned char *in)
-{
-  crypto_uint64 result;
-  result = (crypto_uint64) in[0];
-  result |= ((crypto_uint64) in[1]) << 8;
-  result |= ((crypto_uint64) in[2]) << 16;
-  result |= ((crypto_uint64) in[3]) << 24;
-  return result;
-}
-
-/*
-Input:
-  s[0]+256*s[1]+...+256^63*s[63] = s
-
-Output:
-  s[0]+256*s[1]+...+256^31*s[31] = s mod l
-  where l = 2^252 + 27742317777372353535851937790883648493.
-  Overwrites s in place.
-*/
-
-void sc_reduce(unsigned char *s)
-{
-  crypto_int64 s0 = 2097151 & load_3(s);
-  crypto_int64 s1 = 2097151 & (load_4(s + 2) >> 5);
-  crypto_int64 s2 = 2097151 & (load_3(s + 5) >> 2);
-  crypto_int64 s3 = 2097151 & (load_4(s + 7) >> 7);
-  crypto_int64 s4 = 2097151 & (load_4(s + 10) >> 4);
-  crypto_int64 s5 = 2097151 & (load_3(s + 13) >> 1);
-  crypto_int64 s6 = 2097151 & (load_4(s + 15) >> 6);
-  crypto_int64 s7 = 2097151 & (load_3(s + 18) >> 3);
-  crypto_int64 s8 = 2097151 & load_3(s + 21);
-  crypto_int64 s9 = 2097151 & (load_4(s + 23) >> 5);
-  crypto_int64 s10 = 2097151 & (load_3(s + 26) >> 2);
-  crypto_int64 s11 = 2097151 & (load_4(s + 28) >> 7);
-  crypto_int64 s12 = 2097151 & (load_4(s + 31) >> 4);
-  crypto_int64 s13 = 2097151 & (load_3(s + 34) >> 1);
-  crypto_int64 s14 = 2097151 & (load_4(s + 36) >> 6);
-  crypto_int64 s15 = 2097151 & (load_3(s + 39) >> 3);
-  crypto_int64 s16 = 2097151 & load_3(s + 42);
-  crypto_int64 s17 = 2097151 & (load_4(s + 44) >> 5);
-  crypto_int64 s18 = 2097151 & (load_3(s + 47) >> 2);
-  crypto_int64 s19 = 2097151 & (load_4(s + 49) >> 7);
-  crypto_int64 s20 = 2097151 & (load_4(s + 52) >> 4);
-  crypto_int64 s21 = 2097151 & (load_3(s + 55) >> 1);
-  crypto_int64 s22 = 2097151 & (load_4(s + 57) >> 6);
-  crypto_int64 s23 = (load_4(s + 60) >> 3);
-  crypto_int64 carry0;
-  crypto_int64 carry1;
-  crypto_int64 carry2;
-  crypto_int64 carry3;
-  crypto_int64 carry4;
-  crypto_int64 carry5;
-  crypto_int64 carry6;
-  crypto_int64 carry7;
-  crypto_int64 carry8;
-  crypto_int64 carry9;
-  crypto_int64 carry10;
-  crypto_int64 carry11;
-  crypto_int64 carry12;
-  crypto_int64 carry13;
-  crypto_int64 carry14;
-  crypto_int64 carry15;
-  crypto_int64 carry16;
-
-  s11 += s23 * 666643;
-  s12 += s23 * 470296;
-  s13 += s23 * 654183;
-  s14 -= s23 * 997805;
-  s15 += s23 * 136657;
-  s16 -= s23 * 683901;
-
-
-  s10 += s22 * 666643;
-  s11 += s22 * 470296;
-  s12 += s22 * 654183;
-  s13 -= s22 * 997805;
-  s14 += s22 * 136657;
-  s15 -= s22 * 683901;
-
-
-  s9 += s21 * 666643;
-  s10 += s21 * 470296;
-  s11 += s21 * 654183;
-  s12 -= s21 * 997805;
-  s13 += s21 * 136657;
-  s14 -= s21 * 683901;
-
-
-  s8 += s20 * 666643;
-  s9 += s20 * 470296;
-  s10 += s20 * 654183;
-  s11 -= s20 * 997805;
-  s12 += s20 * 136657;
-  s13 -= s20 * 683901;
-
-
-  s7 += s19 * 666643;
-  s8 += s19 * 470296;
-  s9 += s19 * 654183;
-  s10 -= s19 * 997805;
-  s11 += s19 * 136657;
-  s12 -= s19 * 683901;
-
-
-  s6 += s18 * 666643;
-  s7 += s18 * 470296;
-  s8 += s18 * 654183;
-  s9 -= s18 * 997805;
-  s10 += s18 * 136657;
-  s11 -= s18 * 683901;
-
-
-  carry6 = (s6 + (1L << 20)) >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry8 = (s8 + (1L << 20)) >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry10 = (s10 + (1L << 20)) >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-  carry12 = (s12 + (1L << 20)) >> 21; s13 += carry12; s12 -= carry12 * (1L << 21);
-  carry14 = (s14 + (1L << 20)) >> 21; s15 += carry14; s14 -= carry14 * (1L << 21);
-  carry16 = (s16 + (1L << 20)) >> 21; s17 += carry16; s16 -= carry16 * (1L << 21);
-
-  carry7 = (s7 + (1L << 20)) >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry9 = (s9 + (1L << 20)) >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry11 = (s11 + (1L << 20)) >> 21; s12 += carry11; s11 -= carry11 * (1L << 21);
-  carry13 = (s13 + (1L << 20)) >> 21; s14 += carry13; s13 -= carry13 * (1L << 21);
-  carry15 = (s15 + (1L << 20)) >> 21; s16 += carry15; s15 -= carry15 * (1L << 21);
-
-  s5 += s17 * 666643;
-  s6 += s17 * 470296;
-  s7 += s17 * 654183;
-  s8 -= s17 * 997805;
-  s9 += s17 * 136657;
-  s10 -= s17 * 683901;
-
-
-  s4 += s16 * 666643;
-  s5 += s16 * 470296;
-  s6 += s16 * 654183;
-  s7 -= s16 * 997805;
-  s8 += s16 * 136657;
-  s9 -= s16 * 683901;
-
-
-  s3 += s15 * 666643;
-  s4 += s15 * 470296;
-  s5 += s15 * 654183;
-  s6 -= s15 * 997805;
-  s7 += s15 * 136657;
-  s8 -= s15 * 683901;
-
-
-  s2 += s14 * 666643;
-  s3 += s14 * 470296;
-  s4 += s14 * 654183;
-  s5 -= s14 * 997805;
-  s6 += s14 * 136657;
-  s7 -= s14 * 683901;
-
-
-  s1 += s13 * 666643;
-  s2 += s13 * 470296;
-  s3 += s13 * 654183;
-  s4 -= s13 * 997805;
-  s5 += s13 * 136657;
-  s6 -= s13 * 683901;
-
-
-  s0 += s12 * 666643;
-  s1 += s12 * 470296;
-  s2 += s12 * 654183;
-  s3 -= s12 * 997805;
-  s4 += s12 * 136657;
-  s5 -= s12 * 683901;
-  s12 = 0;
-
-  carry0 = (s0 + (1L << 20)) >> 21; s1 += carry0; s0 -= carry0 * (1L << 21);
-  carry2 = (s2 + (1L << 20)) >> 21; s3 += carry2; s2 -= carry2 * (1L << 21);
-  carry4 = (s4 + (1L << 20)) >> 21; s5 += carry4; s4 -= carry4 * (1L << 21);
-  carry6 = (s6 + (1L << 20)) >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry8 = (s8 + (1L << 20)) >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry10 = (s10 + (1L << 20)) >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-
-  carry1 = (s1 + (1L << 20)) >> 21; s2 += carry1; s1 -= carry1 * (1L << 21);
-  carry3 = (s3 + (1L << 20)) >> 21; s4 += carry3; s3 -= carry3 * (1L << 21);
-  carry5 = (s5 + (1L << 20)) >> 21; s6 += carry5; s5 -= carry5 * (1L << 21);
-  carry7 = (s7 + (1L << 20)) >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry9 = (s9 + (1L << 20)) >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry11 = (s11 + (1L << 20)) >> 21; s12 += carry11; s11 -= carry11 * (1L << 21);
-
-  s0 += s12 * 666643;
-  s1 += s12 * 470296;
-  s2 += s12 * 654183;
-  s3 -= s12 * 997805;
-  s4 += s12 * 136657;
-  s5 -= s12 * 683901;
-  s12 = 0;
-
-  carry0 = s0 >> 21; s1 += carry0; s0 -= carry0 * (1L << 21);
-  carry1 = s1 >> 21; s2 += carry1; s1 -= carry1 * (1L << 21);
-  carry2 = s2 >> 21; s3 += carry2; s2 -= carry2 * (1L << 21);
-  carry3 = s3 >> 21; s4 += carry3; s3 -= carry3 * (1L << 21);
-  carry4 = s4 >> 21; s5 += carry4; s4 -= carry4 * (1L << 21);
-  carry5 = s5 >> 21; s6 += carry5; s5 -= carry5 * (1L << 21);
-  carry6 = s6 >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry7 = s7 >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry8 = s8 >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry9 = s9 >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry10 = s10 >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-  carry11 = s11 >> 21; s12 += carry11; s11 -= carry11 * (1L << 21);
-
-  s0 += s12 * 666643;
-  s1 += s12 * 470296;
-  s2 += s12 * 654183;
-  s3 -= s12 * 997805;
-  s4 += s12 * 136657;
-  s5 -= s12 * 683901;
-
-
-  carry0 = s0 >> 21; s1 += carry0; s0 -= carry0 * (1L << 21);
-  carry1 = s1 >> 21; s2 += carry1; s1 -= carry1 * (1L << 21);
-  carry2 = s2 >> 21; s3 += carry2; s2 -= carry2 * (1L << 21);
-  carry3 = s3 >> 21; s4 += carry3; s3 -= carry3 * (1L << 21);
-  carry4 = s4 >> 21; s5 += carry4; s4 -= carry4 * (1L << 21);
-  carry5 = s5 >> 21; s6 += carry5; s5 -= carry5 * (1L << 21);
-  carry6 = s6 >> 21; s7 += carry6; s6 -= carry6 * (1L << 21);
-  carry7 = s7 >> 21; s8 += carry7; s7 -= carry7 * (1L << 21);
-  carry8 = s8 >> 21; s9 += carry8; s8 -= carry8 * (1L << 21);
-  carry9 = s9 >> 21; s10 += carry9; s9 -= carry9 * (1L << 21);
-  carry10 = s10 >> 21; s11 += carry10; s10 -= carry10 * (1L << 21);
-
-  s[0] = s0 >> 0;
-  s[1] = s0 >> 8;
-  s[2] = (s0 >> 16) | (s1 << 5);
-  s[3] = s1 >> 3;
-  s[4] = s1 >> 11;
-  s[5] = (s1 >> 19) | (s2 << 2);
-  s[6] = s2 >> 6;
-  s[7] = (s2 >> 14) | (s3 << 7);
-  s[8] = s3 >> 1;
-  s[9] = s3 >> 9;
-  s[10] = (s3 >> 17) | (s4 << 4);
-  s[11] = s4 >> 4;
-  s[12] = s4 >> 12;
-  s[13] = (s4 >> 20) | (s5 << 1);
-  s[14] = s5 >> 7;
-  s[15] = (s5 >> 15) | (s6 << 6);
-  s[16] = s6 >> 2;
-  s[17] = s6 >> 10;
-  s[18] = (s6 >> 18) | (s7 << 3);
-  s[19] = s7 >> 5;
-  s[20] = s7 >> 13;
-  s[21] = s8 >> 0;
-  s[22] = s8 >> 8;
-  s[23] = (s8 >> 16) | (s9 << 5);
-  s[24] = s9 >> 3;
-  s[25] = s9 >> 11;
-  s[26] = (s9 >> 19) | (s10 << 2);
-  s[27] = s10 >> 6;
-  s[28] = (s10 >> 14) | (s11 << 7);
-  s[29] = s11 >> 1;
-  s[30] = s11 >> 9;
-  s[31] = s11 >> 17;
-}
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c
index f3f5186..bbdd8f7 100644
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c
+++ b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sign.c
@@ -3,46 +3,104 @@
 
 #include "crypto_hash_sha512.h"
 #include "crypto_sign_ed25519.h"
-#include "ge.h"
-#include "sc.h"
+#include "sign_ed25519_ref10.h"
+#include "private/ed25519_ref10.h"
+#include "randombytes.h"
 #include "utils.h"
 
+void
+_crypto_sign_ed25519_ref10_hinit(crypto_hash_sha512_state *hs, int prehashed)
+{
+    static const unsigned char DOM2PREFIX[32 + 2] = {
+        'S', 'i', 'g', 'E', 'd', '2', '5', '5', '1', '9', ' ',
+        'n', 'o', ' ',
+        'E', 'd', '2', '5', '5', '1', '9', ' ',
+        'c', 'o', 'l', 'l', 'i', 's', 'i', 'o', 'n', 's', 1, 0
+    };
+
+    crypto_hash_sha512_init(hs);
+    if (prehashed) {
+        crypto_hash_sha512_update(hs, DOM2PREFIX, sizeof DOM2PREFIX);
+    }
+}
+
+static inline void
+_crypto_sign_ed25519_clamp(unsigned char k[32])
+{
+    k[0] &= 248;
+    k[31] &= 127;
+    k[31] |= 64;
+}
+
+#ifdef ED25519_NONDETERMINISTIC
+/* r = hash(B || empty_labelset || Z || pad1 || k || pad2 || empty_labelset || K || extra || M) (mod q) */
+static void
+_crypto_sign_ed25519_synthetic_r_hv(crypto_hash_sha512_state *hs,
+                                    unsigned char Z[32],
+                                    const unsigned char sk[64])
+{
+    static const unsigned char B[32] = {
+        0x58, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
+        0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
+        0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
+        0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66, 0x66,
+    };
+    static const unsigned char zeros[128] = { 0x00 };
+    static const unsigned char empty_labelset[3] = { 0x02, 0x00, 0x00 };
+
+    crypto_hash_sha512_update(hs, B, 32);
+    crypto_hash_sha512_update(hs, empty_labelset, 3);
+    randombytes_buf(Z, 32);
+    crypto_hash_sha512_update(hs, Z, 32);
+    crypto_hash_sha512_update(hs, zeros, 128 - (32 + 3 + 32) % 128);
+    crypto_hash_sha512_update(hs, sk, 32);
+    crypto_hash_sha512_update(hs, zeros, 128 - 32 % 128);
+    crypto_hash_sha512_update(hs, empty_labelset, 3);
+    crypto_hash_sha512_update(hs, sk + 32, 32);
+    /* empty extra */
+}
+#endif
+
 int
-crypto_sign_ed25519_detached(unsigned char *sig, unsigned long long *siglen_p,
-                             const unsigned char *m, unsigned long long mlen,
-                             const unsigned char *sk)
+_crypto_sign_ed25519_detached(unsigned char *sig, unsigned long long *siglen_p,
+                              const unsigned char *m, unsigned long long mlen,
+                              const unsigned char *sk, int prehashed)
 {
     crypto_hash_sha512_state hs;
-    unsigned char az[64];
-    unsigned char nonce[64];
-    unsigned char hram[64];
-    ge_p3 R;
+    unsigned char            az[64];
+    unsigned char            nonce[64];
+    unsigned char            hram[64];
+    ge25519_p3               R;
 
-    crypto_hash_sha512(az, sk, 32);
-    az[0] &= 248;
-    az[31] &= 63;
-    az[31] |= 64;
+    _crypto_sign_ed25519_ref10_hinit(&hs, prehashed);
 
-    crypto_hash_sha512_init(&hs);
+    crypto_hash_sha512(az, sk, 32);
+#ifdef ED25519_NONDETERMINISTIC
+    _crypto_sign_ed25519_synthetic_r_hv(&hs, nonce /* Z */, az);
+#else
     crypto_hash_sha512_update(&hs, az + 32, 32);
+#endif
+
     crypto_hash_sha512_update(&hs, m, mlen);
     crypto_hash_sha512_final(&hs, nonce);
 
     memmove(sig + 32, sk + 32, 32);
 
-    sc_reduce(nonce);
-    ge_scalarmult_base(&R, nonce);
-    ge_p3_tobytes(sig, &R);
+    sc25519_reduce(nonce);
+    ge25519_scalarmult_base(&R, nonce);
+    ge25519_p3_tobytes(sig, &R);
 
-    crypto_hash_sha512_init(&hs);
+    _crypto_sign_ed25519_ref10_hinit(&hs, prehashed);
     crypto_hash_sha512_update(&hs, sig, 64);
     crypto_hash_sha512_update(&hs, m, mlen);
     crypto_hash_sha512_final(&hs, hram);
 
-    sc_reduce(hram);
-    sc_muladd(sig + 32, hram, az, nonce);
+    sc25519_reduce(hram);
+    _crypto_sign_ed25519_clamp(az);
+    sc25519_muladd(sig + 32, hram, az, nonce);
 
     sodium_memzero(az, sizeof az);
+    sodium_memzero(nonce, sizeof nonce);
 
     if (siglen_p != NULL) {
         *siglen_p = 64U;
@@ -50,6 +108,14 @@ crypto_sign_ed25519_detached(unsigned char *sig, unsigned long long *siglen_p,
     return 0;
 }
 
+int
+crypto_sign_ed25519_detached(unsigned char *sig, unsigned long long *siglen_p,
+                             const unsigned char *m, unsigned long long mlen,
+                             const unsigned char *sk)
+{
+    return _crypto_sign_ed25519_detached(sig, siglen_p, m, mlen, sk, 0);
+}
+
 int
 crypto_sign_ed25519(unsigned char *sm, unsigned long long *smlen_p,
                     const unsigned char *m, unsigned long long mlen,
@@ -58,10 +124,9 @@ crypto_sign_ed25519(unsigned char *sm, unsigned long long *smlen_p,
     unsigned long long siglen;
 
     memmove(sm + crypto_sign_ed25519_BYTES, m, mlen);
-/* LCOV_EXCL_START */
-    if (crypto_sign_ed25519_detached(sm, &siglen,
-                                     sm + crypto_sign_ed25519_BYTES,
-                                     mlen, sk) != 0 ||
+    /* LCOV_EXCL_START */
+    if (crypto_sign_ed25519_detached(
+            sm, &siglen, sm + crypto_sign_ed25519_BYTES, mlen, sk) != 0 ||
         siglen != crypto_sign_ed25519_BYTES) {
         if (smlen_p != NULL) {
             *smlen_p = 0;
@@ -69,7 +134,7 @@ crypto_sign_ed25519(unsigned char *sm, unsigned long long *smlen_p,
         memset(sm, 0, mlen + crypto_sign_ed25519_BYTES);
         return -1;
     }
-/* LCOV_EXCL_STOP */
+    /* LCOV_EXCL_STOP */
 
     if (smlen_p != NULL) {
         *smlen_p = mlen + siglen;
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sqrtm1.h b/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sqrtm1.h
deleted file mode 100644
index d8caa23..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/ref10/sqrtm1.h
+++ /dev/null
@@ -1 +0,0 @@
--32595792,-7943725,9377950,3500415,12389472,-272473,-25146209,-2005654,326686,11406482
diff --git a/libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c b/libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c
deleted file mode 100644
index 7ba6b4c..0000000
--- a/libsodium/src/libsodium/crypto_sign/ed25519/sign_ed25519_api.c
+++ /dev/null
@@ -1,39 +0,0 @@
-
-#include <string.h>
-
-#include "crypto_sign_ed25519.h"
-
-size_t
-crypto_sign_ed25519_bytes(void) {
-    return crypto_sign_ed25519_BYTES;
-}
-
-size_t
-crypto_sign_ed25519_seedbytes(void) {
-    return crypto_sign_ed25519_SEEDBYTES;
-}
-
-size_t
-crypto_sign_ed25519_publickeybytes(void) {
-    return crypto_sign_ed25519_PUBLICKEYBYTES;
-}
-
-size_t
-crypto_sign_ed25519_secretkeybytes(void) {
-    return crypto_sign_ed25519_SECRETKEYBYTES;
-}
-
-int
-crypto_sign_ed25519_sk_to_seed(unsigned char *seed, const unsigned char *sk)
-{
-    memmove(seed, sk, crypto_sign_ed25519_SEEDBYTES);
-    return 0;
-}
-
-int
-crypto_sign_ed25519_sk_to_pk(unsigned char *pk, const unsigned char *sk)
-{
-    memmove(pk, sk + crypto_sign_ed25519_SEEDBYTES,
-            crypto_sign_ed25519_PUBLICKEYBYTES);
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/afternm_aes128ctr.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
deleted file mode 100644
index 9c76f22..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/afternm_aes128ctr.c
+++ /dev/null
@@ -1,159 +0,0 @@
-/* Author: Peter Schwabe, ported from an assembly implementation by Emilia Käsper
- * Date: 2009-03-19
- * Public domain */
-
-#include "crypto_stream_aes128ctr.h"
-#include "int128.h"
-#include "common.h"
-#include "consts.h"
-
-int crypto_stream_aes128ctr_afternm(unsigned char *out, unsigned long long len, const unsigned char *nonce, const unsigned char *c)
-{
-
-  int128 xmm0;
-  int128 xmm1;
-  int128 xmm2;
-  int128 xmm3;
-  int128 xmm4;
-  int128 xmm5;
-  int128 xmm6;
-  int128 xmm7;
-
-  int128 xmm8;
-  int128 xmm9;
-  int128 xmm10;
-  int128 xmm11;
-  int128 xmm12;
-  int128 xmm13;
-  int128 xmm14;
-  int128 xmm15;
-
-  int128 nonce_stack;
-  unsigned long long lensav;
-  unsigned char bl[128];
-  unsigned char *blp;
-  unsigned char *np;
-  unsigned char b;
-
-  uint32 tmp;
-
-  /* Copy nonce on the stack */
-  copy2(&nonce_stack, (const int128 *) (nonce + 0));
-  np = (unsigned char *)&nonce_stack;
-
-    enc_block:
-
-    xmm0 = *(int128 *) (np + 0);
-    copy2(&xmm1, &xmm0);
-    shufb(&xmm1, SWAP32);
-    copy2(&xmm2, &xmm1);
-    copy2(&xmm3, &xmm1);
-    copy2(&xmm4, &xmm1);
-    copy2(&xmm5, &xmm1);
-    copy2(&xmm6, &xmm1);
-    copy2(&xmm7, &xmm1);
-
-    add_uint32_big(&xmm1, 1);
-    add_uint32_big(&xmm2, 2);
-    add_uint32_big(&xmm3, 3);
-    add_uint32_big(&xmm4, 4);
-    add_uint32_big(&xmm5, 5);
-    add_uint32_big(&xmm6, 6);
-    add_uint32_big(&xmm7, 7);
-
-    shufb(&xmm0, M0);
-    shufb(&xmm1, M0SWAP);
-    shufb(&xmm2, M0SWAP);
-    shufb(&xmm3, M0SWAP);
-    shufb(&xmm4, M0SWAP);
-    shufb(&xmm5, M0SWAP);
-    shufb(&xmm6, M0SWAP);
-    shufb(&xmm7, M0SWAP);
-
-    bitslice(xmm7, xmm6, xmm5, xmm4, xmm3, xmm2, xmm1, xmm0, xmm8)
-
-    aesround( 1, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 2, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 3, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 4, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 5, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 6, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 7, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 8, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 9, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    lastround(xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-
-    bitslice(xmm13, xmm10, xmm15, xmm11, xmm14, xmm12, xmm9, xmm8, xmm0)
-
-    if(len < 128) goto partial;
-    if(len == 128) goto full;
-
-    tmp = load32_bigendian(np + 12);
-    tmp += 8;
-    store32_bigendian(np + 12, tmp);
-
-    *(int128 *) (out + 0) = xmm8;
-    *(int128 *) (out + 16) = xmm9;
-    *(int128 *) (out + 32) = xmm12;
-    *(int128 *) (out + 48) = xmm14;
-    *(int128 *) (out + 64) = xmm11;
-    *(int128 *) (out + 80) = xmm15;
-    *(int128 *) (out + 96) = xmm10;
-    *(int128 *) (out + 112) = xmm13;
-
-    len -= 128;
-    out += 128;
-
-    goto enc_block;
-
-    partial:
-
-    lensav = len;
-    len >>= 4;
-
-    tmp = load32_bigendian(np + 12);
-    tmp += len;
-    store32_bigendian(np + 12, tmp);
-
-    blp = bl;
-    *(int128 *)(blp + 0) = xmm8;
-    *(int128 *)(blp + 16) = xmm9;
-    *(int128 *)(blp + 32) = xmm12;
-    *(int128 *)(blp + 48) = xmm14;
-    *(int128 *)(blp + 64) = xmm11;
-    *(int128 *)(blp + 80) = xmm15;
-    *(int128 *)(blp + 96) = xmm10;
-    *(int128 *)(blp + 112) = xmm13;
-
-    bytes:
-
-    if(lensav == 0) goto end;
-
-    b = blp[0]; /* clang false positive */
-    *(unsigned char *)(out + 0) = b;
-
-    blp += 1;
-    out +=1;
-    lensav -= 1;
-
-    goto bytes;
-
-    full:
-
-    tmp = load32_bigendian(np + 12);
-    tmp += 8;
-    store32_bigendian(np + 12, tmp);
-
-    *(int128 *) (out + 0) = xmm8;
-    *(int128 *) (out + 16) = xmm9;
-    *(int128 *) (out + 32) = xmm12;
-    *(int128 *) (out + 48) = xmm14;
-    *(int128 *) (out + 64) = xmm11;
-    *(int128 *) (out + 80) = xmm15;
-    *(int128 *) (out + 96) = xmm10;
-    *(int128 *) (out + 112) = xmm13;
-
-    end:
-    return 0;
-
-}
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
deleted file mode 100644
index 0105cf1..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/beforenm_aes128ctr.c
+++ /dev/null
@@ -1,59 +0,0 @@
-/* Author: Peter Schwabe, ported from an assembly implementation by Emilia Käsper
- * Date: 2009-03-19
- * Public domain */
-
-#include "crypto_stream_aes128ctr.h"
-#include "consts.h"
-#include "int128.h"
-#include "common.h"
-
-int crypto_stream_aes128ctr_beforenm(unsigned char *c, const unsigned char *k)
-{
-
-  /*
-     int64 x0;
-     int64 x1;
-     int64 x2;
-     int64 x3;
-     int64 e;
-     int64 q0;
-     int64 q1;
-     int64 q2;
-     int64 q3;
-     */
-
-  int128 xmm0;
-  int128 xmm1;
-  int128 xmm2;
-  int128 xmm3;
-  int128 xmm4;
-  int128 xmm5;
-  int128 xmm6;
-  int128 xmm7;
-  int128 xmm8;
-  int128 xmm9;
-  int128 xmm10;
-  int128 xmm11;
-  int128 xmm12;
-  int128 xmm13;
-  int128 xmm14;
-  int128 xmm15;
-  int128 t;
-
-  bitslicekey0(k, c)
-
-    keyexpbs1(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    keyexpbs(xmm0, xmm1, xmm4, xmm6, xmm3, xmm7, xmm2, xmm5, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm1);, 2,c)
-    keyexpbs(xmm0, xmm1, xmm3, xmm2, xmm6, xmm5, xmm4, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm6);, 3,c)
-    keyexpbs(xmm0, xmm1, xmm6, xmm4, xmm2, xmm7, xmm3, xmm5, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm3);, 4,c)
-
-    keyexpbs(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm3);, 5,c)
-    keyexpbs(xmm0, xmm1, xmm4, xmm6, xmm3, xmm7, xmm2, xmm5, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm5);, 6,c)
-    keyexpbs(xmm0, xmm1, xmm3, xmm2, xmm6, xmm5, xmm4, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm3);, 7,c)
-    keyexpbs(xmm0, xmm1, xmm6, xmm4, xmm2, xmm7, xmm3, xmm5, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm7);, 8,c)
-
-    keyexpbs(xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xor_rcon(&xmm0); xor_rcon(&xmm1); xor_rcon(&xmm6); xor_rcon(&xmm3);, 9,c)
-    keyexpbs10(xmm0, xmm1, xmm4, xmm6, xmm3, xmm7, xmm2, xmm5, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h
deleted file mode 100644
index 3923c02..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common.h
+++ /dev/null
@@ -1,788 +0,0 @@
-/* Author: Peter Schwabe, ported from an assembly implementation by Emilia Käsper
- Date: 2009-03-19
- Public domain */
-#ifndef COMMON_H
-#define COMMON_H
-
-#include "types.h"
-
-#define load32_bigendian crypto_stream_aes128ctr_portable_load32_bigendian
-uint32 load32_bigendian(const unsigned char *x);
-
-#define store32_bigendian crypto_stream_aes128ctr_portable_store32_bigendian
-void store32_bigendian(unsigned char *x,uint32 u);
-
-#define load32_littleendian crypto_stream_aes128ctr_portable_load32_littleendian
-uint32 load32_littleendian(const unsigned char *x);
-
-#define store32_littleendian crypto_stream_aes128ctr_portable_store32_littleendian
-void store32_littleendian(unsigned char *x,uint32 u);
-
-#define load64_littleendian crypto_stream_aes128ctr_portable_load64_littleendian
-uint64 load64_littleendian(const unsigned char *x);
-
-#define store64_littleendian crypto_stream_aes128ctr_portable_store64_littleendian
-void store64_littleendian(unsigned char *x,uint64 u);
-
-/* Macros required only for key expansion */
-
-#define keyexpbs1(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7, bskey) \
-  rotbyte(&b0);\
-  rotbyte(&b1);\
-  rotbyte(&b2);\
-  rotbyte(&b3);\
-  rotbyte(&b4);\
-  rotbyte(&b5);\
-  rotbyte(&b6);\
-  rotbyte(&b7);\
-  ;\
-  sbox(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7);\
-  ;\
-  xor_rcon(&b0);\
-  shufb(&b0, EXPB0);\
-  shufb(&b1, EXPB0);\
-  shufb(&b4, EXPB0);\
-  shufb(&b6, EXPB0);\
-  shufb(&b3, EXPB0);\
-  shufb(&b7, EXPB0);\
-  shufb(&b2, EXPB0);\
-  shufb(&b5, EXPB0);\
-  shufb(&b0, EXPB0);\
-  ;\
-  t0 = *(int128 *)(bskey + 0);\
-  t1 = *(int128 *)(bskey + 16);\
-  t2 = *(int128 *)(bskey + 32);\
-  t3 = *(int128 *)(bskey + 48);\
-  t4 = *(int128 *)(bskey + 64);\
-  t5 = *(int128 *)(bskey + 80);\
-  t6 = *(int128 *)(bskey + 96);\
-  t7 = *(int128 *)(bskey + 112);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  *(int128 *)(bskey + 128) = b0;\
-  *(int128 *)(bskey + 144) = b1;\
-  *(int128 *)(bskey + 160) = b4;\
-  *(int128 *)(bskey + 176) = b6;\
-  *(int128 *)(bskey + 192) = b3;\
-  *(int128 *)(bskey + 208) = b7;\
-  *(int128 *)(bskey + 224) = b2;\
-  *(int128 *)(bskey + 240) = b5;\
-
-#define keyexpbs10(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7, bskey) ;\
-  toggle(&b0);\
-  toggle(&b1);\
-  toggle(&b5);\
-  toggle(&b6);\
-  rotbyte(&b0);\
-  rotbyte(&b1);\
-  rotbyte(&b2);\
-  rotbyte(&b3);\
-  rotbyte(&b4);\
-  rotbyte(&b5);\
-  rotbyte(&b6);\
-  rotbyte(&b7);\
-  ;\
-  sbox(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7);\
-  ;\
-  xor_rcon(&b1);\
-  xor_rcon(&b4);\
-  xor_rcon(&b3);\
-  xor_rcon(&b7);\
-  shufb(&b0, EXPB0);\
-  shufb(&b1, EXPB0);\
-  shufb(&b4, EXPB0);\
-  shufb(&b6, EXPB0);\
-  shufb(&b3, EXPB0);\
-  shufb(&b7, EXPB0);\
-  shufb(&b2, EXPB0);\
-  shufb(&b5, EXPB0);\
-  ;\
-  t0 = *(int128 *)(bskey + 9 * 128 +   0);\
-  t1 = *(int128 *)(bskey + 9 * 128 +  16);\
-  t2 = *(int128 *)(bskey + 9 * 128 +  32);\
-  t3 = *(int128 *)(bskey + 9 * 128 +  48);\
-  t4 = *(int128 *)(bskey + 9 * 128 +  64);\
-  t5 = *(int128 *)(bskey + 9 * 128 +  80);\
-  t6 = *(int128 *)(bskey + 9 * 128 +  96);\
-  t7 = *(int128 *)(bskey + 9 * 128 + 112);\
-  ;\
-  toggle(&t0);\
-  toggle(&t1);\
-  toggle(&t5);\
-  toggle(&t6);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  shufb(&b0, M0);\
-  shufb(&b1, M0);\
-  shufb(&b2, M0);\
-  shufb(&b3, M0);\
-  shufb(&b4, M0);\
-  shufb(&b5, M0);\
-  shufb(&b6, M0);\
-  shufb(&b7, M0);\
-  ;\
-  *(int128 *)(bskey + 1280) = b0;\
-  *(int128 *)(bskey + 1296) = b1;\
-  *(int128 *)(bskey + 1312) = b4;\
-  *(int128 *)(bskey + 1328) = b6;\
-  *(int128 *)(bskey + 1344) = b3;\
-  *(int128 *)(bskey + 1360) = b7;\
-  *(int128 *)(bskey + 1376) = b2;\
-  *(int128 *)(bskey + 1392) = b5;\
-
-
-#define keyexpbs(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7, rcon, i, bskey) \
-  toggle(&b0);\
-  toggle(&b1);\
-  toggle(&b5);\
-  toggle(&b6);\
-  rotbyte(&b0);\
-  rotbyte(&b1);\
-  rotbyte(&b2);\
-  rotbyte(&b3);\
-  rotbyte(&b4);\
-  rotbyte(&b5);\
-  rotbyte(&b6);\
-  rotbyte(&b7);\
-  ;\
-  sbox(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7);\
-  ;\
-  rcon;\
-  shufb(&b0, EXPB0);\
-  shufb(&b1, EXPB0);\
-  shufb(&b4, EXPB0);\
-  shufb(&b6, EXPB0);\
-  shufb(&b3, EXPB0);\
-  shufb(&b7, EXPB0);\
-  shufb(&b2, EXPB0);\
-  shufb(&b5, EXPB0);\
-  ;\
-  t0 = *(int128 *)(bskey + (i-1) * 128 +   0);\
-  t1 = *(int128 *)(bskey + (i-1) * 128 +  16);\
-  t2 = *(int128 *)(bskey + (i-1) * 128 +  32);\
-  t3 = *(int128 *)(bskey + (i-1) * 128 +  48);\
-  t4 = *(int128 *)(bskey + (i-1) * 128 +  64);\
-  t5 = *(int128 *)(bskey + (i-1) * 128 +  80);\
-  t6 = *(int128 *)(bskey + (i-1) * 128 +  96);\
-  t7 = *(int128 *)(bskey + (i-1) * 128 + 112);\
-  ;\
-  toggle(&t0);\
-  toggle(&t1);\
-  toggle(&t5);\
-  toggle(&t6);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  rshift32_littleendian(&t0, 8);\
-  rshift32_littleendian(&t1, 8);\
-  rshift32_littleendian(&t2, 8);\
-  rshift32_littleendian(&t3, 8);\
-  rshift32_littleendian(&t4, 8);\
-  rshift32_littleendian(&t5, 8);\
-  rshift32_littleendian(&t6, 8);\
-  rshift32_littleendian(&t7, 8);\
-  ;\
-  xor2(&b0, &t0);\
-  xor2(&b1, &t1);\
-  xor2(&b4, &t2);\
-  xor2(&b6, &t3);\
-  xor2(&b3, &t4);\
-  xor2(&b7, &t5);\
-  xor2(&b2, &t6);\
-  xor2(&b5, &t7);\
-  ;\
-  *(int128 *)(bskey + i*128 +   0) = b0;\
-  *(int128 *)(bskey + i*128 +  16) = b1;\
-  *(int128 *)(bskey + i*128 +  32) = b4;\
-  *(int128 *)(bskey + i*128 +  48) = b6;\
-  *(int128 *)(bskey + i*128 +  64) = b3;\
-  *(int128 *)(bskey + i*128 +  80) = b7;\
-  *(int128 *)(bskey + i*128 +  96) = b2;\
-  *(int128 *)(bskey + i*128 + 112) = b5;\
-
-/* Macros used in multiple contexts */
-
-#define bitslicekey0(key, bskey) \
-  xmm0 = *(const int128 *) (key + 0);\
-  shufb(&xmm0, M0);\
-  copy2(&xmm1, &xmm0);\
-  copy2(&xmm2, &xmm0);\
-  copy2(&xmm3, &xmm0);\
-  copy2(&xmm4, &xmm0);\
-  copy2(&xmm5, &xmm0);\
-  copy2(&xmm6, &xmm0);\
-  copy2(&xmm7, &xmm0);\
-  ;\
-  bitslice(xmm7, xmm6, xmm5, xmm4, xmm3, xmm2, xmm1, xmm0, t);\
-  ;\
-  *(int128 *) (bskey + 0) = xmm0;\
-  *(int128 *) (bskey + 16) = xmm1;\
-  *(int128 *) (bskey + 32) = xmm2;\
-  *(int128 *) (bskey + 48) = xmm3;\
-  *(int128 *) (bskey + 64) = xmm4;\
-  *(int128 *) (bskey + 80) = xmm5;\
-  *(int128 *) (bskey + 96) = xmm6;\
-  *(int128 *) (bskey + 112) = xmm7;\
-
-
-#define bitslicekey10(key, bskey) \
-  xmm0 = *(int128 *) (key + 0);\
-  copy2(xmm1, xmm0);\
-  copy2(xmm2, xmm0);\
-  copy2(xmm3, xmm0);\
-  copy2(xmm4, xmm0);\
-  copy2(xmm5, xmm0);\
-  copy2(xmm6, xmm0);\
-  copy2(xmm7, xmm0);\
-  ;\
-  bitslice(xmm7, xmm6, xmm5, xmm4, xmm3, xmm2, xmm1, xmm0, t);\
-  ;\
-  toggle(&xmm6);\
-  toggle(&xmm5);\
-  toggle(&xmm1);\
-  toggle(&xmm0);\
-  ;\
-  *(int128 *) (bskey +   0 + 1280) = xmm0;\
-  *(int128 *) (bskey +  16 + 1280) = xmm1;\
-  *(int128 *) (bskey +  32 + 1280) = xmm2;\
-  *(int128 *) (bskey +  48 + 1280) = xmm3;\
-  *(int128 *) (bskey +  64 + 1280) = xmm4;\
-  *(int128 *) (bskey +  80 + 1280) = xmm5;\
-  *(int128 *) (bskey +  96 + 1280) = xmm6;\
-  *(int128 *) (bskey + 112 + 1280) = xmm7;\
-
-
-#define bitslicekey(i,key,bskey) \
-  xmm0 = *(int128 *) (key + 0);\
-  shufb(&xmm0, M0);\
-  copy2(&xmm1, &xmm0);\
-  copy2(&xmm2, &xmm0);\
-  copy2(&xmm3, &xmm0);\
-  copy2(&xmm4, &xmm0);\
-  copy2(&xmm5, &xmm0);\
-  copy2(&xmm6, &xmm0);\
-  copy2(&xmm7, &xmm0);\
-  ;\
-  bitslice(xmm7, xmm6, xmm5, xmm4, xmm3, xmm2, xmm1, xmm0, t);\
-  ;\
-  toggle(&xmm6);\
-  toggle(&xmm5);\
-  toggle(&xmm1);\
-  toggle(&xmm0);\
-  ;\
-  *(int128 *) (bskey +   0 + 128*i) = xmm0;\
-  *(int128 *) (bskey +  16 + 128*i) = xmm1;\
-  *(int128 *) (bskey +  32 + 128*i) = xmm2;\
-  *(int128 *) (bskey +  48 + 128*i) = xmm3;\
-  *(int128 *) (bskey +  64 + 128*i) = xmm4;\
-  *(int128 *) (bskey +  80 + 128*i) = xmm5;\
-  *(int128 *) (bskey +  96 + 128*i) = xmm6;\
-  *(int128 *) (bskey + 112 + 128*i) = xmm7;\
-
-
-#define bitslice(x0, x1, x2, x3, x4, x5, x6, x7, t) \
-        swapmove(x0, x1, 1, BS0, t);\
-        swapmove(x2, x3, 1, BS0, t);\
-        swapmove(x4, x5, 1, BS0, t);\
-        swapmove(x6, x7, 1, BS0, t);\
-        ;\
-        swapmove(x0, x2, 2, BS1, t);\
-        swapmove(x1, x3, 2, BS1, t);\
-        swapmove(x4, x6, 2, BS1, t);\
-        swapmove(x5, x7, 2, BS1, t);\
-        ;\
-        swapmove(x0, x4, 4, BS2, t);\
-        swapmove(x1, x5, 4, BS2, t);\
-        swapmove(x2, x6, 4, BS2, t);\
-        swapmove(x3, x7, 4, BS2, t);\
-
-
-#define swapmove(a, b, n, m, t) \
-        copy2(&t, &b);\
-  rshift64_littleendian(&t, n);\
-        xor2(&t, &a);\
-  and2(&t, &m);\
-  xor2(&a, &t);\
-  lshift64_littleendian(&t, n);\
-  xor2(&b, &t);
-
-#define rotbyte(x) \
-  shufb(x, ROTB) /* TODO: Make faster */
-
-
-/* Macros used for encryption (and decryption) */
-
-#define shiftrows(x0, x1, x2, x3, x4, x5, x6, x7, i, M, bskey) \
-        xor2(&x0, (const int128 *)(bskey + 128*(i-1) + 0));\
-  shufb(&x0, M);\
-        xor2(&x1, (const int128 *)(bskey + 128*(i-1) + 16));\
-  shufb(&x1, M);\
-        xor2(&x2, (const int128 *)(bskey + 128*(i-1) + 32));\
-  shufb(&x2, M);\
-        xor2(&x3, (const int128 *)(bskey + 128*(i-1) + 48));\
-  shufb(&x3, M);\
-        xor2(&x4, (const int128 *)(bskey + 128*(i-1) + 64));\
-  shufb(&x4, M);\
-        xor2(&x5, (const int128 *)(bskey + 128*(i-1) + 80));\
-  shufb(&x5, M);\
-        xor2(&x6, (const int128 *)(bskey + 128*(i-1) + 96));\
-  shufb(&x6, M);\
-        xor2(&x7, (const int128 *)(bskey + 128*(i-1) + 112));\
-  shufb(&x7, M);\
-
-
-#define mixcolumns(x0, x1, x2, x3, x4, x5, x6, x7, t0, t1, t2, t3, t4, t5, t6, t7) \
-  shufd(&t0, &x0, 0x93);\
-  shufd(&t1, &x1, 0x93);\
-  shufd(&t2, &x2, 0x93);\
-  shufd(&t3, &x3, 0x93);\
-  shufd(&t4, &x4, 0x93);\
-  shufd(&t5, &x5, 0x93);\
-  shufd(&t6, &x6, 0x93);\
-  shufd(&t7, &x7, 0x93);\
-        ;\
-        xor2(&x0, &t0);\
-        xor2(&x1, &t1);\
-        xor2(&x2, &t2);\
-        xor2(&x3, &t3);\
-        xor2(&x4, &t4);\
-        xor2(&x5, &t5);\
-        xor2(&x6, &t6);\
-        xor2(&x7, &t7);\
-        ;\
-        xor2(&t0, &x7);\
-        xor2(&t1, &x0);\
-        xor2(&t2, &x1);\
-        xor2(&t1, &x7);\
-        xor2(&t3, &x2);\
-        xor2(&t4, &x3);\
-        xor2(&t5, &x4);\
-        xor2(&t3, &x7);\
-        xor2(&t6, &x5);\
-        xor2(&t7, &x6);\
-        xor2(&t4, &x7);\
-        ;\
-  shufd(&x0, &x0, 0x4e);\
-  shufd(&x1, &x1, 0x4e);\
-  shufd(&x2, &x2, 0x4e);\
-  shufd(&x3, &x3, 0x4e);\
-  shufd(&x4, &x4, 0x4e);\
-  shufd(&x5, &x5, 0x4e);\
-  shufd(&x6, &x6, 0x4e);\
-  shufd(&x7, &x7, 0x4e);\
-        ;\
-        xor2(&t0, &x0);\
-        xor2(&t1, &x1);\
-        xor2(&t2, &x2);\
-        xor2(&t3, &x3);\
-        xor2(&t4, &x4);\
-        xor2(&t5, &x5);\
-        xor2(&t6, &x6);\
-        xor2(&t7, &x7);\
-
-
-#define aesround(i, b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7, bskey) \
-        shiftrows(b0, b1, b2, b3, b4, b5, b6, b7, i, SR, bskey);\
-        sbox(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7);\
-        mixcolumns(b0, b1, b4, b6, b3, b7, b2, b5, t0, t1, t2, t3, t4, t5, t6, t7);\
-
-
-#define lastround(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7, bskey) \
-        shiftrows(b0, b1, b2, b3, b4, b5, b6, b7, 10, SRM0, bskey);\
-        sbox(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, t4, t5, t6, t7);\
-        xor2(&b0,(const int128 *)(bskey + 128*10));\
-        xor2(&b1,(const int128 *)(bskey + 128*10+16));\
-        xor2(&b4,(const int128 *)(bskey + 128*10+32));\
-        xor2(&b6,(const int128 *)(bskey + 128*10+48));\
-        xor2(&b3,(const int128 *)(bskey + 128*10+64));\
-        xor2(&b7,(const int128 *)(bskey + 128*10+80));\
-        xor2(&b2,(const int128 *)(bskey + 128*10+96));\
-        xor2(&b5,(const int128 *)(bskey + 128*10+112));\
-
-
-#define sbox(b0, b1, b2, b3, b4, b5, b6, b7, t0, t1, t2, t3, s0, s1, s2, s3) \
-        InBasisChange(b0, b1, b2, b3, b4, b5, b6, b7); \
-        Inv_GF256(b6, b5, b0, b3, b7, b1, b4, b2, t0, t1, t2, t3, s0, s1, s2, s3); \
-        OutBasisChange(b7, b1, b4, b2, b6, b5, b0, b3); \
-
-
-#define InBasisChange(b0, b1, b2, b3, b4, b5, b6, b7) \
-        xor2(&b5, &b6);\
-        xor2(&b2, &b1);\
-        xor2(&b5, &b0);\
-        xor2(&b6, &b2);\
-        xor2(&b3, &b0);\
-        ;\
-        xor2(&b6, &b3);\
-        xor2(&b3, &b7);\
-        xor2(&b3, &b4);\
-        xor2(&b7, &b5);\
-        xor2(&b3, &b1);\
-        ;\
-        xor2(&b4, &b5);\
-        xor2(&b2, &b7);\
-        xor2(&b1, &b5);\
-
-#define OutBasisChange(b0, b1, b2, b3, b4, b5, b6, b7) \
-        xor2(&b0, &b6);\
-        xor2(&b1, &b4);\
-        xor2(&b2, &b0);\
-        xor2(&b4, &b6);\
-        xor2(&b6, &b1);\
-        ;\
-        xor2(&b1, &b5);\
-        xor2(&b5, &b3);\
-        xor2(&b2, &b5);\
-        xor2(&b3, &b7);\
-        xor2(&b7, &b5);\
-        ;\
-        xor2(&b4, &b7);\
-
-#define Mul_GF4(x0, x1, y0, y1, t0) \
-        copy2(&t0, &y0);\
-        xor2(&t0, &y1);\
-        and2(&t0, &x0);\
-        xor2(&x0, &x1);\
-        and2(&x0, &y1);\
-        and2(&x1, &y0);\
-        xor2(&x0, &x1);\
-        xor2(&x1, &t0);\
-
-#define Mul_GF4_N(x0, x1, y0, y1, t0) \
-        copy2(&t0, &y0);\
-        xor2(&t0, &y1);\
-        and2(&t0, &x0);\
-        xor2(&x0, &x1);\
-        and2(&x0, &y1);\
-        and2(&x1, &y0);\
-        xor2(&x1, &x0);\
-        xor2(&x0, &t0);\
-
-#define Mul_GF4_2(x0, x1, x2, x3, y0, y1, t0, t1) \
-        copy2(&t0, = y0);\
-        xor2(&t0, &y1);\
-        copy2(&t1, &t0);\
-        and2(&t0, &x0);\
-        and2(&t1, &x2);\
-        xor2(&x0, &x1);\
-        xor2(&x2, &x3);\
-        and2(&x0, &y1);\
-        and2(&x2, &y1);\
-        and2(&x1, &y0);\
-        and2(&x3, &y0);\
-        xor2(&x0, &x1);\
-        xor2(&x2, &x3);\
-        xor2(&x1, &t0);\
-        xor2(&x3, &t1);\
-
-#define Mul_GF16(x0, x1, x2, x3, y0, y1, y2, y3, t0, t1, t2, t3) \
-        copy2(&t0, &x0);\
-        copy2(&t1, &x1);\
-        Mul_GF4(x0, x1, y0, y1, t2);\
-        xor2(&t0, &x2);\
-        xor2(&t1, &x3);\
-        xor2(&y0, &y2);\
-        xor2(&y1, &y3);\
-        Mul_GF4_N(t0, t1, y0, y1, t2);\
-        Mul_GF4(x2, x3, y2, y3, t3);\
-        ;\
-        xor2(&x0, &t0);\
-        xor2(&x2, &t0);\
-        xor2(&x1, &t1);\
-        xor2(&x3, &t1);\
-
-#define Mul_GF16_2(x0, x1, x2, x3, x4, x5, x6, x7, y0, y1, y2, y3, t0, t1, t2, t3) \
-        copy2(&t0, &x0);\
-        copy2(&t1, &x1);\
-        Mul_GF4(x0, x1, y0, y1, t2);\
-        xor2(&t0, &x2);\
-        xor2(&t1, &x3);\
-        xor2(&y0, &y2);\
-        xor2(&y1, &y3);\
-        Mul_GF4_N(t0, t1, y0, y1, t3);\
-        Mul_GF4(x2, x3, y2, y3, t2);\
-        ;\
-        xor2(&x0, &t0);\
-        xor2(&x2, &t0);\
-        xor2(&x1, &t1);\
-        xor2(&x3, &t1);\
-        ;\
-        copy2(&t0, &x4);\
-        copy2(&t1, &x5);\
-        xor2(&t0, &x6);\
-        xor2(&t1, &x7);\
-        Mul_GF4_N(t0, t1, y0, y1, t3);\
-        Mul_GF4(x6, x7, y2, y3, t2);\
-        xor2(&y0, &y2);\
-        xor2(&y1, &y3);\
-        Mul_GF4(x4, x5, y0, y1, t3);\
-        ;\
-        xor2(&x4, &t0);\
-        xor2(&x6, &t0);\
-        xor2(&x5, &t1);\
-        xor2(&x7, &t1);\
-
-#define Inv_GF16(x0, x1, x2, x3, t0, t1, t2, t3) \
-        copy2(&t0, &x1);\
-        copy2(&t1, &x0);\
-        and2(&t0, &x3);\
-        or2(&t1, &x2);\
-        copy2(&t2, &x1);\
-        copy2(&t3, &x0);\
-        or2(&t2, &x2);\
-        or2(&t3, &x3);\
-        xor2(&t2, &t3);\
-        ;\
-        xor2(&t0, &t2);\
-        xor2(&t1, &t2);\
-        ;\
-        Mul_GF4_2(x0, x1, x2, x3, t1, t0, t2, t3);\
-
-
-#define Inv_GF256(x0,  x1, x2, x3, x4, x5, x6, x7, t0, t1, t2, t3, s0, s1, s2, s3) \
-        copy2(&t3, &x4);\
-        copy2(&t2, &x5);\
-        copy2(&t1, &x1);\
-        copy2(&s1, &x7);\
-        copy2(&s0, &x0);\
-        ;\
-        xor2(&t3, &x6);\
-        xor2(&t2, &x7);\
-        xor2(&t1, &x3);\
-        xor2(&s1, &x6);\
-        xor2(&s0, &x2);\
-        ;\
-        copy2(&s2, &t3);\
-        copy2(&t0, &t2);\
-        copy2(&s3, &t3);\
-        ;\
-        or2(&t2, &t1);\
-        or2(&t3, &s0);\
-        xor2(&s3, &t0);\
-        and2(&s2, &s0);\
-        and2(&t0, &t1);\
-        xor2(&s0, &t1);\
-        and2(&s3, &s0);\
-        copy2(&s0, &x3);\
-        xor2(&s0, &x2);\
-        and2(&s1, &s0);\
-        xor2(&t3, &s1);\
-        xor2(&t2, &s1);\
-        copy2(&s1, &x4);\
-        xor2(&s1, &x5);\
-        copy2(&s0, &x1);\
-        copy2(&t1, &s1);\
-        xor2(&s0, &x0);\
-        or2(&t1, &s0);\
-        and2(&s1, &s0);\
-        xor2(&t0, &s1);\
-        xor2(&t3, &s3);\
-        xor2(&t2, &s2);\
-        xor2(&t1, &s3);\
-        xor2(&t0, &s2);\
-        xor2(&t1, &s2);\
-        copy2(&s0, &x7);\
-        copy2(&s1, &x6);\
-        copy2(&s2, &x5);\
-        copy2(&s3, &x4);\
-        and2(&s0, &x3);\
-        and2(&s1, &x2);\
-        and2(&s2, &x1);\
-        or2(&s3, &x0);\
-        xor2(&t3, &s0);\
-        xor2(&t2, &s1);\
-        xor2(&t1, &s2);\
-        xor2(&t0, &s3);\
-  ;\
-  copy2(&s0, &t3);\
-  xor2(&s0, &t2);\
-  and2(&t3, &t1);\
-  copy2(&s2, &t0);\
-  xor2(&s2, &t3);\
-  copy2(&s3, &s0);\
-  and2(&s3, &s2);\
-  xor2(&s3, &t2);\
-  copy2(&s1, &t1);\
-  xor2(&s1, &t0);\
-  xor2(&t3, &t2);\
-  and2(&s1, &t3);\
-  xor2(&s1, &t0);\
-  xor2(&t1, &s1);\
-  copy2(&t2, &s2);\
-  xor2(&t2, &s1);\
-  and2(&t2, &t0);\
-  xor2(&t1, &t2);\
-  xor2(&s2, &t2);\
-  and2(&s2, &s3);\
-  xor2(&s2, &s0);\
-  ;\
-  Mul_GF16_2(x0, x1, x2, x3, x4, x5, x6, x7, s3, s2, s1, t1, s0, t0, t2, t3);\
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common_aes128ctr.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common_aes128ctr.c
deleted file mode 100644
index 14a28cc..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/common_aes128ctr.c
+++ /dev/null
@@ -1,64 +0,0 @@
-#include "common.h"
-
-uint32 load32_bigendian(const unsigned char *x)
-{
-  return
-      (uint32) (x[3]) \
-  | (((uint32) (x[2])) << 8) \
-  | (((uint32) (x[1])) << 16) \
-  | (((uint32) (x[0])) << 24)
-  ;
-}
-
-void store32_bigendian(unsigned char *x,uint32 u)
-{
-  x[3] = u; u >>= 8;
-  x[2] = u; u >>= 8;
-  x[1] = u; u >>= 8;
-  x[0] = u;
-}
-
-uint32 load32_littleendian(const unsigned char *x)
-{
-  return
-      (uint32) (x[0]) \
-  | (((uint32) (x[1])) << 8) \
-  | (((uint32) (x[2])) << 16) \
-  | (((uint32) (x[3])) << 24)
-  ;
-}
-
-void store32_littleendian(unsigned char *x,uint32 u)
-{
-  x[0] = u; u >>= 8;
-  x[1] = u; u >>= 8;
-  x[2] = u; u >>= 8;
-  x[3] = u;
-}
-
-
-uint64 load64_littleendian(const unsigned char *x)
-{
-  return
-      (uint64) (x[0]) \
-  | (((uint64) (x[1])) << 8) \
-  | (((uint64) (x[2])) << 16) \
-  | (((uint64) (x[3])) << 24)
-  | (((uint64) (x[4])) << 32)
-  | (((uint64) (x[5])) << 40)
-  | (((uint64) (x[6])) << 48)
-  | (((uint64) (x[7])) << 56)
-  ;
-}
-
-void store64_littleendian(unsigned char *x,uint64 u)
-{
-  x[0] = u; u >>= 8;
-  x[1] = u; u >>= 8;
-  x[2] = u; u >>= 8;
-  x[3] = u; u >>= 8;
-  x[4] = u; u >>= 8;
-  x[5] = u; u >>= 8;
-  x[6] = u; u >>= 8;
-  x[7] = u;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h
deleted file mode 100644
index 4c50360..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts.h
+++ /dev/null
@@ -1,28 +0,0 @@
-#ifndef CONSTS_H
-#define CONSTS_H
-
-#include "int128.h"
-
-#define ROTB crypto_stream_aes128ctr_portable_ROTB
-#define M0 crypto_stream_aes128ctr_portable_M0
-#define EXPB0 crypto_stream_aes128ctr_portable_EXPB0
-#define SWAP32 crypto_stream_aes128ctr_portable_SWAP32
-#define M0SWAP crypto_stream_aes128ctr_portable_M0SWAP
-#define SR crypto_stream_aes128ctr_portable_SR
-#define SRM0 crypto_stream_aes128ctr_portable_SRM0
-#define BS0 crypto_stream_aes128ctr_portable_BS0
-#define BS1 crypto_stream_aes128ctr_portable_BS1
-#define BS2 crypto_stream_aes128ctr_portable_BS2
-
-extern const unsigned char ROTB[16];
-extern const unsigned char M0[16];
-extern const unsigned char EXPB0[16];
-extern const unsigned char SWAP32[16];
-extern const unsigned char M0SWAP[16];
-extern const unsigned char SR[16];
-extern const unsigned char SRM0[16];
-extern const int128 BS0;
-extern const int128 BS1;
-extern const int128 BS2;
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c
deleted file mode 100644
index f8029b8..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/consts_aes128ctr.c
+++ /dev/null
@@ -1,14 +0,0 @@
-#include "consts.h"
-
-const unsigned char ROTB[16] = {0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08};
-const unsigned char M0[16]   = {0x0f, 0x0b, 0x07, 0x03, 0x0e, 0x0a, 0x06, 0x02, 0x0d, 0x09, 0x05, 0x01, 0x0c, 0x08, 0x04, 0x00};
-const unsigned char EXPB0[16] = {0x03, 0x03, 0x03, 0x03, 0x07, 0x07, 0x07, 0x07, 0x0b, 0x0b, 0x0b, 0x0b, 0x0f, 0x0f, 0x0f, 0x0f};
-
-const unsigned char SWAP32[16] = {0x03, 0x02, 0x01, 0x00, 0x07, 0x06, 0x05, 0x04, 0x0b, 0x0a, 0x09, 0x08, 0x0f, 0x0e, 0x0d, 0x0c};
-const unsigned char M0SWAP[16] = {0x0c, 0x08, 0x04, 0x00, 0x0d, 0x09, 0x05, 0x01, 0x0e, 0x0a, 0x06, 0x02, 0x0f, 0x0b, 0x07, 0x03};
-const unsigned char SR[16] = {0x01, 0x02, 0x03, 0x00, 0x06, 0x07, 0x04, 0x05, 0x0b, 0x08, 0x09, 0x0a, 0x0c, 0x0d, 0x0e, 0x0f};
-const unsigned char SRM0[16] = {0x0f, 0x0a, 0x05, 0x00, 0x0e, 0x09, 0x04, 0x03, 0x0d, 0x08, 0x07, 0x02, 0x0c, 0x0b, 0x06, 0x01};
-
-const int128 BS0 = {{0x5555555555555555ULL, 0x5555555555555555ULL}};
-const int128 BS1 = {{0x3333333333333333ULL, 0x3333333333333333ULL}};
-const int128 BS2 = {{0x0f0f0f0f0f0f0f0fULL, 0x0f0f0f0f0f0f0f0fULL}};
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h
deleted file mode 100644
index 3fd2111..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128.h
+++ /dev/null
@@ -1,56 +0,0 @@
-#ifndef INT128_H
-#define INT128_H
-
-#include <stdint.h>
-
-#include "common.h"
-
-#ifdef __cplusplus
-# if __GNUC__
-#  pragma GCC diagnostic ignored "-Wlong-long"
-# endif
-#endif
-
-typedef union {
-  uint64_t u64[2];
-  uint32_t u32[4];
-  uint8_t  u8[16];
-} int128;
-
-#define xor2 crypto_stream_aes128ctr_portable_xor2
-void xor2(int128 *r, const int128 *x);
-
-#define and2 crypto_stream_aes128ctr_portable_and2
-void and2(int128 *r, const int128 *x);
-
-#define or2 crypto_stream_aes128ctr_portable_or2
-void or2(int128 *r, const int128 *x);
-
-#define copy2 crypto_stream_aes128ctr_portable_copy2
-void copy2(int128 *r, const int128 *x);
-
-#define shufb crypto_stream_aes128ctr_portable_shufb
-void shufb(int128 *r, const unsigned char *l);
-
-#define shufd crypto_stream_aes128ctr_portable_shufd
-void shufd(int128 *r, const int128 *x, const unsigned int c);
-
-#define rshift32_littleendian crypto_stream_aes128ctr_portable_rshift32_littleendian
-void rshift32_littleendian(int128 *r, const unsigned int n);
-
-#define rshift64_littleendian crypto_stream_aes128ctr_portable_rshift64_littleendian
-void rshift64_littleendian(int128 *r, const unsigned int n);
-
-#define lshift64_littleendian crypto_stream_aes128ctr_portable_lshift64_littleendian
-void lshift64_littleendian(int128 *r, const unsigned int n);
-
-#define toggle crypto_stream_aes128ctr_portable_toggle
-void toggle(int128 *r);
-
-#define xor_rcon crypto_stream_aes128ctr_portable_xor_rcon
-void xor_rcon(int128 *r);
-
-#define add_uint32_big crypto_stream_aes128ctr_portable_add_uint32_big
-void add_uint32_big(int128 *r, uint32 x);
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c
deleted file mode 100644
index 703de39..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/int128_aes128ctr.c
+++ /dev/null
@@ -1,131 +0,0 @@
-
-#include "int128.h"
-#include "common.h"
-
-void xor2(int128 *r, const int128 *x)
-{
-  r->u64[0] ^= x->u64[0];
-  r->u64[1] ^= x->u64[1];
-}
-
-void and2(int128 *r, const int128 *x)
-{
-  r->u64[0] &= x->u64[0];
-  r->u64[1] &= x->u64[1];
-}
-
-void or2(int128 *r, const int128 *x)
-{
-  r->u64[0] |= x->u64[0];
-  r->u64[1] |= x->u64[1];
-}
-
-void copy2(int128 *r, const int128 *x)
-{
-  r->u64[0] = x->u64[0];
-  r->u64[1] = x->u64[1];
-}
-
-void shufb(int128 *r, const unsigned char *l)
-{
-  int128   t;
-  uint8_t *ct;
-  uint8_t *cr;
-
-  copy2(&t, r);
-  cr = r->u8;
-  ct = t.u8;
-  cr[0] = ct[l[0]];
-  cr[1] = ct[l[1]];
-  cr[2] = ct[l[2]];
-  cr[3] = ct[l[3]];
-  cr[4] = ct[l[4]];
-  cr[5] = ct[l[5]];
-  cr[6] = ct[l[6]];
-  cr[7] = ct[l[7]];
-  cr[8] = ct[l[8]];
-  cr[9] = ct[l[9]];
-  cr[10] = ct[l[10]];
-  cr[11] = ct[l[11]];
-  cr[12] = ct[l[12]];
-  cr[13] = ct[l[13]];
-  cr[14] = ct[l[14]];
-  cr[15] = ct[l[15]];
-}
-
-void shufd(int128 *r, const int128 *x, const unsigned int c)
-{
-  int128 t;
-
-  t.u32[0] = x->u32[c >> 0 & 3];
-  t.u32[1] = x->u32[c >> 2 & 3];
-  t.u32[2] = x->u32[c >> 4 & 3];
-  t.u32[3] = x->u32[c >> 6 & 3];
-  copy2(r, &t);
-}
-
-void rshift32_littleendian(int128 *r, const unsigned int n)
-{
-  unsigned char *rp = (unsigned char *)r;
-  uint32 t;
-  t = load32_littleendian(rp);
-  t >>= n;
-  store32_littleendian(rp, t);
-  t = load32_littleendian(rp+4);
-  t >>= n;
-  store32_littleendian(rp+4, t);
-  t = load32_littleendian(rp+8);
-  t >>= n;
-  store32_littleendian(rp+8, t);
-  t = load32_littleendian(rp+12);
-  t >>= n;
-  store32_littleendian(rp+12, t);
-}
-
-void rshift64_littleendian(int128 *r, const unsigned int n)
-{
-  unsigned char *rp = (unsigned char *)r;
-  uint64 t;
-  t = load64_littleendian(rp);
-  t >>= n;
-  store64_littleendian(rp, t);
-  t = load64_littleendian(rp+8);
-  t >>= n;
-  store64_littleendian(rp+8, t);
-}
-
-void lshift64_littleendian(int128 *r, const unsigned int n)
-{
-  unsigned char *rp = (unsigned char *)r;
-  uint64 t;
-  t = load64_littleendian(rp);
-  t <<= n;
-  store64_littleendian(rp, t);
-  t = load64_littleendian(rp+8);
-  t <<= n;
-  store64_littleendian(rp+8, t);
-}
-
-void toggle(int128 *r)
-{
-  r->u64[0] ^= 0xffffffffffffffffULL;
-  r->u64[1] ^= 0xffffffffffffffffULL;
-}
-
-void xor_rcon(int128 *r)
-{
-  unsigned char *rp = (unsigned char *)r;
-  uint32 t;
-  t = load32_littleendian(rp+12);
-  t ^= 0xffffffff;
-  store32_littleendian(rp+12, t);
-}
-
-void add_uint32_big(int128 *r, uint32 x)
-{
-  unsigned char *rp = (unsigned char *)r;
-  uint32 t;
-  t = load32_littleendian(rp+12);
-  t += x;
-  store32_littleendian(rp+12, t);
-}
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/stream_aes128ctr.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/stream_aes128ctr.c
deleted file mode 100644
index 43a6a02..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/stream_aes128ctr.c
+++ /dev/null
@@ -1,29 +0,0 @@
-
-#include "crypto_stream_aes128ctr.h"
-
-int crypto_stream_aes128ctr(
-        unsigned char *out,
-        unsigned long long outlen,
-        const unsigned char *n,
-        const unsigned char *k
-        )
-{
-    unsigned char d[crypto_stream_aes128ctr_BEFORENMBYTES];
-    crypto_stream_aes128ctr_beforenm(d, k);
-    crypto_stream_aes128ctr_afternm(out, outlen, n, d);
-    return 0;
-}
-
-int crypto_stream_aes128ctr_xor(
-        unsigned char *out,
-        const unsigned char *in,
-        unsigned long long inlen,
-        const unsigned char *n,
-        const unsigned char *k
-        )
-{
-    unsigned char d[crypto_stream_aes128ctr_BEFORENMBYTES];
-    crypto_stream_aes128ctr_beforenm(d, k);
-    crypto_stream_aes128ctr_xor_afternm(out, in, inlen, n, d);
-    return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/types.h b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/types.h
deleted file mode 100644
index 6aa502f..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/types.h
+++ /dev/null
@@ -1,10 +0,0 @@
-#ifndef TYPES_H
-#define TYPES_H
-
-#include "crypto_uint32.h"
-typedef crypto_uint32 uint32;
-
-#include "crypto_uint64.h"
-typedef crypto_uint64 uint64;
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
deleted file mode 100644
index 4a89520..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/portable/xor_afternm_aes128ctr.c
+++ /dev/null
@@ -1,180 +0,0 @@
-/* Author: Peter Schwabe, ported from an assembly implementation by Emilia Käsper
- * Date: 2009-03-19
- * Public domain */
-
-#include "crypto_stream_aes128ctr.h"
-#include "int128.h"
-#include "common.h"
-#include "consts.h"
-
-int crypto_stream_aes128ctr_xor_afternm(unsigned char *out, const unsigned char *in, unsigned long long len, const unsigned char *nonce, const unsigned char *c)
-{
-
-  int128 xmm0;
-  int128 xmm1;
-  int128 xmm2;
-  int128 xmm3;
-  int128 xmm4;
-  int128 xmm5;
-  int128 xmm6;
-  int128 xmm7;
-
-  int128 xmm8;
-  int128 xmm9;
-  int128 xmm10;
-  int128 xmm11;
-  int128 xmm12;
-  int128 xmm13;
-  int128 xmm14;
-  int128 xmm15;
-
-  int128 nonce_stack;
-  unsigned long long lensav;
-  unsigned char bl[128];
-  unsigned char *blp;
-  unsigned char *np;
-  unsigned char b;
-
-  uint32 tmp;
-
-  /* Copy nonce on the stack */
-  copy2(&nonce_stack, (const int128 *) (nonce + 0));
-  np = (unsigned char *)&nonce_stack;
-
-    enc_block:
-
-    xmm0 = *(int128 *) (np + 0);
-    copy2(&xmm1, &xmm0);
-    shufb(&xmm1, SWAP32);
-    copy2(&xmm2, &xmm1);
-    copy2(&xmm3, &xmm1);
-    copy2(&xmm4, &xmm1);
-    copy2(&xmm5, &xmm1);
-    copy2(&xmm6, &xmm1);
-    copy2(&xmm7, &xmm1);
-
-    add_uint32_big(&xmm1, 1);
-    add_uint32_big(&xmm2, 2);
-    add_uint32_big(&xmm3, 3);
-    add_uint32_big(&xmm4, 4);
-    add_uint32_big(&xmm5, 5);
-    add_uint32_big(&xmm6, 6);
-    add_uint32_big(&xmm7, 7);
-
-    shufb(&xmm0, M0);
-    shufb(&xmm1, M0SWAP);
-    shufb(&xmm2, M0SWAP);
-    shufb(&xmm3, M0SWAP);
-    shufb(&xmm4, M0SWAP);
-    shufb(&xmm5, M0SWAP);
-    shufb(&xmm6, M0SWAP);
-    shufb(&xmm7, M0SWAP);
-
-    bitslice(xmm7, xmm6, xmm5, xmm4, xmm3, xmm2, xmm1, xmm0, xmm8)
-
-    aesround( 1, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 2, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 3, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 4, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 5, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 6, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 7, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    aesround( 8, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-    aesround( 9, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15,c)
-    lastround(xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7,c)
-
-    bitslice(xmm13, xmm10, xmm15, xmm11, xmm14, xmm12, xmm9, xmm8, xmm0)
-
-    if(len < 128) goto partial;
-    if(len == 128) goto full;
-
-    tmp = load32_bigendian(np + 12);
-    tmp += 8;
-    store32_bigendian(np + 12, tmp);
-
-    xor2(&xmm8, (const int128 *)(in + 0));
-    xor2(&xmm9, (const int128 *)(in + 16));
-    xor2(&xmm12, (const int128 *)(in + 32));
-    xor2(&xmm14, (const int128 *)(in + 48));
-    xor2(&xmm11, (const int128 *)(in + 64));
-    xor2(&xmm15, (const int128 *)(in + 80));
-    xor2(&xmm10, (const int128 *)(in + 96));
-    xor2(&xmm13, (const int128 *)(in + 112));
-
-    *(int128 *) (out + 0) = xmm8;
-    *(int128 *) (out + 16) = xmm9;
-    *(int128 *) (out + 32) = xmm12;
-    *(int128 *) (out + 48) = xmm14;
-    *(int128 *) (out + 64) = xmm11;
-    *(int128 *) (out + 80) = xmm15;
-    *(int128 *) (out + 96) = xmm10;
-    *(int128 *) (out + 112) = xmm13;
-
-    len -= 128;
-    in += 128;
-    out += 128;
-
-    goto enc_block;
-
-    partial:
-
-    lensav = len;
-    len >>= 4;
-
-    tmp = load32_bigendian(np + 12);
-    tmp += len;
-    store32_bigendian(np + 12, tmp);
-
-    blp = bl;
-    *(int128 *)(blp + 0) = xmm8;
-    *(int128 *)(blp + 16) = xmm9;
-    *(int128 *)(blp + 32) = xmm12;
-    *(int128 *)(blp + 48) = xmm14;
-    *(int128 *)(blp + 64) = xmm11;
-    *(int128 *)(blp + 80) = xmm15;
-    *(int128 *)(blp + 96) = xmm10;
-    *(int128 *)(blp + 112) = xmm13;
-
-    bytes:
-
-    if(lensav == 0) goto end;
-
-    b = blp[0]; /* clang false positive */
-    b ^= *(const unsigned char *)(in + 0);
-    *(unsigned char *)(out + 0) = b;
-
-    blp += 1;
-    in +=1;
-    out +=1;
-    lensav -= 1;
-
-    goto bytes;
-
-    full:
-
-    tmp = load32_bigendian(np + 12);
-    tmp += 8;
-    store32_bigendian(np + 12, tmp);
-
-    xor2(&xmm8, (const int128 *)(in + 0));
-    xor2(&xmm9, (const int128 *)(in + 16));
-    xor2(&xmm12, (const int128 *)(in + 32));
-    xor2(&xmm14, (const int128 *)(in + 48));
-    xor2(&xmm11, (const int128 *)(in + 64));
-    xor2(&xmm15, (const int128 *)(in + 80));
-    xor2(&xmm10, (const int128 *)(in + 96));
-    xor2(&xmm13, (const int128 *)(in + 112));
-
-    *(int128 *) (out + 0) = xmm8;
-    *(int128 *) (out + 16) = xmm9;
-    *(int128 *) (out + 32) = xmm12;
-    *(int128 *) (out + 48) = xmm14;
-    *(int128 *) (out + 64) = xmm11;
-    *(int128 *) (out + 80) = xmm15;
-    *(int128 *) (out + 96) = xmm10;
-    *(int128 *) (out + 112) = xmm13;
-
-    end:
-    return 0;
-
-}
diff --git a/libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c b/libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c
deleted file mode 100644
index 184ad3f..0000000
--- a/libsodium/src/libsodium/crypto_stream/aes128ctr/stream_aes128ctr_api.c
+++ /dev/null
@@ -1,16 +0,0 @@
-#include "crypto_stream_aes128ctr.h"
-
-size_t
-crypto_stream_aes128ctr_keybytes(void) {
-    return crypto_stream_aes128ctr_KEYBYTES;
-}
-
-size_t
-crypto_stream_aes128ctr_noncebytes(void) {
-    return crypto_stream_aes128ctr_NONCEBYTES;
-}
-
-size_t
-crypto_stream_aes128ctr_beforenmbytes(void) {
-    return crypto_stream_aes128ctr_BEFORENMBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c b/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c
deleted file mode 100644
index fa8e835..0000000
--- a/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.c
+++ /dev/null
@@ -1,336 +0,0 @@
-
-/*
- chacha-merged.c version 20080118
- D. J. Bernstein
- Public domain.
- */
-
-#include <stdint.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "utils.h"
-#include "crypto_stream_chacha20.h"
-#include "stream_chacha20_ref.h"
-#include "../stream_chacha20.h"
-
-struct chacha_ctx {
-    uint32_t input[16];
-};
-
-typedef uint8_t  u8;
-typedef uint32_t u32;
-
-typedef struct chacha_ctx chacha_ctx;
-
-#define U8C(v) (v##U)
-#define U32C(v) (v##U)
-
-#define U8V(v) ((u8)(v) & U8C(0xFF))
-#define U32V(v) ((u32)(v) & U32C(0xFFFFFFFF))
-
-#define ROTL32(v, n) \
-  (U32V((v) << (n)) | ((v) >> (32 - (n))))
-
-#define U8TO32_LITTLE(p) \
-  (((u32)((p)[0])      ) | \
-   ((u32)((p)[1]) <<  8) | \
-   ((u32)((p)[2]) << 16) | \
-   ((u32)((p)[3]) << 24))
-
-#define U32TO8_LITTLE(p, v) \
-  do { \
-    (p)[0] = U8V((v)      ); \
-    (p)[1] = U8V((v) >>  8); \
-    (p)[2] = U8V((v) >> 16); \
-    (p)[3] = U8V((v) >> 24); \
-  } while (0)
-
-#define ROTATE(v,c) (ROTL32(v,c))
-#define XOR(v,w) ((v) ^ (w))
-#define PLUS(v,w) (U32V((v) + (w)))
-#define PLUSONE(v) (PLUS((v),1))
-
-#define QUARTERROUND(a,b,c,d) \
-  a = PLUS(a,b); d = ROTATE(XOR(d,a),16); \
-  c = PLUS(c,d); b = ROTATE(XOR(b,c),12); \
-  a = PLUS(a,b); d = ROTATE(XOR(d,a), 8); \
-  c = PLUS(c,d); b = ROTATE(XOR(b,c), 7);
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-static void
-chacha_keysetup(chacha_ctx *ctx, const u8 *k)
-{
-    const unsigned char *constants;
-
-    ctx->input[4] = U8TO32_LITTLE(k + 0);
-    ctx->input[5] = U8TO32_LITTLE(k + 4);
-    ctx->input[6] = U8TO32_LITTLE(k + 8);
-    ctx->input[7] = U8TO32_LITTLE(k + 12);
-    k += 16;
-    constants = sigma;
-    ctx->input[8] = U8TO32_LITTLE(k + 0);
-    ctx->input[9] = U8TO32_LITTLE(k + 4);
-    ctx->input[10] = U8TO32_LITTLE(k + 8);
-    ctx->input[11] = U8TO32_LITTLE(k + 12);
-    ctx->input[0] = U8TO32_LITTLE(constants + 0);
-    ctx->input[1] = U8TO32_LITTLE(constants + 4);
-    ctx->input[2] = U8TO32_LITTLE(constants + 8);
-    ctx->input[3] = U8TO32_LITTLE(constants + 12);
-}
-
-static void
-chacha_ivsetup(chacha_ctx *ctx, const u8 *iv, const u8 *counter)
-{
-    ctx->input[12] = counter == NULL ? 0 : U8TO32_LITTLE(counter + 0);
-    ctx->input[13] = counter == NULL ? 0 : U8TO32_LITTLE(counter + 4);
-    ctx->input[14] = U8TO32_LITTLE(iv + 0);
-    ctx->input[15] = U8TO32_LITTLE(iv + 4);
-}
-
-static void
-chacha_ietf_ivsetup(chacha_ctx *ctx, const u8 *iv, const u8 *counter)
-{
-    ctx->input[12] = counter == NULL ? 0 : U8TO32_LITTLE(counter);
-    ctx->input[13] = U8TO32_LITTLE(iv + 0);
-    ctx->input[14] = U8TO32_LITTLE(iv + 4);
-    ctx->input[15] = U8TO32_LITTLE(iv + 8);
-}
-
-static void
-chacha_encrypt_bytes(chacha_ctx *ctx, const u8 *m, u8 *c, unsigned long long bytes)
-{
-    u32 x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;
-    u32 j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;
-    u8 *ctarget = NULL;
-    u8 tmp[64];
-    unsigned int i;
-
-    if (!bytes) {
-        return; /* LCOV_EXCL_LINE */
-    }
-    if (bytes > 64ULL * (1ULL << 32) - 64ULL) {
-        abort();
-    }
-    j0 = ctx->input[0];
-    j1 = ctx->input[1];
-    j2 = ctx->input[2];
-    j3 = ctx->input[3];
-    j4 = ctx->input[4];
-    j5 = ctx->input[5];
-    j6 = ctx->input[6];
-    j7 = ctx->input[7];
-    j8 = ctx->input[8];
-    j9 = ctx->input[9];
-    j10 = ctx->input[10];
-    j11 = ctx->input[11];
-    j12 = ctx->input[12];
-    j13 = ctx->input[13];
-    j14 = ctx->input[14];
-    j15 = ctx->input[15];
-
-    for (;;) {
-        if (bytes < 64) {
-            memset(tmp, 0, 64);
-            for (i = 0; i < bytes; ++i) {
-                tmp[i] = m[i];
-            }
-            m = tmp;
-            ctarget = c;
-            c = tmp;
-        }
-        x0 = j0;
-        x1 = j1;
-        x2 = j2;
-        x3 = j3;
-        x4 = j4;
-        x5 = j5;
-        x6 = j6;
-        x7 = j7;
-        x8 = j8;
-        x9 = j9;
-        x10 = j10;
-        x11 = j11;
-        x12 = j12;
-        x13 = j13;
-        x14 = j14;
-        x15 = j15;
-        for (i = 20; i > 0; i -= 2) {
-            QUARTERROUND(x0, x4, x8, x12)
-            QUARTERROUND(x1, x5, x9, x13)
-            QUARTERROUND(x2, x6, x10, x14)
-            QUARTERROUND(x3, x7, x11, x15)
-            QUARTERROUND(x0, x5, x10, x15)
-            QUARTERROUND(x1, x6, x11, x12)
-            QUARTERROUND(x2, x7, x8, x13)
-            QUARTERROUND(x3, x4, x9, x14)
-        }
-        x0 = PLUS(x0, j0);
-        x1 = PLUS(x1, j1);
-        x2 = PLUS(x2, j2);
-        x3 = PLUS(x3, j3);
-        x4 = PLUS(x4, j4);
-        x5 = PLUS(x5, j5);
-        x6 = PLUS(x6, j6);
-        x7 = PLUS(x7, j7);
-        x8 = PLUS(x8, j8);
-        x9 = PLUS(x9, j9);
-        x10 = PLUS(x10, j10);
-        x11 = PLUS(x11, j11);
-        x12 = PLUS(x12, j12);
-        x13 = PLUS(x13, j13);
-        x14 = PLUS(x14, j14);
-        x15 = PLUS(x15, j15);
-
-        x0 = XOR(x0, U8TO32_LITTLE(m + 0));
-        x1 = XOR(x1, U8TO32_LITTLE(m + 4));
-        x2 = XOR(x2, U8TO32_LITTLE(m + 8));
-        x3 = XOR(x3, U8TO32_LITTLE(m + 12));
-        x4 = XOR(x4, U8TO32_LITTLE(m + 16));
-        x5 = XOR(x5, U8TO32_LITTLE(m + 20));
-        x6 = XOR(x6, U8TO32_LITTLE(m + 24));
-        x7 = XOR(x7, U8TO32_LITTLE(m + 28));
-        x8 = XOR(x8, U8TO32_LITTLE(m + 32));
-        x9 = XOR(x9, U8TO32_LITTLE(m + 36));
-        x10 = XOR(x10, U8TO32_LITTLE(m + 40));
-        x11 = XOR(x11, U8TO32_LITTLE(m + 44));
-        x12 = XOR(x12, U8TO32_LITTLE(m + 48));
-        x13 = XOR(x13, U8TO32_LITTLE(m + 52));
-        x14 = XOR(x14, U8TO32_LITTLE(m + 56));
-        x15 = XOR(x15, U8TO32_LITTLE(m + 60));
-
-        j12 = PLUSONE(j12);
-        /* LCOV_EXCL_START */
-        if (!j12) {
-            j13 = PLUSONE(j13);
-        }
-        /* LCOV_EXCL_STOP */
-
-        U32TO8_LITTLE(c + 0, x0);
-        U32TO8_LITTLE(c + 4, x1);
-        U32TO8_LITTLE(c + 8, x2);
-        U32TO8_LITTLE(c + 12, x3);
-        U32TO8_LITTLE(c + 16, x4);
-        U32TO8_LITTLE(c + 20, x5);
-        U32TO8_LITTLE(c + 24, x6);
-        U32TO8_LITTLE(c + 28, x7);
-        U32TO8_LITTLE(c + 32, x8);
-        U32TO8_LITTLE(c + 36, x9);
-        U32TO8_LITTLE(c + 40, x10);
-        U32TO8_LITTLE(c + 44, x11);
-        U32TO8_LITTLE(c + 48, x12);
-        U32TO8_LITTLE(c + 52, x13);
-        U32TO8_LITTLE(c + 56, x14);
-        U32TO8_LITTLE(c + 60, x15);
-
-        if (bytes <= 64) {
-            if (bytes < 64) {
-                for (i = 0; i < (unsigned int) bytes; ++i) {
-                    ctarget[i] = c[i];
-                }
-            }
-            ctx->input[12] = j12;
-            ctx->input[13] = j13;
-            return;
-        }
-        bytes -= 64;
-        c += 64;
-        m += 64;
-    }
-}
-
-static int
-stream_ref(unsigned char *c, unsigned long long clen,
-           const unsigned char *n, const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-
-    if (!clen) {
-        return 0;
-    }
-    (void) sizeof(int[crypto_stream_chacha20_KEYBYTES == 256 / 8 ? 1 : -1]);
-    chacha_keysetup(&ctx, k);
-    chacha_ivsetup(&ctx, n, NULL);
-    memset(c, 0, clen);
-    chacha_encrypt_bytes(&ctx, c, c, clen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-static int
-stream_ietf_ref(unsigned char *c, unsigned long long clen,
-                const unsigned char *n, const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-
-    if (!clen) {
-        return 0;
-    }
-    (void) sizeof(int[crypto_stream_chacha20_KEYBYTES == 256 / 8 ? 1 : -1]);
-    chacha_keysetup(&ctx, k);
-    chacha_ietf_ivsetup(&ctx, n, NULL);
-    memset(c, 0, clen);
-    chacha_encrypt_bytes(&ctx, c, c, clen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-static int
-stream_ref_xor_ic(unsigned char *c, const unsigned char *m,
-                  unsigned long long mlen,
-                  const unsigned char *n, uint64_t ic,
-                  const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-    uint8_t           ic_bytes[8];
-    uint32_t          ic_high;
-    uint32_t          ic_low;
-
-    if (!mlen) {
-        return 0;
-    }
-    ic_high = U32V(ic >> 32);
-    ic_low = U32V(ic);
-    U32TO8_LITTLE(&ic_bytes[0], ic_low);
-    U32TO8_LITTLE(&ic_bytes[4], ic_high);
-    chacha_keysetup(&ctx, k);
-    chacha_ivsetup(&ctx, n, ic_bytes);
-    chacha_encrypt_bytes(&ctx, m, c, mlen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-static int
-stream_ietf_ref_xor_ic(unsigned char *c, const unsigned char *m,
-                       unsigned long long mlen,
-                       const unsigned char *n, uint32_t ic,
-                       const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-    uint8_t           ic_bytes[4];
-
-    if (!mlen) {
-        return 0;
-    }
-    U32TO8_LITTLE(ic_bytes, ic);
-    chacha_keysetup(&ctx, k);
-    chacha_ietf_ivsetup(&ctx, n, ic_bytes);
-    chacha_encrypt_bytes(&ctx, m, c, mlen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-struct crypto_stream_chacha20_implementation
-crypto_stream_chacha20_ref_implementation = {
-    SODIUM_C99(.stream =) stream_ref,
-    SODIUM_C99(.stream_ietf =) stream_ietf_ref,
-    SODIUM_C99(.stream_xor_ic =) stream_ref_xor_ic,
-    SODIUM_C99(.stream_ietf_xor_ic =) stream_ietf_ref_xor_ic
-};
diff --git a/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.h b/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.h
deleted file mode 100644
index f2091ab..0000000
--- a/libsodium/src/libsodium/crypto_stream/chacha20/ref/stream_chacha20_ref.h
+++ /dev/null
@@ -1,27 +0,0 @@
-
-#include <stdint.h>
-
-#include "crypto_stream_chacha20.h"
-
-extern struct crypto_stream_chacha20_implementation
-    crypto_stream_chacha20_ref_implementation;
-
-int
-crypto_stream_chacha20_ref(unsigned char *c, unsigned long long clen,
-                           const unsigned char *n, const unsigned char *k);
-
-int
-crypto_stream_chacha20_ref_xor_ic(unsigned char *c, const unsigned char *m,
-                                  unsigned long long mlen,
-                                  const unsigned char *n, uint64_t ic,
-                                  const unsigned char *k);
-
-int
-crypto_stream_chacha20_ietf_ref(unsigned char *c, unsigned long long clen,
-                                const unsigned char *n, const unsigned char *k);
-
-int
-crypto_stream_chacha20_ietf_ref_xor_ic(unsigned char *c, const unsigned char *m,
-                                       unsigned long long mlen,
-                                       const unsigned char *n, uint32_t ic,
-                                       const unsigned char *k);
diff --git a/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c b/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c
index 56b496a..427c3fb 100644
--- a/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c
+++ b/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.c
@@ -1,9 +1,19 @@
 #include "crypto_stream_chacha20.h"
-#include "stream_chacha20.h"
+#include "core.h"
+#include "private/chacha20_ietf_ext.h"
+#include "private/common.h"
+#include "private/implementations.h"
+#include "randombytes.h"
 #include "runtime.h"
-#include "ref/stream_chacha20_ref.h"
-#if (defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H) && defined(__GNUC__))
-# include "vec/stream_chacha20_vec.h"
+#include "stream_chacha20.h"
+
+#include "ref/chacha20_ref.h"
+#if defined(HAVE_AVX2INTRIN_H) && defined(HAVE_EMMINTRIN_H) && \
+    defined(HAVE_TMMINTRIN_H) && defined(HAVE_SMMINTRIN_H)
+# include "dolbeau/chacha20_dolbeau-avx2.h"
+#endif
+#if defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H)
+# include "dolbeau/chacha20_dolbeau-ssse3.h"
 #endif
 
 static const crypto_stream_chacha20_implementation *implementation =
@@ -19,23 +29,36 @@ crypto_stream_chacha20_noncebytes(void) {
     return crypto_stream_chacha20_NONCEBYTES;
 }
 
+size_t
+crypto_stream_chacha20_messagebytes_max(void)
+{
+    return crypto_stream_chacha20_MESSAGEBYTES_MAX;
+}
+
+size_t
+crypto_stream_chacha20_ietf_keybytes(void) {
+    return crypto_stream_chacha20_ietf_KEYBYTES;
+}
+
 size_t
 crypto_stream_chacha20_ietf_noncebytes(void) {
-    return crypto_stream_chacha20_IETF_NONCEBYTES;
+    return crypto_stream_chacha20_ietf_NONCEBYTES;
 }
 
-int
-crypto_stream_chacha20(unsigned char *c, unsigned long long clen,
-                       const unsigned char *n, const unsigned char *k)
+size_t
+crypto_stream_chacha20_ietf_messagebytes_max(void)
 {
-    return implementation->stream(c, clen, n, k);
+    return crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX;
 }
 
 int
-crypto_stream_chacha20_ietf(unsigned char *c, unsigned long long clen,
-                            const unsigned char *n, const unsigned char *k)
+crypto_stream_chacha20(unsigned char *c, unsigned long long clen,
+                       const unsigned char *n, const unsigned char *k)
 {
-    return implementation->stream_ietf(c, clen, n, k);
+    if (clen > crypto_stream_chacha20_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    return implementation->stream(c, clen, n, k);
 }
 
 int
@@ -44,41 +67,117 @@ crypto_stream_chacha20_xor_ic(unsigned char *c, const unsigned char *m,
                               const unsigned char *n, uint64_t ic,
                               const unsigned char *k)
 {
+    if (mlen > crypto_stream_chacha20_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
     return implementation->stream_xor_ic(c, m, mlen, n, ic, k);
 }
 
-int
-crypto_stream_chacha20_ietf_xor_ic(unsigned char *c, const unsigned char *m,
-                                   unsigned long long mlen,
-                                   const unsigned char *n, uint32_t ic,
-                                   const unsigned char *k)
-{
-    return implementation->stream_ietf_xor_ic(c, m, mlen, n, ic, k);
-}
-
 int
 crypto_stream_chacha20_xor(unsigned char *c, const unsigned char *m,
                            unsigned long long mlen, const unsigned char *n,
                            const unsigned char *k)
 {
+    if (mlen > crypto_stream_chacha20_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
     return implementation->stream_xor_ic(c, m, mlen, n, 0U, k);
 }
 
+int
+crypto_stream_chacha20_ietf_ext(unsigned char *c, unsigned long long clen,
+                                const unsigned char *n, const unsigned char *k)
+{
+    if (clen > crypto_stream_chacha20_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    return implementation->stream_ietf_ext(c, clen, n, k);
+}
+
+int
+crypto_stream_chacha20_ietf_ext_xor_ic(unsigned char *c, const unsigned char *m,
+                                       unsigned long long mlen,
+                                       const unsigned char *n, uint32_t ic,
+                                       const unsigned char *k)
+{
+    if (mlen > crypto_stream_chacha20_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    return implementation->stream_ietf_ext_xor_ic(c, m, mlen, n, ic, k);
+}
+
+static int
+crypto_stream_chacha20_ietf_ext_xor(unsigned char *c, const unsigned char *m,
+                                    unsigned long long mlen, const unsigned char *n,
+                                    const unsigned char *k)
+{
+    if (mlen > crypto_stream_chacha20_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    return implementation->stream_ietf_ext_xor_ic(c, m, mlen, n, 0U, k);
+}
+
+int
+crypto_stream_chacha20_ietf(unsigned char *c, unsigned long long clen,
+                            const unsigned char *n, const unsigned char *k)
+{
+    if (clen > crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    return crypto_stream_chacha20_ietf_ext(c, clen, n, k);
+}
+
+int
+crypto_stream_chacha20_ietf_xor_ic(unsigned char *c, const unsigned char *m,
+                                   unsigned long long mlen,
+                                   const unsigned char *n, uint32_t ic,
+                                   const unsigned char *k)
+{
+    if ((unsigned long long) ic >
+        (64ULL * (1ULL << 32)) / 64ULL - (mlen + 63ULL) / 64ULL) {
+        sodium_misuse();
+    }
+    return crypto_stream_chacha20_ietf_ext_xor_ic(c, m, mlen, n, ic, k);
+}
+
 int
 crypto_stream_chacha20_ietf_xor(unsigned char *c, const unsigned char *m,
                                 unsigned long long mlen, const unsigned char *n,
                                 const unsigned char *k)
 {
-    return implementation->stream_ietf_xor_ic(c, m, mlen, n, 0U, k);
+    if (mlen > crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX) {
+        sodium_misuse();
+    }
+    return crypto_stream_chacha20_ietf_ext_xor(c, m, mlen, n, k);
+}
+
+void
+crypto_stream_chacha20_ietf_keygen(unsigned char k[crypto_stream_chacha20_ietf_KEYBYTES])
+{
+    randombytes_buf(k, crypto_stream_chacha20_ietf_KEYBYTES);
+}
+
+void
+crypto_stream_chacha20_keygen(unsigned char k[crypto_stream_chacha20_KEYBYTES])
+{
+    randombytes_buf(k, crypto_stream_chacha20_KEYBYTES);
 }
 
 int
 _crypto_stream_chacha20_pick_best_implementation(void)
 {
     implementation = &crypto_stream_chacha20_ref_implementation;
-#if (defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H) && defined(__GNUC__))
+#if defined(HAVE_AVX2INTRIN_H) && defined(HAVE_EMMINTRIN_H) && \
+    defined(HAVE_TMMINTRIN_H) && defined(HAVE_SMMINTRIN_H)
+    if (sodium_runtime_has_avx2()) {
+        implementation = &crypto_stream_chacha20_dolbeau_avx2_implementation;
+        return 0;
+    }
+#endif
+#if defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H)
     if (sodium_runtime_has_ssse3()) {
-        implementation = &crypto_stream_chacha20_vec_implementation;
+        implementation = &crypto_stream_chacha20_dolbeau_ssse3_implementation;
+        return 0;
     }
 #endif
     return 0;
diff --git a/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h b/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h
index d6b71c5..40f782f 100644
--- a/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h
+++ b/libsodium/src/libsodium/crypto_stream/chacha20/stream_chacha20.h
@@ -7,16 +7,16 @@
 typedef struct crypto_stream_chacha20_implementation {
     int (*stream)(unsigned char *c, unsigned long long clen,
                   const unsigned char *n, const unsigned char *k);
-    int (*stream_ietf)(unsigned char *c, unsigned long long clen,
-                      const unsigned char *n, const unsigned char *k);
+    int (*stream_ietf_ext)(unsigned char *c, unsigned long long clen,
+                           const unsigned char *n, const unsigned char *k);
     int (*stream_xor_ic)(unsigned char *c, const unsigned char *m,
                          unsigned long long mlen,
                          const unsigned char *n, uint64_t ic,
                          const unsigned char *k);
-    int (*stream_ietf_xor_ic)(unsigned char *c, const unsigned char *m,
-                              unsigned long long mlen,
-                              const unsigned char *n, uint32_t ic,
-                              const unsigned char *k);
+    int (*stream_ietf_ext_xor_ic)(unsigned char *c, const unsigned char *m,
+                                  unsigned long long mlen,
+                                  const unsigned char *n, uint32_t ic,
+                                  const unsigned char *k);
 } crypto_stream_chacha20_implementation;
 
 #endif
diff --git a/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c b/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c
deleted file mode 100644
index b376d26..0000000
--- a/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.c
+++ /dev/null
@@ -1,329 +0,0 @@
-
-#include <stdint.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "export.h"
-#include "utils.h"
-#include "crypto_stream_chacha20.h"
-#include "stream_chacha20_vec.h"
-#include "../stream_chacha20.h"
-
-#if (defined(HAVE_EMMINTRIN_H) && defined(HAVE_TMMINTRIN_H) && defined(__GNUC__))
-
-#pragma GCC target("sse2")
-#pragma GCC target("ssse3")
-
-#define CHACHA_RNDS 20
-
-typedef unsigned int vec __attribute__((vector_size(16)));
-
-#include <emmintrin.h>
-#include <tmmintrin.h>
-
-# if __clang__
-#  define VBPI 4
-# else
-#  define VBPI 3
-# endif
-# define ONE (vec) _mm_set_epi32(0, 0, 0, 1)
-# define LOAD(m) (vec) _mm_loadu_si128((const __m128i *) (const void *) (m))
-# define LOAD_ALIGNED(m) (vec) _mm_load_si128((const __m128i *) (const void *) (m))
-# define STORE(m, r) _mm_storeu_si128((__m128i *) (void *) (m), (__m128i) (r))
-# define ROTV1(x) (vec) _mm_shuffle_epi32((__m128i)x, _MM_SHUFFLE(0, 3, 2, 1))
-# define ROTV2(x) (vec) _mm_shuffle_epi32((__m128i)x, _MM_SHUFFLE(1, 0, 3, 2))
-# define ROTV3(x) (vec) _mm_shuffle_epi32((__m128i)x, _MM_SHUFFLE(2, 1, 0, 3))
-# define ROTW7(x) \
-    (vec)(_mm_slli_epi32((__m128i)x, 7) ^ _mm_srli_epi32((__m128i)x, 25))
-# define ROTW12(x) \
-    (vec)(_mm_slli_epi32((__m128i)x, 12) ^ _mm_srli_epi32((__m128i)x, 20))
-# define ROTW8(x) \
-    (vec)(_mm_slli_epi32((__m128i)x, 8) ^ _mm_srli_epi32((__m128i)x, 24))
-#define ROTW16(x) \
-    (vec)(_mm_slli_epi32((__m128i)x, 16) ^ _mm_srli_epi32((__m128i)x, 16))
-
-#ifndef REVV_BE
-# define REVV_BE(x) (x)
-#endif
-
-#define BPI (VBPI + 0) /* Blocks computed per loop iteration   */
-
-#define DQROUND_VECTORS(a, b, c, d) \
-    a += b;                         \
-    d ^= a;                         \
-    d = ROTW16(d);                  \
-    c += d;                         \
-    b ^= c;                         \
-    b = ROTW12(b);                  \
-    a += b;                         \
-    d ^= a;                         \
-    d = ROTW8(d);                   \
-    c += d;                         \
-    b ^= c;                         \
-    b = ROTW7(b);                   \
-    b = ROTV1(b);                   \
-    c = ROTV2(c);                   \
-    d = ROTV3(d);                   \
-    a += b;                         \
-    d ^= a;                         \
-    d = ROTW16(d);                  \
-    c += d;                         \
-    b ^= c;                         \
-    b = ROTW12(b);                  \
-    a += b;                         \
-    d ^= a;                         \
-    d = ROTW8(d);                   \
-    c += d;                         \
-    b ^= c;                         \
-    b = ROTW7(b);                   \
-    b = ROTV3(b);                   \
-    c = ROTV2(c);                   \
-    d = ROTV1(d);
-
-#define WRITE_XOR(in, op, d, v0, v1, v2, v3)           \
-    STORE(op + d + 0, LOAD(in + d + 0) ^ REVV_BE(v0)); \
-    STORE(op + d + 4, LOAD(in + d + 4) ^ REVV_BE(v1)); \
-    STORE(op + d + 8, LOAD(in + d + 8) ^ REVV_BE(v2)); \
-    STORE(op + d + 12, LOAD(in + d + 12) ^ REVV_BE(v3));
-
-struct chacha_ctx {
-    vec s1;
-    vec s2;
-    vec s3;
-};
-
-typedef struct chacha_ctx chacha_ctx;
-
-static void
-chacha_ivsetup(chacha_ctx *ctx, const uint8_t *iv, uint64_t ic)
-{
-    const vec s3 = {
-        (uint32_t) ic,
-        (uint32_t) (ic >> 32),
-        ((const uint32_t *) (const void *) iv)[0],
-        ((const uint32_t *) (const void *) iv)[1]
-    };
-    ctx->s3 = s3;
-}
-
-static void
-chacha_ietf_ivsetup(chacha_ctx *ctx, const uint8_t *iv, uint32_t ic)
-{
-    const vec s3 = {
-        ic,
-        ((const uint32_t *) (const void *) iv)[0],
-        ((const uint32_t *) (const void *) iv)[1],
-        ((const uint32_t *) (const void *) iv)[2]
-    };
-    ctx->s3 = s3;
-}
-
-static void
-chacha_keysetup(chacha_ctx *ctx, const uint8_t *k)
-{
-    ctx->s1 = LOAD(k);
-    ctx->s2 = LOAD(k + 16);
-}
-
-static void
-chacha_encrypt_bytes(chacha_ctx *ctx, const uint8_t *in, uint8_t *out,
-                     unsigned long long inlen)
-{
-    CRYPTO_ALIGN(16) unsigned chacha_const[]
-        = { 0x61707865, 0x3320646E, 0x79622D32, 0x6B206574 };
-    uint32_t           *op = (uint32_t *) (void *) out;
-    const uint32_t     *ip = (const uint32_t *) (const void *) in;
-    vec                 s0, s1, s2, s3;
-    unsigned long long  iters;
-    unsigned long long  i;
-
-    if (inlen > 64ULL * (1ULL << 32) - 64ULL) {
-        abort();
-    }
-    s0 = LOAD_ALIGNED(chacha_const);
-    s1 = ctx->s1;
-    s2 = ctx->s2;
-    s3 = ctx->s3;
-
-    for (iters = 0; iters < inlen / (BPI * 64); iters++) {
-#if VBPI > 2
-        vec v8, v9, v10, v11;
-#endif
-#if VBPI > 3
-        vec v12, v13, v14, v15;
-#endif
-        vec v0, v1, v2, v3, v4, v5, v6, v7;
-        v4 = v0 = s0;
-        v5 = v1 = s1;
-        v6 = v2 = s2;
-        v3 = s3;
-        v7 = v3 + ONE;
-#if VBPI > 2
-        v8 = v4;
-        v9 = v5;
-        v10 = v6;
-        v11 = v7 + ONE;
-#endif
-#if VBPI > 3
-        v12 = v8;
-        v13 = v9;
-        v14 = v10;
-        v15 = v11 + ONE;
-#endif
-        for (i = CHACHA_RNDS / 2; i; i--) {
-            DQROUND_VECTORS(v0, v1, v2, v3)
-            DQROUND_VECTORS(v4, v5, v6, v7)
-#if VBPI > 2
-            DQROUND_VECTORS(v8, v9, v10, v11)
-#endif
-#if VBPI > 3
-            DQROUND_VECTORS(v12, v13, v14, v15)
-#endif
-        }
-
-        WRITE_XOR(ip, op, 0, v0 + s0, v1 + s1, v2 + s2, v3 + s3)
-        s3 += ONE;
-        WRITE_XOR(ip, op, 16, v4 + s0, v5 + s1, v6 + s2, v7 + s3)
-        s3 += ONE;
-#if VBPI > 2
-        WRITE_XOR(ip, op, 32, v8 + s0, v9 + s1, v10 + s2, v11 + s3)
-        s3 += ONE;
-#endif
-#if VBPI > 3
-        WRITE_XOR(ip, op, 48, v12 + s0, v13 + s1, v14 + s2, v15 + s3)
-        s3 += ONE;
-#endif
-        ip += VBPI * 16;
-        op += VBPI * 16;
-    }
-
-    for (iters = inlen % (BPI * 64) / 64; iters != 0; iters--) {
-        vec v0 = s0, v1 = s1, v2 = s2, v3 = s3;
-        for (i = CHACHA_RNDS / 2; i; i--) {
-            DQROUND_VECTORS(v0, v1, v2, v3);
-        }
-        WRITE_XOR(ip, op, 0, v0 + s0, v1 + s1, v2 + s2, v3 + s3)
-        s3 += ONE;
-        ip += 16;
-        op += 16;
-    }
-
-    inlen = inlen % 64;
-    if (inlen) {
-        CRYPTO_ALIGN(16) vec buf[4];
-        vec v0, v1, v2, v3;
-        v0 = s0;
-        v1 = s1;
-        v2 = s2;
-        v3 = s3;
-        for (i = CHACHA_RNDS / 2; i; i--) {
-            DQROUND_VECTORS(v0, v1, v2, v3);
-        }
-
-        if (inlen >= 16) {
-            STORE(op + 0, LOAD(ip + 0) ^ REVV_BE(v0 + s0));
-            if (inlen >= 32) {
-                STORE(op + 4, LOAD(ip + 4) ^ REVV_BE(v1 + s1));
-                if (inlen >= 48) {
-                    STORE(op + 8, LOAD(ip + 8) ^ REVV_BE(v2 + s2));
-                    buf[3] = REVV_BE(v3 + s3);
-                } else {
-                    buf[2] = REVV_BE(v2 + s2);
-                }
-            } else {
-                buf[1] = REVV_BE(v1 + s1);
-            }
-        } else {
-            buf[0] = REVV_BE(v0 + s0);
-        }
-        for (i = inlen & ~15ULL; i < inlen; i++) {
-            ((char *) op)[i] = ((const char *) ip)[i] ^ ((char *) buf)[i];
-        }
-    }
-}
-
-static int
-stream_vec(unsigned char *c, unsigned long long clen,
-           const unsigned char *n, const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-
-    if (!clen) {
-        return 0;
-    }
-    (void) sizeof(int[crypto_stream_chacha20_KEYBYTES == 256 / 8 ? 1 : -1]);
-    chacha_keysetup(&ctx, k);
-    chacha_ivsetup(&ctx, n, 0ULL);
-    memset(c, 0, clen);
-    chacha_encrypt_bytes(&ctx, c, c, clen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-static int
-stream_ietf_vec(unsigned char *c, unsigned long long clen,
-                const unsigned char *n, const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-
-    if (!clen) {
-        return 0;
-    }
-    (void) sizeof(int[crypto_stream_chacha20_KEYBYTES == 256 / 8 ? 1 : -1]);
-    chacha_keysetup(&ctx, k);
-    chacha_ietf_ivsetup(&ctx, n, 0ULL);
-    memset(c, 0, clen);
-    chacha_encrypt_bytes(&ctx, c, c, clen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-static int
-stream_vec_xor_ic(unsigned char *c, const unsigned char *m,
-                  unsigned long long mlen,
-                  const unsigned char *n, uint64_t ic,
-                  const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-
-    if (!mlen) {
-        return 0;
-    }
-    chacha_keysetup(&ctx, k);
-    chacha_ivsetup(&ctx, n, ic);
-    chacha_encrypt_bytes(&ctx, m, c, mlen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-static int
-stream_ietf_vec_xor_ic(unsigned char *c, const unsigned char *m,
-                       unsigned long long mlen,
-                       const unsigned char *n, uint32_t ic,
-                       const unsigned char *k)
-{
-    struct chacha_ctx ctx;
-
-    if (!mlen) {
-        return 0;
-    }
-    chacha_keysetup(&ctx, k);
-    chacha_ietf_ivsetup(&ctx, n, ic);
-    chacha_encrypt_bytes(&ctx, m, c, mlen);
-    sodium_memzero(&ctx, sizeof ctx);
-
-    return 0;
-}
-
-struct crypto_stream_chacha20_implementation
-crypto_stream_chacha20_vec_implementation = {
-    SODIUM_C99(.stream =) stream_vec,
-    SODIUM_C99(.stream_ietf =) stream_ietf_vec,
-    SODIUM_C99(.stream_xor_ic =) stream_vec_xor_ic,
-    SODIUM_C99(.stream_ietf_xor_ic =) stream_ietf_vec_xor_ic
-};
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.h b/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.h
deleted file mode 100644
index e73ab3e..0000000
--- a/libsodium/src/libsodium/crypto_stream/chacha20/vec/stream_chacha20_vec.h
+++ /dev/null
@@ -1,27 +0,0 @@
-
-#include <stdint.h>
-
-#include "crypto_stream_chacha20.h"
-
-extern struct crypto_stream_chacha20_implementation
-    crypto_stream_chacha20_vec_implementation;
-
-int
-crypto_stream_chacha20_vec(unsigned char *c, unsigned long long clen,
-                           const unsigned char *n, const unsigned char *k);
-
-int
-crypto_stream_chacha20_vec_xor_ic(unsigned char *c, const unsigned char *m,
-                                  unsigned long long mlen,
-                                  const unsigned char *n, uint64_t ic,
-                                  const unsigned char *k);
-
-int
-crypto_stream_chacha20_ietf_vec(unsigned char *c, unsigned long long clen,
-                                const unsigned char *n, const unsigned char *k);
-
-int
-crypto_stream_chacha20_ietf_vec_xor_ic(unsigned char *c, const unsigned char *m,
-                                       unsigned long long mlen,
-                                       const unsigned char *n, uint32_t ic,
-                                       const unsigned char *k);
diff --git a/libsodium/src/libsodium/crypto_stream/crypto_stream.c b/libsodium/src/libsodium/crypto_stream/crypto_stream.c
index 50a9c1c..58d2538 100644
--- a/libsodium/src/libsodium/crypto_stream/crypto_stream.c
+++ b/libsodium/src/libsodium/crypto_stream/crypto_stream.c
@@ -1,5 +1,6 @@
 
 #include "crypto_stream.h"
+#include "randombytes.h"
 
 size_t
 crypto_stream_keybytes(void)
@@ -13,6 +14,12 @@ crypto_stream_noncebytes(void)
     return crypto_stream_NONCEBYTES;
 }
 
+size_t
+crypto_stream_messagebytes_max(void)
+{
+    return crypto_stream_MESSAGEBYTES_MAX;
+}
+
 const char *
 crypto_stream_primitive(void)
 {
@@ -34,3 +41,9 @@ crypto_stream_xor(unsigned char *c, const unsigned char *m,
 {
     return crypto_stream_xsalsa20_xor(c, m, mlen, n, k);
 }
+
+void
+crypto_stream_keygen(unsigned char k[crypto_stream_KEYBYTES])
+{
+    randombytes_buf(k, crypto_stream_KEYBYTES);
+}
diff --git a/libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S b/libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
deleted file mode 100644
index 535ccdd..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa20/amd64_xmm6/stream_salsa20_amd64_xmm6.S
+++ /dev/null
@@ -1,944 +0,0 @@
-#ifdef HAVE_AMD64_ASM
-
-.text
-.p2align 5
-
-.globl  crypto_stream_salsa20
-.globl _crypto_stream_salsa20
-#ifdef __ELF__
-.type  crypto_stream_salsa20, @function
-.type _crypto_stream_salsa20, @function
-#endif
-crypto_stream_salsa20:
-_crypto_stream_salsa20:
-mov %rsp,%r11
-and $31,%r11
-add $512,%r11
-sub %r11,%rsp
-movq %r11,416(%rsp)
-movq %r12,424(%rsp)
-movq %r13,432(%rsp)
-movq %r14,440(%rsp)
-movq %r15,448(%rsp)
-movq %rbx,456(%rsp)
-movq %rbp,464(%rsp)
-mov  %rsi,%r9
-mov  %rdi,%rdi
-mov  %rdi,%rsi
-mov  %rdx,%rdx
-mov  %rcx,%r10
-cmp  $0,%r9
-jbe ._done
-mov  $0,%rax
-mov  %r9,%rcx
-rep stosb
-sub  %r9,%rdi
-movq $0,472(%rsp)
-jmp ._start
-
-.text
-.p2align 5
-
-.globl  crypto_stream_salsa20_xor_ic
-.globl _crypto_stream_salsa20_xor_ic
-#ifdef __ELF__
-.type  crypto_stream_salsa20_xor_ic, @function
-.type _crypto_stream_salsa20_xor_ic, @function
-#endif
-crypto_stream_salsa20_xor_ic:
-_crypto_stream_salsa20_xor_ic:
-
-mov %rsp,%r11
-and $31,%r11
-add $512,%r11
-sub %r11,%rsp
-movq %r11,416(%rsp)
-movq %r12,424(%rsp)
-movq %r13,432(%rsp)
-movq %r14,440(%rsp)
-movq %r15,448(%rsp)
-movq %rbx,456(%rsp)
-movq %rbp,464(%rsp)
-mov  %rdi,%rdi
-mov  %rsi,%rsi
-mov  %r9,%r10
-movq %r8,472(%rsp)
-mov  %rdx,%r9
-mov  %rcx,%rdx
-cmp  $0,%r9
-jbe ._done
-
-._start:
-movl   20(%r10),%ecx
-movl   0(%r10),%r8d
-movl   0(%rdx),%eax
-movl   16(%r10),%r11d
-movl %ecx,64(%rsp)
-movl %r8d,4+64(%rsp)
-movl %eax,8+64(%rsp)
-movl %r11d,12+64(%rsp)
-movl   24(%r10),%r8d
-movl   4(%r10),%eax
-movl   4(%rdx),%edx
-movq 472(%rsp),%rcx
-movl %ecx,80(%rsp)
-movl %r8d,4+80(%rsp)
-movl %eax,8+80(%rsp)
-movl %edx,12+80(%rsp)
-movl   12(%r10),%edx
-shr  $32,%rcx
-movl   28(%r10),%r8d
-movl   8(%r10),%eax
-movl %edx,96(%rsp)
-movl %ecx,4+96(%rsp)
-movl %r8d,8+96(%rsp)
-movl %eax,12+96(%rsp)
-mov  $1634760805,%rdx
-mov  $857760878,%rcx
-mov  $2036477234,%r8
-mov  $1797285236,%rax
-movl %edx,112(%rsp)
-movl %ecx,4+112(%rsp)
-movl %r8d,8+112(%rsp)
-movl %eax,12+112(%rsp)
-cmp  $256,%r9
-jb ._bytesbetween1and255
-movdqa 112(%rsp),%xmm0
-pshufd $0x55,%xmm0,%xmm1
-pshufd $0xaa,%xmm0,%xmm2
-pshufd $0xff,%xmm0,%xmm3
-pshufd $0x00,%xmm0,%xmm0
-movdqa %xmm1,128(%rsp)
-movdqa %xmm2,144(%rsp)
-movdqa %xmm3,160(%rsp)
-movdqa %xmm0,176(%rsp)
-movdqa 64(%rsp),%xmm0
-pshufd $0xaa,%xmm0,%xmm1
-pshufd $0xff,%xmm0,%xmm2
-pshufd $0x00,%xmm0,%xmm3
-pshufd $0x55,%xmm0,%xmm0
-movdqa %xmm1,192(%rsp)
-movdqa %xmm2,208(%rsp)
-movdqa %xmm3,224(%rsp)
-movdqa %xmm0,240(%rsp)
-movdqa 80(%rsp),%xmm0
-pshufd $0xff,%xmm0,%xmm1
-pshufd $0x55,%xmm0,%xmm2
-pshufd $0xaa,%xmm0,%xmm0
-movdqa %xmm1,256(%rsp)
-movdqa %xmm2,272(%rsp)
-movdqa %xmm0,288(%rsp)
-movdqa 96(%rsp),%xmm0
-pshufd $0x00,%xmm0,%xmm1
-pshufd $0xaa,%xmm0,%xmm2
-pshufd $0xff,%xmm0,%xmm0
-movdqa %xmm1,304(%rsp)
-movdqa %xmm2,320(%rsp)
-movdqa %xmm0,336(%rsp)
-
-._bytesatleast256:
-movq 472(%rsp),%rdx
-mov  %rdx,%rcx
-shr  $32,%rcx
-movl %edx,352(%rsp)
-movl %ecx,368(%rsp)
-add  $1,%rdx
-mov  %rdx,%rcx
-shr  $32,%rcx
-movl %edx,4+352(%rsp)
-movl %ecx,4+368(%rsp)
-add  $1,%rdx
-mov  %rdx,%rcx
-shr  $32,%rcx
-movl %edx,8+352(%rsp)
-movl %ecx,8+368(%rsp)
-add  $1,%rdx
-mov  %rdx,%rcx
-shr  $32,%rcx
-movl %edx,12+352(%rsp)
-movl %ecx,12+368(%rsp)
-add  $1,%rdx
-mov  %rdx,%rcx
-shr  $32,%rcx
-movl %edx,80(%rsp)
-movl %ecx,4+96(%rsp)
-movq %rdx,472(%rsp)
-movq %r9,480(%rsp)
-mov  $20,%rdx
-movdqa 128(%rsp),%xmm0
-movdqa 144(%rsp),%xmm1
-movdqa 160(%rsp),%xmm2
-movdqa 320(%rsp),%xmm3
-movdqa 336(%rsp),%xmm4
-movdqa 192(%rsp),%xmm5
-movdqa 208(%rsp),%xmm6
-movdqa 240(%rsp),%xmm7
-movdqa 256(%rsp),%xmm8
-movdqa 272(%rsp),%xmm9
-movdqa 288(%rsp),%xmm10
-movdqa 368(%rsp),%xmm11
-movdqa 176(%rsp),%xmm12
-movdqa 224(%rsp),%xmm13
-movdqa 304(%rsp),%xmm14
-movdqa 352(%rsp),%xmm15
-
-._mainloop1:
-movdqa %xmm1,384(%rsp)
-movdqa %xmm2,400(%rsp)
-movdqa %xmm13,%xmm1
-paddd %xmm12,%xmm1
-movdqa %xmm1,%xmm2
-pslld $7,%xmm1
-pxor  %xmm1,%xmm14
-psrld $25,%xmm2
-pxor  %xmm2,%xmm14
-movdqa %xmm7,%xmm1
-paddd %xmm0,%xmm1
-movdqa %xmm1,%xmm2
-pslld $7,%xmm1
-pxor  %xmm1,%xmm11
-psrld $25,%xmm2
-pxor  %xmm2,%xmm11
-movdqa %xmm12,%xmm1
-paddd %xmm14,%xmm1
-movdqa %xmm1,%xmm2
-pslld $9,%xmm1
-pxor  %xmm1,%xmm15
-psrld $23,%xmm2
-pxor  %xmm2,%xmm15
-movdqa %xmm0,%xmm1
-paddd %xmm11,%xmm1
-movdqa %xmm1,%xmm2
-pslld $9,%xmm1
-pxor  %xmm1,%xmm9
-psrld $23,%xmm2
-pxor  %xmm2,%xmm9
-movdqa %xmm14,%xmm1
-paddd %xmm15,%xmm1
-movdqa %xmm1,%xmm2
-pslld $13,%xmm1
-pxor  %xmm1,%xmm13
-psrld $19,%xmm2
-pxor  %xmm2,%xmm13
-movdqa %xmm11,%xmm1
-paddd %xmm9,%xmm1
-movdqa %xmm1,%xmm2
-pslld $13,%xmm1
-pxor  %xmm1,%xmm7
-psrld $19,%xmm2
-pxor  %xmm2,%xmm7
-movdqa %xmm15,%xmm1
-paddd %xmm13,%xmm1
-movdqa %xmm1,%xmm2
-pslld $18,%xmm1
-pxor  %xmm1,%xmm12
-psrld $14,%xmm2
-pxor  %xmm2,%xmm12
-movdqa 384(%rsp),%xmm1
-movdqa %xmm12,384(%rsp)
-movdqa %xmm9,%xmm2
-paddd %xmm7,%xmm2
-movdqa %xmm2,%xmm12
-pslld $18,%xmm2
-pxor  %xmm2,%xmm0
-psrld $14,%xmm12
-pxor  %xmm12,%xmm0
-movdqa %xmm5,%xmm2
-paddd %xmm1,%xmm2
-movdqa %xmm2,%xmm12
-pslld $7,%xmm2
-pxor  %xmm2,%xmm3
-psrld $25,%xmm12
-pxor  %xmm12,%xmm3
-movdqa 400(%rsp),%xmm2
-movdqa %xmm0,400(%rsp)
-movdqa %xmm6,%xmm0
-paddd %xmm2,%xmm0
-movdqa %xmm0,%xmm12
-pslld $7,%xmm0
-pxor  %xmm0,%xmm4
-psrld $25,%xmm12
-pxor  %xmm12,%xmm4
-movdqa %xmm1,%xmm0
-paddd %xmm3,%xmm0
-movdqa %xmm0,%xmm12
-pslld $9,%xmm0
-pxor  %xmm0,%xmm10
-psrld $23,%xmm12
-pxor  %xmm12,%xmm10
-movdqa %xmm2,%xmm0
-paddd %xmm4,%xmm0
-movdqa %xmm0,%xmm12
-pslld $9,%xmm0
-pxor  %xmm0,%xmm8
-psrld $23,%xmm12
-pxor  %xmm12,%xmm8
-movdqa %xmm3,%xmm0
-paddd %xmm10,%xmm0
-movdqa %xmm0,%xmm12
-pslld $13,%xmm0
-pxor  %xmm0,%xmm5
-psrld $19,%xmm12
-pxor  %xmm12,%xmm5
-movdqa %xmm4,%xmm0
-paddd %xmm8,%xmm0
-movdqa %xmm0,%xmm12
-pslld $13,%xmm0
-pxor  %xmm0,%xmm6
-psrld $19,%xmm12
-pxor  %xmm12,%xmm6
-movdqa %xmm10,%xmm0
-paddd %xmm5,%xmm0
-movdqa %xmm0,%xmm12
-pslld $18,%xmm0
-pxor  %xmm0,%xmm1
-psrld $14,%xmm12
-pxor  %xmm12,%xmm1
-movdqa 384(%rsp),%xmm0
-movdqa %xmm1,384(%rsp)
-movdqa %xmm4,%xmm1
-paddd %xmm0,%xmm1
-movdqa %xmm1,%xmm12
-pslld $7,%xmm1
-pxor  %xmm1,%xmm7
-psrld $25,%xmm12
-pxor  %xmm12,%xmm7
-movdqa %xmm8,%xmm1
-paddd %xmm6,%xmm1
-movdqa %xmm1,%xmm12
-pslld $18,%xmm1
-pxor  %xmm1,%xmm2
-psrld $14,%xmm12
-pxor  %xmm12,%xmm2
-movdqa 400(%rsp),%xmm12
-movdqa %xmm2,400(%rsp)
-movdqa %xmm14,%xmm1
-paddd %xmm12,%xmm1
-movdqa %xmm1,%xmm2
-pslld $7,%xmm1
-pxor  %xmm1,%xmm5
-psrld $25,%xmm2
-pxor  %xmm2,%xmm5
-movdqa %xmm0,%xmm1
-paddd %xmm7,%xmm1
-movdqa %xmm1,%xmm2
-pslld $9,%xmm1
-pxor  %xmm1,%xmm10
-psrld $23,%xmm2
-pxor  %xmm2,%xmm10
-movdqa %xmm12,%xmm1
-paddd %xmm5,%xmm1
-movdqa %xmm1,%xmm2
-pslld $9,%xmm1
-pxor  %xmm1,%xmm8
-psrld $23,%xmm2
-pxor  %xmm2,%xmm8
-movdqa %xmm7,%xmm1
-paddd %xmm10,%xmm1
-movdqa %xmm1,%xmm2
-pslld $13,%xmm1
-pxor  %xmm1,%xmm4
-psrld $19,%xmm2
-pxor  %xmm2,%xmm4
-movdqa %xmm5,%xmm1
-paddd %xmm8,%xmm1
-movdqa %xmm1,%xmm2
-pslld $13,%xmm1
-pxor  %xmm1,%xmm14
-psrld $19,%xmm2
-pxor  %xmm2,%xmm14
-movdqa %xmm10,%xmm1
-paddd %xmm4,%xmm1
-movdqa %xmm1,%xmm2
-pslld $18,%xmm1
-pxor  %xmm1,%xmm0
-psrld $14,%xmm2
-pxor  %xmm2,%xmm0
-movdqa 384(%rsp),%xmm1
-movdqa %xmm0,384(%rsp)
-movdqa %xmm8,%xmm0
-paddd %xmm14,%xmm0
-movdqa %xmm0,%xmm2
-pslld $18,%xmm0
-pxor  %xmm0,%xmm12
-psrld $14,%xmm2
-pxor  %xmm2,%xmm12
-movdqa %xmm11,%xmm0
-paddd %xmm1,%xmm0
-movdqa %xmm0,%xmm2
-pslld $7,%xmm0
-pxor  %xmm0,%xmm6
-psrld $25,%xmm2
-pxor  %xmm2,%xmm6
-movdqa 400(%rsp),%xmm2
-movdqa %xmm12,400(%rsp)
-movdqa %xmm3,%xmm0
-paddd %xmm2,%xmm0
-movdqa %xmm0,%xmm12
-pslld $7,%xmm0
-pxor  %xmm0,%xmm13
-psrld $25,%xmm12
-pxor  %xmm12,%xmm13
-movdqa %xmm1,%xmm0
-paddd %xmm6,%xmm0
-movdqa %xmm0,%xmm12
-pslld $9,%xmm0
-pxor  %xmm0,%xmm15
-psrld $23,%xmm12
-pxor  %xmm12,%xmm15
-movdqa %xmm2,%xmm0
-paddd %xmm13,%xmm0
-movdqa %xmm0,%xmm12
-pslld $9,%xmm0
-pxor  %xmm0,%xmm9
-psrld $23,%xmm12
-pxor  %xmm12,%xmm9
-movdqa %xmm6,%xmm0
-paddd %xmm15,%xmm0
-movdqa %xmm0,%xmm12
-pslld $13,%xmm0
-pxor  %xmm0,%xmm11
-psrld $19,%xmm12
-pxor  %xmm12,%xmm11
-movdqa %xmm13,%xmm0
-paddd %xmm9,%xmm0
-movdqa %xmm0,%xmm12
-pslld $13,%xmm0
-pxor  %xmm0,%xmm3
-psrld $19,%xmm12
-pxor  %xmm12,%xmm3
-movdqa %xmm15,%xmm0
-paddd %xmm11,%xmm0
-movdqa %xmm0,%xmm12
-pslld $18,%xmm0
-pxor  %xmm0,%xmm1
-psrld $14,%xmm12
-pxor  %xmm12,%xmm1
-movdqa %xmm9,%xmm0
-paddd %xmm3,%xmm0
-movdqa %xmm0,%xmm12
-pslld $18,%xmm0
-pxor  %xmm0,%xmm2
-psrld $14,%xmm12
-pxor  %xmm12,%xmm2
-movdqa 384(%rsp),%xmm12
-movdqa 400(%rsp),%xmm0
-sub  $2,%rdx
-ja ._mainloop1
-paddd 176(%rsp),%xmm12
-paddd 240(%rsp),%xmm7
-paddd 288(%rsp),%xmm10
-paddd 336(%rsp),%xmm4
-movd   %xmm12,%rdx
-movd   %xmm7,%rcx
-movd   %xmm10,%r8
-movd   %xmm4,%r9
-pshufd $0x39,%xmm12,%xmm12
-pshufd $0x39,%xmm7,%xmm7
-pshufd $0x39,%xmm10,%xmm10
-pshufd $0x39,%xmm4,%xmm4
-xorl 0(%rsi),%edx
-xorl 4(%rsi),%ecx
-xorl 8(%rsi),%r8d
-xorl 12(%rsi),%r9d
-movl   %edx,0(%rdi)
-movl   %ecx,4(%rdi)
-movl   %r8d,8(%rdi)
-movl   %r9d,12(%rdi)
-movd   %xmm12,%rdx
-movd   %xmm7,%rcx
-movd   %xmm10,%r8
-movd   %xmm4,%r9
-pshufd $0x39,%xmm12,%xmm12
-pshufd $0x39,%xmm7,%xmm7
-pshufd $0x39,%xmm10,%xmm10
-pshufd $0x39,%xmm4,%xmm4
-xorl 64(%rsi),%edx
-xorl 68(%rsi),%ecx
-xorl 72(%rsi),%r8d
-xorl 76(%rsi),%r9d
-movl   %edx,64(%rdi)
-movl   %ecx,68(%rdi)
-movl   %r8d,72(%rdi)
-movl   %r9d,76(%rdi)
-movd   %xmm12,%rdx
-movd   %xmm7,%rcx
-movd   %xmm10,%r8
-movd   %xmm4,%r9
-pshufd $0x39,%xmm12,%xmm12
-pshufd $0x39,%xmm7,%xmm7
-pshufd $0x39,%xmm10,%xmm10
-pshufd $0x39,%xmm4,%xmm4
-xorl 128(%rsi),%edx
-xorl 132(%rsi),%ecx
-xorl 136(%rsi),%r8d
-xorl 140(%rsi),%r9d
-movl   %edx,128(%rdi)
-movl   %ecx,132(%rdi)
-movl   %r8d,136(%rdi)
-movl   %r9d,140(%rdi)
-movd   %xmm12,%rdx
-movd   %xmm7,%rcx
-movd   %xmm10,%r8
-movd   %xmm4,%r9
-xorl 192(%rsi),%edx
-xorl 196(%rsi),%ecx
-xorl 200(%rsi),%r8d
-xorl 204(%rsi),%r9d
-movl   %edx,192(%rdi)
-movl   %ecx,196(%rdi)
-movl   %r8d,200(%rdi)
-movl   %r9d,204(%rdi)
-paddd 304(%rsp),%xmm14
-paddd 128(%rsp),%xmm0
-paddd 192(%rsp),%xmm5
-paddd 256(%rsp),%xmm8
-movd   %xmm14,%rdx
-movd   %xmm0,%rcx
-movd   %xmm5,%r8
-movd   %xmm8,%r9
-pshufd $0x39,%xmm14,%xmm14
-pshufd $0x39,%xmm0,%xmm0
-pshufd $0x39,%xmm5,%xmm5
-pshufd $0x39,%xmm8,%xmm8
-xorl 16(%rsi),%edx
-xorl 20(%rsi),%ecx
-xorl 24(%rsi),%r8d
-xorl 28(%rsi),%r9d
-movl   %edx,16(%rdi)
-movl   %ecx,20(%rdi)
-movl   %r8d,24(%rdi)
-movl   %r9d,28(%rdi)
-movd   %xmm14,%rdx
-movd   %xmm0,%rcx
-movd   %xmm5,%r8
-movd   %xmm8,%r9
-pshufd $0x39,%xmm14,%xmm14
-pshufd $0x39,%xmm0,%xmm0
-pshufd $0x39,%xmm5,%xmm5
-pshufd $0x39,%xmm8,%xmm8
-xorl 80(%rsi),%edx
-xorl 84(%rsi),%ecx
-xorl 88(%rsi),%r8d
-xorl 92(%rsi),%r9d
-movl   %edx,80(%rdi)
-movl   %ecx,84(%rdi)
-movl   %r8d,88(%rdi)
-movl   %r9d,92(%rdi)
-movd   %xmm14,%rdx
-movd   %xmm0,%rcx
-movd   %xmm5,%r8
-movd   %xmm8,%r9
-pshufd $0x39,%xmm14,%xmm14
-pshufd $0x39,%xmm0,%xmm0
-pshufd $0x39,%xmm5,%xmm5
-pshufd $0x39,%xmm8,%xmm8
-xorl 144(%rsi),%edx
-xorl 148(%rsi),%ecx
-xorl 152(%rsi),%r8d
-xorl 156(%rsi),%r9d
-movl   %edx,144(%rdi)
-movl   %ecx,148(%rdi)
-movl   %r8d,152(%rdi)
-movl   %r9d,156(%rdi)
-movd   %xmm14,%rdx
-movd   %xmm0,%rcx
-movd   %xmm5,%r8
-movd   %xmm8,%r9
-xorl 208(%rsi),%edx
-xorl 212(%rsi),%ecx
-xorl 216(%rsi),%r8d
-xorl 220(%rsi),%r9d
-movl   %edx,208(%rdi)
-movl   %ecx,212(%rdi)
-movl   %r8d,216(%rdi)
-movl   %r9d,220(%rdi)
-paddd 352(%rsp),%xmm15
-paddd 368(%rsp),%xmm11
-paddd 144(%rsp),%xmm1
-paddd 208(%rsp),%xmm6
-movd   %xmm15,%rdx
-movd   %xmm11,%rcx
-movd   %xmm1,%r8
-movd   %xmm6,%r9
-pshufd $0x39,%xmm15,%xmm15
-pshufd $0x39,%xmm11,%xmm11
-pshufd $0x39,%xmm1,%xmm1
-pshufd $0x39,%xmm6,%xmm6
-xorl 32(%rsi),%edx
-xorl 36(%rsi),%ecx
-xorl 40(%rsi),%r8d
-xorl 44(%rsi),%r9d
-movl   %edx,32(%rdi)
-movl   %ecx,36(%rdi)
-movl   %r8d,40(%rdi)
-movl   %r9d,44(%rdi)
-movd   %xmm15,%rdx
-movd   %xmm11,%rcx
-movd   %xmm1,%r8
-movd   %xmm6,%r9
-pshufd $0x39,%xmm15,%xmm15
-pshufd $0x39,%xmm11,%xmm11
-pshufd $0x39,%xmm1,%xmm1
-pshufd $0x39,%xmm6,%xmm6
-xorl 96(%rsi),%edx
-xorl 100(%rsi),%ecx
-xorl 104(%rsi),%r8d
-xorl 108(%rsi),%r9d
-movl   %edx,96(%rdi)
-movl   %ecx,100(%rdi)
-movl   %r8d,104(%rdi)
-movl   %r9d,108(%rdi)
-movd   %xmm15,%rdx
-movd   %xmm11,%rcx
-movd   %xmm1,%r8
-movd   %xmm6,%r9
-pshufd $0x39,%xmm15,%xmm15
-pshufd $0x39,%xmm11,%xmm11
-pshufd $0x39,%xmm1,%xmm1
-pshufd $0x39,%xmm6,%xmm6
-xorl 160(%rsi),%edx
-xorl 164(%rsi),%ecx
-xorl 168(%rsi),%r8d
-xorl 172(%rsi),%r9d
-movl   %edx,160(%rdi)
-movl   %ecx,164(%rdi)
-movl   %r8d,168(%rdi)
-movl   %r9d,172(%rdi)
-movd   %xmm15,%rdx
-movd   %xmm11,%rcx
-movd   %xmm1,%r8
-movd   %xmm6,%r9
-xorl 224(%rsi),%edx
-xorl 228(%rsi),%ecx
-xorl 232(%rsi),%r8d
-xorl 236(%rsi),%r9d
-movl   %edx,224(%rdi)
-movl   %ecx,228(%rdi)
-movl   %r8d,232(%rdi)
-movl   %r9d,236(%rdi)
-paddd 224(%rsp),%xmm13
-paddd 272(%rsp),%xmm9
-paddd 320(%rsp),%xmm3
-paddd 160(%rsp),%xmm2
-movd   %xmm13,%rdx
-movd   %xmm9,%rcx
-movd   %xmm3,%r8
-movd   %xmm2,%r9
-pshufd $0x39,%xmm13,%xmm13
-pshufd $0x39,%xmm9,%xmm9
-pshufd $0x39,%xmm3,%xmm3
-pshufd $0x39,%xmm2,%xmm2
-xorl 48(%rsi),%edx
-xorl 52(%rsi),%ecx
-xorl 56(%rsi),%r8d
-xorl 60(%rsi),%r9d
-movl   %edx,48(%rdi)
-movl   %ecx,52(%rdi)
-movl   %r8d,56(%rdi)
-movl   %r9d,60(%rdi)
-movd   %xmm13,%rdx
-movd   %xmm9,%rcx
-movd   %xmm3,%r8
-movd   %xmm2,%r9
-pshufd $0x39,%xmm13,%xmm13
-pshufd $0x39,%xmm9,%xmm9
-pshufd $0x39,%xmm3,%xmm3
-pshufd $0x39,%xmm2,%xmm2
-xorl 112(%rsi),%edx
-xorl 116(%rsi),%ecx
-xorl 120(%rsi),%r8d
-xorl 124(%rsi),%r9d
-movl   %edx,112(%rdi)
-movl   %ecx,116(%rdi)
-movl   %r8d,120(%rdi)
-movl   %r9d,124(%rdi)
-movd   %xmm13,%rdx
-movd   %xmm9,%rcx
-movd   %xmm3,%r8
-movd   %xmm2,%r9
-pshufd $0x39,%xmm13,%xmm13
-pshufd $0x39,%xmm9,%xmm9
-pshufd $0x39,%xmm3,%xmm3
-pshufd $0x39,%xmm2,%xmm2
-xorl 176(%rsi),%edx
-xorl 180(%rsi),%ecx
-xorl 184(%rsi),%r8d
-xorl 188(%rsi),%r9d
-movl   %edx,176(%rdi)
-movl   %ecx,180(%rdi)
-movl   %r8d,184(%rdi)
-movl   %r9d,188(%rdi)
-movd   %xmm13,%rdx
-movd   %xmm9,%rcx
-movd   %xmm3,%r8
-movd   %xmm2,%r9
-xorl 240(%rsi),%edx
-xorl 244(%rsi),%ecx
-xorl 248(%rsi),%r8d
-xorl 252(%rsi),%r9d
-movl   %edx,240(%rdi)
-movl   %ecx,244(%rdi)
-movl   %r8d,248(%rdi)
-movl   %r9d,252(%rdi)
-movq 480(%rsp),%r9
-sub  $256,%r9
-add  $256,%rsi
-add  $256,%rdi
-cmp  $256,%r9
-jae ._bytesatleast256
-cmp  $0,%r9
-jbe ._done
-
-._bytesbetween1and255:
-cmp  $64,%r9
-jae ._nocopy
-mov  %rdi,%rdx
-leaq 0(%rsp),%rdi
-mov  %r9,%rcx
-rep movsb
-leaq 0(%rsp),%rdi
-leaq 0(%rsp),%rsi
-
-._nocopy:
-movq %r9,480(%rsp)
-movdqa 112(%rsp),%xmm0
-movdqa 64(%rsp),%xmm1
-movdqa 80(%rsp),%xmm2
-movdqa 96(%rsp),%xmm3
-movdqa %xmm1,%xmm4
-mov  $20,%rcx
-
-._mainloop2:
-paddd %xmm0,%xmm4
-movdqa %xmm0,%xmm5
-movdqa %xmm4,%xmm6
-pslld $7,%xmm4
-psrld $25,%xmm6
-pxor  %xmm4,%xmm3
-pxor  %xmm6,%xmm3
-paddd %xmm3,%xmm5
-movdqa %xmm3,%xmm4
-movdqa %xmm5,%xmm6
-pslld $9,%xmm5
-psrld $23,%xmm6
-pxor  %xmm5,%xmm2
-pshufd $0x93,%xmm3,%xmm3
-pxor  %xmm6,%xmm2
-paddd %xmm2,%xmm4
-movdqa %xmm2,%xmm5
-movdqa %xmm4,%xmm6
-pslld $13,%xmm4
-psrld $19,%xmm6
-pxor  %xmm4,%xmm1
-pshufd $0x4e,%xmm2,%xmm2
-pxor  %xmm6,%xmm1
-paddd %xmm1,%xmm5
-movdqa %xmm3,%xmm4
-movdqa %xmm5,%xmm6
-pslld $18,%xmm5
-psrld $14,%xmm6
-pxor  %xmm5,%xmm0
-pshufd $0x39,%xmm1,%xmm1
-pxor  %xmm6,%xmm0
-paddd %xmm0,%xmm4
-movdqa %xmm0,%xmm5
-movdqa %xmm4,%xmm6
-pslld $7,%xmm4
-psrld $25,%xmm6
-pxor  %xmm4,%xmm1
-pxor  %xmm6,%xmm1
-paddd %xmm1,%xmm5
-movdqa %xmm1,%xmm4
-movdqa %xmm5,%xmm6
-pslld $9,%xmm5
-psrld $23,%xmm6
-pxor  %xmm5,%xmm2
-pshufd $0x93,%xmm1,%xmm1
-pxor  %xmm6,%xmm2
-paddd %xmm2,%xmm4
-movdqa %xmm2,%xmm5
-movdqa %xmm4,%xmm6
-pslld $13,%xmm4
-psrld $19,%xmm6
-pxor  %xmm4,%xmm3
-pshufd $0x4e,%xmm2,%xmm2
-pxor  %xmm6,%xmm3
-paddd %xmm3,%xmm5
-movdqa %xmm1,%xmm4
-movdqa %xmm5,%xmm6
-pslld $18,%xmm5
-psrld $14,%xmm6
-pxor  %xmm5,%xmm0
-pshufd $0x39,%xmm3,%xmm3
-pxor  %xmm6,%xmm0
-paddd %xmm0,%xmm4
-movdqa %xmm0,%xmm5
-movdqa %xmm4,%xmm6
-pslld $7,%xmm4
-psrld $25,%xmm6
-pxor  %xmm4,%xmm3
-pxor  %xmm6,%xmm3
-paddd %xmm3,%xmm5
-movdqa %xmm3,%xmm4
-movdqa %xmm5,%xmm6
-pslld $9,%xmm5
-psrld $23,%xmm6
-pxor  %xmm5,%xmm2
-pshufd $0x93,%xmm3,%xmm3
-pxor  %xmm6,%xmm2
-paddd %xmm2,%xmm4
-movdqa %xmm2,%xmm5
-movdqa %xmm4,%xmm6
-pslld $13,%xmm4
-psrld $19,%xmm6
-pxor  %xmm4,%xmm1
-pshufd $0x4e,%xmm2,%xmm2
-pxor  %xmm6,%xmm1
-paddd %xmm1,%xmm5
-movdqa %xmm3,%xmm4
-movdqa %xmm5,%xmm6
-pslld $18,%xmm5
-psrld $14,%xmm6
-pxor  %xmm5,%xmm0
-pshufd $0x39,%xmm1,%xmm1
-pxor  %xmm6,%xmm0
-paddd %xmm0,%xmm4
-movdqa %xmm0,%xmm5
-movdqa %xmm4,%xmm6
-pslld $7,%xmm4
-psrld $25,%xmm6
-pxor  %xmm4,%xmm1
-pxor  %xmm6,%xmm1
-paddd %xmm1,%xmm5
-movdqa %xmm1,%xmm4
-movdqa %xmm5,%xmm6
-pslld $9,%xmm5
-psrld $23,%xmm6
-pxor  %xmm5,%xmm2
-pshufd $0x93,%xmm1,%xmm1
-pxor  %xmm6,%xmm2
-paddd %xmm2,%xmm4
-movdqa %xmm2,%xmm5
-movdqa %xmm4,%xmm6
-pslld $13,%xmm4
-psrld $19,%xmm6
-pxor  %xmm4,%xmm3
-pshufd $0x4e,%xmm2,%xmm2
-pxor  %xmm6,%xmm3
-sub  $4,%rcx
-paddd %xmm3,%xmm5
-movdqa %xmm1,%xmm4
-movdqa %xmm5,%xmm6
-pslld $18,%xmm5
-pxor   %xmm7,%xmm7
-psrld $14,%xmm6
-pxor  %xmm5,%xmm0
-pshufd $0x39,%xmm3,%xmm3
-pxor  %xmm6,%xmm0
-ja ._mainloop2
-paddd 112(%rsp),%xmm0
-paddd 64(%rsp),%xmm1
-paddd 80(%rsp),%xmm2
-paddd 96(%rsp),%xmm3
-movd   %xmm0,%rcx
-movd   %xmm1,%r8
-movd   %xmm2,%r9
-movd   %xmm3,%rax
-pshufd $0x39,%xmm0,%xmm0
-pshufd $0x39,%xmm1,%xmm1
-pshufd $0x39,%xmm2,%xmm2
-pshufd $0x39,%xmm3,%xmm3
-xorl 0(%rsi),%ecx
-xorl 48(%rsi),%r8d
-xorl 32(%rsi),%r9d
-xorl 16(%rsi),%eax
-movl   %ecx,0(%rdi)
-movl   %r8d,48(%rdi)
-movl   %r9d,32(%rdi)
-movl   %eax,16(%rdi)
-movd   %xmm0,%rcx
-movd   %xmm1,%r8
-movd   %xmm2,%r9
-movd   %xmm3,%rax
-pshufd $0x39,%xmm0,%xmm0
-pshufd $0x39,%xmm1,%xmm1
-pshufd $0x39,%xmm2,%xmm2
-pshufd $0x39,%xmm3,%xmm3
-xorl 20(%rsi),%ecx
-xorl 4(%rsi),%r8d
-xorl 52(%rsi),%r9d
-xorl 36(%rsi),%eax
-movl   %ecx,20(%rdi)
-movl   %r8d,4(%rdi)
-movl   %r9d,52(%rdi)
-movl   %eax,36(%rdi)
-movd   %xmm0,%rcx
-movd   %xmm1,%r8
-movd   %xmm2,%r9
-movd   %xmm3,%rax
-pshufd $0x39,%xmm0,%xmm0
-pshufd $0x39,%xmm1,%xmm1
-pshufd $0x39,%xmm2,%xmm2
-pshufd $0x39,%xmm3,%xmm3
-xorl 40(%rsi),%ecx
-xorl 24(%rsi),%r8d
-xorl 8(%rsi),%r9d
-xorl 56(%rsi),%eax
-movl   %ecx,40(%rdi)
-movl   %r8d,24(%rdi)
-movl   %r9d,8(%rdi)
-movl   %eax,56(%rdi)
-movd   %xmm0,%rcx
-movd   %xmm1,%r8
-movd   %xmm2,%r9
-movd   %xmm3,%rax
-xorl 60(%rsi),%ecx
-xorl 44(%rsi),%r8d
-xorl 28(%rsi),%r9d
-xorl 12(%rsi),%eax
-movl   %ecx,60(%rdi)
-movl   %r8d,44(%rdi)
-movl   %r9d,28(%rdi)
-movl   %eax,12(%rdi)
-movq 480(%rsp),%r9
-movq 472(%rsp),%rcx
-add  $1,%rcx
-mov  %rcx,%r8
-shr  $32,%r8
-movl %ecx,80(%rsp)
-movl %r8d,4+96(%rsp)
-movq %rcx,472(%rsp)
-cmp  $64,%r9
-ja ._bytesatleast65
-jae ._bytesatleast64
-mov  %rdi,%rsi
-mov  %rdx,%rdi
-mov  %r9,%rcx
-rep movsb
-
-._bytesatleast64:
-._done:
-movq 416(%rsp),%r11
-movq 424(%rsp),%r12
-movq 432(%rsp),%r13
-movq 440(%rsp),%r14
-movq 448(%rsp),%r15
-movq 456(%rsp),%rbx
-movq 464(%rsp),%rbp
-add %r11,%rsp
-xor %rax,%rax
-mov %rsi,%rdx
-ret
-
-._bytesatleast65:
-sub  $64,%r9
-add  $64,%rdi
-add  $64,%rsi
-jmp ._bytesbetween1and255
-
-#endif
-
-#if defined(__linux__) && defined(__ELF__)
-.section .note.GNU-stack,"",%progbits
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/salsa20/ref/stream_salsa20_ref.c b/libsodium/src/libsodium/crypto_stream/salsa20/ref/stream_salsa20_ref.c
deleted file mode 100644
index 3e4f6eb..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa20/ref/stream_salsa20_ref.c
+++ /dev/null
@@ -1,61 +0,0 @@
-/*
-version 20140420
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa20.h"
-#include "crypto_stream_salsa20.h"
-#include "utils.h"
-
-#ifndef HAVE_AMD64_ASM
-
-typedef unsigned int uint32;
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_salsa20(
-        unsigned char *c,unsigned long long clen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  unsigned char in[16];
-  unsigned char block[64];
-  unsigned char kcopy[32];
-  unsigned int i;
-  unsigned int u;
-
-  if (!clen) return 0;
-
-  for (i = 0;i < 32;++i) kcopy[i] = k[i];
-  for (i = 0;i < 8;++i) in[i] = n[i];
-  for (i = 8;i < 16;++i) in[i] = 0;
-
-  while (clen >= 64) {
-    crypto_core_salsa20(c,in,kcopy,sigma);
-
-    u = 1;
-    for (i = 8;i < 16;++i) {
-      u += (unsigned int) in[i];
-      in[i] = u;
-      u >>= 8;
-    }
-
-    clen -= 64;
-    c += 64;
-  }
-
-  if (clen) {
-    crypto_core_salsa20(block,in,kcopy,sigma);
-    for (i = 0;i < (unsigned int) clen;++i) c[i] = block[i];
-  }
-  sodium_memzero(block, sizeof block);
-  sodium_memzero(kcopy, sizeof kcopy);
-
-  return 0;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/salsa20/ref/xor_salsa20_ref.c b/libsodium/src/libsodium/crypto_stream/salsa20/ref/xor_salsa20_ref.c
deleted file mode 100644
index b998ae4..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa20/ref/xor_salsa20_ref.c
+++ /dev/null
@@ -1,69 +0,0 @@
-/*
-version 20140420
-D. J. Bernstein
-Public domain.
-*/
-
-#include <stdint.h>
-
-#include "crypto_core_salsa20.h"
-#include "crypto_stream_salsa20.h"
-#include "utils.h"
-
-#ifndef HAVE_AMD64_ASM
-
-typedef unsigned int uint32;
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_salsa20_xor_ic(
-        unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n, uint64_t ic,
-  const unsigned char *k
-)
-{
-  unsigned char in[16];
-  unsigned char block[64];
-  unsigned char kcopy[32];
-  unsigned int i;
-  unsigned int u;
-
-  if (!mlen) return 0;
-
-  for (i = 0;i < 32;++i) kcopy[i] = k[i];
-  for (i = 0;i < 8;++i) in[i] = n[i];
-  for (i = 8;i < 16;++i) {
-      in[i] = (unsigned char) (ic & 0xff);
-      ic >>= 8;
-  }
-
-  while (mlen >= 64) {
-    crypto_core_salsa20(block,in,kcopy,sigma);
-    for (i = 0;i < 64;++i) c[i] = m[i] ^ block[i];
-
-    u = 1;
-    for (i = 8;i < 16;++i) {
-      u += (unsigned int) in[i];
-      in[i] = u;
-      u >>= 8;
-    }
-
-    mlen -= 64;
-    c += 64;
-    m += 64;
-  }
-
-  if (mlen) {
-    crypto_core_salsa20(block,in,kcopy,sigma);
-    for (i = 0;i < (unsigned int) mlen;++i) c[i] = m[i] ^ block[i];
-  }
-  sodium_memzero(block, sizeof block);
-  sodium_memzero(kcopy, sizeof kcopy);
-
-  return 0;
-}
-
-#endif
diff --git a/libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c b/libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c
deleted file mode 100644
index 3bc0580..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa20/stream_salsa20_api.c
+++ /dev/null
@@ -1,19 +0,0 @@
-#include "crypto_stream_salsa20.h"
-
-size_t
-crypto_stream_salsa20_keybytes(void) {
-    return crypto_stream_salsa20_KEYBYTES;
-}
-
-size_t
-crypto_stream_salsa20_noncebytes(void) {
-    return crypto_stream_salsa20_NONCEBYTES;
-}
-
-int
-crypto_stream_salsa20_xor(unsigned char *c, const unsigned char *m,
-                          unsigned long long mlen, const unsigned char *n,
-                          const unsigned char *k)
-{
-    return crypto_stream_salsa20_xor_ic(c, m, mlen, n, 0U, k);
-}
diff --git a/libsodium/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012.c b/libsodium/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012.c
deleted file mode 100644
index 5008ab6..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa2012/ref/stream_salsa2012.c
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
-version 20140420
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa2012.h"
-#include "crypto_stream_salsa2012.h"
-#include "utils.h"
-
-typedef unsigned int uint32;
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_salsa2012(
-        unsigned char *c,unsigned long long clen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  unsigned char in[16];
-  unsigned char block[64];
-  unsigned char kcopy[32];
-  unsigned int i;
-  unsigned int u;
-
-  if (!clen) return 0;
-
-  for (i = 0;i < 32;++i) kcopy[i] = k[i];
-  for (i = 0;i < 8;++i) in[i] = n[i];
-  for (i = 8;i < 16;++i) in[i] = 0;
-
-  while (clen >= 64) {
-    crypto_core_salsa2012(c,in,kcopy,sigma);
-
-    u = 1;
-    for (i = 8;i < 16;++i) {
-      u += (unsigned int) in[i];
-      in[i] = u;
-      u >>= 8;
-    }
-
-    clen -= 64;
-    c += 64;
-  }
-
-  if (clen) {
-    crypto_core_salsa2012(block,in,kcopy,sigma);
-    for (i = 0;i < (unsigned int) clen;++i) c[i] = block[i];
-  }
-  sodium_memzero(block, sizeof block);
-  sodium_memzero(kcopy, sizeof kcopy);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/salsa2012/ref/xor_salsa2012.c b/libsodium/src/libsodium/crypto_stream/salsa2012/ref/xor_salsa2012.c
deleted file mode 100644
index ab471b3..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa2012/ref/xor_salsa2012.c
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
-version 20140420
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa2012.h"
-#include "crypto_stream_salsa2012.h"
-#include "utils.h"
-
-typedef unsigned int uint32;
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_salsa2012_xor(
-        unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  unsigned char in[16];
-  unsigned char block[64];
-  unsigned char kcopy[32];
-  unsigned int i;
-  unsigned int u;
-
-  if (!mlen) return 0;
-
-  for (i = 0;i < 32;++i) kcopy[i] = k[i];
-  for (i = 0;i < 8;++i) in[i] = n[i];
-  for (i = 8;i < 16;++i) in[i] = 0;
-
-  while (mlen >= 64) {
-    crypto_core_salsa2012(block,in,kcopy,sigma);
-    for (i = 0;i < 64;++i) c[i] = m[i] ^ block[i];
-
-    u = 1;
-    for (i = 8;i < 16;++i) {
-      u += (unsigned int) in[i];
-      in[i] = u;
-      u >>= 8;
-    }
-
-    mlen -= 64;
-    c += 64;
-    m += 64;
-  }
-
-  if (mlen) {
-    crypto_core_salsa2012(block,in,kcopy,sigma);
-    for (i = 0;i < (unsigned int) mlen;++i) c[i] = m[i] ^ block[i];
-  }
-  sodium_memzero(block, sizeof block);
-  sodium_memzero(kcopy, sizeof kcopy);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012_api.c b/libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012_api.c
deleted file mode 100644
index 3b5685f..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa2012/stream_salsa2012_api.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "crypto_stream_salsa2012.h"
-
-size_t
-crypto_stream_salsa2012_keybytes(void) {
-    return crypto_stream_salsa2012_KEYBYTES;
-}
-
-size_t
-crypto_stream_salsa2012_noncebytes(void) {
-    return crypto_stream_salsa2012_NONCEBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208.c b/libsodium/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208.c
deleted file mode 100644
index 7869b84..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa208/ref/stream_salsa208.c
+++ /dev/null
@@ -1,57 +0,0 @@
-/*
-version 20140420
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa208.h"
-#include "crypto_stream_salsa208.h"
-#include "utils.h"
-
-typedef unsigned int uint32;
-
-static const unsigned char sigma[16] = {
-        'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_salsa208(
-        unsigned char *c,unsigned long long clen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  unsigned char in[16];
-  unsigned char block[64];
-  unsigned char kcopy[32];
-  unsigned int i;
-  unsigned int u;
-
-  if (!clen) return 0;
-
-  for (i = 0;i < 32;++i) kcopy[i] = k[i];
-  for (i = 0;i < 8;++i) in[i] = n[i];
-  for (i = 8;i < 16;++i) in[i] = 0;
-
-  while (clen >= 64) {
-    crypto_core_salsa208(c,in,kcopy,sigma);
-
-    u = 1;
-    for (i = 8;i < 16;++i) {
-      u += (unsigned int) in[i];
-      in[i] = u;
-      u >>= 8;
-    }
-
-    clen -= 64;
-    c += 64;
-  }
-
-  if (clen) {
-    crypto_core_salsa208(block,in,kcopy,sigma);
-    for (i = 0;i < (unsigned int) clen;++i) c[i] = block[i];
-  }
-  sodium_memzero(block, sizeof block);
-  sodium_memzero(kcopy, sizeof kcopy);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/salsa208/ref/xor_salsa208.c b/libsodium/src/libsodium/crypto_stream/salsa208/ref/xor_salsa208.c
deleted file mode 100644
index 706970f..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa208/ref/xor_salsa208.c
+++ /dev/null
@@ -1,60 +0,0 @@
-/*
-version 20140420
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_salsa208.h"
-#include "crypto_stream_salsa208.h"
-#include "utils.h"
-
-typedef unsigned int uint32;
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_salsa208_xor(
-        unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  unsigned char in[16];
-  unsigned char block[64];
-  unsigned char kcopy[32];
-  unsigned int i;
-  unsigned int u;
-
-  if (!mlen) return 0;
-
-  for (i = 0;i < 32;++i) kcopy[i] = k[i];
-  for (i = 0;i < 8;++i) in[i] = n[i];
-  for (i = 8;i < 16;++i) in[i] = 0;
-
-  while (mlen >= 64) {
-    crypto_core_salsa208(block,in,kcopy,sigma);
-    for (i = 0;i < 64;++i) c[i] = m[i] ^ block[i];
-
-    u = 1;
-    for (i = 8;i < 16;++i) {
-      u += (unsigned int) in[i];
-      in[i] = u;
-      u >>= 8;
-    }
-
-    mlen -= 64;
-    c += 64;
-    m += 64;
-  }
-
-  if (mlen) {
-    crypto_core_salsa208(block,in,kcopy,sigma);
-    for (i = 0;i < (unsigned int) mlen;++i) c[i] = m[i] ^ block[i];
-  }
-  sodium_memzero(block, sizeof block);
-  sodium_memzero(kcopy, sizeof kcopy);
-
-  return 0;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208_api.c b/libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208_api.c
deleted file mode 100644
index 640a8b2..0000000
--- a/libsodium/src/libsodium/crypto_stream/salsa208/stream_salsa208_api.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "crypto_stream_salsa208.h"
-
-size_t
-crypto_stream_salsa208_keybytes(void) {
-    return crypto_stream_salsa208_KEYBYTES;
-}
-
-size_t
-crypto_stream_salsa208_noncebytes(void) {
-    return crypto_stream_salsa208_NONCEBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/stream_xsalsa20.c b/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/stream_xsalsa20.c
deleted file mode 100644
index c6614cb..0000000
--- a/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/stream_xsalsa20.c
+++ /dev/null
@@ -1,28 +0,0 @@
-/*
-version 20080914
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_hsalsa20.h"
-#include "crypto_stream_salsa20.h"
-#include "crypto_stream_xsalsa20.h"
-#include "utils.h"
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_xsalsa20(
-        unsigned char *c,unsigned long long clen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  unsigned char subkey[32];
-  int ret;
-  crypto_core_hsalsa20(subkey,n,k,sigma);
-  ret = crypto_stream_salsa20(c,clen,n + 16,subkey);
-  sodium_memzero(subkey, sizeof subkey);
-  return ret;
-}
diff --git a/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/xor_xsalsa20.c b/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/xor_xsalsa20.c
deleted file mode 100644
index b38c651..0000000
--- a/libsodium/src/libsodium/crypto_stream/xsalsa20/ref/xor_xsalsa20.c
+++ /dev/null
@@ -1,39 +0,0 @@
-/*
-version 20080913
-D. J. Bernstein
-Public domain.
-*/
-
-#include "crypto_core_hsalsa20.h"
-#include "crypto_stream_salsa20.h"
-#include "crypto_stream_xsalsa20.h"
-#include "utils.h"
-
-static const unsigned char sigma[16] = {
-    'e', 'x', 'p', 'a', 'n', 'd', ' ', '3', '2', '-', 'b', 'y', 't', 'e', ' ', 'k'
-};
-
-int crypto_stream_xsalsa20_xor_ic(
-        unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n,uint64_t ic,
-  const unsigned char *k
-)
-{
-  unsigned char subkey[32];
-  int ret;
-  crypto_core_hsalsa20(subkey,n,k,sigma);
-  ret = crypto_stream_salsa20_xor_ic(c,m,mlen,n + 16,ic,subkey);
-  sodium_memzero(subkey, sizeof subkey);
-  return ret;
-}
-
-int crypto_stream_xsalsa20_xor(
-        unsigned char *c,
-  const unsigned char *m,unsigned long long mlen,
-  const unsigned char *n,
-  const unsigned char *k
-)
-{
-  return crypto_stream_xsalsa20_xor_ic(c, m, mlen, n, 0ULL, k);
-}
diff --git a/libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20_api.c b/libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20_api.c
deleted file mode 100644
index 256084e..0000000
--- a/libsodium/src/libsodium/crypto_stream/xsalsa20/stream_xsalsa20_api.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#include "crypto_stream_xsalsa20.h"
-
-size_t
-crypto_stream_xsalsa20_keybytes(void) {
-    return crypto_stream_xsalsa20_KEYBYTES;
-}
-
-size_t
-crypto_stream_xsalsa20_noncebytes(void) {
-    return crypto_stream_xsalsa20_NONCEBYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_verify/16/ref/verify_16.c b/libsodium/src/libsodium/crypto_verify/16/ref/verify_16.c
deleted file mode 100644
index 55080f0..0000000
--- a/libsodium/src/libsodium/crypto_verify/16/ref/verify_16.c
+++ /dev/null
@@ -1,17 +0,0 @@
-
-#include <stddef.h>
-#include <stdint.h>
-
-#include "crypto_verify_16.h"
-
-int
-crypto_verify_16(const unsigned char *x, const unsigned char *y)
-{
-    uint_fast16_t d = 0U;
-    int           i;
-
-    for (i = 0; i < 16; i++) {
-        d |= x[i] ^ y[i];
-    }
-    return (1 & ((d - 1) >> 8)) - 1;
-}
diff --git a/libsodium/src/libsodium/crypto_verify/16/verify_16_api.c b/libsodium/src/libsodium/crypto_verify/16/verify_16_api.c
deleted file mode 100644
index 757f9b6..0000000
--- a/libsodium/src/libsodium/crypto_verify/16/verify_16_api.c
+++ /dev/null
@@ -1,6 +0,0 @@
-#include "crypto_verify_16.h"
-
-size_t
-crypto_verify_16_bytes(void) {
-    return crypto_verify_16_BYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_verify/32/ref/verify_32.c b/libsodium/src/libsodium/crypto_verify/32/ref/verify_32.c
deleted file mode 100644
index 2ad2560..0000000
--- a/libsodium/src/libsodium/crypto_verify/32/ref/verify_32.c
+++ /dev/null
@@ -1,17 +0,0 @@
-
-#include <stddef.h>
-#include <stdint.h>
-
-#include "crypto_verify_32.h"
-
-int
-crypto_verify_32(const unsigned char *x, const unsigned char *y)
-{
-    uint_fast16_t d = 0U;
-    int           i;
-
-    for (i = 0; i < 32; i++) {
-        d |= x[i] ^ y[i];
-    }
-    return (1 & ((d - 1) >> 8)) - 1;
-}
diff --git a/libsodium/src/libsodium/crypto_verify/32/verify_32_api.c b/libsodium/src/libsodium/crypto_verify/32/verify_32_api.c
deleted file mode 100644
index 6241c4d..0000000
--- a/libsodium/src/libsodium/crypto_verify/32/verify_32_api.c
+++ /dev/null
@@ -1,6 +0,0 @@
-#include "crypto_verify_32.h"
-
-size_t
-crypto_verify_32_bytes(void) {
-    return crypto_verify_32_BYTES;
-}
diff --git a/libsodium/src/libsodium/crypto_verify/64/ref/verify_64.c b/libsodium/src/libsodium/crypto_verify/64/ref/verify_64.c
deleted file mode 100644
index b6d32cf..0000000
--- a/libsodium/src/libsodium/crypto_verify/64/ref/verify_64.c
+++ /dev/null
@@ -1,17 +0,0 @@
-
-#include <stddef.h>
-#include <stdint.h>
-
-#include "crypto_verify_64.h"
-
-int
-crypto_verify_64(const unsigned char *x, const unsigned char *y)
-{
-    uint_fast16_t d = 0U;
-    int           i;
-
-    for (i = 0; i < 64; i++) {
-        d |= x[i] ^ y[i];
-    }
-    return (1 & ((d - 1) >> 8)) - 1;
-}
diff --git a/libsodium/src/libsodium/crypto_verify/64/verify_64_api.c b/libsodium/src/libsodium/crypto_verify/64/verify_64_api.c
deleted file mode 100644
index ec3e4d4..0000000
--- a/libsodium/src/libsodium/crypto_verify/64/verify_64_api.c
+++ /dev/null
@@ -1,6 +0,0 @@
-#include "crypto_verify_64.h"
-
-size_t
-crypto_verify_64_bytes(void) {
-    return crypto_verify_64_BYTES;
-}
diff --git a/libsodium/src/libsodium/include/Makefile.am b/libsodium/src/libsodium/include/Makefile.am
index 11b722b..7476bd9 100644
--- a/libsodium/src/libsodium/include/Makefile.am
+++ b/libsodium/src/libsodium/include/Makefile.am
@@ -4,12 +4,17 @@ SODIUM_EXPORT = \
 	sodium/core.h \
 	sodium/crypto_aead_aes256gcm.h \
 	sodium/crypto_aead_chacha20poly1305.h \
+	sodium/crypto_aead_xchacha20poly1305.h \
 	sodium/crypto_auth.h \
 	sodium/crypto_auth_hmacsha256.h \
 	sodium/crypto_auth_hmacsha512.h \
 	sodium/crypto_auth_hmacsha512256.h \
 	sodium/crypto_box.h \
+	sodium/crypto_box_curve25519xchacha20poly1305.h \
 	sodium/crypto_box_curve25519xsalsa20poly1305.h \
+	sodium/crypto_core_ed25519.h \
+	sodium/crypto_core_ristretto255.h \
+	sodium/crypto_core_hchacha20.h \
 	sodium/crypto_core_hsalsa20.h \
 	sodium/crypto_core_salsa20.h \
 	sodium/crypto_core_salsa2012.h \
@@ -19,48 +24,49 @@ SODIUM_EXPORT = \
 	sodium/crypto_hash.h \
 	sodium/crypto_hash_sha256.h \
 	sodium/crypto_hash_sha512.h \
+	sodium/crypto_kdf.h \
+	sodium/crypto_kdf_blake2b.h \
+	sodium/crypto_kx.h \
 	sodium/crypto_onetimeauth.h \
 	sodium/crypto_onetimeauth_poly1305.h \
+	sodium/crypto_pwhash.h \
+	sodium/crypto_pwhash_argon2i.h \
+	sodium/crypto_pwhash_argon2id.h \
 	sodium/crypto_pwhash_scryptsalsa208sha256.h \
 	sodium/crypto_scalarmult.h \
 	sodium/crypto_scalarmult_curve25519.h \
+	sodium/crypto_scalarmult_ed25519.h \
+	sodium/crypto_scalarmult_ristretto255.h \
 	sodium/crypto_secretbox.h \
+	sodium/crypto_secretbox_xchacha20poly1305.h \
 	sodium/crypto_secretbox_xsalsa20poly1305.h \
+	sodium/crypto_secretstream_xchacha20poly1305.h \
 	sodium/crypto_shorthash.h \
 	sodium/crypto_shorthash_siphash24.h \
 	sodium/crypto_sign.h \
 	sodium/crypto_sign_ed25519.h \
 	sodium/crypto_sign_edwards25519sha512batch.h \
 	sodium/crypto_stream.h \
-	sodium/crypto_stream_aes128ctr.h \
 	sodium/crypto_stream_chacha20.h \
 	sodium/crypto_stream_salsa20.h \
 	sodium/crypto_stream_salsa2012.h \
 	sodium/crypto_stream_salsa208.h \
+	sodium/crypto_stream_xchacha20.h \
 	sodium/crypto_stream_xsalsa20.h \
-	sodium/crypto_int32.h \
-	sodium/crypto_int64.h \
-	sodium/crypto_uint16.h \
-	sodium/crypto_uint32.h \
-	sodium/crypto_uint64.h \
-	sodium/crypto_uint8.h \
 	sodium/crypto_verify_16.h \
 	sodium/crypto_verify_32.h \
 	sodium/crypto_verify_64.h \
 	sodium/export.h \
 	sodium/randombytes.h \
-	sodium/randombytes_salsa20_random.h \
+	sodium/randombytes_internal_random.h \
 	sodium/randombytes_sysrandom.h \
 	sodium/runtime.h \
 	sodium/utils.h
 
-if NATIVECLIENT
-SODIUM_EXPORT += \
-	sodium/randombytes_nativeclient.h
-endif
-
 EXTRA_SRC = $(SODIUM_EXPORT) \
 	sodium/version.h.in
 
-noinst_HEADERS = $(SODIUM_EXPORT) \
+nobase_include_HEADERS = $(SODIUM_EXPORT)
+
+nobase_nodist_include_HEADERS = \
 	sodium/version.h
diff --git a/libsodium/src/libsodium/include/Makefile.in b/libsodium/src/libsodium/include/Makefile.in
index 46fb6dd..f74c455 100644
--- a/libsodium/src/libsodium/include/Makefile.in
+++ b/libsodium/src/libsodium/include/Makefile.in
@@ -1,7 +1,7 @@
-# Makefile.in generated by automake 1.14.1 from Makefile.am.
+# Makefile.in generated by automake 1.16.1 from Makefile.am.
 # @configure_input@
 
-# Copyright (C) 1994-2013 Free Software Foundation, Inc.
+# Copyright (C) 1994-2018 Free Software Foundation, Inc.
 
 # This Makefile.in is free software; the Free Software Foundation
 # gives unlimited permission to copy and/or distribute it,
@@ -15,7 +15,17 @@
 @SET_MAKE@
 
 VPATH = @srcdir@
-am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
+am__is_gnu_make = { \
+  if test -z '$(MAKELEVEL)'; then \
+    false; \
+  elif test -n '$(MAKE_HOST)'; then \
+    true; \
+  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
+    true; \
+  else \
+    false; \
+  fi; \
+}
 am__make_running_with_option = \
   case $${target_option-} in \
       ?) ;; \
@@ -78,22 +88,23 @@ PRE_UNINSTALL = :
 POST_UNINSTALL = :
 build_triplet = @build@
 host_triplet = @host@
-@NATIVECLIENT_TRUE@am__append_1 = \
-@NATIVECLIENT_TRUE@	sodium/randombytes_nativeclient.h
-
 subdir = src/libsodium/include
-DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
-	$(am__noinst_HEADERS_DIST)
 ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
-am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
+am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_catchable_abrt.m4 \
+	$(top_srcdir)/m4/ax_check_catchable_segv.m4 \
+	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
 	$(top_srcdir)/m4/ax_check_define.m4 \
 	$(top_srcdir)/m4/ax_check_link_flag.m4 \
+	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/ax_tls.m4 \
+	$(top_srcdir)/m4/ax_valgrind_check.m4 \
 	$(top_srcdir)/m4/ld-output-def.m4 $(top_srcdir)/m4/libtool.m4 \
 	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
 	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
 	$(top_srcdir)/configure.ac
 am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
 	$(ACLOCAL_M4)
+DIST_COMMON = $(srcdir)/Makefile.am $(nobase_include_HEADERS) \
+	$(am__DIST_COMMON)
 mkinstalldirs = $(install_sh) -d
 CONFIG_CLEAN_FILES =
 CONFIG_CLEAN_VPATH_FILES =
@@ -116,42 +127,35 @@ am__can_run_installinfo = \
     n|no|NO) false;; \
     *) (install-info --version) >/dev/null 2>&1;; \
   esac
-am__noinst_HEADERS_DIST = sodium.h sodium/core.h \
-	sodium/crypto_aead_aes256gcm.h \
-	sodium/crypto_aead_chacha20poly1305.h sodium/crypto_auth.h \
-	sodium/crypto_auth_hmacsha256.h \
-	sodium/crypto_auth_hmacsha512.h \
-	sodium/crypto_auth_hmacsha512256.h sodium/crypto_box.h \
-	sodium/crypto_box_curve25519xsalsa20poly1305.h \
-	sodium/crypto_core_hsalsa20.h sodium/crypto_core_salsa20.h \
-	sodium/crypto_core_salsa2012.h sodium/crypto_core_salsa208.h \
-	sodium/crypto_generichash.h \
-	sodium/crypto_generichash_blake2b.h sodium/crypto_hash.h \
-	sodium/crypto_hash_sha256.h sodium/crypto_hash_sha512.h \
-	sodium/crypto_onetimeauth.h \
-	sodium/crypto_onetimeauth_poly1305.h \
-	sodium/crypto_pwhash_scryptsalsa208sha256.h \
-	sodium/crypto_scalarmult.h \
-	sodium/crypto_scalarmult_curve25519.h \
-	sodium/crypto_secretbox.h \
-	sodium/crypto_secretbox_xsalsa20poly1305.h \
-	sodium/crypto_shorthash.h sodium/crypto_shorthash_siphash24.h \
-	sodium/crypto_sign.h sodium/crypto_sign_ed25519.h \
-	sodium/crypto_sign_edwards25519sha512batch.h \
-	sodium/crypto_stream.h sodium/crypto_stream_aes128ctr.h \
-	sodium/crypto_stream_chacha20.h sodium/crypto_stream_salsa20.h \
-	sodium/crypto_stream_salsa2012.h \
-	sodium/crypto_stream_salsa208.h \
-	sodium/crypto_stream_xsalsa20.h sodium/crypto_int32.h \
-	sodium/crypto_int64.h sodium/crypto_uint16.h \
-	sodium/crypto_uint32.h sodium/crypto_uint64.h \
-	sodium/crypto_uint8.h sodium/crypto_verify_16.h \
-	sodium/crypto_verify_32.h sodium/crypto_verify_64.h \
-	sodium/export.h sodium/randombytes.h \
-	sodium/randombytes_salsa20_random.h \
-	sodium/randombytes_sysrandom.h sodium/runtime.h sodium/utils.h \
-	sodium/randombytes_nativeclient.h sodium/version.h
-HEADERS = $(noinst_HEADERS)
+am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
+am__vpath_adj = case $$p in \
+    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
+    *) f=$$p;; \
+  esac;
+am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
+am__install_max = 40
+am__nobase_strip_setup = \
+  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
+am__nobase_strip = \
+  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
+am__nobase_list = $(am__nobase_strip_setup); \
+  for p in $$list; do echo "$$p $$p"; done | \
+  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
+  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
+    if (++n[$$2] == $(am__install_max)) \
+      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
+    END { for (dir in files) print dir, files[dir] }'
+am__base_list = \
+  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
+  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
+am__uninstall_files_from_dir = { \
+  test -z "$$files" \
+    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
+    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
+         $(am__cd) "$$dir" && rm -f $$files; }; \
+  }
+am__installdirs = "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"
+HEADERS = $(nobase_include_HEADERS) $(nobase_nodist_include_HEADERS)
 am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
 # Read a list of newline-separated strings from the standard input,
 # and print each of them once, without duplicates.  Input order is
@@ -171,8 +175,10 @@ am__define_uniq_tagged_files = \
   done | $(am__uniquify_input)`
 ETAGS = etags
 CTAGS = ctags
+am__DIST_COMMON = $(srcdir)/Makefile.in
 DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
 ACLOCAL = @ACLOCAL@
+ALLOCA = @ALLOCA@
 AMTAR = @AMTAR@
 AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
 AR = @AR@
@@ -188,8 +194,12 @@ CCASFLAGS = @CCASFLAGS@
 CCDEPMODE = @CCDEPMODE@
 CFLAGS = @CFLAGS@
 CFLAGS_AESNI = @CFLAGS_AESNI@
+CFLAGS_AVX = @CFLAGS_AVX@
+CFLAGS_AVX2 = @CFLAGS_AVX2@
+CFLAGS_AVX512F = @CFLAGS_AVX512F@
 CFLAGS_MMX = @CFLAGS_MMX@
 CFLAGS_PCLMUL = @CFLAGS_PCLMUL@
+CFLAGS_RDRAND = @CFLAGS_RDRAND@
 CFLAGS_SSE2 = @CFLAGS_SSE2@
 CFLAGS_SSE3 = @CFLAGS_SSE3@
 CFLAGS_SSE41 = @CFLAGS_SSE41@
@@ -208,6 +218,10 @@ ECHO_C = @ECHO_C@
 ECHO_N = @ECHO_N@
 ECHO_T = @ECHO_T@
 EGREP = @EGREP@
+ENABLE_VALGRIND_drd = @ENABLE_VALGRIND_drd@
+ENABLE_VALGRIND_helgrind = @ENABLE_VALGRIND_helgrind@
+ENABLE_VALGRIND_memcheck = @ENABLE_VALGRIND_memcheck@
+ENABLE_VALGRIND_sgcheck = @ENABLE_VALGRIND_sgcheck@
 EXEEXT = @EXEEXT@
 FGREP = @FGREP@
 GREP = @GREP@
@@ -220,7 +234,6 @@ INSTALL_DATA = @INSTALL_DATA@
 INSTALL_PROGRAM = @INSTALL_PROGRAM@
 INSTALL_SCRIPT = @INSTALL_SCRIPT@
 INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
-ISODATE = @ISODATE@
 LD = @LD@
 LDFLAGS = @LDFLAGS@
 LIBOBJS = @LIBOBJS@
@@ -231,6 +244,7 @@ LIBTOOL_EXTRA_FLAGS = @LIBTOOL_EXTRA_FLAGS@
 LIPO = @LIPO@
 LN_S = @LN_S@
 LTLIBOBJS = @LTLIBOBJS@
+LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
 MAINT = @MAINT@
 MAKEINFO = @MAKEINFO@
 MANIFEST_TOOL = @MANIFEST_TOOL@
@@ -249,16 +263,23 @@ PACKAGE_TARNAME = @PACKAGE_TARNAME@
 PACKAGE_URL = @PACKAGE_URL@
 PACKAGE_VERSION = @PACKAGE_VERSION@
 PATH_SEPARATOR = @PATH_SEPARATOR@
+PKGCONFIG_LIBS_PRIVATE = @PKGCONFIG_LIBS_PRIVATE@
+PTHREAD_CC = @PTHREAD_CC@
+PTHREAD_CFLAGS = @PTHREAD_CFLAGS@
+PTHREAD_LIBS = @PTHREAD_LIBS@
 RANLIB = @RANLIB@
 SAFECODE_HOME = @SAFECODE_HOME@
 SED = @SED@
 SET_MAKE = @SET_MAKE@
 SHELL = @SHELL@
+SODIUM_LIBRARY_MINIMAL_DEF = @SODIUM_LIBRARY_MINIMAL_DEF@
 SODIUM_LIBRARY_VERSION = @SODIUM_LIBRARY_VERSION@
 SODIUM_LIBRARY_VERSION_MAJOR = @SODIUM_LIBRARY_VERSION_MAJOR@
 SODIUM_LIBRARY_VERSION_MINOR = @SODIUM_LIBRARY_VERSION_MINOR@
 STRIP = @STRIP@
 TEST_LDFLAGS = @TEST_LDFLAGS@
+VALGRIND = @VALGRIND@
+VALGRIND_ENABLED = @VALGRIND_ENABLED@
 VERSION = @VERSION@
 abs_builddir = @abs_builddir@
 abs_srcdir = @abs_srcdir@
@@ -272,6 +293,7 @@ am__leading_dot = @am__leading_dot@
 am__quote = @am__quote@
 am__tar = @am__tar@
 am__untar = @am__untar@
+ax_pthread_config = @ax_pthread_config@
 bindir = @bindir@
 build = @build@
 build_alias = @build_alias@
@@ -312,44 +334,77 @@ target_alias = @target_alias@
 top_build_prefix = @top_build_prefix@
 top_builddir = @top_builddir@
 top_srcdir = @top_srcdir@
-SODIUM_EXPORT = sodium.h sodium/core.h sodium/crypto_aead_aes256gcm.h \
-	sodium/crypto_aead_chacha20poly1305.h sodium/crypto_auth.h \
+valgrind_enabled_tools = @valgrind_enabled_tools@
+valgrind_tools = @valgrind_tools@
+SODIUM_EXPORT = \
+	sodium.h \
+	sodium/core.h \
+	sodium/crypto_aead_aes256gcm.h \
+	sodium/crypto_aead_chacha20poly1305.h \
+	sodium/crypto_aead_xchacha20poly1305.h \
+	sodium/crypto_auth.h \
 	sodium/crypto_auth_hmacsha256.h \
 	sodium/crypto_auth_hmacsha512.h \
-	sodium/crypto_auth_hmacsha512256.h sodium/crypto_box.h \
+	sodium/crypto_auth_hmacsha512256.h \
+	sodium/crypto_box.h \
+	sodium/crypto_box_curve25519xchacha20poly1305.h \
 	sodium/crypto_box_curve25519xsalsa20poly1305.h \
-	sodium/crypto_core_hsalsa20.h sodium/crypto_core_salsa20.h \
-	sodium/crypto_core_salsa2012.h sodium/crypto_core_salsa208.h \
+	sodium/crypto_core_ed25519.h \
+	sodium/crypto_core_ristretto255.h \
+	sodium/crypto_core_hchacha20.h \
+	sodium/crypto_core_hsalsa20.h \
+	sodium/crypto_core_salsa20.h \
+	sodium/crypto_core_salsa2012.h \
+	sodium/crypto_core_salsa208.h \
 	sodium/crypto_generichash.h \
-	sodium/crypto_generichash_blake2b.h sodium/crypto_hash.h \
-	sodium/crypto_hash_sha256.h sodium/crypto_hash_sha512.h \
+	sodium/crypto_generichash_blake2b.h \
+	sodium/crypto_hash.h \
+	sodium/crypto_hash_sha256.h \
+	sodium/crypto_hash_sha512.h \
+	sodium/crypto_kdf.h \
+	sodium/crypto_kdf_blake2b.h \
+	sodium/crypto_kx.h \
 	sodium/crypto_onetimeauth.h \
 	sodium/crypto_onetimeauth_poly1305.h \
+	sodium/crypto_pwhash.h \
+	sodium/crypto_pwhash_argon2i.h \
+	sodium/crypto_pwhash_argon2id.h \
 	sodium/crypto_pwhash_scryptsalsa208sha256.h \
 	sodium/crypto_scalarmult.h \
 	sodium/crypto_scalarmult_curve25519.h \
+	sodium/crypto_scalarmult_ed25519.h \
+	sodium/crypto_scalarmult_ristretto255.h \
 	sodium/crypto_secretbox.h \
+	sodium/crypto_secretbox_xchacha20poly1305.h \
 	sodium/crypto_secretbox_xsalsa20poly1305.h \
-	sodium/crypto_shorthash.h sodium/crypto_shorthash_siphash24.h \
-	sodium/crypto_sign.h sodium/crypto_sign_ed25519.h \
+	sodium/crypto_secretstream_xchacha20poly1305.h \
+	sodium/crypto_shorthash.h \
+	sodium/crypto_shorthash_siphash24.h \
+	sodium/crypto_sign.h \
+	sodium/crypto_sign_ed25519.h \
 	sodium/crypto_sign_edwards25519sha512batch.h \
-	sodium/crypto_stream.h sodium/crypto_stream_aes128ctr.h \
-	sodium/crypto_stream_chacha20.h sodium/crypto_stream_salsa20.h \
+	sodium/crypto_stream.h \
+	sodium/crypto_stream_chacha20.h \
+	sodium/crypto_stream_salsa20.h \
 	sodium/crypto_stream_salsa2012.h \
 	sodium/crypto_stream_salsa208.h \
-	sodium/crypto_stream_xsalsa20.h sodium/crypto_int32.h \
-	sodium/crypto_int64.h sodium/crypto_uint16.h \
-	sodium/crypto_uint32.h sodium/crypto_uint64.h \
-	sodium/crypto_uint8.h sodium/crypto_verify_16.h \
-	sodium/crypto_verify_32.h sodium/crypto_verify_64.h \
-	sodium/export.h sodium/randombytes.h \
-	sodium/randombytes_salsa20_random.h \
-	sodium/randombytes_sysrandom.h sodium/runtime.h sodium/utils.h \
-	$(am__append_1)
+	sodium/crypto_stream_xchacha20.h \
+	sodium/crypto_stream_xsalsa20.h \
+	sodium/crypto_verify_16.h \
+	sodium/crypto_verify_32.h \
+	sodium/crypto_verify_64.h \
+	sodium/export.h \
+	sodium/randombytes.h \
+	sodium/randombytes_internal_random.h \
+	sodium/randombytes_sysrandom.h \
+	sodium/runtime.h \
+	sodium/utils.h
+
 EXTRA_SRC = $(SODIUM_EXPORT) \
 	sodium/version.h.in
 
-noinst_HEADERS = $(SODIUM_EXPORT) \
+nobase_include_HEADERS = $(SODIUM_EXPORT)
+nobase_nodist_include_HEADERS = \
 	sodium/version.h
 
 all: all-am
@@ -367,14 +422,13 @@ $(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am  $(am__confi
 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/libsodium/include/Makefile'; \
 	$(am__cd) $(top_srcdir) && \
 	  $(AUTOMAKE) --foreign src/libsodium/include/Makefile
-.PRECIOUS: Makefile
 Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
 	@case '$?' in \
 	  *config.status*) \
 	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
 	  *) \
-	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
-	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
+	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
+	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
 	esac;
 
 $(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
@@ -391,6 +445,54 @@ mostlyclean-libtool:
 
 clean-libtool:
 	-rm -rf .libs _libs
+install-nobase_includeHEADERS: $(nobase_include_HEADERS)
+	@$(NORMAL_INSTALL)
+	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
+	if test -n "$$list"; then \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
+	fi; \
+	$(am__nobase_list) | while read dir files; do \
+	  xfiles=; for file in $$files; do \
+	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
+	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
+	  test -z "$$xfiles" || { \
+	    test "x$$dir" = x. || { \
+	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
+	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
+	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
+	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
+	done
+
+uninstall-nobase_includeHEADERS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(nobase_include_HEADERS)'; test -n "$(includedir)" || list=; \
+	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
+	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
+install-nobase_nodist_includeHEADERS: $(nobase_nodist_include_HEADERS)
+	@$(NORMAL_INSTALL)
+	@list='$(nobase_nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
+	if test -n "$$list"; then \
+	  echo " $(MKDIR_P) '$(DESTDIR)$(includedir)'"; \
+	  $(MKDIR_P) "$(DESTDIR)$(includedir)" || exit 1; \
+	fi; \
+	$(am__nobase_list) | while read dir files; do \
+	  xfiles=; for file in $$files; do \
+	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
+	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
+	  test -z "$$xfiles" || { \
+	    test "x$$dir" = x. || { \
+	      echo " $(MKDIR_P) '$(DESTDIR)$(includedir)/$$dir'"; \
+	      $(MKDIR_P) "$(DESTDIR)$(includedir)/$$dir"; }; \
+	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(includedir)/$$dir'"; \
+	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(includedir)/$$dir" || exit $$?; }; \
+	done
+
+uninstall-nobase_nodist_includeHEADERS:
+	@$(NORMAL_UNINSTALL)
+	@list='$(nobase_nodist_include_HEADERS)'; test -n "$(includedir)" || list=; \
+	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
+	dir='$(DESTDIR)$(includedir)'; $(am__uninstall_files_from_dir)
 
 ID: $(am__tagged_files)
 	$(am__define_uniq_tagged_files); mkid -fID $$unique
@@ -444,7 +546,10 @@ cscopelist-am: $(am__tagged_files)
 distclean-tags:
 	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
 
-distdir: $(DISTFILES)
+distdir: $(BUILT_SOURCES)
+	$(MAKE) $(AM_MAKEFLAGS) distdir-am
+
+distdir-am: $(DISTFILES)
 	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
 	list='$(DISTFILES)'; \
@@ -478,6 +583,9 @@ check-am: all-am
 check: check-am
 all-am: Makefile $(HEADERS)
 installdirs:
+	for dir in "$(DESTDIR)$(includedir)" "$(DESTDIR)$(includedir)"; do \
+	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
+	done
 install: install-am
 install-exec: install-exec-am
 install-data: install-data-am
@@ -528,7 +636,8 @@ info: info-am
 
 info-am:
 
-install-data-am:
+install-data-am: install-nobase_includeHEADERS \
+	install-nobase_nodist_includeHEADERS
 
 install-dvi: install-dvi-am
 
@@ -572,7 +681,8 @@ ps: ps-am
 
 ps-am:
 
-uninstall-am:
+uninstall-am: uninstall-nobase_includeHEADERS \
+	uninstall-nobase_nodist_includeHEADERS
 
 .MAKE: install-am install-strip
 
@@ -582,12 +692,17 @@ uninstall-am:
 	dvi-am html html-am info info-am install install-am \
 	install-data install-data-am install-dvi install-dvi-am \
 	install-exec install-exec-am install-html install-html-am \
-	install-info install-info-am install-man install-pdf \
+	install-info install-info-am install-man \
+	install-nobase_includeHEADERS \
+	install-nobase_nodist_includeHEADERS install-pdf \
 	install-pdf-am install-ps install-ps-am install-strip \
 	installcheck installcheck-am installdirs maintainer-clean \
 	maintainer-clean-generic mostlyclean mostlyclean-generic \
 	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
-	uninstall-am
+	uninstall-am uninstall-nobase_includeHEADERS \
+	uninstall-nobase_nodist_includeHEADERS
+
+.PRECIOUS: Makefile
 
 
 # Tell versions [3.59,3.63) of GNU make to not export all variables.
diff --git a/libsodium/src/libsodium/include/sodium.h b/libsodium/src/libsodium/include/sodium.h
index b9a44ca..295f911 100644
--- a/libsodium/src/libsodium/include/sodium.h
+++ b/libsodium/src/libsodium/include/sodium.h
@@ -2,9 +2,12 @@
 #ifndef sodium_H
 #define sodium_H
 
+#include "sodium/version.h"
+
 #include "sodium/core.h"
 #include "sodium/crypto_aead_aes256gcm.h"
 #include "sodium/crypto_aead_chacha20poly1305.h"
+#include "sodium/crypto_aead_xchacha20poly1305.h"
 #include "sodium/crypto_auth.h"
 #include "sodium/crypto_auth_hmacsha256.h"
 #include "sodium/crypto_auth_hmacsha512.h"
@@ -12,6 +15,7 @@
 #include "sodium/crypto_box.h"
 #include "sodium/crypto_box_curve25519xsalsa20poly1305.h"
 #include "sodium/crypto_core_hsalsa20.h"
+#include "sodium/crypto_core_hchacha20.h"
 #include "sodium/crypto_core_salsa20.h"
 #include "sodium/crypto_core_salsa2012.h"
 #include "sodium/crypto_core_salsa208.h"
@@ -20,35 +24,46 @@
 #include "sodium/crypto_hash.h"
 #include "sodium/crypto_hash_sha256.h"
 #include "sodium/crypto_hash_sha512.h"
+#include "sodium/crypto_kdf.h"
+#include "sodium/crypto_kdf_blake2b.h"
+#include "sodium/crypto_kx.h"
 #include "sodium/crypto_onetimeauth.h"
 #include "sodium/crypto_onetimeauth_poly1305.h"
-#include "sodium/crypto_pwhash_scryptsalsa208sha256.h"
+#include "sodium/crypto_pwhash.h"
+#include "sodium/crypto_pwhash_argon2i.h"
 #include "sodium/crypto_scalarmult.h"
 #include "sodium/crypto_scalarmult_curve25519.h"
 #include "sodium/crypto_secretbox.h"
 #include "sodium/crypto_secretbox_xsalsa20poly1305.h"
+#include "sodium/crypto_secretstream_xchacha20poly1305.h"
 #include "sodium/crypto_shorthash.h"
 #include "sodium/crypto_shorthash_siphash24.h"
 #include "sodium/crypto_sign.h"
 #include "sodium/crypto_sign_ed25519.h"
 #include "sodium/crypto_stream.h"
-#include "sodium/crypto_stream_aes128ctr.h"
 #include "sodium/crypto_stream_chacha20.h"
 #include "sodium/crypto_stream_salsa20.h"
-#include "sodium/crypto_stream_salsa2012.h"
-#include "sodium/crypto_stream_salsa208.h"
 #include "sodium/crypto_stream_xsalsa20.h"
 #include "sodium/crypto_verify_16.h"
 #include "sodium/crypto_verify_32.h"
 #include "sodium/crypto_verify_64.h"
 #include "sodium/randombytes.h"
-#ifdef __native_client__
-# include "sodium/randombytes_nativeclient.h"
-#endif
-#include "sodium/randombytes_salsa20_random.h"
+#include "sodium/randombytes_internal_random.h"
 #include "sodium/randombytes_sysrandom.h"
 #include "sodium/runtime.h"
 #include "sodium/utils.h"
-#include "sodium/version.h"
+
+#ifndef SODIUM_LIBRARY_MINIMAL
+# include "sodium/crypto_box_curve25519xchacha20poly1305.h"
+# include "sodium/crypto_core_ed25519.h"
+# include "sodium/crypto_core_ristretto255.h"
+# include "sodium/crypto_scalarmult_ed25519.h"
+# include "sodium/crypto_scalarmult_ristretto255.h"
+# include "sodium/crypto_secretbox_xchacha20poly1305.h"
+# include "sodium/crypto_pwhash_scryptsalsa208sha256.h"
+# include "sodium/crypto_stream_salsa2012.h"
+# include "sodium/crypto_stream_salsa208.h"
+# include "sodium/crypto_stream_xchacha20.h"
+#endif
 
 #endif
diff --git a/libsodium/src/libsodium/include/sodium/core.h b/libsodium/src/libsodium/include/sodium/core.h
index 3ca4476..dd088d2 100644
--- a/libsodium/src/libsodium/include/sodium/core.h
+++ b/libsodium/src/libsodium/include/sodium/core.h
@@ -12,6 +12,15 @@ SODIUM_EXPORT
 int sodium_init(void)
             __attribute__ ((warn_unused_result));
 
+/* ---- */
+
+SODIUM_EXPORT
+int sodium_set_misuse_handler(void (*handler)(void));
+
+SODIUM_EXPORT
+void sodium_misuse(void)
+            __attribute__ ((noreturn));
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h b/libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h
index 42c0c83..9baeb3f 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_aead_aes256gcm.h
@@ -1,11 +1,31 @@
 #ifndef crypto_aead_aes256gcm_H
 #define crypto_aead_aes256gcm_H
 
+/*
+ * WARNING: Despite being the most popular AEAD construction due to its
+ * use in TLS, safely using AES-GCM in a different context is tricky.
+ *
+ * No more than ~ 350 GB of input data should be encrypted with a given key.
+ * This is for ~ 16 KB messages -- Actual figures vary according to
+ * message sizes.
+ *
+ * In addition, nonces are short and repeated nonces would totally destroy
+ * the security of this scheme.
+ *
+ * Nonces should thus come from atomic counters, which can be difficult to
+ * set up in a distributed environment.
+ *
+ * Unless you absolutely need AES-GCM, use crypto_aead_xchacha20poly1305_ietf_*()
+ * instead. It doesn't have any of these limitations.
+ * Or, if you don't need to authenticate additional data, just stick to
+ * crypto_secretbox().
+ */
+
 #include <stddef.h>
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -30,7 +50,16 @@ size_t crypto_aead_aes256gcm_npubbytes(void);
 SODIUM_EXPORT
 size_t crypto_aead_aes256gcm_abytes(void);
 
-typedef CRYPTO_ALIGN(16) unsigned char crypto_aead_aes256gcm_state[512];
+#define crypto_aead_aes256gcm_MESSAGEBYTES_MAX \
+    SODIUM_MIN(SODIUM_SIZE_MAX - crypto_aead_aes256gcm_ABYTES, \
+               (16ULL * ((1ULL << 32) - 2ULL)))
+SODIUM_EXPORT
+size_t crypto_aead_aes256gcm_messagebytes_max(void);
+
+typedef struct CRYPTO_ALIGN(16) crypto_aead_aes256gcm_state_ {
+    unsigned char opaque[512];
+} crypto_aead_aes256gcm_state;
+
 SODIUM_EXPORT
 size_t crypto_aead_aes256gcm_statebytes(void);
 
@@ -43,7 +72,8 @@ int crypto_aead_aes256gcm_encrypt(unsigned char *c,
                                   unsigned long long adlen,
                                   const unsigned char *nsec,
                                   const unsigned char *npub,
-                                  const unsigned char *k);
+                                  const unsigned char *k)
+            __attribute__ ((nonnull(1, 8, 9)));
 
 SODIUM_EXPORT
 int crypto_aead_aes256gcm_decrypt(unsigned char *m,
@@ -55,11 +85,39 @@ int crypto_aead_aes256gcm_decrypt(unsigned char *m,
                                   unsigned long long adlen,
                                   const unsigned char *npub,
                                   const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(4, 8, 9)));
+
+SODIUM_EXPORT
+int crypto_aead_aes256gcm_encrypt_detached(unsigned char *c,
+                                           unsigned char *mac,
+                                           unsigned long long *maclen_p,
+                                           const unsigned char *m,
+                                           unsigned long long mlen,
+                                           const unsigned char *ad,
+                                           unsigned long long adlen,
+                                           const unsigned char *nsec,
+                                           const unsigned char *npub,
+                                           const unsigned char *k)
+            __attribute__ ((nonnull(1, 2, 9, 10)));
+
+SODIUM_EXPORT
+int crypto_aead_aes256gcm_decrypt_detached(unsigned char *m,
+                                           unsigned char *nsec,
+                                           const unsigned char *c,
+                                           unsigned long long clen,
+                                           const unsigned char *mac,
+                                           const unsigned char *ad,
+                                           unsigned long long adlen,
+                                           const unsigned char *npub,
+                                           const unsigned char *k)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(3, 5, 8, 9)));
+
+/* -- Precomputation interface -- */
 
 SODIUM_EXPORT
 int crypto_aead_aes256gcm_beforenm(crypto_aead_aes256gcm_state *ctx_,
-                                   const unsigned char *k);
+                                   const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c,
@@ -70,7 +128,8 @@ int crypto_aead_aes256gcm_encrypt_afternm(unsigned char *c,
                                           unsigned long long adlen,
                                           const unsigned char *nsec,
                                           const unsigned char *npub,
-                                          const crypto_aead_aes256gcm_state *ctx_);
+                                          const crypto_aead_aes256gcm_state *ctx_)
+            __attribute__ ((nonnull(1, 8, 9)));
 
 SODIUM_EXPORT
 int crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m,
@@ -82,7 +141,36 @@ int crypto_aead_aes256gcm_decrypt_afternm(unsigned char *m,
                                           unsigned long long adlen,
                                           const unsigned char *npub,
                                           const crypto_aead_aes256gcm_state *ctx_)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(4, 8, 9)));
+
+SODIUM_EXPORT
+int crypto_aead_aes256gcm_encrypt_detached_afternm(unsigned char *c,
+                                                   unsigned char *mac,
+                                                   unsigned long long *maclen_p,
+                                                   const unsigned char *m,
+                                                   unsigned long long mlen,
+                                                   const unsigned char *ad,
+                                                   unsigned long long adlen,
+                                                   const unsigned char *nsec,
+                                                   const unsigned char *npub,
+                                                   const crypto_aead_aes256gcm_state *ctx_)
+            __attribute__ ((nonnull(1, 2, 9, 10)));
+
+SODIUM_EXPORT
+int crypto_aead_aes256gcm_decrypt_detached_afternm(unsigned char *m,
+                                                   unsigned char *nsec,
+                                                   const unsigned char *c,
+                                                   unsigned long long clen,
+                                                   const unsigned char *mac,
+                                                   const unsigned char *ad,
+                                                   unsigned long long adlen,
+                                                   const unsigned char *npub,
+                                                   const crypto_aead_aes256gcm_state *ctx_)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(3, 5, 8, 9)));
+
+SODIUM_EXPORT
+void crypto_aead_aes256gcm_keygen(unsigned char k[crypto_aead_aes256gcm_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h b/libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h
index 1c0b85b..5d671df 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_aead_chacha20poly1305.h
@@ -5,12 +5,92 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
+/* -- IETF ChaCha20-Poly1305 construction with a 96-bit nonce and a 32-bit internal counter -- */
+
+#define crypto_aead_chacha20poly1305_ietf_KEYBYTES 32U
+SODIUM_EXPORT
+size_t crypto_aead_chacha20poly1305_ietf_keybytes(void);
+
+#define crypto_aead_chacha20poly1305_ietf_NSECBYTES 0U
+SODIUM_EXPORT
+size_t crypto_aead_chacha20poly1305_ietf_nsecbytes(void);
+
+#define crypto_aead_chacha20poly1305_ietf_NPUBBYTES 12U
+
+SODIUM_EXPORT
+size_t crypto_aead_chacha20poly1305_ietf_npubbytes(void);
+
+#define crypto_aead_chacha20poly1305_ietf_ABYTES 16U
+SODIUM_EXPORT
+size_t crypto_aead_chacha20poly1305_ietf_abytes(void);
+
+#define crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX \
+    SODIUM_MIN(SODIUM_SIZE_MAX - crypto_aead_chacha20poly1305_ietf_ABYTES, \
+               (64ULL * ((1ULL << 32) - 1ULL)))
+SODIUM_EXPORT
+size_t crypto_aead_chacha20poly1305_ietf_messagebytes_max(void);
+
+SODIUM_EXPORT
+int crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,
+                                              unsigned long long *clen_p,
+                                              const unsigned char *m,
+                                              unsigned long long mlen,
+                                              const unsigned char *ad,
+                                              unsigned long long adlen,
+                                              const unsigned char *nsec,
+                                              const unsigned char *npub,
+                                              const unsigned char *k)
+            __attribute__ ((nonnull(1, 8, 9)));
+
+SODIUM_EXPORT
+int crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,
+                                              unsigned long long *mlen_p,
+                                              unsigned char *nsec,
+                                              const unsigned char *c,
+                                              unsigned long long clen,
+                                              const unsigned char *ad,
+                                              unsigned long long adlen,
+                                              const unsigned char *npub,
+                                              const unsigned char *k)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(4, 8, 9)));
+
+SODIUM_EXPORT
+int crypto_aead_chacha20poly1305_ietf_encrypt_detached(unsigned char *c,
+                                                       unsigned char *mac,
+                                                       unsigned long long *maclen_p,
+                                                       const unsigned char *m,
+                                                       unsigned long long mlen,
+                                                       const unsigned char *ad,
+                                                       unsigned long long adlen,
+                                                       const unsigned char *nsec,
+                                                       const unsigned char *npub,
+                                                       const unsigned char *k)
+            __attribute__ ((nonnull(1, 2, 9, 10)));
+
+SODIUM_EXPORT
+int crypto_aead_chacha20poly1305_ietf_decrypt_detached(unsigned char *m,
+                                                       unsigned char *nsec,
+                                                       const unsigned char *c,
+                                                       unsigned long long clen,
+                                                       const unsigned char *mac,
+                                                       const unsigned char *ad,
+                                                       unsigned long long adlen,
+                                                       const unsigned char *npub,
+                                                       const unsigned char *k)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(3, 5, 8, 9)));
+
+SODIUM_EXPORT
+void crypto_aead_chacha20poly1305_ietf_keygen(unsigned char k[crypto_aead_chacha20poly1305_ietf_KEYBYTES])
+            __attribute__ ((nonnull));
+
+/* -- Original ChaCha20-Poly1305 construction with a 64-bit nonce and a 64-bit internal counter -- */
+
 #define crypto_aead_chacha20poly1305_KEYBYTES 32U
 SODIUM_EXPORT
 size_t crypto_aead_chacha20poly1305_keybytes(void);
@@ -27,6 +107,11 @@ size_t crypto_aead_chacha20poly1305_npubbytes(void);
 SODIUM_EXPORT
 size_t crypto_aead_chacha20poly1305_abytes(void);
 
+#define crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX \
+    (SODIUM_SIZE_MAX - crypto_aead_chacha20poly1305_ABYTES)
+SODIUM_EXPORT
+size_t crypto_aead_chacha20poly1305_messagebytes_max(void);
+
 SODIUM_EXPORT
 int crypto_aead_chacha20poly1305_encrypt(unsigned char *c,
                                          unsigned long long *clen_p,
@@ -36,7 +121,8 @@ int crypto_aead_chacha20poly1305_encrypt(unsigned char *c,
                                          unsigned long long adlen,
                                          const unsigned char *nsec,
                                          const unsigned char *npub,
-                                         const unsigned char *k);
+                                         const unsigned char *k)
+            __attribute__ ((nonnull(1, 8, 9)));
 
 SODIUM_EXPORT
 int crypto_aead_chacha20poly1305_decrypt(unsigned char *m,
@@ -48,34 +134,44 @@ int crypto_aead_chacha20poly1305_decrypt(unsigned char *m,
                                          unsigned long long adlen,
                                          const unsigned char *npub,
                                          const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(4, 8, 9)));
 
-#define crypto_aead_chacha20poly1305_IETF_NPUBBYTES 12U
 SODIUM_EXPORT
-size_t crypto_aead_chacha20poly1305_ietf_npubbytes(void);
+int crypto_aead_chacha20poly1305_encrypt_detached(unsigned char *c,
+                                                  unsigned char *mac,
+                                                  unsigned long long *maclen_p,
+                                                  const unsigned char *m,
+                                                  unsigned long long mlen,
+                                                  const unsigned char *ad,
+                                                  unsigned long long adlen,
+                                                  const unsigned char *nsec,
+                                                  const unsigned char *npub,
+                                                  const unsigned char *k)
+            __attribute__ ((nonnull(1, 2, 9, 10)));
 
 SODIUM_EXPORT
-int crypto_aead_chacha20poly1305_ietf_encrypt(unsigned char *c,
-                                              unsigned long long *clen_p,
-                                              const unsigned char *m,
-                                              unsigned long long mlen,
-                                              const unsigned char *ad,
-                                              unsigned long long adlen,
-                                              const unsigned char *nsec,
-                                              const unsigned char *npub,
-                                              const unsigned char *k);
+int crypto_aead_chacha20poly1305_decrypt_detached(unsigned char *m,
+                                                  unsigned char *nsec,
+                                                  const unsigned char *c,
+                                                  unsigned long long clen,
+                                                  const unsigned char *mac,
+                                                  const unsigned char *ad,
+                                                  unsigned long long adlen,
+                                                  const unsigned char *npub,
+                                                  const unsigned char *k)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(3, 5, 8, 9)));
 
 SODIUM_EXPORT
-int crypto_aead_chacha20poly1305_ietf_decrypt(unsigned char *m,
-                                              unsigned long long *mlen_p,
-                                              unsigned char *nsec,
-                                              const unsigned char *c,
-                                              unsigned long long clen,
-                                              const unsigned char *ad,
-                                              unsigned long long adlen,
-                                              const unsigned char *npub,
-                                              const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+void crypto_aead_chacha20poly1305_keygen(unsigned char k[crypto_aead_chacha20poly1305_KEYBYTES])
+            __attribute__ ((nonnull));
+
+/* Aliases */
+
+#define crypto_aead_chacha20poly1305_IETF_KEYBYTES         crypto_aead_chacha20poly1305_ietf_KEYBYTES
+#define crypto_aead_chacha20poly1305_IETF_NSECBYTES        crypto_aead_chacha20poly1305_ietf_NSECBYTES
+#define crypto_aead_chacha20poly1305_IETF_NPUBBYTES        crypto_aead_chacha20poly1305_ietf_NPUBBYTES
+#define crypto_aead_chacha20poly1305_IETF_ABYTES           crypto_aead_chacha20poly1305_ietf_ABYTES
+#define crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_auth.h b/libsodium/src/libsodium/include/sodium/crypto_auth.h
index 30094ee..540aee0 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_auth.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_auth.h
@@ -7,7 +7,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -27,12 +27,17 @@ const char *crypto_auth_primitive(void);
 
 SODIUM_EXPORT
 int crypto_auth(unsigned char *out, const unsigned char *in,
-                unsigned long long inlen, const unsigned char *k);
+                unsigned long long inlen, const unsigned char *k)
+            __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_auth_verify(const unsigned char *h, const unsigned char *in,
                        unsigned long long inlen, const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
+
+SODIUM_EXPORT
+void crypto_auth_keygen(unsigned char k[crypto_auth_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h b/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h
index 1e88112..3da864c 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha256.h
@@ -6,7 +6,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -24,14 +24,14 @@ SODIUM_EXPORT
 int crypto_auth_hmacsha256(unsigned char *out,
                            const unsigned char *in,
                            unsigned long long inlen,
-                           const unsigned char *k);
+                           const unsigned char *k) __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha256_verify(const unsigned char *h,
                                   const unsigned char *in,
                                   unsigned long long inlen,
                                   const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
 
 /* ------------------------------------------------------------------------- */
 
@@ -39,22 +39,29 @@ typedef struct crypto_auth_hmacsha256_state {
     crypto_hash_sha256_state ictx;
     crypto_hash_sha256_state octx;
 } crypto_auth_hmacsha256_state;
+
 SODIUM_EXPORT
 size_t crypto_auth_hmacsha256_statebytes(void);
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha256_init(crypto_auth_hmacsha256_state *state,
                                 const unsigned char *key,
-                                size_t keylen);
+                                size_t keylen) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha256_update(crypto_auth_hmacsha256_state *state,
                                   const unsigned char *in,
-                                  unsigned long long inlen);
+                                  unsigned long long inlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha256_final(crypto_auth_hmacsha256_state *state,
-                                 unsigned char *out);
+                                 unsigned char *out) __attribute__ ((nonnull));
+
+
+SODIUM_EXPORT
+void crypto_auth_hmacsha256_keygen(unsigned char k[crypto_auth_hmacsha256_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h b/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h
index 3341b2d..d992cb8 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512.h
@@ -6,7 +6,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -24,14 +24,14 @@ SODIUM_EXPORT
 int crypto_auth_hmacsha512(unsigned char *out,
                            const unsigned char *in,
                            unsigned long long inlen,
-                           const unsigned char *k);
+                           const unsigned char *k) __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512_verify(const unsigned char *h,
                                   const unsigned char *in,
                                   unsigned long long inlen,
                                   const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
 
 /* ------------------------------------------------------------------------- */
 
@@ -39,22 +39,27 @@ typedef struct crypto_auth_hmacsha512_state {
     crypto_hash_sha512_state ictx;
     crypto_hash_sha512_state octx;
 } crypto_auth_hmacsha512_state;
+
 SODIUM_EXPORT
 size_t crypto_auth_hmacsha512_statebytes(void);
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512_init(crypto_auth_hmacsha512_state *state,
                                 const unsigned char *key,
-                                size_t keylen);
+                                size_t keylen) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512_update(crypto_auth_hmacsha512_state *state,
                                   const unsigned char *in,
-                                  unsigned long long inlen);
+                                  unsigned long long inlen) __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512_final(crypto_auth_hmacsha512_state *state,
-                                 unsigned char *out);
+                                 unsigned char *out) __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_auth_hmacsha512_keygen(unsigned char k[crypto_auth_hmacsha512_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h b/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h
index af8018e..3fb5263 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_auth_hmacsha512256.h
@@ -6,7 +6,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -21,35 +21,42 @@ SODIUM_EXPORT
 size_t crypto_auth_hmacsha512256_keybytes(void);
 
 SODIUM_EXPORT
-int crypto_auth_hmacsha512256(unsigned char *out, const unsigned char *in,
-                              unsigned long long inlen,const unsigned char *k);
+int crypto_auth_hmacsha512256(unsigned char *out,
+                              const unsigned char *in,
+                              unsigned long long inlen,
+                              const unsigned char *k) __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512256_verify(const unsigned char *h,
                                      const unsigned char *in,
                                      unsigned long long inlen,
                                      const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
 
 /* ------------------------------------------------------------------------- */
 
 typedef crypto_auth_hmacsha512_state crypto_auth_hmacsha512256_state;
+
 SODIUM_EXPORT
 size_t crypto_auth_hmacsha512256_statebytes(void);
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512256_init(crypto_auth_hmacsha512256_state *state,
                                    const unsigned char *key,
-                                   size_t keylen);
+                                   size_t keylen) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512256_update(crypto_auth_hmacsha512256_state *state,
                                      const unsigned char *in,
-                                     unsigned long long inlen);
+                                     unsigned long long inlen) __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_auth_hmacsha512256_final(crypto_auth_hmacsha512256_state *state,
-                                    unsigned char *out);
+                                    unsigned char *out) __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_auth_hmacsha512256_keygen(unsigned char k[crypto_auth_hmacsha512256_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_box.h b/libsodium/src/libsodium/include/sodium/crypto_box.h
index 473f922..e060dd2 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_box.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_box.h
@@ -3,8 +3,8 @@
 
 /*
  * THREAD SAFETY: crypto_box_keypair() is thread-safe,
- * provided that you called sodium_init() once before using any
- * other libsodium function.
+ * provided that sodium_init() was called before.
+ *
  * Other functions are always thread-safe.
  */
 
@@ -14,7 +14,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -40,35 +40,41 @@ size_t  crypto_box_noncebytes(void);
 SODIUM_EXPORT
 size_t  crypto_box_macbytes(void);
 
+#define crypto_box_MESSAGEBYTES_MAX crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX
+SODIUM_EXPORT
+size_t  crypto_box_messagebytes_max(void);
+
 #define crypto_box_PRIMITIVE "curve25519xsalsa20poly1305"
 SODIUM_EXPORT
 const char *crypto_box_primitive(void);
 
 SODIUM_EXPORT
 int crypto_box_seed_keypair(unsigned char *pk, unsigned char *sk,
-                            const unsigned char *seed);
+                            const unsigned char *seed)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
-int crypto_box_keypair(unsigned char *pk, unsigned char *sk);
+int crypto_box_keypair(unsigned char *pk, unsigned char *sk)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_box_easy(unsigned char *c, const unsigned char *m,
                     unsigned long long mlen, const unsigned char *n,
                     const unsigned char *pk, const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_box_open_easy(unsigned char *m, const unsigned char *c,
                          unsigned long long clen, const unsigned char *n,
                          const unsigned char *pk, const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_box_detached(unsigned char *c, unsigned char *mac,
                         const unsigned char *m, unsigned long long mlen,
                         const unsigned char *n, const unsigned char *pk,
                         const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 2, 5, 6, 7)));
 
 SODIUM_EXPORT
 int crypto_box_open_detached(unsigned char *m, const unsigned char *c,
@@ -77,7 +83,7 @@ int crypto_box_open_detached(unsigned char *m, const unsigned char *c,
                              const unsigned char *n,
                              const unsigned char *pk,
                              const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 3, 5, 6, 7)));
 
 /* -- Precomputation interface -- */
 
@@ -88,30 +94,31 @@ size_t  crypto_box_beforenmbytes(void);
 SODIUM_EXPORT
 int crypto_box_beforenm(unsigned char *k, const unsigned char *pk,
                         const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_box_easy_afternm(unsigned char *c, const unsigned char *m,
                             unsigned long long mlen, const unsigned char *n,
-                            const unsigned char *k);
+                            const unsigned char *k) __attribute__ ((nonnull(1, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_box_open_easy_afternm(unsigned char *m, const unsigned char *c,
                                  unsigned long long clen, const unsigned char *n,
                                  const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_box_detached_afternm(unsigned char *c, unsigned char *mac,
                                 const unsigned char *m, unsigned long long mlen,
-                                const unsigned char *n, const unsigned char *k);
+                                const unsigned char *n, const unsigned char *k)
+            __attribute__ ((nonnull(1, 2, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_box_open_detached_afternm(unsigned char *m, const unsigned char *c,
                                      const unsigned char *mac,
                                      unsigned long long clen, const unsigned char *n,
                                      const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 3, 5, 6)));
 
 /* -- Ephemeral SK interface -- */
 
@@ -121,13 +128,14 @@ size_t crypto_box_sealbytes(void);
 
 SODIUM_EXPORT
 int crypto_box_seal(unsigned char *c, const unsigned char *m,
-                    unsigned long long mlen, const unsigned char *pk);
+                    unsigned long long mlen, const unsigned char *pk)
+            __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_box_seal_open(unsigned char *m, const unsigned char *c,
                          unsigned long long clen,
                          const unsigned char *pk, const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5)));
 
 /* -- NaCl compatibility interface ; Requires padding -- */
 
@@ -143,24 +151,24 @@ SODIUM_EXPORT
 int crypto_box(unsigned char *c, const unsigned char *m,
                unsigned long long mlen, const unsigned char *n,
                const unsigned char *pk, const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_box_open(unsigned char *m, const unsigned char *c,
                     unsigned long long clen, const unsigned char *n,
                     const unsigned char *pk, const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_box_afternm(unsigned char *c, const unsigned char *m,
                        unsigned long long mlen, const unsigned char *n,
-                       const unsigned char *k);
+                       const unsigned char *k) __attribute__ ((nonnull(1, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_box_open_afternm(unsigned char *m, const unsigned char *c,
                             unsigned long long clen, const unsigned char *n,
                             const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5)));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h b/libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h
index e9c38d6..e733f49 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_box_curve25519xsalsa20poly1305.h
@@ -2,10 +2,11 @@
 #define crypto_box_curve25519xsalsa20poly1305_H
 
 #include <stddef.h>
+#include "crypto_stream_xsalsa20.h"
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -31,19 +32,44 @@ size_t crypto_box_curve25519xsalsa20poly1305_beforenmbytes(void);
 SODIUM_EXPORT
 size_t crypto_box_curve25519xsalsa20poly1305_noncebytes(void);
 
-#define crypto_box_curve25519xsalsa20poly1305_ZEROBYTES 32U
+#define crypto_box_curve25519xsalsa20poly1305_MACBYTES 16U
 SODIUM_EXPORT
-size_t crypto_box_curve25519xsalsa20poly1305_zerobytes(void);
+size_t crypto_box_curve25519xsalsa20poly1305_macbytes(void);
+
+/* Only for the libsodium API - The NaCl compatibility API would require BOXZEROBYTES extra bytes */
+#define crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX \
+    (crypto_stream_xsalsa20_MESSAGEBYTES_MAX - crypto_box_curve25519xsalsa20poly1305_MACBYTES)
+SODIUM_EXPORT
+size_t crypto_box_curve25519xsalsa20poly1305_messagebytes_max(void);
+
+SODIUM_EXPORT
+int crypto_box_curve25519xsalsa20poly1305_seed_keypair(unsigned char *pk,
+                                                       unsigned char *sk,
+                                                       const unsigned char *seed)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int crypto_box_curve25519xsalsa20poly1305_keypair(unsigned char *pk,
+                                                  unsigned char *sk)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int crypto_box_curve25519xsalsa20poly1305_beforenm(unsigned char *k,
+                                                   const unsigned char *pk,
+                                                   const unsigned char *sk)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
+
+/* -- NaCl compatibility interface ; Requires padding -- */
 
 #define crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES 16U
 SODIUM_EXPORT
 size_t crypto_box_curve25519xsalsa20poly1305_boxzerobytes(void);
 
-#define crypto_box_curve25519xsalsa20poly1305_MACBYTES \
-    (crypto_box_curve25519xsalsa20poly1305_ZEROBYTES - \
-     crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES)
+#define crypto_box_curve25519xsalsa20poly1305_ZEROBYTES \
+    (crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES + \
+     crypto_box_curve25519xsalsa20poly1305_MACBYTES)
 SODIUM_EXPORT
-size_t crypto_box_curve25519xsalsa20poly1305_macbytes(void);
+size_t crypto_box_curve25519xsalsa20poly1305_zerobytes(void);
 
 SODIUM_EXPORT
 int crypto_box_curve25519xsalsa20poly1305(unsigned char *c,
@@ -52,7 +78,7 @@ int crypto_box_curve25519xsalsa20poly1305(unsigned char *c,
                                           const unsigned char *n,
                                           const unsigned char *pk,
                                           const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_box_curve25519xsalsa20poly1305_open(unsigned char *m,
@@ -61,29 +87,15 @@ int crypto_box_curve25519xsalsa20poly1305_open(unsigned char *m,
                                                const unsigned char *n,
                                                const unsigned char *pk,
                                                const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
-
-SODIUM_EXPORT
-int crypto_box_curve25519xsalsa20poly1305_seed_keypair(unsigned char *pk,
-                                                       unsigned char *sk,
-                                                       const unsigned char *seed);
-
-SODIUM_EXPORT
-int crypto_box_curve25519xsalsa20poly1305_keypair(unsigned char *pk,
-                                                  unsigned char *sk);
-
-SODIUM_EXPORT
-int crypto_box_curve25519xsalsa20poly1305_beforenm(unsigned char *k,
-                                                   const unsigned char *pk,
-                                                   const unsigned char *sk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_box_curve25519xsalsa20poly1305_afternm(unsigned char *c,
                                                   const unsigned char *m,
                                                   unsigned long long mlen,
                                                   const unsigned char *n,
-                                                  const unsigned char *k);
+                                                  const unsigned char *k)
+            __attribute__ ((nonnull(1, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_box_curve25519xsalsa20poly1305_open_afternm(unsigned char *m,
@@ -91,7 +103,7 @@ int crypto_box_curve25519xsalsa20poly1305_open_afternm(unsigned char *m,
                                                        unsigned long long clen,
                                                        const unsigned char *n,
                                                        const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5)));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h b/libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h
index 82e475b..4bf7a48 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_core_hsalsa20.h
@@ -26,7 +26,8 @@ size_t crypto_core_hsalsa20_constbytes(void);
 
 SODIUM_EXPORT
 int crypto_core_hsalsa20(unsigned char *out, const unsigned char *in,
-                         const unsigned char *k, const unsigned char *c);
+                         const unsigned char *k, const unsigned char *c)
+            __attribute__ ((nonnull(1, 2, 3)));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h b/libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h
index 160cc56..bd79fd9 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_core_salsa20.h
@@ -26,7 +26,8 @@ size_t crypto_core_salsa20_constbytes(void);
 
 SODIUM_EXPORT
 int crypto_core_salsa20(unsigned char *out, const unsigned char *in,
-                        const unsigned char *k, const unsigned char *c);
+                        const unsigned char *k, const unsigned char *c)
+            __attribute__ ((nonnull(1, 2, 3)));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h b/libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h
index bdd5f9f..0595759 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_core_salsa2012.h
@@ -26,7 +26,8 @@ size_t crypto_core_salsa2012_constbytes(void);
 
 SODIUM_EXPORT
 int crypto_core_salsa2012(unsigned char *out, const unsigned char *in,
-                          const unsigned char *k, const unsigned char *c);
+                          const unsigned char *k, const unsigned char *c)
+            __attribute__ ((nonnull(1, 2, 3)));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h b/libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h
index 3c13efa..d2f216a 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_core_salsa208.h
@@ -10,23 +10,28 @@ extern "C" {
 
 #define crypto_core_salsa208_OUTPUTBYTES 64U
 SODIUM_EXPORT
-size_t crypto_core_salsa208_outputbytes(void);
+size_t crypto_core_salsa208_outputbytes(void)
+            __attribute__ ((deprecated));
 
 #define crypto_core_salsa208_INPUTBYTES 16U
 SODIUM_EXPORT
-size_t crypto_core_salsa208_inputbytes(void);
+size_t crypto_core_salsa208_inputbytes(void)
+            __attribute__ ((deprecated));
 
 #define crypto_core_salsa208_KEYBYTES 32U
 SODIUM_EXPORT
-size_t crypto_core_salsa208_keybytes(void);
+size_t crypto_core_salsa208_keybytes(void)
+            __attribute__ ((deprecated));
 
 #define crypto_core_salsa208_CONSTBYTES 16U
 SODIUM_EXPORT
-size_t crypto_core_salsa208_constbytes(void);
+size_t crypto_core_salsa208_constbytes(void)
+            __attribute__ ((deprecated));
 
 SODIUM_EXPORT
 int crypto_core_salsa208(unsigned char *out, const unsigned char *in,
-                         const unsigned char *k, const unsigned char *c);
+                         const unsigned char *k, const unsigned char *c)
+            __attribute__ ((nonnull(1, 2, 3)));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_generichash.h b/libsodium/src/libsodium/include/sodium/crypto_generichash.h
index 60d4652..d897e5d 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_generichash.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_generichash.h
@@ -7,7 +7,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -41,28 +41,41 @@ size_t  crypto_generichash_keybytes(void);
 SODIUM_EXPORT
 const char *crypto_generichash_primitive(void);
 
+/*
+ * Important when writing bindings for other programming languages:
+ * the state address should be 64-bytes aligned.
+ */
 typedef crypto_generichash_blake2b_state crypto_generichash_state;
+
 SODIUM_EXPORT
 size_t  crypto_generichash_statebytes(void);
 
 SODIUM_EXPORT
 int crypto_generichash(unsigned char *out, size_t outlen,
                        const unsigned char *in, unsigned long long inlen,
-                       const unsigned char *key, size_t keylen);
+                       const unsigned char *key, size_t keylen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_init(crypto_generichash_state *state,
                             const unsigned char *key,
-                            const size_t keylen, const size_t outlen);
+                            const size_t keylen, const size_t outlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_update(crypto_generichash_state *state,
                               const unsigned char *in,
-                              unsigned long long inlen);
+                              unsigned long long inlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_final(crypto_generichash_state *state,
-                             unsigned char *out, const size_t outlen);
+                             unsigned char *out, const size_t outlen)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_generichash_keygen(unsigned char k[crypto_generichash_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h b/libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h
index 1708813..fee9d8a 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_generichash_blake2b.h
@@ -8,7 +8,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -20,13 +20,8 @@ extern "C" {
 # pragma pack(push, 1)
 #endif
 
-typedef CRYPTO_ALIGN(64) struct crypto_generichash_blake2b_state {
-    uint64_t h[8];
-    uint64_t t[2];
-    uint64_t f[2];
-    uint8_t  buf[2 * 128];
-    size_t   buflen;
-    uint8_t  last_node;
+typedef struct CRYPTO_ALIGN(64) crypto_generichash_blake2b_state {
+    unsigned char opaque[384];
 } crypto_generichash_blake2b_state;
 
 #if defined(__IBMC__) || defined(__SUNPRO_C) || defined(__SUNPRO_CC)
@@ -67,11 +62,15 @@ size_t crypto_generichash_blake2b_saltbytes(void);
 SODIUM_EXPORT
 size_t crypto_generichash_blake2b_personalbytes(void);
 
+SODIUM_EXPORT
+size_t crypto_generichash_blake2b_statebytes(void);
+
 SODIUM_EXPORT
 int crypto_generichash_blake2b(unsigned char *out, size_t outlen,
                                const unsigned char *in,
                                unsigned long long inlen,
-                               const unsigned char *key, size_t keylen);
+                               const unsigned char *key, size_t keylen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_blake2b_salt_personal(unsigned char *out, size_t outlen,
@@ -80,33 +79,37 @@ int crypto_generichash_blake2b_salt_personal(unsigned char *out, size_t outlen,
                                              const unsigned char *key,
                                              size_t keylen,
                                              const unsigned char *salt,
-                                             const unsigned char *personal);
+                                             const unsigned char *personal)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_blake2b_init(crypto_generichash_blake2b_state *state,
                                     const unsigned char *key,
-                                    const size_t keylen, const size_t outlen);
+                                    const size_t keylen, const size_t outlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_blake2b_init_salt_personal(crypto_generichash_blake2b_state *state,
                                                   const unsigned char *key,
                                                   const size_t keylen, const size_t outlen,
                                                   const unsigned char *salt,
-                                                  const unsigned char *personal);
+                                                  const unsigned char *personal)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_blake2b_update(crypto_generichash_blake2b_state *state,
                                       const unsigned char *in,
-                                      unsigned long long inlen);
+                                      unsigned long long inlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_generichash_blake2b_final(crypto_generichash_blake2b_state *state,
                                      unsigned char *out,
-                                     const size_t outlen);
+                                     const size_t outlen) __attribute__ ((nonnull));
 
-/* ------------------------------------------------------------------------- */
-
-int _crypto_generichash_blake2b_pick_best_implementation(void);
+SODIUM_EXPORT
+void crypto_generichash_blake2b_keygen(unsigned char k[crypto_generichash_blake2b_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_hash.h b/libsodium/src/libsodium/include/sodium/crypto_hash.h
index bc24a78..8752f9c 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_hash.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_hash.h
@@ -14,7 +14,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -26,7 +26,7 @@ size_t crypto_hash_bytes(void);
 
 SODIUM_EXPORT
 int crypto_hash(unsigned char *out, const unsigned char *in,
-                unsigned long long inlen);
+                unsigned long long inlen) __attribute__ ((nonnull(1)));
 
 #define crypto_hash_PRIMITIVE "sha512"
 SODIUM_EXPORT
diff --git a/libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h b/libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h
index 1bb816f..b18217e 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_hash_sha256.h
@@ -15,17 +15,18 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
 typedef struct crypto_hash_sha256_state {
-    uint32_t      state[8];
-    uint64_t      count;
-    unsigned char buf[64];
+    uint32_t state[8];
+    uint64_t count;
+    uint8_t  buf[64];
 } crypto_hash_sha256_state;
+
 SODIUM_EXPORT
 size_t crypto_hash_sha256_statebytes(void);
 
@@ -35,19 +36,22 @@ size_t crypto_hash_sha256_bytes(void);
 
 SODIUM_EXPORT
 int crypto_hash_sha256(unsigned char *out, const unsigned char *in,
-                       unsigned long long inlen);
+                       unsigned long long inlen) __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
-int crypto_hash_sha256_init(crypto_hash_sha256_state *state);
+int crypto_hash_sha256_init(crypto_hash_sha256_state *state)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_hash_sha256_update(crypto_hash_sha256_state *state,
                               const unsigned char *in,
-                              unsigned long long inlen);
+                              unsigned long long inlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_hash_sha256_final(crypto_hash_sha256_state *state,
-                             unsigned char *out);
+                             unsigned char *out)
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h b/libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h
index 12df033..8efa719 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_hash_sha512.h
@@ -15,17 +15,18 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
 typedef struct crypto_hash_sha512_state {
-    uint64_t      state[8];
-    uint64_t      count[2];
-    unsigned char buf[128];
+    uint64_t state[8];
+    uint64_t count[2];
+    uint8_t  buf[128];
 } crypto_hash_sha512_state;
+
 SODIUM_EXPORT
 size_t crypto_hash_sha512_statebytes(void);
 
@@ -35,19 +36,22 @@ size_t crypto_hash_sha512_bytes(void);
 
 SODIUM_EXPORT
 int crypto_hash_sha512(unsigned char *out, const unsigned char *in,
-                       unsigned long long inlen);
+                       unsigned long long inlen) __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
-int crypto_hash_sha512_init(crypto_hash_sha512_state *state);
+int crypto_hash_sha512_init(crypto_hash_sha512_state *state)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_hash_sha512_update(crypto_hash_sha512_state *state,
                               const unsigned char *in,
-                              unsigned long long inlen);
+                              unsigned long long inlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_hash_sha512_final(crypto_hash_sha512_state *state,
-                             unsigned char *out);
+                             unsigned char *out)
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_int32.h b/libsodium/src/libsodium/include/sodium/crypto_int32.h
deleted file mode 100644
index a22019d..0000000
--- a/libsodium/src/libsodium/include/sodium/crypto_int32.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef crypto_int32_H
-#define crypto_int32_H
-
-#include <stdint.h>
-
-typedef int32_t crypto_int32;
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_int64.h b/libsodium/src/libsodium/include/sodium/crypto_int64.h
deleted file mode 100644
index f68a283..0000000
--- a/libsodium/src/libsodium/include/sodium/crypto_int64.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef crypto_int64_H
-#define crypto_int64_H
-
-#include <stdint.h>
-
-typedef int64_t crypto_int64;
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h b/libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h
index 5d804bd..7cd7b07 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_onetimeauth.h
@@ -7,13 +7,14 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
 typedef crypto_onetimeauth_poly1305_state crypto_onetimeauth_state;
+
 SODIUM_EXPORT
 size_t  crypto_onetimeauth_statebytes(void);
 
@@ -31,25 +32,31 @@ const char *crypto_onetimeauth_primitive(void);
 
 SODIUM_EXPORT
 int crypto_onetimeauth(unsigned char *out, const unsigned char *in,
-                       unsigned long long inlen, const unsigned char *k);
+                       unsigned long long inlen, const unsigned char *k)
+            __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_verify(const unsigned char *h, const unsigned char *in,
                               unsigned long long inlen, const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_init(crypto_onetimeauth_state *state,
-                            const unsigned char *key);
+                            const unsigned char *key) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_update(crypto_onetimeauth_state *state,
                               const unsigned char *in,
-                              unsigned long long inlen);
+                              unsigned long long inlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_final(crypto_onetimeauth_state *state,
-                             unsigned char *out);
+                             unsigned char *out) __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_onetimeauth_keygen(unsigned char k[crypto_onetimeauth_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h b/libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h
index 2c0fd15..f3e34d8 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_onetimeauth_poly1305.h
@@ -1,25 +1,28 @@
 #ifndef crypto_onetimeauth_poly1305_H
 #define crypto_onetimeauth_poly1305_H
 
-#include <stdlib.h>
-#include "export.h"
-
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
-#include <sys/types.h>
-
 #include <stdint.h>
 #include <stdio.h>
+#include <stdlib.h>
+
+#include <sys/types.h>
+
+#include "export.h"
 
-typedef CRYPTO_ALIGN(16) struct crypto_onetimeauth_poly1305_state {
+typedef struct CRYPTO_ALIGN(16) crypto_onetimeauth_poly1305_state {
     unsigned char opaque[256];
 } crypto_onetimeauth_poly1305_state;
 
+SODIUM_EXPORT
+size_t crypto_onetimeauth_poly1305_statebytes(void);
+
 #define crypto_onetimeauth_poly1305_BYTES 16U
 SODIUM_EXPORT
 size_t crypto_onetimeauth_poly1305_bytes(void);
@@ -32,31 +35,35 @@ SODIUM_EXPORT
 int crypto_onetimeauth_poly1305(unsigned char *out,
                                 const unsigned char *in,
                                 unsigned long long inlen,
-                                const unsigned char *k);
+                                const unsigned char *k)
+            __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_poly1305_verify(const unsigned char *h,
                                        const unsigned char *in,
                                        unsigned long long inlen,
                                        const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_poly1305_init(crypto_onetimeauth_poly1305_state *state,
-                                     const unsigned char *key);
+                                     const unsigned char *key)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_poly1305_update(crypto_onetimeauth_poly1305_state *state,
                                        const unsigned char *in,
-                                       unsigned long long inlen);
+                                       unsigned long long inlen)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int crypto_onetimeauth_poly1305_final(crypto_onetimeauth_poly1305_state *state,
-                                      unsigned char *out);
-
-/* ------------------------------------------------------------------------- */
+                                      unsigned char *out)
+            __attribute__ ((nonnull));
 
-int _crypto_onetimeauth_poly1305_pick_best_implementation(void);
+SODIUM_EXPORT
+void crypto_onetimeauth_poly1305_keygen(unsigned char k[crypto_onetimeauth_poly1305_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h b/libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h
index 165f318..5c0bf7d 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_pwhash_scryptsalsa208sha256.h
@@ -1,18 +1,36 @@
 #ifndef crypto_pwhash_scryptsalsa208sha256_H
 #define crypto_pwhash_scryptsalsa208sha256_H
 
+#include <limits.h>
 #include <stddef.h>
 #include <stdint.h>
 
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
+#define crypto_pwhash_scryptsalsa208sha256_BYTES_MIN 16U
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_bytes_min(void);
+
+#define crypto_pwhash_scryptsalsa208sha256_BYTES_MAX \
+    SODIUM_MIN(SODIUM_SIZE_MAX, 0x1fffffffe0ULL)
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_bytes_max(void);
+
+#define crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN 0U
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_passwd_min(void);
+
+#define crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX SODIUM_SIZE_MAX
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_passwd_max(void);
+
 #define crypto_pwhash_scryptsalsa208sha256_SALTBYTES 32U
 SODIUM_EXPORT
 size_t crypto_pwhash_scryptsalsa208sha256_saltbytes(void);
@@ -25,19 +43,36 @@ size_t crypto_pwhash_scryptsalsa208sha256_strbytes(void);
 SODIUM_EXPORT
 const char *crypto_pwhash_scryptsalsa208sha256_strprefix(void);
 
-#define crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE 524288ULL
+#define crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN 32768U
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_opslimit_min(void);
+
+#define crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX 4294967295U
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_opslimit_max(void);
+
+#define crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN 16777216U
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_memlimit_min(void);
+
+#define crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX \
+    SODIUM_MIN(SIZE_MAX, 68719476736ULL)
+SODIUM_EXPORT
+size_t crypto_pwhash_scryptsalsa208sha256_memlimit_max(void);
+
+#define crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE 524288U
 SODIUM_EXPORT
 size_t crypto_pwhash_scryptsalsa208sha256_opslimit_interactive(void);
 
-#define crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE 16777216ULL
+#define crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE 16777216U
 SODIUM_EXPORT
 size_t crypto_pwhash_scryptsalsa208sha256_memlimit_interactive(void);
 
-#define crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE 33554432ULL
+#define crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE 33554432U
 SODIUM_EXPORT
 size_t crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive(void);
 
-#define crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE 1073741824ULL
+#define crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE 1073741824U
 SODIUM_EXPORT
 size_t crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive(void);
 
@@ -49,7 +84,7 @@ int crypto_pwhash_scryptsalsa208sha256(unsigned char * const out,
                                        const unsigned char * const salt,
                                        unsigned long long opslimit,
                                        size_t memlimit)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_pwhash_scryptsalsa208sha256_str(char out[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
@@ -57,20 +92,26 @@ int crypto_pwhash_scryptsalsa208sha256_str(char out[crypto_pwhash_scryptsalsa208
                                            unsigned long long passwdlen,
                                            unsigned long long opslimit,
                                            size_t memlimit)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_pwhash_scryptsalsa208sha256_str_verify(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
                                                   const char * const passwd,
                                                   unsigned long long passwdlen)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_pwhash_scryptsalsa208sha256_ll(const uint8_t * passwd, size_t passwdlen,
                                           const uint8_t * salt, size_t saltlen,
                                           uint64_t N, uint32_t r, uint32_t p,
                                           uint8_t * buf, size_t buflen)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash(const char str[crypto_pwhash_scryptsalsa208sha256_STRBYTES],
+                                                        unsigned long long opslimit,
+                                                        size_t memlimit)
+            __attribute__ ((warn_unused_result))  __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_scalarmult.h b/libsodium/src/libsodium/include/sodium/crypto_scalarmult.h
index 830c10f..1c68585 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_scalarmult.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_scalarmult.h
@@ -23,12 +23,21 @@ SODIUM_EXPORT
 const char *crypto_scalarmult_primitive(void);
 
 SODIUM_EXPORT
-int crypto_scalarmult_base(unsigned char *q, const unsigned char *n);
-
+int crypto_scalarmult_base(unsigned char *q, const unsigned char *n)
+            __attribute__ ((nonnull));
+
+/*
+ * NOTE: Do not use the result of this function directly for key exchange.
+ *
+ * Hash the result with the public keys in order to compute a shared
+ * secret key: H(q || client_pk || server_pk)
+ *
+ * Or unless this is not an option, use the crypto_kx() API instead.
+ */
 SODIUM_EXPORT
 int crypto_scalarmult(unsigned char *q, const unsigned char *n,
                       const unsigned char *p)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h b/libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h
index 953f892..60e9d0c 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_scalarmult_curve25519.h
@@ -17,17 +17,23 @@ size_t crypto_scalarmult_curve25519_bytes(void);
 SODIUM_EXPORT
 size_t crypto_scalarmult_curve25519_scalarbytes(void);
 
+/*
+ * NOTE: Do not use the result of this function directly for key exchange.
+ *
+ * Hash the result with the public keys in order to compute a shared
+ * secret key: H(q || client_pk || server_pk)
+ *
+ * Or unless this is not an option, use the crypto_kx() API instead.
+ */
 SODIUM_EXPORT
 int crypto_scalarmult_curve25519(unsigned char *q, const unsigned char *n,
                                  const unsigned char *p)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
-int crypto_scalarmult_curve25519_base(unsigned char *q, const unsigned char *n);
-
-/* ------------------------------------------------------------------------- */
-
-int _crypto_scalarmult_curve25519_pick_best_implementation(void);
+int crypto_scalarmult_curve25519_base(unsigned char *q,
+                                      const unsigned char *n)
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_secretbox.h b/libsodium/src/libsodium/include/sodium/crypto_secretbox.h
index db68fab..1d3709d 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_secretbox.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_secretbox.h
@@ -7,7 +7,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -29,23 +29,28 @@ size_t  crypto_secretbox_macbytes(void);
 SODIUM_EXPORT
 const char *crypto_secretbox_primitive(void);
 
+#define crypto_secretbox_MESSAGEBYTES_MAX crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX
+SODIUM_EXPORT
+size_t crypto_secretbox_messagebytes_max(void);
+
 SODIUM_EXPORT
 int crypto_secretbox_easy(unsigned char *c, const unsigned char *m,
                           unsigned long long mlen, const unsigned char *n,
-                          const unsigned char *k);
+                          const unsigned char *k) __attribute__ ((nonnull(1, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_secretbox_open_easy(unsigned char *m, const unsigned char *c,
                                unsigned long long clen, const unsigned char *n,
                                const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_secretbox_detached(unsigned char *c, unsigned char *mac,
                               const unsigned char *m,
                               unsigned long long mlen,
                               const unsigned char *n,
-                              const unsigned char *k);
+                              const unsigned char *k)
+            __attribute__ ((nonnull(1, 2, 5, 6)));
 
 SODIUM_EXPORT
 int crypto_secretbox_open_detached(unsigned char *m,
@@ -54,7 +59,11 @@ int crypto_secretbox_open_detached(unsigned char *m,
                                    unsigned long long clen,
                                    const unsigned char *n,
                                    const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 3, 5, 6)));
+
+SODIUM_EXPORT
+void crypto_secretbox_keygen(unsigned char k[crypto_secretbox_KEYBYTES])
+            __attribute__ ((nonnull));
 
 /* -- NaCl compatibility interface ; Requires padding -- */
 
@@ -69,13 +78,13 @@ size_t  crypto_secretbox_boxzerobytes(void);
 SODIUM_EXPORT
 int crypto_secretbox(unsigned char *c, const unsigned char *m,
                      unsigned long long mlen, const unsigned char *n,
-                     const unsigned char *k);
+                     const unsigned char *k) __attribute__ ((nonnull(1, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_secretbox_open(unsigned char *m, const unsigned char *c,
                           unsigned long long clen, const unsigned char *n,
                           const unsigned char *k)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5)));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h b/libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h
index 4afc2cd..be0874c 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_secretbox_xsalsa20poly1305.h
@@ -2,10 +2,11 @@
 #define crypto_secretbox_xsalsa20poly1305_H
 
 #include <stddef.h>
+#include "crypto_stream_xsalsa20.h"
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -19,33 +20,47 @@ size_t crypto_secretbox_xsalsa20poly1305_keybytes(void);
 SODIUM_EXPORT
 size_t crypto_secretbox_xsalsa20poly1305_noncebytes(void);
 
-#define crypto_secretbox_xsalsa20poly1305_ZEROBYTES 32U
+#define crypto_secretbox_xsalsa20poly1305_MACBYTES 16U
 SODIUM_EXPORT
-size_t crypto_secretbox_xsalsa20poly1305_zerobytes(void);
-
-#define crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES 16U
-SODIUM_EXPORT
-size_t crypto_secretbox_xsalsa20poly1305_boxzerobytes(void);
+size_t crypto_secretbox_xsalsa20poly1305_macbytes(void);
 
-#define crypto_secretbox_xsalsa20poly1305_MACBYTES \
-    (crypto_secretbox_xsalsa20poly1305_ZEROBYTES - \
-     crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES)
+/* Only for the libsodium API - The NaCl compatibility API would require BOXZEROBYTES extra bytes */
+#define crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX \
+    (crypto_stream_xsalsa20_MESSAGEBYTES_MAX - crypto_secretbox_xsalsa20poly1305_MACBYTES)
 SODIUM_EXPORT
-size_t crypto_secretbox_xsalsa20poly1305_macbytes(void);
+size_t crypto_secretbox_xsalsa20poly1305_messagebytes_max(void);
 
 SODIUM_EXPORT
 int crypto_secretbox_xsalsa20poly1305(unsigned char *c,
                                       const unsigned char *m,
                                       unsigned long long mlen,
                                       const unsigned char *n,
-                                      const unsigned char *k);
+                                      const unsigned char *k)
+            __attribute__ ((nonnull(1, 4, 5)));
 
 SODIUM_EXPORT
 int crypto_secretbox_xsalsa20poly1305_open(unsigned char *m,
                                            const unsigned char *c,
                                            unsigned long long clen,
                                            const unsigned char *n,
-                                           const unsigned char *k);
+                                           const unsigned char *k)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(2, 4, 5)));
+
+SODIUM_EXPORT
+void crypto_secretbox_xsalsa20poly1305_keygen(unsigned char k[crypto_secretbox_xsalsa20poly1305_KEYBYTES])
+            __attribute__ ((nonnull));
+
+/* -- NaCl compatibility interface ; Requires padding -- */
+
+#define crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES 16U
+SODIUM_EXPORT
+size_t crypto_secretbox_xsalsa20poly1305_boxzerobytes(void);
+
+#define crypto_secretbox_xsalsa20poly1305_ZEROBYTES \
+    (crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES + \
+     crypto_secretbox_xsalsa20poly1305_MACBYTES)
+SODIUM_EXPORT
+size_t crypto_secretbox_xsalsa20poly1305_zerobytes(void);
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_shorthash.h b/libsodium/src/libsodium/include/sodium/crypto_shorthash.h
index 5458b9c..fecaa88 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_shorthash.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_shorthash.h
@@ -7,7 +7,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -27,7 +27,12 @@ const char *crypto_shorthash_primitive(void);
 
 SODIUM_EXPORT
 int crypto_shorthash(unsigned char *out, const unsigned char *in,
-                     unsigned long long inlen, const unsigned char *k);
+                     unsigned long long inlen, const unsigned char *k)
+            __attribute__ ((nonnull(1, 4)));
+
+SODIUM_EXPORT
+void crypto_shorthash_keygen(unsigned char k[crypto_shorthash_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h b/libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h
index a2cab0c..1e6f72a 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_shorthash_siphash24.h
@@ -5,12 +5,14 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
+/* -- 64-bit output -- */
+
 #define crypto_shorthash_siphash24_BYTES 8U
 SODIUM_EXPORT
 size_t crypto_shorthash_siphash24_bytes(void);
@@ -21,7 +23,25 @@ size_t crypto_shorthash_siphash24_keybytes(void);
 
 SODIUM_EXPORT
 int crypto_shorthash_siphash24(unsigned char *out, const unsigned char *in,
-                               unsigned long long inlen, const unsigned char *k);
+                               unsigned long long inlen, const unsigned char *k)
+            __attribute__ ((nonnull(1, 4)));
+
+#ifndef SODIUM_LIBRARY_MINIMAL
+/* -- 128-bit output -- */
+
+#define crypto_shorthash_siphashx24_BYTES 16U
+SODIUM_EXPORT
+size_t crypto_shorthash_siphashx24_bytes(void);
+
+#define crypto_shorthash_siphashx24_KEYBYTES 16U
+SODIUM_EXPORT
+size_t crypto_shorthash_siphashx24_keybytes(void);
+
+SODIUM_EXPORT
+int crypto_shorthash_siphashx24(unsigned char *out, const unsigned char *in,
+                                unsigned long long inlen, const unsigned char *k)
+            __attribute__ ((nonnull(1, 4)));
+#endif
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_sign.h b/libsodium/src/libsodium/include/sodium/crypto_sign.h
index ad390a7..f5fafb1 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_sign.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_sign.h
@@ -3,8 +3,8 @@
 
 /*
  * THREAD SAFETY: crypto_sign_keypair() is thread-safe,
- * provided that you called sodium_init() once before using any
- * other libsodium function.
+ * provided that sodium_init() was called before.
+ *
  * Other functions, including crypto_sign_seed_keypair() are always thread-safe.
  */
 
@@ -14,12 +14,17 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
+typedef crypto_sign_ed25519ph_state crypto_sign_state;
+
+SODIUM_EXPORT
+size_t  crypto_sign_statebytes(void);
+
 #define crypto_sign_BYTES crypto_sign_ed25519_BYTES
 SODIUM_EXPORT
 size_t  crypto_sign_bytes(void);
@@ -36,39 +41,64 @@ size_t  crypto_sign_publickeybytes(void);
 SODIUM_EXPORT
 size_t  crypto_sign_secretkeybytes(void);
 
+#define crypto_sign_MESSAGEBYTES_MAX crypto_sign_ed25519_MESSAGEBYTES_MAX
+SODIUM_EXPORT
+size_t  crypto_sign_messagebytes_max(void);
+
 #define crypto_sign_PRIMITIVE "ed25519"
 SODIUM_EXPORT
 const char *crypto_sign_primitive(void);
 
 SODIUM_EXPORT
 int crypto_sign_seed_keypair(unsigned char *pk, unsigned char *sk,
-                             const unsigned char *seed);
+                             const unsigned char *seed)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
-int crypto_sign_keypair(unsigned char *pk, unsigned char *sk);
+int crypto_sign_keypair(unsigned char *pk, unsigned char *sk)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_sign(unsigned char *sm, unsigned long long *smlen_p,
                 const unsigned char *m, unsigned long long mlen,
-                const unsigned char *sk);
+                const unsigned char *sk) __attribute__ ((nonnull(1, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_open(unsigned char *m, unsigned long long *mlen_p,
                      const unsigned char *sm, unsigned long long smlen,
                      const unsigned char *pk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(3, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_detached(unsigned char *sig, unsigned long long *siglen_p,
                          const unsigned char *m, unsigned long long mlen,
-                         const unsigned char *sk);
+                         const unsigned char *sk) __attribute__ ((nonnull(1, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_verify_detached(const unsigned char *sig,
                                 const unsigned char *m,
                                 unsigned long long mlen,
                                 const unsigned char *pk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
+
+SODIUM_EXPORT
+int crypto_sign_init(crypto_sign_state *state);
+
+SODIUM_EXPORT
+int crypto_sign_update(crypto_sign_state *state,
+                       const unsigned char *m, unsigned long long mlen)
+            __attribute__ ((nonnull(1)));
+
+SODIUM_EXPORT
+int crypto_sign_final_create(crypto_sign_state *state, unsigned char *sig,
+                             unsigned long long *siglen_p,
+                             const unsigned char *sk)
+            __attribute__ ((nonnull(1, 2, 4)));
+
+SODIUM_EXPORT
+int crypto_sign_final_verify(crypto_sign_state *state, const unsigned char *sig,
+                             const unsigned char *pk)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h b/libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h
index 3c55d41..0fdac42 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_sign_ed25519.h
@@ -2,15 +2,23 @@
 #define crypto_sign_ed25519_H
 
 #include <stddef.h>
+#include "crypto_hash_sha512.h"
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
+typedef struct crypto_sign_ed25519ph_state {
+    crypto_hash_sha512_state hs;
+} crypto_sign_ed25519ph_state;
+
+SODIUM_EXPORT
+size_t crypto_sign_ed25519ph_statebytes(void);
+
 #define crypto_sign_ed25519_BYTES 64U
 SODIUM_EXPORT
 size_t crypto_sign_ed25519_bytes(void);
@@ -27,53 +35,87 @@ size_t crypto_sign_ed25519_publickeybytes(void);
 SODIUM_EXPORT
 size_t crypto_sign_ed25519_secretkeybytes(void);
 
+#define crypto_sign_ed25519_MESSAGEBYTES_MAX (SODIUM_SIZE_MAX - crypto_sign_ed25519_BYTES)
+SODIUM_EXPORT
+size_t crypto_sign_ed25519_messagebytes_max(void);
+
 SODIUM_EXPORT
 int crypto_sign_ed25519(unsigned char *sm, unsigned long long *smlen_p,
                         const unsigned char *m, unsigned long long mlen,
-                        const unsigned char *sk);
+                        const unsigned char *sk)
+            __attribute__ ((nonnull(1, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_ed25519_open(unsigned char *m, unsigned long long *mlen_p,
                              const unsigned char *sm, unsigned long long smlen,
                              const unsigned char *pk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(3, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_ed25519_detached(unsigned char *sig,
                                  unsigned long long *siglen_p,
                                  const unsigned char *m,
                                  unsigned long long mlen,
-                                 const unsigned char *sk);
+                                 const unsigned char *sk)
+            __attribute__ ((nonnull(1, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_ed25519_verify_detached(const unsigned char *sig,
                                         const unsigned char *m,
                                         unsigned long long mlen,
                                         const unsigned char *pk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull(1, 4)));
 
 SODIUM_EXPORT
-int crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk);
+int crypto_sign_ed25519_keypair(unsigned char *pk, unsigned char *sk)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_sign_ed25519_seed_keypair(unsigned char *pk, unsigned char *sk,
-                                     const unsigned char *seed);
+                                     const unsigned char *seed)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_sign_ed25519_pk_to_curve25519(unsigned char *curve25519_pk,
                                          const unsigned char *ed25519_pk)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_sign_ed25519_sk_to_curve25519(unsigned char *curve25519_sk,
-                                         const unsigned char *ed25519_sk);
+                                         const unsigned char *ed25519_sk)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_sign_ed25519_sk_to_seed(unsigned char *seed,
-                                   const unsigned char *sk);
+                                   const unsigned char *sk)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int crypto_sign_ed25519_sk_to_pk(unsigned char *pk, const unsigned char *sk)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int crypto_sign_ed25519ph_init(crypto_sign_ed25519ph_state *state)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int crypto_sign_ed25519ph_update(crypto_sign_ed25519ph_state *state,
+                                 const unsigned char *m,
+                                 unsigned long long mlen)
+            __attribute__ ((nonnull(1)));
+
+SODIUM_EXPORT
+int crypto_sign_ed25519ph_final_create(crypto_sign_ed25519ph_state *state,
+                                       unsigned char *sig,
+                                       unsigned long long *siglen_p,
+                                       const unsigned char *sk)
+            __attribute__ ((nonnull(1, 2, 4)));
 
 SODIUM_EXPORT
-int crypto_sign_ed25519_sk_to_pk(unsigned char *pk, const unsigned char *sk);
+int crypto_sign_ed25519ph_final_verify(crypto_sign_ed25519ph_state *state,
+                                       const unsigned char *sig,
+                                       const unsigned char *pk)
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h b/libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h
index 77117c7..eed158a 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_sign_edwards25519sha512batch.h
@@ -16,26 +16,16 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
 #endif
 
 #define crypto_sign_edwards25519sha512batch_BYTES 64U
-SODIUM_EXPORT
-size_t crypto_sign_edwards25519sha512batch_bytes(void)
-       __attribute__ ((deprecated));
-
 #define crypto_sign_edwards25519sha512batch_PUBLICKEYBYTES 32U
-SODIUM_EXPORT
-size_t crypto_sign_edwards25519sha512batch_publickeybytes(void)
-       __attribute__ ((deprecated));
-
 #define crypto_sign_edwards25519sha512batch_SECRETKEYBYTES (32U + 32U)
-SODIUM_EXPORT
-size_t crypto_sign_edwards25519sha512batch_secretkeybytes(void)
-       __attribute__ ((deprecated));
+#define crypto_sign_edwards25519sha512batch_MESSAGEBYTES_MAX (SODIUM_SIZE_MAX - crypto_sign_edwards25519sha512batch_BYTES)
 
 SODIUM_EXPORT
 int crypto_sign_edwards25519sha512batch(unsigned char *sm,
@@ -43,7 +33,7 @@ int crypto_sign_edwards25519sha512batch(unsigned char *sm,
                                         const unsigned char *m,
                                         unsigned long long mlen,
                                         const unsigned char *sk)
-       __attribute__ ((deprecated));
+            __attribute__ ((deprecated)) __attribute__ ((nonnull(1, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_edwards25519sha512batch_open(unsigned char *m,
@@ -51,12 +41,12 @@ int crypto_sign_edwards25519sha512batch_open(unsigned char *m,
                                              const unsigned char *sm,
                                              unsigned long long smlen,
                                              const unsigned char *pk)
-       __attribute__ ((deprecated));
+            __attribute__ ((deprecated)) __attribute__ ((nonnull(3, 5)));
 
 SODIUM_EXPORT
 int crypto_sign_edwards25519sha512batch_keypair(unsigned char *pk,
                                                 unsigned char *sk)
-       __attribute__ ((deprecated));
+            __attribute__ ((deprecated)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_stream.h b/libsodium/src/libsodium/include/sodium/crypto_stream.h
index b0c6c41..88dab5f 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_stream.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_stream.h
@@ -15,7 +15,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -29,18 +29,28 @@ size_t  crypto_stream_keybytes(void);
 SODIUM_EXPORT
 size_t  crypto_stream_noncebytes(void);
 
+#define crypto_stream_MESSAGEBYTES_MAX crypto_stream_xsalsa20_MESSAGEBYTES_MAX
+SODIUM_EXPORT
+size_t  crypto_stream_messagebytes_max(void);
+
 #define crypto_stream_PRIMITIVE "xsalsa20"
 SODIUM_EXPORT
 const char *crypto_stream_primitive(void);
 
 SODIUM_EXPORT
 int crypto_stream(unsigned char *c, unsigned long long clen,
-                  const unsigned char *n, const unsigned char *k);
+                  const unsigned char *n, const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_xor(unsigned char *c, const unsigned char *m,
                       unsigned long long mlen, const unsigned char *n,
-                      const unsigned char *k);
+                      const unsigned char *k)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_stream_keygen(unsigned char k[crypto_stream_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h b/libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h
deleted file mode 100644
index 2913319..0000000
--- a/libsodium/src/libsodium/include/sodium/crypto_stream_aes128ctr.h
+++ /dev/null
@@ -1,60 +0,0 @@
-#ifndef crypto_stream_aes128ctr_H
-#define crypto_stream_aes128ctr_H
-
-/*
- *  WARNING: This is just a stream cipher. It is NOT authenticated encryption.
- *  While it provides some protection against eavesdropping, it does NOT
- *  provide any security against active attacks.
- *  Unless you know what you're doing, what you are looking for is probably
- *  the crypto_box functions.
- */
-
-#include <stddef.h>
-#include "export.h"
-
-#ifdef __cplusplus
-# if __GNUC__
-#  pragma GCC diagnostic ignored "-Wlong-long"
-# endif
-extern "C" {
-#endif
-
-#define crypto_stream_aes128ctr_KEYBYTES 16U
-SODIUM_EXPORT
-size_t crypto_stream_aes128ctr_keybytes(void);
-
-#define crypto_stream_aes128ctr_NONCEBYTES 16U
-SODIUM_EXPORT
-size_t crypto_stream_aes128ctr_noncebytes(void);
-
-#define crypto_stream_aes128ctr_BEFORENMBYTES 1408U
-SODIUM_EXPORT
-size_t crypto_stream_aes128ctr_beforenmbytes(void);
-
-SODIUM_EXPORT
-int crypto_stream_aes128ctr(unsigned char *out, unsigned long long outlen,
-                            const unsigned char *n, const unsigned char *k);
-
-SODIUM_EXPORT
-int crypto_stream_aes128ctr_xor(unsigned char *out, const unsigned char *in,
-                                unsigned long long inlen, const unsigned char *n,
-                                const unsigned char *k);
-
-SODIUM_EXPORT
-int crypto_stream_aes128ctr_beforenm(unsigned char *c, const unsigned char *k);
-
-SODIUM_EXPORT
-int crypto_stream_aes128ctr_afternm(unsigned char *out, unsigned long long len,
-                                    const unsigned char *nonce, const unsigned char *c);
-
-SODIUM_EXPORT
-int crypto_stream_aes128ctr_xor_afternm(unsigned char *out, const unsigned char *in,
-                                        unsigned long long len,
-                                        const unsigned char *nonce,
-                                        const unsigned char *c);
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h b/libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h
index 507e9b0..4088975 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_stream_chacha20.h
@@ -14,7 +14,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -28,47 +28,76 @@ size_t crypto_stream_chacha20_keybytes(void);
 SODIUM_EXPORT
 size_t crypto_stream_chacha20_noncebytes(void);
 
+#define crypto_stream_chacha20_MESSAGEBYTES_MAX SODIUM_SIZE_MAX
+SODIUM_EXPORT
+size_t crypto_stream_chacha20_messagebytes_max(void);
+
 /* ChaCha20 with a 64-bit nonce and a 64-bit counter, as originally designed */
 
 SODIUM_EXPORT
 int crypto_stream_chacha20(unsigned char *c, unsigned long long clen,
-                           const unsigned char *n, const unsigned char *k);
+                           const unsigned char *n, const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_chacha20_xor(unsigned char *c, const unsigned char *m,
                                unsigned long long mlen, const unsigned char *n,
-                               const unsigned char *k);
+                               const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_chacha20_xor_ic(unsigned char *c, const unsigned char *m,
                                   unsigned long long mlen,
                                   const unsigned char *n, uint64_t ic,
-                                  const unsigned char *k);
+                                  const unsigned char *k)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_stream_chacha20_keygen(unsigned char k[crypto_stream_chacha20_KEYBYTES])
+            __attribute__ ((nonnull));
 
 /* ChaCha20 with a 96-bit nonce and a 32-bit counter (IETF) */
 
-#define crypto_stream_chacha20_IETF_NONCEBYTES 12U
+#define crypto_stream_chacha20_ietf_KEYBYTES 32U
+SODIUM_EXPORT
+size_t crypto_stream_chacha20_ietf_keybytes(void);
+
+#define crypto_stream_chacha20_ietf_NONCEBYTES 12U
 SODIUM_EXPORT
 size_t crypto_stream_chacha20_ietf_noncebytes(void);
 
+#define crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX \
+    SODIUM_MIN(SODIUM_SIZE_MAX, 64ULL * (1ULL << 32))
+SODIUM_EXPORT
+size_t crypto_stream_chacha20_ietf_messagebytes_max(void);
+
 SODIUM_EXPORT
 int crypto_stream_chacha20_ietf(unsigned char *c, unsigned long long clen,
-                                const unsigned char *n, const unsigned char *k);
+                                const unsigned char *n, const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_chacha20_ietf_xor(unsigned char *c, const unsigned char *m,
                                     unsigned long long mlen, const unsigned char *n,
-                                    const unsigned char *k);
+                                    const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_chacha20_ietf_xor_ic(unsigned char *c, const unsigned char *m,
                                        unsigned long long mlen,
                                        const unsigned char *n, uint32_t ic,
-                                       const unsigned char *k);
+                                       const unsigned char *k)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_stream_chacha20_ietf_keygen(unsigned char k[crypto_stream_chacha20_ietf_KEYBYTES])
+            __attribute__ ((nonnull));
 
-/* ------------------------------------------------------------------------- */
+/* Aliases */
 
-int _crypto_stream_chacha20_pick_best_implementation(void);
+#define crypto_stream_chacha20_IETF_KEYBYTES crypto_stream_chacha20_ietf_KEYBYTES
+#define crypto_stream_chacha20_IETF_NONCEBYTES crypto_stream_chacha20_ietf_NONCEBYTES
+#define crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h b/libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h
index 1c06512..45b3b3e 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_stream_salsa20.h
@@ -14,7 +14,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -28,20 +28,32 @@ size_t crypto_stream_salsa20_keybytes(void);
 SODIUM_EXPORT
 size_t crypto_stream_salsa20_noncebytes(void);
 
+#define crypto_stream_salsa20_MESSAGEBYTES_MAX SODIUM_SIZE_MAX
+SODIUM_EXPORT
+size_t crypto_stream_salsa20_messagebytes_max(void);
+
 SODIUM_EXPORT
 int crypto_stream_salsa20(unsigned char *c, unsigned long long clen,
-                          const unsigned char *n, const unsigned char *k);
+                          const unsigned char *n, const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_salsa20_xor(unsigned char *c, const unsigned char *m,
                               unsigned long long mlen, const unsigned char *n,
-                              const unsigned char *k);
+                              const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_salsa20_xor_ic(unsigned char *c, const unsigned char *m,
                                  unsigned long long mlen,
                                  const unsigned char *n, uint64_t ic,
-                                 const unsigned char *k);
+                                 const unsigned char *k)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_stream_salsa20_keygen(unsigned char k[crypto_stream_salsa20_KEYBYTES])
+            __attribute__ ((nonnull));
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h b/libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h
index 6fcf436..6c5d303 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_stream_salsa2012.h
@@ -13,7 +13,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -27,14 +27,24 @@ size_t crypto_stream_salsa2012_keybytes(void);
 SODIUM_EXPORT
 size_t crypto_stream_salsa2012_noncebytes(void);
 
+#define crypto_stream_salsa2012_MESSAGEBYTES_MAX SODIUM_SIZE_MAX
+SODIUM_EXPORT
+size_t crypto_stream_salsa2012_messagebytes_max(void);
+
 SODIUM_EXPORT
 int crypto_stream_salsa2012(unsigned char *c, unsigned long long clen,
-                            const unsigned char *n, const unsigned char *k);
+                            const unsigned char *n, const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_salsa2012_xor(unsigned char *c, const unsigned char *m,
                                 unsigned long long mlen, const unsigned char *n,
-                                const unsigned char *k);
+                                const unsigned char *k)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_stream_salsa2012_keygen(unsigned char k[crypto_stream_salsa2012_KEYBYTES])
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h b/libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h
index a8fd2ce..d574f30 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_stream_salsa208.h
@@ -13,7 +13,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -21,20 +21,33 @@ extern "C" {
 
 #define crypto_stream_salsa208_KEYBYTES 32U
 SODIUM_EXPORT
-size_t crypto_stream_salsa208_keybytes(void);
+size_t crypto_stream_salsa208_keybytes(void)
+            __attribute__ ((deprecated));
 
 #define crypto_stream_salsa208_NONCEBYTES 8U
 SODIUM_EXPORT
-size_t crypto_stream_salsa208_noncebytes(void);
+size_t crypto_stream_salsa208_noncebytes(void)
+            __attribute__ ((deprecated));
+
+#define crypto_stream_salsa208_MESSAGEBYTES_MAX SODIUM_SIZE_MAX
+    SODIUM_EXPORT
+size_t crypto_stream_salsa208_messagebytes_max(void)
+            __attribute__ ((deprecated));
 
 SODIUM_EXPORT
 int crypto_stream_salsa208(unsigned char *c, unsigned long long clen,
-                           const unsigned char *n, const unsigned char *k);
+                           const unsigned char *n, const unsigned char *k)
+            __attribute__ ((deprecated)) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_salsa208_xor(unsigned char *c, const unsigned char *m,
                                unsigned long long mlen, const unsigned char *n,
-                               const unsigned char *k);
+                               const unsigned char *k)
+            __attribute__ ((deprecated)) __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_stream_salsa208_keygen(unsigned char k[crypto_stream_salsa208_KEYBYTES])
+            __attribute__ ((deprecated)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h b/libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h
index c09425a..20034e3 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_stream_xsalsa20.h
@@ -14,7 +14,7 @@
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -28,20 +28,32 @@ size_t crypto_stream_xsalsa20_keybytes(void);
 SODIUM_EXPORT
 size_t crypto_stream_xsalsa20_noncebytes(void);
 
+#define crypto_stream_xsalsa20_MESSAGEBYTES_MAX SODIUM_SIZE_MAX
+SODIUM_EXPORT
+size_t crypto_stream_xsalsa20_messagebytes_max(void);
+
 SODIUM_EXPORT
 int crypto_stream_xsalsa20(unsigned char *c, unsigned long long clen,
-                           const unsigned char *n, const unsigned char *k);
+                           const unsigned char *n, const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_xsalsa20_xor(unsigned char *c, const unsigned char *m,
                                unsigned long long mlen, const unsigned char *n,
-                               const unsigned char *k);
+                               const unsigned char *k)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 int crypto_stream_xsalsa20_xor_ic(unsigned char *c, const unsigned char *m,
                                   unsigned long long mlen,
                                   const unsigned char *n, uint64_t ic,
-                                  const unsigned char *k);
+                                  const unsigned char *k)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+void crypto_stream_xsalsa20_keygen(unsigned char k[crypto_stream_xsalsa20_KEYBYTES])
+            __attribute__ ((nonnull));
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_uint16.h b/libsodium/src/libsodium/include/sodium/crypto_uint16.h
deleted file mode 100644
index 6be4e34..0000000
--- a/libsodium/src/libsodium/include/sodium/crypto_uint16.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef crypto_uint16_H
-#define crypto_uint16_H
-
-#include <stdint.h>
-
-typedef uint16_t crypto_uint16;
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_uint32.h b/libsodium/src/libsodium/include/sodium/crypto_uint32.h
deleted file mode 100644
index ba66cec..0000000
--- a/libsodium/src/libsodium/include/sodium/crypto_uint32.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef crypto_uint32_H
-#define crypto_uint32_H
-
-#include <stdint.h>
-
-typedef uint32_t crypto_uint32;
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_uint64.h b/libsodium/src/libsodium/include/sodium/crypto_uint64.h
deleted file mode 100644
index 98b3f6d..0000000
--- a/libsodium/src/libsodium/include/sodium/crypto_uint64.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef crypto_uint64_H
-#define crypto_uint64_H
-
-#include <stdint.h>
-
-typedef uint64_t crypto_uint64;
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_uint8.h b/libsodium/src/libsodium/include/sodium/crypto_uint8.h
deleted file mode 100644
index 789613b..0000000
--- a/libsodium/src/libsodium/include/sodium/crypto_uint8.h
+++ /dev/null
@@ -1,8 +0,0 @@
-#ifndef crypto_uint8_H
-#define crypto_uint8_H
-
-#include <stdint.h>
-
-typedef uint8_t crypto_uint8;
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/crypto_verify_16.h b/libsodium/src/libsodium/include/sodium/crypto_verify_16.h
index 5e9eeab..7b9c807 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_verify_16.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_verify_16.h
@@ -14,7 +14,7 @@ size_t crypto_verify_16_bytes(void);
 
 SODIUM_EXPORT
 int crypto_verify_16(const unsigned char *x, const unsigned char *y)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_verify_32.h b/libsodium/src/libsodium/include/sodium/crypto_verify_32.h
index 281b5a1..9b0f452 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_verify_32.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_verify_32.h
@@ -14,7 +14,7 @@ size_t crypto_verify_32_bytes(void);
 
 SODIUM_EXPORT
 int crypto_verify_32(const unsigned char *x, const unsigned char *y)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/crypto_verify_64.h b/libsodium/src/libsodium/include/sodium/crypto_verify_64.h
index 0dc7c30..c83b730 100644
--- a/libsodium/src/libsodium/include/sodium/crypto_verify_64.h
+++ b/libsodium/src/libsodium/include/sodium/crypto_verify_64.h
@@ -14,7 +14,7 @@ size_t crypto_verify_64_bytes(void);
 
 SODIUM_EXPORT
 int crypto_verify_64(const unsigned char *x, const unsigned char *y)
-            __attribute__ ((warn_unused_result));
+            __attribute__ ((warn_unused_result)) __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/export.h b/libsodium/src/libsodium/include/sodium/export.h
index 5b9c158..a0074fc 100644
--- a/libsodium/src/libsodium/include/sodium/export.h
+++ b/libsodium/src/libsodium/include/sodium/export.h
@@ -2,7 +2,11 @@
 #ifndef sodium_export_H
 #define sodium_export_H
 
-#ifndef __GNUC__
+#include <stddef.h>
+#include <stdint.h>
+#include <limits.h>
+
+#if !defined(__clang__) && !defined(__GNUC__)
 # ifdef __attribute__
 #  undef __attribute__
 # endif
@@ -11,6 +15,7 @@
 
 #ifdef SODIUM_STATIC
 # define SODIUM_EXPORT
+# define SODIUM_EXPORT_WEAK
 #else
 # if defined(_MSC_VER)
 #  ifdef SODIUM_DLL_EXPORT
@@ -21,7 +26,7 @@
 # else
 #  if defined(__SUNPRO_C)
 #   ifndef __GNU_C__
-#    define SODIUM_EXPORT __attribute__(visibility(__global))
+#    define SODIUM_EXPORT __attribute__ (visibility(__global))
 #   else
 #    define SODIUM_EXPORT __attribute__ __global
 #   endif
@@ -31,14 +36,22 @@
 #   define SODIUM_EXPORT __attribute__ ((visibility ("default")))
 #  endif
 # endif
+# if defined(__ELF__) && !defined(SODIUM_DISABLE_WEAK_FUNCTIONS)
+#  define SODIUM_EXPORT_WEAK SODIUM_EXPORT __attribute__((weak))
+# else
+#  define SODIUM_EXPORT_WEAK SODIUM_EXPORT
+# endif
 #endif
 
 #ifndef CRYPTO_ALIGN
 # if defined(__INTEL_COMPILER) || defined(_MSC_VER)
 #  define CRYPTO_ALIGN(x) __declspec(align(x))
 # else
-#  define CRYPTO_ALIGN(x) __attribute__((aligned(x)))
+#  define CRYPTO_ALIGN(x) __attribute__ ((aligned(x)))
 # endif
 #endif
 
+#define SODIUM_MIN(A, B) ((A) < (B) ? (A) : (B))
+#define SODIUM_SIZE_MAX SODIUM_MIN(UINT64_MAX, SIZE_MAX)
+
 #endif
diff --git a/libsodium/src/libsodium/include/sodium/randombytes.h b/libsodium/src/libsodium/include/sodium/randombytes.h
index 08aff05..a03cc65 100644
--- a/libsodium/src/libsodium/include/sodium/randombytes.h
+++ b/libsodium/src/libsodium/include/sodium/randombytes.h
@@ -2,15 +2,15 @@
 #ifndef randombytes_H
 #define randombytes_H
 
-#include <sys/types.h>
-
 #include <stddef.h>
 #include <stdint.h>
 
+#include <sys/types.h>
+
 #include "export.h"
 
 #ifdef __cplusplus
-# if __GNUC__
+# ifdef __GNUC__
 #  pragma GCC diagnostic ignored "-Wlong-long"
 # endif
 extern "C" {
@@ -25,8 +25,20 @@ typedef struct randombytes_implementation {
     int         (*close)(void);               /* optional */
 } randombytes_implementation;
 
+#define randombytes_BYTES_MAX SODIUM_MIN(SODIUM_SIZE_MAX, 0xffffffffUL)
+
+#define randombytes_SEEDBYTES 32U
+SODIUM_EXPORT
+size_t randombytes_seedbytes(void);
+
+SODIUM_EXPORT
+void randombytes_buf(void * const buf, const size_t size)
+            __attribute__ ((nonnull));
+
 SODIUM_EXPORT
-void randombytes_buf(void * const buf, const size_t size);
+void randombytes_buf_deterministic(void * const buf, const size_t size,
+                                   const unsigned char seed[randombytes_SEEDBYTES])
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 uint32_t randombytes_random(void);
@@ -41,7 +53,8 @@ SODIUM_EXPORT
 int randombytes_close(void);
 
 SODIUM_EXPORT
-int randombytes_set_implementation(randombytes_implementation *impl);
+int randombytes_set_implementation(randombytes_implementation *impl)
+            __attribute__ ((nonnull));
 
 SODIUM_EXPORT
 const char *randombytes_implementation_name(void);
@@ -49,7 +62,8 @@ const char *randombytes_implementation_name(void);
 /* -- NaCl compatibility interface -- */
 
 SODIUM_EXPORT
-void randombytes(unsigned char * const buf, const unsigned long long buf_len);
+void randombytes(unsigned char * const buf, const unsigned long long buf_len)
+            __attribute__ ((nonnull));
 
 #ifdef __cplusplus
 }
diff --git a/libsodium/src/libsodium/include/sodium/randombytes_nativeclient.h b/libsodium/src/libsodium/include/sodium/randombytes_nativeclient.h
deleted file mode 100644
index 5158d8c..0000000
--- a/libsodium/src/libsodium/include/sodium/randombytes_nativeclient.h
+++ /dev/null
@@ -1,23 +0,0 @@
-
-#ifndef randombytes_nativeclient_H
-#define randombytes_nativeclient_H
-
-#ifdef __native_client__
-
-# include "export.h"
-# include "randombytes.h"
-
-# ifdef __cplusplus
-extern "C" {
-# endif
-
-SODIUM_EXPORT
-extern struct randombytes_implementation randombytes_nativeclient_implementation;
-
-# ifdef __cplusplus
-}
-# endif
-
-#endif
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/randombytes_salsa20_random.h b/libsodium/src/libsodium/include/sodium/randombytes_salsa20_random.h
deleted file mode 100644
index 4deae15..0000000
--- a/libsodium/src/libsodium/include/sodium/randombytes_salsa20_random.h
+++ /dev/null
@@ -1,19 +0,0 @@
-
-#ifndef randombytes_salsa20_random_H
-#define randombytes_salsa20_random_H
-
-#include "export.h"
-#include "randombytes.h"
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-SODIUM_EXPORT
-extern struct randombytes_implementation randombytes_salsa20_implementation;
-
-#ifdef __cplusplus
-}
-#endif
-
-#endif
diff --git a/libsodium/src/libsodium/include/sodium/runtime.h b/libsodium/src/libsodium/include/sodium/runtime.h
index 2c5c004..7f15d58 100644
--- a/libsodium/src/libsodium/include/sodium/runtime.h
+++ b/libsodium/src/libsodium/include/sodium/runtime.h
@@ -8,30 +8,39 @@
 extern "C" {
 #endif
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_neon(void);
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_sse2(void);
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_sse3(void);
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_ssse3(void);
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_sse41(void);
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_avx(void);
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
+int sodium_runtime_has_avx2(void);
+
+SODIUM_EXPORT_WEAK
+int sodium_runtime_has_avx512f(void);
+
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_pclmul(void);
 
-SODIUM_EXPORT
+SODIUM_EXPORT_WEAK
 int sodium_runtime_has_aesni(void);
 
+SODIUM_EXPORT_WEAK
+int sodium_runtime_has_rdrand(void);
+
 /* ------------------------------------------------------------------------- */
 
 int _sodium_runtime_get_cpu_features(void);
diff --git a/libsodium/src/libsodium/include/sodium/utils.h b/libsodium/src/libsodium/include/sodium/utils.h
index 5fec3ec..ac80151 100644
--- a/libsodium/src/libsodium/include/sodium/utils.h
+++ b/libsodium/src/libsodium/include/sodium/utils.h
@@ -10,15 +10,20 @@
 extern "C" {
 #endif
 
-#if defined(__cplusplus) || !defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L
-# define SODIUM_C99(X)
-#else
-# define SODIUM_C99(X) X
+#ifndef SODIUM_C99
+# if defined(__cplusplus) || !defined(__STDC_VERSION__) || __STDC_VERSION__ < 199901L
+#  define SODIUM_C99(X)
+# else
+#  define SODIUM_C99(X) X
+# endif
 #endif
 
 SODIUM_EXPORT
 void sodium_memzero(void * const pnt, const size_t len);
 
+SODIUM_EXPORT
+void sodium_stackzero(const size_t len);
+
 /*
  * WARNING: sodium_memcmp() must be used to verify if two secret keys
  * are equal, in constant time.
@@ -37,8 +42,7 @@ int sodium_memcmp(const void * const b1_, const void * const b2_, size_t len)
  */
 SODIUM_EXPORT
 int sodium_compare(const unsigned char *b1_, const unsigned char *b2_,
-                   size_t len)
-            __attribute__ ((warn_unused_result));
+                   size_t len) __attribute__ ((warn_unused_result));
 
 SODIUM_EXPORT
 int sodium_is_zero(const unsigned char *n, const size_t nlen);
@@ -49,21 +53,57 @@ void sodium_increment(unsigned char *n, const size_t nlen);
 SODIUM_EXPORT
 void sodium_add(unsigned char *a, const unsigned char *b, const size_t len);
 
+SODIUM_EXPORT
+void sodium_sub(unsigned char *a, const unsigned char *b, const size_t len);
+
 SODIUM_EXPORT
 char *sodium_bin2hex(char * const hex, const size_t hex_maxlen,
-                     const unsigned char * const bin, const size_t bin_len);
+                     const unsigned char * const bin, const size_t bin_len)
+            __attribute__ ((nonnull(1)));
 
 SODIUM_EXPORT
 int sodium_hex2bin(unsigned char * const bin, const size_t bin_maxlen,
                    const char * const hex, const size_t hex_len,
                    const char * const ignore, size_t * const bin_len,
-                   const char ** const hex_end);
+                   const char ** const hex_end)
+            __attribute__ ((nonnull(1)));
+
+#define sodium_base64_VARIANT_ORIGINAL            1
+#define sodium_base64_VARIANT_ORIGINAL_NO_PADDING 3
+#define sodium_base64_VARIANT_URLSAFE             5
+#define sodium_base64_VARIANT_URLSAFE_NO_PADDING  7
+
+/*
+ * Computes the required length to encode BIN_LEN bytes as a base64 string
+ * using the given variant. The computed length includes a trailing \0.
+ */
+#define sodium_base64_ENCODED_LEN(BIN_LEN, VARIANT) \
+    (((BIN_LEN) / 3U) * 4U + \
+    ((((BIN_LEN) - ((BIN_LEN) / 3U) * 3U) | (((BIN_LEN) - ((BIN_LEN) / 3U) * 3U) >> 1)) & 1U) * \
+     (4U - (~((((VARIANT) & 2U) >> 1) - 1U) & (3U - ((BIN_LEN) - ((BIN_LEN) / 3U) * 3U)))) + 1U)
 
 SODIUM_EXPORT
-int sodium_mlock(void * const addr, const size_t len);
+size_t sodium_base64_encoded_len(const size_t bin_len, const int variant);
 
 SODIUM_EXPORT
-int sodium_munlock(void * const addr, const size_t len);
+char *sodium_bin2base64(char * const b64, const size_t b64_maxlen,
+                        const unsigned char * const bin, const size_t bin_len,
+                        const int variant) __attribute__ ((nonnull(1)));
+
+SODIUM_EXPORT
+int sodium_base642bin(unsigned char * const bin, const size_t bin_maxlen,
+                      const char * const b64, const size_t b64_len,
+                      const char * const ignore, size_t * const bin_len,
+                      const char ** const b64_end, const int variant)
+            __attribute__ ((nonnull(1)));
+
+SODIUM_EXPORT
+int sodium_mlock(void * const addr, const size_t len)
+            __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int sodium_munlock(void * const addr, const size_t len)
+            __attribute__ ((nonnull));
 
 /* WARNING: sodium_malloc() and sodium_allocarray() are not general-purpose
  * allocation functions.
@@ -88,15 +128,14 @@ int sodium_munlock(void * const addr, const size_t len);
  *   a multiple of the required alignment. For this reason, these functions
  *   are designed to store data, such as secret keys and messages.
  *
- * sodium_malloc() can be used to allocate any libsodium data structure,
- * with the exception of crypto_generichash_state.
+ * sodium_malloc() can be used to allocate any libsodium data structure.
  *
  * The crypto_generichash_state structure is packed and its length is
  * either 357 or 361 bytes. For this reason, when using sodium_malloc() to
  * allocate a crypto_generichash_state structure, padding must be added in
- * order to ensure proper alignment:
- * state = sodium_malloc((crypto_generichash_statebytes() + (size_t) 63U)
- *                       & ~(size_t) 63U);
+ * order to ensure proper alignment. crypto_generichash_statebytes()
+ * returns the rounded up structure size, and should be prefered to sizeof():
+ * state = sodium_malloc(crypto_generichash_statebytes());
  */
 
 SODIUM_EXPORT
@@ -111,13 +150,23 @@ SODIUM_EXPORT
 void sodium_free(void *ptr);
 
 SODIUM_EXPORT
-int sodium_mprotect_noaccess(void *ptr);
+int sodium_mprotect_noaccess(void *ptr) __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int sodium_mprotect_readonly(void *ptr) __attribute__ ((nonnull));
+
+SODIUM_EXPORT
+int sodium_mprotect_readwrite(void *ptr) __attribute__ ((nonnull));
 
 SODIUM_EXPORT
-int sodium_mprotect_readonly(void *ptr);
+int sodium_pad(size_t *padded_buflen_p, unsigned char *buf,
+               size_t unpadded_buflen, size_t blocksize, size_t max_buflen)
+            __attribute__ ((nonnull(2)));
 
 SODIUM_EXPORT
-int sodium_mprotect_readwrite(void *ptr);
+int sodium_unpad(size_t *unpadded_buflen_p, const unsigned char *buf,
+                 size_t padded_buflen, size_t blocksize)
+            __attribute__ ((nonnull(2)));
 
 /* -------- */
 
diff --git a/libsodium/src/libsodium/include/sodium/version.h.in b/libsodium/src/libsodium/include/sodium/version.h.in
index ef230ef..8a72044 100644
--- a/libsodium/src/libsodium/include/sodium/version.h.in
+++ b/libsodium/src/libsodium/include/sodium/version.h.in
@@ -8,6 +8,7 @@
 
 #define SODIUM_LIBRARY_VERSION_MAJOR @SODIUM_LIBRARY_VERSION_MAJOR@
 #define SODIUM_LIBRARY_VERSION_MINOR @SODIUM_LIBRARY_VERSION_MINOR@
+@SODIUM_LIBRARY_MINIMAL_DEF@
 
 #ifdef __cplusplus
 extern "C" {
@@ -22,6 +23,9 @@ int         sodium_library_version_major(void);
 SODIUM_EXPORT
 int         sodium_library_version_minor(void);
 
+SODIUM_EXPORT
+int         sodium_library_minimal(void);
+
 #ifdef __cplusplus
 }
 #endif
diff --git a/libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c b/libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c
deleted file mode 100644
index dd37446..0000000
--- a/libsodium/src/libsodium/randombytes/nativeclient/randombytes_nativeclient.c
+++ /dev/null
@@ -1,49 +0,0 @@
-
-#include <assert.h>
-#include <stdint.h>
-#include <stdlib.h>
-
-#ifdef __native_client__
-# include <nacl/nacl_random.h>
-
-# include "utils.h"
-# include "randombytes.h"
-# include "randombytes_nativeclient.h"
-
-static void
-randombytes_nativeclient_buf(void * const buf, const size_t size)
-{
-    size_t readnb;
-
-    if (nacl_secure_random(buf, size, &readnb) != 0) {
-        abort();
-    }
-    assert(readnb == size);
-}
-
-static uint32_t
-randombytes_nativeclient_random(void)
-{
-    uint32_t r;
-
-    randombytes_nativeclient_buf(&r, sizeof r);
-
-    return r;
-}
-
-static const char *
-randombytes_nativeclient_implementation_name(void)
-{
-    return "nativeclient";
-}
-
-struct randombytes_implementation randombytes_nativeclient_implementation = {
-    SODIUM_C99(.implementation_name =) randombytes_nativeclient_implementation_name,
-    SODIUM_C99(.random =) randombytes_nativeclient_random,
-    SODIUM_C99(.stir =) NULL,
-    SODIUM_C99(.uniform =) NULL,
-    SODIUM_C99(.buf =) randombytes_nativeclient_buf,
-    SODIUM_C99(.close =) NULL
-};
-
-#endif
diff --git a/libsodium/src/libsodium/randombytes/randombytes.c b/libsodium/src/libsodium/randombytes/randombytes.c
index c207600..8ac085f 100644
--- a/libsodium/src/libsodium/randombytes/randombytes.c
+++ b/libsodium/src/libsodium/randombytes/randombytes.c
@@ -1,34 +1,48 @@
 
-#include <stdlib.h>
-#include <sys/types.h>
-
 #include <assert.h>
 #include <limits.h>
 #include <stdint.h>
+#include <stdlib.h>
+
+#include <sys/types.h>
 
 #ifdef __EMSCRIPTEN__
 # include <emscripten.h>
 #endif
 
+#include "core.h"
+#include "crypto_stream_chacha20.h"
 #include "randombytes.h"
-#include "randombytes_sysrandom.h"
-
-#ifdef __native_client__
-# include "randombytes_nativeclient.h"
+#ifndef RANDOMBYTES_CUSTOM_IMPLEMENTATION
+# ifdef RANDOMBYTES_DEFAULT_IMPLEMENTATION
+#  include "randombytes_internal.h"
+# endif
+# include "randombytes_sysrandom.h"
 #endif
+#include "private/common.h"
 
-#ifndef __EMSCRIPTEN__
-#ifdef __native_client__
-static const randombytes_implementation *implementation =
-    &randombytes_nativeclient_implementation;
-#else
-static const randombytes_implementation *implementation =
-    &randombytes_sysrandom_implementation;
-#endif
-#else
-static const randombytes_implementation *implementation = NULL;
+/* C++Builder defines a "random" macro */
+#undef random
+
+static const randombytes_implementation *implementation;
+
+#ifndef RANDOMBYTES_DEFAULT_IMPLEMENTATION
+# ifdef __EMSCRIPTEN__
+#  define RANDOMBYTES_DEFAULT_IMPLEMENTATION NULL
+# else
+#  define RANDOMBYTES_DEFAULT_IMPLEMENTATION &randombytes_sysrandom_implementation;
+# endif
 #endif
 
+static void
+randombytes_init_if_needed(void)
+{
+    if (implementation == NULL) {
+        implementation = RANDOMBYTES_DEFAULT_IMPLEMENTATION;
+        randombytes_stir();
+    }
+}
+
 int
 randombytes_set_implementation(randombytes_implementation *impl)
 {
@@ -41,6 +55,7 @@ const char *
 randombytes_implementation_name(void)
 {
 #ifndef __EMSCRIPTEN__
+    randombytes_init_if_needed();
     return implementation->implementation_name();
 #else
     return "js";
@@ -51,6 +66,7 @@ uint32_t
 randombytes_random(void)
 {
 #ifndef __EMSCRIPTEN__
+    randombytes_init_if_needed();
     return implementation->random();
 #else
     return EM_ASM_INT_V({
@@ -63,29 +79,30 @@ void
 randombytes_stir(void)
 {
 #ifndef __EMSCRIPTEN__
-    if (implementation != NULL && implementation->stir != NULL) {
+    randombytes_init_if_needed();
+    if (implementation->stir != NULL) {
         implementation->stir();
     }
 #else
     EM_ASM({
         if (Module.getRandomValue === undefined) {
             try {
-                var window_ = "object" === typeof window ? window : self,
-                    crypto_ = typeof window_.crypto !== "undefined" ? window_.crypto : window_.msCrypto,
-                    randomValuesStandard = function() {
-                        var buf = new Uint32Array(1);
-                        crypto_.getRandomValues(buf);
-                        return buf[0] >>> 0;
-                    };
+                var window_ = 'object' === typeof window ? window : self;
+                var crypto_ = typeof window_.crypto !== 'undefined' ? window_.crypto : window_.msCrypto;
+                var randomValuesStandard = function() {
+                    var buf = new Uint32Array(1);
+                    crypto_.getRandomValues(buf);
+                    return buf[0] >>> 0;
+                };
                 randomValuesStandard();
                 Module.getRandomValue = randomValuesStandard;
             } catch (e) {
                 try {
-                    var crypto = require('crypto'),
-                        randomValueNodeJS = function() {
-                            var buf = crypto.randomBytes(4);
-                            return (buf[0] << 24 | buf[1] << 16 | buf[2] << 8 | buf[3]) >>> 0;
-                        };
+                    var crypto = require('crypto');
+                    var randomValueNodeJS = function() {
+                        var buf = crypto['randomBytes'](4);
+                        return (buf[0] << 24 | buf[1] << 16 | buf[2] << 8 | buf[3]) >>> 0;
+                    };
                     randomValueNodeJS();
                     Module.getRandomValue = randomValueNodeJS;
                 } catch (e) {
@@ -97,21 +114,14 @@ randombytes_stir(void)
 #endif
 }
 
-/*
- * randombytes_uniform() derives from OpenBSD's arc4random_uniform()
- * Copyright (c) 2008, Damien Miller <djm@openbsd.org>
- */
 uint32_t
 randombytes_uniform(const uint32_t upper_bound)
 {
     uint32_t min;
     uint32_t r;
 
-#ifdef __EMSCRIPTEN__
-    if (implementation != NULL && implementation->uniform != NULL) {
-        return implementation->uniform(upper_bound);
-    }
-#else
+#ifndef __EMSCRIPTEN__
+    randombytes_init_if_needed();
     if (implementation->uniform != NULL) {
         return implementation->uniform(upper_bound);
     }
@@ -119,10 +129,12 @@ randombytes_uniform(const uint32_t upper_bound)
     if (upper_bound < 2) {
         return 0;
     }
-    min = (uint32_t) (-upper_bound % upper_bound);
+    min = (1U + ~upper_bound) % upper_bound; /* = 2**32 mod upper_bound */
     do {
         r = randombytes_random();
     } while (r < min);
+    /* r is now clamped to a set whose size mod upper_bound == 0
+     * the worst case (2**31+1) requires ~ 2 attempts */
 
     return r % upper_bound;
 }
@@ -131,11 +143,12 @@ void
 randombytes_buf(void * const buf, const size_t size)
 {
 #ifndef __EMSCRIPTEN__
+    randombytes_init_if_needed();
     if (size > (size_t) 0U) {
         implementation->buf(buf, size);
     }
 #else
-    unsigned char *p = buf;
+    unsigned char *p = (unsigned char *) buf;
     size_t         i;
 
     for (i = (size_t) 0U; i < size; i++) {
@@ -144,6 +157,31 @@ randombytes_buf(void * const buf, const size_t size)
 #endif
 }
 
+void
+randombytes_buf_deterministic(void * const buf, const size_t size,
+                              const unsigned char seed[randombytes_SEEDBYTES])
+{
+    static const unsigned char nonce[crypto_stream_chacha20_ietf_NONCEBYTES] = {
+        'L', 'i', 'b', 's', 'o', 'd', 'i', 'u', 'm', 'D', 'R', 'G'
+    };
+
+    COMPILER_ASSERT(randombytes_SEEDBYTES == crypto_stream_chacha20_ietf_KEYBYTES);
+#if SIZE_MAX > 0x4000000000ULL
+    COMPILER_ASSERT(randombytes_BYTES_MAX <= 0x4000000000ULL);
+    if (size > 0x4000000000ULL) {
+        sodium_misuse();
+    }
+#endif
+    crypto_stream_chacha20_ietf((unsigned char *) buf, (unsigned long long) size,
+                                nonce, seed);
+}
+
+size_t
+randombytes_seedbytes(void)
+{
+    return randombytes_SEEDBYTES;
+}
+
 int
 randombytes_close(void)
 {
diff --git a/libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c b/libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c
deleted file mode 100644
index e89ee21..0000000
--- a/libsodium/src/libsodium/randombytes/salsa20/randombytes_salsa20_random.c
+++ /dev/null
@@ -1,438 +0,0 @@
-
-#include <stdlib.h>
-#include <sys/types.h>
-#ifndef _WIN32
-# include <sys/stat.h>
-# include <sys/time.h>
-#endif
-#ifdef __linux__
-# include <sys/syscall.h>
-#endif
-
-#include <assert.h>
-#include <errno.h>
-#include <fcntl.h>
-#include <limits.h>
-#include <stdint.h>
-#include <string.h>
-#ifndef _MSC_VER
-# include <unistd.h>
-#endif
-
-#include "crypto_core_salsa20.h"
-#include "crypto_generichash.h"
-#include "crypto_stream_salsa20.h"
-#include "randombytes.h"
-#include "randombytes_salsa20_random.h"
-#include "utils.h"
-
-#ifdef _WIN32
-# include <windows.h>
-# include <sys/timeb.h>
-# define RtlGenRandom SystemFunction036
-# if defined(__cplusplus)
-extern "C"
-# endif
-BOOLEAN NTAPI RtlGenRandom(PVOID RandomBuffer, ULONG RandomBufferLength);
-# pragma comment(lib, "advapi32.lib")
-#endif
-
-#define SALSA20_RANDOM_BLOCK_SIZE crypto_core_salsa20_OUTPUTBYTES
-#define HASH_BLOCK_SIZE 128U
-#define COMPILER_ASSERT(X) (void) sizeof(char[(X) ? 1 : -1])
-
-#if defined(__OpenBSD__) || defined(__CloudABI__)
-# define HAVE_SAFE_ARC4RANDOM 1
-#endif
-
-#ifndef SSIZE_MAX
-# define SSIZE_MAX (SIZE_MAX / 2 - 1)
-#endif
-
-typedef struct Salsa20Random_ {
-    unsigned char key[crypto_stream_salsa20_KEYBYTES];
-    unsigned char rnd32[16U * SALSA20_RANDOM_BLOCK_SIZE];
-    uint64_t      nonce;
-    size_t        rnd32_outleft;
-#ifdef HAVE_GETPID
-    pid_t         pid;
-#endif
-    int           random_data_source_fd;
-    int           initialized;
-    int           getrandom_available;
-} Salsa20Random;
-
-static Salsa20Random stream = {
-    SODIUM_C99(.random_data_source_fd =) -1,
-    SODIUM_C99(.rnd32_outleft =) (size_t) 0U,
-    SODIUM_C99(.initialized =) 0,
-    SODIUM_C99(.getrandom_available =) 0
-};
-
-static uint64_t
-sodium_hrtime(void)
-{
-    uint64_t ts;
-
-#ifdef _WIN32
-    {
-        struct _timeb tb;
-# pragma warning(push)
-# pragma warning(disable: 4996)
-        _ftime(&tb);
-# pragma warning(pop)
-        ts = ((uint64_t) tb.time) * 1000000U + ((uint64_t) tb.millitm) * 1000U;
-    }
-#else
-    {
-        struct timeval tv;
-        assert(gettimeofday(&tv, NULL) == 0);
-        ts = ((uint64_t) tv.tv_sec) * 1000000U + (uint64_t) tv.tv_usec;
-    }
-#endif
-    return ts;
-}
-
-#ifndef _WIN32
-static ssize_t
-safe_read(const int fd, void * const buf_, size_t size)
-{
-    unsigned char *buf = (unsigned char *) buf_;
-    ssize_t        readnb;
-
-    assert(size > (size_t) 0U);
-    assert(size <= SSIZE_MAX);
-    do {
-        while ((readnb = read(fd, buf, size)) < (ssize_t) 0 &&
-               (errno == EINTR || errno == EAGAIN));  /* LCOV_EXCL_LINE */
-        if (readnb < (ssize_t) 0) {
-            return readnb; /* LCOV_EXCL_LINE */
-        }
-        if (readnb == (ssize_t) 0) {
-            break; /* LCOV_EXCL_LINE */
-        }
-        size -= (size_t) readnb;
-        buf += readnb;
-    } while (size > (ssize_t) 0);
-
-    return (ssize_t) (buf - (unsigned char *) buf_);
-}
-#endif
-
-#ifndef _WIN32
-# ifndef HAVE_SAFE_ARC4RANDOM
-static int
-randombytes_salsa20_random_random_dev_open(void)
-{
-/* LCOV_EXCL_START */
-    struct stat       st;
-    static const char *devices[] = {
-#  ifndef USE_BLOCKING_RANDOM
-        "/dev/urandom",
-#  endif
-        "/dev/random", NULL
-    };
-    const char **     device = devices;
-    int               fd;
-
-    do {
-        fd = open(*device, O_RDONLY);
-        if (fd != -1) {
-            if (fstat(fd, &st) == 0 &&
-# ifdef __COMPCERT__
-                1
-# elif defined(S_ISNAM)
-                (S_ISNAM(st.st_mode) || S_ISCHR(st.st_mode))
-# else
-                S_ISCHR(st.st_mode)
-# endif
-               ) {
-#  if defined(F_SETFD) && defined(FD_CLOEXEC)
-                (void) fcntl(fd, F_SETFD, fcntl(fd, F_GETFD) | FD_CLOEXEC);
-#  endif
-                return fd;
-            }
-            (void) close(fd);
-        } else if (errno == EINTR) {
-            continue;
-        }
-        device++;
-    } while (*device != NULL);
-
-    errno = EIO;
-    return -1;
-/* LCOV_EXCL_STOP */
-}
-# endif
-
-# ifdef SYS_getrandom
-static int
-_randombytes_linux_getrandom(void * const buf, const size_t size)
-{
-    int readnb;
-
-    assert(size <= 256U);
-    do {
-        readnb = syscall(SYS_getrandom, buf, (int) size, 0);
-    } while (readnb < 0 && (errno == EINTR || errno == EAGAIN));
-
-    return (readnb == (int) size) - 1;
-}
-
-static int
-randombytes_linux_getrandom(void * const buf_, size_t size)
-{
-    unsigned char *buf = (unsigned char *) buf_;
-    size_t         chunk_size = 256U;
-
-    do {
-        if (size < chunk_size) {
-            chunk_size = size;
-            assert(chunk_size > (size_t) 0U);
-        }
-        if (_randombytes_linux_getrandom(buf, chunk_size) != 0) {
-            return -1;
-        }
-        size -= chunk_size;
-        buf += chunk_size;
-    } while (size > (size_t) 0U);
-
-    return 0;
-}
-# endif
-
-static void
-randombytes_salsa20_random_init(void)
-{
-    const int errno_save = errno;
-
-    stream.nonce = sodium_hrtime();
-    assert(stream.nonce != (uint64_t) 0U);
-
-# ifdef HAVE_SAFE_ARC4RANDOM
-    errno = errno_save;
-# else
-
-#  ifdef SYS_getrandom
-    {
-        unsigned char fodder[16];
-
-        if (randombytes_linux_getrandom(fodder, sizeof fodder) == 0) {
-            stream.getrandom_available = 1;
-            errno = errno_save;
-            return;
-        }
-        stream.getrandom_available = 0;
-    }
-#  endif /* SYS_getrandom */
-
-    if ((stream.random_data_source_fd =
-         randombytes_salsa20_random_random_dev_open()) == -1) {
-        abort(); /* LCOV_EXCL_LINE */
-    }
-    errno = errno_save;
-# endif /* HAVE_SAFE_ARC4RANDOM */
-}
-
-#else /* _WIN32 */
-
-static void
-randombytes_salsa20_random_init(void)
-{
-    stream.nonce = sodium_hrtime();
-    assert(stream.nonce != (uint64_t) 0U);
-}
-#endif
-
-static void
-randombytes_salsa20_random_rekey(const unsigned char * const mix)
-{
-    unsigned char *key = stream.key;
-    size_t         i;
-
-    for (i = (size_t) 0U; i < sizeof stream.key; i++) {
-        key[i] ^= mix[i];
-    }
-}
-
-static void
-randombytes_salsa20_random_stir(void)
-{
-    /* constant to personalize the hash function */
-    const unsigned char hsigma[crypto_generichash_KEYBYTES] = {
-        0x54, 0x68, 0x69, 0x73, 0x49, 0x73, 0x4a, 0x75,
-        0x73, 0x74, 0x41, 0x54, 0x68, 0x69, 0x72, 0x74,
-        0x79, 0x54, 0x77, 0x6f, 0x42, 0x79, 0x74, 0x65,
-        0x73, 0x53, 0x65, 0x65, 0x64, 0x2e, 0x2e, 0x2e
-    };
-    unsigned char  m0[crypto_stream_salsa20_KEYBYTES + HASH_BLOCK_SIZE];
-    unsigned char *k0 = m0 + crypto_stream_salsa20_KEYBYTES;
-    size_t         sizeof_k0 = sizeof m0 - crypto_stream_salsa20_KEYBYTES;
-
-    memset(stream.rnd32, 0, sizeof stream.rnd32);
-    stream.rnd32_outleft = (size_t) 0U;
-    if (stream.initialized == 0) {
-        randombytes_salsa20_random_init();
-        stream.initialized = 1;
-    }
-#ifndef _WIN32
-
-# ifdef HAVE_SAFE_ARC4RANDOM
-    arc4random_buf(m0, sizeof m0);
-# elif defined(SYS_getrandom)
-    if (stream.getrandom_available != 0) {
-        if (randombytes_linux_getrandom(m0, sizeof m0) != 0) {
-            abort(); /* LCOV_EXCL_LINE */
-        }
-    } else if (stream.random_data_source_fd == -1 ||
-               safe_read(stream.random_data_source_fd, m0,
-                         sizeof m0) != (ssize_t) sizeof m0) {
-        abort(); /* LCOV_EXCL_LINE */
-    }
-# else
-    if (stream.random_data_source_fd == -1 ||
-        safe_read(stream.random_data_source_fd, m0,
-                  sizeof m0) != (ssize_t) sizeof m0) {
-        abort(); /* LCOV_EXCL_LINE */
-    }
-# endif
-
-#else /* _WIN32 */
-    if (! RtlGenRandom((PVOID) m0, (ULONG) sizeof m0)) {
-        abort(); /* LCOV_EXCL_LINE */
-    }
-#endif
-    if (crypto_generichash(stream.key, sizeof stream.key, k0, sizeof_k0,
-                           hsigma, sizeof hsigma) != 0) {
-        abort();
-    }
-    COMPILER_ASSERT(sizeof stream.key <= sizeof m0);
-    randombytes_salsa20_random_rekey(m0);
-    sodium_memzero(m0, sizeof m0);
-#ifdef HAVE_GETPID
-    stream.pid = getpid();
-#endif
-}
-
-static void
-randombytes_salsa20_random_stir_if_needed(void)
-{
-#ifdef HAVE_GETPID
-    if (stream.initialized == 0) {
-        randombytes_salsa20_random_stir();
-    } else if (stream.pid != getpid()) {
-        abort();
-    }
-#else
-    if (stream.initialized == 0) {
-        randombytes_salsa20_random_stir();
-    }
-#endif
-}
-
-static int
-randombytes_salsa20_random_close(void)
-{
-    int ret = -1;
-
-#ifndef _WIN32
-    if (stream.random_data_source_fd != -1 &&
-        close(stream.random_data_source_fd) == 0) {
-        stream.random_data_source_fd = -1;
-        stream.initialized = 0;
-# ifdef HAVE_GETPID
-        stream.pid = (pid_t) 0;
-# endif
-        ret = 0;
-    }
-
-# ifdef HAVE_SAFE_ARC4RANDOM
-    ret = 0;
-# endif
-
-# ifdef SYS_getrandom
-    if (stream.getrandom_available != 0) {
-        ret = 0;
-    }
-# endif
-
-#else /* _WIN32 */
-    if (stream.initialized != 0) {
-        stream.initialized = 0;
-        ret = 0;
-    }
-#endif
-    return ret;
-}
-
-static void
-randombytes_salsa20_random_buf(void * const buf, const size_t size)
-{
-    size_t i;
-    int    ret;
-
-    randombytes_salsa20_random_stir_if_needed();
-    COMPILER_ASSERT(sizeof stream.nonce == crypto_stream_salsa20_NONCEBYTES);
-#ifdef ULONG_LONG_MAX
-    /* coverity[result_independent_of_operands] */
-    assert(size <= ULONG_LONG_MAX);
-#endif
-    ret = crypto_stream_salsa20((unsigned char *) buf, (unsigned long long) size,
-                                (unsigned char *) &stream.nonce, stream.key);
-    assert(ret == 0);
-    for (i = 0U; i < sizeof size; i++) {
-        stream.key[i] ^= ((const unsigned char *) (const void *) &size)[i];
-    }
-    stream.nonce++;
-    crypto_stream_salsa20_xor(stream.key, stream.key, sizeof stream.key,
-                              (unsigned char *) &stream.nonce, stream.key);
-}
-
-static uint32_t
-randombytes_salsa20_random_getword(void)
-{
-    uint32_t val;
-    int      ret;
-
-    COMPILER_ASSERT(sizeof stream.rnd32 >= (sizeof stream.key) + (sizeof val));
-    COMPILER_ASSERT(((sizeof stream.rnd32) - (sizeof stream.key))
-                    % sizeof val == (size_t) 0U);
-    if (stream.rnd32_outleft <= (size_t) 0U) {
-        randombytes_salsa20_random_stir_if_needed();
-        COMPILER_ASSERT(sizeof stream.nonce == crypto_stream_salsa20_NONCEBYTES);
-        ret = crypto_stream_salsa20((unsigned char *) stream.rnd32,
-                                    (unsigned long long) sizeof stream.rnd32,
-                                    (unsigned char *) &stream.nonce,
-                                    stream.key);
-        assert(ret == 0);
-        stream.rnd32_outleft = (sizeof stream.rnd32) - (sizeof stream.key);
-        randombytes_salsa20_random_rekey(&stream.rnd32[stream.rnd32_outleft]);
-        stream.nonce++;
-    }
-    stream.rnd32_outleft -= sizeof val;
-    memcpy(&val, &stream.rnd32[stream.rnd32_outleft], sizeof val);
-    memset(&stream.rnd32[stream.rnd32_outleft], 0, sizeof val);
-
-    return val;
-}
-
-static uint32_t
-randombytes_salsa20_random(void)
-{
-    return randombytes_salsa20_random_getword();
-}
-
-static const char *
-randombytes_salsa20_implementation_name(void)
-{
-    return "salsa20";
-}
-
-struct randombytes_implementation randombytes_salsa20_implementation = {
-    SODIUM_C99(.implementation_name =) randombytes_salsa20_implementation_name,
-    SODIUM_C99(.random =) randombytes_salsa20_random,
-    SODIUM_C99(.stir =) randombytes_salsa20_random_stir,
-    SODIUM_C99(.uniform =) NULL,
-    SODIUM_C99(.buf =) randombytes_salsa20_random_buf,
-    SODIUM_C99(.close =) randombytes_salsa20_random_close
-};
diff --git a/libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c b/libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c
index 433c671..6657e8e 100644
--- a/libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c
+++ b/libsodium/src/libsodium/randombytes/sysrandom/randombytes_sysrandom.c
@@ -1,14 +1,4 @@
 
-#include <stdlib.h>
-#include <sys/types.h>
-#ifndef _WIN32
-# include <sys/stat.h>
-# include <sys/time.h>
-#endif
-#ifdef __linux__
-# include <sys/syscall.h>
-#endif
-
 #include <assert.h>
 #include <errno.h>
 #include <fcntl.h>
@@ -18,12 +8,64 @@
 #ifndef _WIN32
 # include <unistd.h>
 #endif
+#include <stdlib.h>
 
+#include <sys/types.h>
+#ifndef _WIN32
+# include <sys/stat.h>
+# include <sys/time.h>
+#endif
+#ifdef __linux__
+# define _LINUX_SOURCE
+#endif
+#ifdef HAVE_SYS_RANDOM_H
+# include <sys/random.h>
+#endif
+#ifdef __linux__
+# ifdef HAVE_GETRANDOM
+#  define HAVE_LINUX_COMPATIBLE_GETRANDOM
+# else
+#  include <sys/syscall.h>
+#  if defined(SYS_getrandom) && defined(__NR_getrandom)
+#   define getrandom(B, S, F) syscall(SYS_getrandom, (B), (int) (S), (F))
+#   define HAVE_LINUX_COMPATIBLE_GETRANDOM
+#  endif
+# endif
+#elif defined(__FreeBSD__)
+# include <sys/param.h>
+# if defined(__FreeBSD_version) && __FreeBSD_version >= 1200000
+#  define HAVE_LINUX_COMPATIBLE_GETRANDOM
+# endif
+#endif
+#if !defined(NO_BLOCKING_RANDOM_POLL) && defined(__linux__)
+# define BLOCK_ON_DEV_RANDOM
+#endif
+#ifdef BLOCK_ON_DEV_RANDOM
+# include <poll.h>
+#endif
+
+#include "core.h"
+#include "private/common.h"
 #include "randombytes.h"
 #include "randombytes_sysrandom.h"
 #include "utils.h"
 
 #ifdef _WIN32
+/* `RtlGenRandom` is used over `CryptGenRandom` on Microsoft Windows based systems:
+ *  - `CryptGenRandom` requires pulling in `CryptoAPI` which causes unnecessary
+ *     memory overhead if this API is not being used for other purposes
+ *  - `RtlGenRandom` is thus called directly instead. A detailed explanation
+ *     can be found here: https://blogs.msdn.microsoft.com/michael_howard/2005/01/14/cryptographically-secure-random-number-on-windows-without-using-cryptoapi/
+ *
+ * In spite of the disclaimer on the `RtlGenRandom` documentation page that was
+ * written back in the Windows XP days, this function is here to stay. The CRT
+ * function `rand_s()` directly depends on it, so touching it would break many
+ * applications released since Windows XP.
+ *
+ * Also note that Rust, Firefox and BoringSSL (thus, Google Chrome and everything
+ * based on Chromium) also depend on it, and that libsodium allows the RNG to be
+ * replaced without patching nor recompiling the library.
+ */
 # include <windows.h>
 # define RtlGenRandom SystemFunction036
 # if defined(__cplusplus)
@@ -33,7 +75,7 @@ BOOLEAN NTAPI RtlGenRandom(PVOID RandomBuffer, ULONG RandomBufferLength);
 # pragma comment(lib, "advapi32.lib")
 #endif
 
-#if defined(__OpenBSD__) || defined(__CloudABI__)
+#if defined(__OpenBSD__) || defined(__CloudABI__) || defined(__wasi__)
 # define HAVE_SAFE_ARC4RANDOM 1
 #endif
 
@@ -57,7 +99,7 @@ randombytes_sysrandom_stir(void)
 static void
 randombytes_sysrandom_buf(void * const buf, const size_t size)
 {
-    return arc4random_buf(buf, size);
+    arc4random_buf(buf, size);
 }
 
 static int
@@ -66,7 +108,7 @@ randombytes_sysrandom_close(void)
     return 0;
 }
 
-#else /* __OpenBSD__ */
+#else /* HAVE_SAFE_ARC4RANDOM */
 
 typedef struct SysRandom_ {
     int random_data_source_fd;
@@ -80,7 +122,7 @@ static SysRandom stream = {
     SODIUM_C99(.getrandom_available =) 0
 };
 
-#ifndef _WIN32
+# ifndef _WIN32
 static ssize_t
 safe_read(const int fd, void * const buf_, size_t size)
 {
@@ -104,38 +146,68 @@ safe_read(const int fd, void * const buf_, size_t size)
 
     return (ssize_t) (buf - (unsigned char *) buf_);
 }
-#endif
 
-#ifndef _WIN32
+#  ifdef BLOCK_ON_DEV_RANDOM
+static int
+randombytes_block_on_dev_random(void)
+{
+    struct pollfd pfd;
+    int           fd;
+    int           pret;
+
+    fd = open("/dev/random", O_RDONLY);
+    if (fd == -1) {
+        return 0;
+    }
+    pfd.fd = fd;
+    pfd.events = POLLIN;
+    pfd.revents = 0;
+    do {
+        pret = poll(&pfd, 1, -1);
+    } while (pret < 0 && (errno == EINTR || errno == EAGAIN));
+    if (pret != 1) {
+        (void) close(fd);
+        errno = EIO;
+        return -1;
+    }
+    return close(fd);
+}
+#  endif /* BLOCK_ON_DEV_RANDOM */
+
 static int
 randombytes_sysrandom_random_dev_open(void)
 {
 /* LCOV_EXCL_START */
     struct stat        st;
     static const char *devices[] = {
-# ifndef USE_BLOCKING_RANDOM
+#  ifndef USE_BLOCKING_RANDOM
         "/dev/urandom",
-# endif
+#  endif
         "/dev/random", NULL
     };
-    const char **      device = devices;
+    const char       **device = devices;
     int                fd;
 
+#  ifdef BLOCK_ON_DEV_RANDOM
+    if (randombytes_block_on_dev_random() != 0) {
+        return -1;
+    }
+#  endif
     do {
         fd = open(*device, O_RDONLY);
         if (fd != -1) {
             if (fstat(fd, &st) == 0 &&
-# ifdef __COMPCERT__
+#  ifdef __COMPCERT__
                 1
-# elif defined(S_ISNAM)
+#  elif defined(S_ISNAM)
                 (S_ISNAM(st.st_mode) || S_ISCHR(st.st_mode))
-# else
+#  else
                 S_ISCHR(st.st_mode)
-# endif
+#  endif
                ) {
-# if defined(F_SETFD) && defined(FD_CLOEXEC)
+#  if defined(F_SETFD) && defined(FD_CLOEXEC)
                 (void) fcntl(fd, F_SETFD, fcntl(fd, F_GETFD) | FD_CLOEXEC);
-# endif
+#  endif
                 return fd;
             }
             (void) close(fd);
@@ -150,7 +222,7 @@ randombytes_sysrandom_random_dev_open(void)
 /* LCOV_EXCL_STOP */
 }
 
-# ifdef SYS_getrandom
+#  ifdef HAVE_LINUX_COMPATIBLE_GETRANDOM
 static int
 _randombytes_linux_getrandom(void * const buf, const size_t size)
 {
@@ -158,7 +230,7 @@ _randombytes_linux_getrandom(void * const buf, const size_t size)
 
     assert(size <= 256U);
     do {
-        readnb = syscall(SYS_getrandom, buf, (int) size, 0);
+        readnb = getrandom(buf, size, 0);
     } while (readnb < 0 && (errno == EINTR || errno == EAGAIN));
 
     return (readnb == (int) size) - 1;
@@ -184,14 +256,14 @@ randombytes_linux_getrandom(void * const buf_, size_t size)
 
     return 0;
 }
-# endif
+#  endif /* HAVE_LINUX_COMPATIBLE_GETRANDOM */
 
 static void
 randombytes_sysrandom_init(void)
 {
     const int     errno_save = errno;
 
-# ifdef SYS_getrandom
+#  ifdef HAVE_LINUX_COMPATIBLE_GETRANDOM
     {
         unsigned char fodder[16];
 
@@ -202,22 +274,22 @@ randombytes_sysrandom_init(void)
         }
         stream.getrandom_available = 0;
     }
-# endif
+#  endif
 
     if ((stream.random_data_source_fd =
          randombytes_sysrandom_random_dev_open()) == -1) {
-        abort(); /* LCOV_EXCL_LINE */
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
     errno = errno_save;
 }
 
-#else /* _WIN32 */
+# else /* _WIN32 */
 
 static void
 randombytes_sysrandom_init(void)
 {
 }
-#endif
+# endif /* _WIN32 */
 
 static void
 randombytes_sysrandom_stir(void)
@@ -241,24 +313,24 @@ randombytes_sysrandom_close(void)
 {
     int ret = -1;
 
-#ifndef _WIN32
+# ifndef _WIN32
     if (stream.random_data_source_fd != -1 &&
         close(stream.random_data_source_fd) == 0) {
         stream.random_data_source_fd = -1;
         stream.initialized = 0;
         ret = 0;
     }
-# ifdef SYS_getrandom
+#  ifdef HAVE_LINUX_COMPATIBLE_GETRANDOM
     if (stream.getrandom_available != 0) {
         ret = 0;
     }
-# endif
-#else /* _WIN32 */
+#  endif
+# else /* _WIN32 */
     if (stream.initialized != 0) {
         stream.initialized = 0;
         ret = 0;
     }
-#endif
+# endif /* _WIN32 */
     return ret;
 }
 
@@ -266,31 +338,34 @@ static void
 randombytes_sysrandom_buf(void * const buf, const size_t size)
 {
     randombytes_sysrandom_stir_if_needed();
-#ifdef ULONG_LONG_MAX
+# if defined(ULLONG_MAX) && defined(SIZE_MAX)
+#  if SIZE_MAX > ULLONG_MAX
     /* coverity[result_independent_of_operands] */
-    assert(size <= ULONG_LONG_MAX);
-#endif
-#ifndef _WIN32
-# ifdef SYS_getrandom
+    assert(size <= ULLONG_MAX);
+#  endif
+# endif
+# ifndef _WIN32
+#  ifdef HAVE_LINUX_COMPATIBLE_GETRANDOM
     if (stream.getrandom_available != 0) {
         if (randombytes_linux_getrandom(buf, size) != 0) {
-            abort();
+            sodium_misuse(); /* LCOV_EXCL_LINE */
         }
         return;
     }
-# endif
+#  endif
     if (stream.random_data_source_fd == -1 ||
         safe_read(stream.random_data_source_fd, buf, size) != (ssize_t) size) {
-        abort(); /* LCOV_EXCL_LINE */
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
-#else
-    if (size > (size_t) 0xffffffff) {
-        abort(); /* LCOV_EXCL_LINE */
+# else /* _WIN32 */
+    COMPILER_ASSERT(randombytes_BYTES_MAX <= 0xffffffffUL);
+    if (size > (size_t) 0xffffffffUL) {
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
     if (! RtlGenRandom((PVOID) buf, (ULONG) size)) {
-        abort(); /* LCOV_EXCL_LINE */
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
-#endif
+# endif /* _WIN32 */
 }
 
 static uint32_t
@@ -303,7 +378,7 @@ randombytes_sysrandom(void)
     return r;
 }
 
-#endif /* __OpenBSD__ */
+#endif /* HAVE_SAFE_ARC4RANDOM */
 
 static const char *
 randombytes_sysrandom_implementation_name(void)
diff --git a/libsodium/src/libsodium/sodium/core.c b/libsodium/src/libsodium/sodium/core.c
index 66ef97e..7a6943d 100644
--- a/libsodium/src/libsodium/sodium/core.c
+++ b/libsodium/src/libsodium/sodium/core.c
@@ -1,29 +1,214 @@
 
+#include <assert.h>
+#include <stdlib.h>
+#include <string.h>
+#include <time.h>
+#ifdef _WIN32
+# include <windows.h>
+#elif defined(HAVE_PTHREAD)
+# include <pthread.h>
+#endif
+
 #include "core.h"
 #include "crypto_generichash.h"
 #include "crypto_onetimeauth.h"
 #include "crypto_scalarmult.h"
 #include "crypto_stream_chacha20.h"
+#include "crypto_stream_salsa20.h"
 #include "randombytes.h"
 #include "runtime.h"
 #include "utils.h"
+#include "private/implementations.h"
+#include "private/mutex.h"
 
-static int initialized;
+static volatile int initialized;
+static volatile int locked;
 
 int
 sodium_init(void)
 {
+    if (sodium_crit_enter() != 0) {
+        return -1; /* LCOV_EXCL_LINE */
+    }
     if (initialized != 0) {
+        if (sodium_crit_leave() != 0) {
+            return -1; /* LCOV_EXCL_LINE */
+        }
         return 1;
     }
     _sodium_runtime_get_cpu_features();
     randombytes_stir();
     _sodium_alloc_init();
+    _crypto_pwhash_argon2_pick_best_implementation();
     _crypto_generichash_blake2b_pick_best_implementation();
     _crypto_onetimeauth_poly1305_pick_best_implementation();
     _crypto_scalarmult_curve25519_pick_best_implementation();
     _crypto_stream_chacha20_pick_best_implementation();
+    _crypto_stream_salsa20_pick_best_implementation();
     initialized = 1;
+    if (sodium_crit_leave() != 0) {
+        return -1; /* LCOV_EXCL_LINE */
+    }
+    return 0;
+}
+
+#ifdef _WIN32
+
+static CRITICAL_SECTION _sodium_lock;
+static volatile LONG    _sodium_lock_initialized;
+
+int
+_sodium_crit_init(void)
+{
+    LONG status = 0L;
+
+    while ((status = InterlockedCompareExchange(&_sodium_lock_initialized,
+                                                1L, 0L)) == 1L) {
+        Sleep(0);
+    }
+
+    switch (status) {
+    case 0L:
+        InitializeCriticalSection(&_sodium_lock);
+        return InterlockedExchange(&_sodium_lock_initialized, 2L) == 1L ? 0 : -1;
+    case 2L:
+        return 0;
+    default: /* should never be reached */
+        return -1;
+    }
+}
+
+int
+sodium_crit_enter(void)
+{
+    if (_sodium_crit_init() != 0) {
+        return -1; /* LCOV_EXCL_LINE */
+    }
+    EnterCriticalSection(&_sodium_lock);
+    assert(locked == 0);
+    locked = 1;
+
+    return 0;
+}
+
+int
+sodium_crit_leave(void)
+{
+    if (locked == 0) {
+# ifdef EPERM
+        errno = EPERM;
+# endif
+        return -1;
+    }
+    locked = 0;
+    LeaveCriticalSection(&_sodium_lock);
+
+    return 0;
+}
+
+#elif defined(HAVE_PTHREAD) && !defined(__EMSCRIPTEN__)
 
+static pthread_mutex_t _sodium_lock = PTHREAD_MUTEX_INITIALIZER;
+
+int
+sodium_crit_enter(void)
+{
+    int ret;
+
+    if ((ret = pthread_mutex_lock(&_sodium_lock)) == 0) {
+        assert(locked == 0);
+        locked = 1;
+    }
+    return ret;
+}
+
+int
+sodium_crit_leave(void)
+{
+    if (locked == 0) {
+# ifdef EPERM
+        errno = EPERM;
+# endif
+        return -1;
+    }
+    locked = 0;
+
+    return pthread_mutex_unlock(&_sodium_lock);
+}
+
+#elif defined(HAVE_ATOMIC_OPS) && !defined(__EMSCRIPTEN__)
+
+static volatile int _sodium_lock;
+
+int
+sodium_crit_enter(void)
+{
+# ifdef HAVE_NANOSLEEP
+    struct timespec q;
+    memset(&q, 0, sizeof q);
+# endif
+    while (__sync_lock_test_and_set(&_sodium_lock, 1) != 0) {
+# ifdef HAVE_NANOSLEEP
+        (void) nanosleep(&q, NULL);
+# elif defined(__x86_64__) || defined(__i386__)
+        __asm__ __volatile__ ("pause");
+# endif
+    }
+    return 0;
+}
+
+int
+sodium_crit_leave(void)
+{
+    __sync_lock_release(&_sodium_lock);
+
+    return 0;
+}
+
+#else
+
+int
+sodium_crit_enter(void)
+{
+    return 0;
+}
+
+int
+sodium_crit_leave(void)
+{
+    return 0;
+}
+
+#endif
+
+static void (*_misuse_handler)(void);
+
+void
+sodium_misuse(void)
+{
+    void (*handler)(void);
+
+    (void) sodium_crit_leave();
+    if (sodium_crit_enter() == 0) {
+        handler = _misuse_handler;
+        if (handler != NULL) {
+            handler();
+        }
+    }
+/* LCOV_EXCL_START */
+    abort();
+}
+/* LCOV_EXCL_STOP */
+
+int
+sodium_set_misuse_handler(void (*handler)(void))
+{
+    if (sodium_crit_enter() != 0) {
+        return -1; /* LCOV_EXCL_LINE */
+    }
+    _misuse_handler = handler;
+    if (sodium_crit_leave() != 0) {
+        return -1; /* LCOV_EXCL_LINE */
+    }
     return 0;
 }
diff --git a/libsodium/src/libsodium/sodium/runtime.c b/libsodium/src/libsodium/sodium/runtime.c
index 0c79797..9dfe54f 100644
--- a/libsodium/src/libsodium/sodium/runtime.c
+++ b/libsodium/src/libsodium/sodium/runtime.c
@@ -1,8 +1,10 @@
-
+#include <stddef.h>
+#include <stdint.h>
 #ifdef HAVE_ANDROID_GETCPUFEATURES
 # include <cpu-features.h>
 #endif
 
+#include "private/common.h"
 #include "runtime.h"
 
 typedef struct CPUFeatures_ {
@@ -13,19 +15,35 @@ typedef struct CPUFeatures_ {
     int has_ssse3;
     int has_sse41;
     int has_avx;
+    int has_avx2;
+    int has_avx512f;
     int has_pclmul;
     int has_aesni;
+    int has_rdrand;
 } CPUFeatures;
 
 static CPUFeatures _cpu_features;
 
-#define CPUID_SSE2      0x04000000
-#define CPUIDECX_SSE3   0x00000001
-#define CPUIDECX_SSSE3  0x00000200
-#define CPUIDECX_SSE41  0x00080000
-#define CPUIDECX_AVX    0x10000000
-#define CPUIDECX_PCLMUL 0x00000002
-#define CPUIDECX_AESNI  0x02000000
+#define CPUID_EBX_AVX2    0x00000020
+#define CPUID_EBX_AVX512F 0x00010000
+
+#define CPUID_ECX_SSE3    0x00000001
+#define CPUID_ECX_PCLMUL  0x00000002
+#define CPUID_ECX_SSSE3   0x00000200
+#define CPUID_ECX_SSE41   0x00080000
+#define CPUID_ECX_AESNI   0x02000000
+#define CPUID_ECX_XSAVE   0x04000000
+#define CPUID_ECX_OSXSAVE 0x08000000
+#define CPUID_ECX_AVX     0x10000000
+#define CPUID_ECX_RDRAND  0x40000000
+
+#define CPUID_EDX_SSE2    0x04000000
+
+#define XCR0_SSE       0x00000002
+#define XCR0_AVX       0x00000004
+#define XCR0_OPMASK    0x00000020
+#define XCR0_ZMM_HI256 0x00000040
+#define XCR0_HI16_ZMM  0x00000080
 
 static int
 _sodium_runtime_arm_cpu_features(CPUFeatures * const cpu_features)
@@ -40,7 +58,8 @@ _sodium_runtime_arm_cpu_features(CPUFeatures * const cpu_features)
 #  else
     cpu_features->has_neon = 0;
 #  endif
-# elif defined(HAVE_ANDROID_GETCPUFEATURES) && defined(ANDROID_CPU_ARM_FEATURE_NEON)
+# elif defined(HAVE_ANDROID_GETCPUFEATURES) && \
+    defined(ANDROID_CPU_ARM_FEATURE_NEON)
     cpu_features->has_neon =
         (android_getCpuFeatures() & ANDROID_CPU_ARM_FEATURE_NEON) != 0x0;
 # else
@@ -59,34 +78,36 @@ _cpuid(unsigned int cpu_info[4U], const unsigned int cpu_info_type)
 #elif defined(HAVE_CPUID)
     cpu_info[0] = cpu_info[1] = cpu_info[2] = cpu_info[3] = 0;
 # ifdef __i386__
-    __asm__ __volatile__ ("pushfl; pushfl; "
-                          "popl %0; "
-                          "movl %0, %1; xorl %2, %0; "
-                          "pushl %0; "
-                          "popfl; pushfl; popl %0; popfl" :
-                          "=&r" (cpu_info[0]), "=&r" (cpu_info[1]) :
-                          "i" (0x200000));
+    __asm__ __volatile__(
+        "pushfl; pushfl; "
+        "popl %0; "
+        "movl %0, %1; xorl %2, %0; "
+        "pushl %0; "
+        "popfl; pushfl; popl %0; popfl"
+        : "=&r"(cpu_info[0]), "=&r"(cpu_info[1])
+        : "i"(0x200000));
     if (((cpu_info[0] ^ cpu_info[1]) & 0x200000) == 0x0) {
         return; /* LCOV_EXCL_LINE */
     }
 # endif
 # ifdef __i386__
-    __asm__ __volatile__ ("xchgl %%ebx, %k1; cpuid; xchgl %%ebx, %k1" :
-                          "=a" (cpu_info[0]), "=&r" (cpu_info[1]),
-                          "=c" (cpu_info[2]), "=d" (cpu_info[3]) :
-                          "0" (cpu_info_type), "2" (0U));
+    __asm__ __volatile__("xchgl %%ebx, %k1; cpuid; xchgl %%ebx, %k1"
+                         : "=a"(cpu_info[0]), "=&r"(cpu_info[1]),
+                           "=c"(cpu_info[2]), "=d"(cpu_info[3])
+                         : "0"(cpu_info_type), "2"(0U));
 # elif defined(__x86_64__)
-    __asm__ __volatile__ ("xchgq %%rbx, %q1; cpuid; xchgq %%rbx, %q1" :
-                          "=a" (cpu_info[0]), "=&r" (cpu_info[1]),
-                          "=c" (cpu_info[2]), "=d" (cpu_info[3]) :
-                          "0" (cpu_info_type), "2" (0U));
+    __asm__ __volatile__("xchgq %%rbx, %q1; cpuid; xchgq %%rbx, %q1"
+                         : "=a"(cpu_info[0]), "=&r"(cpu_info[1]),
+                           "=c"(cpu_info[2]), "=d"(cpu_info[3])
+                         : "0"(cpu_info_type), "2"(0U));
 # else
-    __asm__ __volatile__ ("cpuid" :
-                          "=a" (cpu_info[0]), "=b" (cpu_info[1]),
-                          "=c" (cpu_info[2]), "=d" (cpu_info[3]) :
-                          "0" (cpu_info_type), "2" (0U));
+    __asm__ __volatile__("cpuid"
+                         : "=a"(cpu_info[0]), "=b"(cpu_info[1]),
+                           "=c"(cpu_info[2]), "=d"(cpu_info[3])
+                         : "0"(cpu_info_type), "2"(0U));
 # endif
 #else
+    (void) cpu_info_type;
     cpu_info[0] = cpu_info[1] = cpu_info[2] = cpu_info[3] = 0;
 #endif
 }
@@ -96,54 +117,114 @@ _sodium_runtime_intel_cpu_features(CPUFeatures * const cpu_features)
 {
     unsigned int cpu_info[4];
     unsigned int id;
+    uint32_t     xcr0 = 0U;
 
     _cpuid(cpu_info, 0x0);
     if ((id = cpu_info[0]) == 0U) {
         return -1; /* LCOV_EXCL_LINE */
     }
     _cpuid(cpu_info, 0x00000001);
-#if defined(HAVE_EMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-    cpu_features->has_sse2 = ((cpu_info[3] & CPUID_SSE2) != 0x0);
+#ifdef HAVE_EMMINTRIN_H
+    cpu_features->has_sse2 = ((cpu_info[3] & CPUID_EDX_SSE2) != 0x0);
 #else
-    cpu_features->has_sse2 = 0;
+    cpu_features->has_sse2   = 0;
 #endif
 
-#if defined(HAVE_PMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-    cpu_features->has_sse3 = ((cpu_info[2] & CPUIDECX_SSE3) != 0x0);
+#ifdef HAVE_PMMINTRIN_H
+    cpu_features->has_sse3 = ((cpu_info[2] & CPUID_ECX_SSE3) != 0x0);
 #else
-    cpu_features->has_sse3 = 0;
+    cpu_features->has_sse3   = 0;
 #endif
 
-#if defined(HAVE_TMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-    cpu_features->has_ssse3 = ((cpu_info[2] & CPUIDECX_SSSE3) != 0x0);
+#ifdef HAVE_TMMINTRIN_H
+    cpu_features->has_ssse3 = ((cpu_info[2] & CPUID_ECX_SSSE3) != 0x0);
 #else
-    cpu_features->has_ssse3 = 0;
+    cpu_features->has_ssse3  = 0;
 #endif
 
-#if defined(HAVE_SMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-    cpu_features->has_sse41 = ((cpu_info[2] & CPUIDECX_SSE41) != 0x0);
+#ifdef HAVE_SMMINTRIN_H
+    cpu_features->has_sse41 = ((cpu_info[2] & CPUID_ECX_SSE41) != 0x0);
 #else
-    cpu_features->has_sse41 = 0;
+    cpu_features->has_sse41  = 0;
 #endif
 
-#if defined(HAVE_AVXINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-    cpu_features->has_avx = ((cpu_info[2] & CPUIDECX_AVX) != 0x0);
-#else
     cpu_features->has_avx = 0;
+
+    (void) xcr0;
+#ifdef HAVE_AVXINTRIN_H
+    if ((cpu_info[2] & (CPUID_ECX_AVX | CPUID_ECX_XSAVE | CPUID_ECX_OSXSAVE)) ==
+        (CPUID_ECX_AVX | CPUID_ECX_XSAVE | CPUID_ECX_OSXSAVE)) {
+        xcr0 = 0U;
+# if defined(HAVE__XGETBV) || \
+        (defined(_MSC_VER) && defined(_XCR_XFEATURE_ENABLED_MASK) && _MSC_FULL_VER >= 160040219)
+        xcr0 = (uint32_t) _xgetbv(0);
+# elif defined(_MSC_VER) && defined(_M_IX86)
+        /*
+         * Visual Studio documentation states that eax/ecx/edx don't need to
+         * be preserved in inline assembly code. But that doesn't seem to
+         * always hold true on Visual Studio 2010.
+         */
+        __asm {
+            push eax
+            push ecx
+            push edx
+            xor ecx, ecx
+            _asm _emit 0x0f _asm _emit 0x01 _asm _emit 0xd0
+            mov xcr0, eax
+            pop edx
+            pop ecx
+            pop eax
+        }
+# elif defined(HAVE_AVX_ASM)
+        __asm__ __volatile__(".byte 0x0f, 0x01, 0xd0" /* XGETBV */
+                             : "=a"(xcr0)
+                             : "c"((uint32_t) 0U)
+                             : "%edx");
+# endif
+        if ((xcr0 & (XCR0_SSE | XCR0_AVX)) == (XCR0_SSE | XCR0_AVX)) {
+            cpu_features->has_avx = 1;
+        }
+    }
+#endif
+
+    cpu_features->has_avx2 = 0;
+#ifdef HAVE_AVX2INTRIN_H
+    if (cpu_features->has_avx) {
+        unsigned int cpu_info7[4];
+
+        _cpuid(cpu_info7, 0x00000007);
+        cpu_features->has_avx2 = ((cpu_info7[1] & CPUID_EBX_AVX2) != 0x0);
+    }
+#endif
+
+    cpu_features->has_avx512f = 0;
+#ifdef HAVE_AVX512FINTRIN_H
+    if (cpu_features->has_avx2) {
+        unsigned int cpu_info7[4];
+
+        _cpuid(cpu_info7, 0x00000007);
+        /* LCOV_EXCL_START */
+        if ((cpu_info7[1] & CPUID_EBX_AVX512F) == CPUID_EBX_AVX512F &&
+            (xcr0 & (XCR0_OPMASK | XCR0_ZMM_HI256 | XCR0_HI16_ZMM))
+            == (XCR0_OPMASK | XCR0_ZMM_HI256 | XCR0_HI16_ZMM)) {
+            cpu_features->has_avx512f = 1;
+        }
+        /* LCOV_EXCL_STOP */
+    }
 #endif
 
-#if defined(HAVE_WMMINTRIN_H) || \
-    (defined(_MSC_VER) && (defined(_M_X64) || defined(_M_AMD64) || defined(_M_IX86)))
-    cpu_features->has_pclmul = ((cpu_info[2] & CPUIDECX_PCLMUL) != 0x0);
-    cpu_features->has_aesni = ((cpu_info[2] & CPUIDECX_AESNI) != 0x0);
+#ifdef HAVE_WMMINTRIN_H
+    cpu_features->has_pclmul = ((cpu_info[2] & CPUID_ECX_PCLMUL) != 0x0);
+    cpu_features->has_aesni  = ((cpu_info[2] & CPUID_ECX_AESNI) != 0x0);
 #else
     cpu_features->has_pclmul = 0;
-    cpu_features->has_aesni = 0;
+    cpu_features->has_aesni  = 0;
+#endif
+
+#ifdef HAVE_RDRAND
+    cpu_features->has_rdrand = ((cpu_info[2] & CPUID_ECX_RDRAND) != 0x0);
+#else
+    cpu_features->has_rdrand = 0;
 #endif
 
     return 0;
@@ -162,41 +243,67 @@ _sodium_runtime_get_cpu_features(void)
 }
 
 int
-sodium_runtime_has_neon(void) {
+sodium_runtime_has_neon(void)
+{
     return _cpu_features.has_neon;
 }
 
 int
-sodium_runtime_has_sse2(void) {
+sodium_runtime_has_sse2(void)
+{
     return _cpu_features.has_sse2;
 }
 
 int
-sodium_runtime_has_sse3(void) {
+sodium_runtime_has_sse3(void)
+{
     return _cpu_features.has_sse3;
 }
 
 int
-sodium_runtime_has_ssse3(void) {
+sodium_runtime_has_ssse3(void)
+{
     return _cpu_features.has_ssse3;
 }
 
 int
-sodium_runtime_has_sse41(void) {
+sodium_runtime_has_sse41(void)
+{
     return _cpu_features.has_sse41;
 }
 
 int
-sodium_runtime_has_avx(void) {
+sodium_runtime_has_avx(void)
+{
     return _cpu_features.has_avx;
 }
 
 int
-sodium_runtime_has_pclmul(void) {
+sodium_runtime_has_avx2(void)
+{
+    return _cpu_features.has_avx2;
+}
+
+int
+sodium_runtime_has_avx512f(void)
+{
+    return _cpu_features.has_avx512f;
+}
+
+int
+sodium_runtime_has_pclmul(void)
+{
     return _cpu_features.has_pclmul;
 }
 
 int
-sodium_runtime_has_aesni(void) {
+sodium_runtime_has_aesni(void)
+{
     return _cpu_features.has_aesni;
 }
+
+int
+sodium_runtime_has_rdrand(void)
+{
+    return _cpu_features.has_rdrand;
+}
diff --git a/libsodium/src/libsodium/sodium/utils.c b/libsodium/src/libsodium/sodium/utils.c
index 00ee38a..1fbd3a3 100644
--- a/libsodium/src/libsodium/sodium/utils.c
+++ b/libsodium/src/libsodium/sodium/utils.c
@@ -14,8 +14,6 @@
 # include <sys/mman.h>
 #endif
 
-#include "utils.h"
-#include "randombytes.h"
 #ifdef _WIN32
 # include <windows.h>
 # include <wincrypt.h>
@@ -23,12 +21,42 @@
 # include <unistd.h>
 #endif
 
-#if defined(_WIN32) && (!defined(WINAPI_FAMILY) || WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)
+#ifndef HAVE_C_VARARRAYS
+# ifdef HAVE_ALLOCA_H
+#  include <alloca.h>
+# elif !defined(alloca)
+#  if defined(__clang__) || defined(__GNUC__)
+#   define alloca __builtin_alloca
+#  elif defined _AIX
+#   define alloca __alloca
+#  elif defined _MSC_VER
+#   include <malloc.h>
+#   define alloca _alloca
+#  else
+#   include <stddef.h>
+#   ifdef  __cplusplus
+extern "C"
+#   endif
+void *alloca (size_t);
+#  endif
+# endif
+#endif
+
+#include "core.h"
+#include "randombytes.h"
+#include "utils.h"
+
+#ifndef ENOSYS
+# define ENOSYS ENXIO
+#endif
+
+#if defined(_WIN32) && \
+    (!defined(WINAPI_FAMILY) || WINAPI_FAMILY == WINAPI_FAMILY_DESKTOP_APP)
 # define WINAPI_DESKTOP
 #endif
 
 #define CANARY_SIZE 16U
-#define GARBAGE_VALUE 0xd0
+#define GARBAGE_VALUE 0xdb
 
 #ifndef MAP_NOCORE
 # define MAP_NOCORE 0
@@ -36,27 +64,40 @@
 #if !defined(MAP_ANON) && defined(MAP_ANONYMOUS)
 # define MAP_ANON MAP_ANONYMOUS
 #endif
-#if defined(WINAPI_DESKTOP) || (defined(MAP_ANON) && defined(HAVE_MMAP)) || defined(HAVE_POSIX_MEMALIGN)
+#if defined(WINAPI_DESKTOP) || (defined(MAP_ANON) && defined(HAVE_MMAP)) || \
+    defined(HAVE_POSIX_MEMALIGN)
 # define HAVE_ALIGNED_MALLOC
 #endif
-#if defined(HAVE_MPROTECT) && !(defined(PROT_NONE) && defined(PROT_READ) && defined(PROT_WRITE))
+#if defined(HAVE_MPROTECT) && \
+    !(defined(PROT_NONE) && defined(PROT_READ) && defined(PROT_WRITE))
 # undef HAVE_MPROTECT
 #endif
-#if defined(HAVE_ALIGNED_MALLOC) && (defined(WINAPI_DESKTOP) || defined(HAVE_MPROTECT))
+#if defined(HAVE_ALIGNED_MALLOC) && \
+    (defined(WINAPI_DESKTOP) || defined(HAVE_MPROTECT))
 # define HAVE_PAGE_PROTECTION
 #endif
+#if !defined(MADV_DODUMP) && defined(MADV_CORE)
+# define MADV_DODUMP   MADV_CORE
+# define MADV_DONTDUMP MADV_NOCORE
+#endif
 
-static size_t page_size;
+static size_t        page_size;
 static unsigned char canary[CANARY_SIZE];
 
+/* LCOV_EXCL_START */
 #ifdef HAVE_WEAK_SYMBOLS
 __attribute__((weak)) void
-_sodium_dummy_symbol_to_prevent_memzero_lto(void * const pnt, const size_t len)
+_sodium_dummy_symbol_to_prevent_memzero_lto(void *const  pnt,
+                                            const size_t len);
+__attribute__((weak)) void
+_sodium_dummy_symbol_to_prevent_memzero_lto(void *const  pnt,
+                                            const size_t len)
 {
-    (void) pnt;
-    (void) len;
+    (void) pnt; /* LCOV_EXCL_LINE */
+    (void) len; /* LCOV_EXCL_LINE */
 }
 #endif
+/* LCOV_EXCL_STOP */
 
 void
 sodium_memzero(void * const pnt, const size_t len)
@@ -64,17 +105,25 @@ sodium_memzero(void * const pnt, const size_t len)
 #ifdef _WIN32
     SecureZeroMemory(pnt, len);
 #elif defined(HAVE_MEMSET_S)
-    if (memset_s(pnt, (rsize_t) len, 0, (rsize_t) len) != 0) {
-        abort(); /* LCOV_EXCL_LINE */
+    if (len > 0U && memset_s(pnt, (rsize_t) len, 0, (rsize_t) len) != 0) {
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
 #elif defined(HAVE_EXPLICIT_BZERO)
     explicit_bzero(pnt, len);
+#elif defined(HAVE_EXPLICIT_MEMSET)
+    explicit_memset(pnt, 0, len);
 #elif HAVE_WEAK_SYMBOLS
-    memset(pnt, 0, len);
-    _sodium_dummy_symbol_to_prevent_memzero_lto(pnt, len);
+    if (len > 0U) {
+        memset(pnt, 0, len);
+        _sodium_dummy_symbol_to_prevent_memzero_lto(pnt, len);
+    }
+# ifdef HAVE_INLINE_ASM
+    __asm__ __volatile__ ("" : : "r"(pnt) : "memory");
+# endif
 #else
-    volatile unsigned char *pnt_ = (volatile unsigned char *) pnt;
-    size_t                     i = (size_t) 0U;
+    volatile unsigned char *volatile pnt_ =
+        (volatile unsigned char *volatile) pnt;
+    size_t i = (size_t) 0U;
 
     while (i < len) {
         pnt_[i++] = 0U;
@@ -82,11 +131,26 @@ sodium_memzero(void * const pnt, const size_t len)
 #endif
 }
 
+void
+sodium_stackzero(const size_t len)
+{
+#ifdef HAVE_C_VARARRAYS
+    unsigned char fodder[len];
+    sodium_memzero(fodder, len);
+#elif HAVE_ALLOCA
+    sodium_memzero(alloca(len), len);
+#endif
+}
+
 #ifdef HAVE_WEAK_SYMBOLS
 __attribute__((weak)) void
 _sodium_dummy_symbol_to_prevent_memcmp_lto(const unsigned char *b1,
                                            const unsigned char *b2,
-                                           const size_t len)
+                                           const size_t         len);
+__attribute__((weak)) void
+_sodium_dummy_symbol_to_prevent_memcmp_lto(const unsigned char *b1,
+                                           const unsigned char *b2,
+                                           const size_t         len)
 {
     (void) b1;
     (void) b2;
@@ -95,17 +159,19 @@ _sodium_dummy_symbol_to_prevent_memcmp_lto(const unsigned char *b1,
 #endif
 
 int
-sodium_memcmp(const void * const b1_, const void * const b2_, size_t len)
+sodium_memcmp(const void *const b1_, const void *const b2_, size_t len)
 {
 #ifdef HAVE_WEAK_SYMBOLS
     const unsigned char *b1 = (const unsigned char *) b1_;
     const unsigned char *b2 = (const unsigned char *) b2_;
 #else
-    const volatile unsigned char *b1 = (const volatile unsigned char *) b1_;
-    const volatile unsigned char *b2 = (const volatile unsigned char *) b2_;
+    const volatile unsigned char *volatile b1 =
+        (const volatile unsigned char *volatile) b1_;
+    const volatile unsigned char *volatile b2 =
+        (const volatile unsigned char *volatile) b2_;
 #endif
-    size_t               i;
-    unsigned char        d = (unsigned char) 0U;
+    size_t                 i;
+    volatile unsigned char d = 0U;
 
 #if HAVE_WEAK_SYMBOLS
     _sodium_dummy_symbol_to_prevent_memcmp_lto(b1, b2, len);
@@ -120,7 +186,11 @@ sodium_memcmp(const void * const b1_, const void * const b2_, size_t len)
 __attribute__((weak)) void
 _sodium_dummy_symbol_to_prevent_compare_lto(const unsigned char *b1,
                                             const unsigned char *b2,
-                                            const size_t len)
+                                            const size_t         len);
+__attribute__((weak)) void
+_sodium_dummy_symbol_to_prevent_compare_lto(const unsigned char *b1,
+                                            const unsigned char *b2,
+                                            const size_t         len)
 {
     (void) b1;
     (void) b2;
@@ -135,12 +205,15 @@ sodium_compare(const unsigned char *b1_, const unsigned char *b2_, size_t len)
     const unsigned char *b1 = b1_;
     const unsigned char *b2 = b2_;
 #else
-    const volatile unsigned char *b1 = (const volatile unsigned char *) b1_;
-    const volatile unsigned char *b2 = (const volatile unsigned char *) b2_;
+    const volatile unsigned char *volatile b1 =
+        (const volatile unsigned char *volatile) b1_;
+    const volatile unsigned char *volatile b2 =
+        (const volatile unsigned char *volatile) b2_;
 #endif
-    unsigned char gt = 0U;
-    unsigned char eq = 1U;
-    size_t        i;
+    size_t                 i;
+    volatile unsigned char gt = 0U;
+    volatile unsigned char eq = 1U;
+    uint16_t               x1, x2;
 
 #if HAVE_WEAK_SYMBOLS
     _sodium_dummy_symbol_to_prevent_compare_lto(b1, b2, len);
@@ -148,8 +221,10 @@ sodium_compare(const unsigned char *b1_, const unsigned char *b2_, size_t len)
     i = len;
     while (i != 0U) {
         i--;
-        gt |= ((b2[i] - b1[i]) >> 8) & eq;
-        eq &= ((b2[i] ^ b1[i]) - 1) >> 8;
+        x1 = b1[i];
+        x2 = b2[i];
+        gt |= ((x2 - x1) >> 8) & eq;
+        eq &= ((x2 ^ x1) - 1) >> 8;
     }
     return (int) (gt + gt + eq) - 1;
 }
@@ -157,8 +232,8 @@ sodium_compare(const unsigned char *b1_, const unsigned char *b2_, size_t len)
 int
 sodium_is_zero(const unsigned char *n, const size_t nlen)
 {
-    size_t        i;
-    unsigned char d = 0U;
+    size_t                 i;
+    volatile unsigned char d = 0U;
 
     for (i = 0U; i < nlen; i++) {
         d |= n[i];
@@ -173,28 +248,30 @@ sodium_increment(unsigned char *n, const size_t nlen)
     uint_fast16_t c = 1U;
 
 #ifdef HAVE_AMD64_ASM
-    uint64_t      t64, t64_2;
-    uint32_t      t32;
+    uint64_t t64, t64_2;
+    uint32_t t32;
 
     if (nlen == 12U) {
-        __asm__ __volatile__("xorq %[t64], %[t64] \n"
-                             "xorl %[t32], %[t32] \n"
-                             "stc \n"
-                             "adcq %[t64], (%[out]) \n"
-                             "adcl %[t32], 8(%[out]) \n"
-                             : [t64] "=&r"(t64), [t32] "=&r" (t32)
-                             : [out] "D"(n)
-                             : "memory", "flags", "cc");
+        __asm__ __volatile__(
+            "xorq %[t64], %[t64] \n"
+            "xorl %[t32], %[t32] \n"
+            "stc \n"
+            "adcq %[t64], (%[out]) \n"
+            "adcl %[t32], 8(%[out]) \n"
+            : [t64] "=&r"(t64), [t32] "=&r"(t32)
+            : [out] "D"(n)
+            : "memory", "flags", "cc");
         return;
     } else if (nlen == 24U) {
-        __asm__ __volatile__("movq $1, %[t64] \n"
-                             "xorq %[t64_2], %[t64_2] \n"
-                             "addq %[t64], (%[out]) \n"
-                             "adcq %[t64_2], 8(%[out]) \n"
-                             "adcq %[t64_2], 16(%[out]) \n"
-                             : [t64] "=&r"(t64), [t64_2] "=&r" (t64_2)
-                             : [out] "D"(n)
-                             : "memory", "flags", "cc");
+        __asm__ __volatile__(
+            "movq $1, %[t64] \n"
+            "xorq %[t64_2], %[t64_2] \n"
+            "addq %[t64], (%[out]) \n"
+            "adcq %[t64_2], 8(%[out]) \n"
+            "adcq %[t64_2], 16(%[out]) \n"
+            : [t64] "=&r"(t64), [t64_2] "=&r"(t64_2)
+            : [out] "D"(n)
+            : "memory", "flags", "cc");
         return;
     } else if (nlen == 8U) {
         __asm__ __volatile__("incq (%[out]) \n"
@@ -214,130 +291,93 @@ sodium_increment(unsigned char *n, const size_t nlen)
 void
 sodium_add(unsigned char *a, const unsigned char *b, const size_t len)
 {
-    size_t        i = 0U;
+    size_t        i;
     uint_fast16_t c = 0U;
 
 #ifdef HAVE_AMD64_ASM
-    uint64_t      t64, t64_2, t64_3;
-    uint32_t      t32;
+    uint64_t t64, t64_2, t64_3;
+    uint32_t t32;
 
     if (len == 12U) {
-        __asm__ __volatile__("movq (%[in]), %[t64] \n"
-                             "movl 8(%[in]), %[t32] \n"
-                             "addq %[t64], (%[out]) \n"
-                             "adcl %[t32], 8(%[out]) \n"
-                             : [t64] "=&r"(t64), [t32] "=&r" (t32)
-                             : [in] "S"(b), [out] "D"(a)
-                             : "memory", "flags", "cc");
+        __asm__ __volatile__(
+            "movq (%[in]), %[t64] \n"
+            "movl 8(%[in]), %[t32] \n"
+            "addq %[t64], (%[out]) \n"
+            "adcl %[t32], 8(%[out]) \n"
+            : [t64] "=&r"(t64), [t32] "=&r"(t32)
+            : [in] "S"(b), [out] "D"(a)
+            : "memory", "flags", "cc");
         return;
     } else if (len == 24U) {
-        __asm__ __volatile__("movq (%[in]), %[t64] \n"
-                             "movq 8(%[in]), %[t64_2] \n"
-                             "movq 16(%[in]), %[t64_3] \n"
-                             "addq %[t64], (%[out]) \n"
-                             "adcq %[t64_2], 8(%[out]) \n"
-                             "adcq %[t64_3], 16(%[out]) \n"
-                             : [t64] "=&r"(t64), [t64_2] "=&r"(t64_2), [t64_3] "=&r"(t64_3)
-                             : [in] "S"(b), [out] "D"(a)
-                             : "memory", "flags", "cc");
+        __asm__ __volatile__(
+            "movq (%[in]), %[t64] \n"
+            "movq 8(%[in]), %[t64_2] \n"
+            "movq 16(%[in]), %[t64_3] \n"
+            "addq %[t64], (%[out]) \n"
+            "adcq %[t64_2], 8(%[out]) \n"
+            "adcq %[t64_3], 16(%[out]) \n"
+            : [t64] "=&r"(t64), [t64_2] "=&r"(t64_2), [t64_3] "=&r"(t64_3)
+            : [in] "S"(b), [out] "D"(a)
+            : "memory", "flags", "cc");
         return;
     } else if (len == 8U) {
-        __asm__ __volatile__("movq (%[in]), %[t64] \n"
-                             "addq %[t64], (%[out]) \n"
-                             : [t64] "=&r"(t64)
-                             : [in] "S"(b), [out] "D"(a)
-                             : "memory", "flags", "cc");
+        __asm__ __volatile__(
+            "movq (%[in]), %[t64] \n"
+            "addq %[t64], (%[out]) \n"
+            : [t64] "=&r"(t64)
+            : [in] "S"(b), [out] "D"(a)
+            : "memory", "flags", "cc");
         return;
     }
 #endif
-    for (; i < len; i++) {
+    for (i = 0U; i < len; i++) {
         c += (uint_fast16_t) a[i] + (uint_fast16_t) b[i];
         a[i] = (unsigned char) c;
         c >>= 8;
     }
 }
 
-/* Derived from original code by CodesInChaos */
-char *
-sodium_bin2hex(char * const hex, const size_t hex_maxlen,
-               const unsigned char * const bin, const size_t bin_len)
+void
+sodium_sub(unsigned char *a, const unsigned char *b, const size_t len)
 {
-    size_t       i = (size_t) 0U;
-    unsigned int x;
-    int          b;
-    int          c;
-
-    if (bin_len >= SIZE_MAX / 2 || hex_maxlen <= bin_len * 2U) {
-        abort(); /* LCOV_EXCL_LINE */
-    }
-    while (i < bin_len) {
-        c = bin[i] & 0xf;
-        b = bin[i] >> 4;
-        x = (unsigned char) (87U + c + (((c - 10U) >> 8) & ~38U)) << 8 |
-            (unsigned char) (87U + b + (((b - 10U) >> 8) & ~38U));
-        hex[i * 2U] = (char) x;
-        x >>= 8;
-        hex[i * 2U + 1U] = (char) x;
-        i++;
-    }
-    hex[i * 2U] = 0U;
-
-    return hex;
-}
+    uint_fast16_t c = 0U;
+    size_t        i;
 
-int
-sodium_hex2bin(unsigned char * const bin, const size_t bin_maxlen,
-               const char * const hex, const size_t hex_len,
-               const char * const ignore, size_t * const bin_len,
-               const char ** const hex_end)
-{
-    size_t        bin_pos = (size_t) 0U;
-    size_t        hex_pos = (size_t) 0U;
-    int           ret = 0;
-    unsigned char c;
-    unsigned char c_acc = 0U;
-    unsigned char c_alpha0, c_alpha;
-    unsigned char c_num0, c_num;
-    unsigned char c_val;
-    unsigned char state = 0U;
-
-    while (hex_pos < hex_len) {
-        c = (unsigned char) hex[hex_pos];
-        c_num = c ^ 48U;
-        c_num0 = (c_num - 10U) >> 8;
-        c_alpha = (c & ~32U) - 55U;
-        c_alpha0 = ((c_alpha - 10U) ^ (c_alpha - 16U)) >> 8;
-        if ((c_num0 | c_alpha0) == 0U) {
-            if (ignore != NULL && state == 0U && strchr(ignore, c) != NULL) {
-                hex_pos++;
-                continue;
-            }
-            break;
-        }
-        c_val = (c_num0 & c_num) | (c_alpha0 & c_alpha);
-        if (bin_pos >= bin_maxlen) {
-            ret = -1;
-            errno = ERANGE;
-            break;
-        }
-        if (state == 0U) {
-            c_acc = c_val * 16U;
-        } else {
-            bin[bin_pos++] = c_acc | c_val;
-        }
-        state = ~state;
-        hex_pos++;
-    }
-    if (state != 0U) {
-        hex_pos--;
-    }
-    if (hex_end != NULL) {
-        *hex_end = &hex[hex_pos];
+#ifdef HAVE_AMD64_ASM
+    uint64_t t64_1, t64_2, t64_3, t64_4;
+    uint64_t t64_5, t64_6, t64_7, t64_8;
+    uint32_t t32;
+
+    if (len == 64U) {
+        __asm__ __volatile__(
+            "movq   (%[in]), %[t64_1] \n"
+            "movq  8(%[in]), %[t64_2] \n"
+            "movq 16(%[in]), %[t64_3] \n"
+            "movq 24(%[in]), %[t64_4] \n"
+            "movq 32(%[in]), %[t64_5] \n"
+            "movq 40(%[in]), %[t64_6] \n"
+            "movq 48(%[in]), %[t64_7] \n"
+            "movq 56(%[in]), %[t64_8] \n"
+            "subq %[t64_1],   (%[out]) \n"
+            "sbbq %[t64_2],  8(%[out]) \n"
+            "sbbq %[t64_3], 16(%[out]) \n"
+            "sbbq %[t64_4], 24(%[out]) \n"
+            "sbbq %[t64_5], 32(%[out]) \n"
+            "sbbq %[t64_6], 40(%[out]) \n"
+            "sbbq %[t64_7], 48(%[out]) \n"
+            "sbbq %[t64_8], 56(%[out]) \n"
+            : [t64_1] "=&r"(t64_1), [t64_2] "=&r"(t64_2), [t64_3] "=&r"(t64_3), [t64_4] "=&r"(t64_4),
+              [t64_5] "=&r"(t64_5), [t64_6] "=&r"(t64_6), [t64_7] "=&r"(t64_7), [t64_8] "=&r"(t64_8)
+            : [in] "S"(b), [out] "D"(a)
+            : "memory", "flags", "cc");
+        return;
     }
-    if (bin_len != NULL) {
-        *bin_len = bin_pos;
+#endif
+    for (i = 0U; i < len; i++) {
+        c = (uint_fast16_t) a[i] - (uint_fast16_t) b[i] - c;
+        a[i] = (unsigned char) c;
+        c = (c >> 8) & 1U;
     }
-    return ret;
 }
 
 int
@@ -355,7 +395,7 @@ _sodium_alloc_init(void)
     page_size = (size_t) si.dwPageSize;
 # endif
     if (page_size < CANARY_SIZE || page_size < sizeof(size_t)) {
-        abort(); /* LCOV_EXCL_LINE */
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
 #endif
     randombytes_buf(canary, sizeof canary);
@@ -364,7 +404,7 @@ _sodium_alloc_init(void)
 }
 
 int
-sodium_mlock(void * const addr, const size_t len)
+sodium_mlock(void *const addr, const size_t len)
 {
 #if defined(MADV_DONTDUMP) && defined(HAVE_MADVISE)
     (void) madvise(addr, len, MADV_DONTDUMP);
@@ -380,7 +420,7 @@ sodium_mlock(void * const addr, const size_t len)
 }
 
 int
-sodium_munlock(void * const addr, const size_t len)
+sodium_munlock(void *const addr, const size_t len)
 {
     sodium_memzero(addr, len);
 #if defined(MADV_DODUMP) && defined(HAVE_MADVISE)
@@ -440,15 +480,17 @@ _mprotect_readwrite(void *ptr, size_t size)
 
 #ifdef HAVE_ALIGNED_MALLOC
 
-static void
+__attribute__((noreturn)) static void
 _out_of_bounds(void)
 {
-# ifdef SIGSEGV
+# ifndef __wasm__
+#  ifdef SIGSEGV
     raise(SIGSEGV);
-# elif defined(SIGKILL)
+#  elif defined(SIGKILL)
     raise(SIGKILL);
+#  endif
 # endif
-    abort();
+    abort(); /* not something we want any higher-level API to catch */
 } /* LCOV_EXCL_LINE */
 
 static inline size_t
@@ -466,13 +508,14 @@ _alloc_aligned(const size_t size)
 
 # if defined(MAP_ANON) && defined(HAVE_MMAP)
     if ((ptr = mmap(NULL, size, PROT_READ | PROT_WRITE,
-                    MAP_ANON | MAP_PRIVATE | MAP_NOCORE, -1, 0)) == MAP_FAILED) {
+                    MAP_ANON | MAP_PRIVATE | MAP_NOCORE, -1, 0)) ==
+        MAP_FAILED) {
         ptr = NULL; /* LCOV_EXCL_LINE */
-    } /* LCOV_EXCL_LINE */
+    }               /* LCOV_EXCL_LINE */
 # elif defined(HAVE_POSIX_MEMALIGN)
     if (posix_memalign(&ptr, page_size, size) != 0) {
         ptr = NULL; /* LCOV_EXCL_LINE */
-    } /* LCOV_EXCL_LINE */
+    }               /* LCOV_EXCL_LINE */
 # elif defined(WINAPI_DESKTOP)
     ptr = VirtualAlloc(NULL, size, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
 # else
@@ -482,7 +525,7 @@ _alloc_aligned(const size_t size)
 }
 
 static void
-_free_aligned(unsigned char * const ptr, const size_t size)
+_free_aligned(unsigned char *const ptr, const size_t size)
 {
 # if defined(MAP_ANON) && defined(HAVE_MMAP)
     (void) munmap(ptr, size);
@@ -492,11 +535,11 @@ _free_aligned(unsigned char * const ptr, const size_t size)
     VirtualFree(ptr, 0U, MEM_RELEASE);
 # else
 #  error Bug
-# endif
+#endif
 }
 
 static unsigned char *
-_unprotected_ptr_from_user_ptr(void * const ptr)
+_unprotected_ptr_from_user_ptr(void *const ptr)
 {
     uintptr_t      unprotected_ptr_u;
     unsigned char *canary_ptr;
@@ -506,7 +549,7 @@ _unprotected_ptr_from_user_ptr(void * const ptr)
     page_mask = page_size - 1U;
     unprotected_ptr_u = ((uintptr_t) canary_ptr & (uintptr_t) ~page_mask);
     if (unprotected_ptr_u <= page_size * 2U) {
-        abort(); /* LCOV_EXCL_LINE */
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
     return (unsigned char *) unprotected_ptr_u;
 }
@@ -517,7 +560,7 @@ _unprotected_ptr_from_user_ptr(void * const ptr)
 static __attribute__((malloc)) void *
 _sodium_malloc(const size_t size)
 {
-    return malloc(size);
+    return malloc(size > (size_t) 0U ? size : (size_t) 1U);
 }
 #else
 static __attribute__((malloc)) void *
@@ -536,11 +579,11 @@ _sodium_malloc(const size_t size)
         return NULL;
     }
     if (page_size <= sizeof canary || page_size < sizeof unprotected_size) {
-        abort(); /* LCOV_EXCL_LINE */
+        sodium_misuse(); /* LCOV_EXCL_LINE */
     }
     size_with_canary = (sizeof canary) + size;
     unprotected_size = _page_round(size_with_canary);
-    total_size = page_size + page_size + unprotected_size + page_size;
+    total_size       = page_size + page_size + unprotected_size + page_size;
     if ((base_ptr = _alloc_aligned(total_size)) == NULL) {
         return NULL; /* LCOV_EXCL_LINE */
     }
@@ -551,8 +594,8 @@ _sodium_malloc(const size_t size)
 # endif
     _mprotect_noaccess(unprotected_ptr + unprotected_size, page_size);
     sodium_mlock(unprotected_ptr, unprotected_size);
-    canary_ptr = unprotected_ptr + _page_round(size_with_canary) -
-        size_with_canary;
+    canary_ptr =
+        unprotected_ptr + _page_round(size_with_canary) - size_with_canary;
     user_ptr = canary_ptr + sizeof canary;
     memcpy(canary_ptr, canary, sizeof canary);
     memcpy(base_ptr, &unprotected_size, sizeof unprotected_size);
@@ -569,7 +612,7 @@ sodium_malloc(const size_t size)
     void *ptr;
 
     if ((ptr = _sodium_malloc(size)) == NULL) {
-        return NULL; /* LCOV_EXCL_LINE */
+        return NULL;
     }
     memset(ptr, (int) GARBAGE_VALUE, size);
 
@@ -579,15 +622,11 @@ sodium_malloc(const size_t size)
 __attribute__((malloc)) void *
 sodium_allocarray(size_t count, size_t size)
 {
-    size_t total_size;
-
     if (count > (size_t) 0U && size >= (size_t) SIZE_MAX / count) {
         errno = ENOMEM;
         return NULL;
     }
-    total_size = count * size;
-
-    return sodium_malloc(total_size);
+    return sodium_malloc(count * size);
 }
 
 #ifndef HAVE_ALIGNED_MALLOC
@@ -609,9 +648,9 @@ sodium_free(void *ptr)
     if (ptr == NULL) {
         return;
     }
-    canary_ptr = ((unsigned char *) ptr) - sizeof canary;
+    canary_ptr      = ((unsigned char *) ptr) - sizeof canary;
     unprotected_ptr = _unprotected_ptr_from_user_ptr(ptr);
-    base_ptr = unprotected_ptr - page_size * 2U;
+    base_ptr        = unprotected_ptr - page_size * 2U;
     memcpy(&unprotected_size, base_ptr, sizeof unprotected_size);
     total_size = page_size + page_size + unprotected_size + page_size;
     _mprotect_readwrite(base_ptr, total_size);
@@ -619,8 +658,8 @@ sodium_free(void *ptr)
         _out_of_bounds();
     }
 # ifndef HAVE_PAGE_PROTECTION
-    if (sodium_memcmp(unprotected_ptr + unprotected_size,
-                      canary, sizeof canary) != 0) {
+    if (sodium_memcmp(unprotected_ptr + unprotected_size, canary,
+                      sizeof canary) != 0) {
         _out_of_bounds();
     }
 # endif
@@ -647,7 +686,7 @@ _sodium_mprotect(void *ptr, int (*cb)(void *ptr, size_t size))
     size_t         unprotected_size;
 
     unprotected_ptr = _unprotected_ptr_from_user_ptr(ptr);
-    base_ptr = unprotected_ptr - page_size * 2U;
+    base_ptr        = unprotected_ptr - page_size * 2U;
     memcpy(&unprotected_size, base_ptr, sizeof unprotected_size);
 
     return cb(unprotected_ptr, unprotected_size);
@@ -671,3 +710,74 @@ sodium_mprotect_readwrite(void *ptr)
 {
     return _sodium_mprotect(ptr, _mprotect_readwrite);
 }
+
+int
+sodium_pad(size_t *padded_buflen_p, unsigned char *buf,
+           size_t unpadded_buflen, size_t blocksize, size_t max_buflen)
+{
+    unsigned char          *tail;
+    size_t                  i;
+    size_t                  xpadlen;
+    size_t                  xpadded_len;
+    volatile unsigned char  mask;
+    unsigned char           barrier_mask;
+
+    if (blocksize <= 0U) {
+        return -1;
+    }
+    xpadlen = blocksize - 1U;
+    if ((blocksize & (blocksize - 1U)) == 0U) {
+        xpadlen -= unpadded_buflen & (blocksize - 1U);
+    } else {
+        xpadlen -= unpadded_buflen % blocksize;
+    }
+    if ((size_t) SIZE_MAX - unpadded_buflen <= xpadlen) {
+        sodium_misuse();
+    }
+    xpadded_len = unpadded_buflen + xpadlen;
+    if (xpadded_len >= max_buflen) {
+        return -1;
+    }
+    tail = &buf[xpadded_len];
+    if (padded_buflen_p != NULL) {
+        *padded_buflen_p = xpadded_len + 1U;
+    }
+    mask = 0U;
+    for (i = 0; i < blocksize; i++) {
+        barrier_mask = (unsigned char) (((i ^ xpadlen) - 1U)
+           >> ((sizeof(size_t) - 1) * CHAR_BIT));
+        *(tail - i) = ((*(tail - i)) & mask) | (0x80 & barrier_mask);
+        mask |= barrier_mask;
+    }
+    return 0;
+}
+
+int
+sodium_unpad(size_t *unpadded_buflen_p, const unsigned char *buf,
+             size_t padded_buflen, size_t blocksize)
+{
+    const unsigned char *tail;
+    unsigned char        acc = 0U;
+    unsigned char        c;
+    unsigned char        valid = 0U;
+    volatile size_t      pad_len = 0U;
+    size_t               i;
+    size_t               is_barrier;
+
+    if (padded_buflen < blocksize || blocksize <= 0U) {
+        return -1;
+    }
+    tail = &buf[padded_buflen - 1U];
+
+    for (i = 0U; i < blocksize; i++) {
+        c = *(tail - i);
+        is_barrier =
+            (( (acc - 1U) & (pad_len - 1U) & ((c ^ 0x80) - 1U) ) >> 8) & 1U;
+        acc |= c;
+        pad_len |= i & (1U + ~is_barrier);
+        valid |= (unsigned char) is_barrier;
+    }
+    *unpadded_buflen_p = padded_buflen - 1U - pad_len;
+
+    return (int) (valid - 1U);
+}
diff --git a/libsodium/src/libsodium/sodium/version.c b/libsodium/src/libsodium/sodium/version.c
index 4083c81..4e584a6 100644
--- a/libsodium/src/libsodium/sodium/version.c
+++ b/libsodium/src/libsodium/sodium/version.c
@@ -18,3 +18,13 @@ sodium_library_version_minor(void)
 {
     return SODIUM_LIBRARY_VERSION_MINOR;
 }
+
+int
+sodium_library_minimal(void)
+{
+#ifdef SODIUM_LIBRARY_MINIMAL
+    return 1;
+#else
+    return 0;
+#endif
+}
diff --git a/libsodium/test/HAVE_AMD64_ASM.c b/libsodium/test/HAVE_AMD64_ASM.c
deleted file mode 100644
index 037fc03..0000000
--- a/libsodium/test/HAVE_AMD64_ASM.c
+++ /dev/null
@@ -1,11 +0,0 @@
-#if defined(__amd64) || defined(__amd64__) || defined(__x86_64__)
-# if defined(__CYGWIN__) || defined(__MINGW32__) || defined(__MINGW64__) || defined(_WIN32) || defined(_WIN64)
-# error Windows x86_64 calling conventions are not supported yet
-# endif
-/* neat */
-#else
-# error !x86_64
-#endif
-void main() {
-	__asm__("pxor %xmm12,%xmm6");
-}
\ No newline at end of file
diff --git a/libsodium/test/HAVE_CPUID.c b/libsodium/test/HAVE_CPUID.c
deleted file mode 100644
index 00af639..0000000
--- a/libsodium/test/HAVE_CPUID.c
+++ /dev/null
@@ -1,8 +0,0 @@
-
-void main(){
-	unsigned int cpu_info[4];
-	__asm__ __volatile__ ("xchgl %%ebx, %k1; cpuid; xchgl %%ebx, %k1" :
-	"=a" (cpu_info[0]), "=&r" (cpu_info[1]),
-	"=c" (cpu_info[2]), "=d" (cpu_info[3]) :
-	"0" (0U), "2" (0U));
-}
\ No newline at end of file
diff --git a/libsodium/test/HAVE_TI_MODE.c b/libsodium/test/HAVE_TI_MODE.c
deleted file mode 100644
index 0169750..0000000
--- a/libsodium/test/HAVE_TI_MODE.c
+++ /dev/null
@@ -1,22 +0,0 @@
-#ifndef __GNUC__
-# error mode(TI) is a gcc extension
-#endif
-#if defined(__clang__) && !defined(__x86_64__)
-# error clang doesn't properly compile smult_curve25519_donna_c64.c
-#endif
-#ifndef NATIVE_LITTLE_ENDIAN
-# error donna_c64 currently requires a little endian CPU
-#endif
-#ifdef EMSCRIPTEN
-# error emscripten currently supports only shift operations on integers \
-# larger than 64 bits
-#endif
-#include <stdint.h>
-typedef unsigned uint128_t __attribute__((mode(TI)));
-void fcontract(uint128_t *t) {
-	*t += 0x8000000000000 - 1;
-}
-
-void main(){
-	(void) fcontract;
-}
\ No newline at end of file
diff --git a/libsodium/test/HAVE_WEAK_SYMBOLS.c b/libsodium/test/HAVE_WEAK_SYMBOLS.c
deleted file mode 100644
index f5a4786..0000000
--- a/libsodium/test/HAVE_WEAK_SYMBOLS.c
+++ /dev/null
@@ -1,2 +0,0 @@
-__attribute__((weak)) void __dummy(void *x) { }
-void f(void *x) { __dummy(x); }
\ No newline at end of file
diff --git a/libsodium/test/IS_STDC_LIMIT_MACROS_NEEDED.c b/libsodium/test/IS_STDC_LIMIT_MACROS_NEEDED.c
deleted file mode 100644
index ebad02f..0000000
--- a/libsodium/test/IS_STDC_LIMIT_MACROS_NEEDED.c
+++ /dev/null
@@ -1,7 +0,0 @@
-#include <limits.h>
-#include <stdint.h>
-
-void main(){
-	(void) SIZE_MAX;
-	(void) UINT64_MAX;
-}
\ No newline at end of file
diff --git a/libsodium/test/default/CMakeLists.txt b/libsodium/test/default/CMakeLists.txt
deleted file mode 100644
index 38c5b0d..0000000
--- a/libsodium/test/default/CMakeLists.txt
+++ /dev/null
@@ -1,248 +0,0 @@
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../include)
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../../include/sodium)
-INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/test/quirks)
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/../quirks)
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR})
-
-#For version.h.in to version.h
-INCLUDE_DIRECTORIES(${CMAKE_CURRENT_BINARY_DIR}/../../src/libsodium/include)
-
-#ADD_DEFINITIONS("-DTEST_SRCDIR=${CMAKE_CURRENT_SOURCE_DIR}")
-
-SET(LIBSODIUM_LIB_PATH sodium)
-
-ADD_EXECUTABLE       (aead_chacha20poly1305 cmptest.h aead_chacha20poly1305.c)
-TARGET_LINK_LIBRARIES(aead_chacha20poly1305 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (auth                  cmptest.h auth.c)
-TARGET_LINK_LIBRARIES(auth                  ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (auth2                 cmptest.h auth2.c)
-TARGET_LINK_LIBRARIES(auth2                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (auth3                 cmptest.h auth3.c)
-TARGET_LINK_LIBRARIES(auth3                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (auth5                 cmptest.h auth5.c ${CMAKE_CURRENT_SOURCE_DIR}/../quirks/quirks.h)
-TARGET_LINK_LIBRARIES(auth5                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (auth6                 cmptest.h auth6.c ${CMAKE_CURRENT_SOURCE_DIR}/../quirks/quirks.h)
-TARGET_LINK_LIBRARIES(auth6                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (auth7                 cmptest.h auth7.c ${CMAKE_CURRENT_SOURCE_DIR}/../quirks/quirks.h)
-TARGET_LINK_LIBRARIES(auth7                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box                   cmptest.h box.c)
-TARGET_LINK_LIBRARIES(box                   ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box2                  cmptest.h box2.c)
-TARGET_LINK_LIBRARIES(box2                  ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box7                  cmptest.h box7.c)
-TARGET_LINK_LIBRARIES(box7                  ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box8                  cmptest.h box8.c)
-TARGET_LINK_LIBRARIES(box8                  ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box_easy              cmptest.h box_easy.c)
-TARGET_LINK_LIBRARIES(box_easy              ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box_easy2             cmptest.h box_easy2.c)
-TARGET_LINK_LIBRARIES(box_easy2             ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box_seal              cmptest.h box_seal.c)
-TARGET_LINK_LIBRARIES(box_seal              ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (box_seed              cmptest.h box_seed.c)
-TARGET_LINK_LIBRARIES(box_seed              ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (chacha20              cmptest.h chacha20.c)
-TARGET_LINK_LIBRARIES(chacha20              ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (core1                 cmptest.h core1.c)
-TARGET_LINK_LIBRARIES(core1                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (core2                 cmptest.h core2.c)
-TARGET_LINK_LIBRARIES(core2                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (core3                 cmptest.h core3.c)
-TARGET_LINK_LIBRARIES(core3                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (core4                 cmptest.h core4.c)
-TARGET_LINK_LIBRARIES(core4                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (core5                 cmptest.h core5.c)
-TARGET_LINK_LIBRARIES(core5                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (core6                 cmptest.h core6.c)
-TARGET_LINK_LIBRARIES(core6                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (ed25519_convert       cmptest.h ed25519_convert.c)
-TARGET_LINK_LIBRARIES(ed25519_convert       ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (generichash           cmptest.h generichash.c)
-TARGET_LINK_LIBRARIES(generichash           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (generichash2          cmptest.h generichash2.c)
-TARGET_LINK_LIBRARIES(generichash2          ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (generichash3          cmptest.h generichash3.c)
-TARGET_LINK_LIBRARIES(generichash3          ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (hash                  cmptest.h hash.c)
-TARGET_LINK_LIBRARIES(hash                  ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (hash3                 cmptest.h hash3.c)
-TARGET_LINK_LIBRARIES(hash3                 ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (onetimeauth           cmptest.h onetimeauth.c)
-TARGET_LINK_LIBRARIES(onetimeauth           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (onetimeauth2          cmptest.h onetimeauth2.c)
-TARGET_LINK_LIBRARIES(onetimeauth2          ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (onetimeauth7          cmptest.h onetimeauth7.c)
-TARGET_LINK_LIBRARIES(onetimeauth7          ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (pwhash                cmptest.h pwhash.c)
-TARGET_LINK_LIBRARIES(pwhash                ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (pwhash_scrypt_ll      cmptest.h pwhash_scrypt_ll.c)
-TARGET_LINK_LIBRARIES(pwhash_scrypt_ll      ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (randombytes           cmptest.h randombytes.c)
-TARGET_LINK_LIBRARIES(randombytes           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (scalarmult            cmptest.h scalarmult.c)
-TARGET_LINK_LIBRARIES(scalarmult            ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (scalarmult2           cmptest.h scalarmult2.c)
-TARGET_LINK_LIBRARIES(scalarmult2           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (scalarmult5           cmptest.h scalarmult5.c)
-TARGET_LINK_LIBRARIES(scalarmult5           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (scalarmult6           cmptest.h scalarmult6.c)
-TARGET_LINK_LIBRARIES(scalarmult6           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (scalarmult7           cmptest.h scalarmult7.c)
-TARGET_LINK_LIBRARIES(scalarmult7           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (secretbox             cmptest.h secretbox.c)
-TARGET_LINK_LIBRARIES(secretbox             ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (secretbox2            cmptest.h secretbox2.c)
-TARGET_LINK_LIBRARIES(secretbox2            ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (secretbox7            cmptest.h secretbox7.c)
-TARGET_LINK_LIBRARIES(secretbox7            ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (secretbox8            cmptest.h secretbox8.c)
-TARGET_LINK_LIBRARIES(secretbox8            ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (secretbox_easy        cmptest.h secretbox_easy.c)
-TARGET_LINK_LIBRARIES(secretbox_easy        ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (secretbox_easy2       cmptest.h secretbox_easy2.c)
-TARGET_LINK_LIBRARIES(secretbox_easy2       ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (shorthash             cmptest.h shorthash.c)
-TARGET_LINK_LIBRARIES(shorthash             ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (sign                  cmptest.h sign.c)
-TARGET_LINK_LIBRARIES(sign                  ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (sodium_core           cmptest.h sodium_core.c)
-TARGET_LINK_LIBRARIES(sodium_core           ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (sodium_utils          cmptest.h sodium_utils.c)
-TARGET_LINK_LIBRARIES(sodium_utils          ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (sodium_utils2         cmptest.h sodium_utils2.c)
-TARGET_LINK_LIBRARIES(sodium_utils2         ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (sodium_utils3         cmptest.h sodium_utils3.c)
-TARGET_LINK_LIBRARIES(sodium_utils3         ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (sodium_version        cmptest.h sodium_version.c)
-TARGET_LINK_LIBRARIES(sodium_version        ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (stream                cmptest.h stream.c)
-TARGET_LINK_LIBRARIES(stream                ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (stream2               cmptest.h stream2.c)
-TARGET_LINK_LIBRARIES(stream2               ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (stream3               cmptest.h stream3.c)
-TARGET_LINK_LIBRARIES(stream3               ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (stream4               cmptest.h stream4.c)
-TARGET_LINK_LIBRARIES(stream4               ${LIBSODIUM_LIB_PATH})
-
-ADD_EXECUTABLE       (verify1               cmptest.h verify1.c)
-TARGET_LINK_LIBRARIES(verify1               ${LIBSODIUM_LIB_PATH})
-
-
-SET(ADDITIONAL_CLEAN_FILES
-    ${CMAKE_CURRENT_SOURCE_DIR}/aead_chacha20poly1305.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/auth.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/auth2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/auth3.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/auth5.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/auth6.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/auth7.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box7.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box8.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box_easy.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box_easy2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box_seal.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/box_seed.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/chacha20.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/core1.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/core2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/core3.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/core4.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/core5.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/core6.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/ed25519_convert.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/generichash.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/generichash2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/generichash3.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/hash.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/hash2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/hash3.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/onetimeauth.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/onetimeauth2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/onetimeauth7.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/pwhash.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/pwhash_scrypt_ll.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/randombytes.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/scalarmult.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/scalarmult2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/scalarmult5.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/scalarmult6.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/scalarmult7.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/secretbox.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/secretbox2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/secretbox7.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/secretbox8.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/secretbox_easy.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/secretbox_easy2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/shorthash.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/sign.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/sodium_core.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/sodium_utils.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/sodium_utils2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/sodium_utils3.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/sodium_version.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/stream.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/stream2.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/stream3.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/stream4.res
-    ${CMAKE_CURRENT_SOURCE_DIR}/verify1.res
-)
-
-SET_DIRECTORY_PROPERTIES(PROPERTIES
-ADDITIONAL_MAKE_CLEAN_FILES "${ADDITIONAL_CLEAN_FILES}")
diff --git a/libsodium/test/default/Makefile.am b/libsodium/test/default/Makefile.am
index a4bf6e7..59f8595 100644
--- a/libsodium/test/default/Makefile.am
+++ b/libsodium/test/default/Makefile.am
@@ -1,9 +1,14 @@
 
 EXTRA_DIST = \
 	cmptest.h \
+	wasi-test-wrapper.sh \
 	wintest.bat \
 	pre.js.inc \
+	aead_aes256gcm.exp \
+	aead_aes256gcm2.exp \
 	aead_chacha20poly1305.exp \
+	aead_chacha20poly13052.exp \
+	aead_xchacha20poly1305.exp \
 	auth.exp \
 	auth2.exp \
 	auth3.exp \
@@ -19,6 +24,9 @@ EXTRA_DIST = \
 	box_seal.exp \
 	box_seed.exp \
 	chacha20.exp \
+	codecs.exp \
+	core_ed25519.exp \
+	core_ristretto255.exp \
 	core1.exp \
 	core2.exp \
 	core3.exp \
@@ -32,25 +40,37 @@ EXTRA_DIST = \
 	hash.exp \
 	hash2.exp \
 	hash3.exp \
+	kdf.exp \
+	keygen.exp \
+	kx.exp \
+	metamorphic.exp \
+	misuse.exp \
 	onetimeauth.exp \
 	onetimeauth2.exp \
 	onetimeauth7.exp \
-	pwhash.exp \
+	pwhash_argon2i.exp \
+	pwhash_argon2id.exp \
+	pwhash_scrypt.exp \
 	pwhash_scrypt_ll.exp \
 	randombytes.exp \
 	scalarmult.exp \
+	scalarmult_ed25519.exp \
+	scalarmult_ristretto255.exp \
 	scalarmult2.exp \
 	scalarmult5.exp \
 	scalarmult6.exp \
 	scalarmult7.exp \
+	scalarmult8.exp \
 	secretbox.exp \
 	secretbox2.exp \
 	secretbox7.exp \
 	secretbox8.exp \
 	secretbox_easy.exp \
 	secretbox_easy2.exp \
+	secretstream.exp \
 	shorthash.exp \
 	sign.exp \
+	siphashx24.exp \
 	sodium_core.exp \
 	sodium_utils.exp \
 	sodium_utils2.exp \
@@ -60,10 +80,15 @@ EXTRA_DIST = \
 	stream2.exp \
 	stream3.exp \
 	stream4.exp \
-	verify1.exp
+	verify1.exp \
+	xchacha20.exp
 
 DISTCLEANFILES = \
+	aead_aes256gcm.res \
+	aead_aes256gcm2.res \
 	aead_chacha20poly1305.res \
+	aead_chacha20poly13052.res \
+	aead_xchacha20poly1305.res \
 	auth.res \
 	auth2.res \
 	auth3.res \
@@ -79,6 +104,9 @@ DISTCLEANFILES = \
 	box_seal.res \
 	box_seed.res \
 	chacha20.res \
+	codecs.res \
+	core_ed25519.res \
+	core_ristretto255.res \
 	core1.res \
 	core2.res \
 	core3.res \
@@ -92,25 +120,37 @@ DISTCLEANFILES = \
 	hash.res \
 	hash2.res \
 	hash3.res \
+	kdf.res \
+	keygen.res \
+	kx.res \
+	metamorphic.res \
+	misuse.res \
 	onetimeauth.res \
 	onetimeauth2.res \
 	onetimeauth7.res \
-	pwhash.res \
+	pwhash_argon2i.res \
+	pwhash_argon2id.res \
+	pwhash_scrypt.res \
 	pwhash_scrypt_ll.res \
 	randombytes.res \
 	scalarmult.res \
+	scalarmult_ed25519.res \
+	scalarmult_ristretto255.res \
 	scalarmult2.res \
 	scalarmult5.res \
 	scalarmult6.res \
 	scalarmult7.res \
+	scalarmult8.res \
 	secretbox.res \
 	secretbox2.res \
 	secretbox7.res \
 	secretbox8.res \
 	secretbox_easy.res \
 	secretbox_easy2.res \
+	secretstream.res \
 	shorthash.res \
 	sign.res \
+	siphashx24.res \
 	sodium_core.res \
 	sodium_utils.res \
 	sodium_utils2.res \
@@ -120,7 +160,8 @@ DISTCLEANFILES = \
 	stream2.res \
 	stream3.res \
 	stream4.res \
-	verify1.res
+	verify1.res \
+	xchacha20.res
 
 AM_CPPFLAGS = \
 	-DTEST_SRCDIR=\"@srcdir@\" \
@@ -133,7 +174,11 @@ AM_CPPFLAGS = \
 AM_LDFLAGS = @TEST_LDFLAGS@
 
 TESTS_TARGETS = \
+	aead_aes256gcm \
+	aead_aes256gcm2 \
 	aead_chacha20poly1305 \
+	aead_chacha20poly13052 \
+	aead_xchacha20poly1305 \
 	auth \
 	auth2 \
 	auth3 \
@@ -149,6 +194,7 @@ TESTS_TARGETS = \
 	box_seal \
 	box_seed \
 	chacha20 \
+	codecs \
 	core1 \
 	core2 \
 	core3 \
@@ -161,23 +207,30 @@ TESTS_TARGETS = \
 	generichash3 \
 	hash \
 	hash3 \
+	kdf \
+	keygen \
+	kx \
+	metamorphic \
+	misuse \
 	onetimeauth \
 	onetimeauth2 \
 	onetimeauth7 \
-	pwhash \
-	pwhash_scrypt_ll \
+	pwhash_argon2i \
+	pwhash_argon2id \
 	randombytes \
 	scalarmult \
 	scalarmult2 \
 	scalarmult5 \
 	scalarmult6 \
 	scalarmult7 \
+	scalarmult8 \
 	secretbox \
 	secretbox2 \
 	secretbox7 \
 	secretbox8 \
 	secretbox_easy \
 	secretbox_easy2 \
+	secretstream \
 	shorthash \
 	sign \
 	sodium_core \
@@ -202,9 +255,21 @@ TESTS = $(TESTS_TARGETS)
 TESTS_LDADD = \
 	${top_builddir}/src/libsodium/libsodium.la
 
+aead_aes256gcm_SOURCE                 = cmptest.h aead_aes256gcm.c
+aead_aes256gcm_LDADD                  = $(TESTS_LDADD)
+
+aead_aes256gcm2_SOURCE                = cmptest.h aead_aes256gcm2.c
+aead_aes256gcm2_LDADD                 = $(TESTS_LDADD)
+
 aead_chacha20poly1305_SOURCE          = cmptest.h aead_chacha20poly1305.c
 aead_chacha20poly1305_LDADD           = $(TESTS_LDADD)
 
+aead_chacha20poly13052_SOURCE         = cmptest.h aead_chacha20poly13052.c
+aead_chacha20poly13052_LDADD          = $(TESTS_LDADD)
+
+aead_xchacha20poly1305_SOURCE         = cmptest.h aead_xchacha20poly1305.c
+aead_xchacha20poly1305_LDADD          = $(TESTS_LDADD)
+
 auth_SOURCE               = cmptest.h auth.c
 auth_LDADD                = $(TESTS_LDADD)
 
@@ -250,6 +315,15 @@ box_seed_LDADD            = $(TESTS_LDADD)
 chacha20_SOURCE           = cmptest.h chacha20.c
 chacha20_LDADD            = $(TESTS_LDADD)
 
+codecs_SOURCE             = cmptest.h codecs.c
+codecs_LDADD              = $(TESTS_LDADD)
+
+core_ed25519_SOURCE       = cmptest.h core_ed25519.c
+core_ed25519_LDADD        = $(TESTS_LDADD)
+
+core_ristretto255_SOURCE  = cmptest.h core_ristretto255.c
+core_ristretto255_LDADD   = $(TESTS_LDADD)
+
 core1_SOURCE              = cmptest.h core1.c
 core1_LDADD               = $(TESTS_LDADD)
 
@@ -286,6 +360,21 @@ hash_LDADD                = $(TESTS_LDADD)
 hash3_SOURCE              = cmptest.h hash3.c
 hash3_LDADD               = $(TESTS_LDADD)
 
+kdf_SOURCE                = cmptest.h kdf.c
+kdf_LDADD                 = $(TESTS_LDADD)
+
+keygen_SOURCE             = cmptest.h keygen.c
+keygen_LDADD              = $(TESTS_LDADD)
+
+kx_SOURCE                 = cmptest.h kx.c
+kx_LDADD                  = $(TESTS_LDADD)
+
+metamorphic_SOURCE        = cmptest.h metamorphic.c
+metamorphic_LDADD         = $(TESTS_LDADD)
+
+misuse_SOURCE             = cmptest.h misuse.c
+misuse_LDADD              = $(TESTS_LDADD)
+
 onetimeauth_SOURCE        = cmptest.h onetimeauth.c
 onetimeauth_LDADD         = $(TESTS_LDADD)
 
@@ -295,8 +384,14 @@ onetimeauth2_LDADD        = $(TESTS_LDADD)
 onetimeauth7_SOURCE       = cmptest.h onetimeauth7.c
 onetimeauth7_LDADD        = $(TESTS_LDADD)
 
-pwhash_SOURCE             = cmptest.h pwhash.c
-pwhash_LDADD              = $(TESTS_LDADD)
+pwhash_argon2i_SOURCE     = cmptest.h pwhash_argon2i.c
+pwhash_argon2i_LDADD      = $(TESTS_LDADD)
+
+pwhash_argon2id_SOURCE    = cmptest.h pwhash_argon2id.c
+pwhash_argon2id_LDADD     = $(TESTS_LDADD)
+
+pwhash_scrypt_SOURCE      = cmptest.h pwhash_scrypt.c
+pwhash_scrypt_LDADD       = $(TESTS_LDADD)
 
 pwhash_scrypt_ll_SOURCE   = cmptest.h pwhash_scrypt_ll.c
 pwhash_scrypt_ll_LDADD    = $(TESTS_LDADD)
@@ -307,6 +402,12 @@ randombytes_LDADD         = $(TESTS_LDADD)
 scalarmult_SOURCE         = cmptest.h scalarmult.c
 scalarmult_LDADD          = $(TESTS_LDADD)
 
+scalarmult_ed25519_SOURCE = cmptest.h scalarmult_ed25519.c
+scalarmult_ed25519_LDADD  = $(TESTS_LDADD)
+
+scalarmult_ristretto255_SOURCE = cmptest.h scalarmult_ristretto255.c
+scalarmult_ristretto255_LDADD  = $(TESTS_LDADD)
+
 scalarmult2_SOURCE        = cmptest.h scalarmult2.c
 scalarmult2_LDADD         = $(TESTS_LDADD)
 
@@ -319,6 +420,9 @@ scalarmult6_LDADD         = $(TESTS_LDADD)
 scalarmult7_SOURCE        = cmptest.h scalarmult7.c
 scalarmult7_LDADD         = $(TESTS_LDADD)
 
+scalarmult8_SOURCE        = cmptest.h scalarmult8.c
+scalarmult8_LDADD         = $(TESTS_LDADD)
+
 secretbox_SOURCE          = cmptest.h secretbox.c
 secretbox_LDADD           = $(TESTS_LDADD)
 
@@ -337,12 +441,18 @@ secretbox_easy_LDADD      = $(TESTS_LDADD)
 secretbox_easy2_SOURCE    = cmptest.h secretbox_easy2.c
 secretbox_easy2_LDADD     = $(TESTS_LDADD)
 
+secretstream_SOURCE       = cmptest.h secretstream.c
+secretstream_LDADD        = $(TESTS_LDADD)
+
 shorthash_SOURCE          = cmptest.h shorthash.c
 shorthash_LDADD           = $(TESTS_LDADD)
 
 sign_SOURCE               = cmptest.h sign.c
 sign_LDADD                = $(TESTS_LDADD)
 
+siphashx24_SOURCE         = cmptest.h siphashx24.c
+siphashx24_LDADD          = $(TESTS_LDADD)
+
 sodium_core_SOURCE        = cmptest.h sodium_core.c
 sodium_core_LDADD         = $(TESTS_LDADD)
 
@@ -373,4 +483,25 @@ stream4_LDADD             = $(TESTS_LDADD)
 verify1_SOURCE            = cmptest.h verify1.c
 verify1_LDADD             = $(TESTS_LDADD)
 
+xchacha20_SOURCE          = cmptest.h xchacha20.c
+xchacha20_LDADD           = $(TESTS_LDADD)
+
+if !MINIMAL
+TESTS_TARGETS += \
+	core_ed25519 \
+	core_ristretto255 \
+	pwhash_scrypt \
+	pwhash_scrypt_ll \
+	scalarmult_ed25519 \
+	scalarmult_ristretto255 \
+	siphashx24 \
+	xchacha20
+endif
+
+if WASI
+LOG_COMPILER = ./wasi-test-wrapper.sh
+endif
+
 verify: check
+
+@VALGRIND_CHECK_RULES@
diff --git a/libsodium/test/default/aead_chacha20poly1305.c b/libsodium/test/default/aead_chacha20poly1305.c
index 83374b2..0a01afe 100644
--- a/libsodium/test/default/aead_chacha20poly1305.c
+++ b/libsodium/test/default/aead_chacha20poly1305.c
@@ -2,127 +2,371 @@
 #define TEST_NAME "aead_chacha20poly1305"
 #include "cmptest.h"
 
-static unsigned char firstkey[crypto_aead_chacha20poly1305_KEYBYTES]
-    = { 0x42, 0x90, 0xbc, 0xb1, 0x54, 0x17, 0x35, 0x31, 0xf3, 0x14, 0xaf,
-        0x57, 0xf3, 0xbe, 0x3b, 0x50, 0x06, 0xda, 0x37, 0x1e, 0xce, 0x27,
-        0x2a, 0xfa, 0x1b, 0x5d, 0xbd, 0xd1, 0x10, 0x0a, 0x10, 0x07 };
-
-static unsigned char m[10U]
-    = { 0x86, 0xd0, 0x99, 0x74, 0x84, 0x0b, 0xde, 0xd2, 0xa5, 0xca };
-
-static unsigned char nonce[crypto_aead_chacha20poly1305_NPUBBYTES]
-    = { 0xcd, 0x7c, 0xf6, 0x7b, 0xe3, 0x9c, 0x79, 0x4a };
-
-static unsigned char ad[10U]
-    = { 0x87, 0xe2, 0x29, 0xd4, 0x50, 0x08, 0x45, 0xa0, 0x79, 0xc0 };
-
-static unsigned char c[10U + crypto_aead_chacha20poly1305_ABYTES];
-
-int main(void)
+static int
+tv(void)
 {
-    unsigned char m2[10U];
-    unsigned long long clen;
+#undef  MLEN
+#define MLEN 10U
+#undef  ADLEN
+#define ADLEN 10U
+#undef  CLEN
+#define CLEN (MLEN + crypto_aead_chacha20poly1305_ABYTES)
+    static const unsigned char firstkey[crypto_aead_chacha20poly1305_KEYBYTES]
+        = { 0x42, 0x90, 0xbc, 0xb1, 0x54, 0x17, 0x35, 0x31, 0xf3, 0x14, 0xaf,
+            0x57, 0xf3, 0xbe, 0x3b, 0x50, 0x06, 0xda, 0x37, 0x1e, 0xce, 0x27,
+            0x2a, 0xfa, 0x1b, 0x5d, 0xbd, 0xd1, 0x10, 0x0a, 0x10, 0x07 };
+    static const unsigned char m[MLEN]
+        = { 0x86, 0xd0, 0x99, 0x74, 0x84, 0x0b, 0xde, 0xd2, 0xa5, 0xca };
+    static const unsigned char nonce[crypto_aead_chacha20poly1305_NPUBBYTES]
+        = { 0xcd, 0x7c, 0xf6, 0x7b, 0xe3, 0x9c, 0x79, 0x4a };
+    static const unsigned char ad[ADLEN]
+        = { 0x87, 0xe2, 0x29, 0xd4, 0x50, 0x08, 0x45, 0xa0, 0x79, 0xc0 };
+    unsigned char *c = (unsigned char *) sodium_malloc(CLEN);
+    unsigned char *detached_c = (unsigned char *) sodium_malloc(MLEN);
+    unsigned char *mac = (unsigned char *) sodium_malloc(crypto_aead_chacha20poly1305_ABYTES);
+    unsigned char *m2 = (unsigned char *) sodium_malloc(MLEN);
+    unsigned long long found_clen;
+    unsigned long long found_maclen;
     unsigned long long m2len;
     size_t i;
 
-    crypto_aead_chacha20poly1305_encrypt(c, &clen, m, sizeof m, ad, sizeof ad,
+    crypto_aead_chacha20poly1305_encrypt(c, &found_clen, m, MLEN,
+                                         ad, ADLEN,
                                          NULL, nonce, firstkey);
-    if (clen != sizeof m + crypto_aead_chacha20poly1305_abytes()) {
-        printf("clen is not properly set\n");
+    if (found_clen != CLEN) {
+        printf("found_clen is not properly set\n");
     }
-    for (i = 0U; i < sizeof c; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
+    for (i = 0U; i < CLEN; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
     }
     printf("\n");
+    crypto_aead_chacha20poly1305_encrypt_detached(detached_c,
+                                                  mac, &found_maclen,
+                                                  m, MLEN, ad, ADLEN,
+                                                  NULL, nonce, firstkey);
+    if (found_maclen != crypto_aead_chacha20poly1305_abytes()) {
+        printf("found_maclen is not properly set\n");
+    }
+    if (memcmp(detached_c, c, MLEN) != 0) {
+        printf("detached ciphertext is bogus\n");
+    }
 
-    if (crypto_aead_chacha20poly1305_decrypt(m2, &m2len, NULL, c, sizeof c, ad,
-                                             sizeof ad, nonce, firstkey) != 0) {
+    if (crypto_aead_chacha20poly1305_decrypt(m2, &m2len, NULL, c, CLEN,
+                                             ad, ADLEN,
+                                             nonce, firstkey) != 0) {
         printf("crypto_aead_chacha20poly1305_decrypt() failed\n");
     }
-    if (m2len != sizeof c - crypto_aead_chacha20poly1305_abytes()) {
+    if (m2len != MLEN) {
         printf("m2len is not properly set\n");
     }
-    if (memcmp(m, m2, sizeof m) != 0) {
+    if (memcmp(m, m2, MLEN) != 0) {
         printf("m != m2\n");
     }
+    memset(m2, 0, m2len);
+    assert(crypto_aead_chacha20poly1305_decrypt_detached(NULL, NULL,
+                                                         c, MLEN, mac,
+                                                         ad, ADLEN,
+                                                         nonce, firstkey) == 0);
+    if (crypto_aead_chacha20poly1305_decrypt_detached(m2, NULL,
+                                                      c, MLEN, mac,
+                                                      ad, ADLEN,
+                                                      nonce, firstkey) != 0) {
+        printf("crypto_aead_chacha20poly1305_decrypt_detached() failed\n");
+    }
+    if (memcmp(m, m2, MLEN) != 0) {
+        printf("detached m != m2\n");
+    }
 
-    for (i = 0U; i < sizeof c; i++) {
+    for (i = 0U; i < CLEN; i++) {
         c[i] ^= (i + 1U);
-        if (crypto_aead_chacha20poly1305_decrypt(m2, NULL, NULL, c, sizeof c,
-                                                 ad, sizeof ad, nonce, firstkey)
-            == 0 || memcmp(m, m2, sizeof m) == 0) {
+        if (crypto_aead_chacha20poly1305_decrypt(m2, NULL, NULL, c, CLEN,
+                                                 ad, ADLEN, nonce, firstkey)
+            == 0 || memcmp(m, m2, MLEN) == 0) {
             printf("message can be forged\n");
         }
         c[i] ^= (i + 1U);
     }
 
-    crypto_aead_chacha20poly1305_encrypt(c, &clen, m, sizeof m, NULL, 0U, NULL,
-                                         nonce, firstkey);
-    if (clen != sizeof m + crypto_aead_chacha20poly1305_abytes()) {
-        printf("clen is not properly set (adlen=0)\n");
+    crypto_aead_chacha20poly1305_encrypt(c, &found_clen, m, MLEN,
+                                         NULL, 0U, NULL, nonce, firstkey);
+    if (found_clen != CLEN) {
+        printf("found_clen is not properly set (adlen=0)\n");
     }
-    for (i = 0U; i < sizeof c; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
+    for (i = 0U; i < CLEN; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
     }
     printf("\n");
 
-    if (crypto_aead_chacha20poly1305_decrypt(m2, &m2len, NULL, c, sizeof c,
+    if (crypto_aead_chacha20poly1305_decrypt(m2, &m2len, NULL, c, CLEN,
                                              NULL, 0U, nonce, firstkey) != 0) {
         printf("crypto_aead_chacha20poly1305_decrypt() failed (adlen=0)\n");
     }
-    if (m2len != sizeof c - crypto_aead_chacha20poly1305_abytes()) {
+    if (m2len != MLEN) {
         printf("m2len is not properly set (adlen=0)\n");
     }
-    if (memcmp(m, m2, sizeof m) != 0) {
+    if (memcmp(m, m2, MLEN) != 0) {
         printf("m != m2 (adlen=0)\n");
     }
-
+    m2len = 1;
     if (crypto_aead_chacha20poly1305_decrypt(
-            m2, &m2len, NULL, c, crypto_aead_chacha20poly1305_ABYTES / 2, NULL,
-            0U, nonce, firstkey) != -1) {
+            m2, &m2len, NULL, guard_page,
+            randombytes_uniform(crypto_aead_chacha20poly1305_ABYTES),
+            NULL, 0U, nonce, firstkey) != -1) {
         printf("crypto_aead_chacha20poly1305_decrypt() worked with a short "
                "ciphertext\n");
     }
+    if (m2len != 0) {
+        printf("Message length should have been set to zero after a failure\n");
+    }
+    m2len = 1;
     if (crypto_aead_chacha20poly1305_decrypt(m2, &m2len, NULL, c, 0U, NULL, 0U,
                                              nonce, firstkey) != -1) {
         printf("crypto_aead_chacha20poly1305_decrypt() worked with an empty "
                "ciphertext\n");
     }
+    if (m2len != 0) {
+        printf("Message length should have been set to zero after a failure\n");
+    }
 
-    memcpy(c, m, sizeof m);
-    crypto_aead_chacha20poly1305_encrypt(c, &clen, c, sizeof m, NULL, 0U, NULL,
-                                         nonce, firstkey);
-    if (clen != sizeof m + crypto_aead_chacha20poly1305_abytes()) {
-        printf("clen is not properly set (adlen=0)\n");
+    memcpy(c, m, MLEN);
+    crypto_aead_chacha20poly1305_encrypt(c, &found_clen, c, MLEN,
+                                         NULL, 0U, NULL, nonce, firstkey);
+    if (found_clen != CLEN) {
+        printf("found_clen is not properly set (adlen=0)\n");
     }
-    for (i = 0U; i < sizeof c; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
+    for (i = 0U; i < CLEN; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
     }
     printf("\n");
 
-    if (crypto_aead_chacha20poly1305_decrypt(c, &m2len, NULL, c, sizeof c,
+    if (crypto_aead_chacha20poly1305_decrypt(c, &m2len, NULL, c, CLEN,
                                              NULL, 0U, nonce, firstkey) != 0) {
         printf("crypto_aead_chacha20poly1305_decrypt() failed (adlen=0)\n");
     }
-    if (m2len != sizeof c - crypto_aead_chacha20poly1305_abytes()) {
+    if (m2len != MLEN) {
         printf("m2len is not properly set (adlen=0)\n");
     }
-    if (memcmp(m, c, sizeof m) != 0) {
+    if (memcmp(m, c, MLEN) != 0) {
         printf("m != c (adlen=0)\n");
     }
 
+    sodium_free(c);
+    sodium_free(detached_c);
+    sodium_free(mac);
+    sodium_free(m2);
+
     assert(crypto_aead_chacha20poly1305_keybytes() > 0U);
     assert(crypto_aead_chacha20poly1305_npubbytes() > 0U);
     assert(crypto_aead_chacha20poly1305_nsecbytes() == 0U);
+    assert(crypto_aead_chacha20poly1305_messagebytes_max() > 0U);
+    assert(crypto_aead_chacha20poly1305_messagebytes_max() == crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX);
+    assert(crypto_aead_chacha20poly1305_keybytes() == crypto_aead_chacha20poly1305_KEYBYTES);
+    assert(crypto_aead_chacha20poly1305_nsecbytes() == crypto_aead_chacha20poly1305_NSECBYTES);
+    assert(crypto_aead_chacha20poly1305_npubbytes() == crypto_aead_chacha20poly1305_NPUBBYTES);
+    assert(crypto_aead_chacha20poly1305_abytes() == crypto_aead_chacha20poly1305_ABYTES);
+
+    return 0;
+}
+
+static int
+tv_ietf(void)
+{
+#undef  MLEN
+#define MLEN 114U
+#undef  ADLEN
+#define ADLEN 12U
+#undef  CLEN
+#define CLEN (MLEN + crypto_aead_chacha20poly1305_ietf_ABYTES)
+    static const unsigned char firstkey[crypto_aead_chacha20poly1305_ietf_KEYBYTES]
+        = {
+            0x80, 0x81, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,
+            0x88, 0x89, 0x8a, 0x8b, 0x8c, 0x8d, 0x8e, 0x8f,
+            0x90, 0x91, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97,
+            0x98, 0x99, 0x9a, 0x9b, 0x9c, 0x9d, 0x9e, 0x9f
+        };
+#undef  MESSAGE
+#define MESSAGE "Ladies and Gentlemen of the class of '99: If I could offer you " \
+"only one tip for the future, sunscreen would be it."
+    unsigned char *m = (unsigned char *) sodium_malloc(MLEN);
+    static const unsigned char nonce[crypto_aead_chacha20poly1305_ietf_NPUBBYTES]
+        = { 0x07, 0x00, 0x00, 0x00,
+            0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47 };
+    static const unsigned char ad[ADLEN]
+        = { 0x50, 0x51, 0x52, 0x53, 0xc0, 0xc1, 0xc2, 0xc3, 0xc4, 0xc5, 0xc6, 0xc7 };
+    unsigned char *c = (unsigned char *) sodium_malloc(CLEN);
+    unsigned char *detached_c = (unsigned char *) sodium_malloc(MLEN);
+    unsigned char *mac = (unsigned char *) sodium_malloc(crypto_aead_chacha20poly1305_ietf_ABYTES);
+    unsigned char *m2 = (unsigned char *) sodium_malloc(MLEN);
+    unsigned long long found_clen;
+    unsigned long long found_maclen;
+    unsigned long long m2len;
+    size_t i;
+
+    assert(sizeof MESSAGE - 1U == MLEN);
+    memcpy(m, MESSAGE, MLEN);
+    crypto_aead_chacha20poly1305_ietf_encrypt(c, &found_clen, m, MLEN,
+                                              ad, ADLEN,
+                                              NULL, nonce, firstkey);
+    if (found_clen != MLEN + crypto_aead_chacha20poly1305_ietf_abytes()) {
+        printf("found_clen is not properly set\n");
+    }
+    for (i = 0U; i < CLEN; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+        if (i % 8 == 7) {
+            printf("\n");
+        }
+    }
+    printf("\n");
+    crypto_aead_chacha20poly1305_ietf_encrypt_detached(detached_c,
+                                                       mac, &found_maclen,
+                                                       m, MLEN,
+                                                       ad, ADLEN,
+                                                       NULL, nonce, firstkey);
+    if (found_maclen != crypto_aead_chacha20poly1305_ietf_abytes()) {
+        printf("found_maclen is not properly set\n");
+    }
+    if (memcmp(detached_c, c, MLEN) != 0) {
+        printf("detached ciphertext is bogus\n");
+    }
+
+    if (crypto_aead_chacha20poly1305_ietf_decrypt(m2, &m2len, NULL, c, CLEN, ad,
+                                                  ADLEN, nonce, firstkey) != 0) {
+        printf("crypto_aead_chacha20poly1305_ietf_decrypt() failed\n");
+    }
+    if (m2len != MLEN) {
+        printf("m2len is not properly set\n");
+    }
+    if (memcmp(m, m2, MLEN) != 0) {
+        printf("m != m2\n");
+    }
+    memset(m2, 0, m2len);
+    assert(crypto_aead_chacha20poly1305_ietf_decrypt_detached(NULL, NULL,
+                                                              c, MLEN, mac,
+                                                              ad, ADLEN,
+                                                              nonce, firstkey) == 0);
+    if (crypto_aead_chacha20poly1305_ietf_decrypt_detached(m2, NULL,
+                                                           c, MLEN, mac,
+                                                           ad, ADLEN,
+                                                           nonce, firstkey) != 0) {
+        printf("crypto_aead_chacha20poly1305_ietf_decrypt_detached() failed\n");
+    }
+    if (memcmp(m, m2, MLEN) != 0) {
+        printf("detached m != m2\n");
+    }
+
+    for (i = 0U; i < CLEN; i++) {
+        c[i] ^= (i + 1U);
+        if (crypto_aead_chacha20poly1305_ietf_decrypt(m2, NULL, NULL, c, CLEN,
+                                                      ad, ADLEN, nonce, firstkey)
+            == 0 || memcmp(m, m2, MLEN) == 0) {
+            printf("message can be forged\n");
+        }
+        c[i] ^= (i + 1U);
+    }
+    crypto_aead_chacha20poly1305_ietf_encrypt(c, &found_clen, m, MLEN,
+                                              NULL, 0U, NULL, nonce, firstkey);
+    if (found_clen != CLEN) {
+        printf("clen is not properly set (adlen=0)\n");
+    }
+    for (i = 0U; i < CLEN; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+        if (i % 8 == 7) {
+            printf("\n");
+        }
+    }
+    printf("\n");
+    if (crypto_aead_chacha20poly1305_ietf_decrypt(m2, &m2len, NULL, c, CLEN,
+                                                  NULL, 0U, nonce, firstkey) != 0) {
+        printf("crypto_aead_chacha20poly1305_ietf_decrypt() failed (adlen=0)\n");
+    }
+    if (m2len != MLEN) {
+        printf("m2len is not properly set (adlen=0)\n");
+    }
+    if (memcmp(m, m2, MLEN) != 0) {
+        printf("m != m2 (adlen=0)\n");
+    }
+    m2len = 1;
+    if (crypto_aead_chacha20poly1305_ietf_decrypt(
+            m2, &m2len, NULL, guard_page,
+            randombytes_uniform(crypto_aead_chacha20poly1305_ietf_ABYTES),
+            NULL, 0U, nonce, firstkey) != -1) {
+        printf("crypto_aead_chacha20poly1305_ietf_decrypt() worked with a short "
+               "ciphertext\n");
+    }
+    if (m2len != 0) {
+        printf("Message length should have been set to zero after a failure\n");
+    }
+    m2len = 1;
+    if (crypto_aead_chacha20poly1305_ietf_decrypt(m2, &m2len, NULL, c, 0U, NULL, 0U,
+                                                  nonce, firstkey) != -1) {
+        printf("crypto_aead_chacha20poly1305_ietf_decrypt() worked with an empty "
+               "ciphertext\n");
+    }
+    if (m2len != 0) {
+        printf("Message length should have been set to zero after a failure\n");
+    }
+
+    memcpy(c, m, MLEN);
+    crypto_aead_chacha20poly1305_ietf_encrypt(c, &found_clen, c, MLEN,
+                                              NULL, 0U, NULL, nonce, firstkey);
+    if (found_clen != CLEN) {
+        printf("clen is not properly set (adlen=0)\n");
+    }
+    for (i = 0U; i < CLEN; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+        if (i % 8 == 7) {
+            printf("\n");
+        }
+    }
+    printf("\n");
+
+    if (crypto_aead_chacha20poly1305_ietf_decrypt(c, &m2len, NULL, c, CLEN,
+                                                  NULL, 0U, nonce, firstkey) != 0) {
+        printf("crypto_aead_chacha20poly1305_ietf_decrypt() failed (adlen=0)\n");
+    }
+    if (m2len != MLEN) {
+        printf("m2len is not properly set (adlen=0)\n");
+    }
+    if (memcmp(m, c, MLEN) != 0) {
+        printf("m != c (adlen=0)\n");
+    }
+
+    sodium_free(c);
+    sodium_free(detached_c);
+    sodium_free(mac);
+    sodium_free(m2);
+    sodium_free(m);
+
+    assert(crypto_aead_chacha20poly1305_ietf_keybytes() > 0U);
+    assert(crypto_aead_chacha20poly1305_ietf_keybytes() == crypto_aead_chacha20poly1305_keybytes());
+    assert(crypto_aead_chacha20poly1305_ietf_npubbytes() > 0U);
+    assert(crypto_aead_chacha20poly1305_ietf_npubbytes() > crypto_aead_chacha20poly1305_npubbytes());
+    assert(crypto_aead_chacha20poly1305_ietf_nsecbytes() == 0U);
+    assert(crypto_aead_chacha20poly1305_ietf_nsecbytes() == crypto_aead_chacha20poly1305_nsecbytes());
+    assert(crypto_aead_chacha20poly1305_ietf_messagebytes_max() == crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX);
+    assert(crypto_aead_chacha20poly1305_IETF_KEYBYTES  == crypto_aead_chacha20poly1305_ietf_KEYBYTES);
+    assert(crypto_aead_chacha20poly1305_IETF_NSECBYTES == crypto_aead_chacha20poly1305_ietf_NSECBYTES);
+    assert(crypto_aead_chacha20poly1305_IETF_NPUBBYTES == crypto_aead_chacha20poly1305_ietf_NPUBBYTES);
+    assert(crypto_aead_chacha20poly1305_IETF_ABYTES    == crypto_aead_chacha20poly1305_ietf_ABYTES);
+    assert(crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX == crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX);
+
+    return 0;
+}
+
+int
+main(void)
+{
+    tv();
+    tv_ietf();
 
     return 0;
 }
diff --git a/libsodium/test/default/auth.c b/libsodium/test/default/auth.c
index f9ecbeb..23ac927 100644
--- a/libsodium/test/default/auth.c
+++ b/libsodium/test/default/auth.c
@@ -3,25 +3,32 @@
 #include "cmptest.h"
 
 /* "Test Case 2" from RFC 4231 */
-unsigned char key[32] = "Jefe";
-unsigned char c[] = "what do ya want for nothing?";
+static unsigned char key[32] = "Jefe";
+static unsigned char c[]     = "what do ya want for nothing?";
 
 /* Hacker manifesto */
-unsigned char key2[] = "Another one got caught today, it's all over the papers. \"Teenager Arrested in Computer Crime Scandal\", \"Hacker Arrested after Bank Tampering\"... Damn kids. They're all alike.";
+static unsigned char key2[] =
+    "Another one got caught today, it's all over the papers. \"Teenager "
+    "Arrested in Computer Crime Scandal\", \"Hacker Arrested after Bank "
+    "Tampering\"... Damn kids. They're all alike.";
 
-unsigned char a[crypto_auth_BYTES];
-unsigned char a2[crypto_auth_hmacsha512_BYTES];
+static unsigned char a[crypto_auth_BYTES];
+static unsigned char a2[crypto_auth_hmacsha512_BYTES];
+static unsigned char a3[crypto_auth_hmacsha512_BYTES];
 
-int main(void)
+int
+main(void)
 {
     crypto_auth_hmacsha512_state st;
-    int i;
+    crypto_auth_hmacsha256_state st256;
+    crypto_auth_hmacsha512256_state st512_256;
+    size_t                       i;
 
     assert(crypto_auth_hmacsha512_statebytes() ==
            sizeof(crypto_auth_hmacsha512_state));
     crypto_auth(a, c, sizeof c - 1U, key);
     for (i = 0; i < sizeof a; ++i) {
-        printf(",0x%02x", (unsigned int)a[i]);
+        printf(",0x%02x", (unsigned int) a[i]);
         if (i % 8 == 7)
             printf("\n");
     }
@@ -32,7 +39,7 @@ int main(void)
     crypto_auth_hmacsha512_update(&st, c, sizeof c - 2U);
     crypto_auth_hmacsha512_final(&st, a2);
     for (i = 0; i < sizeof a2; ++i) {
-        printf(",0x%02x", (unsigned int)a2[i]);
+        printf(",0x%02x", (unsigned int) a2[i]);
         if (i % 8 == 7)
             printf("\n");
     }
@@ -43,11 +50,77 @@ int main(void)
     crypto_auth_hmacsha512_update(&st, c, sizeof c - 2U);
     crypto_auth_hmacsha512_final(&st, a2);
     for (i = 0; i < sizeof a2; ++i) {
-        printf(",0x%02x", (unsigned int)a2[i]);
+        printf(",0x%02x", (unsigned int) a2[i]);
         if (i % 8 == 7)
             printf("\n");
     }
 
+    memset(a2, 0, sizeof a2);
+    crypto_auth_hmacsha256_init(&st256, key2, sizeof key2);
+    crypto_auth_hmacsha256_update(&st256, guard_page, 0U);
+    crypto_auth_hmacsha256_update(&st256, c, 1U);
+    crypto_auth_hmacsha256_update(&st256, c, sizeof c - 2U);
+    crypto_auth_hmacsha256_final(&st256, a2);
+    for (i = 0; i < sizeof a2; ++i) {
+        printf(",0x%02x", (unsigned int) a2[i]);
+        if (i % 8 == 7)
+            printf("\n");
+    }
+
+    /* Empty message tests: HMAC-SHA512 */
+    memset(a2, 0, sizeof a2);
+    crypto_auth_hmacsha512_init(&st, key, sizeof key);
+    crypto_auth_hmacsha512_final(&st, a2);
+
+    memset(a3, 0, sizeof a3);
+    crypto_auth_hmacsha512_init(&st, key, sizeof key);
+    crypto_auth_hmacsha512_update(&st, a2, 0U);
+    crypto_auth_hmacsha512_final(&st, a3);
+    assert(sodium_memcmp(a2, a3, sizeof a2) == 0);
+
+    memset(a3, 0, sizeof a3);
+    crypto_auth_hmacsha512_init(&st, key, sizeof key);
+    crypto_auth_hmacsha512_update(&st, guard_page, 0U);
+    crypto_auth_hmacsha512_final(&st, a3);
+    assert(sodium_memcmp(a2, a3, sizeof a2) == 0);
+
+    /* Empty message tests: HMAC-SHA512-256 */
+    memset(a2, 0, sizeof a2);
+    crypto_auth_hmacsha512256_init(&st512_256, key, sizeof key);
+    crypto_auth_hmacsha512256_final(&st512_256, a2);
+
+    memset(a3, 0, sizeof a3);
+    crypto_auth_hmacsha512256_init(&st512_256, key, sizeof key);
+    crypto_auth_hmacsha512256_update(&st512_256, a2, 0U);
+    crypto_auth_hmacsha512256_final(&st512_256, a3);
+    assert(sodium_memcmp(a2, a3, sizeof a2) == 0);
+
+    memset(a3, 0, sizeof a3);
+    crypto_auth_hmacsha512256_init(&st512_256, key, sizeof key);
+    crypto_auth_hmacsha512256_update(&st512_256, guard_page, 0U);
+    crypto_auth_hmacsha512256_final(&st512_256, a3);
+    assert(sodium_memcmp(a2, a3, sizeof a2) == 0);
+
+    /* Empty message tests: HMAC-SHA256 */
+
+    memset(a2, 0, sizeof a2);
+    crypto_auth_hmacsha256_init(&st256, key, sizeof key);
+    crypto_auth_hmacsha256_final(&st256, a2);
+
+    memset(a3, 0, sizeof a3);
+    crypto_auth_hmacsha256_init(&st256, key, sizeof key);
+    crypto_auth_hmacsha256_update(&st256, a2, 0U);
+    crypto_auth_hmacsha256_final(&st256, a3);
+    assert(sodium_memcmp(a2, a3, sizeof a2) == 0);
+
+    memset(a3, 0, sizeof a3);
+    crypto_auth_hmacsha256_init(&st256, key, sizeof key);
+    crypto_auth_hmacsha256_update(&st256, guard_page, 0U);
+    crypto_auth_hmacsha256_final(&st256, a3);
+    assert(sodium_memcmp(a2, a3, sizeof a2) == 0);
+
+    /* --- */
+
     assert(crypto_auth_bytes() > 0U);
     assert(crypto_auth_keybytes() > 0U);
     assert(strcmp(crypto_auth_primitive(), "hmacsha512256") == 0);
diff --git a/libsodium/test/default/auth2.c b/libsodium/test/default/auth2.c
index ffab022..583a2d4 100644
--- a/libsodium/test/default/auth2.c
+++ b/libsodium/test/default/auth2.c
@@ -3,27 +3,30 @@
 #define TEST_NAME "auth2"
 #include "cmptest.h"
 
-unsigned char key[32]
-    = { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
-        0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,
-        0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20 };
+static unsigned char key[32] = {
+    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
+    0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,
+    0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20
+};
 
-unsigned char c[50]
-    = { 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd };
+static unsigned char c[50] = { 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd };
 
-unsigned char a[32];
+static unsigned char a[32];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
     crypto_auth_hmacsha256(a, c, sizeof c, key);
     for (i = 0; i < 32; ++i) {
-        printf(",0x%02x", (unsigned int)a[i]);
+        printf(",0x%02x", (unsigned int) a[i]);
         if (i % 8 == 7)
             printf("\n");
     }
diff --git a/libsodium/test/default/auth3.c b/libsodium/test/default/auth3.c
index 3a299da..ca90aa7 100644
--- a/libsodium/test/default/auth3.c
+++ b/libsodium/test/default/auth3.c
@@ -3,26 +3,34 @@
 #define TEST_NAME "auth3"
 #include "cmptest.h"
 
-unsigned char key[32]
-    = { 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
-        0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,
-        0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20 };
-
-unsigned char c[50]
-    = { 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
-        0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd };
-
-unsigned char a[32]
-    = { 0x37, 0x2e, 0xfc, 0xf9, 0xb4, 0x0b, 0x35, 0xc2, 0x11, 0x5b, 0x13,
-        0x46, 0x90, 0x3d, 0x2e, 0xf4, 0x2f, 0xce, 0xd4, 0x6f, 0x08, 0x46,
-        0xe7, 0x25, 0x7b, 0xb1, 0x56, 0xd3, 0xd7, 0xb3, 0x0d, 0x3f };
-
-int main(void)
+static unsigned char key[32] = {
+    0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,
+    0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16,
+    0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f, 0x20
+};
+
+static unsigned char c[50] = { 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd, 0xcd,
+                               0xcd, 0xcd };
+
+static unsigned char a[32] = { 0x37, 0x2e, 0xfc, 0xf9, 0xb4, 0x0b, 0x35, 0xc2,
+                               0x11, 0x5b, 0x13, 0x46, 0x90, 0x3d, 0x2e, 0xf4,
+                               0x2f, 0xce, 0xd4, 0x6f, 0x08, 0x46, 0xe7, 0x25,
+                               0x7b, 0xb1, 0x56, 0xd3, 0xd7, 0xb3, 0x0d, 0x3f };
+
+int
+main(void)
 {
+    static unsigned char a2[crypto_auth_hmacsha256_BYTES];
+
     printf("%d\n", crypto_auth_hmacsha256_verify(a, c, sizeof c, key));
 
+    crypto_auth_hmacsha256(a2, guard_page, 0U, key);
+    assert(crypto_auth_hmacsha256_verify(a2, guard_page, 0U, key) == 0);
+
     return 0;
 }
diff --git a/libsodium/test/default/auth5.c b/libsodium/test/default/auth5.c
index 498e804..955c9cf 100644
--- a/libsodium/test/default/auth5.c
+++ b/libsodium/test/default/auth5.c
@@ -2,16 +2,17 @@
 #define TEST_NAME "auth5"
 #include "cmptest.h"
 
-unsigned char key[32];
-unsigned char c[10000];
-unsigned char a[32];
+static unsigned char key[32];
+static unsigned char c[1000];
+static unsigned char a[32];
 
-int main(void)
+int
+main(void)
 {
     size_t clen;
 
-    for (clen = 0; clen < 10000; ++clen) {
-        randombytes_buf(key, sizeof key);
+    for (clen = 0; clen < 1000; ++clen) {
+        crypto_auth_keygen(key);
         randombytes_buf(c, clen);
         crypto_auth(a, c, clen, key);
         if (crypto_auth_verify(a, c, clen, key) != 0) {
@@ -31,5 +32,10 @@ int main(void)
             }
         }
     }
+
+    crypto_auth_keygen(key);
+    crypto_auth(a, guard_page, 0U, key);
+    assert(crypto_auth_verify(a, guard_page, 0U, key) == 0);
+
     return 0;
 }
diff --git a/libsodium/test/default/auth6.c b/libsodium/test/default/auth6.c
index 9e7b671..f397a05 100644
--- a/libsodium/test/default/auth6.c
+++ b/libsodium/test/default/auth6.c
@@ -3,18 +3,19 @@
 #include "cmptest.h"
 
 /* "Test Case 2" from RFC 4231 */
-unsigned char key[32] = "Jefe";
-unsigned char c[] = "what do ya want for nothing?";
+static unsigned char key[32] = "Jefe";
+static unsigned char c[]     = "what do ya want for nothing?";
 
-unsigned char a[64];
+static unsigned char a[64];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
     crypto_auth_hmacsha512(a, c, sizeof c - 1U, key);
     for (i = 0; i < 64; ++i) {
-        printf(",0x%02x", (unsigned int)a[i]);
+        printf(",0x%02x", (unsigned int) a[i]);
         if (i % 8 == 7)
             printf("\n");
     }
diff --git a/libsodium/test/default/auth7.c b/libsodium/test/default/auth7.c
index f463b9d..3d087f8 100644
--- a/libsodium/test/default/auth7.c
+++ b/libsodium/test/default/auth7.c
@@ -2,34 +2,40 @@
 #define TEST_NAME "auth7"
 #include "cmptest.h"
 
-unsigned char key[32];
-unsigned char c[10000];
-unsigned char a[64];
+static unsigned char key[32];
+static unsigned char c[600];
+static unsigned char a[64];
 
-int main(void)
+int
+main(void)
 {
-    int clen;
+    size_t clen;
 
-    for (clen = 0; clen < 10000; ++clen) {
-        randombytes_buf(key, sizeof key);
+    for (clen = 0; clen < sizeof c; ++clen) {
+        crypto_auth_keygen(key);
         randombytes_buf(c, clen);
         crypto_auth_hmacsha512(a, c, clen, key);
         if (crypto_auth_hmacsha512_verify(a, c, clen, key) != 0) {
-            printf("fail %d\n", clen);
+            printf("fail %u\n", (unsigned int) clen);
             return 100;
         }
         if (clen > 0) {
-            c[rand() % clen] += 1 + (rand() % 255);
+            c[(size_t) rand() % clen] += 1 + (rand() % 255);
             if (crypto_auth_hmacsha512_verify(a, c, clen, key) == 0) {
-                printf("forgery %d\n", clen);
+                printf("forgery %u\n", (unsigned int) clen);
                 return 100;
             }
             a[rand() % sizeof a] += 1 + (rand() % 255);
             if (crypto_auth_hmacsha512_verify(a, c, clen, key) == 0) {
-                printf("forgery %d\n", clen);
+                printf("forgery %u\n", (unsigned int) clen);
                 return 100;
             }
         }
     }
+
+    crypto_auth_keygen(key);
+    crypto_auth_hmacsha512(a, guard_page, 0U, key);
+    assert(crypto_auth_hmacsha512_verify(a, guard_page, 0U, key) == 0);
+
     return 0;
 }
diff --git a/libsodium/test/default/box.c b/libsodium/test/default/box.c
index b9ba1cc..228aca7 100644
--- a/libsodium/test/default/box.c
+++ b/libsodium/test/default/box.c
@@ -2,62 +2,83 @@
 #define TEST_NAME "box"
 #include "cmptest.h"
 
-unsigned char alicesk[32]
-    = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,
-        0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,
-        0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a };
+static const unsigned char alicesk[32] = {
+    0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,
+    0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,
+    0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a
+};
 
-unsigned char bobpk[32]
-    = { 0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b, 0x61,
-        0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b, 0x78,
-        0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88, 0x2b, 0x4f };
+static const unsigned char bobpk[32] = {
+    0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b, 0x61,
+    0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b, 0x78,
+    0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88, 0x2b, 0x4f
+};
 
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES] = {
+    0xe0, 0xeb, 0x7a, 0x7c, 0x3b, 0x41, 0xb8, 0xae, 0x16, 0x56, 0xe3,
+    0xfa, 0xf1, 0x9f, 0xc4, 0x6a, 0xda, 0x09, 0x8d, 0xeb, 0x9c, 0x32,
+    0xb1, 0xfd, 0x86, 0x62, 0x05, 0x16, 0x5f, 0x49, 0xb8, 0x00
+};
 
-// API requires first 32 bytes to be 0
-unsigned char m[163]
-    = { 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0,    0,    0,    0,    0xbe, 0x07, 0x5f, 0xc5,
-        0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16, 0xeb, 0xeb, 0x0c, 0x7b,
-        0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4, 0x4b, 0x66, 0x84, 0x9b,
-        0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf, 0x33, 0xbd, 0x75, 0x1a,
-        0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29, 0x6c, 0xdc, 0x3c, 0x01,
-        0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce, 0x31, 0x4a, 0xdb, 0x31,
-        0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d, 0xce, 0xea, 0x3a, 0x7f,
-        0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a, 0xd6, 0xb1, 0x31, 0x8a,
-        0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde, 0x04, 0x89, 0x77, 0xeb,
-        0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c, 0x60, 0x90, 0x2e, 0x52,
-        0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40, 0xe0, 0x82, 0xf9, 0x37,
-        0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05 };
+static const unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                         0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                         0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                         0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
 
-unsigned char c[163];
+/* API requires first 32 bytes to be 0 */
+static const unsigned char m[163] = {
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0xbe, 0x07, 0x5f, 0xc5,
+    0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16, 0xeb, 0xeb, 0x0c, 0x7b,
+    0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4, 0x4b, 0x66, 0x84, 0x9b,
+    0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf, 0x33, 0xbd, 0x75, 0x1a,
+    0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29, 0x6c, 0xdc, 0x3c, 0x01,
+    0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce, 0x31, 0x4a, 0xdb, 0x31,
+    0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d, 0xce, 0xea, 0x3a, 0x7f,
+    0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a, 0xd6, 0xb1, 0x31, 0x8a,
+    0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde, 0x04, 0x89, 0x77, 0xeb,
+    0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c, 0x60, 0x90, 0x2e, 0x52,
+    0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40, 0xe0, 0x82, 0xf9, 0x37,
+    0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05
+};
 
-int main(void)
+static unsigned char c[163];
+
+int
+main(void)
 {
     unsigned char k[crypto_box_BEFORENMBYTES];
-    int i;
+    int           i;
+    int           ret;
 
-    crypto_box(c, m, 163, nonce, bobpk, alicesk);
+    ret = crypto_box(c, m, 163, nonce, bobpk, alicesk);
+    assert(ret == 0);
     for (i = 16; i < 163; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
+        printf(",0x%02x", (unsigned int) c[i]);
         if (i % 8 == 7)
             printf("\n");
     }
     printf("\n");
 
+    ret = crypto_box(c, m, 163, nonce, small_order_p, alicesk);
+    assert(ret == -1);
+
     memset(c, 0, sizeof c);
-    crypto_box_beforenm(k, bobpk, alicesk);
+
+    ret = crypto_box_beforenm(k, bobpk, alicesk);
+    assert(ret == 0);
     crypto_box_afternm(c, m, 163, nonce, k);
     for (i = 16; i < 163; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
+        printf(",0x%02x", (unsigned int) c[i]);
         if (i % 8 == 7)
             printf("\n");
     }
     printf("\n");
 
+    ret = crypto_box_beforenm(k, small_order_p, alicesk);
+    assert(ret == -1);
+
     assert(crypto_box_seedbytes() > 0U);
     assert(crypto_box_publickeybytes() > 0U);
     assert(crypto_box_secretkeybytes() > 0U);
@@ -66,23 +87,26 @@ int main(void)
     assert(crypto_box_zerobytes() > 0U);
     assert(crypto_box_boxzerobytes() > 0U);
     assert(crypto_box_macbytes() > 0U);
+    assert(crypto_box_messagebytes_max() > 0U);
     assert(strcmp(crypto_box_primitive(), "curve25519xsalsa20poly1305") == 0);
-    assert(crypto_box_curve25519xsalsa20poly1305_seedbytes()
-           == crypto_box_seedbytes());
-    assert(crypto_box_curve25519xsalsa20poly1305_publickeybytes()
-           == crypto_box_publickeybytes());
-    assert(crypto_box_curve25519xsalsa20poly1305_secretkeybytes()
-           == crypto_box_secretkeybytes());
-    assert(crypto_box_curve25519xsalsa20poly1305_beforenmbytes()
-           == crypto_box_beforenmbytes());
-    assert(crypto_box_curve25519xsalsa20poly1305_noncebytes()
-           == crypto_box_noncebytes());
-    assert(crypto_box_curve25519xsalsa20poly1305_zerobytes()
-           == crypto_box_zerobytes());
-    assert(crypto_box_curve25519xsalsa20poly1305_boxzerobytes()
-           == crypto_box_boxzerobytes());
-    assert(crypto_box_curve25519xsalsa20poly1305_macbytes()
-           == crypto_box_macbytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_seedbytes() ==
+           crypto_box_seedbytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_publickeybytes() ==
+           crypto_box_publickeybytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_secretkeybytes() ==
+           crypto_box_secretkeybytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_beforenmbytes() ==
+           crypto_box_beforenmbytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_noncebytes() ==
+           crypto_box_noncebytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_zerobytes() ==
+           crypto_box_zerobytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_boxzerobytes() ==
+           crypto_box_boxzerobytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_macbytes() ==
+           crypto_box_macbytes());
+    assert(crypto_box_curve25519xsalsa20poly1305_messagebytes_max() ==
+           crypto_box_messagebytes_max());
 
     return 0;
 }
diff --git a/libsodium/test/default/box2.c b/libsodium/test/default/box2.c
index 93785f8..3e46fda 100644
--- a/libsodium/test/default/box2.c
+++ b/libsodium/test/default/box2.c
@@ -2,58 +2,75 @@
 #define TEST_NAME "box2"
 #include "cmptest.h"
 
-unsigned char bobsk[32]
-    = { 0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,
-        0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,
-        0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb };
-
-unsigned char alicepk[32]
-    = { 0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b, 0x7d,
-        0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38,
-        0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0x6a };
-
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
-
-// API requires first 16 bytes to be 0
-unsigned char c[163]
-    = { 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0xf3, 0xff, 0xc7, 0x70, 0x3f, 0x94, 0x00, 0xe5,
-        0x2a, 0x7d, 0xfb, 0x4b, 0x3d, 0x33, 0x05, 0xd9, 0x8e, 0x99, 0x3b, 0x9f,
-        0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba, 0x32, 0xfc, 0x76, 0xce,
-        0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4, 0x47, 0x6f, 0xb8, 0xc5,
-        0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c, 0x98, 0xdc, 0xe8, 0x7b,
-        0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72, 0x71, 0xd2, 0xc2, 0x0f,
-        0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8, 0x63, 0xd5, 0x17, 0x38,
-        0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a, 0xb9, 0x32, 0x16, 0x45,
-        0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68, 0x51, 0x7a, 0xcf, 0xea,
-        0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda, 0x99, 0x83, 0x2b, 0x61,
-        0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e, 0x88, 0xd5, 0xf9, 0xb3,
-        0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6, 0x59, 0x9b, 0x1f, 0x65,
-        0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5 };
-
-unsigned char m[163];
-
-int main(void)
+static unsigned char bobsk[32] = { 0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a,
+                                   0x4b, 0x79, 0xe1, 0x7f, 0x8b, 0x83, 0x80,
+                                   0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26,
+                                   0x18, 0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27,
+                                   0xff, 0x88, 0xe0, 0xeb };
+
+static unsigned char alicepk[32] = { 0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7,
+                                     0x54, 0x74, 0x8b, 0x7d, 0xdc, 0xb4, 0x3e,
+                                     0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26,
+                                     0x38, 0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e,
+                                     0xaa, 0x9b, 0x4e, 0x6a };
+
+static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES] = {
+    0xe0, 0xeb, 0x7a, 0x7c, 0x3b, 0x41, 0xb8, 0xae, 0x16, 0x56, 0xe3,
+    0xfa, 0xf1, 0x9f, 0xc4, 0x6a, 0xda, 0x09, 0x8d, 0xeb, 0x9c, 0x32,
+    0xb1, 0xfd, 0x86, 0x62, 0x05, 0x16, 0x5f, 0x49, 0xb8, 0x00
+};
+
+static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                   0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                   0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                   0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+
+/* API requires first 16 bytes to be 0 */
+static unsigned char c[163] = {
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0xf3, 0xff, 0xc7, 0x70, 0x3f, 0x94, 0x00, 0xe5,
+    0x2a, 0x7d, 0xfb, 0x4b, 0x3d, 0x33, 0x05, 0xd9, 0x8e, 0x99, 0x3b, 0x9f,
+    0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba, 0x32, 0xfc, 0x76, 0xce,
+    0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4, 0x47, 0x6f, 0xb8, 0xc5,
+    0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c, 0x98, 0xdc, 0xe8, 0x7b,
+    0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72, 0x71, 0xd2, 0xc2, 0x0f,
+    0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8, 0x63, 0xd5, 0x17, 0x38,
+    0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a, 0xb9, 0x32, 0x16, 0x45,
+    0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68, 0x51, 0x7a, 0xcf, 0xea,
+    0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda, 0x99, 0x83, 0x2b, 0x61,
+    0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e, 0x88, 0xd5, 0xf9, 0xb3,
+    0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6, 0x59, 0x9b, 0x1f, 0x65,
+    0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5
+};
+
+static unsigned char m[163];
+
+int
+main(void)
 {
     unsigned char k[crypto_box_BEFORENMBYTES];
-    int i;
+    int           i;
+    int           ret;
 
     if (crypto_box_open(m, c, 163, nonce, alicepk, bobsk) == 0) {
         for (i = 32; i < 163; ++i) {
-            printf(",0x%02x", (unsigned int)m[i]);
+            printf(",0x%02x", (unsigned int) m[i]);
             if (i % 8 == 7)
                 printf("\n");
         }
         printf("\n");
     }
+    ret = crypto_box_open(m, c, 163, nonce, small_order_p, bobsk);
+    assert(ret == -1);
 
     memset(m, 0, sizeof m);
-    crypto_box_beforenm(k, alicepk, bobsk);
+    ret = crypto_box_beforenm(k, small_order_p, bobsk);
+    assert(ret == -1);
+    ret = crypto_box_beforenm(k, alicepk, bobsk);
+    assert(ret == 0);
     if (crypto_box_open_afternm(m, c, 163, nonce, k) == 0) {
         for (i = 32; i < 163; ++i) {
-            printf(",0x%02x", (unsigned int)m[i]);
+            printf(",0x%02x", (unsigned int) m[i]);
             if (i % 8 == 7)
                 printf("\n");
         }
diff --git a/libsodium/test/default/box7.c b/libsodium/test/default/box7.c
index e9b1db5..a58ea30 100644
--- a/libsodium/test/default/box7.c
+++ b/libsodium/test/default/box7.c
@@ -2,27 +2,34 @@
 #define TEST_NAME "box7"
 #include "cmptest.h"
 
-unsigned char alicesk[crypto_box_SECRETKEYBYTES];
-unsigned char alicepk[crypto_box_PUBLICKEYBYTES];
-unsigned char bobsk[crypto_box_SECRETKEYBYTES];
-unsigned char bobpk[crypto_box_PUBLICKEYBYTES];
-unsigned char n[crypto_box_NONCEBYTES];
-unsigned char m[10000];
-unsigned char c[10000];
-unsigned char m2[10000];
+static unsigned char alicesk[crypto_box_SECRETKEYBYTES];
+static unsigned char alicepk[crypto_box_PUBLICKEYBYTES];
+static unsigned char bobsk[crypto_box_SECRETKEYBYTES];
+static unsigned char bobpk[crypto_box_PUBLICKEYBYTES];
+static unsigned char n[crypto_box_NONCEBYTES];
 
-int main(void)
+int
+main(void)
 {
-    size_t mlen;
-    size_t i;
+    unsigned char *m;
+    unsigned char *c;
+    unsigned char *m2;
+    size_t         mlen;
+    size_t         mlen_max = 1000;
+    size_t         i;
+    int            ret;
 
-    for (mlen = 0; mlen < 1000 && mlen + crypto_box_ZEROBYTES < sizeof m;
-         ++mlen) {
-        crypto_box_keypair(alicepk, alicesk);
-        crypto_box_keypair(bobpk, bobsk);
+    m  = (unsigned char *) sodium_malloc(mlen_max);
+    c  = (unsigned char *) sodium_malloc(mlen_max);
+    m2 = (unsigned char *) sodium_malloc(mlen_max);
+    memset(m, 0, crypto_box_ZEROBYTES);
+    crypto_box_keypair(alicepk, alicesk);
+    crypto_box_keypair(bobpk, bobsk);
+    for (mlen = 0; mlen + crypto_box_ZEROBYTES <= mlen_max; mlen++) {
         randombytes_buf(n, crypto_box_NONCEBYTES);
         randombytes_buf(m + crypto_box_ZEROBYTES, mlen);
-        crypto_box(c, m, mlen + crypto_box_ZEROBYTES, n, bobpk, alicesk);
+        ret = crypto_box(c, m, mlen + crypto_box_ZEROBYTES, n, bobpk, alicesk);
+        assert(ret == 0);
         if (crypto_box_open(m2, c, mlen + crypto_box_ZEROBYTES, n, alicepk,
                             bobsk) == 0) {
             for (i = 0; i < mlen + crypto_box_ZEROBYTES; ++i) {
@@ -35,5 +42,9 @@ int main(void)
             printf("ciphertext fails verification\n");
         }
     }
+    sodium_free(m);
+    sodium_free(c);
+    sodium_free(m2);
+
     return 0;
 }
diff --git a/libsodium/test/default/box8.c b/libsodium/test/default/box8.c
index 75b59a2..4d27f33 100644
--- a/libsodium/test/default/box8.c
+++ b/libsodium/test/default/box8.c
@@ -2,30 +2,40 @@
 #define TEST_NAME "box8"
 #include "cmptest.h"
 
-unsigned char alicesk[crypto_box_SECRETKEYBYTES];
-unsigned char alicepk[crypto_box_PUBLICKEYBYTES];
-unsigned char bobsk[crypto_box_SECRETKEYBYTES];
-unsigned char bobpk[crypto_box_PUBLICKEYBYTES];
-unsigned char n[crypto_box_NONCEBYTES];
-unsigned char m[10000];
-unsigned char c[10000];
-unsigned char m2[10000];
+static unsigned char alicesk[crypto_box_SECRETKEYBYTES];
+static unsigned char alicepk[crypto_box_PUBLICKEYBYTES];
+static unsigned char bobsk[crypto_box_SECRETKEYBYTES];
+static unsigned char bobpk[crypto_box_PUBLICKEYBYTES];
+static unsigned char n[crypto_box_NONCEBYTES];
 
-int main(void)
+int
+main(void)
 {
-    size_t mlen;
-    size_t i;
-    int caught;
+    unsigned char *m;
+    unsigned char *c;
+    unsigned char *m2;
+    size_t         mlen;
+    size_t         mlen_max = 1000;
+    size_t         i;
+    int            faults;
+    int            ret;
 
-    for (mlen = 0; mlen < 1000 && mlen + crypto_box_ZEROBYTES < sizeof m;
-         ++mlen) {
-        crypto_box_keypair(alicepk, alicesk);
-        crypto_box_keypair(bobpk, bobsk);
+    m  = (unsigned char *) sodium_malloc(mlen_max);
+    c  = (unsigned char *) sodium_malloc(mlen_max);
+    m2 = (unsigned char *) sodium_malloc(mlen_max);
+    crypto_box_keypair(alicepk, alicesk);
+    crypto_box_keypair(bobpk, bobsk);
+    for (mlen = 0; mlen + crypto_box_ZEROBYTES <= mlen_max; mlen++) {
         randombytes_buf(n, crypto_box_NONCEBYTES);
         randombytes_buf(m + crypto_box_ZEROBYTES, mlen);
-        crypto_box(c, m, mlen + crypto_box_ZEROBYTES, n, bobpk, alicesk);
-        caught = 0;
-        while (caught < 10) {
+        ret = crypto_box(c, m, mlen + crypto_box_ZEROBYTES, n, bobpk, alicesk);
+        assert(ret == 0);
+#ifdef BROWSER_TESTS
+        faults = 1;
+#else
+        faults = 5;
+#endif
+        while (faults > 0) {
             c[rand() % (mlen + crypto_box_ZEROBYTES)] = rand();
             if (crypto_box_open(m2, c, mlen + crypto_box_ZEROBYTES, n, alicepk,
                                 bobsk) == 0) {
@@ -36,9 +46,13 @@ int main(void)
                     }
                 }
             } else {
-                ++caught;
+                faults--;
             }
         }
     }
+    sodium_free(m);
+    sodium_free(c);
+    sodium_free(m2);
+
     return 0;
 }
diff --git a/libsodium/test/default/box_easy.c b/libsodium/test/default/box_easy.c
index e4ce8a6..2e6a20f 100644
--- a/libsodium/test/default/box_easy.c
+++ b/libsodium/test/default/box_easy.c
@@ -2,48 +2,71 @@
 #define TEST_NAME "box_easy"
 #include "cmptest.h"
 
-unsigned char alicesk[32]
-    = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,
-        0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,
-        0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a };
-
-unsigned char bobpk[32]
-    = { 0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b, 0x61,
-        0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b, 0x78,
-        0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88, 0x2b, 0x4f };
-
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
-
-unsigned char m[131]
-    = { 0xbe, 0x07, 0x5f, 0xc5, 0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16,
-        0xeb, 0xeb, 0x0c, 0x7b, 0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4,
-        0x4b, 0x66, 0x84, 0x9b, 0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf,
-        0x33, 0xbd, 0x75, 0x1a, 0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29,
-        0x6c, 0xdc, 0x3c, 0x01, 0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce,
-        0x31, 0x4a, 0xdb, 0x31, 0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d,
-        0xce, 0xea, 0x3a, 0x7f, 0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a,
-        0xd6, 0xb1, 0x31, 0x8a, 0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde,
-        0x04, 0x89, 0x77, 0xeb, 0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c,
-        0x60, 0x90, 0x2e, 0x52, 0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40,
-        0xe0, 0x82, 0xf9, 0x37, 0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05 };
-
-unsigned char c[147 + crypto_box_MACBYTES];
-
-int main(void)
+static unsigned char alicesk[32] = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5,
+                                     0x7d, 0x3c, 0x16, 0xc1, 0x72, 0x51, 0xb2,
+                                     0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb,
+                                     0xc0, 0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5,
+                                     0x1d, 0xb9, 0x2c, 0x2a };
+
+static unsigned char bobpk[32] = { 0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1,
+                                   0xb4, 0xd3, 0x5b, 0x61, 0xc2, 0xec, 0xe4,
+                                   0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b,
+                                   0x78, 0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14,
+                                   0x6f, 0x88, 0x2b, 0x4f };
+
+static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                   0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                   0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                   0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+
+static unsigned char m[131] = {
+    0xbe, 0x07, 0x5f, 0xc5, 0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16,
+    0xeb, 0xeb, 0x0c, 0x7b, 0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4,
+    0x4b, 0x66, 0x84, 0x9b, 0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf,
+    0x33, 0xbd, 0x75, 0x1a, 0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29,
+    0x6c, 0xdc, 0x3c, 0x01, 0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce,
+    0x31, 0x4a, 0xdb, 0x31, 0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d,
+    0xce, 0xea, 0x3a, 0x7f, 0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a,
+    0xd6, 0xb1, 0x31, 0x8a, 0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde,
+    0x04, 0x89, 0x77, 0xeb, 0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c,
+    0x60, 0x90, 0x2e, 0x52, 0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40,
+    0xe0, 0x82, 0xf9, 0x37, 0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05
+};
+
+static unsigned char c[147 + crypto_box_MACBYTES];
+
+int
+main(void)
 {
     size_t i;
+    int    ret;
 
-    crypto_box_easy(c, m, 131, nonce, bobpk, alicesk);
+    ret = crypto_box_easy(c, m, 131, nonce, bobpk, alicesk);
+    assert(ret == 0);
     for (i = 0; i < 131 + crypto_box_MACBYTES; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
-        if (i % 8 == 7)
-            printf("\n");
+        printf(",0x%02x", (unsigned int) c[i]);
     }
     printf("\n");
 
-    assert(crypto_box_easy(c, m, SIZE_MAX - 1U, nonce, bobpk, alicesk) == -1);
+    /* Null message */
+
+    ret = crypto_box_easy(c, guard_page, 0, nonce, bobpk, alicesk);
+    assert(ret == 0);
+    for (i = 0; i < 1 + crypto_box_MACBYTES; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
+
+    ret =
+        crypto_box_open_easy(c, c, crypto_box_MACBYTES, nonce, bobpk, alicesk);
+    assert(ret == 0);
+    for (i = 0; i < 1 + crypto_box_MACBYTES; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
+    c[randombytes_uniform(crypto_box_MACBYTES)]++;
+    ret = crypto_box_open_easy(c, c, crypto_box_MACBYTES, nonce, bobpk, alicesk);
+    assert(ret == -1);
 
     return 0;
 }
diff --git a/libsodium/test/default/box_easy2.c b/libsodium/test/default/box_easy2.c
index d1b6ab4..05cb099 100644
--- a/libsodium/test/default/box_easy2.c
+++ b/libsodium/test/default/box_easy2.c
@@ -2,11 +2,14 @@
 #define TEST_NAME "box_easy2"
 #include "cmptest.h"
 
-unsigned char m[10000];
-unsigned char m2[10000];
-unsigned char c[crypto_box_MACBYTES + 10000];
+static const unsigned char small_order_p[crypto_box_PUBLICKEYBYTES] = {
+    0xe0, 0xeb, 0x7a, 0x7c, 0x3b, 0x41, 0xb8, 0xae, 0x16, 0x56, 0xe3,
+    0xfa, 0xf1, 0x9f, 0xc4, 0x6a, 0xda, 0x09, 0x8d, 0xeb, 0x9c, 0x32,
+    0xb1, 0xfd, 0x86, 0x62, 0x05, 0x16, 0x5f, 0x49, 0xb8, 0x00
+};
 
-int main(void)
+int
+main(void)
 {
     unsigned char *alicepk;
     unsigned char *alicesk;
@@ -16,23 +19,36 @@ int main(void)
     unsigned char *nonce;
     unsigned char *k1;
     unsigned char *k2;
+    unsigned char *m;
+    unsigned char *m2;
+    unsigned char *c;
     size_t         mlen;
     size_t         i;
+    size_t         m_size;
+    size_t         m2_size;
+    size_t         c_size;
+    int            ret;
 
+    m2_size = m_size = 7U + randombytes_uniform(1000);
+    c_size           = crypto_box_MACBYTES + m_size;
+    m                = (unsigned char *) sodium_malloc(m_size);
+    m2               = (unsigned char *) sodium_malloc(m2_size);
+    c                = (unsigned char *) sodium_malloc(c_size);
     alicepk = (unsigned char *) sodium_malloc(crypto_box_PUBLICKEYBYTES);
     alicesk = (unsigned char *) sodium_malloc(crypto_box_SECRETKEYBYTES);
-    bobpk = (unsigned char *) sodium_malloc(crypto_box_PUBLICKEYBYTES);
-    bobsk = (unsigned char *) sodium_malloc(crypto_box_SECRETKEYBYTES);
-    mac = (unsigned char *) sodium_malloc(crypto_box_MACBYTES);
-    nonce = (unsigned char *) sodium_malloc(crypto_box_NONCEBYTES);
-    k1 = (unsigned char *) sodium_malloc(crypto_box_BEFORENMBYTES);
-    k2 = (unsigned char *) sodium_malloc(crypto_box_BEFORENMBYTES);
+    bobpk   = (unsigned char *) sodium_malloc(crypto_box_PUBLICKEYBYTES);
+    bobsk   = (unsigned char *) sodium_malloc(crypto_box_SECRETKEYBYTES);
+    mac     = (unsigned char *) sodium_malloc(crypto_box_MACBYTES);
+    nonce   = (unsigned char *) sodium_malloc(crypto_box_NONCEBYTES);
+    k1      = (unsigned char *) sodium_malloc(crypto_box_BEFORENMBYTES);
+    k2      = (unsigned char *) sodium_malloc(crypto_box_BEFORENMBYTES);
     crypto_box_keypair(alicepk, alicesk);
     crypto_box_keypair(bobpk, bobsk);
-    mlen = (size_t) randombytes_uniform((uint32_t)sizeof m);
+    mlen = (size_t) randombytes_uniform((uint32_t) m_size) + 1U;
     randombytes_buf(m, mlen);
     randombytes_buf(nonce, crypto_box_NONCEBYTES);
-    crypto_box_easy(c, m, mlen, nonce, bobpk, alicesk);
+    ret = crypto_box_easy(c, m, mlen, nonce, bobpk, alicesk);
+    assert(ret == 0);
     if (crypto_box_open_easy(m2, c,
                              (unsigned long long) mlen + crypto_box_MACBYTES,
                              nonce, alicepk, bobsk) != 0) {
@@ -42,15 +58,16 @@ int main(void)
     printf("%d\n", memcmp(m, m2, mlen));
 
     for (i = 0; i < mlen + crypto_box_MACBYTES - 1; i++) {
-        if (crypto_box_open_easy(m2, c, (unsigned long long) i,
-                                 nonce, alicepk, bobsk) == 0) {
+        if (crypto_box_open_easy(m2, c, (unsigned long long) i, nonce, alicepk,
+                                 bobsk) == 0) {
             printf("short open() should have failed");
             return 1;
         }
     }
-
     memcpy(c, m, mlen);
-    crypto_box_easy(c, c, (unsigned long long) mlen, nonce, bobpk, alicesk);
+    ret =
+        crypto_box_easy(c, c, (unsigned long long) mlen, nonce, bobpk, alicesk);
+    assert(ret == 0);
     printf("%d\n", memcmp(m, c, mlen) == 0);
     printf("%d\n", memcmp(m, c + crypto_box_MACBYTES, mlen) == 0);
     if (crypto_box_open_easy(c, c,
@@ -59,35 +76,60 @@ int main(void)
         printf("crypto_box_open_easy() failed\n");
     }
 
-    crypto_box_beforenm(k1, alicepk, bobsk);
-    crypto_box_beforenm(k2, bobpk, alicesk);
+    ret = crypto_box_beforenm(k1, small_order_p, bobsk);
+    assert(ret == -1);
+    ret = crypto_box_beforenm(k2, small_order_p, alicesk);
+    assert(ret == -1);
+
+    ret = crypto_box_beforenm(k1, alicepk, bobsk);
+    assert(ret == 0);
+    ret = crypto_box_beforenm(k2, bobpk, alicesk);
+    assert(ret == 0);
 
-    memset(m2, 0, sizeof m2);
+    memset(m2, 0, m2_size);
 
-    if (crypto_box_easy_afternm(c, m, SIZE_MAX - 1U, nonce, k1) == 0) {
-        printf("crypto_box_easy_afternm() with a short ciphertext should have failed\n");
+    if (crypto_box_easy_afternm(c, m, 0, nonce, k1) != 0) {
+        printf(
+            "crypto_box_easy_afternm() with a null ciphertext should have "
+            "worked\n");
     }
     crypto_box_easy_afternm(c, m, (unsigned long long) mlen, nonce, k1);
-    crypto_box_open_easy_afternm(m2, c,
-                                 (unsigned long long) mlen + crypto_box_MACBYTES,
-                                 nonce, k2);
+    if (crypto_box_open_easy_afternm(
+            m2, c, (unsigned long long) mlen + crypto_box_MACBYTES, nonce,
+            k2) != 0) {
+        printf("crypto_box_open_easy_afternm() failed\n");
+    }
     printf("%d\n", memcmp(m, m2, mlen));
-    if (crypto_box_open_easy_afternm(m2, c, crypto_box_MACBYTES - 1U,
-                                     nonce, k2) == 0) {
-        printf("crypto_box_open_easy_afternm() with a huge ciphertext should have failed\n");
+    if (crypto_box_open_easy_afternm(m2, c, crypto_box_MACBYTES - 1U, nonce,
+                                     k2) == 0) {
+        printf(
+            "crypto_box_open_easy_afternm() with a huge ciphertext should have "
+            "failed\n");
+    }
+    memset(m2, 0, m2_size);
+    ret = crypto_box_detached(c, mac, m, (unsigned long long) mlen, nonce,
+                              small_order_p, bobsk);
+    assert(ret == -1);
+    ret = crypto_box_detached(c, mac, m, (unsigned long long) mlen, nonce,
+                              alicepk, bobsk);
+    assert(ret == 0);
+    if (crypto_box_open_detached(m2, c, mac, (unsigned long long) mlen, nonce,
+                                 small_order_p, alicesk) != -1) {
+        printf("crypto_box_open_detached() with a weak key passed\n");
+    }
+    if (crypto_box_open_detached(m2, c, mac, (unsigned long long) mlen, nonce,
+                                 bobpk, alicesk) != 0) {
+        printf("crypto_box_open_detached() failed\n");
     }
-    memset(m2, 0, sizeof m2);
-    crypto_box_detached(c, mac, m, (unsigned long long) mlen,
-                        nonce, alicepk, bobsk);
-    crypto_box_open_detached(m2, c, mac, (unsigned long long) mlen,
-                             nonce, bobpk, alicesk);
     printf("%d\n", memcmp(m, m2, mlen));
 
-    memset(m2, 0, sizeof m2);
-    crypto_box_detached_afternm(c, mac, m, (unsigned long long) mlen,
-                                nonce, k1);
-    crypto_box_open_detached_afternm(m2, c, mac, (unsigned long long) mlen,
-                                     nonce, k2);
+    memset(m2, 0, m2_size);
+    crypto_box_detached_afternm(c, mac, m, (unsigned long long) mlen, nonce,
+                                k1);
+    if (crypto_box_open_detached_afternm(m2, c, mac, (unsigned long long) mlen,
+                                         nonce, k2) != 0) {
+        printf("crypto_box_open_detached_afternm() failed\n");
+    }
     printf("%d\n", memcmp(m, m2, mlen));
 
     sodium_free(alicepk);
@@ -98,6 +140,9 @@ int main(void)
     sodium_free(nonce);
     sodium_free(k1);
     sodium_free(k2);
+    sodium_free(m);
+    sodium_free(m2);
+    sodium_free(c);
     printf("OK\n");
 
     return 0;
diff --git a/libsodium/test/default/box_seal.c b/libsodium/test/default/box_seal.c
index 1d73e30..01765ca 100644
--- a/libsodium/test/default/box_seal.c
+++ b/libsodium/test/default/box_seal.c
@@ -2,10 +2,11 @@
 #define TEST_NAME "box_seal"
 #include "cmptest.h"
 
-int main(void)
+static
+void tv1(void)
 {
-    unsigned char pk[crypto_box_PUBLICKEYBYTES];
-    unsigned char sk[crypto_box_SECRETKEYBYTES];
+    unsigned char  pk[crypto_box_PUBLICKEYBYTES];
+    unsigned char  sk[crypto_box_SECRETKEYBYTES];
     unsigned char *c;
     unsigned char *m;
     unsigned char *m2;
@@ -15,17 +16,17 @@ int main(void)
     crypto_box_keypair(pk, sk);
     m_len = (size_t) randombytes_uniform(1000);
     c_len = crypto_box_SEALBYTES + m_len;
-    m = (unsigned char *) sodium_malloc(m_len);
-    m2 = (unsigned char *) sodium_malloc(m_len);
-    c = (unsigned char *) sodium_malloc(c_len);
+    m     = (unsigned char *) sodium_malloc(m_len);
+    m2    = (unsigned char *) sodium_malloc(m_len);
+    c     = (unsigned char *) sodium_malloc(c_len);
     randombytes_buf(m, m_len);
     if (crypto_box_seal(c, m, m_len, pk) != 0) {
         printf("crypto_box_seal() failure\n");
-        return 1;
+        return;
     }
     if (crypto_box_seal_open(m2, c, c_len, pk, sk) != 0) {
         printf("crypto_box_seal_open() failure\n");
-        return 1;
+        return;
     }
     printf("%d\n", memcmp(m, m2, m_len));
 
@@ -38,6 +39,63 @@ int main(void)
     sodium_free(m2);
 
     assert(crypto_box_sealbytes() == crypto_box_SEALBYTES);
+}
+
+#ifndef SODIUM_LIBRARY_MINIMAL
+static
+void tv2(void)
+{
+    unsigned char  pk[crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES];
+    unsigned char  sk[crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES];
+    unsigned char *c;
+    unsigned char *m;
+    unsigned char *m2;
+    size_t         m_len;
+    size_t         c_len;
+
+    crypto_box_curve25519xchacha20poly1305_keypair(pk, sk);
+    m_len = (size_t) randombytes_uniform(1000);
+    c_len = crypto_box_curve25519xchacha20poly1305_SEALBYTES + m_len;
+    m     = (unsigned char *) sodium_malloc(m_len);
+    m2    = (unsigned char *) sodium_malloc(m_len);
+    c     = (unsigned char *) sodium_malloc(c_len);
+    randombytes_buf(m, m_len);
+    if (crypto_box_curve25519xchacha20poly1305_seal(c, m, m_len, pk) != 0) {
+        printf("crypto_box_curve25519xchacha20poly1305_seal() failure\n");
+        return;
+    }
+    if (crypto_box_curve25519xchacha20poly1305_seal_open(m2, c, c_len, pk, sk) != 0) {
+        printf("crypto_box_curve25519xchacha20poly1305_seal_open() failure\n");
+        return;
+    }
+    printf("%d\n", memcmp(m, m2, m_len));
+
+    printf("%d\n", crypto_box_curve25519xchacha20poly1305_seal_open(m, c, 0U, pk, sk));
+    printf("%d\n", crypto_box_curve25519xchacha20poly1305_seal_open(m, c, c_len - 1U, pk, sk));
+    printf("%d\n", crypto_box_curve25519xchacha20poly1305_seal_open(m, c, c_len, sk, pk));
+
+    sodium_free(c);
+    sodium_free(m);
+    sodium_free(m2);
+
+    assert(crypto_box_curve25519xchacha20poly1305_sealbytes() ==
+           crypto_box_curve25519xchacha20poly1305_SEALBYTES);
+}
+
+#else
+
+static
+void tv2(void)
+{
+    printf("0\n-1\n-1\n-1\n");
+}
+#endif
+
+int
+main(void)
+{
+    tv1();
+    tv2();
 
     return 0;
 }
diff --git a/libsodium/test/default/box_seed.c b/libsodium/test/default/box_seed.c
index 5af2a50..95930d3 100644
--- a/libsodium/test/default/box_seed.c
+++ b/libsodium/test/default/box_seed.c
@@ -2,25 +2,27 @@
 #define TEST_NAME "box_seed"
 #include "cmptest.h"
 
-unsigned char seed[32]
-    = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,
-        0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,
-        0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a };
+static unsigned char seed[32] = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5,
+                                  0x7d, 0x3c, 0x16, 0xc1, 0x72, 0x51, 0xb2,
+                                  0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb,
+                                  0xc0, 0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5,
+                                  0x1d, 0xb9, 0x2c, 0x2a };
 
-int main(void)
+int
+main(void)
 {
-    int i;
+    int           i;
     unsigned char sk[32];
     unsigned char pk[32];
 
     crypto_box_seed_keypair(pk, sk, seed);
     for (i = 0; i < 32; ++i) {
-        printf(",0x%02x", (unsigned int)pk[i]);
+        printf(",0x%02x", (unsigned int) pk[i]);
         if (i % 8 == 7)
             printf("\n");
     }
     for (i = 0; i < 32; ++i) {
-        printf(",0x%02x", (unsigned int)sk[i]);
+        printf(",0x%02x", (unsigned int) sk[i]);
         if (i % 8 == 7)
             printf("\n");
     }
diff --git a/libsodium/test/default/chacha20.c b/libsodium/test/default/chacha20.c
index b4334a8..d92b11e 100644
--- a/libsodium/test/default/chacha20.c
+++ b/libsodium/test/default/chacha20.c
@@ -2,7 +2,8 @@
 #define TEST_NAME "chacha20"
 #include "cmptest.h"
 
-static void tv(void)
+static
+void tv(void)
 {
     static struct {
         const char *key_hex;
@@ -18,12 +19,16 @@ static void tv(void)
             "0100000000000000" },
           { "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f",
             "0001020304050607" } };
-    unsigned char key[crypto_stream_chacha20_KEYBYTES];
-    unsigned char nonce[crypto_stream_chacha20_NONCEBYTES];
-    unsigned char out[160];
-    char out_hex[160 * 2 + 1];
-    size_t i = 0U;
+    unsigned char  key[crypto_stream_chacha20_KEYBYTES];
+    unsigned char  nonce[crypto_stream_chacha20_NONCEBYTES];
+    unsigned char *part;
+    unsigned char  out[160];
+    unsigned char  zero[160];
+    char           out_hex[160 * 2 + 1];
+    size_t         i = 0U;
+    size_t         plen;
 
+    memset(zero, 0, sizeof zero);
     do {
         sodium_hex2bin((unsigned char *)key, sizeof key, tests[i].key_hex,
                        strlen(tests[i].key_hex), NULL, NULL, NULL);
@@ -32,15 +37,33 @@ static void tv(void)
         crypto_stream_chacha20(out, sizeof out, nonce, key);
         sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
         printf("[%s]\n", out_hex);
+        for (plen = 1U; plen < sizeof out; plen++) {
+            part = (unsigned char *) sodium_malloc(plen);
+            crypto_stream_chacha20_xor(part, out, plen, nonce, key);
+            if (memcmp(part, zero, plen) != 0) {
+                printf("Failed with length %lu\n", (unsigned long) plen);
+            }
+            sodium_free(part);
+        }
     } while (++i < (sizeof tests) / (sizeof tests[0]));
-
-    memset(out, 0x42, sizeof out);
+    assert(66 <= sizeof out);
+    for (plen = 1U; plen < 66; plen += 3) {
+        memset(out, (int) (plen & 0xff), sizeof out);
+        crypto_stream_chacha20(out, plen, nonce, key);
+        sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+        printf("[%s]\n", out_hex);
+    }
+    randombytes_buf(out, sizeof out);
+    crypto_stream_chacha20(out, sizeof out, nonce, key);
+    sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+    printf("[%s]\n", out_hex);
 
     assert(crypto_stream_chacha20(out, 0U, nonce, key) == 0);
     assert(crypto_stream_chacha20_xor(out, out, 0U, nonce, key) == 0);
     assert(crypto_stream_chacha20_xor(out, out, 0U, nonce, key) == 0);
     assert(crypto_stream_chacha20_xor_ic(out, out, 0U, nonce, 1U, key) == 0);
 
+    memset(out, 0x42, sizeof out);
     crypto_stream_chacha20_xor(out, out, sizeof out, nonce, key);
     sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
     printf("[%s]\n", out_hex);
@@ -52,14 +75,112 @@ static void tv(void)
     crypto_stream_chacha20_xor_ic(out, out, sizeof out, nonce, 1U, key);
     sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
     printf("[%s]\n", out_hex);
-};
+}
+
+static
+void tv_ietf(void)
+{
+    static struct {
+        const char *key_hex;
+        const char *nonce_hex;
+        uint32_t    ic;
+    } tests[]
+      = { { "0000000000000000000000000000000000000000000000000000000000000000",
+            "000000000000000000000000",
+            0U },
+          { "0000000000000000000000000000000000000000000000000000000000000000",
+            "000000000000000000000000",
+            1U },
+          { "0000000000000000000000000000000000000000000000000000000000000001",
+            "000000000000000000000000",
+            1U },
+          { "00ff000000000000000000000000000000000000000000000000000000000000",
+            "000000000000000000000000",
+            2U },
+          { "0000000000000000000000000000000000000000000000000000000000000000",
+            "000000000000000000000002",
+            0U },
+          { "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f",
+            "000000090000004a00000000",
+            1U },
+          { "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f",
+            "000000090000004a00000000",
+            0xfeffffff }};
+    unsigned char  key[crypto_stream_chacha20_KEYBYTES];
+    unsigned char  nonce[crypto_stream_chacha20_IETF_NONCEBYTES];
+    unsigned char *part;
+    unsigned char  out[160];
+    unsigned char  zero[160];
+    char           out_hex[160 * 2 + 1];
+    size_t         i = 0U;
+    size_t         plen;
+
+    memset(zero, 0, sizeof zero);
+    do {
+        sodium_hex2bin((unsigned char *)key, sizeof key, tests[i].key_hex,
+                       strlen(tests[i].key_hex), ": ", NULL, NULL);
+        sodium_hex2bin(nonce, sizeof nonce, tests[i].nonce_hex,
+                       strlen(tests[i].nonce_hex), ": ", NULL, NULL);
+        memset(out, 0, sizeof out);
+        crypto_stream_chacha20_ietf_xor_ic(out, out, sizeof out, nonce, tests[i].ic, key);
+        sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+        printf("[%s]\n", out_hex);
+        for (plen = 1U; plen < sizeof out; plen++) {
+            part = (unsigned char *) sodium_malloc(plen);
+            crypto_stream_chacha20_ietf_xor_ic(part, out, plen, nonce, tests[i].ic, key);
+            if (memcmp(part, zero, plen) != 0) {
+                printf("Failed with length %lu\n", (unsigned long) plen);
+            }
+            sodium_free(part);
+        }
+    } while (++i < (sizeof tests) / (sizeof tests[0]));
+    assert(66 <= sizeof out);
+    for (plen = 1U; plen < 66; plen += 3) {
+        memset(out, (int) (plen & 0xff), sizeof out);
+        crypto_stream_chacha20(out, plen, nonce, key);
+        sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+        printf("[%s]\n", out_hex);
+    }
+    randombytes_buf(out, sizeof out);
+    crypto_stream_chacha20_ietf(out, sizeof out, nonce, key);
+    sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+    printf("[%s]\n", out_hex);
+
+    assert(crypto_stream_chacha20_ietf(out, 0U, nonce, key) == 0);
+    assert(crypto_stream_chacha20_ietf_xor(out, out, 0U, nonce, key) == 0);
+    assert(crypto_stream_chacha20_ietf_xor(out, out, 0U, nonce, key) == 0);
+    assert(crypto_stream_chacha20_ietf_xor_ic(out, out, 0U, nonce, 1U, key) == 0);
+
+    memset(out, 0x42, sizeof out);
+    crypto_stream_chacha20_ietf_xor(out, out, sizeof out, nonce, key);
+    sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+    printf("[%s]\n", out_hex);
+
+    crypto_stream_chacha20_ietf_xor_ic(out, out, sizeof out, nonce, 0U, key);
+    sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+    printf("[%s]\n", out_hex);
+
+    crypto_stream_chacha20_ietf_xor_ic(out, out, sizeof out, nonce, 1U, key);
+    sodium_bin2hex(out_hex, sizeof out_hex, out, sizeof out);
+    printf("[%s]\n", out_hex);
+}
 
-int main(void)
+int
+main(void)
 {
     tv();
+    tv_ietf();
 
     assert(crypto_stream_chacha20_keybytes() > 0U);
+    assert(crypto_stream_chacha20_keybytes() == crypto_stream_chacha20_KEYBYTES);
     assert(crypto_stream_chacha20_noncebytes() > 0U);
+    assert(crypto_stream_chacha20_noncebytes() == crypto_stream_chacha20_NONCEBYTES);
+    assert(crypto_stream_chacha20_messagebytes_max() == crypto_stream_chacha20_MESSAGEBYTES_MAX);
+    assert(crypto_stream_chacha20_ietf_keybytes() > 0U);
+    assert(crypto_stream_chacha20_ietf_keybytes() == crypto_stream_chacha20_ietf_KEYBYTES);
+    assert(crypto_stream_chacha20_ietf_noncebytes() > 0U);
+    assert(crypto_stream_chacha20_ietf_noncebytes() == crypto_stream_chacha20_ietf_NONCEBYTES);
+    assert(crypto_stream_chacha20_ietf_messagebytes_max() == crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX);
 
     return 0;
 }
diff --git a/libsodium/test/default/cmptest.h b/libsodium/test/default/cmptest.h
index ee84979..1ecc5cd 100644
--- a/libsodium/test/default/cmptest.h
+++ b/libsodium/test/default/cmptest.h
@@ -2,7 +2,13 @@
 #ifndef __CMPTEST_H__
 #define __CMPTEST_H__
 
+#ifdef NDEBUG
+#/**/undef/**/ NDEBUG
+#endif
+
 #include <assert.h>
+#include <errno.h>
+#include <limits.h>
 #include <stdio.h>
 #include <stdint.h>
 #include <stdlib.h>
@@ -27,13 +33,143 @@
 # define rand(X) arc4random(X)
 #endif
 
-FILE *fp_res;
-int   xmain(void);
+int xmain(void);
+
+static unsigned char *guard_page;
+
+#ifdef BENCHMARKS
+
+# include <sys/time.h>
+
+# ifndef ITERATIONS
+#  define ITERATIONS 128
+# endif
+
+struct {
+    void   *pnt;
+    size_t  size;
+} mempool[1024];
+
+static size_t mempool_idx;
+
+static __attribute__((malloc)) void *mempool_alloc(size_t size)
+{
+    size_t i;
+    if (size >= (size_t) 0x80000000 - (size_t) 0x00000fff) {
+        return NULL;
+    }
+    size = (size + (size_t) 0x00000fff) & ~ (size_t) 0x00000fff;
+    for (i = 0U; i < mempool_idx; i++) {
+        if (mempool[i].size >= (size | (size_t) 0x80000000)) {
+            mempool[i].size &= ~ (size_t) 0x80000000;
+            return mempool[i].pnt;
+        }
+    }
+    if (mempool_idx >= sizeof mempool / sizeof mempool[0]) {
+        return NULL;
+    }
+    mempool[mempool_idx].size = size;
+    return (mempool[mempool_idx++].pnt = (void *) malloc(size));
+}
+
+static void mempool_free(void *pnt)
+{
+    size_t i;
+    for (i = 0U; i < mempool_idx; i++) {
+        if (mempool[i].pnt == pnt) {
+            if ((mempool[i].size & (size_t) 0x80000000) != (size_t) 0x0) {
+                break;
+            }
+            mempool[i].size |= (size_t) 0x80000000;
+            return;
+        }
+    }
+    abort();
+}
+
+static __attribute__((malloc)) void *mempool_allocarray(size_t count, size_t size)
+{
+    if (count > (size_t) 0U && size >= (size_t) SIZE_MAX / count) {
+        return NULL;
+    }
+    return mempool_alloc(count * size);
+}
+
+static int mempool_free_all(void)
+{
+    size_t i;
+    int    ret = 0;
+
+    for (i = 0U; i < mempool_idx; i++) {
+        if ((mempool[i].size & (size_t) 0x80000000) == (size_t) 0x0) {
+            ret = -1;
+        }
+        free(mempool[i].pnt);
+        mempool[i].pnt = NULL;
+    }
+    mempool_idx = (size_t) 0U;
+
+    return ret;
+}
+
+#define sodium_malloc(X)        mempool_alloc(X)
+#define sodium_free(X)          mempool_free(X)
+#define sodium_allocarray(X, Y) mempool_allocarray((X), (Y))
+
+static unsigned long long now(void)
+{
+    struct             timeval tp;
+    unsigned long long now;
+
+    if (gettimeofday(&tp, NULL) != 0) {
+        abort();
+    }
+    now = ((unsigned long long) tp.tv_sec * 1000000ULL) +
+        (unsigned long long) tp.tv_usec;
+
+    return now;
+}
+
+int main(void)
+{
+    unsigned long long ts_start;
+    unsigned long long ts_end;
+    unsigned int       i;
+
+    if (sodium_init() != 0) {
+        return 99;
+    }
+
+#ifndef __EMSCRIPTEN__
+    randombytes_set_implementation(&randombytes_salsa20_implementation);
+#endif
+    ts_start = now();
+    for (i = 0; i < ITERATIONS; i++) {
+        if (xmain() != 0) {
+            abort();
+        }
+    }
+    ts_end = now();
+    printf("%llu\n", 1000000ULL * (ts_end - ts_start) / ITERATIONS);
+    if (mempool_free_all() != 0) {
+        fprintf(stderr, "** memory leaks detected **\n");
+        return 99;
+    }
+    return 0;
+}
+
+#undef  printf
+#define printf(...) do { } while(0)
+
+#elif !defined(BROWSER_TESTS)
+
+static FILE *fp_res;
 
 int main(void)
 {
-    FILE *fp_out;
-    int   c;
+    FILE          *fp_out;
+    unsigned char *_guard_page;
+    int           c;
 
     if ((fp_res = fopen(TEST_NAME_RES, "w+")) == NULL) {
         perror("fopen(" TEST_NAME_RES ")");
@@ -42,6 +178,15 @@ int main(void)
     if (sodium_init() != 0) {
         return 99;
     }
+# if defined(__EMSCRIPTEN__) || defined(__SANITIZE_ADDRESS__)
+    guard_page = _guard_page = NULL;
+#else
+    if ((_guard_page = (unsigned char *) sodium_malloc(0)) == NULL) {
+        perror("sodium_malloc()");
+        return 99;
+    }
+    guard_page = _guard_page + 1;
+#endif
     if (xmain() != 0) {
         return 99;
     }
@@ -55,12 +200,31 @@ int main(void)
             return 99;
         }
     } while (c != EOF);
+    sodium_free(_guard_page);
 
     return 0;
 }
 
 #undef  printf
 #define printf(...) fprintf(fp_res, __VA_ARGS__)
+
+#else
+
+int main(void)
+{
+    if (sodium_init() != 0) {
+        return 99;
+    }
+    if (xmain() != 0) {
+        return 99;
+    }
+    printf("--- SUCCESS ---\n");
+
+    return 0;
+}
+
+#endif
+
 #define main xmain
 
 #endif
diff --git a/libsodium/test/default/core1.c b/libsodium/test/default/core1.c
index 44f90c4..f1d7b0b 100644
--- a/libsodium/test/default/core1.c
+++ b/libsodium/test/default/core1.c
@@ -2,19 +2,21 @@
 #define TEST_NAME "core1"
 #include "cmptest.h"
 
-unsigned char shared[32]
-    = { 0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d, 0xe1, 0x72, 0x8e, 0x3b,
-        0xf4, 0x80, 0x35, 0x0f, 0x25, 0xe0, 0x7e, 0x21, 0xc9, 0x47, 0xd1,
-        0x9e, 0x33, 0x76, 0xf0, 0x9b, 0x3c, 0x1e, 0x16, 0x17, 0x42 };
+static unsigned char shared[32] = { 0x4a, 0x5d, 0x9d, 0x5b, 0xa4, 0xce, 0x2d,
+                                    0xe1, 0x72, 0x8e, 0x3b, 0xf4, 0x80, 0x35,
+                                    0x0f, 0x25, 0xe0, 0x7e, 0x21, 0xc9, 0x47,
+                                    0xd1, 0x9e, 0x33, 0x76, 0xf0, 0x9b, 0x3c,
+                                    0x1e, 0x16, 0x17, 0x42 };
 
-unsigned char zero[32] = { 0 };
+static unsigned char zero[32];
 
-unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,
-                        0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b };
+static unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,
+                               0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b };
 
-unsigned char firstkey[32];
+static unsigned char firstkey[32];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
@@ -25,7 +27,7 @@ int main(void)
         } else {
             printf(" ");
         }
-        printf("0x%02x", (unsigned int)firstkey[i]);
+        printf("0x%02x", (unsigned int) firstkey[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
diff --git a/libsodium/test/default/core2.c b/libsodium/test/default/core2.c
index 6870acb..7e2dd7e 100644
--- a/libsodium/test/default/core2.c
+++ b/libsodium/test/default/core2.c
@@ -2,21 +2,23 @@
 #define TEST_NAME "core2"
 #include "cmptest.h"
 
-unsigned char firstkey[32]
-    = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85, 0xd4, 0x62, 0xcd, 0x51,
-        0x19, 0x7a, 0x9a, 0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac, 0x64,
-        0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08, 0x44, 0xf6, 0x83, 0x89 };
+static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,
+                                      0xd4, 0x62, 0xcd, 0x51, 0x19, 0x7a, 0x9a,
+                                      0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac,
+                                      0x64, 0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08,
+                                      0x44, 0xf6, 0x83, 0x89 };
 
-unsigned char nonceprefix[16]
-    = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-        0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6 };
+static unsigned char nonceprefix[16] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                         0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                         0x75, 0xfc, 0x73, 0xd6 };
 
-unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,
-                        0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b };
+static unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,
+                               0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b };
 
-unsigned char secondkey[32];
+static unsigned char secondkey[32];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
@@ -27,7 +29,7 @@ int main(void)
         } else {
             printf(" ");
         }
-        printf("0x%02x", (unsigned int)secondkey[i]);
+        printf("0x%02x", (unsigned int) secondkey[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
diff --git a/libsodium/test/default/core3.c b/libsodium/test/default/core3.c
index 210e25c..09f2473 100644
--- a/libsodium/test/default/core3.c
+++ b/libsodium/test/default/core3.c
@@ -2,45 +2,114 @@
 #define TEST_NAME "core3"
 #include "cmptest.h"
 
-unsigned char secondkey[32]
-    = { 0xdc, 0x90, 0x8d, 0xda, 0x0b, 0x93, 0x44, 0xa9, 0x53, 0x62, 0x9b,
-        0x73, 0x38, 0x20, 0x77, 0x88, 0x80, 0xf3, 0xce, 0xb4, 0x21, 0xbb,
-        0x61, 0xb9, 0x1c, 0xbd, 0x4c, 0x3e, 0x66, 0x25, 0x6c, 0xe4 };
+static unsigned char SECONDKEY[32] = { 0xdc, 0x90, 0x8d, 0xda, 0x0b, 0x93, 0x44,
+                                       0xa9, 0x53, 0x62, 0x9b, 0x73, 0x38, 0x20,
+                                       0x77, 0x88, 0x80, 0xf3, 0xce, 0xb4, 0x21,
+                                       0xbb, 0x61, 0xb9, 0x1c, 0xbd, 0x4c, 0x3e,
+                                       0x66, 0x25, 0x6c, 0xe4 };
 
-unsigned char noncesuffix[8]
-    = { 0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+static unsigned char NONCESUFFIX[8] = { 0x82, 0x19, 0xe0, 0x03,
+                                        0x6b, 0x7a, 0x0b, 0x37 };
 
-unsigned char c[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,
-                        0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b };
+static unsigned char C[16] = { 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x20, 0x33,
+                               0x32, 0x2d, 0x62, 0x79, 0x74, 0x65, 0x20, 0x6b };
 
-unsigned char in[16] = { 0 };
-
-unsigned char output[64 * 256 * 256];
-
-unsigned char h[32];
-
-int main(void)
+int
+main(void)
 {
-    int i;
-    long long pos = 0;
+    unsigned char *secondkey;
+    unsigned char *c;
+    unsigned char *noncesuffix;
+    unsigned char *in;
+    unsigned char *output;
+    unsigned char *h;
+    size_t         output_len = 64 * 256 * 256;
+    size_t         pos = 0;
+    int            i;
+
+    pos = 0;
+    secondkey = (unsigned char *) sodium_malloc(32);
+    memcpy(secondkey, SECONDKEY, 32);
+    noncesuffix = (unsigned char *) sodium_malloc(8);
+    memcpy(noncesuffix, NONCESUFFIX, 8);
+    c = (unsigned char *) sodium_malloc(16);
+    memcpy(c, C, 16);
+    in = (unsigned char *) sodium_malloc(16);
+    output = (unsigned char *) sodium_malloc(output_len);
+    h = (unsigned char *) sodium_malloc(32);
 
-    for (i = 0; i < 8; ++i)
+    for (i = 0; i < 8; i++) {
         in[i] = noncesuffix[i];
+    }
+    for (; i < 16; i++) {
+        in[i] = 0;
+    }
     do {
         do {
             crypto_core_salsa20(output + pos, in, secondkey, c);
             pos += 64;
-        } while (++in[8]);
-    } while (++in[9]);
-    crypto_hash_sha256(h, output, sizeof output);
+            in[8]++;
+        } while (in[8] != 0);
+        in[9]++;
+    } while (in[9] != 0);
+
+    crypto_hash_sha256(h, output, output_len);
+
+    for (i = 0; i < 32; ++i) {
+        printf("%02x", h[i]);
+    }
+    printf("\n");
+
+#ifndef SODIUM_LIBRARY_MINIMAL
+    pos = 0;
+    do {
+        do {
+            crypto_core_salsa2012(output + pos, in, secondkey, c);
+            pos += 64;
+            in[8]++;
+        } while (in[8] != 0);
+        in[9]++;
+    } while (in[9] != 0);
+
+    crypto_hash_sha256(h, output, output_len);
+
     for (i = 0; i < 32; ++i) {
         printf("%02x", h[i]);
     }
     printf("\n");
-    assert(crypto_core_salsa20_outputbytes() > 0U);
-    assert(crypto_core_salsa20_inputbytes() > 0U);
-    assert(crypto_core_salsa20_keybytes() > 0U);
-    assert(crypto_core_salsa20_constbytes() > 0U);
+
+    pos = 0;
+    do {
+        do {
+            crypto_core_salsa208(output + pos, in, secondkey, c);
+            pos += 64;
+            in[8]++;
+        } while (in[8] != 0);
+        in[9]++;
+    } while (in[9] != 0);
+
+    crypto_hash_sha256(h, output, output_len);
+
+    for (i = 0; i < 32; ++i) {
+        printf("%02x", h[i]);
+    }
+    printf("\n");
+#else
+    printf("a4e3147dddd2ba7775939b50208a22eb3277d4e4bad8a1cfbc999c6bd392b638\n"
+           "017421baa9959cbe894bd003ec87938254f47c1e757eb66cf89c353d0c2b68de\n");
+#endif
+
+    sodium_free(h);
+    sodium_free(output);
+    sodium_free(in);
+    sodium_free(c);
+    sodium_free(noncesuffix);
+    sodium_free(secondkey);
+
+    assert(crypto_core_salsa20_outputbytes() == crypto_core_salsa20_OUTPUTBYTES);
+    assert(crypto_core_salsa20_inputbytes() == crypto_core_salsa20_INPUTBYTES);
+    assert(crypto_core_salsa20_keybytes() == crypto_core_salsa20_KEYBYTES);
+    assert(crypto_core_salsa20_constbytes() == crypto_core_salsa20_CONSTBYTES);
 
     return 0;
 }
diff --git a/libsodium/test/default/core4.c b/libsodium/test/default/core4.c
index 611d392..cb174ab 100644
--- a/libsodium/test/default/core4.c
+++ b/libsodium/test/default/core4.c
@@ -2,19 +2,21 @@
 #define TEST_NAME "core4"
 #include "cmptest.h"
 
-unsigned char k[32] = { 1,   2,   3,   4,   5,   6,   7,   8,   9,   10,  11,
-                        12,  13,  14,  15,  16,  201, 202, 203, 204, 205, 206,
-                        207, 208, 209, 210, 211, 212, 213, 214, 215, 216 };
+static unsigned char k[32] = { 1,   2,   3,   4,   5,   6,   7,   8,
+                               9,   10,  11,  12,  13,  14,  15,  16,
+                               201, 202, 203, 204, 205, 206, 207, 208,
+                               209, 210, 211, 212, 213, 214, 215, 216 };
 
-unsigned char in[16] = { 101, 102, 103, 104, 105, 106, 107, 108,
-                         109, 110, 111, 112, 113, 114, 115, 116 };
+static unsigned char in[16] = { 101, 102, 103, 104, 105, 106, 107, 108,
+                                109, 110, 111, 112, 113, 114, 115, 116 };
 
-unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,
-                        50,  45,  98,  121, 116, 101, 32, 107 };
+static unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,
+                               50,  45,  98,  121, 116, 101, 32, 107 };
 
-unsigned char out[64];
+static unsigned char out[64];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
@@ -25,7 +27,7 @@ int main(void)
         } else {
             printf(" ");
         }
-        printf("%3d", (unsigned int)out[i]);
+        printf("%3u", (unsigned int) out[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
diff --git a/libsodium/test/default/core5.c b/libsodium/test/default/core5.c
index cf37397..02b0fd9 100644
--- a/libsodium/test/default/core5.c
+++ b/libsodium/test/default/core5.c
@@ -2,26 +2,29 @@
 #define TEST_NAME "core5"
 #include "cmptest.h"
 
-unsigned char k[32]
-    = { 0xee, 0x30, 0x4f, 0xca, 0x27, 0x00, 0x8d, 0x8c, 0x12, 0x6f, 0x90,
-        0x02, 0x79, 0x01, 0xd8, 0x0f, 0x7f, 0x1d, 0x8b, 0x8d, 0xc9, 0x36,
-        0xcf, 0x3b, 0x9f, 0x81, 0x96, 0x92, 0x82, 0x7e, 0x57, 0x77 };
+static unsigned char k[32] = { 0xee, 0x30, 0x4f, 0xca, 0x27, 0x00, 0x8d, 0x8c,
+                               0x12, 0x6f, 0x90, 0x02, 0x79, 0x01, 0xd8, 0x0f,
+                               0x7f, 0x1d, 0x8b, 0x8d, 0xc9, 0x36, 0xcf, 0x3b,
+                               0x9f, 0x81, 0x96, 0x92, 0x82, 0x7e, 0x57, 0x77 };
 
-unsigned char in[16] = { 0x81, 0x91, 0x8e, 0xf2, 0xa5, 0xe0, 0xda, 0x9b,
-                         0x3e, 0x90, 0x60, 0x52, 0x1e, 0x4b, 0xb3, 0x52 };
+static unsigned char in[16] = {
+    0x81, 0x91, 0x8e, 0xf2, 0xa5, 0xe0, 0xda, 0x9b,
+    0x3e, 0x90, 0x60, 0x52, 0x1e, 0x4b, 0xb3, 0x52
+};
 
-unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,
-                        50,  45,  98,  121, 116, 101, 32, 107 };
+static unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,
+                               50,  45,  98,  121, 116, 101, 32, 107 };
 
 unsigned char out[32];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
     crypto_core_hsalsa20(out, in, k, c);
     for (i = 0; i < 32; ++i) {
-        printf(",0x%02x", (unsigned int)out[i]);
+        printf(",0x%02x", (unsigned int) out[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
diff --git a/libsodium/test/default/core6.c b/libsodium/test/default/core6.c
index 67be323..f10c0d6 100644
--- a/libsodium/test/default/core6.c
+++ b/libsodium/test/default/core6.c
@@ -2,22 +2,25 @@
 #define TEST_NAME "core6"
 #include "cmptest.h"
 
-unsigned char k[32]
-    = { 0xee, 0x30, 0x4f, 0xca, 0x27, 0x00, 0x8d, 0x8c, 0x12, 0x6f, 0x90,
-        0x02, 0x79, 0x01, 0xd8, 0x0f, 0x7f, 0x1d, 0x8b, 0x8d, 0xc9, 0x36,
-        0xcf, 0x3b, 0x9f, 0x81, 0x96, 0x92, 0x82, 0x7e, 0x57, 0x77 };
+static unsigned char k[32] = { 0xee, 0x30, 0x4f, 0xca, 0x27, 0x00, 0x8d, 0x8c,
+                               0x12, 0x6f, 0x90, 0x02, 0x79, 0x01, 0xd8, 0x0f,
+                               0x7f, 0x1d, 0x8b, 0x8d, 0xc9, 0x36, 0xcf, 0x3b,
+                               0x9f, 0x81, 0x96, 0x92, 0x82, 0x7e, 0x57, 0x77 };
 
-unsigned char in[16] = { 0x81, 0x91, 0x8e, 0xf2, 0xa5, 0xe0, 0xda, 0x9b,
-                         0x3e, 0x90, 0x60, 0x52, 0x1e, 0x4b, 0xb3, 0x52 };
+static unsigned char in[16] = {
+    0x81, 0x91, 0x8e, 0xf2, 0xa5, 0xe0, 0xda, 0x9b,
+    0x3e, 0x90, 0x60, 0x52, 0x1e, 0x4b, 0xb3, 0x52
+};
 
-unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,
-                        50,  45,  98,  121, 116, 101, 32, 107 };
+static unsigned char c[16] = { 101, 120, 112, 97,  110, 100, 32, 51,
+                               50,  45,  98,  121, 116, 101, 32, 107 };
 
-unsigned char out[64];
+static unsigned char out[64];
 
-void print(unsigned char *x, unsigned char *y)
+static void
+print(unsigned char *x, unsigned char *y)
 {
-    int i;
+    int          i;
     unsigned int borrow = 0;
 
     for (i = 0; i < 4; ++i) {
@@ -28,7 +31,8 @@ void print(unsigned char *x, unsigned char *y)
     }
 }
 
-int main(void)
+int
+main(void)
 {
     crypto_core_salsa20(out, in, k, c);
     print(out, c);
diff --git a/libsodium/test/default/ed25519_convert.c b/libsodium/test/default/ed25519_convert.c
index 02c0641..d067547 100644
--- a/libsodium/test/default/ed25519_convert.c
+++ b/libsodium/test/default/ed25519_convert.c
@@ -2,24 +2,30 @@
 #define TEST_NAME "ed25519_convert"
 #include "cmptest.h"
 
-static const unsigned char keypair_seed[crypto_sign_ed25519_SEEDBYTES]
-    = { 0x42, 0x11, 0x51, 0xa4, 0x59, 0xfa, 0xea, 0xde, 0x3d, 0x24, 0x71,
-        0x15, 0xf9, 0x4a, 0xed, 0xae, 0x42, 0x31, 0x81, 0x24, 0x09, 0x5a,
-        0xfa, 0xbe, 0x4d, 0x14, 0x51, 0xa5, 0x59, 0xfa, 0xed, 0xee };
+static const unsigned char keypair_seed[crypto_sign_ed25519_SEEDBYTES] = {
+    0x42, 0x11, 0x51, 0xa4, 0x59, 0xfa, 0xea, 0xde, 0x3d, 0x24, 0x71,
+    0x15, 0xf9, 0x4a, 0xed, 0xae, 0x42, 0x31, 0x81, 0x24, 0x09, 0x5a,
+    0xfa, 0xbe, 0x4d, 0x14, 0x51, 0xa5, 0x59, 0xfa, 0xed, 0xee
+};
 
-int main(void)
+int
+main(void)
 {
     unsigned char ed25519_pk[crypto_sign_ed25519_PUBLICKEYBYTES];
     unsigned char ed25519_skpk[crypto_sign_ed25519_SECRETKEYBYTES];
     unsigned char curve25519_pk[crypto_scalarmult_curve25519_BYTES];
     unsigned char curve25519_pk2[crypto_scalarmult_curve25519_BYTES];
     unsigned char curve25519_sk[crypto_scalarmult_curve25519_BYTES];
-    char curve25519_pk_hex[crypto_scalarmult_curve25519_BYTES * 2 + 1];
-    char curve25519_sk_hex[crypto_scalarmult_curve25519_BYTES * 2 + 1];
-    unsigned int i;
+    char          curve25519_pk_hex[crypto_scalarmult_curve25519_BYTES * 2 + 1];
+    char          curve25519_sk_hex[crypto_scalarmult_curve25519_BYTES * 2 + 1];
+    unsigned int  i;
 
+    assert(crypto_sign_ed25519_SEEDBYTES <= crypto_hash_sha512_BYTES);
     crypto_sign_ed25519_seed_keypair(ed25519_pk, ed25519_skpk, keypair_seed);
-    crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk);
+
+    if (crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk) != 0) {
+        printf("conversion failed\n");
+    }
     crypto_sign_ed25519_sk_to_curve25519(curve25519_sk, ed25519_skpk);
     sodium_bin2hex(curve25519_pk_hex, sizeof curve25519_pk_hex, curve25519_pk,
                    sizeof curve25519_pk);
@@ -31,13 +37,33 @@ int main(void)
 
     for (i = 0U; i < 500U; i++) {
         crypto_sign_ed25519_keypair(ed25519_pk, ed25519_skpk);
-        crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk);
+        if (crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk) !=
+            0) {
+            printf("conversion failed\n");
+        }
         crypto_sign_ed25519_sk_to_curve25519(curve25519_sk, ed25519_skpk);
         crypto_scalarmult_curve25519_base(curve25519_pk2, curve25519_sk);
         if (memcmp(curve25519_pk, curve25519_pk2, sizeof curve25519_pk) != 0) {
             printf("conversion failed\n");
         }
     }
+
+    sodium_hex2bin(ed25519_pk, crypto_sign_ed25519_PUBLICKEYBYTES,
+                   "0000000000000000000000000000000000000000000000000000000000000000"
+                   "0000000000000000000000000000000000000000000000000000000000000000",
+                   64, NULL, NULL, NULL);
+    assert(crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk) == -1);
+    sodium_hex2bin(ed25519_pk, crypto_sign_ed25519_PUBLICKEYBYTES,
+                   "0200000000000000000000000000000000000000000000000000000000000000"
+                   "0000000000000000000000000000000000000000000000000000000000000000",
+                   64, NULL, NULL, NULL);
+    assert(crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk) == -1);
+    sodium_hex2bin(ed25519_pk, crypto_sign_ed25519_PUBLICKEYBYTES,
+                   "0500000000000000000000000000000000000000000000000000000000000000"
+                   "0000000000000000000000000000000000000000000000000000000000000000",
+                   64, NULL, NULL, NULL);
+    assert(crypto_sign_ed25519_pk_to_curve25519(curve25519_pk, ed25519_pk) == -1);
+
     printf("ok\n");
 
     return 0;
diff --git a/libsodium/test/default/generichash.c b/libsodium/test/default/generichash.c
index 9a3ae75..2da877d 100644
--- a/libsodium/test/default/generichash.c
+++ b/libsodium/test/default/generichash.c
@@ -4,7 +4,1336 @@
 
 #define MAXLEN 64
 
-int main(void)
+static struct {
+    const char *in_hex;
+    const char *key_hex;
+    const char *out_hex;
+} tests[] = {
+    {
+        "",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "10ebb67700b1868efb4417987acf4690ae9d972fb7a590c2f02871799aaa4786b5e996e8f0f4eb981fc214b005f42d2ff4233499391653df7aefcbc13fc51568"
+    },
+    {
+        "00",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "961f6dd1e4dd30f63901690c512e78e4b45e4742ed197c3c5e45c549fd25f2e4187b0bc9fe30492b16b0d0bc4ef9b0f34c7003fac09a5ef1532e69430234cebd"
+    },
+    {
+        "0001",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "da2cfbe2d8409a0f38026113884f84b50156371ae304c4430173d08a99d9fb1b983164a3770706d537f49e0c916d9f32b95cc37a95b99d857436f0232c88a965"
+    },
+    {
+        "000102",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "33d0825dddf7ada99b0e7e307104ad07ca9cfd9692214f1561356315e784f3e5a17e364ae9dbb14cb2036df932b77f4b292761365fb328de7afdc6d8998f5fc1"
+    },
+    {
+        "00010203",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "beaa5a3d08f3807143cf621d95cd690514d0b49efff9c91d24b59241ec0eefa5f60196d407048bba8d2146828ebcb0488d8842fd56bb4f6df8e19c4b4daab8ac"
+    },
+    {
+        "0001020304",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "098084b51fd13deae5f4320de94a688ee07baea2800486689a8636117b46c1f4c1f6af7f74ae7c857600456a58a3af251dc4723a64cc7c0a5ab6d9cac91c20bb"
+    },
+    {
+        "000102030405",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "6044540d560853eb1c57df0077dd381094781cdb9073e5b1b3d3f6c7829e12066bbaca96d989a690de72ca3133a83652ba284a6d62942b271ffa2620c9e75b1f"
+    },
+    {
+        "00010203040506",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7a8cfe9b90f75f7ecb3acc053aaed6193112b6f6a4aeeb3f65d3de541942deb9e2228152a3c4bbbe72fc3b12629528cfbb09fe630f0474339f54abf453e2ed52"
+    },
+    {
+        "0001020304050607",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "380beaf6ea7cc9365e270ef0e6f3a64fb902acae51dd5512f84259ad2c91f4bc4108db73192a5bbfb0cbcf71e46c3e21aee1c5e860dc96e8eb0b7b8426e6abe9"
+    },
+    {
+        "000102030405060708",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "60fe3c4535e1b59d9a61ea8500bfac41a69dffb1ceadd9aca323e9a625b64da5763bad7226da02b9c8c4f1a5de140ac5a6c1124e4f718ce0b28ea47393aa6637"
+    },
+    {
+        "00010203040506070809",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "4fe181f54ad63a2983feaaf77d1e7235c2beb17fa328b6d9505bda327df19fc37f02c4b6f0368ce23147313a8e5738b5fa2a95b29de1c7f8264eb77b69f585cd"
+    },
+    {
+        "000102030405060708090a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f228773ce3f3a42b5f144d63237a72d99693adb8837d0e112a8a0f8ffff2c362857ac49c11ec740d1500749dac9b1f4548108bf3155794dcc9e4082849e2b85b"
+    },
+    {
+        "000102030405060708090a0b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "962452a8455cc56c8511317e3b1f3b2c37df75f588e94325fdd77070359cf63a9ae6e930936fdf8e1e08ffca440cfb72c28f06d89a2151d1c46cd5b268ef8563"
+    },
+    {
+        "000102030405060708090a0b0c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "43d44bfa18768c59896bf7ed1765cb2d14af8c260266039099b25a603e4ddc5039d6ef3a91847d1088d401c0c7e847781a8a590d33a3c6cb4df0fab1c2f22355"
+    },
+    {
+        "000102030405060708090a0b0c0d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "dcffa9d58c2a4ca2cdbb0c7aa4c4c1d45165190089f4e983bb1c2cab4aaeff1fa2b5ee516fecd780540240bf37e56c8bcca7fab980e1e61c9400d8a9a5b14ac6"
+    },
+    {
+        "000102030405060708090a0b0c0d0e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "6fbf31b45ab0c0b8dad1c0f5f4061379912dde5aa922099a030b725c73346c524291adef89d2f6fd8dfcda6d07dad811a9314536c2915ed45da34947e83de34e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "a0c65bddde8adef57282b04b11e7bc8aab105b99231b750c021f4a735cb1bcfab87553bba3abb0c3e64a0b6955285185a0bd35fb8cfde557329bebb1f629ee93"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f10",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f99d815550558e81eca2f96718aed10d86f3f1cfb675cce06b0eff02f617c5a42c5aa760270f2679da2677c5aeb94f1142277f21c7f79f3c4f0cce4ed8ee62b1"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f1011",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "95391da8fc7b917a2044b3d6f5374e1ca072b41454d572c7356c05fd4bc1e0f40b8bb8b4a9f6bce9be2c4623c399b0dca0dab05cb7281b71a21b0ebcd9e55670"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "04b9cd3d20d221c09ac86913d3dc63041989a9a1e694f1e639a3ba7e451840f750c2fc191d56ad61f2e7936bc0ac8e094b60caeed878c18799045402d61ceaf9"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f10111213",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ec0e0ef707e4ed6c0c66f9e089e4954b058030d2dd86398fe84059631f9ee591d9d77375355149178c0cf8f8e7c49ed2a5e4f95488a2247067c208510fadc44c"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f1011121314",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "9a37cce273b79c09913677510eaf7688e89b3314d3532fd2764c39de022a2945b5710d13517af8ddc0316624e73bec1ce67df15228302036f330ab0cb4d218dd"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "4cf9bb8fb3d4de8b38b2f262d3c40f46dfe747e8fc0a414c193d9fcf753106ce47a18f172f12e8a2f1c26726545358e5ee28c9e2213a8787aafbc516d2343152"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f10111213141516",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "64e0c63af9c808fd893137129867fd91939d53f2af04be4fa268006100069b2d69daa5c5d8ed7fddcb2a70eeecdf2b105dd46a1e3b7311728f639ab489326bc9"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f1011121314151617",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5e9c93158d659b2def06b0c3c7565045542662d6eee8a96a89b78ade09fe8b3dcc096d4fe48815d88d8f82620156602af541955e1f6ca30dce14e254c326b88f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7775dff889458dd11aef417276853e21335eb88e4dec9cfb4e9edb49820088551a2ca60339f12066101169f0dfe84b098fddb148d9da6b3d613df263889ad64b"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f10111213141516171819",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f0d2805afbb91f743951351a6d024f9353a23c7ce1fc2b051b3a8b968c233f46f50f806ecb1568ffaa0b60661e334b21dde04f8fa155ac740eeb42e20b60d764"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "86a2af316e7d7754201b942e275364ac12ea8962ab5bd8d7fb276dc5fbffc8f9a28cae4e4867df6780d9b72524160927c855da5b6078e0b554aa91e31cb9ca1d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "10bdf0caa0802705e706369baf8a3f79d72c0a03a80675a7bbb00be3a45e516424d1ee88efb56f6d5777545ae6e27765c3a8f5e493fc308915638933a1dfee55"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b01781092b1748459e2e4ec178696627bf4ebafebba774ecf018b79a68aeb84917bf0b84bb79d17b743151144cd66b7b33a4b9e52c76c4e112050ff5385b7f0b"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c6dbc61dec6eaeac81e3d5f755203c8e220551534a0b2fd105a91889945a638550204f44093dd998c076205dffad703a0e5cd3c7f438a7e634cd59fededb539e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "eba51acffb4cea31db4b8d87e9bf7dd48fe97b0253ae67aa580f9ac4a9d941f2bea518ee286818cc9f633f2a3b9fb68e594b48cdd6d515bf1d52ba6c85a203a7"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "86221f3ada52037b72224f105d7999231c5e5534d03da9d9c0a12acb68460cd375daf8e24386286f9668f72326dbf99ba094392437d398e95bb8161d717f8991"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5595e05c13a7ec4dc8f41fb70cb50a71bce17c024ff6de7af618d0cc4e9c32d9570d6d3ea45b86525491030c0d8f2b1836d5778c1ce735c17707df364d054347"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ce0f4f6aca89590a37fe034dd74dd5fa65eb1cbd0a41508aaddc09351a3cea6d18cb2189c54b700c009f4cbf0521c7ea01be61c5ae09cb54f27bc1b44d658c82"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7ee80b06a215a3bca970c77cda8761822bc103d44fa4b33f4d07dcb997e36d55298bceae12241b3fa07fa63be5576068da387b8d5859aeab701369848b176d42"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "940a84b6a84d109aab208c024c6ce9647676ba0aaa11f86dbb7018f9fd2220a6d901a9027f9abcf935372727cbf09ebd61a2a2eeb87653e8ecad1bab85dc8327"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021222324",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "2020b78264a82d9f4151141adba8d44bf20c5ec062eee9b595a11f9e84901bf148f298e0c9f8777dcdbc7cc4670aac356cc2ad8ccb1629f16f6a76bcefbee760"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d1b897b0e075ba68ab572adf9d9c436663e43eb3d8e62d92fc49c9be214e6f27873fe215a65170e6bea902408a25b49506f47babd07cecf7113ec10c5dd31252"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223242526",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b14d0c62abfa469a357177e594c10c194243ed2025ab8aa5ad2fa41ad318e0ff48cd5e60bec07b13634a711d2326e488a985f31e31153399e73088efc86a5c55"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f2021222324252627",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "4169c5cc808d2697dc2a82430dc23e3cd356dc70a94566810502b8d655b39abf9e7f902fe717e0389219859e1945df1af6ada42e4ccda55a197b7100a30c30a1"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "258a4edb113d66c839c8b1c91f15f35ade609f11cd7f8681a4045b9fef7b0b24c82cda06a5f2067b368825e3914e53d6948ede92efd6e8387fa2e537239b5bee"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f20212223242526272829",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "79d2d8696d30f30fb34657761171a11e6c3f1e64cbe7bebee159cb95bfaf812b4f411e2f26d9c421dc2c284a3342d823ec293849e42d1e46b0a4ac1e3c86abaa"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8b9436010dc5dee992ae38aea97f2cd63b946d94fedd2ec9671dcde3bd4ce9564d555c66c15bb2b900df72edb6b891ebcadfeff63c9ea4036a998be7973981e7"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c8f68e696ed28242bf997f5b3b34959508e42d613810f1e2a435c96ed2ff560c7022f361a9234b9837feee90bf47922ee0fd5f8ddf823718d86d1e16c6090071"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b02d3eee4860d5868b2c39ce39bfe81011290564dd678c85e8783f29302dfc1399ba95b6b53cd9ebbf400cca1db0ab67e19a325f2d115812d25d00978ad1bca4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7693ea73af3ac4dad21ca0d8da85b3118a7d1c6024cfaf557699868217bc0c2f44a199bc6c0edd519798ba05bd5b1b4484346a47c2cadf6bf30b785cc88b2baf"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "a0e5c1c0031c02e48b7f09a5e896ee9aef2f17fc9e18e997d7f6cac7ae316422c2b1e77984e5f3a73cb45deed5d3f84600105e6ee38f2d090c7d0442ea34c46d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "41daa6adcfdb69f1440c37b596440165c15ada596813e2e22f060fcd551f24dee8e04ba6890387886ceec4a7a0d7fc6b44506392ec3822c0d8c1acfc7d5aebe8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f30",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "14d4d40d5984d84c5cf7523b7798b254e275a3a8cc0a1bd06ebc0bee726856acc3cbf516ff667cda2058ad5c3412254460a82c92187041363cc77a4dc215e487"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f3031",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d0e7a1e2b9a447fee83e2277e9ff8010c2f375ae12fa7aaa8ca5a6317868a26a367a0b69fbc1cf32a55d34eb370663016f3d2110230eba754028a56f54acf57c"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e771aa8db5a3e043e8178f39a0857ba04a3f18e4aa05743cf8d222b0b095825350ba422f63382a23d92e4149074e816a36c1cd28284d146267940b31f8818ea2"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f30313233",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "feb4fd6f9e87a56bef398b3284d2bda5b5b0e166583a66b61e538457ff0584872c21a32962b9928ffab58de4af2edd4e15d8b35570523207ff4e2a5aa7754caa"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f3031323334",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "462f17bf005fb1c1b9e671779f665209ec2873e3e411f98dabf240a1d5ec3f95ce6796b6fc23fe171903b502023467dec7273ff74879b92967a2a43a5a183d33"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d3338193b64553dbd38d144bea71c5915bb110e2d88180dbc5db364fd6171df317fc7268831b5aef75e4342b2fad8797ba39eddcef80e6ec08159350b1ad696d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f30313233343536",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e1590d585a3d39f7cb599abd479070966409a6846d4377acf4471d065d5db94129cc9be92573b05ed226be1e9b7cb0cabe87918589f80dadd4ef5ef25a93d28e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f3031323334353637",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f8f3726ac5a26cc80132493a6fedcb0e60760c09cfc84cad178175986819665e76842d7b9fedf76dddebf5d3f56faaad4477587af21606d396ae570d8e719af2"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "30186055c07949948183c850e9a756cc09937e247d9d928e869e20bafc3cd9721719d34e04a0899b92c736084550186886efba2e790d8be6ebf040b209c439a4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f30313233343536373839",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f3c4276cb863637712c241c444c5cc1e3554e0fddb174d035819dd83eb700b4ce88df3ab3841ba02085e1a99b4e17310c5341075c0458ba376c95a6818fbb3e2"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "0aa007c4dd9d5832393040a1583c930bca7dc5e77ea53add7e2b3f7c8e231368043520d4a3ef53c969b6bbfd025946f632bd7f765d53c21003b8f983f75e2a6a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "08e9464720533b23a04ec24f7ae8c103145f765387d738777d3d343477fd1c58db052142cab754ea674378e18766c53542f71970171cc4f81694246b717d7564"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d37ff7ad297993e7ec21e0f1b4b5ae719cdc83c5db687527f27516cbffa822888a6810ee5c1ca7bfe3321119be1ab7bfa0a502671c8329494df7ad6f522d440f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "dd9042f6e464dcf86b1262f6accfafbd8cfd902ed3ed89abf78ffa482dbdeeb6969842394c9a1168ae3d481a017842f660002d42447c6b22f7b72f21aae021c9"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "bd965bf31e87d70327536f2a341cebc4768eca275fa05ef98f7f1b71a0351298de006fba73fe6733ed01d75801b4a928e54231b38e38c562b2e33ea1284992fa"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "65676d800617972fbd87e4b9514e1c67402b7a331096d3bfac22f1abb95374abc942f16e9ab0ead33b87c91968a6e509e119ff07787b3ef483e1dcdccf6e3022"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "939fa189699c5d2c81ddd1ffc1fa207c970b6a3685bb29ce1d3e99d42f2f7442da53e95a72907314f4588399a3ff5b0a92beb3f6be2694f9f86ecf2952d5b41c"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f4041",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c516541701863f91005f314108ceece3c643e04fc8c42fd2ff556220e616aaa6a48aeb97a84bad74782e8dff96a1a2fa949339d722edcaa32b57067041df88cc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "987fd6e0d6857c553eaebb3d34970a2c2f6e89a3548f492521722b80a1c21a153892346d2cba6444212d56da9a26e324dccbc0dcde85d4d2ee4399eec5a64e8f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40414243",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ae56deb1c2328d9c4017706bce6e99d41349053ba9d336d677c4c27d9fd50ae6aee17e853154e1f4fe7672346da2eaa31eea53fcf24a22804f11d03da6abfc2b"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f4041424344",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "49d6a608c9bde4491870498572ac31aac3fa40938b38a7818f72383eb040ad39532bc06571e13d767e6945ab77c0bdc3b0284253343f9f6c1244ebf2ff0df866"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "da582ad8c5370b4469af862aa6467a2293b2b28bd80ae0e91f425ad3d47249fdf98825cc86f14028c3308c9804c78bfeeeee461444ce243687e1a50522456a1d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40414243444546",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d5266aa3331194aef852eed86d7b5b2633a0af1c735906f2e13279f14931a9fc3b0eac5ce9245273bd1aa92905abe16278ef7efd47694789a7283b77da3c70f8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f4041424344454647",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "2962734c28252186a9a1111c732ad4de4506d4b4480916303eb7991d659ccda07a9911914bc75c418ab7a4541757ad054796e26797feaf36e9f6ad43f14b35a4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e8b79ec5d06e111bdfafd71e9f5760f00ac8ac5d8bf768f9ff6f08b8f026096b1cc3a4c973333019f1e3553e77da3f98cb9f542e0a90e5f8a940cc58e59844b3"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f40414243444546474849",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "dfb320c44f9d41d1efdcc015f08dd5539e526e39c87d509ae6812a969e5431bf4fa7d91ffd03b981e0d544cf72d7b1c0374f8801482e6dea2ef903877eba675e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d88675118fdb55a5fb365ac2af1d217bf526ce1ee9c94b2f0090b2c58a06ca58187d7fe57c7bed9d26fca067b4110eefcd9a0a345de872abe20de368001b0745"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b893f2fc41f7b0dd6e2f6aa2e0370c0cff7df09e3acfcc0e920b6e6fad0ef747c40668417d342b80d2351e8c175f20897a062e9765e6c67b539b6ba8b9170545"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "6c67ec5697accd235c59b486d7b70baeedcbd4aa64ebd4eef3c7eac189561a726250aec4d48cadcafbbe2ce3c16ce2d691a8cce06e8879556d4483ed7165c063"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f1aa2b044f8f0c638a3f362e677b5d891d6fd2ab0765f6ee1e4987de057ead357883d9b405b9d609eea1b869d97fb16d9b51017c553f3b93c0a1e0f1296fedcd"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "cbaa259572d4aebfc1917acddc582b9f8dfaa928a198ca7acd0f2aa76a134a90252e6298a65b08186a350d5b7626699f8cb721a3ea5921b753ae3a2dce24ba3a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "fa1549c9796cd4d303dcf452c1fbd5744fd9b9b47003d920b92de34839d07ef2a29ded68f6fc9e6c45e071a2e48bd50c5084e96b657dd0404045a1ddefe282ed"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f50",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5cf2ac897ab444dcb5c8d87c495dbdb34e1838b6b629427caa51702ad0f9688525f13bec503a3c3a2c80a65e0b5715e8afab00ffa56ec455a49a1ad30aa24fcd"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f5051",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "9aaf80207bace17bb7ab145757d5696bde32406ef22b44292ef65d4519c3bb2ad41a59b62cc3e94b6fa96d32a7faadae28af7d35097219aa3fd8cda31e40c275"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "af88b163402c86745cb650c2988fb95211b94b03ef290eed9662034241fd51cf398f8073e369354c43eae1052f9b63b08191caa138aa54fea889cc7024236897"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f50515253",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "48fa7d64e1ceee27b9864db5ada4b53d00c9bc7626555813d3cd6730ab3cc06ff342d727905e33171bde6e8476e77fb1720861e94b73a2c538d254746285f430"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f5051525354",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "0e6fd97a85e904f87bfe85bbeb34f69e1f18105cf4ed4f87aec36c6e8b5f68bd2a6f3dc8a9ecb2b61db4eedb6b2ea10bf9cb0251fb0f8b344abf7f366b6de5ab"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "06622da5787176287fdc8fed440bad187d830099c94e6d04c8e9c954cda70c8bb9e1fc4a6d0baa831b9b78ef6648681a4867a11da93ee36e5e6a37d87fc63f6f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f50515253545556",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "1da6772b58fabf9c61f68d412c82f182c0236d7d575ef0b58dd22458d643cd1dfc93b03871c316d8430d312995d4197f0874c99172ba004a01ee295abac24e46"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f5051525354555657",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3cd2d9320b7b1d5fb9aab951a76023fa667be14a9124e394513918a3f44096ae4904ba0ffc150b63bc7ab1eeb9a6e257e5c8f000a70394a5afd842715de15f29"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "04cdc14f7434e0b4be70cb41db4c779a88eaef6accebcb41f2d42fffe7f32a8e281b5c103a27021d0d08362250753cdf70292195a53a48728ceb5844c2d98bab"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f50515253545556575859",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "9071b7a8a075d0095b8fb3ae5113785735ab98e2b52faf91d5b89e44aac5b5d4ebbf91223b0ff4c71905da55342e64655d6ef8c89a4768c3f93a6dc0366b5bc8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ebb30240dd96c7bc8d0abe49aa4edcbb4afdc51ff9aaf720d3f9e7fbb0f9c6d6571350501769fc4ebd0b2141247ff400d4fd4be414edf37757bb90a32ac5c65a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8532c58bf3c8015d9d1cbe00eef1f5082f8f3632fbe9f1ed4f9dfb1fa79e8283066d77c44c4af943d76b300364aecbd0648c8a8939bd204123f4b56260422dec"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "fe9846d64f7c7708696f840e2d76cb4408b6595c2f81ec6a28a7f2f20cb88cfe6ac0b9e9b8244f08bd7095c350c1d0842f64fb01bb7f532dfcd47371b0aeeb79"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "28f17ea6fb6c42092dc264257e29746321fb5bdaea9873c2a7fa9d8f53818e899e161bc77dfe8090afd82bf2266c5c1bc930a8d1547624439e662ef695f26f24"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ec6b7d7f030d4850acae3cb615c21dd25206d63e84d1db8d957370737ba0e98467ea0ce274c66199901eaec18a08525715f53bfdb0aacb613d342ebdceeddc3b"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b403d3691c03b0d3418df327d5860d34bbfcc4519bfbce36bf33b208385fadb9186bc78a76c489d89fd57e7dc75412d23bcd1dae8470ce9274754bb8585b13c5"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "31fc79738b8772b3f55cd8178813b3b52d0db5a419d30ba9495c4b9da0219fac6df8e7c23a811551a62b827f256ecdb8124ac8a6792ccfecc3b3012722e94463"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "bb2039ec287091bcc9642fc90049e73732e02e577e2862b32216ae9bedcd730c4c284ef3968c368b7d37584f97bd4b4dc6ef6127acfe2e6ae2509124e66c8af4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f53d68d13f45edfcb9bd415e2831e938350d5380d3432278fc1c0c381fcb7c65c82dafe051d8c8b0d44e0974a0e59ec7bf7ed0459f86e96f329fc79752510fd3"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8d568c7984f0ecdf7640fbc483b5d8c9f86634f6f43291841b309a350ab9c1137d24066b09da9944bac54d5bb6580d836047aac74ab724b887ebf93d4b32eca9"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c0b65ce5a96ff774c456cac3b5f2c4cd359b4ff53ef93a3da0778be4900d1e8da1601e769e8f1b02d2a2f8c5b9fa10b44f1c186985468feeb008730283a6657d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "4900bba6f5fb103ece8ec96ada13a5c3c85488e05551da6b6b33d988e611ec0fe2e3c2aa48ea6ae8986a3a231b223c5d27cec2eadde91ce07981ee652862d1e4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263646566",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c7f5c37c7285f927f76443414d4357ff789647d7a005a5a787e03c346b57f49f21b64fa9cf4b7e45573e23049017567121a9c3d4b2b73ec5e9413577525db45a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f6061626364656667",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ec7096330736fdb2d64b5653e7475da746c23a4613a82687a28062d3236364284ac01720ffb406cfe265c0df626a188c9e5963ace5d3d5bb363e32c38c2190a6"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "82e744c75f4649ec52b80771a77d475a3bc091989556960e276a5f9ead92a03f718742cdcfeaee5cb85c44af198adc43a4a428f5f0c2ddb0be36059f06d7df73"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f60616263646566676869",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "2834b7a7170f1f5b68559ab78c1050ec21c919740b784a9072f6e5d69f828d70c919c5039fb148e39e2c8a52118378b064ca8d5001cd10a5478387b966715ed6"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "16b4ada883f72f853bb7ef253efcab0c3e2161687ad61543a0d2824f91c1f81347d86be709b16996e17f2dd486927b0288ad38d13063c4a9672c39397d3789b6"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "78d048f3a69d8b54ae0ed63a573ae350d89f7c6cf1f3688930de899afa037697629b314e5cd303aa62feea72a25bf42b304b6c6bcb27fae21c16d925e1fbdac3"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "0f746a48749287ada77a82961f05a4da4abdb7d77b1220f836d09ec814359c0ec0239b8c7b9ff9e02f569d1b301ef67c4612d1de4f730f81c12c40cc063c5caa"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f0fc859d3bd195fbdc2d591e4cdac15179ec0f1dc821c11df1f0c1d26e6260aaa65b79fafacafd7d3ad61e600f250905f5878c87452897647a35b995bcadc3a3"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "2620f687e8625f6a412460b42e2cef67634208ce10a0cbd4dff7044a41b7880077e9f8dc3b8d1216d3376a21e015b58fb279b521d83f9388c7382c8505590b9b"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "227e3aed8d2cb10b918fcb04f9de3e6d0a57e08476d93759cd7b2ed54a1cbf0239c528fb04bbf288253e601d3bc38b21794afef90b17094a182cac557745e75f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "1a929901b09c25f27d6b35be7b2f1c4745131fdebca7f3e2451926720434e0db6e74fd693ad29b777dc3355c592a361c4873b01133a57c2e3b7075cbdb86f4fc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f7071",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5fd7968bc2fe34f220b5e3dc5af9571742d73b7d60819f2888b629072b96a9d8ab2d91b82d0a9aaba61bbd39958132fcc4257023d1eca591b3054e2dc81c8200"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "dfcce8cf32870cc6a503eadafc87fd6f78918b9b4d0737db6810be996b5497e7e5cc80e312f61e71ff3e9624436073156403f735f56b0b01845c18f6caf772e6"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70717273",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "02f7ef3a9ce0fff960f67032b296efca3061f4934d690749f2d01c35c81c14f39a67fa350bc8a0359bf1724bffc3bca6d7c7bba4791fd522a3ad353c02ec5aa8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f7071727374",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "64be5c6aba65d594844ae78bb022e5bebe127fd6b6ffa5a13703855ab63b624dcd1a363f99203f632ec386f3ea767fc992e8ed9686586aa27555a8599d5b808f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f78585505c4eaa54a8b5be70a61e735e0ff97af944ddb3001e35d86c4e2199d976104b6ae31750a36a726ed285064f5981b503889fef822fcdc2898dddb7889a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70717273747576",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e4b5566033869572edfd87479a5bb73c80e8759b91232879d96b1dda36c012076ee5a2ed7ae2de63ef8406a06aea82c188031b560beafb583fb3de9e57952a7e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f7071727374757677",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e1b3e7ed867f6c9484a2a97f7715f25e25294e992e41f6a7c161ffc2adc6daaeb7113102d5e6090287fe6ad94ce5d6b739c6ca240b05c76fb73f25dd024bf935"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "85fd085fdc12a080983df07bd7012b0d402a0f4043fcb2775adf0bad174f9b08d1676e476985785c0a5dcc41dbff6d95ef4d66a3fbdc4a74b82ba52da0512b74"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f70717273747576777879",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "aed8fa764b0fbff821e05233d2f7b0900ec44d826f95e93c343c1bc3ba5a24374b1d616e7e7aba453a0ada5e4fab5382409e0d42ce9c2bc7fb39a99c340c20f0"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7ba3b2e297233522eeb343bd3ebcfd835a04007735e87f0ca300cbee6d416565162171581e4020ff4cf176450f1291ea2285cb9ebffe4c56660627685145051c"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "de748bcf89ec88084721e16b85f30adb1a6134d664b5843569babc5bbd1a15ca9b61803c901a4fef32965a1749c9f3a4e243e173939dc5a8dc495c671ab52145"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "aaf4d2bdf200a919706d9842dce16c98140d34bc433df320aba9bd429e549aa7a3397652a4d768277786cf993cde2338673ed2e6b66c961fefb82cd20c93338f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c408218968b788bf864f0997e6bc4c3dba68b276e2125a4843296052ff93bf5767b8cdce7131f0876430c1165fec6c4f47adaa4fd8bcfacef463b5d3d0fa61a0"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "76d2d819c92bce55fa8e092ab1bf9b9eab237a25267986cacf2b8ee14d214d730dc9a5aa2d7b596e86a1fd8fa0804c77402d2fcd45083688b218b1cdfa0dcbcb"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "72065ee4dd91c2d8509fa1fc28a37c7fc9fa7d5b3f8ad3d0d7a25626b57b1b44788d4caf806290425f9890a3a2a35a905ab4b37acfd0da6e4517b2525c9651e4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f80",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "64475dfe7600d7171bea0b394e27c9b00d8e74dd1e416a79473682ad3dfdbb706631558055cfc8a40e07bd015a4540dcdea15883cbbf31412df1de1cd4152b91"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f8081",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "12cd1674a4488a5d7c2b3160d2e2c4b58371bedad793418d6f19c6ee385d70b3e06739369d4df910edb0b0a54cbff43d54544cd37ab3a06cfa0a3ddac8b66c89"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "60756966479dedc6dd4bcff8ea7d1d4ce4d4af2e7b097e32e3763518441147cc12b3c0ee6d2ecabf1198cec92e86a3616fba4f4e872f5825330adbb4c1dee444"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f80818283",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "a7803bcb71bc1d0f4383dde1e0612e04f872b715ad30815c2249cf34abb8b024915cb2fc9f4e7cc4c8cfd45be2d5a91eab0941c7d270e2da4ca4a9f7ac68663a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f8081828384",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b84ef6a7229a34a750d9a98ee2529871816b87fbe3bc45b45fa5ae82d5141540211165c3c5d7a7476ba5a4aa06d66476f0d9dc49a3f1ee72c3acabd498967414"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "fae4b6d8efc3f8c8e64d001dabec3a21f544e82714745251b2b4b393f2f43e0da3d403c64db95a2cb6e23ebb7b9e94cdd5ddac54f07c4a61bd3cb10aa6f93b49"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f80818283848586",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "34f7286605a122369540141ded79b8957255da2d4155abbf5a8dbb89c8eb7ede8eeef1daa46dc29d751d045dc3b1d658bb64b80ff8589eddb3824b13da235a6b"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f8081828384858687",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3b3b48434be27b9eababba43bf6b35f14b30f6a88dc2e750c358470d6b3aa3c18e47db4017fa55106d8252f016371a00f5f8b070b74ba5f23cffc5511c9f09f0"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ba289ebd6562c48c3e10a8ad6ce02e73433d1e93d7c9279d4d60a7e879ee11f441a000f48ed9f7c4ed87a45136d7dccdca482109c78a51062b3ba4044ada2469"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f80818283848586878889",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "022939e2386c5a37049856c850a2bb10a13dfea4212b4c732a8840a9ffa5faf54875c5448816b2785a007da8a8d2bc7d71a54e4e6571f10b600cbdb25d13ede3"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e6fec19d89ce8717b1a087024670fe026f6c7cbda11caef959bb2d351bf856f8055d1c0ebdaaa9d1b17886fc2c562b5e99642fc064710c0d3488a02b5ed7f6fd"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "94c96f02a8f576aca32ba61c2b206f907285d9299b83ac175c209a8d43d53bfe683dd1d83e7549cb906c28f59ab7c46f8751366a28c39dd5fe2693c9019666c8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "31a0cd215ebd2cb61de5b9edc91e6195e31c59a5648d5c9f737e125b2605708f2e325ab3381c8dce1a3e958886f1ecdc60318f882cfe20a24191352e617b0f21"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "91ab504a522dce78779f4c6c6ba2e6b6db5565c76d3e7e7c920caf7f757ef9db7c8fcf10e57f03379ea9bf75eb59895d96e149800b6aae01db778bb90afbc989"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d85cabc6bd5b1a01a5afd8c6734740da9fd1c1acc6db29bfc8a2e5b668b028b6b3154bfb8703fa3180251d589ad38040ceb707c4bad1b5343cb426b61eaa49c1"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d62efbec2ca9c1f8bd66ce8b3f6a898cb3f7566ba6568c618ad1feb2b65b76c3ce1dd20f7395372faf28427f61c9278049cf0140df434f5633048c86b81e0399"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f90",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7c8fdc6175439e2c3db15bafa7fb06143a6a23bc90f449e79deef73c3d492a671715c193b6fea9f036050b946069856b897e08c00768f5ee5ddcf70b7cd6d0e0"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f9091",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "58602ee7468e6bc9df21bd51b23c005f72d6cb013f0a1b48cbec5eca299299f97f09f54a9a01483eaeb315a6478bad37ba47ca1347c7c8fc9e6695592c91d723"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "27f5b79ed256b050993d793496edf4807c1d85a7b0a67c9c4fa99860750b0ae66989670a8ffd7856d7ce411599e58c4d77b232a62bef64d15275be46a68235ff"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f90919293",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3957a976b9f1887bf004a8dca942c92d2b37ea52600f25e0c9bc5707d0279c00c6e85a839b0d2d8eb59c51d94788ebe62474a791cadf52cccf20f5070b6573fc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f9091929394",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "eaa2376d55380bf772ecca9cb0aa4668c95c707162fa86d518c8ce0ca9bf7362b9f2a0adc3ff59922df921b94567e81e452f6c1a07fc817cebe99604b3505d38"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c1e2c78b6b2734e2480ec550434cb5d613111adcc21d475545c3b1b7e6ff12444476e5c055132e2229dc0f807044bb919b1a5662dd38a9ee65e243a3911aed1a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f90919293949596",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8ab48713389dd0fcf9f965d3ce66b1e559a1f8c58741d67683cd971354f452e62d0207a65e436c5d5d8f8ee71c6abfe50e669004c302b31a7ea8311d4a916051"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f9091929394959697",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "24ce0addaa4c65038bd1b1c0f1452a0b128777aabc94a29df2fd6c7e2f85f8ab9ac7eff516b0e0a825c84a24cfe492eaad0a6308e46dd42fe8333ab971bb30ca"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5154f929ee03045b6b0c0004fa778edee1d139893267cc84825ad7b36c63de32798e4a166d24686561354f63b00709a1364b3c241de3febf0754045897467cd4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f90919293949596979899",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e74e907920fd87bd5ad636dd11085e50ee70459c443e1ce5809af2bc2eba39f9e6d7128e0e3712c316da06f4705d78a4838e28121d4344a2c79c5e0db307a677"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "bf91a22334bac20f3fd80663b3cd06c4e8802f30e6b59f90d3035cc9798a217ed5a31abbda7fa6842827bdf2a7a1c21f6fcfccbb54c6c52926f32da816269be1"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d9d5c74be5121b0bd742f26bffb8c89f89171f3f934913492b0903c271bbe2b3395ef259669bef43b57f7fcc3027db01823f6baee66e4f9fead4d6726c741fce"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "50c8b8cf34cd879f80e2faab3230b0c0e1cc3e9dcadeb1b9d97ab923415dd9a1fe38addd5c11756c67990b256e95ad6d8f9fedce10bf1c90679cde0ecf1be347"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "0a386e7cd5dd9b77a035e09fe6fee2c8ce61b5383c87ea43205059c5e4cd4f4408319bb0a82360f6a58e6c9ce3f487c446063bf813bc6ba535e17fc1826cfc91"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "1f1459cb6b61cbac5f0efe8fc487538f42548987fcd56221cfa7beb22504769e792c45adfb1d6b3d60d7b749c8a75b0bdf14e8ea721b95dca538ca6e25711209"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9f",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e58b3836b7d8fedbb50ca5725c6571e74c0785e97821dab8b6298c10e4c079d4a6cdf22f0fedb55032925c16748115f01a105e77e00cee3d07924dc0d8f90659"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b929cc6505f020158672deda56d0db081a2ee34c00c1100029bdf8ea98034fa4bf3e8655ec697fe36f40553c5bb46801644a627d3342f4fc92b61f03290fb381"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "72d353994b49d3e03153929a1e4d4f188ee58ab9e72ee8e512f29bc773913819ce057ddd7002c0433ee0a16114e3d156dd2c4a7e80ee53378b8670f23e33ef56"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c70ef9bfd775d408176737a0736d68517ce1aaad7e81a93c8c1ed967ea214f56c8a377b1763e676615b60f3988241eae6eab9685a5124929d28188f29eab06f7"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c230f0802679cb33822ef8b3b21bf7a9a28942092901d7dac3760300831026cf354c9232df3e084d9903130c601f63c1f4a4a4b8106e468cd443bbe5a734f45f"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "6f43094cafb5ebf1f7a4937ec50f56a4c9da303cbb55ac1f27f1f1976cd96beda9464f0e7b9c54620b8a9fba983164b8be3578425a024f5fe199c36356b88972"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3745273f4c38225db2337381871a0c6aafd3af9b018c88aa02025850a5dc3a42a1a3e03e56cbf1b0876d63a441f1d2856a39b8801eb5af325201c415d65e97fe"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c50c44cca3ec3edaae779a7e179450ebdda2f97067c690aa6c5a4ac7c30139bb27c0df4db3220e63cb110d64f37ffe078db72653e2daacf93ae3f0a2d1a7eb2e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8aef263e385cbc61e19b28914243262af5afe8726af3ce39a79c27028cf3ecd3f8d2dfd9cfc9ad91b58f6f20778fd5f02894a3d91c7d57d1e4b866a7f364b6be"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "28696141de6e2d9bcb3235578a66166c1448d3e905a1b482d423be4bc5369bc8c74dae0acc9cc123e1d8ddce9f97917e8c019c552da32d39d2219b9abf0fa8c8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "2fb9eb2085830181903a9dafe3db428ee15be7662224efd643371fb25646aee716e531eca69b2bdc8233f1a8081fa43da1500302975a77f42fa592136710e9dc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aa",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "66f9a7143f7a3314a669bf2e24bbb35014261d639f495b6c9c1f104fe8e320aca60d4550d69d52edbd5a3cdeb4014ae65b1d87aa770b69ae5c15f4330b0b0ad8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaab",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f4c4dd1d594c3565e3e25ca43dad82f62abea4835ed4cd811bcd975e46279828d44d4c62c3679f1b7f7b9dd4571d7b49557347b8c5460cbdc1bef690fb2a08c0"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabac",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8f1dc9649c3a84551f8f6e91cac68242a43b1f8f328ee92280257387fa7559aa6db12e4aeadc2d26099178749c6864b357f3f83b2fb3efa8d2a8db056bed6bcc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacad",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3139c1a7f97afd1675d460ebbc07f2728aa150df849624511ee04b743ba0a833092f18c12dc91b4dd243f333402f59fe28abdbbbae301e7b659c7a26d5c0f979"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadae",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "06f94a2996158a819fe34c40de3cf0379fd9fb85b3e363ba3926a0e7d960e3f4c2e0c70c7ce0ccb2a64fc29869f6e7ab12bd4d3f14fce943279027e785fb5c29"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeaf",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c29c399ef3eee8961e87565c1ce263925fc3d0ce267d13e48dd9e732ee67b0f69fad56401b0f10fcaac119201046cca28c5b14abdea3212ae65562f7f138db3d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "4cec4c9df52eef05c3f6faaa9791bc7445937183224ecc37a1e58d0132d35617531d7e795f52af7b1eb9d147de1292d345fe341823f8e6bc1e5badca5c656108"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "898bfbae93b3e18d00697eab7d9704fa36ec339d076131cefdf30edbe8d9cc81c3a80b129659b163a323bab9793d4feed92d54dae966c77529764a09be88db45"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ee9bd0469d3aaf4f14035be48a2c3b84d9b4b1fff1d945e1f1c1d38980a951be197b25fe22c731f20aeacc930ba9c4a1f4762227617ad350fdabb4e80273a0f4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3d4d3113300581cd96acbf091c3d0f3c310138cd6979e6026cde623e2dd1b24d4a8638bed1073344783ad0649cc6305ccec04beb49f31c633088a99b65130267"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "95c0591ad91f921ac7be6d9ce37e0663ed8011c1cfd6d0162a5572e94368bac02024485e6a39854aa46fe38e97d6c6b1947cd272d86b06bb5b2f78b9b68d559d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "227b79ded368153bf46c0a3ca978bfdbef31f3024a5665842468490b0ff748ae04e7832ed4c9f49de9b1706709d623e5c8c15e3caecae8d5e433430ff72f20eb"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5d34f3952f0105eef88ae8b64c6ce95ebfade0e02c69b08762a8712d2e4911ad3f941fc4034dc9b2e479fdbcd279b902faf5d838bb2e0c6495d372b5b7029813"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7f939bf8353abce49e77f14f3750af20b7b03902e1a1e7fb6aaf76d0259cd401a83190f15640e74f3e6c5a90e839c7821f6474757f75c7bf9002084ddc7a62dc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "062b61a2f9a33a71d7d0a06119644c70b0716a504de7e5e1be49bd7b86e7ed6817714f9f0fc313d06129597e9a2235ec8521de36f7290a90ccfc1ffa6d0aee29"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f29e01eeae64311eb7f1c6422f946bf7bea36379523e7b2bbaba7d1d34a22d5ea5f1c5a09d5ce1fe682cced9a4798d1a05b46cd72dff5c1b355440b2a2d476bc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9ba",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ec38cd3bbab3ef35d7cb6d5c914298351d8a9dc97fcee051a8a02f58e3ed6184d0b7810a5615411ab1b95209c3c810114fdeb22452084e77f3f847c6dbaafe16"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babb",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c2aef5e0ca43e82641565b8cb943aa8ba53550caef793b6532fafad94b816082f0113a3ea2f63608ab40437ecc0f0229cb8fa224dcf1c478a67d9b64162b92d1"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbc",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "15f534efff7105cd1c254d074e27d5898b89313b7d366dc2d7d87113fa7d53aae13f6dba487ad8103d5e854c91fdb6e1e74b2ef6d1431769c30767dde067a35c"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbd",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "89acbca0b169897a0a2714c2df8c95b5b79cb69390142b7d6018bb3e3076b099b79a964152a9d912b1b86412b7e372e9cecad7f25d4cbab8a317be36492a67d7"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbe",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e3c0739190ed849c9c962fd9dbb55e207e624fcac1eb417691515499eea8d8267b7e8f1287a63633af5011fde8c4ddf55bfdf722edf88831414f2cfaed59cb9a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebf",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8d6cf87c08380d2d1506eee46fd4222d21d8c04e585fbfd08269c98f702833a156326a0724656400ee09351d57b440175e2a5de93cc5f80db6daf83576cf75fa"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "da24bede383666d563eeed37f6319baf20d5c75d1635a6ba5ef4cfa1ac95487e96f8c08af600aab87c986ebad49fc70a58b4890b9c876e091016daf49e1d322e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f9d1d1b1e87ea7ae753a029750cc1cf3d0157d41805e245c5617bb934e732f0ae3180b78e05bfe76c7c3051e3e3ac78b9b50c05142657e1e03215d6ec7bfd0fc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "11b7bc1668032048aa43343de476395e814bbbc223678db951a1b03a021efac948cfbe215f97fe9a72a2f6bc039e3956bfa417c1a9f10d6d7ba5d3d32ff323e5"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b8d9000e4fc2b066edb91afee8e7eb0f24e3a201db8b6793c0608581e628ed0bcc4e5aa6787992a4bcc44e288093e63ee83abd0bc3ec6d0934a674a4da13838a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ce325e294f9b6719d6b61278276ae06a2564c03bb0b783fafe785bdf89c7d5acd83e78756d301b445699024eaeb77b54d477336ec2a4f332f2b3f88765ddb0c3"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "29acc30e9603ae2fccf90bf97e6cc463ebe28c1b2f9b4b765e70537c25c702a29dcbfbf14c99c54345ba2b51f17b77b5f15db92bbad8fa95c471f5d070a137cc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3379cbaae562a87b4c0425550ffdd6bfe1203f0d666cc7ea095be407a5dfe61ee91441cd5154b3e53b4f5fb31ad4c7a9ad5c7af4ae679aa51a54003a54ca6b2d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3095a349d245708c7cf550118703d7302c27b60af5d4e67fc978f8a4e60953c7a04f92fcf41aee64321ccb707a895851552b1e37b00bc5e6b72fa5bcef9e3fff"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "07262d738b09321f4dbccec4bb26f48cb0f0ed246ce0b31b9a6e7bc683049f1f3e5545f28ce932dd985c5ab0f43bd6de0770560af329065ed2e49d34624c2cbb"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b6405eca8ee3316c87061cc6ec18dba53e6c250c63ba1f3bae9e55dd3498036af08cd272aa24d713c6020d77ab2f3919af1a32f307420618ab97e73953994fb4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9ca",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "7ee682f63148ee45f6e5315da81e5c6e557c2c34641fc509c7a5701088c38a74756168e2cd8d351e88fd1a451f360a01f5b2580f9b5a2e8cfc138f3dd59a3ffc"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacb",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "1d263c179d6b268f6fa016f3a4f29e943891125ed8593c81256059f5a7b44af2dcb2030d175c00e62ecaf7ee96682aa07ab20a611024a28532b1c25b86657902"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcc",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "106d132cbdb4cd2597812846e2bc1bf732fec5f0a5f65dbb39ec4e6dc64ab2ce6d24630d0f15a805c3540025d84afa98e36703c3dbee713e72dde8465bc1be7e"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccd",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "0e79968226650667a8d862ea8da4891af56a4e3a8b6d1750e394f0dea76d640d85077bcec2cc86886e506751b4f6a5838f7f0b5fef765d9dc90dcdcbaf079f08"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdce",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "521156a82ab0c4e566e5844d5e31ad9aaf144bbd5a464fdca34dbd5717e8ff711d3ffebbfa085d67fe996a34f6d3e4e60b1396bf4b1610c263bdbb834d560816"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecf",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "1aba88befc55bc25efbce02db8b9933e46f57661baeabeb21cc2574d2a518a3cba5dc5a38e49713440b25f9c744e75f6b85c9d8f4681f676160f6105357b8406"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5a9949fcb2c473cda968ac1b5d08566dc2d816d960f57e63b898fa701cf8ebd3f59b124d95bfbbedc5f1cf0e17d5eaed0c02c50b69d8a402cabcca4433b51fd4"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b0cead09807c672af2eb2b0f06dde46cf5370e15a4096b1a7d7cbb36ec31c205fbefca00b7a4162fa89fb4fb3eb78d79770c23f44e7206664ce3cd931c291e5d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "bb6664931ec97044e45b2ae420ae1c551a8874bc937d08e969399c3964ebdba8346cdd5d09caafe4c28ba7ec788191ceca65ddd6f95f18583e040d0f30d0364d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "65bc770a5faa3792369803683e844b0be7ee96f29f6d6a35568006bd5590f9a4ef639b7a8061c7b0424b66b60ac34af3119905f33a9d8c3ae18382ca9b689900"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "ea9b4dca333336aaf839a45c6eaa48b8cb4c7ddabffea4f643d6357ea6628a480a5b45f2b052c1b07d1fedca918b6f1139d80f74c24510dcbaa4be70eacc1b06"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "e6342fb4a780ad975d0e24bce149989b91d360557e87994f6b457b895575cc02d0c15bad3ce7577f4c63927ff13f3e381ff7e72bdbe745324844a9d27e3f1c01"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3e209c9b33e8e461178ab46b1c64b49a07fb745f1c8bc95fbfb94c6b87c69516651b264ef980937fad41238b91ddc011a5dd777c7efd4494b4b6ecd3a9c22ac0"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "fd6a3d5b1875d80486d6e69694a56dbb04a99a4d051f15db2689776ba1c4882e6d462a603b7015dc9f4b7450f05394303b8652cfb404a266962c41bae6e18a94"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "951e27517e6bad9e4195fc8671dee3e7e9be69cee1422cb9fecfce0dba875f7b310b93ee3a3d558f941f635f668ff832d2c1d033c5e2f0997e4c66f147344e02"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8eba2f874f1ae84041903c7c4253c82292530fc8509550bfdc34c95c7e2889d5650b0ad8cb988e5c4894cb87fbfbb19612ea93ccc4c5cad17158b9763464b492"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9da",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "16f712eaa1b7c6354719a8e7dbdfaf55e4063a4d277d947550019b38dfb564830911057d50506136e2394c3b28945cc964967d54e3000c2181626cfb9b73efd2"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadb",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c39639e7d5c7fb8cdd0fd3e6a52096039437122f21c78f1679cea9d78a734c56ecbeb28654b4f18e342c331f6f7229ec4b4bc281b2d80a6eb50043f31796c88c"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdc",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "72d081af99f8a173dcc9a0ac4eb3557405639a29084b54a40172912a2f8a395129d5536f0918e902f9e8fa6000995f4168ddc5f893011be6a0dbc9b8a1a3f5bb"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdd",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c11aa81e5efd24d5fc27ee586cfd8847fbb0e27601ccece5ecca0198e3c7765393bb74457c7e7a27eb9170350e1fb53857177506be3e762cc0f14d8c3afe9077"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcddde",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c28f2150b452e6c0c424bcde6f8d72007f9310fed7f2f87de0dbb64f4479d6c1441ba66f44b2accee61609177ed340128b407ecec7c64bbe50d63d22d8627727"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedf",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f63d88122877ec30b8c8b00d22e89000a966426112bd44166e2f525b769ccbe9b286d437a0129130dde1a86c43e04bedb594e671d98283afe64ce331de9828fd"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "348b0532880b88a6614a8d7408c3f913357fbb60e995c60205be9139e74998aede7f4581e42f6b52698f7fa1219708c14498067fd1e09502de83a77dd281150c"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "5133dc8bef725359dff59792d85eaf75b7e1dcd1978b01c35b1b85fcebc63388ad99a17b6346a217dc1a9622ebd122ecf6913c4d31a6b52a695b86af00d741a0"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "2753c4c0e98ecad806e88780ec27fccd0f5c1ab547f9e4bf1659d192c23aa2cc971b58b6802580baef8adc3b776ef7086b2545c2987f348ee3719cdef258c403"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b1663573ce4b9d8caefc865012f3e39714b9898a5da6ce17c25a6a47931a9ddb9bbe98adaa553beed436e89578455416c2a52a525cf2862b8d1d49a2531b7391"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "64f58bd6bfc856f5e873b2a2956ea0eda0d6db0da39c8c7fc67c9f9feefcff3072cdf9e6ea37f69a44f0c61aa0da3693c2db5b54960c0281a088151db42b11e8"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "0764c7be28125d9065c4b98a69d60aede703547c66a12e17e1c618994132f5ef82482c1e3fe3146cc65376cc109f0138ed9a80e49f1f3c7d610d2f2432f20605"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "f748784398a2ff03ebeb07e155e66116a839741a336e32da71ec696001f0ad1b25cd48c69cfca7265eca1dd71904a0ce748ac4124f3571076dfa7116a9cf00e9"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3f0dbc0186bceb6b785ba78d2a2a013c910be157bdaffae81bb6663b1a73722f7f1228795f3ecada87cf6ef0078474af73f31eca0cc200ed975b6893f761cb6d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d4762cd4599876ca75b2b8fe249944dbd27ace741fdab93616cbc6e425460feb51d4e7adcc38180e7fc47c89024a7f56191adb878dfde4ead62223f5a2610efe"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "cd36b3d5b4c91b90fcbba79513cfee1907d8645a162afd0cd4cf4192d4a5f4c892183a8eacdb2b6b6a9d9aa8c11ac1b261b380dbee24ca468f1bfd043c58eefe"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9ea",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "98593452281661a53c48a9d8cd790826c1a1ce567738053d0bee4a91a3d5bd92eefdbabebe3204f2031ca5f781bda99ef5d8ae56e5b04a9e1ecd21b0eb05d3e1"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaeb",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "771f57dd2775ccdab55921d3e8e30ccf484d61fe1c1b9c2ae819d0fb2a12fab9be70c4a7a138da84e8280435daade5bbe66af0836a154f817fb17f3397e725a3"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebec",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "c60897c6f828e21f16fbb5f15b323f87b6c8955eabf1d38061f707f608abdd993fac3070633e286cf8339ce295dd352df4b4b40b2f29da1dd50b3a05d079e6bb"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebeced",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "8210cd2c2d3b135c2cf07fa0d1433cd771f325d075c6469d9c7f1ba0943cd4ab09808cabf4acb9ce5bb88b498929b4b847f681ad2c490d042db2aec94214b06b"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedee",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "1d4edfffd8fd80f7e4107840fa3aa31e32598491e4af7013c197a65b7f36dd3ac4b478456111cd4309d9243510782fa31b7c4c95fa951520d020eb7e5c36e4ef"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeef",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "af8e6e91fab46ce4873e1a50a8ef448cc29121f7f74deef34a71ef89cc00d9274bc6c2454bbb3230d8b2ec94c62b1dec85f3593bfa30ea6f7a44d7c09465a253"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "29fd384ed4906f2d13aa9fe7af905990938bed807f1832454a372ab412eea1f5625a1fcc9ac8343b7c67c5aba6e0b1cc4644654913692c6b39eb9187ceacd3ec"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "a268c7885d9874a51c44dffed8ea53e94f78456e0b2ed99ff5a3924760813826d960a15edbedbb5de5226ba4b074e71b05c55b9756bb79e55c02754c2c7b6c8a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "0cf8545488d56a86817cd7ecb10f7116b7ea530a45b6ea497b6c72c997e09e3d0da8698f46bb006fc977c2cd3d1177463ac9057fdd1662c85d0c126443c10473"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b39614268fdd8781515e2cfebf89b4d5402bab10c226e6344e6b9ae000fb0d6c79cb2f3ec80e80eaeb1980d2f8698916bd2e9f747236655116649cd3ca23a837"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "74bef092fc6f1e5dba3663a3fb003b2a5ba257496536d99f62b9d73f8f9eb3ce9ff3eec709eb883655ec9eb896b9128f2afc89cf7d1ab58a72f4a3bf034d2b4a"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "3a988d38d75611f3ef38b8774980b33e573b6c57bee0469ba5eed9b44f29945e7347967fba2c162e1c3be7f310f2f75ee2381e7bfd6b3f0baea8d95dfb1dafb1"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "58aedfce6f67ddc85a28c992f1c0bd0969f041e66f1ee88020a125cbfcfebcd61709c9c4eba192c15e69f020d462486019fa8dea0cd7a42921a19d2fe546d43d"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "9347bd291473e6b4e368437b8e561e065f649a6d8ada479ad09b1999a8f26b91cf6120fd3bfe014e83f23acfa4c0ad7b3712b2c3c0733270663112ccd9285cd9"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "b32163e7c5dbb5f51fdc11d2eac875efbbcb7e7699090a7e7ff8a8d50795af5d74d9ff98543ef8cdf89ac13d0485278756e0ef00c817745661e1d59fe38e7537"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "1085d78307b1c4b008c57a2e7e5b234658a0a82e4ff1e4aaac72b312fda0fe27d233bc5b10e9cc17fdc7697b540c7d95eb215a19a1a0e20e1abfa126efd568c7"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fa",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "4e5c734c7dde011d83eac2b7347b373594f92d7091b9ca34cb9c6f39bdf5a8d2f134379e16d822f6522170ccf2ddd55c84b9e6c64fc927ac4cf8dfb2a17701f2"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafb",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "695d83bd990a1117b3d0ce06cc888027d12a054c2677fd82f0d4fbfc93575523e7991a5e35a3752e9b70ce62992e268a877744cdd435f5f130869c9a2074b338"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfc",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "a6213743568e3b3158b9184301f3690847554c68457cb40fc9a4b8cfd8d4a118c301a07737aeda0f929c68913c5f51c80394f53bff1c3e83b2e40ca97eba9e15"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfd",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "d444bfa2362a96df213d070e33fa841f51334e4e76866b8139e8af3bb3398be2dfaddcbc56b9146de9f68118dc5829e74b0c28d7711907b121f9161cb92b69a9"
+    },
+    {
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f404142434445464748494a4b4c4d4e4f505152535455565758595a5b5c5d5e5f606162636465666768696a6b6c6d6e6f707172737475767778797a7b7c7d7e7f808182838485868788898a8b8c8d8e8f909192939495969798999a9b9c9d9e9fa0a1a2a3a4a5a6a7a8a9aaabacadaeafb0b1b2b3b4b5b6b7b8b9babbbcbdbebfc0c1c2c3c4c5c6c7c8c9cacbcccdcecfd0d1d2d3d4d5d6d7d8d9dadbdcdddedfe0e1e2e3e4e5e6e7e8e9eaebecedeeeff0f1f2f3f4f5f6f7f8f9fafbfcfdfe",
+        "000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f",
+        "142709d62e28fcccd0af97fad0f8465b971e82201dc51070faa0372aa43e92484be1c1e73ba10906d5d1853db6a4106e0a7bf9800d373d6dee2d46d62ef2a461"
+    }
+};
+
+static int
+tv(void)
+{
+    unsigned char *expected_out;
+    unsigned char *in;
+    unsigned char *key;
+    unsigned char *out;
+    size_t         i = 0U;
+    size_t         in_len;
+
+    key = (unsigned char *) sodium_malloc(crypto_generichash_KEYBYTES_MAX);
+    out = (unsigned char *) sodium_malloc(crypto_generichash_BYTES_MAX);
+    expected_out = (unsigned char *) sodium_malloc(crypto_generichash_BYTES_MAX);
+    do {
+        assert(strlen(tests[i].key_hex) == 2 * crypto_generichash_KEYBYTES_MAX);
+        sodium_hex2bin(key, crypto_generichash_KEYBYTES_MAX,
+                       tests[i].key_hex, strlen(tests[i].key_hex),
+                       NULL, NULL, NULL);
+        assert(strlen(tests[i].out_hex) == 2 * crypto_generichash_BYTES_MAX);
+        sodium_hex2bin(expected_out, crypto_generichash_BYTES_MAX,
+                       tests[i].out_hex, strlen(tests[i].out_hex),
+                       NULL, NULL, NULL);
+        in_len = strlen(tests[i].in_hex) / 2;
+        in = (unsigned char *) sodium_malloc(in_len);
+        sodium_hex2bin(in, in_len, tests[i].in_hex, strlen(tests[i].in_hex),
+                       NULL, NULL, NULL);
+        crypto_generichash(out, crypto_generichash_BYTES_MAX,
+                           in, (unsigned long long) in_len,
+                           key, crypto_generichash_KEYBYTES_MAX);
+        if (memcmp(out, expected_out, crypto_generichash_BYTES_MAX) != 0) {
+            printf("Test vector #%u failed\n", (unsigned int) i);
+        }
+        sodium_free(in);
+    } while (++i < (sizeof tests) / (sizeof tests[0]));
+    sodium_free(key);
+    sodium_free(out);
+    sodium_free(expected_out);
+
+    return 0;
+}
+
+int
+main(void)
 {
     unsigned char in[MAXLEN];
     unsigned char out[crypto_generichash_BYTES_MAX];
@@ -13,6 +1342,8 @@ int main(void)
     size_t        i;
     size_t        j;
 
+    tv();
+
     for (h = 0; h < crypto_generichash_KEYBYTES_MAX; ++h) {
         k[h] = (unsigned char) h;
     }
@@ -36,19 +1367,15 @@ int main(void)
     }
     printf("\n");
 
-    memset(out, 0, sizeof out);
-    crypto_generichash(out, crypto_generichash_BYTES_MAX, in,
-                       (unsigned long long) i, NULL, 1U);
-    for (j = 0; j < crypto_generichash_BYTES_MAX; ++j) {
-        printf("%02x", (unsigned int) out[j]);
-    }
-    printf("\n");
-
-    assert(crypto_generichash(out, 0U, in, sizeof in, k, sizeof k) == -1);
-    assert(crypto_generichash(out, crypto_generichash_BYTES_MAX + 1U,
-                              in, sizeof in, k, sizeof k) == -1);
-    assert(crypto_generichash(out, sizeof out, in, sizeof in,
-                              k, crypto_generichash_KEYBYTES_MAX + 1U) == -1);
+    assert(crypto_generichash(guard_page, 0,
+                              in, (unsigned long long) sizeof in,
+                              k, sizeof k) == -1);
+    assert(crypto_generichash(guard_page, crypto_generichash_BYTES_MAX + 1,
+                              in, (unsigned long long) sizeof in,
+                              k, sizeof k) == -1);
+    assert(crypto_generichash(guard_page, (unsigned long long) sizeof in,
+                              in, (unsigned long long) sizeof in,
+                              k, crypto_generichash_KEYBYTES_MAX + 1) == -1);
 
     assert(crypto_generichash_bytes_min() > 0U);
     assert(crypto_generichash_bytes_max() > 0U);
diff --git a/libsodium/test/default/generichash2.c b/libsodium/test/default/generichash2.c
index 1458d48..b7e33e6 100644
--- a/libsodium/test/default/generichash2.c
+++ b/libsodium/test/default/generichash2.c
@@ -2,48 +2,61 @@
 #define TEST_NAME "generichash2"
 #include "cmptest.h"
 
-int main(void)
+int
+main(void)
 {
 #define MAXLEN 64
-    crypto_generichash_state st;
-    unsigned char in[MAXLEN], out[crypto_generichash_BYTES_MAX],
-        k[crypto_generichash_KEYBYTES_MAX];
-    size_t h, i, j;
-
-    assert(crypto_generichash_statebytes() == sizeof st);
-    for (h = 0; h < crypto_generichash_KEYBYTES_MAX; ++h)
-        k[h] = h;
+    crypto_generichash_state *st;
+    unsigned char            in[MAXLEN];
+    unsigned char            out[crypto_generichash_BYTES_MAX];
+    unsigned char            k[crypto_generichash_KEYBYTES_MAX];
+    size_t                   h, i, j;
 
+    assert(crypto_generichash_statebytes() >= sizeof *st);
+    st = (crypto_generichash_state *)
+        sodium_malloc(crypto_generichash_statebytes());
+    for (h = 0; h < crypto_generichash_KEYBYTES_MAX; ++h) {
+        k[h] = (unsigned char) h;
+    }
     for (i = 0; i < MAXLEN; ++i) {
-        in[i] = i;
-        if (crypto_generichash_init(&st, k,
+        in[i] = (unsigned char) i;
+        if (crypto_generichash_init(st, k,
                                     1 + i % crypto_generichash_KEYBYTES_MAX,
                                     1 + i % crypto_generichash_BYTES_MAX) != 0) {
             printf("crypto_generichash_init()\n");
             return 1;
         }
-        crypto_generichash_update(&st, in, i);
-        crypto_generichash_update(&st, in, i);
-        crypto_generichash_update(&st, in, i);
-        crypto_generichash_final(&st, out,
-                                 1 + i % crypto_generichash_BYTES_MAX);
+        crypto_generichash_update(st, in, i);
+        crypto_generichash_update(st, in, i);
+        crypto_generichash_update(st, in, i);
+        if (crypto_generichash_final(st, out,
+                                     1 + i % crypto_generichash_BYTES_MAX) != 0) {
+            printf("crypto_generichash_final() should have returned 0\n");
+        }
         for (j = 0; j < 1 + i % crypto_generichash_BYTES_MAX; ++j) {
-            printf("%02x", (unsigned int)out[j]);
+            printf("%02x", (unsigned int) out[j]);
         }
         printf("\n");
+        if (crypto_generichash_final(st, out,
+                                     1 + i % crypto_generichash_BYTES_MAX) != -1) {
+            printf("crypto_generichash_final() should have returned -1\n");
+        }
     }
 
-    assert(crypto_generichash_init(&st, k, sizeof k, 0U) == -1);
-    assert(crypto_generichash_init(&st, k, sizeof k,
+    assert(crypto_generichash_init(st, k, sizeof k, 0U) == -1);
+    assert(crypto_generichash_init(st, k, sizeof k,
                                    crypto_generichash_BYTES_MAX + 1U) == -1);
-    assert(crypto_generichash_init(&st, k, crypto_generichash_KEYBYTES_MAX + 1U,
+    assert(crypto_generichash_init(st, k, crypto_generichash_KEYBYTES_MAX + 1U,
                                    sizeof out) == -1);
-    assert(crypto_generichash_init(&st, k, 0U, sizeof out) == 0);
-    assert(crypto_generichash_init(&st, k, 1U, sizeof out) == 0);
-    assert(crypto_generichash_init(&st, NULL, 1U, 0U) == -1);
-    assert(crypto_generichash_init(&st, NULL, crypto_generichash_KEYBYTES,
+    assert(crypto_generichash_init(st, k, 0U, sizeof out) == 0);
+    assert(crypto_generichash_init(st, k, 1U, sizeof out) == 0);
+    assert(crypto_generichash_init(st, NULL, 1U, 0U) == -1);
+    assert(crypto_generichash_init(st, NULL, crypto_generichash_KEYBYTES,
                                    1U) == 0);
-    assert(crypto_generichash_init(&st, NULL, crypto_generichash_KEYBYTES,
+    assert(crypto_generichash_init(st, NULL, crypto_generichash_KEYBYTES,
                                    0U) == -1);
+
+    sodium_free(st);
+
     return 0;
 }
diff --git a/libsodium/test/default/generichash3.c b/libsodium/test/default/generichash3.c
index bce21d3..ec86b35 100644
--- a/libsodium/test/default/generichash3.c
+++ b/libsodium/test/default/generichash3.c
@@ -2,7 +2,8 @@
 #define TEST_NAME "generichash3"
 #include "cmptest.h"
 
-int main(void)
+int
+main(void)
 {
 #define MAXLEN 64
     crypto_generichash_blake2b_state st;
@@ -19,6 +20,7 @@ int main(void)
     size_t        i;
     size_t        j;
 
+    assert(crypto_generichash_blake2b_statebytes() >= sizeof st);
     for (h = 0; h < crypto_generichash_blake2b_KEYBYTES_MAX; ++h) {
         k[h] = (unsigned char) h;
     }
@@ -76,8 +78,6 @@ int main(void)
         &st, k, crypto_generichash_blake2b_KEYBYTES_MAX,
         crypto_generichash_blake2b_BYTES_MAX, salt, NULL);
     crypto_generichash_blake2b_update(&st, in, MAXLEN);
-    assert(crypto_generichash_blake2b_final(
-        &st, out, crypto_generichash_blake2b_BYTES_MAX + 1U) == -1);
     crypto_generichash_blake2b_final(
         &st, out, crypto_generichash_blake2b_BYTES_MAX);
     for (j = 0; j < crypto_generichash_blake2b_BYTES_MAX; ++j) {
@@ -97,7 +97,7 @@ int main(void)
     memset(out, 0, sizeof out);
     crypto_generichash_blake2b_salt_personal(
         out, crypto_generichash_blake2b_BYTES_MAX, in, MAXLEN,
-        NULL, crypto_generichash_blake2b_KEYBYTES_MAX, salt, personal);
+        NULL, 0U, salt, personal);
     for (j = 0; j < crypto_generichash_blake2b_BYTES_MAX; ++j) {
         printf("%02x", (unsigned int) out[j]);
     }
@@ -130,6 +130,19 @@ int main(void)
     }
     printf("\n");
 
+    assert(crypto_generichash_blake2b_salt_personal
+           (guard_page, 0,
+            in, (unsigned long long) sizeof in,
+            k, sizeof k, NULL, NULL) == -1);
+    assert(crypto_generichash_blake2b_salt_personal
+           (guard_page, crypto_generichash_BYTES_MAX + 1,
+            in, (unsigned long long) sizeof in,
+            k, sizeof k, NULL, NULL) == -1);
+    assert(crypto_generichash_blake2b_salt_personal
+           (guard_page, (unsigned long long) sizeof in,
+            in, (unsigned long long) sizeof in,
+            k, crypto_generichash_KEYBYTES_MAX + 1, NULL, NULL) == -1);
+
     crypto_generichash_blake2b_init_salt_personal(&st, NULL, 0U, crypto_generichash_BYTES,
                                                   NULL, personal);
     crypto_generichash_blake2b_update(&st, in, MAXLEN);
@@ -148,24 +161,13 @@ int main(void)
     }
     printf("\n");
 
-    assert(crypto_generichash_blake2b_init_salt_personal(&st, k, sizeof k, 0U,
-                                                         salt, personal) == -1);
-    assert(crypto_generichash_blake2b_init_salt_personal(&st, k, sizeof k,
-                                                         crypto_generichash_BYTES_MAX + 1U,
-                                                         salt, personal) == -1);
-    assert(crypto_generichash_blake2b_init_salt_personal(&st, k,
-                                                         crypto_generichash_KEYBYTES_MAX + 1U,
-                                                         sizeof out, salt, personal) == -1);
-
-    assert(crypto_generichash_blake2b_salt_personal(out, 0U, in, MAXLEN,
-                                                    k, sizeof k,
-                                                    salt, personal) == -1);
-    assert(crypto_generichash_blake2b_salt_personal(out, crypto_generichash_BYTES_MAX + 1U,
-                                                    in, MAXLEN, k, sizeof k,
-                                                    salt, personal) == -1);
-    assert(crypto_generichash_blake2b_salt_personal(out, sizeof out, in, MAXLEN,
-                                                    k, crypto_generichash_KEYBYTES_MAX + 1U,
-                                                    salt, personal) == -1);
+    assert(crypto_generichash_blake2b_init_salt_personal
+           (&st, k, sizeof k, 0, NULL, NULL) == -1);
+    assert(crypto_generichash_blake2b_init_salt_personal
+           (&st, k, sizeof k, crypto_generichash_blake2b_BYTES_MAX + 1, NULL, NULL) == -1);
+    assert(crypto_generichash_blake2b_init_salt_personal
+           (&st, k, crypto_generichash_blake2b_KEYBYTES_MAX + 1, sizeof out, NULL, NULL) == -1);
+
     assert(crypto_generichash_blake2b_init_salt_personal(&st, k, sizeof k, crypto_generichash_BYTES,
                                                          NULL, personal) == 0);
     assert(crypto_generichash_blake2b_init_salt_personal(&st, k, sizeof k, crypto_generichash_BYTES,
diff --git a/libsodium/test/default/hash.c b/libsodium/test/default/hash.c
index 00c0723..60d3527 100644
--- a/libsodium/test/default/hash.c
+++ b/libsodium/test/default/hash.c
@@ -2,32 +2,36 @@
 #define TEST_NAME "hash"
 #include "cmptest.h"
 
-unsigned char x[] = "testing\n";
-unsigned char x2[] = "The Conscience of a Hacker is a small essay written January 8, 1986 by a computer security hacker who went by the handle of The Mentor, who belonged to the 2nd generation of Legion of Doom.";
-unsigned char h[crypto_hash_BYTES];
+static unsigned char x[] = "testing\n";
+static unsigned char x2[] =
+    "The Conscience of a Hacker is a small essay written January 8, 1986 by a "
+    "computer security hacker who went by the handle of The Mentor, who "
+    "belonged to the 2nd generation of Legion of Doom.";
+static unsigned char h[crypto_hash_BYTES];
 
-int main(void)
+int
+main(void)
 {
     size_t i;
 
     crypto_hash(h, x, sizeof x - 1U);
     for (i = 0; i < crypto_hash_BYTES; ++i) {
-        printf("%02x", (unsigned int)h[i]);
+        printf("%02x", (unsigned int) h[i]);
     }
     printf("\n");
     crypto_hash(h, x2, sizeof x2 - 1U);
     for (i = 0; i < crypto_hash_BYTES; ++i) {
-        printf("%02x", (unsigned int)h[i]);
+        printf("%02x", (unsigned int) h[i]);
     }
     printf("\n");
     crypto_hash_sha256(h, x, sizeof x - 1U);
     for (i = 0; i < crypto_hash_sha256_BYTES; ++i) {
-        printf("%02x", (unsigned int)h[i]);
+        printf("%02x", (unsigned int) h[i]);
     }
     printf("\n");
     crypto_hash_sha256(h, x2, sizeof x2 - 1U);
     for (i = 0; i < crypto_hash_sha256_BYTES; ++i) {
-        printf("%02x", (unsigned int)h[i]);
+        printf("%02x", (unsigned int) h[i]);
     }
     printf("\n");
 
diff --git a/libsodium/test/default/hash3.c b/libsodium/test/default/hash3.c
index 01df6f0..cfcb989 100644
--- a/libsodium/test/default/hash3.c
+++ b/libsodium/test/default/hash3.c
@@ -2,16 +2,17 @@
 #define TEST_NAME "hash3"
 #include "cmptest.h"
 
-unsigned char x[] = "testing\n";
-unsigned char h[crypto_hash_BYTES];
+static unsigned char x[] = "testing\n";
+static unsigned char h[crypto_hash_BYTES];
 
-int main(void)
+int
+main(void)
 {
     size_t i;
 
     crypto_hash(h, x, sizeof x - 1U);
     for (i = 0; i < crypto_hash_BYTES; ++i) {
-        printf("%02x", (unsigned int)h[i]);
+        printf("%02x", (unsigned int) h[i]);
     }
     printf("\n");
 
diff --git a/libsodium/test/default/onetimeauth.c b/libsodium/test/default/onetimeauth.c
index d92a8b6..7a4931b 100644
--- a/libsodium/test/default/onetimeauth.c
+++ b/libsodium/test/default/onetimeauth.c
@@ -2,35 +2,38 @@
 #define TEST_NAME "onetimeauth"
 #include "cmptest.h"
 
-unsigned char rs[32]
-    = { 0xee, 0xa6, 0xa7, 0x25, 0x1c, 0x1e, 0x72, 0x91, 0x6d, 0x11, 0xc2,
-        0xcb, 0x21, 0x4d, 0x3c, 0x25, 0x25, 0x39, 0x12, 0x1d, 0x8e, 0x23,
-        0x4e, 0x65, 0x2d, 0x65, 0x1f, 0xa4, 0xc8, 0xcf, 0xf8, 0x80 };
-
-unsigned char c[131]
-    = { 0x8e, 0x99, 0x3b, 0x9f, 0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba,
-        0x32, 0xfc, 0x76, 0xce, 0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4,
-        0x47, 0x6f, 0xb8, 0xc5, 0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c,
-        0x98, 0xdc, 0xe8, 0x7b, 0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72,
-        0x71, 0xd2, 0xc2, 0x0f, 0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8,
-        0x63, 0xd5, 0x17, 0x38, 0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a,
-        0xb9, 0x32, 0x16, 0x45, 0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68,
-        0x51, 0x7a, 0xcf, 0xea, 0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda,
-        0x99, 0x83, 0x2b, 0x61, 0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e,
-        0x88, 0xd5, 0xf9, 0xb3, 0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6,
-        0x59, 0x9b, 0x1f, 0x65, 0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5 };
-
-unsigned char a[16];
-
-int main(void)
+static unsigned char rs[32] = {
+    0xee, 0xa6, 0xa7, 0x25, 0x1c, 0x1e, 0x72, 0x91, 0x6d, 0x11, 0xc2,
+    0xcb, 0x21, 0x4d, 0x3c, 0x25, 0x25, 0x39, 0x12, 0x1d, 0x8e, 0x23,
+    0x4e, 0x65, 0x2d, 0x65, 0x1f, 0xa4, 0xc8, 0xcf, 0xf8, 0x80
+};
+
+static unsigned char c[131] = {
+    0x8e, 0x99, 0x3b, 0x9f, 0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba,
+    0x32, 0xfc, 0x76, 0xce, 0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4,
+    0x47, 0x6f, 0xb8, 0xc5, 0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c,
+    0x98, 0xdc, 0xe8, 0x7b, 0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72,
+    0x71, 0xd2, 0xc2, 0x0f, 0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8,
+    0x63, 0xd5, 0x17, 0x38, 0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a,
+    0xb9, 0x32, 0x16, 0x45, 0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68,
+    0x51, 0x7a, 0xcf, 0xea, 0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda,
+    0x99, 0x83, 0x2b, 0x61, 0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e,
+    0x88, 0xd5, 0xf9, 0xb3, 0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6,
+    0x59, 0x9b, 0x1f, 0x65, 0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5
+};
+
+static unsigned char a[16];
+
+int
+main(void)
 {
     crypto_onetimeauth_state st;
-    int i;
+    int                      i;
 
     assert(crypto_onetimeauth_statebytes() == sizeof st);
     crypto_onetimeauth(a, c, 131, rs);
     for (i = 0; i < 16; ++i) {
-        printf(",0x%02x", (unsigned int)a[i]);
+        printf(",0x%02x", (unsigned int) a[i]);
         if (i % 8 == 7)
             printf("\n");
     }
@@ -38,10 +41,11 @@ int main(void)
     memset(a, 0, sizeof a);
     crypto_onetimeauth_init(&st, rs);
     crypto_onetimeauth_update(&st, c, 100);
+    crypto_onetimeauth_update(&st, c, 0);
     crypto_onetimeauth_update(&st, c + 100, 31);
     crypto_onetimeauth_final(&st, a);
     for (i = 0; i < 16; ++i) {
-        printf(",0x%02x", (unsigned int)a[i]);
+        printf(",0x%02x", (unsigned int) a[i]);
         if (i % 8 == 7)
             printf("\n");
     }
@@ -50,8 +54,10 @@ int main(void)
     assert(crypto_onetimeauth_keybytes() > 0U);
     assert(strcmp(crypto_onetimeauth_primitive(), "poly1305") == 0);
     assert(crypto_onetimeauth_poly1305_bytes() == crypto_onetimeauth_bytes());
-    assert(crypto_onetimeauth_poly1305_keybytes()
-           == crypto_onetimeauth_keybytes());
+    assert(crypto_onetimeauth_poly1305_keybytes() ==
+           crypto_onetimeauth_keybytes());
+    assert(crypto_onetimeauth_statebytes() > 0);
+    assert(crypto_onetimeauth_statebytes() == crypto_onetimeauth_poly1305_statebytes());
 
     return 0;
 }
diff --git a/libsodium/test/default/onetimeauth2.c b/libsodium/test/default/onetimeauth2.c
index e33a9fe..e429ce0 100644
--- a/libsodium/test/default/onetimeauth2.c
+++ b/libsodium/test/default/onetimeauth2.c
@@ -2,28 +2,31 @@
 #define TEST_NAME "onetimeauth2"
 #include "cmptest.h"
 
-unsigned char rs[32]
-    = { 0xee, 0xa6, 0xa7, 0x25, 0x1c, 0x1e, 0x72, 0x91, 0x6d, 0x11, 0xc2,
-        0xcb, 0x21, 0x4d, 0x3c, 0x25, 0x25, 0x39, 0x12, 0x1d, 0x8e, 0x23,
-        0x4e, 0x65, 0x2d, 0x65, 0x1f, 0xa4, 0xc8, 0xcf, 0xf8, 0x80 };
+static unsigned char rs[32] = {
+    0xee, 0xa6, 0xa7, 0x25, 0x1c, 0x1e, 0x72, 0x91, 0x6d, 0x11, 0xc2,
+    0xcb, 0x21, 0x4d, 0x3c, 0x25, 0x25, 0x39, 0x12, 0x1d, 0x8e, 0x23,
+    0x4e, 0x65, 0x2d, 0x65, 0x1f, 0xa4, 0xc8, 0xcf, 0xf8, 0x80
+};
 
-unsigned char c[131]
-    = { 0x8e, 0x99, 0x3b, 0x9f, 0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba,
-        0x32, 0xfc, 0x76, 0xce, 0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4,
-        0x47, 0x6f, 0xb8, 0xc5, 0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c,
-        0x98, 0xdc, 0xe8, 0x7b, 0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72,
-        0x71, 0xd2, 0xc2, 0x0f, 0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8,
-        0x63, 0xd5, 0x17, 0x38, 0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a,
-        0xb9, 0x32, 0x16, 0x45, 0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68,
-        0x51, 0x7a, 0xcf, 0xea, 0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda,
-        0x99, 0x83, 0x2b, 0x61, 0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e,
-        0x88, 0xd5, 0xf9, 0xb3, 0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6,
-        0x59, 0x9b, 0x1f, 0x65, 0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5 };
+static unsigned char c[131] = {
+    0x8e, 0x99, 0x3b, 0x9f, 0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba,
+    0x32, 0xfc, 0x76, 0xce, 0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4,
+    0x47, 0x6f, 0xb8, 0xc5, 0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c,
+    0x98, 0xdc, 0xe8, 0x7b, 0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72,
+    0x71, 0xd2, 0xc2, 0x0f, 0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8,
+    0x63, 0xd5, 0x17, 0x38, 0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a,
+    0xb9, 0x32, 0x16, 0x45, 0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68,
+    0x51, 0x7a, 0xcf, 0xea, 0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda,
+    0x99, 0x83, 0x2b, 0x61, 0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e,
+    0x88, 0xd5, 0xf9, 0xb3, 0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6,
+    0x59, 0x9b, 0x1f, 0x65, 0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5
+};
 
-unsigned char a[16] = { 0xf3, 0xff, 0xc7, 0x70, 0x3f, 0x94, 0x00, 0xe5,
-                        0x2a, 0x7d, 0xfb, 0x4b, 0x3d, 0x33, 0x05, 0xd9 };
+static unsigned char a[16] = { 0xf3, 0xff, 0xc7, 0x70, 0x3f, 0x94, 0x00, 0xe5,
+                               0x2a, 0x7d, 0xfb, 0x4b, 0x3d, 0x33, 0x05, 0xd9 };
 
-int main(void)
+int
+main(void)
 {
     printf("%d\n", crypto_onetimeauth_verify(a, c, 131, rs));
     return 0;
diff --git a/libsodium/test/default/onetimeauth7.c b/libsodium/test/default/onetimeauth7.c
index 5468903..7a77339 100644
--- a/libsodium/test/default/onetimeauth7.c
+++ b/libsodium/test/default/onetimeauth7.c
@@ -2,16 +2,17 @@
 #define TEST_NAME "onetimeauth7"
 #include "cmptest.h"
 
-unsigned char key[32];
-unsigned char c[10000];
-unsigned char a[16];
+static unsigned char key[32];
+static unsigned char c[1000];
+static unsigned char a[16];
 
-int main(void)
+int
+main(void)
 {
     int clen;
 
-    for (clen = 0; clen < 10000; ++clen) {
-        randombytes_buf(key, sizeof key);
+    for (clen = 0; clen < 1000; ++clen) {
+        crypto_onetimeauth_keygen(key);
         randombytes_buf(c, clen);
         crypto_onetimeauth(a, c, clen, key);
         if (crypto_onetimeauth_verify(a, c, clen, key) != 0) {
diff --git a/libsodium/test/default/pre.js.inc b/libsodium/test/default/pre.js.inc
old mode 100644
new mode 100755
index 428f475..8b8d589
--- a/libsodium/test/default/pre.js.inc
+++ b/libsodium/test/default/pre.js.inc
@@ -4,9 +4,19 @@ try {
 } catch(e) {
     this['Module'] = Module = {};
 }
-Module['preRun'] = Module['preRun'] || [];
-Module['preRun'].push(function(){
-    FS.init();
-    FS.mkdir('/test-data');
-    FS.mount(NODEFS,  { root: '.' }, '/test-data');
-});
+if (typeof process === 'object') {
+    if (typeof(FS) === 'object') {
+        Module['preRun'] = Module['preRun'] || [];
+        Module['preRun'].push(function() {
+            FS.init();
+            FS.mkdir('/test-data');
+            FS.mount(NODEFS,  { root: '.' }, '/test-data');
+        });
+    }
+} else {
+    Module['print'] = function(x) {
+        var event = new Event('test-output');
+        event.data = x;
+        window.dispatchEvent(event);
+    };
+}
diff --git a/libsodium/test/default/pwhash.c b/libsodium/test/default/pwhash.c
deleted file mode 100644
index 3fa8e7f..0000000
--- a/libsodium/test/default/pwhash.c
+++ /dev/null
@@ -1,349 +0,0 @@
-
-#define TEST_NAME "pwhash"
-#include "cmptest.h"
-
-#define OUT_LEN 128
-#define OPSLIMIT 1000000
-#define MEMLIMIT 10000000
-
-static void tv(void)
-{
-    static struct {
-        const char         *passwd_hex;
-        size_t              passwdlen;
-        const char         *salt_hex;
-        size_t              outlen;
-        unsigned long long  opslimit;
-        size_t              memlimit;
-    } tests[] = {
-          { "a347ae92bce9f80f6f595a4480fc9c2fe7e7d7148d371e9487d75f5c23008ffae0"
-            "65577a928febd9b1973a5a95073acdbeb6a030cfc0d79caa2dc5cd011cef02c08d"
-            "a232d76d52dfbca38ca8dcbd665b17d1665f7cf5fe59772ec909733b24de97d6f5"
-            "8d220b20c60d7c07ec1fd93c52c31020300c6c1facd77937a597c7a6",
-            127,
-            "5541fbc995d5c197ba290346d2c559dedf405cf97e5f95482143202f9e74f5c2",
-            155, 481326, 7256678 },
-          { "e125cee61c8cb7778d9e5ad0a6f5d978ce9f84de213a8556d9ffe202020ab4a6ed"
-            "9074a4eb3416f9b168f137510f3a30b70b96cbfa219ff99f6c6eaffb15c06b60e0"
-            "0cc2890277f0fd3c622115772f7048adaebed86e",
-            86,
-            "f1192dd5dc2368b9cd421338b22433455ee0a3699f9379a08b9650ea2c126f0d",
-            250, 535778, 7849083 },
-          { "92263cbf6ac376499f68a4289d3bb59e5a22335eba63a32e6410249155b956b6a3"
-            "b48d4a44906b18b897127300b375b8f834f1ceffc70880a885f47c33876717e392"
-            "be57f7da3ae58da4fd1f43daa7e44bb82d3717af4319349c24cd31e46d295856b0"
-            "441b6b289992a11ced1cc3bf3011604590244a3eb737ff221129215e4e4347f491"
-            "5d41292b5173d196eb9add693be5319fdadc242906178bb6c0286c9b6ca6012746"
-            "711f58c8c392016b2fdfc09c64f0f6b6ab7b",
-            183,
-            "3b840e20e9555e9fb031c4ba1f1747ce25cc1d0ff664be676b9b4a90641ff194",
-            249, 311757, 7994791 },
-          { "027b6d8e8c8c474e9b69c7d9ed4f9971e8e1ce2f6ba95048414c3970f0f09b70e3"
-            "b6c5ae05872b3d8678705b7d381829c351a5a9c88c233569b35d6b0b809df44b64"
-            "51a9c273f1150e2ef8a0b5437eb701e373474cd44b97ef0248ebce2ca0400e1b53"
-            "f3d86221eca3f18eb45b702b9172440f774a82cbf1f6f525df30a6e293c873cce6"
-            "9bb078ed1f0d31e7f9b8062409f37f19f8550aae",
-            152,
-            "eb2a3056a09ad2d7d7f975bcd707598f24cd32518cde3069f2e403b34bfee8a5",
-            5, 643464, 1397645 },
-          { "4a857e2ee8aa9b6056f2424e84d24a72473378906ee04a46cb05311502d5250b82"
-            "ad86b83c8f20a23dbb74f6da60b0b6ecffd67134d45946ac8ebfb3064294bc097d"
-            "43ced68642bfb8bbbdd0f50b30118f5e",
-            82,
-            "39d82eef32010b8b79cc5ba88ed539fbaba741100f2edbeca7cc171ffeabf258",
-            190, 758010, 5432947 },
-          { "1845e375479537e9dd4f4486d5c91ac72775d66605eeb11a787b78a7745f1fd005"
-            "2d526c67235dbae1b2a4d575a74cb551c8e9096c593a497aee74ba3047d911358e"
-            "de57bc27c9ea1829824348daaab606217cc931dcb6627787bd6e4e5854f0e8",
-            97,
-            "3ee91a805aa62cfbe8dce29a2d9a44373a5006f4a4ce24022aca9cecb29d1473",
-            212, 233177, 13101817 },
-          { "c7b09aec680e7b42fedd7fc792e78b2f6c1bea8f4a884320b648f81e8cf515e8ba"
-            "9dcfb11d43c4aae114c1734aa69ca82d44998365db9c93744fa28b63fd16000e82"
-            "61cbbe083e7e2da1e5f696bde0834fe53146d7e0e35e7de9920d041f5a5621aabe"
-            "02da3e2b09b405b77937efef3197bd5772e41fdb73fb5294478e45208063b5f58e"
-            "089dbeb6d6342a909c1307b3fff5fe2cf4da56bdae50848f",
-            156,
-            "039c056d933b475032777edbaffac50f143f64c123329ed9cf59e3b65d3f43b6",
-            178, 234753, 4886999 },
-          { "8f3a06e2fd8711350a517bb12e31f3d3423e8dc0bb14aac8240fca0995938d59bb"
-            "37bd0a7dfc9c9cc0705684b46612e8c8b1d6655fb0f9887562bb9899791a0250d1"
-            "320f945eda48cdc20c233f40a5bb0a7e3ac5ad7250ce684f68fc0b8c9633bfd75a"
-            "ad116525af7bdcdbbdb4e00ab163fd4df08f243f12557e",
-            122,
-            "90631f686a8c3dbc0703ffa353bc1fdf35774568ac62406f98a13ed8f47595fd",
-            55, 695191, 15738350 },
-          { "b540beb016a5366524d4605156493f9874514a5aa58818cd0c6dfffaa9e90205f1"
-            "7b",
-            34,
-            "44071f6d181561670bda728d43fb79b443bb805afdebaf98622b5165e01b15fb",
-            231, 78652, 6631659 },
-          { "a14975c26c088755a8b715ff2528d647cd343987fcf4aa25e7194a8417fb2b4b3f"
-            "7268da9f3182b4cfb22d138b2749d673a47ecc7525dd15a0a3c66046971784bb63"
-            "d7eae24cc84f2631712075a10e10a96b0e0ee67c43e01c423cb9c44e5371017e9c"
-            "496956b632158da3fe12addecb88912e6759bc37f9af2f45af72c5cae3b179ffb6"
-            "76a697de6ebe45cd4c16d4a9d642d29ddc0186a0a48cb6cd62bfc3dd229d313b30"
-            "1560971e740e2cf1f99a9a090a5b283f35475057e96d7064e2e0fc81984591068d"
-            "55a3b4169f22cccb0745a2689407ea1901a0a766eb99",
-            220,
-            "3d968b2752b8838431165059319f3ff8910b7b8ecb54ea01d3f54769e9d98daf",
-            167, 717248, 10784179 },
-      };
-    char          passwd[256];
-    unsigned char salt[crypto_pwhash_scryptsalsa208sha256_SALTBYTES];
-    unsigned char out[256];
-    char          out_hex[256 * 2 + 1];
-    size_t        i = 0U;
-
-    do {
-        sodium_hex2bin((unsigned char *) passwd, sizeof passwd,
-                       tests[i].passwd_hex, strlen(tests[i].passwd_hex), NULL,
-                       NULL, NULL);
-        sodium_hex2bin(salt, sizeof salt, tests[i].salt_hex,
-                       strlen(tests[i].salt_hex), NULL, NULL, NULL);
-        if (crypto_pwhash_scryptsalsa208sha256(
-                out, (unsigned long long) tests[i].outlen,
-                passwd, tests[i].passwdlen,
-                (const unsigned char *) salt, tests[i].opslimit,
-                tests[i].memlimit) != 0) {
-            printf("pwhash failure\n");
-        }
-        sodium_bin2hex(out_hex, sizeof out_hex, out, tests[i].outlen);
-        printf("%s\n", out_hex);
-    } while (++i < (sizeof tests) / (sizeof tests[0]));
-}
-
-static void tv2(void)
-{
-    static struct {
-        const char         *passwd_hex;
-        size_t              passwdlen;
-        const char         *salt_hex;
-        size_t              outlen;
-        unsigned long long  opslimit;
-        size_t              memlimit;
-    } tests[] = {
-          { "a347ae92bce9f80f6f595a4480fc9c2fe7e7d7148d371e9487d75f5c23008ffae0"
-            "65577a928febd9b1973a5a95073acdbeb6a030cfc0d79caa2dc5cd011cef02c08d"
-            "a232d76d52dfbca38ca8dcbd665b17d1665f7cf5fe59772ec909733b24de97d6f5"
-            "8d220b20c60d7c07ec1fd93c52c31020300c6c1facd77937a597c7a6",
-            127,
-            "5541fbc995d5c197ba290346d2c559dedf405cf97e5f95482143202f9e74f5c2",
-            155, 64, 1397645 },
-          { "a347ae92bce9f80f6f595a4480fc9c2fe7e7d7148d371e9487d75f5c23008ffae0"
-            "65577a928febd9b1973a5a95073acdbeb6a030cfc0d79caa2dc5cd011cef02c08d"
-            "a232d76d52dfbca38ca8dcbd665b17d1665f7cf5fe59772ec909733b24de97d6f5"
-            "8d220b20c60d7c07ec1fd93c52c31020300c6c1facd77937a597c7a6",
-            127,
-            "5541fbc995d5c197ba290346d2c559dedf405cf97e5f95482143202f9e74f5c2",
-            155, 32768, 1397645 },
-      };
-    char          passwd[256];
-    unsigned char salt[crypto_pwhash_scryptsalsa208sha256_SALTBYTES];
-    unsigned char out[256];
-    char          out_hex[256 * 2 + 1];
-    size_t        i = 0U;
-
-    do {
-        sodium_hex2bin((unsigned char *)passwd, sizeof passwd,
-                       tests[i].passwd_hex, strlen(tests[i].passwd_hex), NULL,
-                       NULL, NULL);
-        sodium_hex2bin(salt, sizeof salt, tests[i].salt_hex,
-                       strlen(tests[i].salt_hex), NULL, NULL, NULL);
-        if (crypto_pwhash_scryptsalsa208sha256(
-                out, (unsigned long long) tests[i].outlen,
-                passwd, tests[i].passwdlen,
-                (const unsigned char *) salt, tests[i].opslimit,
-                tests[i].memlimit) != 0) {
-            printf("pwhash failure\n");
-        }
-        sodium_bin2hex(out_hex, sizeof out_hex, out, tests[i].outlen);
-        printf("%s\n", out_hex);
-    } while (++i < (sizeof tests) / (sizeof tests[0]));
-}
-
-static void tv3(void)
-{
-    static struct {
-        const char *passwd;
-        const char *out;
-    } tests[] = {
-          { "^T5H$JYt39n%K*j:W]!1s?vg!:jGi]Ax?..l7[p0v:1jHTpla9;]bUN;?bWyCbtqg "
-            "nrDFal+Jxl3,2`#^tFSu%v_+7iYse8-cCkNf!tD=KrW)",
-            "$7$B6....1....75gBMAGwfFWZqBdyF3WdTQnWdUsuTiWjG1fF9c1jiSD$tc8RoB3."
-            "Em3/zNgMLWo2u00oGIoTyJv4fl3Fl8Tix72" },
-          { "bl72h6#y<':MFRZ>B IA1=NRkCKS%W8`1I.2uQxJN0g)N N aTt^4K!Iw5r "
-            "H6;crDsv^a55j9tsk'/GqweZn;cdk6+F_St6:#*=?ZCD_lw>.",
-            "$7$A6....3....Iahc6qM0.UQJHVgE4h9oa1/"
-            "4OWlWLm9CCtfguvz6bQD$QnXCo3M7nIqtry2WKsUZ5gQ.mY0wAlJu."
-            "WUhtE8vF66" },
-          { "Py "
-            ">e.5b+tLo@rL`dC2k@eJ&4eVl!W=JJ4+k&mAt@gt',FS1JjqKW3aq21:]^kna`"
-            "mde7kVkN5NrpKUptu)@4*b&?BE_sJMG1=&@`3GBCV]Wg7xwgo7x3El",
-            "$7$96..../....f6bEusKt79kK4wdYN0ki2nw4bJQ7P3rN6k3BSigsK/"
-            "D$Dsvuw7vXj5xijmrb/NOhdgoyK/OiSIYv88cEtl9Cik7" },
-          { "2vj;Um]FKOL27oam(:Uo8+UmSTvb1FD*h?jk_,S=;RDgF-$Fjk?]9yvfxe@fN^!NN("
-            "Cuml?+2Raa",
-            "$7$86....I....7XwIxLtCx4VphmFeUa6OGuGJrFaIaYzDiLNu/"
-            "tyUPhD$U3q5GCEqCWxMwh.YQHDJrlg7FIZgViv9pcXE3h1vg61" },
-          { "CT=[9uUoGav,J`kU+348tA50ue#sL:ABZ3QgF+r[#vh:tTOiL>s8tv%,Jeo]jH/"
-            "_4^i(*jD-_ku[9Ko[=86 06V",
-            "$7$A6....2....R3.bjH6YS9wz9z8Jsj.3weGQ3J80ZZElGw2oVux1TP6$"
-            "i5u6lFzXDHaIgYEICinLD6WNaovbiXP8SnLrDRdKgA9" },
-          { "J#wNn`hDgOpTHNI.w^1a70%f,.9V_m038H_JIJQln`vdWnn/"
-            "rmILR?9H5g(+`;@H(2VosN9Fgk[WEjaBr'yB9Q19-imNa04[Mk5kvGcSn-TV",
-            "$7$B6....1....Dj1y.4mF1J9XmT/6IDskYdCLaPFJTq9xcCwXQ1DpT92$92/"
-            "hYfZLRq1nTLyIz.uc/dC6wLqwnsoqpkadrCXusm6" },
-          { "j4BS38Asa;p)[K+9TY!3YDj<LK-`nLVXQw9%*QfM",
-            "$7$B6....1....5Ods8mojVwXJq4AywF/uI9BdMSiJ/zT8hQP/"
-            "4cB68VC$nk4ExHNXJ802froj51/1wJTrSZvTIyyK7PecOxRRaz0" },
-          { "M.R>Qw+!qJb]>pP :_.9`dxM9k [eR7Y!yL-3)sNs[R,j_/^ "
-            "TH=5ny'15>6UXWcQW^6D%XCsO[vN[%ReA-`tV1vW(Nt*0KVK#]45P_A",
-            "$7$B6....1....D/"
-            "eyk8N5y6Z8YVQEsw521cTx.9zzLuK7YDs1KMMh.o4$alfW8ZbsUWnXc."
-            "vqon2zoljVk24Tt1.IsCuo2KurvS2" },
-          { "K3S=KyH#)36_?]LxeR8QNKw6X=gFb'ai$C%29V* "
-            "tyh^Wo$TN-#Q4qkmtTCf0LLb.^E$0uykkP",
-            "$7$B6....1....CuBuU97xgAage8whp/"
-            "JNKobo0TFbsORGVbfcQIefyP8$aqalP."
-            "XofGViB8EPLONqHma8vs1xc9uTIMYh9CgE.S8" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-
-          /* Invalid pwhash strings */
-
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....1....$TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$.6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A.....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6.........TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i44269$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AH" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx54269" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7^A6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$!6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A!....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....!....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "",
-            "$7$A6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7fA6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4#"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$AX....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....1!...TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "a4ik5hGDN7foMuHOW.cp.CtX01UyCeO0.JAG.AHPpx5" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....1" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "" },
-          { "Y0!?iQa9M%5ekffW(`",
-            "$7$A6....1....TrXs5Zk6s8sWHpQgWDIXTR8kUU3s6Jc3s.DtdS8M2i4$"
-            "" },
-      };
-    char *out;
-    char *passwd;
-    size_t i = 0U;
-
-    do {
-        out = (char *) sodium_malloc(strlen(tests[i].out) + 1U);
-        assert(out != NULL);
-        memcpy(out, tests[i].out, strlen(tests[i].out) + 1U);
-        passwd = (char *) sodium_malloc(strlen(tests[i].passwd) + 1U);
-        assert(passwd != NULL);
-        memcpy(passwd, tests[i].passwd, strlen(tests[i].passwd) + 1U);
-        if (crypto_pwhash_scryptsalsa208sha256_str_verify
-            (out, passwd, strlen(passwd)) != 0) {
-            printf("pwhash_str failure: [%u]\n", (unsigned int)i);
-        }
-        sodium_free(out);
-        sodium_free(passwd);
-    } while (++i < (sizeof tests) / (sizeof tests[0]));
-}
-
-int main(void)
-{
-    char       *str_out;
-    char       *str_out2;
-    char       *salt;
-    const char *passwd = "Correct Horse Battery Staple";
-
-    tv();
-    tv2();
-    tv3();
-    salt = (char *)
-        sodium_malloc(crypto_pwhash_scryptsalsa208sha256_SALTBYTES);
-    str_out = (char *)
-        sodium_malloc(crypto_pwhash_scryptsalsa208sha256_STRBYTES);
-    str_out2 = (char *)
-        sodium_malloc(crypto_pwhash_scryptsalsa208sha256_STRBYTES);
-    memcpy(salt, "[<~A 32-bytes salt for scrypt~>]",
-           crypto_pwhash_scryptsalsa208sha256_SALTBYTES);
-    if (crypto_pwhash_scryptsalsa208sha256_str(str_out, passwd, strlen(passwd),
-                                               OPSLIMIT, MEMLIMIT) != 0) {
-        printf("pwhash_str failure\n");
-    }
-    if (crypto_pwhash_scryptsalsa208sha256_str(str_out2, passwd, strlen(passwd),
-                                               OPSLIMIT, MEMLIMIT) != 0) {
-        printf("pwhash_str(2) failure\n");
-    }
-    if (strcmp(str_out, str_out2) == 0) {
-        printf("pwhash_str doesn't generate different salts\n");
-    }
-    if (crypto_pwhash_scryptsalsa208sha256_str_verify(str_out, passwd,
-                                                      strlen(passwd)) != 0) {
-        printf("pwhash_str_verify failure\n");
-    }
-    if (crypto_pwhash_scryptsalsa208sha256_str_verify(str_out, passwd,
-                                                      strlen(passwd)) != 0) {
-        printf("pwhash_str_verify failure\n");
-    }
-    str_out[14]++;
-    if (crypto_pwhash_scryptsalsa208sha256_str_verify(
-        str_out, passwd, strlen(passwd)) == 0) {
-        printf("pwhash_str_verify(2) failure\n");
-    }
-    str_out[14]--;
-
-    assert(str_out[crypto_pwhash_scryptsalsa208sha256_STRBYTES - 1U] == 0);
-    assert(crypto_pwhash_scryptsalsa208sha256_saltbytes() > 0U);
-    assert(crypto_pwhash_scryptsalsa208sha256_strbytes() > 1U);
-    assert(crypto_pwhash_scryptsalsa208sha256_strbytes() >
-           strlen(crypto_pwhash_scryptsalsa208sha256_strprefix()));
-    assert(crypto_pwhash_scryptsalsa208sha256_opslimit_interactive() > 0U);
-    assert(crypto_pwhash_scryptsalsa208sha256_memlimit_interactive() > 0U);
-    assert(crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive() > 0U);
-    assert(crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive() > 0U);
-
-    sodium_free(salt);
-    sodium_free(str_out);
-    sodium_free(str_out2);
-
-    printf("OK\n");
-
-    return 0;
-}
diff --git a/libsodium/test/default/pwhash_scrypt_ll.c b/libsodium/test/default/pwhash_scrypt_ll.c
index 9b3951a..c2b3f3c 100644
--- a/libsodium/test/default/pwhash_scrypt_ll.c
+++ b/libsodium/test/default/pwhash_scrypt_ll.c
@@ -2,60 +2,58 @@
 #define TEST_NAME "pwhash_scrypt_ll"
 #include "cmptest.h"
 
-/* Tarsnap test vectors, see: https://www.tarsnap.com/scrypt/scrypt.pdf */
-
-static const char *password1 = "";
-static const char *salt1 = "";
-static uint64_t N1 = 16U;
-static uint32_t r1 = 1U;
-static uint32_t p1 = 1U;
-
-static const char *password2 = "password";
-static const char *salt2 = "NaCl";
-static uint64_t N2 = 1024U;
-static uint32_t r2 = 8U;
-static uint32_t p2 = 16U;
-
-static const char *password3 = "pleaseletmein";
-static const char *salt3 = "SodiumChloride";
-static uint64_t N3 = 16384U;
-static uint32_t r3 = 8U;
-static uint32_t p3 = 1U;
-
-static void test_vector(const char *password, const char *salt, uint64_t N,
-                        uint32_t r, uint32_t p)
+static const char *   passwd1 = "";
+static const char *   salt1   = "";
+static const uint64_t N1      = 16U;
+static const uint32_t r1      = 1U;
+static const uint32_t p1      = 1U;
+
+static const char *   passwd2 = "password";
+static const char *   salt2   = "NaCl";
+static const uint64_t N2      = 1024U;
+static const uint32_t r2      = 8U;
+static const uint32_t p2      = 16U;
+
+static const char *   passwd3 = "pleaseletmein";
+static const char *   salt3   = "SodiumChloride";
+static const uint64_t N3      = 16384U;
+static const uint32_t r3      = 8U;
+static const uint32_t p3      = 1U;
+
+static void
+tv(const char *passwd, const char *salt, uint64_t N, uint32_t r, uint32_t p)
 {
     uint8_t data[64];
-    size_t i;
-    size_t olen = (sizeof data / sizeof data[0]);
-    size_t passwordLength = strlen(password);
-    size_t saltLenght = strlen(salt);
-    int lineitems = 0;
-    int lineitemsLimit = 15;
+    size_t  i;
+    size_t  olen       = (sizeof data / sizeof data[0]);
+    size_t  passwd_len = strlen(passwd);
+    size_t  salt_len   = strlen(salt);
+    int     line_items  = 0;
 
     if (crypto_pwhash_scryptsalsa208sha256_ll(
-            (const uint8_t *)password, passwordLength, (const uint8_t *)salt,
-            saltLenght, N, r, p, data, olen) != 0) {
-        printf("pwhash_scryptsalsa208sha256_ll([%s],[%s]) failure\n", password,
+            (const uint8_t *) passwd, passwd_len, (const uint8_t *) salt,
+            salt_len, N, r, p, data, olen) != 0) {
+        printf("pwhash_scryptsalsa208sha256_ll([%s],[%s]) failure\n", passwd,
                salt);
         return;
     }
 
-    printf("scrypt('%s', '%s', %llu, %lu, %lu, %lu) =\n", password, salt,
-           (unsigned long long)N, (unsigned long)r, (unsigned long)p,
-           (unsigned long)olen);
+    printf("scrypt('%s', '%s', %lu, %lu, %lu, %lu) =\n", passwd, salt,
+           (unsigned long) N, (unsigned long) r, (unsigned long) p,
+           (unsigned long) olen);
 
-    for (i = 0; i < olen; ++i) {
-        printf("%02x%c", data[i], lineitems < lineitemsLimit ? ' ' : '\n');
-        lineitems = lineitems < lineitemsLimit ? lineitems + 1 : 0;
+    for (i = 0; i < olen; i++) {
+        printf("%02x%c", data[i], line_items < 15 ? ' ' : '\n');
+        line_items = line_items < 15 ? line_items + 1 : 0;
     }
 }
 
-int main(void)
+int
+main(void)
 {
-    test_vector(password1, salt1, N1, r1, p1);
-    test_vector(password2, salt2, N2, r2, p2);
-    test_vector(password3, salt3, N3, r3, p3);
+    tv(passwd1, salt1, N1, r1, p1);
+    tv(passwd2, salt2, N2, r2, p2);
+    tv(passwd3, salt3, N3, r3, p3);
 
     return 0;
 }
diff --git a/libsodium/test/default/randombytes.c b/libsodium/test/default/randombytes.c
index 4d8efff..d08066e 100644
--- a/libsodium/test/default/randombytes.c
+++ b/libsodium/test/default/randombytes.c
@@ -2,10 +2,11 @@
 #define TEST_NAME "randombytes"
 #include "cmptest.h"
 
-unsigned char x[65536];
-unsigned long long freq[256];
+static unsigned char      x[65536];
+static unsigned long long freq[256];
 
-static int compat_tests(void)
+static int
+compat_tests(void)
 {
     size_t i;
 
@@ -15,7 +16,7 @@ static int compat_tests(void)
         freq[i] = 0;
     }
     for (i = 0; i < sizeof x; ++i) {
-        ++freq[255 & (int)x[i]];
+        ++freq[255 & (int) x[i]];
     }
     for (i = 0; i < 256; ++i) {
         if (!freq[i]) {
@@ -25,24 +26,33 @@ static int compat_tests(void)
     return 0;
 }
 
-static int randombytes_tests(void)
+static int
+randombytes_tests(void)
 {
-    unsigned int f = 0U;
-    unsigned int i;
-    uint32_t     n;
-
-#ifdef __EMSCRIPTEN__
-    assert(strcmp(randombytes_implementation_name(), "sysrandom"));
-#else
-    assert(strcmp(randombytes_implementation_name(), "js"));
+    static const unsigned char seed[randombytes_SEEDBYTES] = {
+        0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a,
+        0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15,
+        0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f
+    };
+    unsigned char out[100];
+    unsigned int  f = 0U;
+    unsigned int  i;
+    uint32_t      n;
+
+#ifndef BENCHMARKS
+# ifdef __EMSCRIPTEN__
+    assert(strcmp(randombytes_implementation_name(), "js") == 0);
+# else
+    assert(strcmp(randombytes_implementation_name(), "sysrandom") == 0);
+# endif
 #endif
     randombytes(x, 1U);
     do {
         n = randombytes_random();
         f |= ((n >> 24) > 1);
         f |= ((n >> 16) > 1) << 1;
-        f |= ((n >>  8) > 1) << 2;
-        f |= ((n      ) > 1) << 3;
+        f |= ((n >> 8) > 1) << 2;
+        f |= ((n) > 1) << 3;
         f |= (n > 0x7fffffff) << 4;
     } while (f != 0x1f);
     randombytes_close();
@@ -61,8 +71,9 @@ static int randombytes_tests(void)
     assert(randombytes_uniform(1U) == 0U);
     randombytes_close();
 #ifndef __EMSCRIPTEN__
-    randombytes_set_implementation(&randombytes_salsa20_implementation);
-    assert(strcmp(randombytes_implementation_name(), "salsa20") == 0);
+    assert(&randombytes_internal_implementation == &randombytes_salsa20_implementation);
+    randombytes_set_implementation(&randombytes_internal_implementation);
+    assert(strcmp(randombytes_implementation_name(), "internal") == 0);
 #endif
     randombytes_stir();
     for (i = 0; i < 256; ++i) {
@@ -82,7 +93,7 @@ static int randombytes_tests(void)
         freq[i] = 0;
     }
     for (i = 0; i < sizeof x; ++i) {
-        ++freq[255 & (int)x[i]];
+        ++freq[255 & (int) x[i]];
     }
     for (i = 0; i < 256; ++i) {
         if (!freq[i]) {
@@ -90,20 +101,32 @@ static int randombytes_tests(void)
         }
     }
     assert(randombytes_uniform(1U) == 0U);
+
+    randombytes_buf_deterministic(out, sizeof out, seed);
+    for (i = 0; i < sizeof out; ++i) {
+        printf("%02x", out[i]);
+    }
+    printf(" (deterministic)\n");
+
     randombytes_close();
 
     randombytes(x, 1U);
     randombytes_close();
 
+    assert(randombytes_SEEDBYTES > 0);
+    assert(randombytes_seedbytes() == randombytes_SEEDBYTES);
+
     return 0;
 }
 
-static uint32_t randombytes_uniform_impl(const uint32_t upper_bound)
+static uint32_t
+randombytes_uniform_impl(const uint32_t upper_bound)
 {
     return upper_bound;
 }
 
-static int impl_tests(void)
+static int
+impl_tests(void)
 {
     randombytes_implementation impl = randombytes_sysrandom_implementation;
     uint32_t                   v = randombytes_random();
@@ -111,6 +134,7 @@ static int impl_tests(void)
     impl.uniform = randombytes_uniform_impl;
     randombytes_close();
     randombytes_set_implementation(&impl);
+    assert(randombytes_uniform(1) == 1);
     assert(randombytes_uniform(v) == v);
     assert(randombytes_uniform(v) == v);
     assert(randombytes_uniform(v) == v);
@@ -122,7 +146,8 @@ static int impl_tests(void)
     return 0;
 }
 
-int main(void)
+int
+main(void)
 {
     compat_tests();
     randombytes_tests();
@@ -131,5 +156,9 @@ int main(void)
 #endif
     printf("OK\n");
 
+#ifndef __EMSCRIPTEN__
+    randombytes_set_implementation(&randombytes_salsa20_implementation);
+#endif
+
     return 0;
 }
diff --git a/libsodium/test/default/scalarmult.c b/libsodium/test/default/scalarmult.c
index f931555..0e05538 100644
--- a/libsodium/test/default/scalarmult.c
+++ b/libsodium/test/default/scalarmult.c
@@ -2,36 +2,69 @@
 #define TEST_NAME "scalarmult"
 #include "cmptest.h"
 
-unsigned char alicesk[32]
-    = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,
-        0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,
-        0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a };
+static const unsigned char alicesk[crypto_scalarmult_BYTES] = {
+    0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,
+    0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,
+    0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a
+};
 
-unsigned char alicepk[32];
+static const unsigned char bobsk[crypto_scalarmult_BYTES] = {
+    0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,
+    0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,
+    0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb
+};
 
-int main(void)
+static const unsigned char small_order_p[crypto_scalarmult_BYTES] = {
+    0xe0, 0xeb, 0x7a, 0x7c, 0x3b, 0x41, 0xb8, 0xae, 0x16, 0x56, 0xe3,
+    0xfa, 0xf1, 0x9f, 0xc4, 0x6a, 0xda, 0x09, 0x8d, 0xeb, 0x9c, 0x32,
+    0xb1, 0xfd, 0x86, 0x62, 0x05, 0x16, 0x5f, 0x49, 0xb8, 0x00
+};
+
+static char hex[crypto_scalarmult_BYTES * 2 + 1];
+
+int
+main(void)
 {
-    int i;
+    unsigned char *alicepk =
+        (unsigned char *) sodium_malloc(crypto_scalarmult_BYTES);
+    unsigned char *bobpk =
+        (unsigned char *) sodium_malloc(crypto_scalarmult_BYTES);
+    unsigned char *k = (unsigned char *) sodium_malloc(crypto_scalarmult_BYTES);
+    int            ret;
+
+    assert(alicepk != NULL && bobpk != NULL && k != NULL);
 
     crypto_scalarmult_base(alicepk, alicesk);
+    sodium_bin2hex(hex, sizeof hex, alicepk, crypto_scalarmult_BYTES);
+    printf("%s\n", hex);
+
+    crypto_scalarmult_base(bobpk, bobsk);
+    sodium_bin2hex(hex, sizeof hex, bobpk, crypto_scalarmult_BYTES);
+    printf("%s\n", hex);
+
+    ret = crypto_scalarmult(k, alicesk, bobpk);
+    assert(ret == 0);
+    sodium_bin2hex(hex, sizeof hex, k, crypto_scalarmult_BYTES);
+    printf("%s\n", hex);
+
+    ret = crypto_scalarmult(k, bobsk, alicepk);
+    assert(ret == 0);
+    sodium_bin2hex(hex, sizeof hex, k, crypto_scalarmult_BYTES);
+    printf("%s\n", hex);
+
+    ret = crypto_scalarmult(k, bobsk, small_order_p);
+    assert(ret == -1);
+
+    sodium_free(bobpk);
+    sodium_free(alicepk);
+    sodium_free(k);
 
-    for (i = 0; i < 32; ++i) {
-        if (i > 0) {
-            printf(",");
-        } else {
-            printf(" ");
-        }
-        printf("0x%02x", (unsigned int)alicepk[i]);
-        if (i % 8 == 7) {
-            printf("\n");
-        }
-    }
     assert(crypto_scalarmult_bytes() > 0U);
     assert(crypto_scalarmult_scalarbytes() > 0U);
     assert(strcmp(crypto_scalarmult_primitive(), "curve25519") == 0);
     assert(crypto_scalarmult_bytes() == crypto_scalarmult_curve25519_bytes());
-    assert(crypto_scalarmult_scalarbytes()
-           == crypto_scalarmult_curve25519_scalarbytes());
+    assert(crypto_scalarmult_scalarbytes() ==
+           crypto_scalarmult_curve25519_scalarbytes());
     assert(crypto_scalarmult_bytes() == crypto_scalarmult_scalarbytes());
 
     return 0;
diff --git a/libsodium/test/default/scalarmult2.c b/libsodium/test/default/scalarmult2.c
index b5593df..58776cf 100644
--- a/libsodium/test/default/scalarmult2.c
+++ b/libsodium/test/default/scalarmult2.c
@@ -2,14 +2,16 @@
 #define TEST_NAME "scalarmult2"
 #include "cmptest.h"
 
-unsigned char bobsk[32]
-    = { 0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,
-        0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,
-        0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb };
+static unsigned char bobsk[32] = { 0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a,
+                                   0x4b, 0x79, 0xe1, 0x7f, 0x8b, 0x83, 0x80,
+                                   0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26,
+                                   0x18, 0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27,
+                                   0xff, 0x88, 0xe0, 0xeb };
 
-unsigned char bobpk[32];
+static unsigned char bobpk[32];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
@@ -21,7 +23,7 @@ int main(void)
         } else {
             printf(" ");
         }
-        printf("0x%02x", (unsigned int)bobpk[i]);
+        printf("0x%02x", (unsigned int) bobpk[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
diff --git a/libsodium/test/default/scalarmult5.c b/libsodium/test/default/scalarmult5.c
index 3dc6977..f92aa40 100644
--- a/libsodium/test/default/scalarmult5.c
+++ b/libsodium/test/default/scalarmult5.c
@@ -2,23 +2,28 @@
 #define TEST_NAME "scalarmult5"
 #include "cmptest.h"
 
-unsigned char alicesk[32]
-    = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5, 0x7d, 0x3c, 0x16, 0xc1,
-        0x72, 0x51, 0xb2, 0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb, 0xc0,
-        0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5, 0x1d, 0xb9, 0x2c, 0x2a };
+static unsigned char alicesk[32] = { 0x77, 0x07, 0x6d, 0x0a, 0x73, 0x18, 0xa5,
+                                     0x7d, 0x3c, 0x16, 0xc1, 0x72, 0x51, 0xb2,
+                                     0x66, 0x45, 0xdf, 0x4c, 0x2f, 0x87, 0xeb,
+                                     0xc0, 0x99, 0x2a, 0xb1, 0x77, 0xfb, 0xa5,
+                                     0x1d, 0xb9, 0x2c, 0x2a };
 
-unsigned char bobpk[32]
-    = { 0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1, 0xb4, 0xd3, 0x5b, 0x61,
-        0xc2, 0xec, 0xe4, 0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b, 0x78,
-        0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14, 0x6f, 0x88, 0x2b, 0x4f };
+static unsigned char bobpk[32] = { 0xde, 0x9e, 0xdb, 0x7d, 0x7b, 0x7d, 0xc1,
+                                   0xb4, 0xd3, 0x5b, 0x61, 0xc2, 0xec, 0xe4,
+                                   0x35, 0x37, 0x3f, 0x83, 0x43, 0xc8, 0x5b,
+                                   0x78, 0x67, 0x4d, 0xad, 0xfc, 0x7e, 0x14,
+                                   0x6f, 0x88, 0x2b, 0x4f };
 
-unsigned char k[32];
+static unsigned char k[32];
 
-int main(void)
+int
+main(void)
 {
     int i;
+    int ret;
 
-    crypto_scalarmult(k, alicesk, bobpk);
+    ret = crypto_scalarmult(k, alicesk, bobpk);
+    assert(ret == 0);
 
     for (i = 0; i < 32; ++i) {
         if (i > 0) {
@@ -26,7 +31,7 @@ int main(void)
         } else {
             printf(" ");
         }
-        printf("0x%02x", (unsigned int)k[i]);
+        printf("0x%02x", (unsigned int) k[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
diff --git a/libsodium/test/default/scalarmult6.c b/libsodium/test/default/scalarmult6.c
index 69fdc07..f8f0784 100644
--- a/libsodium/test/default/scalarmult6.c
+++ b/libsodium/test/default/scalarmult6.c
@@ -2,32 +2,37 @@
 #define TEST_NAME "scalarmult6"
 #include "cmptest.h"
 
-unsigned char bobsk_[crypto_scalarmult_SCALARBYTES]
-    = { 0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,
-        0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,
-        0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb };
-
-unsigned char alicepk_[crypto_scalarmult_SCALARBYTES]
-    = { 0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b, 0x7d,
-        0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38,
-        0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0x6a };
-
-int main(void)
+static unsigned char bobsk_[crypto_scalarmult_SCALARBYTES] = {
+    0x5d, 0xab, 0x08, 0x7e, 0x62, 0x4a, 0x8a, 0x4b, 0x79, 0xe1, 0x7f,
+    0x8b, 0x83, 0x80, 0x0e, 0xe6, 0x6f, 0x3b, 0xb1, 0x29, 0x26, 0x18,
+    0xb6, 0xfd, 0x1c, 0x2f, 0x8b, 0x27, 0xff, 0x88, 0xe0, 0xeb
+};
+
+static unsigned char alicepk_[crypto_scalarmult_SCALARBYTES] = {
+    0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b, 0x7d,
+    0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38,
+    0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0x6a
+};
+
+int
+main(void)
 {
     unsigned char *k;
     unsigned char *bobsk;
     unsigned char *alicepk;
     int            i;
+    int            ret;
 
-    k = (unsigned char *) sodium_malloc(crypto_scalarmult_BYTES);
-    bobsk = (unsigned char *) sodium_malloc(crypto_scalarmult_SCALARBYTES);
+    k       = (unsigned char *) sodium_malloc(crypto_scalarmult_BYTES);
+    bobsk   = (unsigned char *) sodium_malloc(crypto_scalarmult_SCALARBYTES);
     alicepk = (unsigned char *) sodium_malloc(crypto_scalarmult_SCALARBYTES);
     assert(k != NULL && bobsk != NULL && alicepk != NULL);
 
     memcpy(bobsk, bobsk_, crypto_scalarmult_SCALARBYTES);
     memcpy(alicepk, alicepk_, crypto_scalarmult_SCALARBYTES);
 
-    crypto_scalarmult(k, bobsk, alicepk);
+    ret = crypto_scalarmult(k, bobsk, alicepk);
+    assert(ret == 0);
 
     sodium_free(alicepk);
     sodium_free(bobsk);
@@ -38,7 +43,7 @@ int main(void)
         } else {
             printf(" ");
         }
-        printf("0x%02x", (unsigned int)k[i]);
+        printf("0x%02x", (unsigned int) k[i]);
         if (i % 8 == 7) {
             printf("\n");
         }
diff --git a/libsodium/test/default/scalarmult7.c b/libsodium/test/default/scalarmult7.c
index e83493e..54f64c2 100644
--- a/libsodium/test/default/scalarmult7.c
+++ b/libsodium/test/default/scalarmult7.c
@@ -2,29 +2,32 @@
 #define TEST_NAME "scalarmult7"
 #include "cmptest.h"
 
-unsigned char p1[32] = {
-    0x72, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54,
-    0x74, 0x8b, 0x7d, 0xdc, 0xb4, 0x3e, 0xf7, 0x5a,
-    0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38, 0x1a, 0xf4,
-    0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0xea
+static unsigned char p1[32] = {
+    0x72, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b, 0x7d,
+    0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38,
+    0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0xea
 };
 
-unsigned char p2[32] = {
-    0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54,
-    0x74, 0x8b, 0x7d, 0xdc, 0xb4, 0x3e, 0xf7, 0x5a,
-    0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38, 0x1a, 0xf4,
-    0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0x6a
+static unsigned char p2[32] = {
+    0x85, 0x20, 0xf0, 0x09, 0x89, 0x30, 0xa7, 0x54, 0x74, 0x8b, 0x7d,
+    0xdc, 0xb4, 0x3e, 0xf7, 0x5a, 0x0d, 0xbf, 0x3a, 0x0d, 0x26, 0x38,
+    0x1a, 0xf4, 0xeb, 0xa4, 0xa9, 0x8e, 0xaa, 0x9b, 0x4e, 0x6a
 };
 
-unsigned char scalar[32];
-unsigned char out1[32];
-unsigned char out2[32];
+static unsigned char scalar[32];
+static unsigned char out1[32];
+static unsigned char out2[32];
 
-int main(void)
+int
+main(void)
 {
+    int ret;
+
     scalar[0] = 1U;
-    crypto_scalarmult_curve25519(out1, scalar, p1);
-    crypto_scalarmult_curve25519(out2, scalar, p2);
+    ret       = crypto_scalarmult_curve25519(out1, scalar, p1);
+    assert(ret == 0);
+    ret = crypto_scalarmult_curve25519(out2, scalar, p2);
+    assert(ret == 0);
     printf("%d\n", !!memcmp(out1, out2, 32));
 
     return 0;
diff --git a/libsodium/test/default/secretbox.c b/libsodium/test/default/secretbox.c
index 6a06b29..df1d62f 100644
--- a/libsodium/test/default/secretbox.c
+++ b/libsodium/test/default/secretbox.c
@@ -2,62 +2,83 @@
 #define TEST_NAME "secretbox"
 #include "cmptest.h"
 
-unsigned char firstkey[32]
-    = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85, 0xd4, 0x62, 0xcd, 0x51,
-        0x19, 0x7a, 0x9a, 0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac, 0x64,
-        0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08, 0x44, 0xf6, 0x83, 0x89 };
-
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
-
-// API requires first 32 bytes to be 0
-unsigned char m[163]
-    = { 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0,    0,    0,    0,    0xbe, 0x07, 0x5f, 0xc5,
-        0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16, 0xeb, 0xeb, 0x0c, 0x7b,
-        0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4, 0x4b, 0x66, 0x84, 0x9b,
-        0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf, 0x33, 0xbd, 0x75, 0x1a,
-        0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29, 0x6c, 0xdc, 0x3c, 0x01,
-        0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce, 0x31, 0x4a, 0xdb, 0x31,
-        0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d, 0xce, 0xea, 0x3a, 0x7f,
-        0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a, 0xd6, 0xb1, 0x31, 0x8a,
-        0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde, 0x04, 0x89, 0x77, 0xeb,
-        0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c, 0x60, 0x90, 0x2e, 0x52,
-        0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40, 0xe0, 0x82, 0xf9, 0x37,
-        0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05 };
-
-unsigned char c[163];
-
-int main(void)
+static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,
+                                      0xd4, 0x62, 0xcd, 0x51, 0x19, 0x7a, 0x9a,
+                                      0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac,
+                                      0x64, 0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08,
+                                      0x44, 0xf6, 0x83, 0x89 };
+
+static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                   0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                   0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                   0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+
+/* API requires first 32 bytes to be 0 */
+static unsigned char m[163] = {
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0xbe, 0x07, 0x5f, 0xc5,
+    0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16, 0xeb, 0xeb, 0x0c, 0x7b,
+    0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4, 0x4b, 0x66, 0x84, 0x9b,
+    0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf, 0x33, 0xbd, 0x75, 0x1a,
+    0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29, 0x6c, 0xdc, 0x3c, 0x01,
+    0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce, 0x31, 0x4a, 0xdb, 0x31,
+    0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d, 0xce, 0xea, 0x3a, 0x7f,
+    0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a, 0xd6, 0xb1, 0x31, 0x8a,
+    0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde, 0x04, 0x89, 0x77, 0xeb,
+    0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c, 0x60, 0x90, 0x2e, 0x52,
+    0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40, 0xe0, 0x82, 0xf9, 0x37,
+    0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05
+};
+
+static unsigned char c[163];
+
+int
+main(void)
 {
     int i;
 
     crypto_secretbox(c, m, 163, nonce, firstkey);
     for (i = 16; i < 163; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
+        printf(",0x%02x", (unsigned int) c[i]);
         if (i % 8 == 7)
             printf("\n");
     }
     printf("\n");
 
+    memcpy(c, m, 163);
+    crypto_secretbox(c, c, 163, nonce, firstkey);
+    for (i = 16; i < 163; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+        if (i % 8 == 7)
+            printf("\n");
+    }
+    printf("\n");
+
+    assert(crypto_secretbox(c, c, 31, nonce, firstkey) == -1);
+    assert(crypto_secretbox(c, c, 12, nonce, firstkey) == -1);
+    assert(crypto_secretbox(c, c, 1, nonce, firstkey) == -1);
+    assert(crypto_secretbox(c, c, 0, nonce, firstkey) == -1);
+
     assert(crypto_secretbox_keybytes() > 0U);
     assert(crypto_secretbox_noncebytes() > 0U);
     assert(crypto_secretbox_zerobytes() > 0U);
     assert(crypto_secretbox_boxzerobytes() > 0U);
     assert(crypto_secretbox_macbytes() > 0U);
+    assert(crypto_secretbox_messagebytes_max() > 0U);
     assert(strcmp(crypto_secretbox_primitive(), "xsalsa20poly1305") == 0);
-    assert(crypto_secretbox_keybytes()
-           == crypto_secretbox_xsalsa20poly1305_keybytes());
-    assert(crypto_secretbox_noncebytes()
-           == crypto_secretbox_xsalsa20poly1305_noncebytes());
-    assert(crypto_secretbox_zerobytes()
-           == crypto_secretbox_xsalsa20poly1305_zerobytes());
-    assert(crypto_secretbox_boxzerobytes()
-           == crypto_secretbox_xsalsa20poly1305_boxzerobytes());
-    assert(crypto_secretbox_macbytes()
-           == crypto_secretbox_xsalsa20poly1305_macbytes());
+    assert(crypto_secretbox_keybytes() ==
+           crypto_secretbox_xsalsa20poly1305_keybytes());
+    assert(crypto_secretbox_noncebytes() ==
+           crypto_secretbox_xsalsa20poly1305_noncebytes());
+    assert(crypto_secretbox_zerobytes() ==
+           crypto_secretbox_xsalsa20poly1305_zerobytes());
+    assert(crypto_secretbox_boxzerobytes() ==
+           crypto_secretbox_xsalsa20poly1305_boxzerobytes());
+    assert(crypto_secretbox_macbytes() ==
+           crypto_secretbox_xsalsa20poly1305_macbytes());
+    assert(crypto_secretbox_messagebytes_max() ==
+           crypto_secretbox_xsalsa20poly1305_messagebytes_max());
 
     return 0;
 }
diff --git a/libsodium/test/default/secretbox2.c b/libsodium/test/default/secretbox2.c
index 37fc634..e6320b7 100644
--- a/libsodium/test/default/secretbox2.c
+++ b/libsodium/test/default/secretbox2.c
@@ -2,45 +2,54 @@
 #define TEST_NAME "secretbox2"
 #include "cmptest.h"
 
-unsigned char firstkey[32]
-    = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85, 0xd4, 0x62, 0xcd, 0x51,
-        0x19, 0x7a, 0x9a, 0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac, 0x64,
-        0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08, 0x44, 0xf6, 0x83, 0x89 };
-
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
-
-// API requires first 16 bytes to be 0
-unsigned char c[163]
-    = { 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0xf3, 0xff, 0xc7, 0x70, 0x3f, 0x94, 0x00, 0xe5,
-        0x2a, 0x7d, 0xfb, 0x4b, 0x3d, 0x33, 0x05, 0xd9, 0x8e, 0x99, 0x3b, 0x9f,
-        0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba, 0x32, 0xfc, 0x76, 0xce,
-        0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4, 0x47, 0x6f, 0xb8, 0xc5,
-        0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c, 0x98, 0xdc, 0xe8, 0x7b,
-        0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72, 0x71, 0xd2, 0xc2, 0x0f,
-        0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8, 0x63, 0xd5, 0x17, 0x38,
-        0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a, 0xb9, 0x32, 0x16, 0x45,
-        0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68, 0x51, 0x7a, 0xcf, 0xea,
-        0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda, 0x99, 0x83, 0x2b, 0x61,
-        0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e, 0x88, 0xd5, 0xf9, 0xb3,
-        0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6, 0x59, 0x9b, 0x1f, 0x65,
-        0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5 };
-
-unsigned char m[163];
-
-int main(void)
+static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,
+                                      0xd4, 0x62, 0xcd, 0x51, 0x19, 0x7a, 0x9a,
+                                      0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac,
+                                      0x64, 0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08,
+                                      0x44, 0xf6, 0x83, 0x89 };
+
+static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                   0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                   0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                   0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+
+/* API requires first 16 bytes to be 0 */
+static unsigned char c[163] = {
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0xf3, 0xff, 0xc7, 0x70, 0x3f, 0x94, 0x00, 0xe5,
+    0x2a, 0x7d, 0xfb, 0x4b, 0x3d, 0x33, 0x05, 0xd9, 0x8e, 0x99, 0x3b, 0x9f,
+    0x48, 0x68, 0x12, 0x73, 0xc2, 0x96, 0x50, 0xba, 0x32, 0xfc, 0x76, 0xce,
+    0x48, 0x33, 0x2e, 0xa7, 0x16, 0x4d, 0x96, 0xa4, 0x47, 0x6f, 0xb8, 0xc5,
+    0x31, 0xa1, 0x18, 0x6a, 0xc0, 0xdf, 0xc1, 0x7c, 0x98, 0xdc, 0xe8, 0x7b,
+    0x4d, 0xa7, 0xf0, 0x11, 0xec, 0x48, 0xc9, 0x72, 0x71, 0xd2, 0xc2, 0x0f,
+    0x9b, 0x92, 0x8f, 0xe2, 0x27, 0x0d, 0x6f, 0xb8, 0x63, 0xd5, 0x17, 0x38,
+    0xb4, 0x8e, 0xee, 0xe3, 0x14, 0xa7, 0xcc, 0x8a, 0xb9, 0x32, 0x16, 0x45,
+    0x48, 0xe5, 0x26, 0xae, 0x90, 0x22, 0x43, 0x68, 0x51, 0x7a, 0xcf, 0xea,
+    0xbd, 0x6b, 0xb3, 0x73, 0x2b, 0xc0, 0xe9, 0xda, 0x99, 0x83, 0x2b, 0x61,
+    0xca, 0x01, 0xb6, 0xde, 0x56, 0x24, 0x4a, 0x9e, 0x88, 0xd5, 0xf9, 0xb3,
+    0x79, 0x73, 0xf6, 0x22, 0xa4, 0x3d, 0x14, 0xa6, 0x59, 0x9b, 0x1f, 0x65,
+    0x4c, 0xb4, 0x5a, 0x74, 0xe3, 0x55, 0xa5
+};
+
+static unsigned char m[163];
+
+int
+main(void)
 {
     int i;
 
     if (crypto_secretbox_open(m, c, 163, nonce, firstkey) == 0) {
         for (i = 32; i < 163; ++i) {
-            printf(",0x%02x", (unsigned int)m[i]);
+            printf(",0x%02x", (unsigned int) m[i]);
             if (i % 8 == 7)
                 printf("\n");
         }
         printf("\n");
     }
+    assert(crypto_secretbox_open(m, c, 31, nonce, firstkey) == -1);
+    assert(crypto_secretbox_open(m, c, 16, nonce, firstkey) == -1);
+    assert(crypto_secretbox_open(m, c, 1, nonce, firstkey) == -1);
+    assert(crypto_secretbox_open(m, c, 0, nonce, firstkey) == -1);
+
     return 0;
 }
diff --git a/libsodium/test/default/secretbox7.c b/libsodium/test/default/secretbox7.c
index 492dd34..389943d 100644
--- a/libsodium/test/default/secretbox7.c
+++ b/libsodium/test/default/secretbox7.c
@@ -2,20 +2,21 @@
 #define TEST_NAME "secretbox7"
 #include "cmptest.h"
 
-unsigned char k[crypto_secretbox_KEYBYTES];
-unsigned char n[crypto_secretbox_NONCEBYTES];
-unsigned char m[10000];
-unsigned char c[10000];
-unsigned char m2[10000];
+static unsigned char k[crypto_secretbox_KEYBYTES];
+static unsigned char n[crypto_secretbox_NONCEBYTES];
+static unsigned char m[10000];
+static unsigned char c[10000];
+static unsigned char m2[10000];
 
-int main(void)
+int
+main(void)
 {
     size_t mlen;
     size_t i;
 
     for (mlen = 0; mlen < 1000 && mlen + crypto_secretbox_ZEROBYTES < sizeof m;
          ++mlen) {
-        randombytes_buf(k, crypto_secretbox_KEYBYTES);
+        crypto_secretbox_keygen(k);
         randombytes_buf(n, crypto_secretbox_NONCEBYTES);
         randombytes_buf(m + crypto_secretbox_ZEROBYTES, mlen);
         crypto_secretbox(c, m, mlen + crypto_secretbox_ZEROBYTES, n, k);
diff --git a/libsodium/test/default/secretbox8.c b/libsodium/test/default/secretbox8.c
index 60d93e3..acba5f0 100644
--- a/libsodium/test/default/secretbox8.c
+++ b/libsodium/test/default/secretbox8.c
@@ -2,21 +2,22 @@
 #define TEST_NAME "secretbox8"
 #include "cmptest.h"
 
-unsigned char k[crypto_secretbox_KEYBYTES];
-unsigned char n[crypto_secretbox_NONCEBYTES];
-unsigned char m[10000];
-unsigned char c[10000];
-unsigned char m2[10000];
+static unsigned char k[crypto_secretbox_KEYBYTES];
+static unsigned char n[crypto_secretbox_NONCEBYTES];
+static unsigned char m[10000];
+static unsigned char c[10000];
+static unsigned char m2[10000];
 
-int main(void)
+int
+main(void)
 {
     size_t mlen;
     size_t i;
-    int caught;
+    int    caught;
 
     for (mlen = 0; mlen < 1000 && mlen + crypto_secretbox_ZEROBYTES < sizeof m;
          ++mlen) {
-        randombytes_buf(k, crypto_secretbox_KEYBYTES);
+        crypto_secretbox_keygen(k);
         randombytes_buf(n, crypto_secretbox_NONCEBYTES);
         randombytes_buf(m + crypto_secretbox_ZEROBYTES, mlen);
         crypto_secretbox(c, m, mlen + crypto_secretbox_ZEROBYTES, n, k);
diff --git a/libsodium/test/default/secretbox_easy.c b/libsodium/test/default/secretbox_easy.c
index df85070..4542bbd 100644
--- a/libsodium/test/default/secretbox_easy.c
+++ b/libsodium/test/default/secretbox_easy.c
@@ -2,56 +2,123 @@
 #define TEST_NAME "secretbox_easy"
 #include "cmptest.h"
 
-unsigned char firstkey[32]
-    = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85, 0xd4, 0x62, 0xcd, 0x51,
-        0x19, 0x7a, 0x9a, 0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac, 0x64,
-        0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08, 0x44, 0xf6, 0x83, 0x89 };
-
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
-
-unsigned char m[131]
-    = { 0xbe, 0x07, 0x5f, 0xc5, 0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16,
-        0xeb, 0xeb, 0x0c, 0x7b, 0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4,
-        0x4b, 0x66, 0x84, 0x9b, 0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf,
-        0x33, 0xbd, 0x75, 0x1a, 0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29,
-        0x6c, 0xdc, 0x3c, 0x01, 0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce,
-        0x31, 0x4a, 0xdb, 0x31, 0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d,
-        0xce, 0xea, 0x3a, 0x7f, 0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a,
-        0xd6, 0xb1, 0x31, 0x8a, 0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde,
-        0x04, 0x89, 0x77, 0xeb, 0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c,
-        0x60, 0x90, 0x2e, 0x52, 0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40,
-        0xe0, 0x82, 0xf9, 0x37, 0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05 };
-
-unsigned char c[147 + crypto_secretbox_MACBYTES];
-unsigned char mac[crypto_secretbox_MACBYTES];
-
-int main(void)
+static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,
+                                      0xd4, 0x62, 0xcd, 0x51, 0x19, 0x7a, 0x9a,
+                                      0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac,
+                                      0x64, 0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08,
+                                      0x44, 0xf6, 0x83, 0x89 };
+
+static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                   0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                   0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                   0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+
+static unsigned char m[131] = {
+    0xbe, 0x07, 0x5f, 0xc5, 0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16,
+    0xeb, 0xeb, 0x0c, 0x7b, 0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4,
+    0x4b, 0x66, 0x84, 0x9b, 0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf,
+    0x33, 0xbd, 0x75, 0x1a, 0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29,
+    0x6c, 0xdc, 0x3c, 0x01, 0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce,
+    0x31, 0x4a, 0xdb, 0x31, 0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d,
+    0xce, 0xea, 0x3a, 0x7f, 0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a,
+    0xd6, 0xb1, 0x31, 0x8a, 0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde,
+    0x04, 0x89, 0x77, 0xeb, 0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c,
+    0x60, 0x90, 0x2e, 0x52, 0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40,
+    0xe0, 0x82, 0xf9, 0x37, 0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05
+};
+
+int
+main(void)
 {
-    size_t i;
+    unsigned char *c;
+    unsigned char *mac;
+    size_t         i;
+
+    c   = (unsigned char *) sodium_malloc(131 + crypto_secretbox_MACBYTES + 1);
+    mac = (unsigned char *) sodium_malloc(crypto_secretbox_MACBYTES);
+    assert(c != NULL && mac != NULL);
 
     crypto_secretbox_easy(c, m, 131, nonce, firstkey);
     for (i = 0; i < 131 + crypto_secretbox_MACBYTES; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
-        if (i % 8 == 7)
-            printf("\n");
+        printf(",0x%02x", (unsigned int) c[i]);
     }
     printf("\n");
 
     crypto_secretbox_detached(c, mac, m, 131, nonce, firstkey);
     for (i = 0; i < crypto_secretbox_MACBYTES; ++i) {
-        printf(",0x%02x", (unsigned int)mac[i]);
-        if (i % 8 == 7)
-            printf("\n");
+        printf(",0x%02x", (unsigned int) mac[i]);
     }
     for (i = 0; i < 131; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
-        if (i % 8 == 7)
-            printf("\n");
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
+
+    /* Same test, with c and m overlapping */
+
+    memcpy(c + 1, m, 131);
+    crypto_secretbox_easy(c, c + 1, 131, nonce, firstkey);
+    for (i = 0; i < 131 + crypto_secretbox_MACBYTES; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
+
+    memcpy(c, m, 131);
+    crypto_secretbox_easy(c + 1, c, 131, nonce, firstkey);
+    for (i = 0; i < 131 + crypto_secretbox_MACBYTES; ++i) {
+        printf(",0x%02x", (unsigned int) c[i + 1]);
+    }
+    printf("\n");
+
+    memcpy(c, m, 131);
+    crypto_secretbox_easy(c, c, 131, nonce, firstkey);
+    for (i = 0; i < 131 + crypto_secretbox_MACBYTES; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
     }
+    printf("\n");
+
+    assert(crypto_secretbox_easy(c, m, 0, nonce, firstkey) == 0);
+
+    /* Null message */
+
+    crypto_secretbox_easy(c, c, 0, nonce, firstkey);
+    for (i = 0; i < crypto_secretbox_MACBYTES + 1; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
+    if (crypto_secretbox_open_easy(c, c, crypto_secretbox_MACBYTES, nonce,
+                                   firstkey) != 0) {
+        printf("Null crypto_secretbox_open_easy() failed\n");
+    }
+    for (i = 0; i < crypto_secretbox_MACBYTES + 1; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
+    c[randombytes_uniform(crypto_secretbox_MACBYTES)]++;
+    if (crypto_secretbox_open_easy(c, c, crypto_secretbox_MACBYTES, nonce,
+                                   firstkey) != -1) {
+        printf("Null tampered crypto_secretbox_open_easy() failed\n");
+    }
+
+    /* No overlap, but buffers are next to each other */
+
+    memset(c, 0, 131 + crypto_secretbox_MACBYTES + 1);
+    memcpy(c, m, 20);
+    crypto_secretbox_easy(c, c + 10, 10, nonce, firstkey);
+    for (i = 0; i < 10 + crypto_secretbox_MACBYTES; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
+
+    memset(c, 0, 131 + crypto_secretbox_MACBYTES + 1);
+    memcpy(c, m, 20);
+    crypto_secretbox_easy(c + 10, c, 10, nonce, firstkey);
+    for (i = 0; i < 10 + crypto_secretbox_MACBYTES; ++i) {
+        printf(",0x%02x", (unsigned int) c[i]);
+    }
+    printf("\n");
 
-    assert(crypto_secretbox_easy(c, m, SIZE_MAX - 1U, nonce, firstkey) == -1);
+    sodium_free(mac);
+    sodium_free(c);
 
     return 0;
 }
diff --git a/libsodium/test/default/secretbox_easy2.c b/libsodium/test/default/secretbox_easy2.c
index 6d3821b..7cacbd7 100644
--- a/libsodium/test/default/secretbox_easy2.c
+++ b/libsodium/test/default/secretbox_easy2.c
@@ -2,36 +2,48 @@
 #define TEST_NAME "secretbox_easy2"
 #include "cmptest.h"
 
-unsigned char m[10000];
-unsigned char m2[10000];
-unsigned char c[crypto_secretbox_MACBYTES + 10000];
-unsigned char nonce[crypto_secretbox_NONCEBYTES];
-unsigned char k[crypto_secretbox_KEYBYTES];
-unsigned char mac[crypto_secretbox_MACBYTES];
-
-int main(void)
+int
+main(void)
 {
-    size_t mlen;
-    size_t i;
+    unsigned char *m;
+    unsigned char *m2;
+    unsigned char *c;
+    unsigned char *nonce;
+    unsigned char *k;
+    unsigned char *mac;
+    size_t         mlen;
+    size_t         i;
 
-    randombytes_buf(k, sizeof k);
-    mlen = (size_t) randombytes_uniform((uint32_t) sizeof m);
-    randombytes_buf(m, (unsigned long long) mlen);
-    randombytes_buf(nonce, sizeof nonce);
+    mlen  = (size_t) randombytes_uniform((uint32_t) 10000) + 1U;
+    m     = (unsigned char *) sodium_malloc(mlen);
+    m2    = (unsigned char *) sodium_malloc(mlen);
+    c     = (unsigned char *) sodium_malloc(crypto_secretbox_MACBYTES + mlen);
+    nonce = (unsigned char *) sodium_malloc(crypto_secretbox_NONCEBYTES);
+    k     = (unsigned char *) sodium_malloc(crypto_secretbox_KEYBYTES);
+    mac   = (unsigned char *) sodium_malloc(crypto_secretbox_MACBYTES);
+    crypto_secretbox_keygen(k);
+    randombytes_buf(m, mlen);
+    randombytes_buf(nonce, crypto_secretbox_NONCEBYTES);
     crypto_secretbox_easy(c, m, (unsigned long long) mlen, nonce, k);
-    crypto_secretbox_open_easy(m2, c,
-                               (unsigned long long) mlen + crypto_secretbox_MACBYTES,
-                               nonce, k);
+    if (crypto_secretbox_open_easy(
+            m2, c, (unsigned long long) mlen + crypto_secretbox_MACBYTES, nonce,
+            k) != 0) {
+        printf("crypto_secretbox_open_easy() failed\n");
+    }
     printf("%d\n", memcmp(m, m2, mlen));
 
     for (i = 0; i < mlen + crypto_secretbox_MACBYTES - 1; i++) {
-        if (crypto_secretbox_open_easy(m2, c, (unsigned long long) i,
-                                       nonce, k) == 0) {
+        if (crypto_secretbox_open_easy(m2, c, (unsigned long long) i, nonce,
+                                       k) == 0) {
             printf("short open() should have failed\n");
             return 1;
         }
     }
     crypto_secretbox_detached(c, mac, m, (unsigned long long) mlen, nonce, k);
+    if (crypto_secretbox_open_detached(NULL, c, mac, (unsigned long long) mlen,
+                                       nonce, k) != 0) {
+        printf("crypto_secretbox_open_detached() with a NULL message pointer failed\n");
+    }
     if (crypto_secretbox_open_detached(m2, c, mac, (unsigned long long) mlen,
                                        nonce, k) != 0) {
         printf("crypto_secretbox_open_detached() failed\n");
@@ -42,12 +54,19 @@ int main(void)
     crypto_secretbox_easy(c, c, (unsigned long long) mlen, nonce, k);
     printf("%d\n", memcmp(m, c, mlen) == 0);
     printf("%d\n", memcmp(m, c + crypto_secretbox_MACBYTES, mlen) == 0);
-    if (crypto_secretbox_open_easy(c, c,
-                                   (unsigned long long) mlen + crypto_secretbox_MACBYTES,
-                                   nonce, k) != 0) {
+    if (crypto_secretbox_open_easy(
+            c, c, (unsigned long long) mlen + crypto_secretbox_MACBYTES, nonce,
+            k) != 0) {
         printf("crypto_secretbox_open_easy() failed\n");
     }
     printf("%d\n", memcmp(m, c, mlen));
 
+    sodium_free(m);
+    sodium_free(m2);
+    sodium_free(c);
+    sodium_free(nonce);
+    sodium_free(k);
+    sodium_free(mac);
+
     return 0;
 }
diff --git a/libsodium/test/default/shorthash.c b/libsodium/test/default/shorthash.c
index 9205740..e8fadec 100644
--- a/libsodium/test/default/shorthash.c
+++ b/libsodium/test/default/shorthash.c
@@ -4,7 +4,8 @@
 
 #define MAXLEN 64
 
-int main(void)
+int
+main(void)
 {
     unsigned char in[MAXLEN];
     unsigned char out[crypto_shorthash_BYTES];
@@ -15,7 +16,6 @@ int main(void)
     for (i = 0; i < crypto_shorthash_KEYBYTES; ++i) {
         k[i] = (unsigned char) i;
     }
-
     for (i = 0; i < MAXLEN; ++i) {
         in[i] = (unsigned char) i;
         crypto_shorthash(out, in, (unsigned long long) i, k);
@@ -28,8 +28,8 @@ int main(void)
     assert(crypto_shorthash_keybytes() > 0);
     assert(strcmp(crypto_shorthash_primitive(), "siphash24") == 0);
     assert(crypto_shorthash_bytes() == crypto_shorthash_siphash24_bytes());
-    assert(crypto_shorthash_keybytes()
-           == crypto_shorthash_siphash24_keybytes());
+    assert(crypto_shorthash_keybytes() ==
+           crypto_shorthash_siphash24_keybytes());
 
     return 0;
 }
diff --git a/libsodium/test/default/sign.c b/libsodium/test/default/sign.c
index 9d2fcd4..30a2882 100644
--- a/libsodium/test/default/sign.c
+++ b/libsodium/test/default/sign.c
@@ -1041,6 +1041,11 @@ static TestData test_data[] = {
 {{0xf5,0xe5,0x76,0x7c,0xf1,0x53,0x31,0x95,0x17,0x63,0x0f,0x22,0x68,0x76,0xb8,0x6c,0x81,0x60,0xcc,0x58,0x3b,0xc0,0x13,0x74,0x4c,0x6b,0xf2,0x55,0xf5,0xcc,0x0e,0xe5,},{0x27,0x81,0x17,0xfc,0x14,0x4c,0x72,0x34,0x0f,0x67,0xd0,0xf2,0x31,0x6e,0x83,0x86,0xce,0xff,0xbf,0x2b,0x24,0x28,0xc9,0xc5,0x1f,0xef,0x7c,0x59,0x7f,0x1d,0x42,0x6e,},{0x0a,0xab,0x4c,0x90,0x05,0x01,0xb3,0xe2,0x4d,0x7c,0xdf,0x46,0x63,0x32,0x6a,0x3a,0x87,0xdf,0x5e,0x48,0x43,0xb2,0xcb,0xdb,0x67,0xcb,0xf6,0xe4,0x60,0xfe,0xc3,0x50,0xaa,0x53,0x71,0xb1,0x50,0x8f,0x9f,0x45,0x28,0xec,0xea,0x23,0xc4,0x36,0xd9,0x4b,0x5e,0x8f,0xcd,0x4f,0x68,0x1e,0x30,0xa6,0xac,0x00,0xa9,0x70,0x4a,0x18,0x8a,0x03,},"\x08\xb8\xb2\xb7\x33\x42\x42\x43\x76\x0f\xe4\x26\xa4\xb5\x49\x08\x63\x21\x10\xa6\x6c\x2f\x65\x91\xea\xbd\x33\x45\xe3\xe4\xeb\x98\xfa\x6e\x26\x4b\xf0\x9e\xfe\x12\xee\x50\xf8\xf5\x4e\x9f\x77\xb1\xe3\x55\xf6\xc5\x05\x44\xe2\x3f\xb1\x43\x3d\xdf\x73\xbe\x84\xd8\x79\xde\x7c\x00\x46\xdc\x49\x96\xd9\xe7\x73\xf4\xbc\x9e\xfe\x57\x38\x82\x9a\xdb\x26\xc8\x1b\x37\xc9\x3a\x1b\x27\x0b\x20\x32\x9d\x65\x86\x75\xfc\x6e\xa5\x34\xe0\x81\x0a\x44\x32\x82\x6b\xf5\x8c\x94\x1e\xfb\x65\xd5\x7a\x33\x8b\xbd\x2e\x26\x64\x0f\x89\xff\xbc\x1a\x85\x8e\xfc\xb8\x55\x0e\xe3\xa5\xe1\x99\x8b\xd1\x77\xe9\x3a\x73\x63\xc3\x44\xfe\x6b\x19\x9e\xe5\xd0\x2e\x82\xd5\x22\xc4\xfe\xba\x15\x45\x2f\x80\x28\x8a\x82\x1a\x57\x91\x16\xec\x6d\xad\x2b\x3b\x31\x0d\xa9\x03\x40\x1a\xa6\x21\x00\xab\x5d\x1a\x36\x55\x3e\x06\x20\x3b\x33\x89\x0c\xc9\xb8\x32\xf7\x9e\xf8\x05\x60\xcc\xb9\xa3\x9c\xe7\x67\x96\x7e\xd6\x28\xc6\xad\x57\x3c\xb1\x16\xdb\xef\xef\xd7\x54\x99\xda\x96\xbd\x68\xa8\xa9\x7b\x92\x8a\x8b\xbc\x10\x3b\x66\x21\xfc\xde\x2b\xec\xa1\x23\x1d\x20\x6b\xe6\xcd\x9e\xc7\xaf\xf6\xf6\xc9\x4f\xcd\x72\x04\xed\x34\x55\xc6\x8c\x83\xf4\xa4\x1d\xa4\xaf\x2b\x74\xef\x5c\x53\xf1\xd8\xac\x70\xbd\xcb\x7e\xd1\x85\xce\x81\xbd\x84\x35\x9d\x44\x25\x4d\x95\x62\x9e\x98\x55\xa9\x4a\x7c\x19\x58\xd1\xf8\xad\xa5\xd0\x53\x2e\xd8\xa5\xaa\x3f\xb2\xd1\x7b\xa7\x0e\xb6\x24\x8e\x59\x4e\x1a\x22\x97\xac\xbb\xb3\x9d\x50\x2f\x1a\x8c\x6e\xb6\xf1\xce\x22\xb3\xde\x1a\x1f\x40\xcc\x24\x55\x41\x19\xa8\x31\xa9\xaa\xd6\x07\x9c\xad\x88\x42\x5d\xe6\xbd\xe1\xa9\x18\x7e\xbb\x60\x92\xcf\x67\xbf\x2b\x13\xfd\x65\xf2\x70\x88\xd7\x8b\x7e\x88\x3c\x87\x59\xd2\xc4\xf5\xc6\x5a\xdb\x75\x53\x87\x8a\xd5\x75\xf9\xfa\xd8\x78\xe8\x0a\x0c\x9b\xa6\x3b\xcb\xcc\x27\x32\xe6\x94\x85\xbb\xc9\xc9\x0b\xfb\xd6\x24\x81\xd9\x08\x9b\xec\xcf\x80\xcf\xe2\xdf\x16\xa2\xcf\x65\xbd\x92\xdd\x59\x7b\x07\x07\xe0\x91\x7a\xf4\x8b\xbb\x75\xfe\xd4\x13\xd2\x38\xf5\x55\x5a\x7a\x56\x9d\x80\xc3\x41\x4a\x8d\x08\x59\xdc\x65\xa4\x61\x28\xba\xb2\x7a\xf8\x7a\x71\x31\x4f\x31\x8c\x78\x2b\x23\xeb\xfe\x80\x8b\x82\xb0\xce\x26\x40\x1d\x2e\x22\xf0\x4d\x83\xd1\x25\x5d\xc5\x1a\xdd\xd3\xb7\x5a\x2b\x1a\xe0\x78\x45\x04\xdf\x54\x3a\xf8\x96\x9b\xe3\xea\x70\x82\xff\x7f\xc9\x88\x8c\x14\x4d\xa2\xaf\x58\x42\x9e\xc9\x60\x31\xdb\xca\xd3\xda\xd9\xaf\x0d\xcb\xaa\xaf\x26\x8c\xb8\xfc\xff\xea\xd9\x4f\x3c\x7c\xa4\x95\xe0\x56\xa9\xb4\x7a\xcd\xb7\x51\xfb\x73\xe6\x66\xc6\xc6\x55\xad\xe8\x29\x72\x97\xd0\x7a\xd1\xba\x5e\x43\xf1\xbc\xa3\x23\x01\x65\x13\x39\xe2\x29\x04\xcc\x8c\x42\xf5\x8c\x30\xc0\x4a\xaf\xdb\x03\x8d\xda\x08\x47\xdd\x98\x8d\xcd\xa6\xf3\xbf\xd1\x5c\x4b\x4c\x45\x25\x00\x4a\xa0\x6e\xef\xf8\xca\x61\x78\x3a\xac\xec\x57\xfb\x3d\x1f\x92\xb0\xfe\x2f\xd1\xa8\x5f\x67\x24\x51\x7b\x65\xe6\x14\xad\x68\x08\xd6\xf6\xee\x34\xdf\xf7\x31\x0f\xdc\x82\xae\xbf\xd9\x04\xb0\x1e\x1d\xc5\x4b\x29\x27\x09\x4b\x2d\xb6\x8d\x6f\x90\x3b\x68\x40\x1a\xde\xbf\x5a\x7e\x08\xd7\x8f\xf4\xef\x5d\x63\x65\x3a\x65\x04\x0c\xf9\xbf\xd4\xac\xa7\x98\x4a\x74\xd3\x71\x45\x98\x67\x80\xfc\x0b\x16\xac\x45\x16\x49\xde\x61\x88\xa7\xdb\xdf\x19\x1f\x64\xb5\xfc\x5e\x2a\xb4\x7b\x57\xf7\xf7\x27\x6c\xd4\x19\xc1\x7a\x3c\xa8\xe1\xb9\x39\xae\x49\xe4\x88\xac\xba\x6b\x96\x56\x10\xb5\x48\x01\x09\xc8\xb1\x7b\x80\xe1\xb7\xb7\x50\xdf\xc7\x59\x8d\x5d\x50\x11\xfd\x2d\xcc\x56\x00\xa3\x2e\xf5\xb5\x2a\x1e\xcc\x82\x0e\x30\x8a\xa3\x42\x72\x1a\xac\x09\x43\xbf\x66\x86\xb6\x4b\x25\x79\x37\x65\x04\xcc\xc4\x93\xd9\x7e\x6a\xed\x3f\xb0\xf9\xcd\x71\xa4\x3d\xd4\x97\xf0\x1f\x17\xc0\xe2\xcb\x37\x97\xaa\x2a\x2f\x25\x66\x56\x16\x8e\x6c\x49\x6a\xfc\x5f\xb9\x32\x46\xf6\xb1\x11\x63\x98\xa3\x46\xf1\xa6\x41\xf3\xb0\x41\xe9\x89\xf7\x91\x4f\x90\xcc\x2c\x7f\xff\x35\x78\x76\xe5\x06\xb5\x0d\x33\x4b\xa7\x7c\x22\x5b\xc3\x07\xba\x53\x71\x52\xf3\xf1\x61\x0e\x4e\xaf\xe5\x95\xf6\xd9\xd9\x0d\x11\xfa\xa9\x33\xa1\x5e\xf1\x36\x95\x46\x86\x8a\x7f\x3a\x45\xa9\x67\x68\xd4\x0f\xd9\xd0\x34\x12\xc0\x91\xc6\x31\x5c\xf4\xfd\xe7\xcb\x68\x60\x69\x37\x38\x0d\xb2\xea\xaa\x70\x7b\x4c\x41\x85\xc3\x2e\xdd\xcd\xd3\x06\x70\x5e\x4d\xc1\xff\xc8\x72\xee\xee\x47\x5a\x64\xdf\xac\x86\xab\xa4\x1c\x06\x18\x98\x3f\x87\x41\xc5\xef\x68\xd3\xa1\x01\xe8\xa3\xb8\xca\xc6\x0c\x90\x5c\x15\xfc\x91\x08\x40\xb9\x4c\x00\xa0\xb9\xd0"},
 };
 
+static const unsigned char non_canonical_p[32] = {
+    0xf6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
+    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x7f
+};
+
 static void add_l(unsigned char * const S)
 {
     static const unsigned char l[32] =
@@ -1048,37 +1053,37 @@ static void add_l(unsigned char * const S)
         0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10 };
-    unsigned char c = 0U;
-    unsigned int  i;
-    unsigned int  s;
 
-    for (i = 0U; i < 32U; i++) {
-        s = S[i] + l[i] + c;
-        S[i] = (unsigned char) s;
-        c = (s >> 8) & 1;
-    }
+    sodium_add(S, l, sizeof l);
 }
 
 int main(void)
 {
-    unsigned char extracted_seed[crypto_sign_ed25519_SEEDBYTES];
-    unsigned char extracted_pk[crypto_sign_ed25519_PUBLICKEYBYTES];
-    unsigned char sig[crypto_sign_BYTES];
-    unsigned char sm[1024 + crypto_sign_BYTES];
-    unsigned char m[1024];
-    unsigned char skpk[crypto_sign_SECRETKEYBYTES];
-    unsigned char pk[crypto_sign_PUBLICKEYBYTES];
-    unsigned char sk[crypto_sign_SECRETKEYBYTES];
-    char          pk_hex[crypto_sign_PUBLICKEYBYTES * 2 + 1];
-    char          sk_hex[crypto_sign_SECRETKEYBYTES * 2 + 1];
+    crypto_sign_state  st;
+    unsigned char      extracted_seed[crypto_sign_ed25519_SEEDBYTES];
+    unsigned char      extracted_pk[crypto_sign_ed25519_PUBLICKEYBYTES];
+    unsigned char      sig[crypto_sign_BYTES];
+    unsigned char      sm[1024 + crypto_sign_BYTES];
+    unsigned char      m[1024];
+    unsigned char      skpk[crypto_sign_SECRETKEYBYTES];
+    unsigned char      pk[crypto_sign_PUBLICKEYBYTES];
+    unsigned char      sk[crypto_sign_SECRETKEYBYTES];
+    char               sig_hex[crypto_sign_BYTES * 2 + 1];
+    char               pk_hex[crypto_sign_PUBLICKEYBYTES * 2 + 1];
+    char               sk_hex[crypto_sign_SECRETKEYBYTES * 2 + 1];
     unsigned long long siglen;
     unsigned long long smlen;
     unsigned long long mlen;
-    unsigned int i;
-    unsigned int j;
+    unsigned int       i;
+    unsigned int       j;
 
     memset(sig, 0, sizeof sig);
     for (i = 0U; i < (sizeof test_data) / (sizeof test_data[0]); i++) {
+#ifdef BROWSER_TESTS
+        if (i % 128U != 127U) {
+            continue;
+        }
+#endif
         memcpy(skpk, test_data[i].sk, crypto_sign_SEEDBYTES);
         memcpy(skpk + crypto_sign_SEEDBYTES, test_data[i].pk,
                crypto_sign_PUBLICKEYBYTES);
@@ -1096,10 +1101,17 @@ int main(void)
             continue;
         }
         add_l(sm + 32);
+#ifndef ED25519_COMPAT
+        if (crypto_sign_open(m, &mlen, sm, smlen, test_data[i].pk) != -1) {
+            printf("crypto_sign_open(): signature [%u] is malleable\n", i);
+            continue;
+        }
+#else
         if (crypto_sign_open(m, &mlen, sm, smlen, test_data[i].pk) != 0) {
             printf("crypto_sign_open(): signature [%u] is not malleable\n", i);
             continue;
         }
+#endif
         if (memcmp(test_data[i].m, m, (size_t)mlen) != 0) {
             printf("message verification failure: [%u]\n", i);
             continue;
@@ -1122,7 +1134,7 @@ int main(void)
             continue;
         }
         if (siglen == 0U || siglen > crypto_sign_BYTES) {
-            printf("detached signature has an unexpected length");
+            printf("detached signature has an unexpected length: [%u]\n", i);
             continue;
         }
         if (memcmp(test_data[i].sig, sig, crypto_sign_BYTES) != 0) {
@@ -1162,6 +1174,13 @@ int main(void)
         sig[63] ^= (j << 5);
     }
 
+#ifndef ED25519_COMPAT
+    if (crypto_sign_verify_detached(sig,
+                                    (const unsigned char *)test_data[i].m,
+                                    i, non_canonical_p) != -1) {
+        printf("detached signature verification with non-canonical key should have failed\n");
+    }
+#endif
     memset(pk, 0, sizeof pk);
     if (crypto_sign_verify_detached(sig,
                                     (const unsigned char *)test_data[i].m,
@@ -1169,6 +1188,97 @@ int main(void)
         printf("detached signature verification should have failed\n");
     }
 
+    memset(sig, 0xff, 32);
+    sig[0] = 0xdb;
+    if (crypto_sign_verify_detached(sig,
+                                    (const unsigned char *)test_data[i].m,
+                                    i, pk) != -1) {
+        printf("detached signature verification should have failed\n");
+    }
+    assert(crypto_sign_detached(sig, NULL,
+                                (const unsigned char *)test_data[i].m, i, skpk) == 0);
+
+    sodium_hex2bin(pk, crypto_sign_PUBLICKEYBYTES,
+                   "3eee494fb9eac773144e34b0c755affaf33ea782c0722e5ea8b150e61209ab36",
+                   crypto_sign_PUBLICKEYBYTES * 2, NULL, NULL, NULL);
+    if (crypto_sign_verify_detached(sig,
+                                    (const unsigned char *)test_data[i].m,
+                                    i, pk) != -1) {
+        printf("signature with an invalid public key should have failed\n");
+    }
+
+    sodium_hex2bin(pk, crypto_sign_PUBLICKEYBYTES,
+                   "0200000000000000000000000000000000000000000000000000000000000000",
+                   crypto_sign_PUBLICKEYBYTES * 2, NULL, NULL, NULL);
+    if (crypto_sign_verify_detached(sig,
+                                    (const unsigned char *)test_data[i].m,
+                                    i, pk) != -1) {
+        printf("signature with an invalid public key should have failed\n");
+    }
+
+    sodium_hex2bin(pk, crypto_sign_PUBLICKEYBYTES,
+                   "0500000000000000000000000000000000000000000000000000000000000000",
+                   crypto_sign_PUBLICKEYBYTES * 2, NULL, NULL, NULL);
+    if (crypto_sign_verify_detached(sig,
+                                    (const unsigned char *)test_data[i].m,
+                                    i, pk) != -1) {
+        printf("signature with an invalid public key should have failed\n");
+    }
+
+    if (crypto_sign_seed_keypair(pk, sk, keypair_seed) != 0) {
+        printf("crypto_sign_seed_keypair() failure\n");
+        return -1;
+    }
+    crypto_sign_init(&st);
+    crypto_sign_update(&st, (const unsigned char *)test_data[i].m, i);
+    crypto_sign_final_create(&st, sig, NULL, sk);
+    sodium_bin2hex(sig_hex, sizeof sig_hex, sig, sizeof sig);
+    printf("ed25519ph sig: [%s]\n", sig_hex);
+
+    crypto_sign_init(&st);
+    crypto_sign_update(&st, (const unsigned char *)test_data[i].m, i);
+    if (crypto_sign_final_verify(&st, sig, pk) != 0) {
+        printf("ed5519ph verification failed\n");
+    }
+    crypto_sign_init(&st);
+    crypto_sign_update(&st, (const unsigned char *)test_data[i].m, 0);
+    crypto_sign_update(&st, (const unsigned char *)test_data[i].m, i / 2);
+    crypto_sign_update(&st, ((const unsigned char *)test_data[i].m) + i / 2,
+                       i - i / 2);
+    if (crypto_sign_final_verify(&st, sig, pk) != 0) {
+        printf("ed5519ph verification failed\n");
+    }
+    sig[0]++;
+    if (crypto_sign_final_verify(&st, sig, pk) != -1) {
+        printf("ed5519ph verification could be forged\n");
+    }
+    sig[0]--;
+    pk[0]++;
+    if (crypto_sign_final_verify(&st, sig, pk) != -1) {
+        printf("ed5519ph verification could be forged\n");
+    }
+    sodium_hex2bin(sk, crypto_sign_SECRETKEYBYTES,
+                   "833fe62409237b9d62ec77587520911e9a759cec1d19755b7da901b96dca3d42",
+                   2 * crypto_sign_SECRETKEYBYTES / 2, NULL, NULL, NULL);
+    sodium_hex2bin(pk, crypto_sign_PUBLICKEYBYTES,
+                   "ec172b93ad5e563bf4932c70e1245034c35467ef2efd4d64ebf819683467e2bf",
+                   2 * crypto_sign_PUBLICKEYBYTES, NULL, NULL, NULL);
+    memcpy(sk + crypto_sign_SECRETKEYBYTES - crypto_sign_PUBLICKEYBYTES,
+           pk, crypto_sign_PUBLICKEYBYTES);
+    crypto_sign_init(&st);
+    crypto_sign_update(&st, (const unsigned char *) "abc", 3);
+    crypto_sign_final_create(&st, sig, &siglen, sk);
+    if (siglen == 0U || siglen > crypto_sign_BYTES) {
+        printf("ed25519ph signature has an unexpected length\n");
+    }
+    sodium_bin2hex(sig_hex, sizeof sig_hex, sig, sizeof sig);
+    printf("ed25519ph tv sig: [%s]\n", sig_hex);
+
+    crypto_sign_init(&st);
+    crypto_sign_update(&st, (const unsigned char *) "abc", 3);
+    if (crypto_sign_final_verify(&st, sig, pk) != 0) {
+        printf("ed25519ph verification failed\n");
+    }
     if (crypto_sign_keypair(pk, sk) != 0) {
         printf("crypto_sign_keypair() failure\n");
     }
@@ -1195,13 +1305,20 @@ int main(void)
     assert(crypto_sign_seedbytes() > 0U);
     assert(crypto_sign_publickeybytes() > 0U);
     assert(crypto_sign_secretkeybytes() > 0U);
+    assert(crypto_sign_messagebytes_max() > 0U);
     assert(strcmp(crypto_sign_primitive(), "ed25519") == 0);
     assert(crypto_sign_bytes() == crypto_sign_ed25519_bytes());
     assert(crypto_sign_seedbytes() == crypto_sign_ed25519_seedbytes());
+    assert(crypto_sign_messagebytes_max() == crypto_sign_ed25519_messagebytes_max());
     assert(crypto_sign_publickeybytes()
            == crypto_sign_ed25519_publickeybytes());
     assert(crypto_sign_secretkeybytes()
            == crypto_sign_ed25519_secretkeybytes());
+    assert(crypto_sign_statebytes() == crypto_sign_ed25519ph_statebytes());
+
+#ifdef ED25519_NONDETERMINISTIC
+    exit(0);
+#endif
 
     return 0;
 }
diff --git a/libsodium/test/default/sodium_core.c b/libsodium/test/default/sodium_core.c
index 89599ab..a3985b0 100644
--- a/libsodium/test/default/sodium_core.c
+++ b/libsodium/test/default/sodium_core.c
@@ -2,13 +2,41 @@
 #define TEST_NAME "sodium_core"
 #include "cmptest.h"
 
-int main(void)
+static void
+misuse_handler(void)
 {
-    printf("%d\n", sodium_init());
+    printf("misuse_handler()\n");
+    exit(0);
+}
+
+int
+main(void)
+{
+    sodium_set_misuse_handler(NULL);
+    sodium_set_misuse_handler(misuse_handler);
+    sodium_set_misuse_handler(NULL);
+
+    assert(sodium_init() == 1);
+
+    (void) sodium_runtime_has_neon();
+    (void) sodium_runtime_has_sse2();
+    (void) sodium_runtime_has_sse3();
+    (void) sodium_runtime_has_ssse3();
+    (void) sodium_runtime_has_sse41();
+    (void) sodium_runtime_has_avx();
+    (void) sodium_runtime_has_avx2();
+    (void) sodium_runtime_has_avx512f();
+    (void) sodium_runtime_has_pclmul();
+    (void) sodium_runtime_has_aesni();
+    (void) sodium_runtime_has_rdrand();
 
-    (void)sodium_runtime_has_neon();
-    (void)sodium_runtime_has_sse2();
-    (void)sodium_runtime_has_sse3();
+    sodium_set_misuse_handler(misuse_handler);
+#ifndef __EMSCRIPTEN__
+    sodium_misuse();
+    printf("Misuse handler returned\n");
+#else
+    printf("misuse_handler()\n");
+#endif
 
     return 0;
 }
diff --git a/libsodium/test/default/sodium_utils.c b/libsodium/test/default/sodium_utils.c
index 89274de..844e16c 100644
--- a/libsodium/test/default/sodium_utils.c
+++ b/libsodium/test/default/sodium_utils.c
@@ -1,16 +1,23 @@
-
 #define TEST_NAME "sodium_utils"
 #include "cmptest.h"
 
-int main(void)
+int
+main(void)
 {
-    unsigned char buf1[1000];
-    unsigned char buf2[1000];
-    char buf3[33];
-    unsigned char buf4[4];
-    const char *hex;
-    const char *hex_end;
-    size_t bin_len;
+    unsigned char  buf_add[1000];
+    unsigned char  buf1[1000];
+    unsigned char  buf2[1000];
+    unsigned char  buf1_rev[1000];
+    unsigned char  buf2_rev[1000];
+    unsigned char  nonce[24];
+    char           nonce_hex[49];
+    unsigned char *bin_padded;
+    size_t         bin_len, bin_len2;
+    size_t         bin_padded_len;
+    size_t         bin_padded_maxlen;
+    size_t         blocksize;
+    unsigned int   i;
+    unsigned int   j;
 
     randombytes_buf(buf1, sizeof buf1);
     memcpy(buf2, buf1, sizeof buf2);
@@ -22,43 +29,196 @@ int main(void)
     printf("%d\n", sodium_memcmp(buf1, buf2, 0U));
     sodium_memzero(buf2, sizeof buf2 / 2);
     printf("%d\n", sodium_memcmp(buf1, buf2, sizeof buf1));
+    printf("%d\n", sodium_memcmp(buf1, guard_page, 0U));
+    printf("%d\n", sodium_memcmp(guard_page, buf2, 0U));
+    printf("%d\n", sodium_memcmp(guard_page, guard_page, 0U));
+    sodium_memzero(guard_page, 0U);
+
+    memset(nonce, 0, sizeof nonce);
+    sodium_increment(nonce, sizeof nonce);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    memset(nonce, 255, sizeof nonce);
+    sodium_increment(nonce, sizeof nonce);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    nonce[1] = 1U;
+    sodium_increment(nonce, sizeof nonce);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    nonce[1] = 0U;
+    sodium_increment(nonce, sizeof nonce);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    nonce[0] = 255U;
+    nonce[2] = 255U;
+    sodium_increment(nonce, sizeof nonce);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    for (i = 0U; i < 1000U; i++) {
+        bin_len = (size_t) randombytes_uniform(sizeof buf1);
+        randombytes_buf(buf1, bin_len);
+        randombytes_buf(buf2, bin_len);
+        for (j = 0U; j < bin_len; j++) {
+            buf1_rev[bin_len - 1 - j] = buf1[j];
+            buf2_rev[bin_len - 1 - j] = buf2[j];
+        }
+        if (memcmp(buf1_rev, buf2_rev, bin_len) *
+            sodium_compare(buf1, buf2, bin_len) < 0) {
+            printf("sodium_compare() failure with length=%u\n",
+                   (unsigned int) bin_len);
+        }
+        memcpy(buf1, buf2, bin_len);
+        if (sodium_compare(buf1, buf2, bin_len)) {
+            printf("sodium_compare() equality failure with length=%u\n",
+                   (unsigned int) bin_len);
+        }
+    }
+    printf("%d\n", sodium_compare(buf1, NULL, 0U));
+    printf("%d\n", sodium_compare(NULL, buf1, 0U));
+    memset(buf1, 0, sizeof buf1);
+    if (sodium_is_zero(buf1, sizeof buf1) != 1) {
+        printf("sodium_is_zero() failed\n");
+    }
+    for (i = 0U; i < sizeof buf1; i++) {
+        buf1[i]++;
+        if (sodium_is_zero(buf1, sizeof buf1) != 0) {
+            printf("sodium_is_zero() failed\n");
+        }
+        buf1[i]--;
+    }
+    bin_len = randombytes_uniform(sizeof buf1);
+    randombytes_buf(buf1, bin_len);
+    memcpy(buf2, buf1, bin_len);
+    memset(buf_add, 0, bin_len);
+    j = randombytes_uniform(10000);
+    for (i = 0U; i < j; i++) {
+        sodium_increment(buf1, bin_len);
+        sodium_increment(buf_add, bin_len);
+    }
+    sodium_add(buf2, buf_add, bin_len);
+    if (sodium_compare(buf1, buf2, bin_len) != 0) {
+        printf("sodium_add() failed\n");
+    }
+    bin_len = randombytes_uniform(sizeof buf1);
+    randombytes_buf(buf1, bin_len);
+    memcpy(buf2, buf1, bin_len);
+    memset(buf_add, 0xff, bin_len);
+    sodium_increment(buf2, bin_len);
+    sodium_increment(buf2, 0U);
+    sodium_add(buf2, buf_add, bin_len);
+    sodium_add(buf2, buf_add, 0U);
+    if (sodium_compare(buf1, buf2, bin_len) != 0) {
+        printf("sodium_add() failed\n");
+    }
+    for (i = 0U; i < 1000U; i++) {
+        randombytes_buf(buf1, bin_len);
+        randombytes_buf(buf2, bin_len);
+        sodium_add(buf1, buf2, bin_len);
+        sodium_sub(buf1, buf2, bin_len);
+        sodium_sub(buf1, buf2, 0U);
+        if (sodium_is_zero(buf1, bin_len) &&
+            !sodium_is_zero(buf1, bin_len)) {
+            printf("sodium_sub() failed\n");
+        }
+        sodium_sub(buf1, buf1, bin_len);
+        if (!sodium_is_zero(buf1, bin_len)) {
+            printf("sodium_sub() failed\n");
+        }
+    }
+    assert(sizeof nonce >= 24U);
+    memset(nonce, 0xfe, 24U);
+    memset(nonce, 0xff, 6U);
+    sodium_increment(nonce, 8U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    memset(nonce, 0xfe, 24U);
+    memset(nonce, 0xff, 10U);
+    sodium_increment(nonce, 12U);
     printf("%s\n",
-           sodium_bin2hex(buf3, 33U, (const unsigned char *)"0123456789ABCDEF",
-                          16U));
-    hex = "Cafe : 6942";
-    sodium_hex2bin(buf4, sizeof buf4, hex, strlen(hex), ": ", &bin_len, &hex_end);
-    printf("%lu:%02x%02x%02x%02x\n", (unsigned long)bin_len, buf4[0], buf4[1],
-           buf4[2], buf4[3]);
-    printf("dt1: %ld\n", (long) (hex_end - hex));
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    memset(nonce, 0xff, 22U);
+    sodium_increment(nonce, 24U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
 
-    hex = "Cafe : 6942";
-    sodium_hex2bin(buf4, sizeof buf4, hex, strlen(hex), ": ", &bin_len, NULL);
-    printf("%lu:%02x%02x%02x%02x\n", (unsigned long)bin_len, buf4[2], buf4[3],
-           buf4[2], buf4[3]);
+    assert(sizeof nonce >= 24U);
+    memset(nonce, 0xfe, 24U);
+    memset(nonce, 0xff, 6U);
+    sodium_add(nonce, nonce, 7U);
+    sodium_add(nonce, nonce, 8U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    memset(nonce, 0xfe, 24U);
+    memset(nonce, 0xff, 10U);
+    sodium_add(nonce, nonce, 11U);
+    sodium_add(nonce, nonce, 12U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    memset(nonce, 0xff, 22U);
+    sodium_add(nonce, nonce, 23U);
+    sodium_add(nonce, nonce, 24U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    sodium_add(nonce, nonce, 0U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    sodium_add(nonce, guard_page, 0U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    sodium_add(guard_page, nonce, 0U);
 
-    hex = "deadbeef";
-    if (sodium_hex2bin(buf1, 1U, hex, 8U, NULL, &bin_len, &hex_end) != -1) {
-        printf("sodium_hex2bin() overflow not detected\n");
-    }
-    printf("dt2: %ld\n", (long) (hex_end - hex));
+    sodium_sub(nonce, nonce, 0U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    sodium_sub(nonce, guard_page, 0U);
+    printf("%s\n",
+           sodium_bin2hex(nonce_hex, sizeof nonce_hex, nonce, sizeof nonce));
+    sodium_sub(guard_page, nonce, 0U);
 
-    hex = "de:ad:be:eff";
-    if (sodium_hex2bin(buf1, 4U, hex, 12U, ":", &bin_len, &hex_end) != -1) {
-        printf("sodium_hex2bin() with an odd input length and a short output buffer\n");
-    }
-    printf("dt3: %ld\n", (long) (hex_end - hex));
+    randombytes_buf(buf1, 64U);
+    randombytes_buf(buf2, 64U);
+    memset(buf_add, 0, 64U);
+    sodium_add(buf_add, buf1, 64U);
+    assert(!sodium_is_zero(buf_add, 64U));
+    sodium_add(buf_add, buf2, 64U);
+    assert(!sodium_is_zero(buf_add, 64U));
+    sodium_sub(buf_add, buf1, 64U);
+    assert(!sodium_is_zero(buf_add, 64U));
+    sodium_sub(buf_add, buf2, 64U);
+    assert(sodium_is_zero(buf_add, 64U));
 
-    hex = "de:ad:be:eff";
-    if (sodium_hex2bin(buf1, sizeof buf1, hex, 12U, ":", &bin_len, &hex_end) != 0) {
-        printf("sodium_hex2bin() with an odd input length\n");
-    }
-    printf("dt4: %ld\n", (long) (hex_end - hex));
+    for (i = 0; i < 2000U; i++) {
+        bin_len = randombytes_uniform(200U);
+        blocksize = 1U + randombytes_uniform(500U);
+        bin_padded_maxlen = bin_len + (blocksize - bin_len % blocksize);
+        bin_padded = (unsigned char *) sodium_malloc(bin_padded_maxlen);
+        randombytes_buf(bin_padded, bin_padded_maxlen);
 
-    hex = "de:ad:be:eff";
-    if (sodium_hex2bin(buf1, sizeof buf1, hex, 13U, ":", &bin_len, &hex_end) != 0) {
-        printf("sodium_hex2bin() with an odd input length\n");
+        assert(sodium_pad(&bin_padded_len, bin_padded, bin_len,
+                          blocksize, bin_padded_maxlen - 1U) == -1);
+        assert(sodium_pad(NULL, bin_padded, bin_len,
+                          blocksize, bin_padded_maxlen + 1U) == 0);
+        assert(sodium_pad(&bin_padded_len, bin_padded, bin_len,
+                          blocksize, bin_padded_maxlen + 1U) == 0);
+        assert(sodium_pad(&bin_padded_len, bin_padded, bin_len,
+                          0U, bin_padded_maxlen) == -1);
+        assert(sodium_pad(&bin_padded_len, bin_padded, bin_len,
+                          blocksize, bin_padded_maxlen) == 0);
+        assert(bin_padded_len == bin_padded_maxlen);
+
+        assert(sodium_unpad(&bin_len2, bin_padded, bin_padded_len,
+                            bin_padded_len + 1U) == -1);
+        assert(sodium_unpad(&bin_len2, bin_padded, bin_padded_len,
+                            0U) == -1);
+        assert(sodium_unpad(&bin_len2, bin_padded, bin_padded_len,
+                            blocksize) == 0);
+        assert(bin_len2 == bin_len);
+
+        sodium_free(bin_padded);
     }
-    printf("dt5: %ld\n", (long) (hex_end - hex));
+
+    sodium_stackzero(512);
 
     return 0;
 }
diff --git a/libsodium/test/default/sodium_utils2.c b/libsodium/test/default/sodium_utils2.c
index 7336878..a1801b1 100644
--- a/libsodium/test/default/sodium_utils2.c
+++ b/libsodium/test/default/sodium_utils2.c
@@ -1,4 +1,5 @@
 
+#include <stdlib.h>
 #include <sys/types.h>
 
 #include <limits.h>
@@ -11,31 +12,44 @@
 # warning The sodium_utils2 test is expected to fail with address sanitizer
 #endif
 
-static void segv_handler(int sig)
+#undef sodium_malloc
+#undef sodium_free
+#undef sodium_allocarray
+
+__attribute__((noreturn)) static void
+segv_handler(int sig)
 {
+    (void) sig;
+
     printf("Intentional segfault / bus error caught\n");
     printf("OK\n");
-#ifdef SIGSEGV
+#ifdef SIG_DFL
+# ifdef SIGSEGV
     signal(SIGSEGV, SIG_DFL);
-#endif
-#ifdef SIGBUS
+# endif
+# ifdef SIGBUS
     signal(SIGBUS, SIG_DFL);
-#endif
-#ifdef SIGABRT
+# endif
+# ifdef SIGABRT
     signal(SIGABRT, SIG_DFL);
+# endif
 #endif
     exit(0);
 }
 
-int main(void)
+int
+main(void)
 {
-    void *buf;
-    size_t size;
+    void *       buf;
+    size_t       size;
     unsigned int i;
 
     if (sodium_malloc(SIZE_MAX - 1U) != NULL) {
         return 1;
     }
+    if (sodium_malloc(0U) == NULL) {
+        return 1;
+    }
     if (sodium_allocarray(SIZE_MAX / 2U + 1U, SIZE_MAX / 2U) != NULL) {
         return 1;
     }
@@ -50,34 +64,42 @@ int main(void)
     sodium_free(sodium_malloc(0U));
     sodium_free(NULL);
     for (i = 0U; i < 10000U; i++) {
-        size = randombytes_uniform(100000U);
-        buf = sodium_malloc(size);
+        size = 1U + randombytes_uniform(100000U);
+        buf  = sodium_malloc(size);
         assert(buf != NULL);
         memset(buf, i, size);
         sodium_mprotect_noaccess(buf);
         sodium_free(buf);
     }
     printf("OK\n");
-
-#ifdef SIGSEGV
+#ifdef SIG_DFL
+# ifdef SIGSEGV
     signal(SIGSEGV, segv_handler);
-#endif
-#ifdef SIGBUS
+# endif
+# ifdef SIGBUS
     signal(SIGBUS, segv_handler);
-#endif
-#ifdef SIGABRT
+# endif
+# ifdef SIGABRT
     signal(SIGABRT, segv_handler);
+# endif
 #endif
-    size = randombytes_uniform(100000U);
-    buf = sodium_malloc(size);
+    size = 1U + randombytes_uniform(100000U);
+    buf  = sodium_malloc(size);
     assert(buf != NULL);
+
+/* old versions of asan emit a warning because they don't support mlock*() */
+#ifndef __SANITIZE_ADDRESS__
     sodium_mprotect_readonly(buf);
     sodium_mprotect_readwrite(buf);
-#ifndef __EMSCRIPTEN__
-    sodium_memzero(((unsigned char *)buf) + size, 1U);
+#endif
+
+#if defined(HAVE_CATCHABLE_SEGV) && !defined(__EMSCRIPTEN__) && !defined(__SANITIZE_ADDRESS__)
+    sodium_memzero(((unsigned char *) buf) + size, 1U);
     sodium_mprotect_noaccess(buf);
     sodium_free(buf);
     printf("Overflow not caught\n");
+#else
+    segv_handler(0);
 #endif
     return 0;
 }
diff --git a/libsodium/test/default/sodium_utils3.c b/libsodium/test/default/sodium_utils3.c
index af0c694..a39f0ee 100644
--- a/libsodium/test/default/sodium_utils3.c
+++ b/libsodium/test/default/sodium_utils3.c
@@ -1,4 +1,5 @@
 
+#include <stdlib.h>
 #include <sys/types.h>
 
 #include <limits.h>
@@ -11,46 +12,61 @@
 # warning The sodium_utils3 test is expected to fail with address sanitizer
 #endif
 
-static void segv_handler(int sig)
+__attribute__((noreturn)) static void
+segv_handler(int sig)
 {
+    (void) sig;
+
     printf("Intentional segfault / bus error caught\n");
     printf("OK\n");
-#ifdef SIGSEGV
+#ifdef SIG_DFL
+# ifdef SIGSEGV
     signal(SIGSEGV, SIG_DFL);
-#endif
-#ifdef SIGBUS
+# endif
+# ifdef SIGBUS
     signal(SIGBUS, SIG_DFL);
-#endif
-#ifdef SIGABRT
+# endif
+# ifdef SIGABRT
     signal(SIGABRT, SIG_DFL);
+# endif
 #endif
     exit(0);
 }
 
-int main(void)
+int
+main(void)
 {
-    void *buf;
+    void * buf;
     size_t size;
 
-#ifdef SIGSEGV
+#ifdef SIG_DFL
+# ifdef SIGSEGV
     signal(SIGSEGV, segv_handler);
-#endif
-#ifdef SIGBUS
+# endif
+# ifdef SIGBUS
     signal(SIGBUS, segv_handler);
-#endif
-#ifdef SIGABRT
+# endif
+# ifdef SIGABRT
     signal(SIGABRT, segv_handler);
+# endif
 #endif
-    size = randombytes_uniform(100000U);
-    buf = sodium_malloc(size);
+    size = 1U + randombytes_uniform(100000U);
+    buf  = sodium_malloc(size);
     assert(buf != NULL);
+
+/* old versions of asan emit a warning because they don't support mlock*() */
+#ifndef __SANITIZE_ADDRESS__
     sodium_mprotect_noaccess(buf);
     sodium_mprotect_readwrite(buf);
-#ifndef __EMSCRIPTEN__
-    sodium_memzero(((unsigned char *)buf) - 8, 8U);
+#endif
+
+#if defined(HAVE_CATCHABLE_SEGV) && !defined(__EMSCRIPTEN__) && !defined(__SANITIZE_ADDRESS__)
+    sodium_memzero(((unsigned char *) buf) - 8, 8U);
     sodium_mprotect_readonly(buf);
     sodium_free(buf);
     printf("Underflow not caught\n");
+#else
+    segv_handler(0);
 #endif
     return 0;
 }
diff --git a/libsodium/test/default/sodium_version.c b/libsodium/test/default/sodium_version.c
index d32fd79..2a8fddb 100644
--- a/libsodium/test/default/sodium_version.c
+++ b/libsodium/test/default/sodium_version.c
@@ -2,11 +2,17 @@
 #define TEST_NAME "sodium_version"
 #include "cmptest.h"
 
-int main(void)
+int
+main(void)
 {
     printf("%d\n", sodium_version_string() != NULL);
     printf("%d\n", sodium_library_version_major() > 0);
     printf("%d\n", sodium_library_version_minor() >= 0);
+#ifdef SODIUM_LIBRARY_MINIMAL
+    assert(sodium_library_minimal() == 1);
+#else
+    assert(sodium_library_minimal() == 0);
+#endif
 
     return 0;
 }
diff --git a/libsodium/test/default/stream.c b/libsodium/test/default/stream.c
index b278697..87ef371 100644
--- a/libsodium/test/default/stream.c
+++ b/libsodium/test/default/stream.c
@@ -2,47 +2,83 @@
 #define TEST_NAME "stream"
 #include "cmptest.h"
 
-unsigned char firstkey[32]
-    = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85, 0xd4, 0x62, 0xcd, 0x51,
-        0x19, 0x7a, 0x9a, 0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac, 0x64,
-        0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08, 0x44, 0xf6, 0x83, 0x89 };
+static const unsigned char firstkey[32] = {
+    0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,
+    0xd4, 0x62, 0xcd, 0x51, 0x19, 0x7a, 0x9a,
+    0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac,
+    0x64, 0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08,
+    0x44, 0xf6, 0x83, 0x89
+};
 
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+static const unsigned char nonce[24] = {
+    0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+    0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+    0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+    0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37
+};
 
-unsigned char output[4194304];
-
-unsigned char h[32];
-
-int main(void)
+int
+main(void)
 {
-    int i;
+    unsigned char  h[32];
+    char          *hex;
+    unsigned char *output;
+    size_t         sizeof_hex = 17 * 64 * 2 + 1;
+    size_t         sizeof_output = 4194304;
+    int            i;
 
-    crypto_stream(output, sizeof output, nonce, firstkey);
-    crypto_hash_sha256(h, output, sizeof output);
+    output = (unsigned char *) sodium_malloc(sizeof_output);
+    hex = (char *) sodium_malloc(sizeof_hex);
 
-    for (i = 0; i < 32; ++i)
-        printf("%02x", h[i]);
-    printf("\n");
+    randombytes_buf(output, sizeof_output);
+    crypto_stream(output, sizeof_output, nonce, firstkey);
+    crypto_hash_sha256(h, output, sizeof_output);
+    sodium_bin2hex(hex, sizeof_hex, h, sizeof h);
+    printf("%s\n", hex);
 
-    assert(sizeof output > 4000);
+    assert(sizeof_output > 4000);
 
     crypto_stream_xsalsa20_xor_ic(output, output, 4000, nonce, 0U, firstkey);
-    for (i = 0; i < 4000; ++i)
+    for (i = 0; i < 4000; i++) {
         assert(output[i] == 0);
-
+    }
     crypto_stream_xsalsa20_xor_ic(output, output, 4000, nonce, 1U, firstkey);
-    crypto_hash_sha256(h, output, sizeof output);
-    for (i = 0; i < 32; ++i)
-        printf("%02x", h[i]);
-    printf("\n");
+    crypto_hash_sha256(h, output, sizeof_output);
+    sodium_bin2hex(hex, sizeof_hex, h, sizeof h);
+    printf("%s\n", hex);
+
+    for (i = 0; i < 64; i++) {
+        memset(output, i, 64);
+        crypto_stream(output, (int) (i & 0xff), nonce, firstkey);
+        sodium_bin2hex(hex, sizeof_hex, output, 64);
+        printf("%s\n", hex);
+    }
+
+    memset(output, 0, 192);
+    crypto_stream_xsalsa20_xor_ic(output, output, 192, nonce,
+                                  (1ULL << 32) - 1ULL, firstkey);
+    sodium_bin2hex(hex, 192 * 2 + 1, output, 192);
+    printf("%s\n", hex);
+
+    for (i = 16; i > 0; i--) {
+        memset(output, 0, 17 * 64);
+        crypto_stream_xsalsa20_xor_ic(output, output, 17 * 64, nonce,
+                                      (1ULL << 32) - (unsigned long long) i,
+                                      firstkey);
+        sodium_bin2hex(hex, 2 * 17 * 64 + 1, output, 17 * 64);
+        printf("%s\n", hex);
+    }
+
+    sodium_free(hex);
+    sodium_free(output);
 
     assert(crypto_stream_keybytes() > 0U);
     assert(crypto_stream_noncebytes() > 0U);
+    assert(crypto_stream_messagebytes_max() > 0U);
     assert(strcmp(crypto_stream_primitive(), "xsalsa20") == 0);
     assert(crypto_stream_keybytes() == crypto_stream_xsalsa20_keybytes());
     assert(crypto_stream_noncebytes() == crypto_stream_xsalsa20_noncebytes());
+    assert(crypto_stream_messagebytes_max() == crypto_stream_xsalsa20_messagebytes_max());
 
     return 0;
 }
diff --git a/libsodium/test/default/stream2.c b/libsodium/test/default/stream2.c
index c50bbcc..1e178a4 100644
--- a/libsodium/test/default/stream2.c
+++ b/libsodium/test/default/stream2.c
@@ -2,41 +2,58 @@
 #define TEST_NAME "stream2"
 #include "cmptest.h"
 
-unsigned char secondkey[32]
-    = { 0xdc, 0x90, 0x8d, 0xda, 0x0b, 0x93, 0x44, 0xa9, 0x53, 0x62, 0x9b,
-        0x73, 0x38, 0x20, 0x77, 0x88, 0x80, 0xf3, 0xce, 0xb4, 0x21, 0xbb,
-        0x61, 0xb9, 0x1c, 0xbd, 0x4c, 0x3e, 0x66, 0x25, 0x6c, 0xe4 };
+static const unsigned char secondkey[32] = {
+    0xdc, 0x90, 0x8d, 0xda, 0x0b, 0x93, 0x44,
+    0xa9, 0x53, 0x62, 0x9b, 0x73, 0x38, 0x20,
+    0x77, 0x88, 0x80, 0xf3, 0xce, 0xb4, 0x21,
+    0xbb, 0x61, 0xb9, 0x1c, 0xbd, 0x4c, 0x3e,
+    0x66, 0x25, 0x6c, 0xe4
+};
 
-unsigned char noncesuffix[8]
-    = { 0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+static const unsigned char noncesuffix[8] = {
+    0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37
+};
 
-unsigned char output[4194304];
 
-unsigned char h[32];
 
-int main(void)
+int
+main(void)
 {
-    int i;
-    crypto_stream_salsa20(output, sizeof output, noncesuffix, secondkey);
-    crypto_hash_sha256(h, output, sizeof output);
-    for (i = 0; i < 32; ++i)
-        printf("%02x", h[i]);
-    printf("\n");
-
-    assert(sizeof output > 4000);
-
-    crypto_stream_salsa20_xor_ic(output, output, 4000, noncesuffix, 0U, secondkey);
-    for (i = 0; i < 4000; ++i)
+    unsigned char *output;
+    char          *hex;
+    unsigned char  h[32];
+    size_t         sizeof_hex = 32 * 2 + 1;
+    size_t         sizeof_output = 4194304;
+    int            i;
+
+    output = (unsigned char *) sodium_malloc(sizeof_output);
+    hex = (char *) sodium_malloc(sizeof_hex);
+
+    crypto_stream_salsa20(output, sizeof_output, noncesuffix, secondkey);
+    crypto_hash_sha256(h, output, sizeof_output);
+    sodium_bin2hex(hex, sizeof_hex, h, sizeof h);
+    printf("%s\n", hex);
+
+    assert(sizeof_output > 4000);
+
+    crypto_stream_salsa20_xor_ic(output, output, 4000, noncesuffix, 0U,
+                                 secondkey);
+    for (i = 0; i < 4000; i++) {
         assert(output[i] == 0);
+    }
+
+    crypto_stream_salsa20_xor_ic(output, output, 4000, noncesuffix, 1U,
+                                 secondkey);
+    crypto_hash_sha256(h, output, sizeof_output);
+    sodium_bin2hex(hex, sizeof_hex, h, sizeof h);
+    printf("%s\n", hex);
 
-    crypto_stream_salsa20_xor_ic(output, output, 4000, noncesuffix, 1U, secondkey);
-    crypto_hash_sha256(h, output, sizeof output);
-    for (i = 0; i < 32; ++i)
-        printf("%02x", h[i]);
-    printf("\n");
+    sodium_free(hex);
+    sodium_free(output);
 
     assert(crypto_stream_salsa20_keybytes() > 0U);
     assert(crypto_stream_salsa20_noncebytes() > 0U);
+    assert(crypto_stream_salsa20_messagebytes_max() > 0U);
 
     return 0;
 }
diff --git a/libsodium/test/default/stream3.c b/libsodium/test/default/stream3.c
index d121228..4ed646f 100644
--- a/libsodium/test/default/stream3.c
+++ b/libsodium/test/default/stream3.c
@@ -2,25 +2,28 @@
 #define TEST_NAME "stream3"
 #include "cmptest.h"
 
-unsigned char firstkey[32]
-    = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85, 0xd4, 0x62, 0xcd, 0x51,
-        0x19, 0x7a, 0x9a, 0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac, 0x64,
-        0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08, 0x44, 0xf6, 0x83, 0x89 };
+static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,
+                                      0xd4, 0x62, 0xcd, 0x51, 0x19, 0x7a, 0x9a,
+                                      0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac,
+                                      0x64, 0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08,
+                                      0x44, 0xf6, 0x83, 0x89 };
 
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                   0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                   0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                   0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
 
-unsigned char rs[32];
+static unsigned char rs[32];
 
-int main(void)
+int
+main(void)
 {
     int i;
 
     crypto_stream(rs, 32, nonce, firstkey);
 
     for (i = 0; i < 32; ++i) {
-        printf(",0x%02x", (unsigned int)rs[i]);
+        printf(",0x%02x", (unsigned int) rs[i]);
         if (i % 8 == 7)
             printf("\n");
     }
diff --git a/libsodium/test/default/stream4.c b/libsodium/test/default/stream4.c
index 37d8203..38f43f8 100644
--- a/libsodium/test/default/stream4.c
+++ b/libsodium/test/default/stream4.c
@@ -2,41 +2,45 @@
 #define TEST_NAME "stream4"
 #include "cmptest.h"
 
-unsigned char firstkey[32]
-    = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85, 0xd4, 0x62, 0xcd, 0x51,
-        0x19, 0x7a, 0x9a, 0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac, 0x64,
-        0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08, 0x44, 0xf6, 0x83, 0x89 };
-
-unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6, 0x2b, 0x73,
-                            0xcd, 0x62, 0xbd, 0xa8, 0x75, 0xfc, 0x73, 0xd6,
-                            0x82, 0x19, 0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
-
-unsigned char m[163]
-    = { 0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
-        0,    0,    0,    0,    0,    0,    0,    0,    0xbe, 0x07, 0x5f, 0xc5,
-        0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16, 0xeb, 0xeb, 0x0c, 0x7b,
-        0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4, 0x4b, 0x66, 0x84, 0x9b,
-        0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf, 0x33, 0xbd, 0x75, 0x1a,
-        0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29, 0x6c, 0xdc, 0x3c, 0x01,
-        0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce, 0x31, 0x4a, 0xdb, 0x31,
-        0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d, 0xce, 0xea, 0x3a, 0x7f,
-        0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a, 0xd6, 0xb1, 0x31, 0x8a,
-        0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde, 0x04, 0x89, 0x77, 0xeb,
-        0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c, 0x60, 0x90, 0x2e, 0x52,
-        0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40, 0xe0, 0x82, 0xf9, 0x37,
-        0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05 };
-
-unsigned char c[163];
-
-int main(void)
+static unsigned char firstkey[32] = { 0x1b, 0x27, 0x55, 0x64, 0x73, 0xe9, 0x85,
+                                      0xd4, 0x62, 0xcd, 0x51, 0x19, 0x7a, 0x9a,
+                                      0x46, 0xc7, 0x60, 0x09, 0x54, 0x9e, 0xac,
+                                      0x64, 0x74, 0xf2, 0x06, 0xc4, 0xee, 0x08,
+                                      0x44, 0xf6, 0x83, 0x89 };
+
+static unsigned char nonce[24] = { 0x69, 0x69, 0x6e, 0xe9, 0x55, 0xb6,
+                                   0x2b, 0x73, 0xcd, 0x62, 0xbd, 0xa8,
+                                   0x75, 0xfc, 0x73, 0xd6, 0x82, 0x19,
+                                   0xe0, 0x03, 0x6b, 0x7a, 0x0b, 0x37 };
+
+static unsigned char m[163] = {
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
+    0,    0,    0,    0,    0,    0,    0,    0,    0xbe, 0x07, 0x5f, 0xc5,
+    0x3c, 0x81, 0xf2, 0xd5, 0xcf, 0x14, 0x13, 0x16, 0xeb, 0xeb, 0x0c, 0x7b,
+    0x52, 0x28, 0xc5, 0x2a, 0x4c, 0x62, 0xcb, 0xd4, 0x4b, 0x66, 0x84, 0x9b,
+    0x64, 0x24, 0x4f, 0xfc, 0xe5, 0xec, 0xba, 0xaf, 0x33, 0xbd, 0x75, 0x1a,
+    0x1a, 0xc7, 0x28, 0xd4, 0x5e, 0x6c, 0x61, 0x29, 0x6c, 0xdc, 0x3c, 0x01,
+    0x23, 0x35, 0x61, 0xf4, 0x1d, 0xb6, 0x6c, 0xce, 0x31, 0x4a, 0xdb, 0x31,
+    0x0e, 0x3b, 0xe8, 0x25, 0x0c, 0x46, 0xf0, 0x6d, 0xce, 0xea, 0x3a, 0x7f,
+    0xa1, 0x34, 0x80, 0x57, 0xe2, 0xf6, 0x55, 0x6a, 0xd6, 0xb1, 0x31, 0x8a,
+    0x02, 0x4a, 0x83, 0x8f, 0x21, 0xaf, 0x1f, 0xde, 0x04, 0x89, 0x77, 0xeb,
+    0x48, 0xf5, 0x9f, 0xfd, 0x49, 0x24, 0xca, 0x1c, 0x60, 0x90, 0x2e, 0x52,
+    0xf0, 0xa0, 0x89, 0xbc, 0x76, 0x89, 0x70, 0x40, 0xe0, 0x82, 0xf9, 0x37,
+    0x76, 0x38, 0x48, 0x64, 0x5e, 0x07, 0x05
+};
+
+static unsigned char c[163];
+
+int
+main(void)
 {
     int i;
 
     crypto_stream_xor(c, m, 163, nonce, firstkey);
 
     for (i = 32; i < 163; ++i) {
-        printf(",0x%02x", (unsigned int)c[i]);
+        printf(",0x%02x", (unsigned int) c[i]);
         if (i % 8 == 7)
             printf("\n");
     }
diff --git a/libsodium/test/default/verify1.c b/libsodium/test/default/verify1.c
index d3f7e17..68257c9 100644
--- a/libsodium/test/default/verify1.c
+++ b/libsodium/test/default/verify1.c
@@ -2,35 +2,75 @@
 #define TEST_NAME "verify1"
 #include "cmptest.h"
 
-unsigned char v16[16], v16x[16];
-unsigned char v32[32], v32x[32];
-unsigned char v64[64], v64x[64];
-
-int main(void)
+int
+main(void)
 {
-    randombytes_buf(v16, sizeof v16);
-    randombytes_buf(v32, sizeof v32);
-    randombytes_buf(v64, sizeof v64);
+    unsigned char *v16, *v16x;
+    unsigned char *v32, *v32x;
+    unsigned char *v64, *v64x;
+    uint32_t       r;
+    uint8_t        o;
+    int            i;
 
-    memcpy(v16x, v16, sizeof v16);
-    memcpy(v32x, v32, sizeof v32);
-    memcpy(v64x, v64, sizeof v64);
+    v16  = (unsigned char *) sodium_malloc(16);
+    v16x = (unsigned char *) sodium_malloc(16);
+    v32  = (unsigned char *) sodium_malloc(32);
+    v32x = (unsigned char *) sodium_malloc(32);
+    v64  = (unsigned char *) sodium_malloc(64);
+    v64x = (unsigned char *) sodium_malloc(64);
+    for (i = 0; i < 10000; i++) {
+        randombytes_buf(v16, 16);
+        randombytes_buf(v32, 32);
+        randombytes_buf(v64, 64);
 
-    printf("%d\n", crypto_verify_16(v16, v16x));
-    printf("%d\n", crypto_verify_32(v32, v32x));
-    printf("%d\n", crypto_verify_64(v64, v64x));
+        memcpy(v16x, v16, 16);
+        memcpy(v32x, v32, 32);
+        memcpy(v64x, v64, 64);
 
-    v16x[randombytes_random() & 15U]++;
-    v32x[randombytes_random() & 31U]++;
-    v64x[randombytes_random() & 63U]++;
+        if (crypto_verify_16(v16, v16x) != 0 ||
+            crypto_verify_32(v32, v32x) != 0 ||
+            crypto_verify_64(v64, v64x) != 0 ||
+            sodium_memcmp(v16, v16x, 16) != 0 ||
+            sodium_memcmp(v32, v32x, 32) != 0 ||
+            sodium_memcmp(v64, v64x, 64) != 0) {
+            printf("Failed\n");
+        }
+    }
+    printf("OK\n");
 
-    printf("%d\n", crypto_verify_16(v16, v16x));
-    printf("%d\n", crypto_verify_32(v32, v32x));
-    printf("%d\n", crypto_verify_64(v64, v64x));
+    for (i = 0; i < 100000; i++) {
+        r = randombytes_random();
+        o = (uint8_t) randombytes_random();
+        if (o == 0) {
+            continue;
+        }
+        v16x[r & 15U] ^= o;
+        v32x[r & 31U] ^= o;
+        v64x[r & 63U] ^= o;
+        if (crypto_verify_16(v16, v16x) != -1 ||
+            crypto_verify_32(v32, v32x) != -1 ||
+            crypto_verify_64(v64, v64x) != -1 ||
+            sodium_memcmp(v16, v16x, 16) != -1 ||
+            sodium_memcmp(v32, v32x, 32) != -1 ||
+            sodium_memcmp(v64, v64x, 64) != -1) {
+            printf("Failed\n");
+        }
+        v16x[r & 15U] ^= o;
+        v32x[r & 31U] ^= o;
+        v64x[r & 63U] ^= o;
+    }
+    printf("OK\n");
 
     assert(crypto_verify_16_bytes() == 16U);
     assert(crypto_verify_32_bytes() == 32U);
     assert(crypto_verify_64_bytes() == 64U);
 
+    sodium_free(v16);
+    sodium_free(v16x);
+    sodium_free(v32);
+    sodium_free(v32x);
+    sodium_free(v64);
+    sodium_free(v64x);
+
     return 0;
 }
diff --git a/libsodium/test/default/wintest.bat b/libsodium/test/default/wintest.bat
old mode 100644
new mode 100755
diff --git a/libsodium/test/quirks/quirks.h b/libsodium/test/quirks/quirks.h
index 00caf7c..69fe369 100644
--- a/libsodium/test/quirks/quirks.h
+++ b/libsodium/test/quirks/quirks.h
@@ -1,12 +1,20 @@
 
 #include <stdlib.h>
 
+/* C++Builder defines a "random" macro */
+#undef random
+
 #ifdef __EMSCRIPTEN__
 # define strcmp(s1, s2) xstrcmp(s1, s2)
 
-int
-strcmp(const char *s1, const char *s2) {
-    while (*s1 == *s2++) { if (*s1++ == 0) return 0; }
+static int
+strcmp(const char *s1, const char *s2)
+{
+    while (*s1 == *s2++) {
+        if (*s1++ == 0) {
+            return 0;
+        }
+    }
     return *(unsigned char *) s1 - *(unsigned char *) --s2;
 }
 #endif
